(function(j,u){typeof exports=="object"&&typeof module<"u"?u(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],u):(j=typeof globalThis<"u"?globalThis:j||self,u(j["@tato30/vue-pdf"]={},j.vue))})(this,function(j,u){var bF,pt,v0,DR,Qd,TU,AU,Kl,qV,Vd,ml,kl,XZ,B0,YZ,e0,aF,ut,$V,Ls,P0,IR,SZ,p0,cd,cV,td,tV,A0,ER,Rd,RV,Nd,sd,XU,bd,lc,zs,Uc,ks,Zc,os,nF,yt,dc,Ds,f0,CR,_0,ad,q0,Fc,Is,Wc,Es,Qc,Cs,Vc,$0,cc,lU,lW,wR,il,BZ,UW,Ml,tc,ws,Hl,Nl,Jl,hF,fU,mF,tU,iF,nd,YU,_U,hd,ZW,dW,SU,MF,eZ,BU,Rc,pZ,FW,md,WW,JF,Gl,A,qU,id,QW,VW,cW,tW,RW,NW,sW,bW,aW,nW,hW,mW,iW,MW,uZ,eU,$U,JW,GF,Lt,Nc,xs,sc,js,TF,zt,bc,Os,ac,rs,nc,Ks,GW,xR,TW,jR,XW,OR,YW,rR,SW,KR,Tl,wl,pU,_Z,hc,gs,mc,Hs,BW,gR,ic,vs,Md,NV,eW,HR,lZ,UZ,RU,ZZ,NU,XF,dZ,pW,vR,sU,Dl,YF,Jd,Xl,Gd,SF,BF,Ll,uW,Td,LZ,yW,Xd,FZ,uU,eF,pF,UU,LW,Jc,zW,PR,kW,AR,oW,fR,Gc,Ps,Tc,As,DW,_R,IW,qR,EW,$R,Xc,fs,Yc,_s,Sc,qs,Bc,$s,CW,lN,Yd,sV,Sd,Yl,ec,lb,wW,uF,xW,UN,jW,ZN,Bd,yF,pc,Ub,uc,Zb,yc,db,OW,rW,Lc,Fb,zc,Wb,LF,kt,ed,KW,gW,HW,vW,zF,zZ,q,kF,oF,PW,dN,kc,kZ,WZ,oZ,u0,DF,ot,pd,oc,Il,ud,IF,Dt,QZ,yU,EF,CF,LU,yd,bV,bU,AW,FN,DZ,Ld,zd,xF,fW,WN,VZ,cF,Dc,Qb,Ic,Vb,jF,Ec,Cc,OF,kd,Zl,_W,od,qW,$W,rF,cZ,KF,lQ,UQ,ZQ,Dd,wc,cb,gF,It,dQ,QN,FQ,VN,WQ,QQ,VQ,cQ,tQ,RQ,NQ,cN,sQ,Id,HF,xc,tb,bQ,tN,aQ,nQ,hQ,mQ,iQ,aU,ZU,MQ,vl,vF,jc,Rb,Oc,Nb,rc,sb,PF,Et,AF,Ct,fF,wt,Kc,bb,JQ,RN,gc,ab,GQ,IZ,nU,Hc,nb,_F,xt,vc,hb,Pc,mb,TQ,NN,XQ,qF,zU,tZ,$F,l0,kU,O,Ed,Cd,YQ,SQ,U0,Z0,EZ,BQ,Ac,fc,eQ,sN,F0,wd,RZ,pQ,Pl,uQ,Ql,xd,aV,jd,nV,_c,ib,yQ,LQ,hU,Od,W0,bl,zQ,Q0,kQ,oQ,CZ,V0,DQ,bN,IQ,aN,qc,Mb,NZ,tF,$c,Jb,oU,qZ,c0,EQ,wZ,rd,t0,dU,CQ,wQ,Kd,mU,El,Al,lt,R0,gd,al,N0,DU,xQ,jQ,nN,OQ,hN,Ut,Gb,Zt,Tb,dt,Xb,rQ,mN,Hd,hV,xZ,y0,Ft,Yb,s0,jt,vd,mV,Wt,Sb,Qt,Bb,Vt,eb,ct,pb,Pd,Ad,KQ,gQ,HQ,fd,IU,bZ,FU,_d,qd,$d,lF,UF,jZ,tt,ub,Rt,yb,Nt,Lb,st,zb,vQ,iN,bt,kb,PQ,MN,at,ob,nt,Db,ht,Ib,mt,Eb,it,Cb,aZ,RF,AQ,JN,b0,Ot,a0,rt,OZ,L0,fQ,GN,n0,Kt,Mt,wb,_Q,TN,Jt,xb,Gt,jb,qQ,XN,h0,gt,ZF,iV,Bl,el,rZ,nZ,KZ,m0,EU,dF,CU,iU,$Q,FF,MV,WF,JV,i0,Ht,lV,YN,Tt,Ob,Xt,rb,UV,SN,M0,vt,Yt,Kb,QF,J0,wU,VF,hZ,mZ,iZ,fl,gZ,G0,T0,Cl,D,HZ,St,gb,ZV,BN,dV,eN,FV,pN,X0,Pt,xU,WV,nl,vZ,QV,uN,VV,yN,Bt,Hb;"use strict";var oh=Object.defineProperty;var Dh=(j,u,$)=>u in j?oh(j,u,{enumerable:!0,configurable:!0,writable:!0,value:$}):j[u]=$;var E=(j,u,$)=>(Dh(j,typeof u!="symbol"?u+"":u,$),$),oR=(j,u,$)=>{if(!u.has(j))throw TypeError("Cannot "+$)};var Q=(j,u,$)=>(oR(j,u,"read from private field"),$?$.call(j):u.get(j)),a=(j,u,$)=>{if(u.has(j))throw TypeError("Cannot add the same private member more than once");u instanceof WeakSet?u.add(j):u.set(j,$)},i=(j,u,$,k)=>(oR(j,u,"write to private field"),k?k.call(j,$):u.set(j,$),$),MU=(j,u,$,k)=>({set _(hl){i(j,u,hl,$)},get _(){return Q(j,u,k)}}),m=(j,u,$)=>(oR(j,u,"access private method"),$);var $={};$.d=(R,l)=>{for(var U in l)$.o(l,U)&&!$.o(R,U)&&Object.defineProperty(R,U,{enumerable:!0,get:l[U]})},$.o=(R,l)=>Object.prototype.hasOwnProperty.call(R,l);var k=globalThis.pdfjsLib={};$.d(k,{AbortException:()=>ld,AnnotationEditorLayer:()=>g0,AnnotationEditorParamsType:()=>I,AnnotationEditorType:()=>K,AnnotationEditorUIManager:()=>KU,AnnotationLayer:()=>vn,AnnotationMode:()=>JZ,CMapCompressionType:()=>_t,ColorPicker:()=>vV,DOMSVGFactory:()=>FR,DrawLayer:()=>PV,FeatureTest:()=>xl,GlobalWorkerOptions:()=>gU,ImageKind:()=>GV,InvalidPDFException:()=>zN,MissingPDFException:()=>$Z,OPS:()=>WU,Outliner:()=>GR,PDFDataRangeTransport:()=>bs,PDFDateString:()=>xN,PDFWorker:()=>rV,PasswordResponses:()=>fb,PermissionFlag:()=>Ab,PixelsPerInch:()=>QU,RenderingCancelledException:()=>WR,UnexpectedResponseException:()=>SV,Util:()=>y,VerbosityLevel:()=>TV,XfaLayer:()=>ms,build:()=>en,createValidAbsoluteUrl:()=>la,fetchData:()=>LV,getDocument:()=>hn,getFilenameFromUrl:()=>Ra,getPdfFilenameFromUrl:()=>Na,getXfaPageViewport:()=>sa,isDataScheme:()=>QR,isPdfFile:()=>VR,noContextMenu:()=>jl,normalizeUnicode:()=>Qa,renderTextLayer:()=>ja,setLayerDimensions:()=>Ud,shadow:()=>g,updateTextLayer:()=>Oa,version:()=>Bn});const hl=typeof process=="object"&&process+""=="[object process]"&&!process.versions.nw&&!(process.versions.electron&&process.type&&process.type!=="browser"),LN=[1,0,0,1,0,0],At=[.001,0,0,.001,0,0],vb=1e7,ft=1.35,ql={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,OPLIST:256},JZ={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},Pb="pdfjs_internal_editor_",K={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15},I={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35},Ab={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},ul={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},GV={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},tl={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},z0={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},TV={ERRORS:0,WARNINGS:1,INFOS:5},_t={NONE:0,BINARY:1},WU={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91},fb={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let XV=TV.WARNINGS;function _b(R){Number.isInteger(R)&&(XV=R)}function qb(){return XV}function YV(R){XV>=TV.INFOS&&console.log(`Info: ${R}`)}function x(R){XV>=TV.WARNINGS&&console.log(`Warning: ${R}`)}function _(R){throw new Error(R)}function Rl(R,l){R||_(l)}function $b(R){switch(R==null?void 0:R.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}function la(R,l=null,U=null){if(!R)return null;try{if(U&&typeof R=="string"){if(U.addDefaultProtocol&&R.startsWith("www.")){const d=R.match(/\./g);(d==null?void 0:d.length)>=2&&(R=`http://${R}`)}if(U.tryConvertEncoding)try{R=Wa(R)}catch{}}const Z=l?new URL(R,l):new URL(R);if($b(Z))return Z}catch{}return null}function g(R,l,U,Z=!1){return Object.defineProperty(R,l,{value:U,enumerable:!Z,configurable:!0,writable:!1}),U}const GZ=function(){function l(U,Z){this.constructor===l&&_("Cannot initialize BaseException."),this.message=U,this.name=Z}return l.prototype=new Error,l.constructor=l,l}();class qt extends GZ{constructor(l,U){super(l,"PasswordException"),this.code=U}}class $t extends GZ{constructor(l,U){super(l,"UnknownErrorException"),this.details=U}}class zN extends GZ{constructor(l){super(l,"InvalidPDFException")}}class $Z extends GZ{constructor(l){super(l,"MissingPDFException")}}class SV extends GZ{constructor(l,U){super(l,"UnexpectedResponseException"),this.status=U}}class Ua extends GZ{constructor(l){super(l,"FormatError")}}class ld extends GZ{constructor(l){super(l,"AbortException")}}function kN(R){(typeof R!="object"||(R==null?void 0:R.length)===void 0)&&_("Invalid argument for bytesToString");const l=R.length,U=8192;if(l<U)return String.fromCharCode.apply(null,R);const Z=[];for(let d=0;d<l;d+=U){const F=Math.min(d+U,l),W=R.subarray(d,F);Z.push(String.fromCharCode.apply(null,W))}return Z.join("")}function BV(R){typeof R!="string"&&_("Invalid argument for stringToBytes");const l=R.length,U=new Uint8Array(l);for(let Z=0;Z<l;++Z)U[Z]=R.charCodeAt(Z)&255;return U}function Za(R){return String.fromCharCode(R>>24&255,R>>16&255,R>>8&255,R&255)}function lR(R){const l=Object.create(null);for(const[U,Z]of R)l[U]=Z;return l}function da(){const R=new Uint8Array(4);return R[0]=1,new Uint32Array(R.buffer,0,1)[0]===1}function Fa(){try{return new Function(""),!0}catch{return!1}}class xl{static get isLittleEndian(){return g(this,"isLittleEndian",da())}static get isEvalSupported(){return g(this,"isEvalSupported",Fa())}static get isOffscreenCanvasSupported(){return g(this,"isOffscreenCanvasSupported",typeof OffscreenCanvas<"u")}static get platform(){return typeof navigator<"u"&&typeof(navigator==null?void 0:navigator.platform)=="string"?g(this,"platform",{isMac:navigator.platform.includes("Mac")}):g(this,"platform",{isMac:!1})}static get isCSSRoundSupported(){var l,U;return g(this,"isCSSRoundSupported",(U=(l=globalThis.CSS)==null?void 0:l.supports)==null?void 0:U.call(l,"width: round(1.5px, 1px)"))}}const UR=Array.from(Array(256).keys(),R=>R.toString(16).padStart(2,"0"));class y{static makeHexColor(l,U,Z){return`#${UR[l]}${UR[U]}${UR[Z]}`}static scaleMinMax(l,U){let Z;l[0]?(l[0]<0&&(Z=U[0],U[0]=U[2],U[2]=Z),U[0]*=l[0],U[2]*=l[0],l[3]<0&&(Z=U[1],U[1]=U[3],U[3]=Z),U[1]*=l[3],U[3]*=l[3]):(Z=U[0],U[0]=U[1],U[1]=Z,Z=U[2],U[2]=U[3],U[3]=Z,l[1]<0&&(Z=U[1],U[1]=U[3],U[3]=Z),U[1]*=l[1],U[3]*=l[1],l[2]<0&&(Z=U[0],U[0]=U[2],U[2]=Z),U[0]*=l[2],U[2]*=l[2]),U[0]+=l[4],U[1]+=l[5],U[2]+=l[4],U[3]+=l[5]}static transform(l,U){return[l[0]*U[0]+l[2]*U[1],l[1]*U[0]+l[3]*U[1],l[0]*U[2]+l[2]*U[3],l[1]*U[2]+l[3]*U[3],l[0]*U[4]+l[2]*U[5]+l[4],l[1]*U[4]+l[3]*U[5]+l[5]]}static applyTransform(l,U){const Z=l[0]*U[0]+l[1]*U[2]+U[4],d=l[0]*U[1]+l[1]*U[3]+U[5];return[Z,d]}static applyInverseTransform(l,U){const Z=U[0]*U[3]-U[1]*U[2],d=(l[0]*U[3]-l[1]*U[2]+U[2]*U[5]-U[4]*U[3])/Z,F=(-l[0]*U[1]+l[1]*U[0]+U[4]*U[1]-U[5]*U[0])/Z;return[d,F]}static getAxialAlignedBoundingBox(l,U){const Z=this.applyTransform(l,U),d=this.applyTransform(l.slice(2,4),U),F=this.applyTransform([l[0],l[3]],U),W=this.applyTransform([l[2],l[1]],U);return[Math.min(Z[0],d[0],F[0],W[0]),Math.min(Z[1],d[1],F[1],W[1]),Math.max(Z[0],d[0],F[0],W[0]),Math.max(Z[1],d[1],F[1],W[1])]}static inverseTransform(l){const U=l[0]*l[3]-l[1]*l[2];return[l[3]/U,-l[1]/U,-l[2]/U,l[0]/U,(l[2]*l[5]-l[4]*l[3])/U,(l[4]*l[1]-l[5]*l[0])/U]}static singularValueDecompose2dScale(l){const U=[l[0],l[2],l[1],l[3]],Z=l[0]*U[0]+l[1]*U[2],d=l[0]*U[1]+l[1]*U[3],F=l[2]*U[0]+l[3]*U[2],W=l[2]*U[1]+l[3]*U[3],V=(Z+W)/2,c=Math.sqrt((Z+W)**2-4*(Z*W-F*d))/2,t=V+c||1,N=V-c||1;return[Math.sqrt(t),Math.sqrt(N)]}static normalizeRect(l){const U=l.slice(0);return l[0]>l[2]&&(U[0]=l[2],U[2]=l[0]),l[1]>l[3]&&(U[1]=l[3],U[3]=l[1]),U}static intersect(l,U){const Z=Math.max(Math.min(l[0],l[2]),Math.min(U[0],U[2])),d=Math.min(Math.max(l[0],l[2]),Math.max(U[0],U[2]));if(Z>d)return null;const F=Math.max(Math.min(l[1],l[3]),Math.min(U[1],U[3])),W=Math.min(Math.max(l[1],l[3]),Math.max(U[1],U[3]));return F>W?null:[Z,F,d,W]}static bezierBoundingBox(l,U,Z,d,F,W,V,c,t){return t?(t[0]=Math.min(t[0],l,V),t[1]=Math.min(t[1],U,c),t[2]=Math.max(t[2],l,V),t[3]=Math.max(t[3],U,c)):t=[Math.min(l,V),Math.min(U,c),Math.max(l,V),Math.max(U,c)],m(this,v0,DR).call(this,l,Z,F,V,U,d,W,c,3*(-l+3*(Z-F)+V),6*(l-2*Z+F),3*(Z-l),t),m(this,v0,DR).call(this,l,Z,F,V,U,d,W,c,3*(-U+3*(d-W)+c),6*(U-2*d+W),3*(d-U),t),t}}bF=new WeakSet,pt=function(l,U,Z,d,F,W,V,c,t,N){if(t<=0||t>=1)return;const s=1-t,b=t*t,n=b*t,h=s*(s*(s*l+3*t*U)+3*b*Z)+n*d,M=s*(s*(s*F+3*t*W)+3*b*V)+n*c;N[0]=Math.min(N[0],h),N[1]=Math.min(N[1],M),N[2]=Math.max(N[2],h),N[3]=Math.max(N[3],M)},v0=new WeakSet,DR=function(l,U,Z,d,F,W,V,c,t,N,s,b){if(Math.abs(t)<1e-12){Math.abs(N)>=1e-12&&m(this,bF,pt).call(this,l,U,Z,d,F,W,V,c,-s/N,b);return}const n=N**2-4*s*t;if(n<0)return;const h=Math.sqrt(n),M=2*t;m(this,bF,pt).call(this,l,U,Z,d,F,W,V,c,(-N+h)/M,b),m(this,bF,pt).call(this,l,U,Z,d,F,W,V,c,(-N-h)/M,b)},a(y,bF),a(y,v0);function Wa(R){return decodeURIComponent(escape(R))}let ZR=null,oN=null;function Qa(R){return ZR||(ZR=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,oN=new Map([["ﬅ","ſt"]])),R.replaceAll(ZR,(l,U,Z)=>U?U.normalize("NFKC"):oN.get(Z))}function Va(){if(typeof crypto<"u"&&typeof(crypto==null?void 0:crypto.randomUUID)=="function")return crypto.randomUUID();const R=new Uint8Array(32);if(typeof crypto<"u"&&typeof(crypto==null?void 0:crypto.getRandomValues)=="function")crypto.getRandomValues(R);else for(let l=0;l<32;l++)R[l]=Math.floor(Math.random()*255);return kN(R)}const DN="pdfjs_internal_id_",jU={BEZIER_CURVE_TO:0,MOVE_TO:1,LINE_TO:2,QUADRATIC_CURVE_TO:3,RESTORE:4,SAVE:5,SCALE:6,TRANSFORM:7,TRANSLATE:8};class eV{constructor(){this.constructor===eV&&_("Cannot initialize BaseFilterFactory.")}addFilter(l){return"none"}addHCMFilter(l,U){return"none"}addAlphaFilter(l){return"none"}addLuminosityFilter(l){return"none"}addHighlightHCMFilter(l,U,Z,d,F){return"none"}destroy(l=!1){}}class pV{constructor(){this.constructor===pV&&_("Cannot initialize BaseCanvasFactory.")}create(l,U){if(l<=0||U<=0)throw new Error("Invalid canvas size");const Z=this._createCanvas(l,U);return{canvas:Z,context:Z.getContext("2d")}}reset(l,U,Z){if(!l.canvas)throw new Error("Canvas is not specified");if(U<=0||Z<=0)throw new Error("Invalid canvas size");l.canvas.width=U,l.canvas.height=Z}destroy(l){if(!l.canvas)throw new Error("Canvas is not specified");l.canvas.width=0,l.canvas.height=0,l.canvas=null,l.context=null}_createCanvas(l,U){_("Abstract method `_createCanvas` called.")}}class uV{constructor({baseUrl:l=null,isCompressed:U=!0}){this.constructor===uV&&_("Cannot initialize BaseCMapReaderFactory."),this.baseUrl=l,this.isCompressed=U}async fetch({name:l}){if(!this.baseUrl)throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');if(!l)throw new Error("CMap name must be specified.");const U=this.baseUrl+l+(this.isCompressed?".bcmap":""),Z=this.isCompressed?_t.BINARY:_t.NONE;return this._fetchData(U,Z).catch(d=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${U}`)})}_fetchData(l,U){_("Abstract method `_fetchData` called.")}}class yV{constructor({baseUrl:l=null}){this.constructor===yV&&_("Cannot initialize BaseStandardFontDataFactory."),this.baseUrl=l}async fetch({filename:l}){if(!this.baseUrl)throw new Error('The standard font "baseUrl" parameter must be specified, ensure that the "standardFontDataUrl" API parameter is provided.');if(!l)throw new Error("Font filename must be specified.");const U=`${this.baseUrl}${l}`;return this._fetchData(U).catch(Z=>{throw new Error(`Unable to load font data at: ${U}`)})}_fetchData(l){_("Abstract method `_fetchData` called.")}}class dR{constructor(){this.constructor===dR&&_("Cannot initialize BaseSVGFactory.")}create(l,U,Z=!1){if(l<=0||U<=0)throw new Error("Invalid SVG dimensions");const d=this._createSVG("svg:svg");return d.setAttribute("version","1.1"),Z||(d.setAttribute("width",`${l}px`),d.setAttribute("height",`${U}px`)),d.setAttribute("preserveAspectRatio","none"),d.setAttribute("viewBox",`0 0 ${l} ${U}`),d}createElement(l){if(typeof l!="string")throw new Error("Invalid SVG element type");return this._createSVG(l)}_createSVG(l){_("Abstract method `_createSVG` called.")}}const OU="http://www.w3.org/2000/svg",_V=class{};let QU=_V;E(QU,"CSS",96),E(QU,"PDF",72),E(QU,"PDF_TO_CSS_UNITS",_V.CSS/_V.PDF);class ca extends eV{constructor({docId:U,ownerDocument:Z=globalThis.document}={}){super();a(this,ml);a(this,XZ);a(this,YZ);a(this,aF);a(this,$V);a(this,P0);a(this,SZ);a(this,cd);a(this,td);a(this,A0);a(this,Rd);a(this,Qd,void 0);a(this,TU,void 0);a(this,AU,void 0);a(this,Kl,void 0);a(this,qV,void 0);a(this,Vd,0);i(this,AU,U),i(this,Kl,Z)}addFilter(U){if(!U)return"none";let Z=Q(this,ml,kl).get(U);if(Z)return Z;const[d,F,W]=m(this,aF,ut).call(this,U),V=U.length===1?d:`${d}${F}${W}`;if(Z=Q(this,ml,kl).get(V),Z)return Q(this,ml,kl).set(U,Z),Z;const c=`g_${Q(this,AU)}_transfer_map_${MU(this,Vd)._++}`,t=`url(#${c})`;Q(this,ml,kl).set(U,t),Q(this,ml,kl).set(V,t);const N=m(this,SZ,p0).call(this,c);return m(this,td,tV).call(this,d,F,W,N),t}addHCMFilter(U,Z){var h;const d=`${U}-${Z}`,F="base";let W=Q(this,XZ,B0).get(F);if((W==null?void 0:W.key)===d||(W?((h=W.filter)==null||h.remove(),W.key=d,W.url="none",W.filter=null):(W={key:d,url:"none",filter:null},Q(this,XZ,B0).set(F,W)),!U||!Z))return W.url;const V=m(this,Rd,RV).call(this,U);U=y.makeHexColor(...V);const c=m(this,Rd,RV).call(this,Z);if(Z=y.makeHexColor(...c),Q(this,YZ,e0).style.color="",U==="#000000"&&Z==="#ffffff"||U===Z)return W.url;const t=new Array(256);for(let M=0;M<=255;M++){const G=M/255;t[M]=G<=.03928?G/12.92:((G+.055)/1.055)**2.4}const N=t.join(","),s=`g_${Q(this,AU)}_hcm_filter`,b=W.filter=m(this,SZ,p0).call(this,s);m(this,td,tV).call(this,N,N,N,b),m(this,P0,IR).call(this,b);const n=(M,G)=>{const J=V[M]/255,T=c[M]/255,X=new Array(G+1);for(let S=0;S<=G;S++)X[S]=J+S/G*(T-J);return X.join(",")};return m(this,td,tV).call(this,n(0,5),n(1,5),n(2,5),b),W.url=`url(#${s})`,W.url}addAlphaFilter(U){let Z=Q(this,ml,kl).get(U);if(Z)return Z;const[d]=m(this,aF,ut).call(this,[U]),F=`alpha_${d}`;if(Z=Q(this,ml,kl).get(F),Z)return Q(this,ml,kl).set(U,Z),Z;const W=`g_${Q(this,AU)}_alpha_map_${MU(this,Vd)._++}`,V=`url(#${W})`;Q(this,ml,kl).set(U,V),Q(this,ml,kl).set(F,V);const c=m(this,SZ,p0).call(this,W);return m(this,A0,ER).call(this,d,c),V}addLuminosityFilter(U){let Z=Q(this,ml,kl).get(U||"luminosity");if(Z)return Z;let d,F;if(U?([d]=m(this,aF,ut).call(this,[U]),F=`luminosity_${d}`):F="luminosity",Z=Q(this,ml,kl).get(F),Z)return Q(this,ml,kl).set(U,Z),Z;const W=`g_${Q(this,AU)}_luminosity_map_${MU(this,Vd)._++}`,V=`url(#${W})`;Q(this,ml,kl).set(U,V),Q(this,ml,kl).set(F,V);const c=m(this,SZ,p0).call(this,W);return m(this,$V,Ls).call(this,c),U&&m(this,A0,ER).call(this,d,c),V}addHighlightHCMFilter(U,Z,d,F,W){var T;const V=`${Z}-${d}-${F}-${W}`;let c=Q(this,XZ,B0).get(U);if((c==null?void 0:c.key)===V||(c?((T=c.filter)==null||T.remove(),c.key=V,c.url="none",c.filter=null):(c={key:V,url:"none",filter:null},Q(this,XZ,B0).set(U,c)),!Z||!d))return c.url;const[t,N]=[Z,d].map(m(this,Rd,RV).bind(this));let s=Math.round(.2126*t[0]+.7152*t[1]+.0722*t[2]),b=Math.round(.2126*N[0]+.7152*N[1]+.0722*N[2]),[n,h]=[F,W].map(m(this,Rd,RV).bind(this));b<s&&([s,b,n,h]=[b,s,h,n]),Q(this,YZ,e0).style.color="";const M=(X,S,e)=>{const Y=new Array(256),B=(b-s)/e,p=X/255,z=(S-X)/(255*e);let C=0;for(let L=0;L<=e;L++){const v=Math.round(s+L*B),r=p+L*z;for(let P=C;P<=v;P++)Y[P]=r;C=v+1}for(let L=C;L<256;L++)Y[L]=Y[C-1];return Y.join(",")},G=`g_${Q(this,AU)}_hcm_${U}_filter`,J=c.filter=m(this,SZ,p0).call(this,G);return m(this,P0,IR).call(this,J),m(this,td,tV).call(this,M(n[0],h[0],5),M(n[1],h[1],5),M(n[2],h[2],5),J),c.url=`url(#${G})`,c.url}destroy(U=!1){U&&Q(this,XZ,B0).size!==0||(Q(this,TU)&&(Q(this,TU).parentNode.parentNode.remove(),i(this,TU,null)),Q(this,Qd)&&(Q(this,Qd).clear(),i(this,Qd,null)),i(this,Vd,0))}}Qd=new WeakMap,TU=new WeakMap,AU=new WeakMap,Kl=new WeakMap,qV=new WeakMap,Vd=new WeakMap,ml=new WeakSet,kl=function(){return Q(this,Qd)||i(this,Qd,new Map)},XZ=new WeakSet,B0=function(){return Q(this,qV)||i(this,qV,new Map)},YZ=new WeakSet,e0=function(){if(!Q(this,TU)){const U=Q(this,Kl).createElement("div"),{style:Z}=U;Z.visibility="hidden",Z.contain="strict",Z.width=Z.height=0,Z.position="absolute",Z.top=Z.left=0,Z.zIndex=-1;const d=Q(this,Kl).createElementNS(OU,"svg");d.setAttribute("width",0),d.setAttribute("height",0),i(this,TU,Q(this,Kl).createElementNS(OU,"defs")),U.append(d),d.append(Q(this,TU)),Q(this,Kl).body.append(U)}return Q(this,TU)},aF=new WeakSet,ut=function(U){if(U.length===1){const t=U[0],N=new Array(256);for(let b=0;b<256;b++)N[b]=t[b]/255;const s=N.join(",");return[s,s,s]}const[Z,d,F]=U,W=new Array(256),V=new Array(256),c=new Array(256);for(let t=0;t<256;t++)W[t]=Z[t]/255,V[t]=d[t]/255,c[t]=F[t]/255;return[W.join(","),V.join(","),c.join(",")]},$V=new WeakSet,Ls=function(U){const Z=Q(this,Kl).createElementNS(OU,"feColorMatrix");Z.setAttribute("type","matrix"),Z.setAttribute("values","0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0"),U.append(Z)},P0=new WeakSet,IR=function(U){const Z=Q(this,Kl).createElementNS(OU,"feColorMatrix");Z.setAttribute("type","matrix"),Z.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),U.append(Z)},SZ=new WeakSet,p0=function(U){const Z=Q(this,Kl).createElementNS(OU,"filter");return Z.setAttribute("color-interpolation-filters","sRGB"),Z.setAttribute("id",U),Q(this,YZ,e0).append(Z),Z},cd=new WeakSet,cV=function(U,Z,d){const F=Q(this,Kl).createElementNS(OU,Z);F.setAttribute("type","discrete"),F.setAttribute("tableValues",d),U.append(F)},td=new WeakSet,tV=function(U,Z,d,F){const W=Q(this,Kl).createElementNS(OU,"feComponentTransfer");F.append(W),m(this,cd,cV).call(this,W,"feFuncR",U),m(this,cd,cV).call(this,W,"feFuncG",Z),m(this,cd,cV).call(this,W,"feFuncB",d)},A0=new WeakSet,ER=function(U,Z){const d=Q(this,Kl).createElementNS(OU,"feComponentTransfer");Z.append(d),m(this,cd,cV).call(this,d,"feFuncA",U)},Rd=new WeakSet,RV=function(U){return Q(this,YZ,e0).style.color=U,cR(getComputedStyle(Q(this,YZ,e0)).getPropertyValue("color"))};class ta extends pV{constructor({ownerDocument:l=globalThis.document}={}){super(),this._document=l}_createCanvas(l,U){const Z=this._document.createElement("canvas");return Z.width=l,Z.height=U,Z}}async function LV(R,l="text"){if(o0(R,document.baseURI)){const U=await fetch(R);if(!U.ok)throw new Error(U.statusText);switch(l){case"arraybuffer":return U.arrayBuffer();case"blob":return U.blob();case"json":return U.json()}return U.text()}return new Promise((U,Z)=>{const d=new XMLHttpRequest;d.open("GET",R,!0),d.responseType=l,d.onreadystatechange=()=>{if(d.readyState===XMLHttpRequest.DONE){if(d.status===200||d.status===0){switch(l){case"arraybuffer":case"blob":case"json":U(d.response);return}U(d.responseText);return}Z(new Error(d.statusText))}},d.send(null)})}class IN extends uV{_fetchData(l,U){return LV(l,this.isCompressed?"arraybuffer":"text").then(Z=>({cMapData:Z instanceof ArrayBuffer?new Uint8Array(Z):BV(Z),compressionType:U}))}}class EN extends yV{_fetchData(l){return LV(l,"arraybuffer").then(U=>new Uint8Array(U))}}class FR extends dR{_createSVG(l){return document.createElementNS(OU,l)}}class k0{constructor({viewBox:l,scale:U,rotation:Z,offsetX:d=0,offsetY:F=0,dontFlip:W=!1}){this.viewBox=l,this.scale=U,this.rotation=Z,this.offsetX=d,this.offsetY=F;const V=(l[2]+l[0])/2,c=(l[3]+l[1])/2;let t,N,s,b;switch(Z%=360,Z<0&&(Z+=360),Z){case 180:t=-1,N=0,s=0,b=1;break;case 90:t=0,N=1,s=1,b=0;break;case 270:t=0,N=-1,s=-1,b=0;break;case 0:t=1,N=0,s=0,b=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}W&&(s=-s,b=-b);let n,h,M,G;t===0?(n=Math.abs(c-l[1])*U+d,h=Math.abs(V-l[0])*U+F,M=(l[3]-l[1])*U,G=(l[2]-l[0])*U):(n=Math.abs(V-l[0])*U+d,h=Math.abs(c-l[1])*U+F,M=(l[2]-l[0])*U,G=(l[3]-l[1])*U),this.transform=[t*U,N*U,s*U,b*U,n-t*U*V-s*U*c,h-N*U*V-b*U*c],this.width=M,this.height=G}get rawDims(){const{viewBox:l}=this;return g(this,"rawDims",{pageWidth:l[2]-l[0],pageHeight:l[3]-l[1],pageX:l[0],pageY:l[1]})}clone({scale:l=this.scale,rotation:U=this.rotation,offsetX:Z=this.offsetX,offsetY:d=this.offsetY,dontFlip:F=!1}={}){return new k0({viewBox:this.viewBox.slice(),scale:l,rotation:U,offsetX:Z,offsetY:d,dontFlip:F})}convertToViewportPoint(l,U){return y.applyTransform([l,U],this.transform)}convertToViewportRectangle(l){const U=y.applyTransform([l[0],l[1]],this.transform),Z=y.applyTransform([l[2],l[3]],this.transform);return[U[0],U[1],Z[0],Z[1]]}convertToPdfPoint(l,U){return y.applyInverseTransform([l,U],this.transform)}}class WR extends GZ{constructor(l,U=0){super(l,"RenderingCancelledException"),this.extraDelay=U}}function QR(R){const l=R.length;let U=0;for(;U<l&&R[U].trim()==="";)U++;return R.substring(U,U+5).toLowerCase()==="data:"}function VR(R){return typeof R=="string"&&/\.pdf$/i.test(R)}function Ra(R){return[R]=R.split(/[#?]/,1),R.substring(R.lastIndexOf("/")+1)}function Na(R,l="document.pdf"){if(typeof R!="string")return l;if(QR(R))return x('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),l;const U=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/,Z=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,d=U.exec(R);let F=Z.exec(d[1])||Z.exec(d[2])||Z.exec(d[3]);if(F&&(F=F[0],F.includes("%")))try{F=Z.exec(decodeURIComponent(F))[0]}catch{}return F||l}class CN{constructor(){E(this,"started",Object.create(null));E(this,"times",[])}time(l){l in this.started&&x(`Timer is already running for ${l}`),this.started[l]=Date.now()}timeEnd(l){l in this.started||x(`Timer has not been started for ${l}`),this.times.push({name:l,start:this.started[l],end:Date.now()}),delete this.started[l]}toString(){const l=[];let U=0;for(const{name:Z}of this.times)U=Math.max(Z.length,U);for(const{name:Z,start:d,end:F}of this.times)l.push(`${Z.padEnd(U)} ${F-d}ms
`);return l.join("")}}function o0(R,l){try{const{protocol:U}=l?new URL(R,l):new URL(R);return U==="http:"||U==="https:"}catch{return!1}}function jl(R){R.preventDefault()}let wN;class xN{static toDateObject(l){if(!l||typeof l!="string")return null;wN||(wN=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));const U=wN.exec(l);if(!U)return null;const Z=parseInt(U[1],10);let d=parseInt(U[2],10);d=d>=1&&d<=12?d-1:0;let F=parseInt(U[3],10);F=F>=1&&F<=31?F:1;let W=parseInt(U[4],10);W=W>=0&&W<=23?W:0;let V=parseInt(U[5],10);V=V>=0&&V<=59?V:0;let c=parseInt(U[6],10);c=c>=0&&c<=59?c:0;const t=U[7]||"Z";let N=parseInt(U[8],10);N=N>=0&&N<=23?N:0;let s=parseInt(U[9],10)||0;return s=s>=0&&s<=59?s:0,t==="-"?(W+=N,V+=s):t==="+"&&(W-=N,V-=s),new Date(Date.UTC(Z,d,F,W,V,c))}}function sa(R,{scale:l=1,rotation:U=0}){const{width:Z,height:d}=R.attributes.style,F=[0,0,parseInt(Z),parseInt(d)];return new k0({viewBox:F,scale:l,rotation:U})}function cR(R){if(R.startsWith("#")){const l=parseInt(R.slice(1),16);return[(l&16711680)>>16,(l&65280)>>8,l&255]}return R.startsWith("rgb(")?R.slice(4,-1).split(",").map(l=>parseInt(l)):R.startsWith("rgba(")?R.slice(5,-1).split(",").map(l=>parseInt(l)).slice(0,3):(x(`Not a valid color format: "${R}"`),[0,0,0])}function ba(R){const l=document.createElement("span");l.style.visibility="hidden",document.body.append(l);for(const U of R.keys()){l.style.color=U;const Z=window.getComputedStyle(l).color;R.set(U,cR(Z))}l.remove()}function ll(R){const{a:l,b:U,c:Z,d,e:F,f:W}=R.getTransform();return[l,U,Z,d,F,W]}function rU(R){const{a:l,b:U,c:Z,d,e:F,f:W}=R.getTransform().invertSelf();return[l,U,Z,d,F,W]}function Ud(R,l,U=!1,Z=!0){if(l instanceof k0){const{pageWidth:d,pageHeight:F}=l.rawDims,{style:W}=R,V=xl.isCSSRoundSupported,c=`var(--scale-factor) * ${d}px`,t=`var(--scale-factor) * ${F}px`,N=V?`round(${c}, 1px)`:`calc(${c})`,s=V?`round(${t}, 1px)`:`calc(${t})`;!U||l.rotation%180===0?(W.width=N,W.height=s):(W.width=s,W.height=N)}Z&&R.setAttribute("data-main-rotation",l.rotation)}const YR=class{constructor(l){a(this,Uc);a(this,Zc);a(this,nF);a(this,dc);a(this,f0);a(this,Nd,null);a(this,sd,null);a(this,XU,void 0);a(this,bd,null);i(this,XU,l)}render(){const l=i(this,Nd,document.createElement("div"));l.className="editToolbar",l.setAttribute("role","toolbar"),l.addEventListener("contextmenu",jl),l.addEventListener("pointerdown",m(YR,lc,zs));const U=i(this,bd,document.createElement("div"));U.className="buttons",l.append(U);const Z=Q(this,XU).toolbarPosition;if(Z){const{style:d}=l,F=Q(this,XU)._uiManager.direction==="ltr"?1-Z[0]:Z[0];d.insetInlineEnd=`${100*F}%`,d.top=`calc(${100*Z[1]}% + var(--editor-toolbar-vert-offset))`}return m(this,dc,Ds).call(this),l}hide(){var l;Q(this,Nd).classList.add("hidden"),(l=Q(this,sd))==null||l.hideDropdown()}show(){Q(this,Nd).classList.remove("hidden")}addAltTextButton(l){m(this,nF,yt).call(this,l),Q(this,bd).prepend(l,Q(this,f0,CR))}addColorPicker(l){i(this,sd,l);const U=l.renderButton();m(this,nF,yt).call(this,U),Q(this,bd).prepend(U,Q(this,f0,CR))}remove(){var l;Q(this,Nd).remove(),(l=Q(this,sd))==null||l.destroy(),i(this,sd,null)}};let zV=YR;Nd=new WeakMap,sd=new WeakMap,XU=new WeakMap,bd=new WeakMap,lc=new WeakSet,zs=function(l){l.stopPropagation()},Uc=new WeakSet,ks=function(l){Q(this,XU)._focusEventsAllowed=!1,l.preventDefault(),l.stopPropagation()},Zc=new WeakSet,os=function(l){Q(this,XU)._focusEventsAllowed=!0,l.preventDefault(),l.stopPropagation()},nF=new WeakSet,yt=function(l){l.addEventListener("focusin",m(this,Uc,ks).bind(this),{capture:!0}),l.addEventListener("focusout",m(this,Zc,os).bind(this),{capture:!0}),l.addEventListener("contextmenu",jl)},dc=new WeakSet,Ds=function(){const l=document.createElement("button");l.className="delete",l.tabIndex=0,l.setAttribute("data-l10n-id",`pdfjs-editor-remove-${Q(this,XU).editorType}-button`),m(this,nF,yt).call(this,l),l.addEventListener("click",U=>{Q(this,XU)._uiManager.delete()}),Q(this,bd).append(l)},f0=new WeakSet,CR=function(){const l=document.createElement("div");return l.className="divider",l},a(zV,lc);class aa{constructor(l){a(this,Fc);a(this,Wc);a(this,Qc);a(this,_0,null);a(this,ad,null);a(this,q0,void 0);i(this,q0,l)}show(l,U,Z){const[d,F]=m(this,Wc,Es).call(this,U,Z),{style:W}=Q(this,ad)||i(this,ad,m(this,Fc,Is).call(this));l.append(Q(this,ad)),W.insetInlineEnd=`${100*d}%`,W.top=`calc(${100*F}% + var(--editor-toolbar-vert-offset))`}hide(){Q(this,ad).remove()}}_0=new WeakMap,ad=new WeakMap,q0=new WeakMap,Fc=new WeakSet,Is=function(){const l=i(this,ad,document.createElement("div"));l.className="editToolbar",l.setAttribute("role","toolbar"),l.addEventListener("contextmenu",jl);const U=i(this,_0,document.createElement("div"));return U.className="buttons",l.append(U),m(this,Qc,Cs).call(this),l},Wc=new WeakSet,Es=function(l,U){let Z=0,d=0;for(const F of l){const W=F.y+F.height;if(W<Z)continue;const V=F.x+(U?F.width:0);if(W>Z){d=V,Z=W;continue}U?V>d&&(d=V):V<d&&(d=V)}return[U?1-d:d,Z]},Qc=new WeakSet,Cs=function(){const l=document.createElement("button");l.className="highlightButton",l.tabIndex=0,l.setAttribute("data-l10n-id","pdfjs-highlight-floating-button1");const U=document.createElement("span");l.append(U),U.className="visuallyHidden",U.setAttribute("data-l10n-id","pdfjs-highlight-floating-button-label"),l.addEventListener("contextmenu",jl),l.addEventListener("click",()=>{Q(this,q0).highlightSelection("floating_button")}),Q(this,_0).append(l)};function kV(R,l,U){for(const Z of U)l.addEventListener(Z,R[Z].bind(R))}function na(R){return Math.round(Math.min(255,Math.max(1,255*R))).toString(16).padStart(2,"0")}class ha{constructor(){a(this,Vc,0)}get id(){return`${Pb}${MU(this,Vc)._++}`}}Vc=new WeakMap;const SR=class{constructor(){a(this,lW);a(this,$0,Va());a(this,cc,0);a(this,lU,null)}static get _isSVGFittingCanvas(){const l='data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>',Z=new OffscreenCanvas(1,3).getContext("2d"),d=new Image;d.src=l;const F=d.decode().then(()=>(Z.drawImage(d,0,0,1,1,0,0,1,3),new Uint32Array(Z.getImageData(0,0,1,1).data.buffer)[0]===0));return g(this,"_isSVGFittingCanvas",F)}async getFromFile(l){const{lastModified:U,name:Z,size:d,type:F}=l;return m(this,lW,wR).call(this,`${U}_${Z}_${d}_${F}`,l)}async getFromUrl(l){return m(this,lW,wR).call(this,l,l)}async getFromId(l){Q(this,lU)||i(this,lU,new Map);const U=Q(this,lU).get(l);return U?U.bitmap?(U.refCounter+=1,U):U.file?this.getFromFile(U.file):this.getFromUrl(U.url):null}getSvgUrl(l){const U=Q(this,lU).get(l);return U!=null&&U.isSvg?U.svgUrl:null}deleteId(l){Q(this,lU)||i(this,lU,new Map);const U=Q(this,lU).get(l);U&&(U.refCounter-=1,U.refCounter===0&&(U.bitmap=null))}isValidId(l){return l.startsWith(`image_${Q(this,$0)}_`)}};let tR=SR;$0=new WeakMap,cc=new WeakMap,lU=new WeakMap,lW=new WeakSet,wR=async function(l,U){Q(this,lU)||i(this,lU,new Map);let Z=Q(this,lU).get(l);if(Z===null)return null;if(Z!=null&&Z.bitmap)return Z.refCounter+=1,Z;try{Z||(Z={bitmap:null,id:`image_${Q(this,$0)}_${MU(this,cc)._++}`,refCounter:0,isSvg:!1});let d;if(typeof U=="string"?(Z.url=U,d=await LV(U,"blob")):d=Z.file=U,d.type==="image/svg+xml"){const F=SR._isSVGFittingCanvas,W=new FileReader,V=new Image,c=new Promise((t,N)=>{V.onload=()=>{Z.bitmap=V,Z.isSvg=!0,t()},W.onload=async()=>{const s=Z.svgUrl=W.result;V.src=await F?`${s}#svgView(preserveAspectRatio(none))`:s},V.onerror=W.onerror=N});W.readAsDataURL(d),await c}else Z.bitmap=await createImageBitmap(d);Z.refCounter=1}catch(d){console.error(d),Z=null}return Q(this,lU).set(l,Z),Z&&Q(this,lU).set(Z.id,Z),Z};class ma{constructor(l=128){a(this,il,[]);a(this,BZ,!1);a(this,UW,void 0);a(this,Ml,-1);i(this,UW,l)}add({cmd:l,undo:U,post:Z,mustExec:d,type:F=NaN,overwriteIfSameType:W=!1,keepUndo:V=!1}){if(d&&l(),Q(this,BZ))return;const c={cmd:l,undo:U,post:Z,type:F};if(Q(this,Ml)===-1){Q(this,il).length>0&&(Q(this,il).length=0),i(this,Ml,0),Q(this,il).push(c);return}if(W&&Q(this,il)[Q(this,Ml)].type===F){V&&(c.undo=Q(this,il)[Q(this,Ml)].undo),Q(this,il)[Q(this,Ml)]=c;return}const t=Q(this,Ml)+1;t===Q(this,UW)?Q(this,il).splice(0,1):(i(this,Ml,t),t<Q(this,il).length&&Q(this,il).splice(t)),Q(this,il).push(c)}undo(){if(Q(this,Ml)===-1)return;i(this,BZ,!0);const{undo:l,post:U}=Q(this,il)[Q(this,Ml)];l(),U==null||U(),i(this,BZ,!1),i(this,Ml,Q(this,Ml)-1)}redo(){if(Q(this,Ml)<Q(this,il).length-1){i(this,Ml,Q(this,Ml)+1),i(this,BZ,!0);const{cmd:l,post:U}=Q(this,il)[Q(this,Ml)];l(),U==null||U(),i(this,BZ,!1)}}hasSomethingToUndo(){return Q(this,Ml)!==-1}hasSomethingToRedo(){return Q(this,Ml)<Q(this,il).length-1}destroy(){i(this,il,null)}}il=new WeakMap,BZ=new WeakMap,UW=new WeakMap,Ml=new WeakMap;class D0{constructor(l){a(this,tc);this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:U}=xl.platform;for(const[Z,d,F={}]of l)for(const W of Z){const V=W.startsWith("mac+");U&&V?(this.callbacks.set(W.slice(4),{callback:d,options:F}),this.allKeys.add(W.split("+").at(-1))):!U&&!V&&(this.callbacks.set(W,{callback:d,options:F}),this.allKeys.add(W.split("+").at(-1)))}}exec(l,U){if(!this.allKeys.has(U.key))return;const Z=this.callbacks.get(m(this,tc,ws).call(this,U));if(!Z)return;const{callback:d,options:{bubbles:F=!1,args:W=[],checker:V=null}}=Z;V&&!V(l,U)||(d.bind(l,...W,U)(),F||(U.stopPropagation(),U.preventDefault()))}}tc=new WeakSet,ws=function(l){l.altKey&&this.buffer.push("alt"),l.ctrlKey&&this.buffer.push("ctrl"),l.metaKey&&this.buffer.push("meta"),l.shiftKey&&this.buffer.push("shift"),this.buffer.push(l.key);const U=this.buffer.join("+");return this.buffer.length=0,U};const BR=class{get _colors(){const l=new Map([["CanvasText",null],["Canvas",null]]);return ba(l),g(this,"_colors",l)}convert(l){const U=cR(l);if(!window.matchMedia("(forced-colors: active)").matches)return U;for(const[Z,d]of this._colors)if(d.every((F,W)=>F===U[W]))return BR._colorsMapping.get(Z);return U}getHexCode(l){const U=this._colors.get(l);return U?y.makeHexColor(...U):l}};let oV=BR;E(oV,"_colorsMapping",new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]));const Mc=class{constructor(l,U,Z,d,F,W,V,c,t){a(this,GF);a(this,Nc);a(this,sc);a(this,TF);a(this,bc);a(this,ac);a(this,nc);a(this,GW);a(this,TW);a(this,XW);a(this,YW);a(this,SW);a(this,Tl);a(this,pU);a(this,hc);a(this,mc);a(this,BW);a(this,ic);a(this,Md);a(this,eW);a(this,Hl,null);a(this,Nl,new Map);a(this,Jl,new Map);a(this,hF,null);a(this,fU,null);a(this,mF,null);a(this,tU,new ma);a(this,iF,0);a(this,nd,new Set);a(this,YU,null);a(this,_U,null);a(this,hd,new Set);a(this,ZW,!1);a(this,dW,null);a(this,SU,null);a(this,MF,null);a(this,eZ,!1);a(this,BU,null);a(this,Rc,new ha);a(this,pZ,!1);a(this,FW,!1);a(this,md,null);a(this,WW,null);a(this,JF,null);a(this,Gl,K.NONE);a(this,A,new Set);a(this,qU,null);a(this,id,null);a(this,QW,null);a(this,VW,this.blur.bind(this));a(this,cW,this.focus.bind(this));a(this,tW,this.copy.bind(this));a(this,RW,this.cut.bind(this));a(this,NW,this.paste.bind(this));a(this,sW,this.keydown.bind(this));a(this,bW,this.keyup.bind(this));a(this,aW,this.onEditingAction.bind(this));a(this,nW,this.onPageChanging.bind(this));a(this,hW,this.onScaleChanging.bind(this));a(this,mW,m(this,sc,js).bind(this));a(this,iW,this.onRotationChanging.bind(this));a(this,MW,{isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1,hasSelectedText:!1});a(this,uZ,[0,0]);a(this,eU,null);a(this,$U,null);a(this,JW,null);i(this,$U,l),i(this,JW,U),i(this,hF,Z),this._eventBus=d,this._eventBus._on("editingaction",Q(this,aW)),this._eventBus._on("pagechanging",Q(this,nW)),this._eventBus._on("scalechanging",Q(this,hW)),this._eventBus._on("rotationchanging",Q(this,iW)),m(this,bc,Os).call(this),m(this,TW,jR).call(this),i(this,fU,F.annotationStorage),i(this,dW,F.filterFactory),i(this,id,W),i(this,MF,V||null),i(this,ZW,c),i(this,JF,t||null),this.viewParameters={realScale:QU.PDF_TO_CSS_UNITS,rotation:0},this.isShiftKeyDown=!1}static get _keyboardManager(){const l=Mc.prototype,U=W=>Q(W,$U).contains(document.activeElement)&&document.activeElement.tagName!=="BUTTON"&&W.hasSomethingToControl(),Z=(W,{target:V})=>{if(V instanceof HTMLInputElement){const{type:c}=V;return c!=="text"&&c!=="number"}return!0},d=this.TRANSLATE_SMALL,F=this.TRANSLATE_BIG;return g(this,"_keyboardManager",new D0([[["ctrl+a","mac+meta+a"],l.selectAll,{checker:Z}],[["ctrl+z","mac+meta+z"],l.undo,{checker:Z}],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],l.redo,{checker:Z}],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],l.delete,{checker:Z}],[["Enter","mac+Enter"],l.addNewEditorFromKeyboard,{checker:(W,{target:V})=>!(V instanceof HTMLButtonElement)&&Q(W,$U).contains(V)&&!W.isEnterHandled}],[[" ","mac+ "],l.addNewEditorFromKeyboard,{checker:(W,{target:V})=>!(V instanceof HTMLButtonElement)&&Q(W,$U).contains(document.activeElement)}],[["Escape","mac+Escape"],l.unselectAll],[["ArrowLeft","mac+ArrowLeft"],l.translateSelectedEditors,{args:[-d,0],checker:U}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l.translateSelectedEditors,{args:[-F,0],checker:U}],[["ArrowRight","mac+ArrowRight"],l.translateSelectedEditors,{args:[d,0],checker:U}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l.translateSelectedEditors,{args:[F,0],checker:U}],[["ArrowUp","mac+ArrowUp"],l.translateSelectedEditors,{args:[0,-d],checker:U}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l.translateSelectedEditors,{args:[0,-F],checker:U}],[["ArrowDown","mac+ArrowDown"],l.translateSelectedEditors,{args:[0,d],checker:U}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l.translateSelectedEditors,{args:[0,F],checker:U}]]))}destroy(){var l,U;m(this,XW,OR).call(this),m(this,GW,xR).call(this),this._eventBus._off("editingaction",Q(this,aW)),this._eventBus._off("pagechanging",Q(this,nW)),this._eventBus._off("scalechanging",Q(this,hW)),this._eventBus._off("rotationchanging",Q(this,iW));for(const Z of Q(this,Jl).values())Z.destroy();Q(this,Jl).clear(),Q(this,Nl).clear(),Q(this,hd).clear(),i(this,Hl,null),Q(this,A).clear(),Q(this,tU).destroy(),(l=Q(this,hF))==null||l.destroy(),(U=Q(this,BU))==null||U.hide(),i(this,BU,null),Q(this,SU)&&(clearTimeout(Q(this,SU)),i(this,SU,null)),Q(this,eU)&&(clearTimeout(Q(this,eU)),i(this,eU,null)),m(this,ac,rs).call(this)}async mlGuess(l){var U;return((U=Q(this,JF))==null?void 0:U.guess(l))||null}get hasMLManager(){return!!Q(this,JF)}get hcmFilter(){return g(this,"hcmFilter",Q(this,id)?Q(this,dW).addHCMFilter(Q(this,id).foreground,Q(this,id).background):"none")}get direction(){return g(this,"direction",getComputedStyle(Q(this,$U)).direction)}get highlightColors(){return g(this,"highlightColors",Q(this,MF)?new Map(Q(this,MF).split(",").map(l=>l.split("=").map(U=>U.trim()))):null)}get highlightColorNames(){return g(this,"highlightColorNames",this.highlightColors?new Map(Array.from(this.highlightColors,l=>l.reverse())):null)}setMainHighlightColorPicker(l){i(this,WW,l)}editAltText(l){var U;(U=Q(this,hF))==null||U.editAltText(this,l)}onPageChanging({pageNumber:l}){i(this,iF,l-1)}focusMainContainer(){Q(this,$U).focus()}findParent(l,U){for(const Z of Q(this,Jl).values()){const{x:d,y:F,width:W,height:V}=Z.div.getBoundingClientRect();if(l>=d&&l<=d+W&&U>=F&&U<=F+V)return Z}return null}disableUserSelect(l=!1){Q(this,JW).classList.toggle("noUserSelect",l)}addShouldRescale(l){Q(this,hd).add(l)}removeShouldRescale(l){Q(this,hd).delete(l)}onScaleChanging({scale:l}){this.commitOrRemove(),this.viewParameters.realScale=l*QU.PDF_TO_CSS_UNITS;for(const U of Q(this,hd))U.onScaleChanging()}onRotationChanging({pagesRotation:l}){this.commitOrRemove(),this.viewParameters.rotation=l}highlightSelection(l=""){const U=document.getSelection();if(!U||U.isCollapsed)return;const{anchorNode:Z,anchorOffset:d,focusNode:F,focusOffset:W}=U,V=U.toString(),t=m(this,GF,Lt).call(this,U).closest(".textLayer"),N=this.getSelectionBoxes(t);if(N){U.empty(),Q(this,Gl)===K.NONE&&(this._eventBus.dispatch("showannotationeditorui",{source:this,mode:K.HIGHLIGHT}),this.showAllEditors("highlight",!0,!0));for(const s of Q(this,Jl).values())if(s.hasTextLayer(t)){s.createAndAddNewEditor({x:0,y:0},!1,{methodOfCreation:l,boxes:N,anchorNode:Z,anchorOffset:d,focusNode:F,focusOffset:W,text:V});break}}}addToAnnotationStorage(l){!l.isEmpty()&&Q(this,fU)&&!Q(this,fU).has(l.id)&&Q(this,fU).setValue(l.id,l)}blur(){if(this.isShiftKeyDown=!1,Q(this,eZ)&&(i(this,eZ,!1),m(this,TF,zt).call(this,"main_toolbar")),!this.hasSelection)return;const{activeElement:l}=document;for(const U of Q(this,A))if(U.div.contains(l)){i(this,md,[U,l]),U._focusEventsAllowed=!1;break}}focus(){if(!Q(this,md))return;const[l,U]=Q(this,md);i(this,md,null),U.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0}),U.focus()}addEditListeners(){m(this,TW,jR).call(this),m(this,YW,rR).call(this)}removeEditListeners(){m(this,XW,OR).call(this),m(this,SW,KR).call(this)}copy(l){var Z;if(l.preventDefault(),(Z=Q(this,Hl))==null||Z.commitOrRemove(),!this.hasSelection)return;const U=[];for(const d of Q(this,A)){const F=d.serialize(!0);F&&U.push(F)}U.length!==0&&l.clipboardData.setData("application/pdfjs",JSON.stringify(U))}cut(l){this.copy(l),this.delete()}paste(l){l.preventDefault();const{clipboardData:U}=l;for(const F of U.items)for(const W of Q(this,_U))if(W.isHandlingMimeForPasting(F.type)){W.paste(F,this.currentLayer);return}let Z=U.getData("application/pdfjs");if(!Z)return;try{Z=JSON.parse(Z)}catch(F){x(`paste: "${F.message}".`);return}if(!Array.isArray(Z))return;this.unselectAll();const d=this.currentLayer;try{const F=[];for(const c of Z){const t=d.deserialize(c);if(!t)return;F.push(t)}const W=()=>{for(const c of F)m(this,BW,gR).call(this,c);m(this,eW,HR).call(this,F)},V=()=>{for(const c of F)c.remove()};this.addCommands({cmd:W,undo:V,mustExec:!0})}catch(F){x(`paste: "${F.message}".`)}}keydown(l){!this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!0),Q(this,Gl)!==K.NONE&&!this.isEditorHandlingKeyboard&&Mc._keyboardManager.exec(this,l)}keyup(l){this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!1,Q(this,eZ)&&(i(this,eZ,!1),m(this,TF,zt).call(this,"main_toolbar")))}onEditingAction({name:l}){switch(l){case"undo":case"redo":case"delete":case"selectAll":this[l]();break;case"highlightSelection":this.highlightSelection("context_menu");break}}setEditingState(l){l?(m(this,nc,Ks).call(this),m(this,YW,rR).call(this),m(this,Tl,wl).call(this,{isEditing:Q(this,Gl)!==K.NONE,isEmpty:m(this,Md,NV).call(this),hasSomethingToUndo:Q(this,tU).hasSomethingToUndo(),hasSomethingToRedo:Q(this,tU).hasSomethingToRedo(),hasSelectedEditor:!1})):(m(this,GW,xR).call(this),m(this,SW,KR).call(this),m(this,Tl,wl).call(this,{isEditing:!1}),this.disableUserSelect(!1))}registerEditorTypes(l){if(!Q(this,_U)){i(this,_U,l);for(const U of Q(this,_U))m(this,pU,_Z).call(this,U.defaultPropertiesToUpdate)}}getId(){return Q(this,Rc).id}get currentLayer(){return Q(this,Jl).get(Q(this,iF))}getLayer(l){return Q(this,Jl).get(l)}get currentPageIndex(){return Q(this,iF)}addLayer(l){Q(this,Jl).set(l.pageIndex,l),Q(this,pZ)?l.enable():l.disable()}removeLayer(l){Q(this,Jl).delete(l.pageIndex)}updateMode(l,U=null,Z=!1){if(Q(this,Gl)!==l){if(i(this,Gl,l),l===K.NONE){this.setEditingState(!1),m(this,mc,Hs).call(this);return}this.setEditingState(!0),m(this,hc,gs).call(this),this.unselectAll();for(const d of Q(this,Jl).values())d.updateMode(l);if(!U&&Z){this.addNewEditorFromKeyboard();return}if(U){for(const d of Q(this,Nl).values())if(d.annotationElementId===U){this.setSelected(d),d.enterInEditMode();break}}}}addNewEditorFromKeyboard(){this.currentLayer.canCreateNewEmptyEditor()&&this.currentLayer.addNewEditor()}updateToolbar(l){l!==Q(this,Gl)&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:l})}updateParams(l,U){var Z;if(Q(this,_U)){switch(l){case I.CREATE:this.currentLayer.addNewEditor();return;case I.HIGHLIGHT_DEFAULT_COLOR:(Z=Q(this,WW))==null||Z.updateColor(U);break;case I.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:{type:"highlight",action:"toggle_visibility"}}}),(Q(this,QW)||i(this,QW,new Map)).set(l,U),this.showAllEditors("highlight",U);break}for(const d of Q(this,A))d.updateParams(l,U);for(const d of Q(this,_U))d.updateDefaultParams(l,U)}}showAllEditors(l,U,Z=!1){var F;for(const W of Q(this,Nl).values())W.editorType===l&&W.show(U);(((F=Q(this,QW))==null?void 0:F.get(I.HIGHLIGHT_SHOW_ALL))??!0)!==U&&m(this,pU,_Z).call(this,[[I.HIGHLIGHT_SHOW_ALL,U]])}enableWaiting(l=!1){if(Q(this,FW)!==l){i(this,FW,l);for(const U of Q(this,Jl).values())l?U.disableClick():U.enableClick(),U.div.classList.toggle("waiting",l)}}getEditors(l){const U=[];for(const Z of Q(this,Nl).values())Z.pageIndex===l&&U.push(Z);return U}getEditor(l){return Q(this,Nl).get(l)}addEditor(l){Q(this,Nl).set(l.id,l)}removeEditor(l){var U;l.div.contains(document.activeElement)&&(Q(this,SU)&&clearTimeout(Q(this,SU)),i(this,SU,setTimeout(()=>{this.focusMainContainer(),i(this,SU,null)},0))),Q(this,Nl).delete(l.id),this.unselect(l),(!l.annotationElementId||!Q(this,nd).has(l.annotationElementId))&&((U=Q(this,fU))==null||U.remove(l.id))}addDeletedAnnotationElement(l){Q(this,nd).add(l.annotationElementId),this.addChangedExistingAnnotation(l),l.deleted=!0}isDeletedAnnotationElement(l){return Q(this,nd).has(l)}removeDeletedAnnotationElement(l){Q(this,nd).delete(l.annotationElementId),this.removeChangedExistingAnnotation(l),l.deleted=!1}setActiveEditor(l){Q(this,Hl)!==l&&(i(this,Hl,l),l&&m(this,pU,_Z).call(this,l.propertiesToUpdate))}updateUI(l){Q(this,ic,vs)===l&&m(this,pU,_Z).call(this,l.propertiesToUpdate)}toggleSelected(l){if(Q(this,A).has(l)){Q(this,A).delete(l),l.unselect(),m(this,Tl,wl).call(this,{hasSelectedEditor:this.hasSelection});return}Q(this,A).add(l),l.select(),m(this,pU,_Z).call(this,l.propertiesToUpdate),m(this,Tl,wl).call(this,{hasSelectedEditor:!0})}setSelected(l){for(const U of Q(this,A))U!==l&&U.unselect();Q(this,A).clear(),Q(this,A).add(l),l.select(),m(this,pU,_Z).call(this,l.propertiesToUpdate),m(this,Tl,wl).call(this,{hasSelectedEditor:!0})}isSelected(l){return Q(this,A).has(l)}get firstSelectedEditor(){return Q(this,A).values().next().value}unselect(l){l.unselect(),Q(this,A).delete(l),m(this,Tl,wl).call(this,{hasSelectedEditor:this.hasSelection})}get hasSelection(){return Q(this,A).size!==0}get isEnterHandled(){return Q(this,A).size===1&&this.firstSelectedEditor.isEnterHandled}undo(){Q(this,tU).undo(),m(this,Tl,wl).call(this,{hasSomethingToUndo:Q(this,tU).hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:m(this,Md,NV).call(this)})}redo(){Q(this,tU).redo(),m(this,Tl,wl).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:Q(this,tU).hasSomethingToRedo(),isEmpty:m(this,Md,NV).call(this)})}addCommands(l){Q(this,tU).add(l),m(this,Tl,wl).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:m(this,Md,NV).call(this)})}delete(){if(this.commitOrRemove(),!this.hasSelection)return;const l=[...Q(this,A)],U=()=>{for(const d of l)d.remove()},Z=()=>{for(const d of l)m(this,BW,gR).call(this,d)};this.addCommands({cmd:U,undo:Z,mustExec:!0})}commitOrRemove(){var l;(l=Q(this,Hl))==null||l.commitOrRemove()}hasSomethingToControl(){return Q(this,Hl)||this.hasSelection}selectAll(){for(const l of Q(this,A))l.commit();m(this,eW,HR).call(this,Q(this,Nl).values())}unselectAll(){if(!(Q(this,Hl)&&(Q(this,Hl).commitOrRemove(),Q(this,Gl)!==K.NONE))&&this.hasSelection){for(const l of Q(this,A))l.unselect();Q(this,A).clear(),m(this,Tl,wl).call(this,{hasSelectedEditor:!1})}}translateSelectedEditors(l,U,Z=!1){if(Z||this.commitOrRemove(),!this.hasSelection)return;Q(this,uZ)[0]+=l,Q(this,uZ)[1]+=U;const[d,F]=Q(this,uZ),W=[...Q(this,A)],V=1e3;Q(this,eU)&&clearTimeout(Q(this,eU)),i(this,eU,setTimeout(()=>{i(this,eU,null),Q(this,uZ)[0]=Q(this,uZ)[1]=0,this.addCommands({cmd:()=>{for(const c of W)Q(this,Nl).has(c.id)&&c.translateInPage(d,F)},undo:()=>{for(const c of W)Q(this,Nl).has(c.id)&&c.translateInPage(-d,-F)},mustExec:!1})},V));for(const c of W)c.translateInPage(l,U)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0),i(this,YU,new Map);for(const l of Q(this,A))Q(this,YU).set(l,{savedX:l.x,savedY:l.y,savedPageIndex:l.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!Q(this,YU))return!1;this.disableUserSelect(!1);const l=Q(this,YU);i(this,YU,null);let U=!1;for(const[{x:d,y:F,pageIndex:W},V]of l)V.newX=d,V.newY=F,V.newPageIndex=W,U||(U=d!==V.savedX||F!==V.savedY||W!==V.savedPageIndex);if(!U)return!1;const Z=(d,F,W,V)=>{if(Q(this,Nl).has(d.id)){const c=Q(this,Jl).get(V);c?d._setParentAndPosition(c,F,W):(d.pageIndex=V,d.x=F,d.y=W)}};return this.addCommands({cmd:()=>{for(const[d,{newX:F,newY:W,newPageIndex:V}]of l)Z(d,F,W,V)},undo:()=>{for(const[d,{savedX:F,savedY:W,savedPageIndex:V}]of l)Z(d,F,W,V)},mustExec:!0}),!0}dragSelectedEditors(l,U){if(Q(this,YU))for(const Z of Q(this,YU).keys())Z.drag(l,U)}rebuild(l){if(l.parent===null){const U=this.getLayer(l.pageIndex);U?(U.changeParent(l),U.addOrRebuild(l)):(this.addEditor(l),this.addToAnnotationStorage(l),l.rebuild())}else l.parent.addOrRebuild(l)}get isEditorHandlingKeyboard(){var l;return((l=this.getActive())==null?void 0:l.shouldGetKeyboardEvents())||Q(this,A).size===1&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(l){return Q(this,Hl)===l}getActive(){return Q(this,Hl)}getMode(){return Q(this,Gl)}get imageManager(){return g(this,"imageManager",new tR)}getSelectionBoxes(l){if(!l)return null;const U=document.getSelection();for(let t=0,N=U.rangeCount;t<N;t++)if(!l.contains(U.getRangeAt(t).commonAncestorContainer))return null;const{x:Z,y:d,width:F,height:W}=l.getBoundingClientRect();let V;switch(l.getAttribute("data-main-rotation")){case"90":V=(t,N,s,b)=>({x:(N-d)/W,y:1-(t+s-Z)/F,width:b/W,height:s/F});break;case"180":V=(t,N,s,b)=>({x:1-(t+s-Z)/F,y:1-(N+b-d)/W,width:s/F,height:b/W});break;case"270":V=(t,N,s,b)=>({x:1-(N+b-d)/W,y:(t-Z)/F,width:b/W,height:s/F});break;default:V=(t,N,s,b)=>({x:(t-Z)/F,y:(N-d)/W,width:s/F,height:b/W});break}const c=[];for(let t=0,N=U.rangeCount;t<N;t++){const s=U.getRangeAt(t);if(!s.collapsed)for(const{x:b,y:n,width:h,height:M}of s.getClientRects())h===0||M===0||c.push(V(b,n,h,M))}return c.length===0?null:c}addChangedExistingAnnotation({annotationElementId:l,id:U}){(Q(this,mF)||i(this,mF,new Map)).set(l,U)}removeChangedExistingAnnotation({annotationElementId:l}){var U;(U=Q(this,mF))==null||U.delete(l)}renderAnnotationElement(l){var d;const U=(d=Q(this,mF))==null?void 0:d.get(l.data.id);if(!U)return;const Z=Q(this,fU).getRawValue(U);Z&&(Q(this,Gl)===K.NONE&&!Z.hasBeenModified||Z.renderAnnotationElement(l))}};let KU=Mc;Hl=new WeakMap,Nl=new WeakMap,Jl=new WeakMap,hF=new WeakMap,fU=new WeakMap,mF=new WeakMap,tU=new WeakMap,iF=new WeakMap,nd=new WeakMap,YU=new WeakMap,_U=new WeakMap,hd=new WeakMap,ZW=new WeakMap,dW=new WeakMap,SU=new WeakMap,MF=new WeakMap,eZ=new WeakMap,BU=new WeakMap,Rc=new WeakMap,pZ=new WeakMap,FW=new WeakMap,md=new WeakMap,WW=new WeakMap,JF=new WeakMap,Gl=new WeakMap,A=new WeakMap,qU=new WeakMap,id=new WeakMap,QW=new WeakMap,VW=new WeakMap,cW=new WeakMap,tW=new WeakMap,RW=new WeakMap,NW=new WeakMap,sW=new WeakMap,bW=new WeakMap,aW=new WeakMap,nW=new WeakMap,hW=new WeakMap,mW=new WeakMap,iW=new WeakMap,MW=new WeakMap,uZ=new WeakMap,eU=new WeakMap,$U=new WeakMap,JW=new WeakMap,GF=new WeakSet,Lt=function({anchorNode:l}){return l.nodeType===Node.TEXT_NODE?l.parentElement:l},Nc=new WeakSet,xs=function(){const l=document.getSelection();if(!l||l.isCollapsed)return;const Z=m(this,GF,Lt).call(this,l).closest(".textLayer"),d=this.getSelectionBoxes(Z);d&&(Q(this,BU)||i(this,BU,new aa(this)),Q(this,BU).show(Z,d,this.direction==="ltr"))},sc=new WeakSet,js=function(){var F,W,V;const l=document.getSelection();if(!l||l.isCollapsed){Q(this,qU)&&((F=Q(this,BU))==null||F.hide(),i(this,qU,null),m(this,Tl,wl).call(this,{hasSelectedText:!1}));return}const{anchorNode:U}=l;if(U===Q(this,qU))return;if(!m(this,GF,Lt).call(this,l).closest(".textLayer")){Q(this,qU)&&((W=Q(this,BU))==null||W.hide(),i(this,qU,null),m(this,Tl,wl).call(this,{hasSelectedText:!1}));return}if((V=Q(this,BU))==null||V.hide(),i(this,qU,U),m(this,Tl,wl).call(this,{hasSelectedText:!0}),!(Q(this,Gl)!==K.HIGHLIGHT&&Q(this,Gl)!==K.NONE)&&(Q(this,Gl)===K.HIGHLIGHT&&this.showAllEditors("highlight",!0,!0),i(this,eZ,this.isShiftKeyDown),!this.isShiftKeyDown)){const c=t=>{t.type==="pointerup"&&t.button!==0||(window.removeEventListener("pointerup",c),window.removeEventListener("blur",c),t.type==="pointerup"&&m(this,TF,zt).call(this,"main_toolbar"))};window.addEventListener("pointerup",c),window.addEventListener("blur",c)}},TF=new WeakSet,zt=function(l=""){Q(this,Gl)===K.HIGHLIGHT?this.highlightSelection(l):Q(this,ZW)&&m(this,Nc,xs).call(this)},bc=new WeakSet,Os=function(){document.addEventListener("selectionchange",Q(this,mW))},ac=new WeakSet,rs=function(){document.removeEventListener("selectionchange",Q(this,mW))},nc=new WeakSet,Ks=function(){window.addEventListener("focus",Q(this,cW)),window.addEventListener("blur",Q(this,VW))},GW=new WeakSet,xR=function(){window.removeEventListener("focus",Q(this,cW)),window.removeEventListener("blur",Q(this,VW))},TW=new WeakSet,jR=function(){window.addEventListener("keydown",Q(this,sW)),window.addEventListener("keyup",Q(this,bW))},XW=new WeakSet,OR=function(){window.removeEventListener("keydown",Q(this,sW)),window.removeEventListener("keyup",Q(this,bW))},YW=new WeakSet,rR=function(){document.addEventListener("copy",Q(this,tW)),document.addEventListener("cut",Q(this,RW)),document.addEventListener("paste",Q(this,NW))},SW=new WeakSet,KR=function(){document.removeEventListener("copy",Q(this,tW)),document.removeEventListener("cut",Q(this,RW)),document.removeEventListener("paste",Q(this,NW))},Tl=new WeakSet,wl=function(l){Object.entries(l).some(([Z,d])=>Q(this,MW)[Z]!==d)&&(this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(Q(this,MW),l)}),Q(this,Gl)===K.HIGHLIGHT&&l.hasSelectedEditor===!1&&m(this,pU,_Z).call(this,[[I.HIGHLIGHT_FREE,!0]]))},pU=new WeakSet,_Z=function(l){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:l})},hc=new WeakSet,gs=function(){if(!Q(this,pZ)){i(this,pZ,!0);for(const l of Q(this,Jl).values())l.enable();for(const l of Q(this,Nl).values())l.enable()}},mc=new WeakSet,Hs=function(){if(this.unselectAll(),Q(this,pZ)){i(this,pZ,!1);for(const l of Q(this,Jl).values())l.disable();for(const l of Q(this,Nl).values())l.disable()}},BW=new WeakSet,gR=function(l){const U=Q(this,Jl).get(l.pageIndex);U?U.addOrRebuild(l):(this.addEditor(l),this.addToAnnotationStorage(l))},ic=new WeakSet,vs=function(){let l=null;for(l of Q(this,A));return l},Md=new WeakSet,NV=function(){if(Q(this,Nl).size===0)return!0;if(Q(this,Nl).size===1)for(const l of Q(this,Nl).values())return l.isEmpty();return!1},eW=new WeakSet,HR=function(l){for(const U of Q(this,A))U.unselect();Q(this,A).clear();for(const U of l)U.isEmpty()||(Q(this,A).add(U),U.select());m(this,Tl,wl).call(this,{hasSelectedEditor:this.hasSelection})},E(KU,"TRANSLATE_SMALL",1),E(KU,"TRANSLATE_BIG",10);const yZ=class{constructor(l){a(this,pW);a(this,lZ,"");a(this,UZ,!1);a(this,RU,null);a(this,ZZ,null);a(this,NU,null);a(this,XF,!1);a(this,dZ,null);i(this,dZ,l)}static initialize(l){yZ._l10nPromise||(yZ._l10nPromise=l)}async render(){const l=i(this,RU,document.createElement("button"));l.className="altText";const U=await yZ._l10nPromise.get("pdfjs-editor-alt-text-button-label");l.textContent=U,l.setAttribute("aria-label",U),l.tabIndex="0",l.addEventListener("contextmenu",jl),l.addEventListener("pointerdown",d=>d.stopPropagation());const Z=d=>{d.preventDefault(),Q(this,dZ)._uiManager.editAltText(Q(this,dZ))};return l.addEventListener("click",Z,{capture:!0}),l.addEventListener("keydown",d=>{d.target===l&&d.key==="Enter"&&(i(this,XF,!0),Z(d))}),await m(this,pW,vR).call(this),l}finish(){Q(this,RU)&&(Q(this,RU).focus({focusVisible:Q(this,XF)}),i(this,XF,!1))}isEmpty(){return!Q(this,lZ)&&!Q(this,UZ)}get data(){return{altText:Q(this,lZ),decorative:Q(this,UZ)}}set data({altText:l,decorative:U}){Q(this,lZ)===l&&Q(this,UZ)===U||(i(this,lZ,l),i(this,UZ,U),m(this,pW,vR).call(this))}toggle(l=!1){Q(this,RU)&&(!l&&Q(this,NU)&&(clearTimeout(Q(this,NU)),i(this,NU,null)),Q(this,RU).disabled=!l)}destroy(){var l;(l=Q(this,RU))==null||l.remove(),i(this,RU,null),i(this,ZZ,null)}};let I0=yZ;lZ=new WeakMap,UZ=new WeakMap,RU=new WeakMap,ZZ=new WeakMap,NU=new WeakMap,XF=new WeakMap,dZ=new WeakMap,pW=new WeakSet,vR=async function(){var d;const l=Q(this,RU);if(!l)return;if(!Q(this,lZ)&&!Q(this,UZ)){l.classList.remove("done"),(d=Q(this,ZZ))==null||d.remove();return}l.classList.add("done"),yZ._l10nPromise.get("pdfjs-editor-alt-text-edit-button-label").then(F=>{l.setAttribute("aria-label",F)});let U=Q(this,ZZ);if(!U){i(this,ZZ,U=document.createElement("span")),U.className="tooltip",U.setAttribute("role","tooltip");const F=U.id=`alt-text-tooltip-${Q(this,dZ).id}`;l.setAttribute("aria-describedby",F);const W=100;l.addEventListener("mouseenter",()=>{i(this,NU,setTimeout(()=>{i(this,NU,null),Q(this,ZZ).classList.add("show"),Q(this,dZ)._reportTelemetry({action:"alt_text_tooltip"})},W))}),l.addEventListener("mouseleave",()=>{var V;Q(this,NU)&&(clearTimeout(Q(this,NU)),i(this,NU,null)),(V=Q(this,ZZ))==null||V.classList.remove("show")})}U.innerText=Q(this,UZ)?await yZ._l10nPromise.get("pdfjs-editor-alt-text-decorative-tooltip"):Q(this,lZ),U.parentNode||l.append(U);const Z=Q(this,dZ).getImageForAltText();Z==null||Z.setAttribute("aria-describedby",U.id)},E(I0,"_l10nPromise",null);const Ul=class{constructor(l){a(this,zW);a(this,oW);a(this,Gc);a(this,Tc);a(this,DW);a(this,IW);a(this,EW);a(this,Xc);a(this,Yc);a(this,Sc);a(this,Bc);a(this,CW);a(this,Yd);a(this,sU,null);a(this,Dl,null);a(this,YF,!1);a(this,Jd,!1);a(this,Xl,null);a(this,Gd,null);a(this,SF,this.focusin.bind(this));a(this,BF,this.focusout.bind(this));a(this,Ll,null);a(this,uW,"");a(this,Td,!1);a(this,LZ,null);a(this,yW,!1);a(this,Xd,!1);a(this,FZ,!1);a(this,uU,null);a(this,eF,0);a(this,pF,0);a(this,UU,null);E(this,"_initialOptions",Object.create(null));E(this,"_isVisible",!0);E(this,"_uiManager",null);E(this,"_focusEventsAllowed",!0);E(this,"_l10nPromise",null);a(this,LW,!1);a(this,Jc,Ul._zIndex++);this.constructor===Ul&&_("Cannot initialize AnnotationEditor."),this.parent=l.parent,this.id=l.id,this.width=this.height=null,this.pageIndex=l.parent.pageIndex,this.name=l.name,this.div=null,this._uiManager=l.uiManager,this.annotationElementId=null,this._willKeepAspectRatio=!1,this._initialOptions.isCentered=l.isCentered,this._structTreeParentId=null;const{rotation:U,rawDims:{pageWidth:Z,pageHeight:d,pageX:F,pageY:W}}=this.parent.viewport;this.rotation=U,this.pageRotation=(360+U-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[Z,d],this.pageTranslation=[F,W];const[V,c]=this.parentDimensions;this.x=l.x/V,this.y=l.y/c,this.isAttachedToDOM=!1,this.deleted=!1}static get _resizerKeyboardManager(){const l=Ul.prototype._resizeWithKeyboard,U=KU.TRANSLATE_SMALL,Z=KU.TRANSLATE_BIG;return g(this,"_resizerKeyboardManager",new D0([[["ArrowLeft","mac+ArrowLeft"],l,{args:[-U,0]}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l,{args:[-Z,0]}],[["ArrowRight","mac+ArrowRight"],l,{args:[U,0]}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l,{args:[Z,0]}],[["ArrowUp","mac+ArrowUp"],l,{args:[0,-U]}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l,{args:[0,-Z]}],[["ArrowDown","mac+ArrowDown"],l,{args:[0,U]}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l,{args:[0,Z]}],[["Escape","mac+Escape"],Ul.prototype._stopResizingWithKeyboard]]))}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get _defaultLineColor(){return g(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(l){const U=new ia({id:l.parent.getNextId(),parent:l.parent,uiManager:l._uiManager});U.annotationElementId=l.annotationElementId,U.deleted=!0,U._uiManager.addToAnnotationStorage(U)}static initialize(l,U,Z){if(Ul._l10nPromise||(Ul._l10nPromise=new Map(["pdfjs-editor-alt-text-button-label","pdfjs-editor-alt-text-edit-button-label","pdfjs-editor-alt-text-decorative-tooltip","pdfjs-editor-resizer-label-topLeft","pdfjs-editor-resizer-label-topMiddle","pdfjs-editor-resizer-label-topRight","pdfjs-editor-resizer-label-middleRight","pdfjs-editor-resizer-label-bottomRight","pdfjs-editor-resizer-label-bottomMiddle","pdfjs-editor-resizer-label-bottomLeft","pdfjs-editor-resizer-label-middleLeft"].map(F=>[F,l.get(F.replaceAll(/([A-Z])/g,W=>`-${W.toLowerCase()}`))]))),Z!=null&&Z.strings)for(const F of Z.strings)Ul._l10nPromise.set(F,l.get(F));if(Ul._borderLineWidth!==-1)return;const d=getComputedStyle(document.documentElement);Ul._borderLineWidth=parseFloat(d.getPropertyValue("--outline-width"))||0}static updateDefaultParams(l,U){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(l){return!1}static paste(l,U){_("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return Q(this,LW)}set _isDraggable(l){var U;i(this,LW,l),(U=this.div)==null||U.classList.toggle("draggable",l)}get isEnterHandled(){return!0}center(){const[l,U]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*U/(l*2),this.y+=this.width*l/(U*2);break;case 180:this.x+=this.width/2,this.y+=this.height/2;break;case 270:this.x+=this.height*U/(l*2),this.y-=this.width*l/(U*2);break;default:this.x-=this.width/2,this.y-=this.height/2;break}this.fixAndSetPosition()}addCommands(l){this._uiManager.addCommands(l)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=Q(this,Jc)}setParent(l){l!==null?(this.pageIndex=l.pageIndex,this.pageDimensions=l.pageDimensions):m(this,Yd,sV).call(this),this.parent=l}focusin(l){this._focusEventsAllowed&&(Q(this,Td)?i(this,Td,!1):this.parent.setSelected(this))}focusout(l){var Z;if(!this._focusEventsAllowed||!this.isAttachedToDOM)return;const U=l.relatedTarget;U!=null&&U.closest(`#${this.id}`)||(l.preventDefault(),(Z=this.parent)!=null&&Z.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(l,U,Z,d){const[F,W]=this.parentDimensions;[Z,d]=this.screenToPageTranslation(Z,d),this.x=(l+Z)/F,this.y=(U+d)/W,this.fixAndSetPosition()}translate(l,U){m(this,zW,PR).call(this,this.parentDimensions,l,U)}translateInPage(l,U){Q(this,LZ)||i(this,LZ,[this.x,this.y]),m(this,zW,PR).call(this,this.pageDimensions,l,U),this.div.scrollIntoView({block:"nearest"})}drag(l,U){Q(this,LZ)||i(this,LZ,[this.x,this.y]);const[Z,d]=this.parentDimensions;if(this.x+=l/Z,this.y+=U/d,this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:t,y:N}=this.div.getBoundingClientRect();this.parent.findNewParent(this,t,N)&&(this.x-=Math.floor(this.x),this.y-=Math.floor(this.y))}let{x:F,y:W}=this;const[V,c]=this.getBaseTranslation();F+=V,W+=c,this.div.style.left=`${(100*F).toFixed(2)}%`,this.div.style.top=`${(100*W).toFixed(2)}%`,this.div.scrollIntoView({block:"nearest"})}get _hasBeenMoved(){return!!Q(this,LZ)&&(Q(this,LZ)[0]!==this.x||Q(this,LZ)[1]!==this.y)}getBaseTranslation(){const[l,U]=this.parentDimensions,{_borderLineWidth:Z}=Ul,d=Z/l,F=Z/U;switch(this.rotation){case 90:return[-d,F];case 180:return[d,F];case 270:return[d,-F];default:return[-d,-F]}}get _mustFixPosition(){return!0}fixAndSetPosition(l=this.rotation){const[U,Z]=this.pageDimensions;let{x:d,y:F,width:W,height:V}=this;if(W*=U,V*=Z,d*=U,F*=Z,this._mustFixPosition)switch(l){case 0:d=Math.max(0,Math.min(U-W,d)),F=Math.max(0,Math.min(Z-V,F));break;case 90:d=Math.max(0,Math.min(U-V,d)),F=Math.min(Z,Math.max(W,F));break;case 180:d=Math.min(U,Math.max(W,d)),F=Math.min(Z,Math.max(V,F));break;case 270:d=Math.min(U,Math.max(V,d)),F=Math.max(0,Math.min(Z-W,F));break}this.x=d/=U,this.y=F/=Z;const[c,t]=this.getBaseTranslation();d+=c,F+=t;const{style:N}=this.div;N.left=`${(100*d).toFixed(2)}%`,N.top=`${(100*F).toFixed(2)}%`,this.moveInDOM()}screenToPageTranslation(l,U){var Z;return m(Z=Ul,kW,AR).call(Z,l,U,this.parentRotation)}pageTranslationToScreen(l,U){var Z;return m(Z=Ul,kW,AR).call(Z,l,U,360-this.parentRotation)}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:l,pageDimensions:[U,Z]}=this,d=U*l,F=Z*l;return xl.isCSSRoundSupported?[Math.round(d),Math.round(F)]:[d,F]}setDims(l,U){const[Z,d]=this.parentDimensions;this.div.style.width=`${(100*l/Z).toFixed(2)}%`,Q(this,Jd)||(this.div.style.height=`${(100*U/d).toFixed(2)}%`)}fixDims(){const{style:l}=this.div,{height:U,width:Z}=l,d=Z.endsWith("%"),F=!Q(this,Jd)&&U.endsWith("%");if(d&&F)return;const[W,V]=this.parentDimensions;d||(l.width=`${(100*parseFloat(Z)/W).toFixed(2)}%`),!Q(this,Jd)&&!F&&(l.height=`${(100*parseFloat(U)/V).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}altTextFinish(){var l;(l=Q(this,Dl))==null||l.finish()}async addEditToolbar(){return Q(this,Ll)||Q(this,Xd)?Q(this,Ll):(i(this,Ll,new zV(this)),this.div.append(Q(this,Ll).render()),Q(this,Dl)&&Q(this,Ll).addAltTextButton(await Q(this,Dl).render()),Q(this,Ll))}removeEditToolbar(){var l;Q(this,Ll)&&(Q(this,Ll).remove(),i(this,Ll,null),(l=Q(this,Dl))==null||l.destroy())}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){Q(this,Dl)||(I0.initialize(Ul._l10nPromise),i(this,Dl,new I0(this)),await this.addEditToolbar())}get altTextData(){var l;return(l=Q(this,Dl))==null?void 0:l.data}set altTextData(l){Q(this,Dl)&&(Q(this,Dl).data=l)}hasAltText(){var l;return!((l=Q(this,Dl))!=null&&l.isEmpty())}render(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.tabIndex=Q(this,YF)?-1:0,this._isVisible||this.div.classList.add("hidden"),this.setInForeground(),this.div.addEventListener("focusin",Q(this,SF)),this.div.addEventListener("focusout",Q(this,BF));const[l,U]=this.parentDimensions;this.parentRotation%180!==0&&(this.div.style.maxWidth=`${(100*U/l).toFixed(2)}%`,this.div.style.maxHeight=`${(100*l/U).toFixed(2)}%`);const[Z,d]=this.getInitialTranslation();return this.translate(Z,d),kV(this,this.div,["pointerdown"]),this.div}pointerdown(l){const{isMac:U}=xl.platform;if(l.button!==0||l.ctrlKey&&U){l.preventDefault();return}if(i(this,Td,!0),this._isDraggable){m(this,Xc,fs).call(this,l);return}m(this,EW,$R).call(this,l)}moveInDOM(){Q(this,uU)&&clearTimeout(Q(this,uU)),i(this,uU,setTimeout(()=>{var l;i(this,uU,null),(l=this.parent)==null||l.moveEditorInDOM(this)},0))}_setParentAndPosition(l,U,Z){l.changeParent(this),this.x=U,this.y=Z,this.fixAndSetPosition()}getRect(l,U,Z=this.rotation){const d=this.parentScale,[F,W]=this.pageDimensions,[V,c]=this.pageTranslation,t=l/d,N=U/d,s=this.x*F,b=this.y*W,n=this.width*F,h=this.height*W;switch(Z){case 0:return[s+t+V,W-b-N-h+c,s+t+n+V,W-b-N+c];case 90:return[s+N+V,W-b+t+c,s+N+h+V,W-b+t+n+c];case 180:return[s-t-n+V,W-b+N+c,s-t+V,W-b+N+h+c];case 270:return[s-N-h+V,W-b-t-n+c,s-N+V,W-b-t+c];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(l,U){const[Z,d,F,W]=l,V=F-Z,c=W-d;switch(this.rotation){case 0:return[Z,U-W,V,c];case 90:return[Z,U-d,c,V];case 180:return[F,U-d,V,c];case 270:return[F,U-W,c,V];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){i(this,Xd,!0)}disableEditMode(){i(this,Xd,!1)}isInEditMode(){return Q(this,Xd)}shouldGetKeyboardEvents(){return Q(this,FZ)}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}rebuild(){var l,U;(l=this.div)==null||l.addEventListener("focusin",Q(this,SF)),(U=this.div)==null||U.addEventListener("focusout",Q(this,BF))}rotate(l){}serialize(l=!1,U=null){_("An editor must be serializable")}static deserialize(l,U,Z){const d=new this.prototype.constructor({parent:U,id:U.getNextId(),uiManager:Z});d.rotation=l.rotation;const[F,W]=d.pageDimensions,[V,c,t,N]=d.getRectInCurrentCoords(l.rect,W);return d.x=V/F,d.y=c/W,d.width=t/F,d.height=N/W,d}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||this.serialize()!==null)}remove(){if(this.div.removeEventListener("focusin",Q(this,SF)),this.div.removeEventListener("focusout",Q(this,BF)),this.isEmpty()||this.commit(),this.parent?this.parent.remove(this):this._uiManager.removeEditor(this),Q(this,uU)&&(clearTimeout(Q(this,uU)),i(this,uU,null)),m(this,Yd,sV).call(this),this.removeEditToolbar(),Q(this,UU)){for(const l of Q(this,UU).values())clearTimeout(l);i(this,UU,null)}this.parent=null}get isResizable(){return!1}makeResizable(){this.isResizable&&(m(this,Gc,Ps).call(this),Q(this,Xl).classList.remove("hidden"),kV(this,this.div,["keydown"]))}get toolbarPosition(){return null}keydown(l){if(!this.isResizable||l.target!==this.div||l.key!=="Enter")return;this._uiManager.setSelected(this),i(this,Gd,{savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height});const U=Q(this,Xl).children;if(!Q(this,sU)){i(this,sU,Array.from(U));const W=m(this,Yc,_s).bind(this),V=m(this,Sc,qs).bind(this);for(const c of Q(this,sU)){const t=c.getAttribute("data-resizer-name");c.setAttribute("role","spinbutton"),c.addEventListener("keydown",W),c.addEventListener("blur",V),c.addEventListener("focus",m(this,Bc,$s).bind(this,t)),Ul._l10nPromise.get(`pdfjs-editor-resizer-label-${t}`).then(N=>c.setAttribute("aria-label",N))}}const Z=Q(this,sU)[0];let d=0;for(const W of U){if(W===Z)break;d++}const F=(360-this.rotation+this.parentRotation)%360/90*(Q(this,sU).length/4);if(F!==d){if(F<d)for(let V=0;V<d-F;V++)Q(this,Xl).append(Q(this,Xl).firstChild);else if(F>d)for(let V=0;V<F-d;V++)Q(this,Xl).firstChild.before(Q(this,Xl).lastChild);let W=0;for(const V of U){const t=Q(this,sU)[W++].getAttribute("data-resizer-name");Ul._l10nPromise.get(`pdfjs-editor-resizer-label-${t}`).then(N=>V.setAttribute("aria-label",N))}}m(this,CW,lN).call(this,0),i(this,FZ,!0),Q(this,Xl).firstChild.focus({focusVisible:!0}),l.preventDefault(),l.stopImmediatePropagation()}_resizeWithKeyboard(l,U){Q(this,FZ)&&m(this,IW,qR).call(this,Q(this,uW),{movementX:l,movementY:U})}_stopResizingWithKeyboard(){m(this,Yd,sV).call(this),this.div.focus()}select(){var l,U;if(this.makeResizable(),(l=this.div)==null||l.classList.add("selectedEditor"),!Q(this,Ll)){this.addEditToolbar().then(()=>{var Z,d;(Z=this.div)!=null&&Z.classList.contains("selectedEditor")&&((d=Q(this,Ll))==null||d.show())});return}(U=Q(this,Ll))==null||U.show()}unselect(){var l,U,Z,d;(l=Q(this,Xl))==null||l.classList.add("hidden"),(U=this.div)==null||U.classList.remove("selectedEditor"),(Z=this.div)!=null&&Z.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus({preventScroll:!0}),(d=Q(this,Ll))==null||d.hide()}updateParams(l,U){}disableEditing(){}enableEditing(){}enterInEditMode(){}getImageForAltText(){return null}get contentDiv(){return this.div}get isEditing(){return Q(this,yW)}set isEditing(l){i(this,yW,l),this.parent&&(l?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null))}setAspectRatio(l,U){i(this,Jd,!0);const Z=l/U,{style:d}=this.div;d.aspectRatio=Z,d.height="auto"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return!0}get telemetryInitialData(){return{action:"added"}}get telemetryFinalData(){return null}_reportTelemetry(l,U=!1){if(U){Q(this,UU)||i(this,UU,new Map);const{action:Z}=l;let d=Q(this,UU).get(Z);d&&clearTimeout(d),d=setTimeout(()=>{this._reportTelemetry(l),Q(this,UU).delete(Z),Q(this,UU).size===0&&i(this,UU,null)},Ul._telemetryTimeout),Q(this,UU).set(Z,d);return}l.type||(l.type=this.editorType),this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:l}})}show(l=this._isVisible){this.div.classList.toggle("hidden",!l),this._isVisible=l}enable(){this.div&&(this.div.tabIndex=0),i(this,YF,!1)}disable(){this.div&&(this.div.tabIndex=-1),i(this,YF,!0)}renderAnnotationElement(l){let U=l.container.querySelector(".annotationContent");if(!U)U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),l.container.prepend(U);else if(U.nodeName==="CANVAS"){const Z=U;U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),Z.before(U)}return U}resetAnnotationElement(l){const{firstChild:U}=l.container;U.nodeName==="DIV"&&U.classList.contains("annotationContent")&&U.remove()}};let H=Ul;sU=new WeakMap,Dl=new WeakMap,YF=new WeakMap,Jd=new WeakMap,Xl=new WeakMap,Gd=new WeakMap,SF=new WeakMap,BF=new WeakMap,Ll=new WeakMap,uW=new WeakMap,Td=new WeakMap,LZ=new WeakMap,yW=new WeakMap,Xd=new WeakMap,FZ=new WeakMap,uU=new WeakMap,eF=new WeakMap,pF=new WeakMap,UU=new WeakMap,LW=new WeakMap,Jc=new WeakMap,zW=new WeakSet,PR=function([l,U],Z,d){[Z,d]=this.screenToPageTranslation(Z,d),this.x+=Z/l,this.y+=d/U,this.fixAndSetPosition()},kW=new WeakSet,AR=function(l,U,Z){switch(Z){case 90:return[U,-l];case 180:return[-l,-U];case 270:return[-U,l];default:return[l,U]}},oW=new WeakSet,fR=function(l){switch(l){case 90:{const[U,Z]=this.pageDimensions;return[0,-U/Z,Z/U,0]}case 180:return[-1,0,0,-1];case 270:{const[U,Z]=this.pageDimensions;return[0,U/Z,-Z/U,0]}default:return[1,0,0,1]}},Gc=new WeakSet,Ps=function(){if(Q(this,Xl))return;i(this,Xl,document.createElement("div")),Q(this,Xl).classList.add("resizers");const l=this._willKeepAspectRatio?["topLeft","topRight","bottomRight","bottomLeft"]:["topLeft","topMiddle","topRight","middleRight","bottomRight","bottomMiddle","bottomLeft","middleLeft"];for(const U of l){const Z=document.createElement("div");Q(this,Xl).append(Z),Z.classList.add("resizer",U),Z.setAttribute("data-resizer-name",U),Z.addEventListener("pointerdown",m(this,Tc,As).bind(this,U)),Z.addEventListener("contextmenu",jl),Z.tabIndex=-1}this.div.prepend(Q(this,Xl))},Tc=new WeakSet,As=function(l,U){var h;U.preventDefault();const{isMac:Z}=xl.platform;if(U.button!==0||U.ctrlKey&&Z)return;(h=Q(this,Dl))==null||h.toggle(!1);const d=m(this,IW,qR).bind(this,l),F=this._isDraggable;this._isDraggable=!1;const W={passive:!0,capture:!0};this.parent.togglePointerEvents(!1),window.addEventListener("pointermove",d,W),window.addEventListener("contextmenu",jl);const V=this.x,c=this.y,t=this.width,N=this.height,s=this.parent.div.style.cursor,b=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(U.target).cursor;const n=()=>{var M;this.parent.togglePointerEvents(!0),(M=Q(this,Dl))==null||M.toggle(!0),this._isDraggable=F,window.removeEventListener("pointerup",n),window.removeEventListener("blur",n),window.removeEventListener("pointermove",d,W),window.removeEventListener("contextmenu",jl),this.parent.div.style.cursor=s,this.div.style.cursor=b,m(this,DW,_R).call(this,V,c,t,N)};window.addEventListener("pointerup",n),window.addEventListener("blur",n)},DW=new WeakSet,_R=function(l,U,Z,d){const F=this.x,W=this.y,V=this.width,c=this.height;F===l&&W===U&&V===Z&&c===d||this.addCommands({cmd:()=>{this.width=V,this.height=c,this.x=F,this.y=W;const[t,N]=this.parentDimensions;this.setDims(t*V,N*c),this.fixAndSetPosition()},undo:()=>{this.width=Z,this.height=d,this.x=l,this.y=U;const[t,N]=this.parentDimensions;this.setDims(t*Z,N*d),this.fixAndSetPosition()},mustExec:!0})},IW=new WeakSet,qR=function(l,U){const[Z,d]=this.parentDimensions,F=this.x,W=this.y,V=this.width,c=this.height,t=Ul.MIN_SIZE/Z,N=Ul.MIN_SIZE/d,s=o=>Math.round(o*1e4)/1e4,b=m(this,oW,fR).call(this,this.rotation),n=(o,w)=>[b[0]*o+b[2]*w,b[1]*o+b[3]*w],h=m(this,oW,fR).call(this,360-this.rotation),M=(o,w)=>[h[0]*o+h[2]*w,h[1]*o+h[3]*w];let G,J,T=!1,X=!1;switch(l){case"topLeft":T=!0,G=(o,w)=>[0,0],J=(o,w)=>[o,w];break;case"topMiddle":G=(o,w)=>[o/2,0],J=(o,w)=>[o/2,w];break;case"topRight":T=!0,G=(o,w)=>[o,0],J=(o,w)=>[0,w];break;case"middleRight":X=!0,G=(o,w)=>[o,w/2],J=(o,w)=>[0,w/2];break;case"bottomRight":T=!0,G=(o,w)=>[o,w],J=(o,w)=>[0,0];break;case"bottomMiddle":G=(o,w)=>[o/2,w],J=(o,w)=>[o/2,0];break;case"bottomLeft":T=!0,G=(o,w)=>[0,w],J=(o,w)=>[o,0];break;case"middleLeft":X=!0,G=(o,w)=>[0,w/2],J=(o,w)=>[o,w/2];break}const S=G(V,c),e=J(V,c);let Y=n(...e);const B=s(F+Y[0]),p=s(W+Y[1]);let z=1,C=1,[L,v]=this.screenToPageTranslation(U.movementX,U.movementY);if([L,v]=M(L/Z,v/d),T){const o=Math.hypot(V,c);z=C=Math.max(Math.min(Math.hypot(e[0]-S[0]-L,e[1]-S[1]-v)/o,1/V,1/c),t/V,N/c)}else X?z=Math.max(t,Math.min(1,Math.abs(e[0]-S[0]-L)))/V:C=Math.max(N,Math.min(1,Math.abs(e[1]-S[1]-v)))/c;const r=s(V*z),P=s(c*C);Y=n(...J(r,P));const f=B-Y[0],dl=p-Y[1];this.width=r,this.height=P,this.x=f,this.y=dl,this.setDims(Z*r,d*P),this.fixAndSetPosition()},EW=new WeakSet,$R=function(l){const{isMac:U}=xl.platform;l.ctrlKey&&!U||l.shiftKey||l.metaKey&&U?this.parent.toggleSelected(this):this.parent.setSelected(this)},Xc=new WeakSet,fs=function(l){const U=this._uiManager.isSelected(this);this._uiManager.setUpDragSession();let Z,d;U&&(this.div.classList.add("moving"),Z={passive:!0,capture:!0},i(this,eF,l.clientX),i(this,pF,l.clientY),d=W=>{const{clientX:V,clientY:c}=W,[t,N]=this.screenToPageTranslation(V-Q(this,eF),c-Q(this,pF));i(this,eF,V),i(this,pF,c),this._uiManager.dragSelectedEditors(t,N)},window.addEventListener("pointermove",d,Z));const F=()=>{window.removeEventListener("pointerup",F),window.removeEventListener("blur",F),U&&(this.div.classList.remove("moving"),window.removeEventListener("pointermove",d,Z)),i(this,Td,!1),this._uiManager.endDragSession()||m(this,EW,$R).call(this,l)};window.addEventListener("pointerup",F),window.addEventListener("blur",F)},Yc=new WeakSet,_s=function(l){Ul._resizerKeyboardManager.exec(this,l)},Sc=new WeakSet,qs=function(l){var U;Q(this,FZ)&&((U=l.relatedTarget)==null?void 0:U.parentNode)!==Q(this,Xl)&&m(this,Yd,sV).call(this)},Bc=new WeakSet,$s=function(l){i(this,uW,Q(this,FZ)?l:"")},CW=new WeakSet,lN=function(l){if(Q(this,sU))for(const U of Q(this,sU))U.tabIndex=l},Yd=new WeakSet,sV=function(){if(i(this,FZ,!1),m(this,CW,lN).call(this,-1),Q(this,Gd)){const{savedX:l,savedY:U,savedWidth:Z,savedHeight:d}=Q(this,Gd);m(this,DW,_R).call(this,l,U,Z,d),i(this,Gd,null)}},a(H,kW),E(H,"_borderLineWidth",-1),E(H,"_colorManager",new oV),E(H,"_zIndex",1),E(H,"_telemetryTimeout",1e3);class ia extends H{constructor(l){super(l),this.annotationElementId=l.annotationElementId,this.deleted=!0}serialize(){return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex}}}const jN=3285377520,$l=4294901760,JU=65535;class ON{constructor(l){this.h1=l?l&4294967295:jN,this.h2=l?l&4294967295:jN}update(l){let U,Z;if(typeof l=="string"){U=new Uint8Array(l.length*2),Z=0;for(let M=0,G=l.length;M<G;M++){const J=l.charCodeAt(M);J<=255?U[Z++]=J:(U[Z++]=J>>>8,U[Z++]=J&255)}}else if(ArrayBuffer.isView(l))U=l.slice(),Z=U.byteLength;else throw new Error("Invalid data format, must be a string or TypedArray.");const d=Z>>2,F=Z-d*4,W=new Uint32Array(U.buffer,0,d);let V=0,c=0,t=this.h1,N=this.h2;const s=3432918353,b=461845907,n=s&JU,h=b&JU;for(let M=0;M<d;M++)M&1?(V=W[M],V=V*s&$l|V*n&JU,V=V<<15|V>>>17,V=V*b&$l|V*h&JU,t^=V,t=t<<13|t>>>19,t=t*5+3864292196):(c=W[M],c=c*s&$l|c*n&JU,c=c<<15|c>>>17,c=c*b&$l|c*h&JU,N^=c,N=N<<13|N>>>19,N=N*5+3864292196);switch(V=0,F){case 3:V^=U[d*4+2]<<16;case 2:V^=U[d*4+1]<<8;case 1:V^=U[d*4],V=V*s&$l|V*n&JU,V=V<<15|V>>>17,V=V*b&$l|V*h&JU,d&1?t^=V:N^=V}this.h1=t,this.h2=N}hexdigest(){let l=this.h1,U=this.h2;return l^=U>>>1,l=l*3981806797&$l|l*36045&JU,U=U*4283543511&$l|((U<<16|l>>>16)*2950163797&$l)>>>16,l^=U>>>1,l=l*444984403&$l|l*60499&JU,U=U*3301882366&$l|((U<<16|l>>>16)*3120437893&$l)>>>16,l^=U>>>1,(l>>>0).toString(16).padStart(8,"0")+(U>>>0).toString(16).padStart(8,"0")}}const RR=Object.freeze({map:null,hash:"",transfer:void 0});class NR{constructor(){a(this,ec);a(this,Sd,!1);a(this,Yl,new Map);this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(l,U){const Z=Q(this,Yl).get(l);return Z===void 0?U:Object.assign(U,Z)}getRawValue(l){return Q(this,Yl).get(l)}remove(l){if(Q(this,Yl).delete(l),Q(this,Yl).size===0&&this.resetModified(),typeof this.onAnnotationEditor=="function"){for(const U of Q(this,Yl).values())if(U instanceof H)return;this.onAnnotationEditor(null)}}setValue(l,U){const Z=Q(this,Yl).get(l);let d=!1;if(Z!==void 0)for(const[F,W]of Object.entries(U))Z[F]!==W&&(d=!0,Z[F]=W);else d=!0,Q(this,Yl).set(l,U);d&&m(this,ec,lb).call(this),U instanceof H&&typeof this.onAnnotationEditor=="function"&&this.onAnnotationEditor(U.constructor._type)}has(l){return Q(this,Yl).has(l)}getAll(){return Q(this,Yl).size>0?lR(Q(this,Yl)):null}setAll(l){for(const[U,Z]of Object.entries(l))this.setValue(U,Z)}get size(){return Q(this,Yl).size}resetModified(){Q(this,Sd)&&(i(this,Sd,!1),typeof this.onResetModified=="function"&&this.onResetModified())}get print(){return new rN(this)}get serializable(){if(Q(this,Yl).size===0)return RR;const l=new Map,U=new ON,Z=[],d=Object.create(null);let F=!1;for(const[W,V]of Q(this,Yl)){const c=V instanceof H?V.serialize(!1,d):V;c&&(l.set(W,c),U.update(`${W}:${JSON.stringify(c)}`),F||(F=!!c.bitmap))}if(F)for(const W of l.values())W.bitmap&&Z.push(W.bitmap);return l.size>0?{map:l,hash:U.hexdigest(),transfer:Z}:RR}get editorStats(){let l=null;const U=new Map;for(const Z of Q(this,Yl).values()){if(!(Z instanceof H))continue;const d=Z.telemetryFinalData;if(!d)continue;const{type:F}=d;U.has(F)||U.set(F,Object.getPrototypeOf(Z).constructor),l||(l=Object.create(null));const W=l[F]||(l[F]=new Map);for(const[V,c]of Object.entries(d)){if(V==="type")continue;let t=W.get(V);t||(t=new Map,W.set(V,t));const N=t.get(c)??0;t.set(c,N+1)}}for(const[Z,d]of U)l[Z]=d.computeTelemetryFinalData(l[Z]);return l}}Sd=new WeakMap,Yl=new WeakMap,ec=new WeakSet,lb=function(){Q(this,Sd)||(i(this,Sd,!0),typeof this.onSetModified=="function"&&this.onSetModified())};class rN extends NR{constructor(U){super();a(this,wW,void 0);const{map:Z,hash:d,transfer:F}=U.serializable,W=structuredClone(Z,F?{transfer:F}:null);i(this,wW,{map:W,hash:d,transfer:F})}get print(){_("Should not call PrintAnnotationStorage.print")}get serializable(){return Q(this,wW)}}wW=new WeakMap;class Ma{constructor({ownerDocument:l=globalThis.document,styleElement:U=null}){a(this,uF,new Set);this._document=l,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(l){this.nativeFontFaces.add(l),this._document.fonts.add(l)}removeNativeFontFace(l){this.nativeFontFaces.delete(l),this._document.fonts.delete(l)}insertRule(l){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const U=this.styleElement.sheet;U.insertRule(l,U.cssRules.length)}clear(){for(const l of this.nativeFontFaces)this._document.fonts.delete(l);this.nativeFontFaces.clear(),Q(this,uF).clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont({systemFontInfo:l,_inspectFont:U}){if(!(!l||Q(this,uF).has(l.loadedName))){if(Rl(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:Z,src:d,style:F}=l,W=new FontFace(Z,d,F);this.addNativeFontFace(W);try{await W.load(),Q(this,uF).add(Z),U==null||U(l)}catch{x(`Cannot load system font: ${l.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(W)}return}_("Not implemented: loadSystemFont without the Font Loading API.")}}async bind(l){if(l.attached||l.missingFile&&!l.systemFontInfo)return;if(l.attached=!0,l.systemFontInfo){await this.loadSystemFont(l);return}if(this.isFontLoadingAPISupported){const Z=l.createNativeFontFace();if(Z){this.addNativeFontFace(Z);try{await Z.loaded}catch(d){throw x(`Failed to load font '${Z.family}': '${d}'.`),l.disableFontFace=!0,d}}return}const U=l.createFontFaceRule();if(U){if(this.insertRule(U),this.isSyncFontLoadingSupported)return;await new Promise(Z=>{const d=this._queueLoadingCallback(Z);this._prepareFontLoadEvent(l,d)})}}get isFontLoadingAPISupported(){var U;const l=!!((U=this._document)!=null&&U.fonts);return g(this,"isFontLoadingAPISupported",l)}get isSyncFontLoadingSupported(){let l=!1;return(hl||typeof navigator<"u"&&typeof(navigator==null?void 0:navigator.userAgent)=="string"&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(l=!0),g(this,"isSyncFontLoadingSupported",l)}_queueLoadingCallback(l){function U(){for(Rl(!d.done,"completeRequest() cannot be called twice."),d.done=!0;Z.length>0&&Z[0].done;){const F=Z.shift();setTimeout(F.callback,0)}}const{loadingRequests:Z}=this,d={done:!1,complete:U,callback:l};return Z.push(d),d}get _loadTestFont(){const l=atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");return g(this,"_loadTestFont",l)}_prepareFontLoadEvent(l,U){function Z(S,e){return S.charCodeAt(e)<<24|S.charCodeAt(e+1)<<16|S.charCodeAt(e+2)<<8|S.charCodeAt(e+3)&255}function d(S,e,Y,B){const p=S.substring(0,e),z=S.substring(e+Y);return p+B+z}let F,W;const V=this._document.createElement("canvas");V.width=1,V.height=1;const c=V.getContext("2d");let t=0;function N(S,e){if(++t>30){x("Load test font never loaded."),e();return}if(c.font="30px "+S,c.fillText(".",0,20),c.getImageData(0,0,1,1).data[3]>0){e();return}setTimeout(N.bind(null,S,e))}const s=`lt${Date.now()}${this.loadTestFontId++}`;let b=this._loadTestFont;b=d(b,976,s.length,s);const h=16,M=1482184792;let G=Z(b,h);for(F=0,W=s.length-3;F<W;F+=4)G=G-M+Z(s,F)|0;F<s.length&&(G=G-M+Z(s+"XXX",F)|0),b=d(b,h,4,Za(G));const J=`url(data:font/opentype;base64,${btoa(b)});`,T=`@font-face {font-family:"${s}";src:${J}}`;this.insertRule(T);const X=this._document.createElement("div");X.style.visibility="hidden",X.style.width=X.style.height="10px",X.style.position="absolute",X.style.top=X.style.left="0px";for(const S of[l.loadedName,s]){const e=this._document.createElement("span");e.textContent="Hi",e.style.fontFamily=S,X.append(e)}this._document.body.append(X),N(s,()=>{X.remove(),U.complete()})}}uF=new WeakMap;class Ja{constructor(l,{disableFontFace:U=!1,inspectFont:Z=null}){this.compiledGlyphs=Object.create(null);for(const d in l)this[d]=l[d];this.disableFontFace=U===!0,this._inspectFont=Z}createNativeFontFace(){var U;if(!this.data||this.disableFontFace)return null;let l;if(!this.cssFontInfo)l=new FontFace(this.loadedName,this.data,{});else{const Z={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(Z.style=`oblique ${this.cssFontInfo.italicAngle}deg`),l=new FontFace(this.cssFontInfo.fontFamily,this.data,Z)}return(U=this._inspectFont)==null||U.call(this,this),l}createFontFaceRule(){var d;if(!this.data||this.disableFontFace)return null;const l=kN(this.data),U=`url(data:${this.mimetype};base64,${btoa(l)});`;let Z;if(!this.cssFontInfo)Z=`@font-face {font-family:"${this.loadedName}";src:${U}}`;else{let F=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(F+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),Z=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${F}src:${U}}`}return(d=this._inspectFont)==null||d.call(this,this,U),Z}getPathGenerator(l,U){if(this.compiledGlyphs[U]!==void 0)return this.compiledGlyphs[U];let Z;try{Z=l.get(this.loadedName+"_path_"+U)}catch(F){x(`getPathGenerator - ignoring character: "${F}".`)}if(!Array.isArray(Z)||Z.length===0)return this.compiledGlyphs[U]=function(F,W){};const d=[];for(let F=0,W=Z.length;F<W;)switch(Z[F++]){case jU.BEZIER_CURVE_TO:{const[V,c,t,N,s,b]=Z.slice(F,F+6);d.push(n=>n.bezierCurveTo(V,c,t,N,s,b)),F+=6}break;case jU.MOVE_TO:{const[V,c]=Z.slice(F,F+2);d.push(t=>t.moveTo(V,c)),F+=2}break;case jU.LINE_TO:{const[V,c]=Z.slice(F,F+2);d.push(t=>t.lineTo(V,c)),F+=2}break;case jU.QUADRATIC_CURVE_TO:{const[V,c,t,N]=Z.slice(F,F+4);d.push(s=>s.quadraticCurveTo(V,c,t,N)),F+=4}break;case jU.RESTORE:d.push(V=>V.restore());break;case jU.SAVE:d.push(V=>V.save());break;case jU.SCALE:Rl(d.length===2,"Scale command is only valid at the third position.");break;case jU.TRANSFORM:{const[V,c,t,N,s,b]=Z.slice(F,F+6);d.push(n=>n.transform(V,c,t,N,s,b)),F+=6}break;case jU.TRANSLATE:{const[V,c]=Z.slice(F,F+2);d.push(t=>t.translate(V,c)),F+=2}break}return this.compiledGlyphs[U]=function(W,V){d[0](W),d[1](W),W.scale(V,-V);for(let c=2,t=d.length;c<t;c++)d[c](W)}}}if(hl){var sR=Promise.withResolvers(),E0=null;(async()=>{const l=await Promise.resolve().then(()=>fV),U=await Promise.resolve().then(()=>fV),Z=await Promise.resolve().then(()=>fV),d=await Promise.resolve().then(()=>fV);let F,W;return new Map(Object.entries({fs:l,http:U,https:Z,url:d,canvas:F,path2d:W}))})().then(l=>{E0=l,sR.resolve()},l=>{x(`loadPackages: ${l}`),E0=new Map,sR.resolve()})}class GU{static get promise(){return sR.promise}static get(l){return E0==null?void 0:E0.get(l)}}const KN=function(R){return GU.get("fs").promises.readFile(R).then(U=>new Uint8Array(U))};class Ga extends eV{}class Ta extends pV{_createCanvas(l,U){return GU.get("canvas").createCanvas(l,U)}}class Xa extends uV{_fetchData(l,U){return KN(l).then(Z=>({cMapData:Z,compressionType:U}))}}class Ya extends yV{_fetchData(l){return KN(l)}}const ol={FILL:"Fill",STROKE:"Stroke",SHADING:"Shading"};function bR(R,l){if(!l)return;const U=l[2]-l[0],Z=l[3]-l[1],d=new Path2D;d.rect(l[0],l[1],U,Z),R.clip(d)}class C0{constructor(){this.constructor===C0&&_("Cannot initialize BaseShadingPattern.")}getPattern(){_("Abstract method `getPattern` called.")}}class Sa extends C0{constructor(l){super(),this._type=l[1],this._bbox=l[2],this._colorStops=l[3],this._p0=l[4],this._p1=l[5],this._r0=l[6],this._r1=l[7],this.matrix=null}_createGradient(l){let U;this._type==="axial"?U=l.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):this._type==="radial"&&(U=l.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const Z of this._colorStops)U.addColorStop(Z[0],Z[1]);return U}getPattern(l,U,Z,d){let F;if(d===ol.STROKE||d===ol.FILL){const W=U.current.getClippedPathBoundingBox(d,ll(l))||[0,0,0,0],V=Math.ceil(W[2]-W[0])||1,c=Math.ceil(W[3]-W[1])||1,t=U.cachedCanvases.getCanvas("pattern",V,c,!0),N=t.context;N.clearRect(0,0,N.canvas.width,N.canvas.height),N.beginPath(),N.rect(0,0,N.canvas.width,N.canvas.height),N.translate(-W[0],-W[1]),Z=y.transform(Z,[1,0,0,1,W[0],W[1]]),N.transform(...U.baseTransform),this.matrix&&N.transform(...this.matrix),bR(N,this._bbox),N.fillStyle=this._createGradient(N),N.fill(),F=l.createPattern(t.canvas,"no-repeat");const s=new DOMMatrix(Z);F.setTransform(s)}else bR(l,this._bbox),F=this._createGradient(l);return F}}function aR(R,l,U,Z,d,F,W,V){const c=l.coords,t=l.colors,N=R.data,s=R.width*4;let b;c[U+1]>c[Z+1]&&(b=U,U=Z,Z=b,b=F,F=W,W=b),c[Z+1]>c[d+1]&&(b=Z,Z=d,d=b,b=W,W=V,V=b),c[U+1]>c[Z+1]&&(b=U,U=Z,Z=b,b=F,F=W,W=b);const n=(c[U]+l.offsetX)*l.scaleX,h=(c[U+1]+l.offsetY)*l.scaleY,M=(c[Z]+l.offsetX)*l.scaleX,G=(c[Z+1]+l.offsetY)*l.scaleY,J=(c[d]+l.offsetX)*l.scaleX,T=(c[d+1]+l.offsetY)*l.scaleY;if(h>=T)return;const X=t[F],S=t[F+1],e=t[F+2],Y=t[W],B=t[W+1],p=t[W+2],z=t[V],C=t[V+1],L=t[V+2],v=Math.round(h),r=Math.round(T);let P,f,dl,o,w,Y0,et,S0;for(let _l=v;_l<=r;_l++){if(_l<G){const Fl=_l<h?0:(h-_l)/(h-G);P=n-(n-M)*Fl,f=X-(X-Y)*Fl,dl=S-(S-B)*Fl,o=e-(e-p)*Fl}else{let Fl;_l>T?Fl=1:G===T?Fl=0:Fl=(G-_l)/(G-T),P=M-(M-J)*Fl,f=Y-(Y-z)*Fl,dl=B-(B-C)*Fl,o=p-(p-L)*Fl}let pl;_l<h?pl=0:_l>T?pl=1:pl=(h-_l)/(h-T),w=n-(n-J)*pl,Y0=X-(X-z)*pl,et=S-(S-C)*pl,S0=e-(e-L)*pl;const PZ=Math.round(Math.min(P,w)),zR=Math.round(Math.max(P,w));let AZ=s*_l+PZ*4;for(let Fl=PZ;Fl<=zR;Fl++)pl=(P-Fl)/(P-w),pl<0?pl=0:pl>1&&(pl=1),N[AZ++]=f-(f-Y0)*pl|0,N[AZ++]=dl-(dl-et)*pl|0,N[AZ++]=o-(o-S0)*pl|0,N[AZ++]=255}}function Ba(R,l,U){const Z=l.coords,d=l.colors;let F,W;switch(l.type){case"lattice":const V=l.verticesPerRow,c=Math.floor(Z.length/V)-1,t=V-1;for(F=0;F<c;F++){let N=F*V;for(let s=0;s<t;s++,N++)aR(R,U,Z[N],Z[N+1],Z[N+V],d[N],d[N+1],d[N+V]),aR(R,U,Z[N+V+1],Z[N+1],Z[N+V],d[N+V+1],d[N+1],d[N+V])}break;case"triangles":for(F=0,W=Z.length;F<W;F+=3)aR(R,U,Z[F],Z[F+1],Z[F+2],d[F],d[F+1],d[F+2]);break;default:throw new Error("illegal figure")}}class ea extends C0{constructor(l){super(),this._coords=l[2],this._colors=l[3],this._figures=l[4],this._bounds=l[5],this._bbox=l[7],this._background=l[8],this.matrix=null}_createMeshCanvas(l,U,Z){const V=Math.floor(this._bounds[0]),c=Math.floor(this._bounds[1]),t=Math.ceil(this._bounds[2])-V,N=Math.ceil(this._bounds[3])-c,s=Math.min(Math.ceil(Math.abs(t*l[0]*1.1)),3e3),b=Math.min(Math.ceil(Math.abs(N*l[1]*1.1)),3e3),n=t/s,h=N/b,M={coords:this._coords,colors:this._colors,offsetX:-V,offsetY:-c,scaleX:1/n,scaleY:1/h},G=s+2*2,J=b+2*2,T=Z.getCanvas("mesh",G,J,!1),X=T.context,S=X.createImageData(s,b);if(U){const Y=S.data;for(let B=0,p=Y.length;B<p;B+=4)Y[B]=U[0],Y[B+1]=U[1],Y[B+2]=U[2],Y[B+3]=255}for(const Y of this._figures)Ba(S,Y,M);return X.putImageData(S,2,2),{canvas:T.canvas,offsetX:V-2*n,offsetY:c-2*h,scaleX:n,scaleY:h}}getPattern(l,U,Z,d){bR(l,this._bbox);let F;if(d===ol.SHADING)F=y.singularValueDecompose2dScale(ll(l));else if(F=y.singularValueDecompose2dScale(U.baseTransform),this.matrix){const V=y.singularValueDecompose2dScale(this.matrix);F=[F[0]*V[0],F[1]*V[1]]}const W=this._createMeshCanvas(F,d===ol.SHADING?null:this._background,U.cachedCanvases);return d!==ol.SHADING&&(l.setTransform(...U.baseTransform),this.matrix&&l.transform(...this.matrix)),l.translate(W.offsetX,W.offsetY),l.scale(W.scaleX,W.scaleY),l.createPattern(W.canvas,"no-repeat")}}class pa extends C0{getPattern(){return"hotpink"}}function ua(R){switch(R[0]){case"RadialAxial":return new Sa(R);case"Mesh":return new ea(R);case"Dummy":return new pa}throw new Error(`Unknown IR type: ${R[0]}`)}const gN={COLORED:1,UNCOLORED:2},eR=class{constructor(l,U,Z,d,F){this.operatorList=l[2],this.matrix=l[3],this.bbox=l[4],this.xstep=l[5],this.ystep=l[6],this.paintType=l[7],this.tilingType=l[8],this.color=U,this.ctx=Z,this.canvasGraphicsFactory=d,this.baseTransform=F}createPatternCanvas(l){const U=this.operatorList,Z=this.bbox,d=this.xstep,F=this.ystep,W=this.paintType,V=this.tilingType,c=this.color,t=this.canvasGraphicsFactory;YV("TilingType: "+V);const N=Z[0],s=Z[1],b=Z[2],n=Z[3],h=y.singularValueDecompose2dScale(this.matrix),M=y.singularValueDecompose2dScale(this.baseTransform),G=[h[0]*M[0],h[1]*M[1]],J=this.getSizeAndScale(d,this.ctx.canvas.width,G[0]),T=this.getSizeAndScale(F,this.ctx.canvas.height,G[1]),X=l.cachedCanvases.getCanvas("pattern",J.size,T.size,!0),S=X.context,e=t.createCanvasGraphics(S);e.groupLevel=l.groupLevel,this.setFillAndStrokeStyleToContext(e,W,c);let Y=N,B=s,p=b,z=n;return N<0&&(Y=0,p+=Math.abs(N)),s<0&&(B=0,z+=Math.abs(s)),S.translate(-(J.scale*Y),-(T.scale*B)),e.transform(J.scale,0,0,T.scale,0,0),S.save(),this.clipBbox(e,Y,B,p,z),e.baseTransform=ll(e.ctx),e.executeOperatorList(U),e.endDrawing(),{canvas:X.canvas,scaleX:J.scale,scaleY:T.scale,offsetX:Y,offsetY:B}}getSizeAndScale(l,U,Z){l=Math.abs(l);const d=Math.max(eR.MAX_PATTERN_SIZE,U);let F=Math.ceil(l*Z);return F>=d?F=d:Z=F/l,{scale:Z,size:F}}clipBbox(l,U,Z,d,F){const W=d-U,V=F-Z;l.ctx.rect(U,Z,W,V),l.current.updateRectMinMax(ll(l.ctx),[U,Z,d,F]),l.clip(),l.endPath()}setFillAndStrokeStyleToContext(l,U,Z){const d=l.ctx,F=l.current;switch(U){case gN.COLORED:const W=this.ctx;d.fillStyle=W.fillStyle,d.strokeStyle=W.strokeStyle,F.fillColor=W.fillStyle,F.strokeColor=W.strokeStyle;break;case gN.UNCOLORED:const V=y.makeHexColor(Z[0],Z[1],Z[2]);d.fillStyle=V,d.strokeStyle=V,F.fillColor=V,F.strokeColor=V;break;default:throw new Ua(`Unsupported paint type: ${U}`)}}getPattern(l,U,Z,d){let F=Z;d!==ol.SHADING&&(F=y.transform(F,U.baseTransform),this.matrix&&(F=y.transform(F,this.matrix)));const W=this.createPatternCanvas(U);let V=new DOMMatrix(F);V=V.translate(W.offsetX,W.offsetY),V=V.scale(1/W.scaleX,1/W.scaleY);const c=l.createPattern(W.canvas,"repeat");return c.setTransform(V),c}};let DV=eR;E(DV,"MAX_PATTERN_SIZE",3e3);function ya({src:R,srcPos:l=0,dest:U,width:Z,height:d,nonBlackColor:F=4294967295,inverseDecode:W=!1}){const V=xl.isLittleEndian?4278190080:255,[c,t]=W?[F,V]:[V,F],N=Z>>3,s=Z&7,b=R.length;U=new Uint32Array(U.buffer);let n=0;for(let h=0;h<d;h++){for(const G=l+N;l<G;l++){const J=l<b?R[l]:255;U[n++]=J&128?t:c,U[n++]=J&64?t:c,U[n++]=J&32?t:c,U[n++]=J&16?t:c,U[n++]=J&8?t:c,U[n++]=J&4?t:c,U[n++]=J&2?t:c,U[n++]=J&1?t:c}if(s===0)continue;const M=l<b?R[l++]:255;for(let G=0;G<s;G++)U[n++]=M&1<<7-G?t:c}return{srcPos:l,destPos:n}}const HN=16,vN=100,La=15,PN=10,AN=1e3,Ol=16;function za(R,l){if(R._removeMirroring)throw new Error("Context is already forwarding operations.");R.__originalSave=R.save,R.__originalRestore=R.restore,R.__originalRotate=R.rotate,R.__originalScale=R.scale,R.__originalTranslate=R.translate,R.__originalTransform=R.transform,R.__originalSetTransform=R.setTransform,R.__originalResetTransform=R.resetTransform,R.__originalClip=R.clip,R.__originalMoveTo=R.moveTo,R.__originalLineTo=R.lineTo,R.__originalBezierCurveTo=R.bezierCurveTo,R.__originalRect=R.rect,R.__originalClosePath=R.closePath,R.__originalBeginPath=R.beginPath,R._removeMirroring=()=>{R.save=R.__originalSave,R.restore=R.__originalRestore,R.rotate=R.__originalRotate,R.scale=R.__originalScale,R.translate=R.__originalTranslate,R.transform=R.__originalTransform,R.setTransform=R.__originalSetTransform,R.resetTransform=R.__originalResetTransform,R.clip=R.__originalClip,R.moveTo=R.__originalMoveTo,R.lineTo=R.__originalLineTo,R.bezierCurveTo=R.__originalBezierCurveTo,R.rect=R.__originalRect,R.closePath=R.__originalClosePath,R.beginPath=R.__originalBeginPath,delete R._removeMirroring},R.save=function(){l.save(),this.__originalSave()},R.restore=function(){l.restore(),this.__originalRestore()},R.translate=function(Z,d){l.translate(Z,d),this.__originalTranslate(Z,d)},R.scale=function(Z,d){l.scale(Z,d),this.__originalScale(Z,d)},R.transform=function(Z,d,F,W,V,c){l.transform(Z,d,F,W,V,c),this.__originalTransform(Z,d,F,W,V,c)},R.setTransform=function(Z,d,F,W,V,c){l.setTransform(Z,d,F,W,V,c),this.__originalSetTransform(Z,d,F,W,V,c)},R.resetTransform=function(){l.resetTransform(),this.__originalResetTransform()},R.rotate=function(Z){l.rotate(Z),this.__originalRotate(Z)},R.clip=function(Z){l.clip(Z),this.__originalClip(Z)},R.moveTo=function(U,Z){l.moveTo(U,Z),this.__originalMoveTo(U,Z)},R.lineTo=function(U,Z){l.lineTo(U,Z),this.__originalLineTo(U,Z)},R.bezierCurveTo=function(U,Z,d,F,W,V){l.bezierCurveTo(U,Z,d,F,W,V),this.__originalBezierCurveTo(U,Z,d,F,W,V)},R.rect=function(U,Z,d,F){l.rect(U,Z,d,F),this.__originalRect(U,Z,d,F)},R.closePath=function(){l.closePath(),this.__originalClosePath()},R.beginPath=function(){l.beginPath(),this.__originalBeginPath()}}class ka{constructor(l){this.canvasFactory=l,this.cache=Object.create(null)}getCanvas(l,U,Z){let d;return this.cache[l]!==void 0?(d=this.cache[l],this.canvasFactory.reset(d,U,Z)):(d=this.canvasFactory.create(U,Z),this.cache[l]=d),d}delete(l){delete this.cache[l]}clear(){for(const l in this.cache){const U=this.cache[l];this.canvasFactory.destroy(U),delete this.cache[l]}}}function IV(R,l,U,Z,d,F,W,V,c,t){const[N,s,b,n,h,M]=ll(R);if(s===0&&b===0){const T=W*N+h,X=Math.round(T),S=V*n+M,e=Math.round(S),Y=(W+c)*N+h,B=Math.abs(Math.round(Y)-X)||1,p=(V+t)*n+M,z=Math.abs(Math.round(p)-e)||1;return R.setTransform(Math.sign(N),0,0,Math.sign(n),X,e),R.drawImage(l,U,Z,d,F,0,0,B,z),R.setTransform(N,s,b,n,h,M),[B,z]}if(N===0&&n===0){const T=V*b+h,X=Math.round(T),S=W*s+M,e=Math.round(S),Y=(V+t)*b+h,B=Math.abs(Math.round(Y)-X)||1,p=(W+c)*s+M,z=Math.abs(Math.round(p)-e)||1;return R.setTransform(0,Math.sign(s),Math.sign(b),0,X,e),R.drawImage(l,U,Z,d,F,0,0,z,B),R.setTransform(N,s,b,n,h,M),[z,B]}R.drawImage(l,U,Z,d,F,W,V,c,t);const G=Math.hypot(N,s),J=Math.hypot(b,n);return[G*c,J*t]}function oa(R){const{width:l,height:U}=R;if(l>AN||U>AN)return null;const Z=1e3,d=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),F=l+1;let W=new Uint8Array(F*(U+1)),V,c,t;const N=l+7&-8;let s=new Uint8Array(N*U),b=0;for(const J of R.data){let T=128;for(;T>0;)s[b++]=J&T?0:255,T>>=1}let n=0;for(b=0,s[b]!==0&&(W[0]=1,++n),c=1;c<l;c++)s[b]!==s[b+1]&&(W[c]=s[b]?2:1,++n),b++;for(s[b]!==0&&(W[c]=2,++n),V=1;V<U;V++){b=V*N,t=V*F,s[b-N]!==s[b]&&(W[t]=s[b]?1:8,++n);let J=(s[b]?4:0)+(s[b-N]?8:0);for(c=1;c<l;c++)J=(J>>2)+(s[b+1]?4:0)+(s[b-N+1]?8:0),d[J]&&(W[t+c]=d[J],++n),b++;if(s[b-N]!==s[b]&&(W[t+c]=s[b]?2:4,++n),n>Z)return null}for(b=N*(U-1),t=V*F,s[b]!==0&&(W[t]=8,++n),c=1;c<l;c++)s[b]!==s[b+1]&&(W[t+c]=s[b]?4:8,++n),b++;if(s[b]!==0&&(W[t+c]=4,++n),n>Z)return null;const h=new Int32Array([0,F,-1,0,-F,0,0,0,1]),M=new Path2D;for(V=0;n&&V<=U;V++){let J=V*F;const T=J+l;for(;J<T&&!W[J];)J++;if(J===T)continue;M.moveTo(J%F,V);const X=J;let S=W[J];do{const e=h[S];do J+=e;while(!W[J]);const Y=W[J];Y!==5&&Y!==10?(S=Y,W[J]=0):(S=Y&51*S>>4,W[J]&=S>>2|S<<2),M.lineTo(J%F,J/F|0),W[J]||--n}while(X!==J);--V}return s=null,W=null,function(J){J.save(),J.scale(1/l,-1/U),J.translate(0,-U),J.fill(M),J.beginPath(),J.restore()}}class fN{constructor(l,U){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=LN,this.textMatrixScale=1,this.fontMatrix=At,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=ul.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,l,U])}clone(){const l=Object.create(this);return l.clipBox=this.clipBox.slice(),l}setCurrentPoint(l,U){this.x=l,this.y=U}updatePathMinMax(l,U,Z){[U,Z]=y.applyTransform([U,Z],l),this.minX=Math.min(this.minX,U),this.minY=Math.min(this.minY,Z),this.maxX=Math.max(this.maxX,U),this.maxY=Math.max(this.maxY,Z)}updateRectMinMax(l,U){const Z=y.applyTransform(U,l),d=y.applyTransform(U.slice(2),l),F=y.applyTransform([U[0],U[3]],l),W=y.applyTransform([U[2],U[1]],l);this.minX=Math.min(this.minX,Z[0],d[0],F[0],W[0]),this.minY=Math.min(this.minY,Z[1],d[1],F[1],W[1]),this.maxX=Math.max(this.maxX,Z[0],d[0],F[0],W[0]),this.maxY=Math.max(this.maxY,Z[1],d[1],F[1],W[1])}updateScalingPathMinMax(l,U){y.scaleMinMax(l,U),this.minX=Math.min(this.minX,U[0]),this.minY=Math.min(this.minY,U[1]),this.maxX=Math.max(this.maxX,U[2]),this.maxY=Math.max(this.maxY,U[3])}updateCurvePathMinMax(l,U,Z,d,F,W,V,c,t,N){const s=y.bezierBoundingBox(U,Z,d,F,W,V,c,t,N);N||this.updateRectMinMax(l,s)}getPathBoundingBox(l=ol.FILL,U=null){const Z=[this.minX,this.minY,this.maxX,this.maxY];if(l===ol.STROKE){U||_("Stroke bounding box must include transform.");const d=y.singularValueDecompose2dScale(U),F=d[0]*this.lineWidth/2,W=d[1]*this.lineWidth/2;Z[0]-=F,Z[1]-=W,Z[2]+=F,Z[3]+=W}return Z}updateClipFromPath(){const l=y.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(l||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(l){this.clipBox=l,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(l=ol.FILL,U=null){return y.intersect(this.clipBox,this.getPathBoundingBox(l,U))}}function _N(R,l){if(typeof ImageData<"u"&&l instanceof ImageData){R.putImageData(l,0,0);return}const U=l.height,Z=l.width,d=U%Ol,F=(U-d)/Ol,W=d===0?F:F+1,V=R.createImageData(Z,Ol);let c=0,t;const N=l.data,s=V.data;let b,n,h,M;if(l.kind===GV.GRAYSCALE_1BPP){const G=N.byteLength,J=new Uint32Array(s.buffer,0,s.byteLength>>2),T=J.length,X=Z+7>>3,S=4294967295,e=xl.isLittleEndian?4278190080:255;for(b=0;b<W;b++){for(h=b<F?Ol:d,t=0,n=0;n<h;n++){const Y=G-c;let B=0;const p=Y>X?Z:Y*8-7,z=p&-8;let C=0,L=0;for(;B<z;B+=8)L=N[c++],J[t++]=L&128?S:e,J[t++]=L&64?S:e,J[t++]=L&32?S:e,J[t++]=L&16?S:e,J[t++]=L&8?S:e,J[t++]=L&4?S:e,J[t++]=L&2?S:e,J[t++]=L&1?S:e;for(;B<p;B++)C===0&&(L=N[c++],C=128),J[t++]=L&C?S:e,C>>=1}for(;t<T;)J[t++]=0;R.putImageData(V,0,b*Ol)}}else if(l.kind===GV.RGBA_32BPP){for(n=0,M=Z*Ol*4,b=0;b<F;b++)s.set(N.subarray(c,c+M)),c+=M,R.putImageData(V,0,n),n+=Ol;b<W&&(M=Z*d*4,s.set(N.subarray(c,c+M)),R.putImageData(V,0,n))}else if(l.kind===GV.RGB_24BPP)for(h=Ol,M=Z*h,b=0;b<W;b++){for(b>=F&&(h=d,M=Z*h),t=0,n=M;n--;)s[t++]=N[c++],s[t++]=N[c++],s[t++]=N[c++],s[t++]=255;R.putImageData(V,0,b*Ol)}else throw new Error(`bad image kind: ${l.kind}`)}function qN(R,l){if(l.bitmap){R.drawImage(l.bitmap,0,0);return}const U=l.height,Z=l.width,d=U%Ol,F=(U-d)/Ol,W=d===0?F:F+1,V=R.createImageData(Z,Ol);let c=0;const t=l.data,N=V.data;for(let s=0;s<W;s++){const b=s<F?Ol:d;({srcPos:c}=ya({src:t,srcPos:c,dest:N,width:Z,height:b,nonBlackColor:0})),R.putImageData(V,0,s*Ol)}}function w0(R,l){const U=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const Z of U)R[Z]!==void 0&&(l[Z]=R[Z]);R.setLineDash!==void 0&&(l.setLineDash(R.getLineDash()),l.lineDashOffset=R.lineDashOffset)}function EV(R){if(R.strokeStyle=R.fillStyle="#000000",R.fillRule="nonzero",R.globalAlpha=1,R.lineWidth=1,R.lineCap="butt",R.lineJoin="miter",R.miterLimit=10,R.globalCompositeOperation="source-over",R.font="10px sans-serif",R.setLineDash!==void 0&&(R.setLineDash([]),R.lineDashOffset=0),!hl){const{filter:l}=R;l!=="none"&&l!==""&&(R.filter="none")}}function $N(R,l){if(l)return!0;const U=y.singularValueDecompose2dScale(R);U[0]=Math.fround(U[0]),U[1]=Math.fround(U[1]);const Z=Math.fround((globalThis.devicePixelRatio||1)*QU.PDF_TO_CSS_UNITS);return U[0]<=Z&&U[1]<=Z}const Da=["butt","round","square"],Ia=["miter","round","bevel"],Ea={},ls={},pR=class{constructor(l,U,Z,d,F,{optionalContentConfig:W,markedContentStack:V=null},c,t){a(this,xW);a(this,jW);this.ctx=l,this.current=new fN(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=U,this.objs=Z,this.canvasFactory=d,this.filterFactory=F,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=V||[],this.optionalContentConfig=W,this.cachedCanvases=new ka(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=c,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=t,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(l,U=null){return typeof l=="string"?l.startsWith("g_")?this.commonObjs.get(l):this.objs.get(l):U}beginDrawing({transform:l,viewport:U,transparency:Z=!1,background:d=null}){const F=this.ctx.canvas.width,W=this.ctx.canvas.height,V=this.ctx.fillStyle;if(this.ctx.fillStyle=d||"#ffffff",this.ctx.fillRect(0,0,F,W),this.ctx.fillStyle=V,Z){const c=this.cachedCanvases.getCanvas("transparent",F,W);this.compositeCtx=this.ctx,this.transparentCanvas=c.canvas,this.ctx=c.context,this.ctx.save(),this.ctx.transform(...ll(this.compositeCtx))}this.ctx.save(),EV(this.ctx),l&&(this.ctx.transform(...l),this.outputScaleX=l[0],this.outputScaleY=l[0]),this.ctx.transform(...U.transform),this.viewportScale=U.scale,this.baseTransform=ll(this.ctx)}executeOperatorList(l,U,Z,d){const F=l.argsArray,W=l.fnArray;let V=U||0;const c=F.length;if(c===V)return V;const t=c-V>PN&&typeof Z=="function",N=t?Date.now()+La:0;let s=0;const b=this.commonObjs,n=this.objs;let h;for(;;){if(d!==void 0&&V===d.nextBreakPoint)return d.breakIt(V,Z),V;if(h=W[V],h!==WU.dependency)this[h].apply(this,F[V]);else for(const M of F[V]){const G=M.startsWith("g_")?b:n;if(!G.has(M))return G.get(M,Z),V}if(V++,V===c)return V;if(t&&++s>PN){if(Date.now()>N)return Z(),V;s=0}}}endDrawing(){m(this,xW,UN).call(this),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const l of this._cachedBitmapsMap.values()){for(const U of l.values())typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement&&(U.width=U.height=0);l.clear()}this._cachedBitmapsMap.clear(),m(this,jW,ZN).call(this)}_scaleImage(l,U){const Z=l.width,d=l.height;let F=Math.max(Math.hypot(U[0],U[1]),1),W=Math.max(Math.hypot(U[2],U[3]),1),V=Z,c=d,t="prescale1",N,s;for(;F>2&&V>1||W>2&&c>1;){let b=V,n=c;F>2&&V>1&&(b=V>=16384?Math.floor(V/2)-1||1:Math.ceil(V/2),F/=V/b),W>2&&c>1&&(n=c>=16384?Math.floor(c/2)-1||1:Math.ceil(c)/2,W/=c/n),N=this.cachedCanvases.getCanvas(t,b,n),s=N.context,s.clearRect(0,0,b,n),s.drawImage(l,0,0,V,c,0,0,b,n),l=N.canvas,V=b,c=n,t=t==="prescale1"?"prescale2":"prescale1"}return{img:l,paintWidth:V,paintHeight:c}}_createMaskCanvas(l){const U=this.ctx,{width:Z,height:d}=l,F=this.current.fillColor,W=this.current.patternFill,V=ll(U);let c,t,N,s;if((l.bitmap||l.data)&&l.count>1){const p=l.bitmap||l.data.buffer;t=JSON.stringify(W?V:[V.slice(0,4),F]),c=this._cachedBitmapsMap.get(p),c||(c=new Map,this._cachedBitmapsMap.set(p,c));const z=c.get(t);if(z&&!W){const C=Math.round(Math.min(V[0],V[2])+V[4]),L=Math.round(Math.min(V[1],V[3])+V[5]);return{canvas:z,offsetX:C,offsetY:L}}N=z}N||(s=this.cachedCanvases.getCanvas("maskCanvas",Z,d),qN(s.context,l));let b=y.transform(V,[1/Z,0,0,-1/d,0,0]);b=y.transform(b,[1,0,0,1,0,-d]);const[n,h,M,G]=y.getAxialAlignedBoundingBox([0,0,Z,d],b),J=Math.round(M-n)||1,T=Math.round(G-h)||1,X=this.cachedCanvases.getCanvas("fillCanvas",J,T),S=X.context,e=n,Y=h;S.translate(-e,-Y),S.transform(...b),N||(N=this._scaleImage(s.canvas,rU(S)),N=N.img,c&&W&&c.set(t,N)),S.imageSmoothingEnabled=$N(ll(S),l.interpolate),IV(S,N,0,0,N.width,N.height,0,0,Z,d),S.globalCompositeOperation="source-in";const B=y.transform(rU(S),[1,0,0,1,-e,-Y]);return S.fillStyle=W?F.getPattern(U,this,B,ol.FILL):F,S.fillRect(0,0,Z,d),c&&!W&&(this.cachedCanvases.delete("fillCanvas"),c.set(t,X.canvas)),{canvas:X.canvas,offsetX:Math.round(e),offsetY:Math.round(Y)}}setLineWidth(l){l!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=l,this.ctx.lineWidth=l}setLineCap(l){this.ctx.lineCap=Da[l]}setLineJoin(l){this.ctx.lineJoin=Ia[l]}setMiterLimit(l){this.ctx.miterLimit=l}setDash(l,U){const Z=this.ctx;Z.setLineDash!==void 0&&(Z.setLineDash(l),Z.lineDashOffset=U)}setRenderingIntent(l){}setFlatness(l){}setGState(l){for(const[U,Z]of l)switch(U){case"LW":this.setLineWidth(Z);break;case"LC":this.setLineCap(Z);break;case"LJ":this.setLineJoin(Z);break;case"ML":this.setMiterLimit(Z);break;case"D":this.setDash(Z[0],Z[1]);break;case"RI":this.setRenderingIntent(Z);break;case"FL":this.setFlatness(Z);break;case"Font":this.setFont(Z[0],Z[1]);break;case"CA":this.current.strokeAlpha=Z;break;case"ca":this.current.fillAlpha=Z,this.ctx.globalAlpha=Z;break;case"BM":this.ctx.globalCompositeOperation=Z;break;case"SMask":this.current.activeSMask=Z?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(Z);break}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const l=this.inSMaskMode;this.current.activeSMask&&!l?this.beginSMaskMode():!this.current.activeSMask&&l&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const l=this.ctx.canvas.width,U=this.ctx.canvas.height,Z="smaskGroupAt"+this.groupLevel,d=this.cachedCanvases.getCanvas(Z,l,U);this.suspendedCtx=this.ctx,this.ctx=d.context;const F=this.ctx;F.setTransform(...ll(this.suspendedCtx)),w0(this.suspendedCtx,F),za(F,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),w0(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(l){if(!this.current.activeSMask)return;l?(l[0]=Math.floor(l[0]),l[1]=Math.floor(l[1]),l[2]=Math.ceil(l[2]),l[3]=Math.ceil(l[3])):l=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const U=this.current.activeSMask,Z=this.suspendedCtx;this.composeSMask(Z,U,this.ctx,l),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}composeSMask(l,U,Z,d){const F=d[0],W=d[1],V=d[2]-F,c=d[3]-W;V===0||c===0||(this.genericComposeSMask(U.context,Z,V,c,U.subtype,U.backdrop,U.transferMap,F,W,U.offsetX,U.offsetY),l.save(),l.globalAlpha=1,l.globalCompositeOperation="source-over",l.setTransform(1,0,0,1,0,0),l.drawImage(Z.canvas,0,0),l.restore())}genericComposeSMask(l,U,Z,d,F,W,V,c,t,N,s){let b=l.canvas,n=c-N,h=t-s;if(W){if(n<0||h<0||n+Z>b.width||h+d>b.height){const G=this.cachedCanvases.getCanvas("maskExtension",Z,d),J=G.context;J.drawImage(b,-n,-h),W.some(T=>T!==0)&&(J.globalCompositeOperation="destination-atop",J.fillStyle=y.makeHexColor(...W),J.fillRect(0,0,Z,d),J.globalCompositeOperation="source-over"),b=G.canvas,n=h=0}else if(W.some(G=>G!==0)){l.save(),l.globalAlpha=1,l.setTransform(1,0,0,1,0,0);const G=new Path2D;G.rect(n,h,Z,d),l.clip(G),l.globalCompositeOperation="destination-atop",l.fillStyle=y.makeHexColor(...W),l.fillRect(n,h,Z,d),l.restore()}}U.save(),U.globalAlpha=1,U.setTransform(1,0,0,1,0,0),F==="Alpha"&&V?U.filter=this.filterFactory.addAlphaFilter(V):F==="Luminosity"&&(U.filter=this.filterFactory.addLuminosityFilter(V));const M=new Path2D;M.rect(c,t,Z,d),U.clip(M),U.globalCompositeOperation="destination-in",U.drawImage(b,n,h,Z,d,c,t,Z,d),U.restore()}save(){this.inSMaskMode?(w0(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const l=this.current;this.stateStack.push(l),this.current=l.clone()}restore(){this.stateStack.length===0&&this.inSMaskMode&&this.endSMaskMode(),this.stateStack.length!==0&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),w0(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(l,U,Z,d,F,W){this.ctx.transform(l,U,Z,d,F,W),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(l,U,Z){const d=this.ctx,F=this.current;let W=F.x,V=F.y,c,t;const N=ll(d),s=N[0]===0&&N[3]===0||N[1]===0&&N[2]===0,b=s?Z.slice(0):null;for(let n=0,h=0,M=l.length;n<M;n++)switch(l[n]|0){case WU.rectangle:W=U[h++],V=U[h++];const G=U[h++],J=U[h++],T=W+G,X=V+J;d.moveTo(W,V),G===0||J===0?d.lineTo(T,X):(d.lineTo(T,V),d.lineTo(T,X),d.lineTo(W,X)),s||F.updateRectMinMax(N,[W,V,T,X]),d.closePath();break;case WU.moveTo:W=U[h++],V=U[h++],d.moveTo(W,V),s||F.updatePathMinMax(N,W,V);break;case WU.lineTo:W=U[h++],V=U[h++],d.lineTo(W,V),s||F.updatePathMinMax(N,W,V);break;case WU.curveTo:c=W,t=V,W=U[h+4],V=U[h+5],d.bezierCurveTo(U[h],U[h+1],U[h+2],U[h+3],W,V),F.updateCurvePathMinMax(N,c,t,U[h],U[h+1],U[h+2],U[h+3],W,V,b),h+=6;break;case WU.curveTo2:c=W,t=V,d.bezierCurveTo(W,V,U[h],U[h+1],U[h+2],U[h+3]),F.updateCurvePathMinMax(N,c,t,W,V,U[h],U[h+1],U[h+2],U[h+3],b),W=U[h+2],V=U[h+3],h+=4;break;case WU.curveTo3:c=W,t=V,W=U[h+2],V=U[h+3],d.bezierCurveTo(U[h],U[h+1],W,V,W,V),F.updateCurvePathMinMax(N,c,t,U[h],U[h+1],W,V,W,V,b),h+=4;break;case WU.closePath:d.closePath();break}s&&F.updateScalingPathMinMax(N,b),F.setCurrentPoint(W,V)}closePath(){this.ctx.closePath()}stroke(l=!0){const U=this.ctx,Z=this.current.strokeColor;U.globalAlpha=this.current.strokeAlpha,this.contentVisible&&(typeof Z=="object"&&(Z!=null&&Z.getPattern)?(U.save(),U.strokeStyle=Z.getPattern(U,this,rU(U),ol.STROKE),this.rescaleAndStroke(!1),U.restore()):this.rescaleAndStroke(!0)),l&&this.consumePath(this.current.getClippedPathBoundingBox()),U.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(l=!0){const U=this.ctx,Z=this.current.fillColor,d=this.current.patternFill;let F=!1;d&&(U.save(),U.fillStyle=Z.getPattern(U,this,rU(U),ol.FILL),F=!0);const W=this.current.getClippedPathBoundingBox();this.contentVisible&&W!==null&&(this.pendingEOFill?(U.fill("evenodd"),this.pendingEOFill=!1):U.fill()),F&&U.restore(),l&&this.consumePath(W)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=Ea}eoClip(){this.pendingClip=ls}beginText(){this.current.textMatrix=LN,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const l=this.pendingTextPaths,U=this.ctx;if(l===void 0){U.beginPath();return}U.save(),U.beginPath();for(const Z of l)U.setTransform(...Z.transform),U.translate(Z.x,Z.y),Z.addToPath(U,Z.fontSize);U.restore(),U.clip(),U.beginPath(),delete this.pendingTextPaths}setCharSpacing(l){this.current.charSpacing=l}setWordSpacing(l){this.current.wordSpacing=l}setHScale(l){this.current.textHScale=l/100}setLeading(l){this.current.leading=-l}setFont(l,U){var N;const Z=this.commonObjs.get(l),d=this.current;if(!Z)throw new Error(`Can't find font for ${l}`);if(d.fontMatrix=Z.fontMatrix||At,(d.fontMatrix[0]===0||d.fontMatrix[3]===0)&&x("Invalid font matrix for font "+l),U<0?(U=-U,d.fontDirection=-1):d.fontDirection=1,this.current.font=Z,this.current.fontSize=U,Z.isType3Font)return;const F=Z.loadedName||"sans-serif",W=((N=Z.systemFontInfo)==null?void 0:N.css)||`"${F}", ${Z.fallbackName}`;let V="normal";Z.black?V="900":Z.bold&&(V="bold");const c=Z.italic?"italic":"normal";let t=U;U<HN?t=HN:U>vN&&(t=vN),this.current.fontSizeScale=U/t,this.ctx.font=`${c} ${V} ${t}px ${W}`}setTextRenderingMode(l){this.current.textRenderingMode=l}setTextRise(l){this.current.textRise=l}moveText(l,U){this.current.x=this.current.lineX+=l,this.current.y=this.current.lineY+=U}setLeadingMoveText(l,U){this.setLeading(-U),this.moveText(l,U)}setTextMatrix(l,U,Z,d,F,W){this.current.textMatrix=[l,U,Z,d,F,W],this.current.textMatrixScale=Math.hypot(l,U),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(l,U,Z,d){const F=this.ctx,W=this.current,V=W.font,c=W.textRenderingMode,t=W.fontSize/W.fontSizeScale,N=c&ul.FILL_STROKE_MASK,s=!!(c&ul.ADD_TO_PATH_FLAG),b=W.patternFill&&!V.missingFile;let n;(V.disableFontFace||s||b)&&(n=V.getPathGenerator(this.commonObjs,l)),V.disableFontFace||b?(F.save(),F.translate(U,Z),F.beginPath(),n(F,t),d&&F.setTransform(...d),(N===ul.FILL||N===ul.FILL_STROKE)&&F.fill(),(N===ul.STROKE||N===ul.FILL_STROKE)&&F.stroke(),F.restore()):((N===ul.FILL||N===ul.FILL_STROKE)&&F.fillText(l,U,Z),(N===ul.STROKE||N===ul.FILL_STROKE)&&F.strokeText(l,U,Z)),s&&(this.pendingTextPaths||(this.pendingTextPaths=[])).push({transform:ll(F),x:U,y:Z,fontSize:t,addToPath:n})}get isFontSubpixelAAEnabled(){const{context:l}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);l.scale(1.5,1),l.fillText("I",0,10);const U=l.getImageData(0,0,10,10).data;let Z=!1;for(let d=3;d<U.length;d+=4)if(U[d]>0&&U[d]<255){Z=!0;break}return g(this,"isFontSubpixelAAEnabled",Z)}showText(l){const U=this.current,Z=U.font;if(Z.isType3Font)return this.showType3Text(l);const d=U.fontSize;if(d===0)return;const F=this.ctx,W=U.fontSizeScale,V=U.charSpacing,c=U.wordSpacing,t=U.fontDirection,N=U.textHScale*t,s=l.length,b=Z.vertical,n=b?1:-1,h=Z.defaultVMetrics,M=d*U.fontMatrix[0],G=U.textRenderingMode===ul.FILL&&!Z.disableFontFace&&!U.patternFill;F.save(),F.transform(...U.textMatrix),F.translate(U.x,U.y+U.textRise),t>0?F.scale(N,-1):F.scale(N,1);let J;if(U.patternFill){F.save();const Y=U.fillColor.getPattern(F,this,rU(F),ol.FILL);J=ll(F),F.restore(),F.fillStyle=Y}let T=U.lineWidth;const X=U.textMatrixScale;if(X===0||T===0){const Y=U.textRenderingMode&ul.FILL_STROKE_MASK;(Y===ul.STROKE||Y===ul.FILL_STROKE)&&(T=this.getSinglePixelWidth())}else T/=X;if(W!==1&&(F.scale(W,W),T/=W),F.lineWidth=T,Z.isInvalidPDFjsFont){const Y=[];let B=0;for(const p of l)Y.push(p.unicode),B+=p.width;F.fillText(Y.join(""),0,0),U.x+=B*M*N,F.restore(),this.compose();return}let S=0,e;for(e=0;e<s;++e){const Y=l[e];if(typeof Y=="number"){S+=n*Y*d/1e3;continue}let B=!1;const p=(Y.isSpace?c:0)+V,z=Y.fontChar,C=Y.accent;let L,v,r=Y.width;if(b){const f=Y.vmetric||h,dl=-(Y.vmetric?f[1]:r*.5)*M,o=f[2]*M;r=f?-f[0]:r,L=dl/W,v=(S+o)/W}else L=S/W,v=0;if(Z.remeasure&&r>0){const f=F.measureText(z).width*1e3/d*W;if(r<f&&this.isFontSubpixelAAEnabled){const dl=r/f;B=!0,F.save(),F.scale(dl,1),L/=dl}else r!==f&&(L+=(r-f)/2e3*d/W)}if(this.contentVisible&&(Y.isInFont||Z.missingFile)){if(G&&!C)F.fillText(z,L,v);else if(this.paintChar(z,L,v,J),C){const f=L+d*C.offset.x/W,dl=v-d*C.offset.y/W;this.paintChar(C.fontChar,f,dl,J)}}const P=b?r*M-p*t:r*M+p*t;S+=P,B&&F.restore()}b?U.y-=S:U.x+=S*N,F.restore(),this.compose()}showType3Text(l){const U=this.ctx,Z=this.current,d=Z.font,F=Z.fontSize,W=Z.fontDirection,V=d.vertical?1:-1,c=Z.charSpacing,t=Z.wordSpacing,N=Z.textHScale*W,s=Z.fontMatrix||At,b=l.length,n=Z.textRenderingMode===ul.INVISIBLE;let h,M,G,J;if(!(n||F===0)){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,U.save(),U.transform(...Z.textMatrix),U.translate(Z.x,Z.y),U.scale(N,W),h=0;h<b;++h){if(M=l[h],typeof M=="number"){J=V*M*F/1e3,this.ctx.translate(J,0),Z.x+=J*N;continue}const T=(M.isSpace?t:0)+c,X=d.charProcOperatorList[M.operatorListId];if(!X){x(`Type3 character "${M.operatorListId}" is not available.`);continue}this.contentVisible&&(this.processingType3=M,this.save(),U.scale(F,F),U.transform(...s),this.executeOperatorList(X),this.restore()),G=y.applyTransform([M.width,0],s)[0]*F+T,U.translate(G,0),Z.x+=G*N}U.restore(),this.processingType3=null}}setCharWidth(l,U){}setCharWidthAndBounds(l,U,Z,d,F,W){this.ctx.rect(Z,d,F-Z,W-d),this.ctx.clip(),this.endPath()}getColorN_Pattern(l){let U;if(l[0]==="TilingPattern"){const Z=l[1],d=this.baseTransform||ll(this.ctx),F={createCanvasGraphics:W=>new pR(W,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};U=new DV(l,Z,this.ctx,F,d)}else U=this._getPattern(l[1],l[2]);return U}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments)}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(l,U,Z){const d=y.makeHexColor(l,U,Z);this.ctx.strokeStyle=d,this.current.strokeColor=d}setFillRGBColor(l,U,Z){const d=y.makeHexColor(l,U,Z);this.ctx.fillStyle=d,this.current.fillColor=d,this.current.patternFill=!1}_getPattern(l,U=null){let Z;return this.cachedPatterns.has(l)?Z=this.cachedPatterns.get(l):(Z=ua(this.getObject(l)),this.cachedPatterns.set(l,Z)),U&&(Z.matrix=U),Z}shadingFill(l){if(!this.contentVisible)return;const U=this.ctx;this.save();const Z=this._getPattern(l);U.fillStyle=Z.getPattern(U,this,rU(U),ol.SHADING);const d=rU(U);if(d){const{width:F,height:W}=U.canvas,[V,c,t,N]=y.getAxialAlignedBoundingBox([0,0,F,W],d);this.ctx.fillRect(V,c,t-V,N-c)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){_("Should not call beginInlineImage")}beginImageData(){_("Should not call beginImageData")}paintFormXObjectBegin(l,U){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),l&&this.transform(...l),this.baseTransform=ll(this.ctx),U)){const Z=U[2]-U[0],d=U[3]-U[1];this.ctx.rect(U[0],U[1],Z,d),this.current.updateRectMinMax(ll(this.ctx),U),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(l){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const U=this.ctx;l.isolated||YV("TODO: Support non-isolated groups."),l.knockout&&x("Knockout groups not supported.");const Z=ll(U);if(l.matrix&&U.transform(...l.matrix),!l.bbox)throw new Error("Bounding box is required.");let d=y.getAxialAlignedBoundingBox(l.bbox,ll(U));const F=[0,0,U.canvas.width,U.canvas.height];d=y.intersect(d,F)||[0,0,0,0];const W=Math.floor(d[0]),V=Math.floor(d[1]),c=Math.max(Math.ceil(d[2])-W,1),t=Math.max(Math.ceil(d[3])-V,1);this.current.startNewPathAndClipBox([0,0,c,t]);let N="groupAt"+this.groupLevel;l.smask&&(N+="_smask_"+this.smaskCounter++%2);const s=this.cachedCanvases.getCanvas(N,c,t),b=s.context;b.translate(-W,-V),b.transform(...Z),l.smask?this.smaskStack.push({canvas:s.canvas,context:b,offsetX:W,offsetY:V,subtype:l.smask.subtype,backdrop:l.smask.backdrop,transferMap:l.smask.transferMap||null,startTransformInverse:null}):(U.setTransform(1,0,0,1,0,0),U.translate(W,V),U.save()),w0(U,b),this.ctx=b,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(U),this.groupLevel++}endGroup(l){if(!this.contentVisible)return;this.groupLevel--;const U=this.ctx,Z=this.groupStack.pop();if(this.ctx=Z,this.ctx.imageSmoothingEnabled=!1,l.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const d=ll(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...d);const F=y.getAxialAlignedBoundingBox([0,0,U.canvas.width,U.canvas.height],d);this.ctx.drawImage(U.canvas,0,0),this.ctx.restore(),this.compose(F)}}beginAnnotation(l,U,Z,d,F){if(m(this,xW,UN).call(this),EV(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),U){const W=U[2]-U[0],V=U[3]-U[1];if(F&&this.annotationCanvasMap){Z=Z.slice(),Z[4]-=U[0],Z[5]-=U[1],U=U.slice(),U[0]=U[1]=0,U[2]=W,U[3]=V;const[c,t]=y.singularValueDecompose2dScale(ll(this.ctx)),{viewportScale:N}=this,s=Math.ceil(W*this.outputScaleX*N),b=Math.ceil(V*this.outputScaleY*N);this.annotationCanvas=this.canvasFactory.create(s,b);const{canvas:n,context:h}=this.annotationCanvas;this.annotationCanvasMap.set(l,n),this.annotationCanvas.savedCtx=this.ctx,this.ctx=h,this.ctx.save(),this.ctx.setTransform(c,0,0,-t,0,V*t),EV(this.ctx)}else EV(this.ctx),this.ctx.rect(U[0],U[1],W,V),this.ctx.clip(),this.endPath()}this.current=new fN(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...Z),this.transform(...d)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),m(this,jW,ZN).call(this),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(l){if(!this.contentVisible)return;const U=l.count;l=this.getObject(l.data,l),l.count=U;const Z=this.ctx,d=this.processingType3;if(d&&(d.compiled===void 0&&(d.compiled=oa(l)),d.compiled)){d.compiled(Z);return}const F=this._createMaskCanvas(l),W=F.canvas;Z.save(),Z.setTransform(1,0,0,1,0,0),Z.drawImage(W,F.offsetX,F.offsetY),Z.restore(),this.compose()}paintImageMaskXObjectRepeat(l,U,Z=0,d=0,F,W){if(!this.contentVisible)return;l=this.getObject(l.data,l);const V=this.ctx;V.save();const c=ll(V);V.transform(U,Z,d,F,0,0);const t=this._createMaskCanvas(l);V.setTransform(1,0,0,1,t.offsetX-c[4],t.offsetY-c[5]);for(let N=0,s=W.length;N<s;N+=2){const b=y.transform(c,[U,Z,d,F,W[N],W[N+1]]),[n,h]=y.applyTransform([0,0],b);V.drawImage(t.canvas,n,h)}V.restore(),this.compose()}paintImageMaskXObjectGroup(l){if(!this.contentVisible)return;const U=this.ctx,Z=this.current.fillColor,d=this.current.patternFill;for(const F of l){const{data:W,width:V,height:c,transform:t}=F,N=this.cachedCanvases.getCanvas("maskCanvas",V,c),s=N.context;s.save();const b=this.getObject(W,F);qN(s,b),s.globalCompositeOperation="source-in",s.fillStyle=d?Z.getPattern(s,this,rU(U),ol.FILL):Z,s.fillRect(0,0,V,c),s.restore(),U.save(),U.transform(...t),U.scale(1,-1),IV(U,N.canvas,0,0,V,c,0,-1,1,1),U.restore()}this.compose()}paintImageXObject(l){if(!this.contentVisible)return;const U=this.getObject(l);if(!U){x("Dependent image isn't ready yet");return}this.paintInlineImageXObject(U)}paintImageXObjectRepeat(l,U,Z,d){if(!this.contentVisible)return;const F=this.getObject(l);if(!F){x("Dependent image isn't ready yet");return}const W=F.width,V=F.height,c=[];for(let t=0,N=d.length;t<N;t+=2)c.push({transform:[U,0,0,Z,d[t],d[t+1]],x:0,y:0,w:W,h:V});this.paintInlineImageXObjectGroup(F,c)}applyTransferMapsToCanvas(l){return this.current.transferMaps!=="none"&&(l.filter=this.current.transferMaps,l.drawImage(l.canvas,0,0),l.filter="none"),l.canvas}applyTransferMapsToBitmap(l){if(this.current.transferMaps==="none")return l.bitmap;const{bitmap:U,width:Z,height:d}=l,F=this.cachedCanvases.getCanvas("inlineImage",Z,d),W=F.context;return W.filter=this.current.transferMaps,W.drawImage(U,0,0),W.filter="none",F.canvas}paintInlineImageXObject(l){if(!this.contentVisible)return;const U=l.width,Z=l.height,d=this.ctx;if(this.save(),!hl){const{filter:V}=d;V!=="none"&&V!==""&&(d.filter="none")}d.scale(1/U,-1/Z);let F;if(l.bitmap)F=this.applyTransferMapsToBitmap(l);else if(typeof HTMLElement=="function"&&l instanceof HTMLElement||!l.data)F=l;else{const c=this.cachedCanvases.getCanvas("inlineImage",U,Z).context;_N(c,l),F=this.applyTransferMapsToCanvas(c)}const W=this._scaleImage(F,rU(d));d.imageSmoothingEnabled=$N(ll(d),l.interpolate),IV(d,W.img,0,0,W.paintWidth,W.paintHeight,0,-Z,U,Z),this.compose(),this.restore()}paintInlineImageXObjectGroup(l,U){if(!this.contentVisible)return;const Z=this.ctx;let d;if(l.bitmap)d=l.bitmap;else{const F=l.width,W=l.height,c=this.cachedCanvases.getCanvas("inlineImage",F,W).context;_N(c,l),d=this.applyTransferMapsToCanvas(c)}for(const F of U)Z.save(),Z.transform(...F.transform),Z.scale(1,-1),IV(Z,d,F.x,F.y,F.w,F.h,0,-1,1,1),Z.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(l){}markPointProps(l,U){}beginMarkedContent(l){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(l,U){l==="OC"?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(U)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(l){const U=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(l);const Z=this.ctx;this.pendingClip&&(U||(this.pendingClip===ls?Z.clip("evenodd"):Z.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),Z.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const l=ll(this.ctx);if(l[1]===0&&l[2]===0)this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(l[0]),Math.abs(l[3]));else{const U=Math.abs(l[0]*l[3]-l[2]*l[1]),Z=Math.hypot(l[0],l[2]),d=Math.hypot(l[1],l[3]);this._cachedGetSinglePixelWidth=Math.max(Z,d)/U}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(this._cachedScaleForStroking[0]===-1){const{lineWidth:l}=this.current,{a:U,b:Z,c:d,d:F}=this.ctx.getTransform();let W,V;if(Z===0&&d===0){const c=Math.abs(U),t=Math.abs(F);if(c===t)if(l===0)W=V=1/c;else{const N=c*l;W=V=N<1?1/N:1}else if(l===0)W=1/c,V=1/t;else{const N=c*l,s=t*l;W=N<1?1/N:1,V=s<1?1/s:1}}else{const c=Math.abs(U*F-Z*d),t=Math.hypot(U,Z),N=Math.hypot(d,F);if(l===0)W=N/c,V=t/c;else{const s=l*c;W=N>s?N/s:1,V=t>s?t/s:1}}this._cachedScaleForStroking[0]=W,this._cachedScaleForStroking[1]=V}return this._cachedScaleForStroking}rescaleAndStroke(l){const{ctx:U}=this,{lineWidth:Z}=this.current,[d,F]=this.getScaleForStroking();if(U.lineWidth=Z||1,d===1&&F===1){U.stroke();return}const W=U.getLineDash();if(l&&U.save(),U.scale(d,F),W.length>0){const V=Math.max(d,F);U.setLineDash(W.map(c=>c/V)),U.lineDashOffset/=V}U.stroke(),l&&U.restore()}isContentVisible(){for(let l=this.markedContentStack.length-1;l>=0;l--)if(!this.markedContentStack[l].visible)return!1;return!0}};let NF=pR;xW=new WeakSet,UN=function(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)},jW=new WeakSet,ZN=function(){if(this.pageColors){const l=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if(l!=="none"){const U=this.ctx.filter;this.ctx.filter=l,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=U}}};for(const R in WU)NF.prototype[R]!==void 0&&(NF.prototype[WU[R]]=NF.prototype[R]);const Ca=1e5,rl=30,Us=.8,CV=new Map;let Zd=null;function nR(R=null){if(!Zd){const l=document.createElement("canvas");l.className="hiddenCanvasElement",document.body.append(l),Zd=l.getContext("2d",{alpha:!1})}return Zd}function Zs(){Zd==null||Zd.canvas.remove(),Zd=null}function wa(R,l){const U=CV.get(R);if(U)return U;const Z=nR(l),d=Z.font;Z.canvas.width=Z.canvas.height=rl,Z.font=`${rl}px ${R}`;const F=Z.measureText("");let W=F.fontBoundingBoxAscent,V=Math.abs(F.fontBoundingBoxDescent);if(W){const t=W/(W+V);return CV.set(R,t),Z.canvas.width=Z.canvas.height=0,Z.font=d,t}Z.strokeStyle="red",Z.clearRect(0,0,rl,rl),Z.strokeText("g",0,0);let c=Z.getImageData(0,0,rl,rl).data;V=0;for(let t=c.length-1-3;t>=0;t-=4)if(c[t]>0){V=Math.ceil(t/4/rl);break}Z.clearRect(0,0,rl,rl),Z.strokeText("A",0,rl),c=Z.getImageData(0,0,rl,rl).data,W=0;for(let t=0,N=c.length;t<N;t+=4)if(c[t]>0){W=rl-Math.floor(t/4/rl);break}if(Z.canvas.width=Z.canvas.height=0,Z.font=d,W){const t=W/(W+V);return CV.set(R,t),t}return CV.set(R,Us),Us}function ds(R){const{div:l,scale:U,properties:Z,ctx:d,prevFontSize:F,prevFontFamily:W}=R,{style:V}=l;let c="";if(Z.canvasWidth!==0&&Z.hasText){const{fontFamily:t}=V,{canvasWidth:N,fontSize:s}=Z;(F!==s||W!==t)&&(d.font=`${s*U}px ${t}`,R.prevFontSize=s,R.prevFontFamily=t);const{width:b}=d.measureText(l.textContent);b>0&&(c=`scaleX(${N*U/b})`)}Z.angle!==0&&(c=`rotate(${Z.angle}deg) ${c}`),c.length>0&&(V.transform=c)}class xa{constructor({textContentSource:l,container:U,viewport:Z,textDivs:d,textDivProperties:F,textContentItemsStr:W}){a(this,pc);a(this,uc);a(this,yc);a(this,Bd,null);a(this,yF,null);var s;if(l instanceof ReadableStream)i(this,yF,l);else if(typeof l=="object")i(this,yF,new ReadableStream({start(b){b.enqueue(l),b.close()}}));else throw new Error('No "textContentSource" parameter specified.');this._container=this._rootContainer=U,this._textDivs=d||[],this._textContentItemsStr=W||[],this._fontInspectorEnabled=!!((s=globalThis.FontInspector)!=null&&s.enabled),this._textDivProperties=F||new WeakMap,this._canceled=!1,this._capability=Promise.withResolvers(),this._layoutTextParams={prevFontSize:null,prevFontFamily:null,div:null,scale:Z.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:null},this._styleCache=Object.create(null);const{pageWidth:V,pageHeight:c,pageX:t,pageY:N}=Z.rawDims;this._transform=[1,0,0,-1,-t,N+c],this._pageWidth=V,this._pageHeight=c,Ud(U,Z),this._capability.promise.finally(()=>{this._layoutTextParams=null,this._styleCache=null}).catch(()=>{})}get promise(){return this._capability.promise}cancel(){var U;this._canceled=!0;const l=new ld("TextLayer task cancelled.");(U=Q(this,Bd))==null||U.cancel(l).catch(()=>{}),i(this,Bd,null),this._capability.reject(l)}_render(){const l=this._styleCache,U=()=>{Q(this,Bd).read().then(({value:Z,done:d})=>{if(d){this._capability.resolve();return}Object.assign(l,Z.styles),m(this,pc,Ub).call(this,Z.items,Z.lang),U()},this._capability.reject)};i(this,Bd,Q(this,yF).getReader()),U()}}Bd=new WeakMap,yF=new WeakMap,pc=new WeakSet,Ub=function(l,U){this._layoutTextParams.ctx||(this._textDivProperties.set(this._rootContainer,{lang:U}),this._layoutTextParams.ctx=nR(U));const Z=this._textDivs,d=this._textContentItemsStr;for(const F of l){if(Z.length>Ca){x("Ignoring additional textDivs for performance reasons."),this._processItems=()=>{};return}if(F.str===void 0){if(F.type==="beginMarkedContentProps"||F.type==="beginMarkedContent"){const W=this._container;this._container=document.createElement("span"),this._container.classList.add("markedContent"),F.id!==null&&this._container.setAttribute("id",`${F.id}`),W.append(this._container)}else F.type==="endMarkedContent"&&(this._container=this._container.parentNode);continue}d.push(F.str),m(this,uc,Zb).call(this,F,U)}},uc=new WeakSet,Zb=function(l,U){const Z=document.createElement("span"),d={angle:0,canvasWidth:0,hasText:l.str!=="",hasEOL:l.hasEOL,fontSize:0};this._textDivs.push(Z);const F=y.transform(this._transform,l.transform);let W=Math.atan2(F[1],F[0]);const V=this._styleCache[l.fontName];V.vertical&&(W+=Math.PI/2);const c=this._fontInspectorEnabled&&V.fontSubstitution||V.fontFamily,t=Math.hypot(F[2],F[3]),N=t*wa(c,U);let s,b;W===0?(s=F[4],b=F[5]-N):(s=F[4]+N*Math.sin(W),b=F[5]-N*Math.cos(W));const n="calc(var(--scale-factor)*",h=Z.style;this._container===this._rootContainer?(h.left=`${(100*s/this._pageWidth).toFixed(2)}%`,h.top=`${(100*b/this._pageHeight).toFixed(2)}%`):(h.left=`${n}${s.toFixed(2)}px)`,h.top=`${n}${b.toFixed(2)}px)`),h.fontSize=`${n}${t.toFixed(2)}px)`,h.fontFamily=c,d.fontSize=t,Z.setAttribute("role","presentation"),Z.textContent=l.str,Z.dir=l.dir,this._fontInspectorEnabled&&(Z.dataset.fontName=V.fontSubstitutionLoadedName||l.fontName),W!==0&&(d.angle=W*(180/Math.PI));let M=!1;if(l.str.length>1)M=!0;else if(l.str!==" "&&l.transform[0]!==l.transform[3]){const G=Math.abs(l.transform[0]),J=Math.abs(l.transform[3]);G!==J&&Math.max(G,J)/Math.min(G,J)>1.5&&(M=!0)}M&&(d.canvasWidth=V.vertical?l.height:l.width),this._textDivProperties.set(Z,d),m(this,yc,db).call(this,Z,d)},yc=new WeakSet,db=function(l,U){if(this._layoutTextParams.div=l,this._layoutTextParams.properties=U,ds(this._layoutTextParams),U.hasText&&this._container.append(l),U.hasEOL){const Z=document.createElement("br");Z.setAttribute("role","presentation"),this._container.append(Z)}};function ja(R){const l=new xa(R);return l._render(),l}function Oa({container:R,viewport:l,textDivs:U,textDivProperties:Z,mustRotate:d=!0,mustRescale:F=!0}){var W;if(d&&Ud(R,{rotation:l.rotation}),F){const V=nR((W=Z.get(R))==null?void 0:W.lang),t={prevFontSize:null,prevFontFamily:null,div:null,scale:l.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:V};for(const N of U)t.properties=Z.get(N),t.div=N,ds(t)}}class gU{static get workerPort(){return Q(this,OW)}static set workerPort(l){if(!(typeof Worker<"u"&&l instanceof Worker)&&l!==null)throw new Error("Invalid `workerPort` type.");i(this,OW,l)}static get workerSrc(){return Q(this,rW)}static set workerSrc(l){if(typeof l!="string")throw new Error("Invalid `workerSrc` type.");i(this,rW,l)}}OW=new WeakMap,rW=new WeakMap,a(gU,OW,null),a(gU,rW,"");const wV={UNKNOWN:0,DATA:1,ERROR:2},cl={UNKNOWN:0,CANCEL:1,CANCEL_COMPLETE:2,CLOSE:3,ENQUEUE:4,ERROR:5,PULL:6,PULL_COMPLETE:7,START_COMPLETE:8};function gl(R){switch(R instanceof Error||typeof R=="object"&&R!==null||_('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),R.name){case"AbortException":return new ld(R.message);case"MissingPDFException":return new $Z(R.message);case"PasswordException":return new qt(R.message,R.code);case"UnexpectedResponseException":return new SV(R.message,R.status);case"UnknownErrorException":return new $t(R.message,R.details);default:return new $t(R.message,R.toString())}}class x0{constructor(l,U,Z){a(this,Lc);a(this,zc);a(this,LF);this.sourceName=l,this.targetName=U,this.comObj=Z,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=d=>{const F=d.data;if(F.targetName!==this.sourceName)return;if(F.stream){m(this,zc,Wb).call(this,F);return}if(F.callback){const V=F.callbackId,c=this.callbackCapabilities[V];if(!c)throw new Error(`Cannot resolve callback ${V}`);if(delete this.callbackCapabilities[V],F.callback===wV.DATA)c.resolve(F.data);else if(F.callback===wV.ERROR)c.reject(gl(F.reason));else throw new Error("Unexpected callback case");return}const W=this.actionHandler[F.action];if(!W)throw new Error(`Unknown action from worker: ${F.action}`);if(F.callbackId){const V=this.sourceName,c=F.sourceName;new Promise(function(t){t(W(F.data))}).then(function(t){Z.postMessage({sourceName:V,targetName:c,callback:wV.DATA,callbackId:F.callbackId,data:t})},function(t){Z.postMessage({sourceName:V,targetName:c,callback:wV.ERROR,callbackId:F.callbackId,reason:gl(t)})});return}if(F.streamId){m(this,Lc,Fb).call(this,F);return}W(F.data)},Z.addEventListener("message",this._onComObjOnMessage)}on(l,U){const Z=this.actionHandler;if(Z[l])throw new Error(`There is already an actionName called "${l}"`);Z[l]=U}send(l,U,Z){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,data:U},Z)}sendWithPromise(l,U,Z){const d=this.callbackId++,F=Promise.withResolvers();this.callbackCapabilities[d]=F;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,callbackId:d,data:U},Z)}catch(W){F.reject(W)}return F.promise}sendWithStream(l,U,Z,d){const F=this.streamId++,W=this.sourceName,V=this.targetName,c=this.comObj;return new ReadableStream({start:t=>{const N=Promise.withResolvers();return this.streamControllers[F]={controller:t,startCall:N,pullCall:null,cancelCall:null,isClosed:!1},c.postMessage({sourceName:W,targetName:V,action:l,streamId:F,data:U,desiredSize:t.desiredSize},d),N.promise},pull:t=>{const N=Promise.withResolvers();return this.streamControllers[F].pullCall=N,c.postMessage({sourceName:W,targetName:V,stream:cl.PULL,streamId:F,desiredSize:t.desiredSize}),N.promise},cancel:t=>{Rl(t instanceof Error,"cancel must have a valid reason");const N=Promise.withResolvers();return this.streamControllers[F].cancelCall=N,this.streamControllers[F].isClosed=!0,c.postMessage({sourceName:W,targetName:V,stream:cl.CANCEL,streamId:F,reason:gl(t)}),N.promise}},Z)}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}Lc=new WeakSet,Fb=function(l){const U=l.streamId,Z=this.sourceName,d=l.sourceName,F=this.comObj,W=this,V=this.actionHandler[l.action],c={enqueue(t,N=1,s){if(this.isCancelled)return;const b=this.desiredSize;this.desiredSize-=N,b>0&&this.desiredSize<=0&&(this.sinkCapability=Promise.withResolvers(),this.ready=this.sinkCapability.promise),F.postMessage({sourceName:Z,targetName:d,stream:cl.ENQUEUE,streamId:U,chunk:t},s)},close(){this.isCancelled||(this.isCancelled=!0,F.postMessage({sourceName:Z,targetName:d,stream:cl.CLOSE,streamId:U}),delete W.streamSinks[U])},error(t){Rl(t instanceof Error,"error must have a valid reason"),!this.isCancelled&&(this.isCancelled=!0,F.postMessage({sourceName:Z,targetName:d,stream:cl.ERROR,streamId:U,reason:gl(t)}))},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:l.desiredSize,ready:null};c.sinkCapability.resolve(),c.ready=c.sinkCapability.promise,this.streamSinks[U]=c,new Promise(function(t){t(V(l.data,c))}).then(function(){F.postMessage({sourceName:Z,targetName:d,stream:cl.START_COMPLETE,streamId:U,success:!0})},function(t){F.postMessage({sourceName:Z,targetName:d,stream:cl.START_COMPLETE,streamId:U,reason:gl(t)})})},zc=new WeakSet,Wb=function(l){const U=l.streamId,Z=this.sourceName,d=l.sourceName,F=this.comObj,W=this.streamControllers[U],V=this.streamSinks[U];switch(l.stream){case cl.START_COMPLETE:l.success?W.startCall.resolve():W.startCall.reject(gl(l.reason));break;case cl.PULL_COMPLETE:l.success?W.pullCall.resolve():W.pullCall.reject(gl(l.reason));break;case cl.PULL:if(!V){F.postMessage({sourceName:Z,targetName:d,stream:cl.PULL_COMPLETE,streamId:U,success:!0});break}V.desiredSize<=0&&l.desiredSize>0&&V.sinkCapability.resolve(),V.desiredSize=l.desiredSize,new Promise(function(c){var t;c((t=V.onPull)==null?void 0:t.call(V))}).then(function(){F.postMessage({sourceName:Z,targetName:d,stream:cl.PULL_COMPLETE,streamId:U,success:!0})},function(c){F.postMessage({sourceName:Z,targetName:d,stream:cl.PULL_COMPLETE,streamId:U,reason:gl(c)})});break;case cl.ENQUEUE:if(Rl(W,"enqueue should have stream controller"),W.isClosed)break;W.controller.enqueue(l.chunk);break;case cl.CLOSE:if(Rl(W,"close should have stream controller"),W.isClosed)break;W.isClosed=!0,W.controller.close(),m(this,LF,kt).call(this,W,U);break;case cl.ERROR:Rl(W,"error should have stream controller"),W.controller.error(gl(l.reason)),m(this,LF,kt).call(this,W,U);break;case cl.CANCEL_COMPLETE:l.success?W.cancelCall.resolve():W.cancelCall.reject(gl(l.reason)),m(this,LF,kt).call(this,W,U);break;case cl.CANCEL:if(!V)break;new Promise(function(c){var t;c((t=V.onCancel)==null?void 0:t.call(V,gl(l.reason)))}).then(function(){F.postMessage({sourceName:Z,targetName:d,stream:cl.CANCEL_COMPLETE,streamId:U,success:!0})},function(c){F.postMessage({sourceName:Z,targetName:d,stream:cl.CANCEL_COMPLETE,streamId:U,reason:gl(c)})}),V.sinkCapability.reject(gl(l.reason)),V.isCancelled=!0,delete this.streamSinks[U];break;default:throw new Error("Unexpected stream case")}},LF=new WeakSet,kt=async function(l,U){var Z,d,F;await Promise.allSettled([(Z=l.startCall)==null?void 0:Z.promise,(d=l.pullCall)==null?void 0:d.promise,(F=l.cancelCall)==null?void 0:F.promise]),delete this.streamControllers[U]};class ra{constructor({parsedData:l,rawData:U}){a(this,ed,void 0);a(this,KW,void 0);i(this,ed,l),i(this,KW,U)}getRaw(){return Q(this,KW)}get(l){return Q(this,ed).get(l)??null}getAll(){return lR(Q(this,ed))}has(l){return Q(this,ed).has(l)}}ed=new WeakMap,KW=new WeakMap;const TZ=Symbol("INTERNAL");class Ka{constructor(l,{name:U,intent:Z,usage:d}){a(this,gW,!1);a(this,HW,!1);a(this,vW,!1);a(this,zF,!0);i(this,gW,!!(l&ql.DISPLAY)),i(this,HW,!!(l&ql.PRINT)),this.name=U,this.intent=Z,this.usage=d}get visible(){if(Q(this,vW))return Q(this,zF);if(!Q(this,zF))return!1;const{print:l,view:U}=this.usage;return Q(this,gW)?(U==null?void 0:U.viewState)!=="OFF":Q(this,HW)?(l==null?void 0:l.printState)!=="OFF":!0}_setVisible(l,U,Z=!1){l!==TZ&&_("Internal method `_setVisible` called."),i(this,vW,Z),i(this,zF,U)}}gW=new WeakMap,HW=new WeakMap,vW=new WeakMap,zF=new WeakMap;class ga{constructor(l,U=ql.DISPLAY){a(this,PW);a(this,zZ,null);a(this,q,new Map);a(this,kF,null);a(this,oF,null);if(this.renderingIntent=U,this.name=null,this.creator=null,l!==null){this.name=l.name,this.creator=l.creator,i(this,oF,l.order);for(const Z of l.groups)Q(this,q).set(Z.id,new Ka(U,Z));if(l.baseState==="OFF")for(const Z of Q(this,q).values())Z._setVisible(TZ,!1);for(const Z of l.on)Q(this,q).get(Z)._setVisible(TZ,!0);for(const Z of l.off)Q(this,q).get(Z)._setVisible(TZ,!1);i(this,kF,this.getHash())}}isVisible(l){if(Q(this,q).size===0)return!0;if(!l)return YV("Optional content group not defined."),!0;if(l.type==="OCG")return Q(this,q).has(l.id)?Q(this,q).get(l.id).visible:(x(`Optional content group not found: ${l.id}`),!0);if(l.type==="OCMD"){if(l.expression)return m(this,PW,dN).call(this,l.expression);if(!l.policy||l.policy==="AnyOn"){for(const U of l.ids){if(!Q(this,q).has(U))return x(`Optional content group not found: ${U}`),!0;if(Q(this,q).get(U).visible)return!0}return!1}else if(l.policy==="AllOn"){for(const U of l.ids){if(!Q(this,q).has(U))return x(`Optional content group not found: ${U}`),!0;if(!Q(this,q).get(U).visible)return!1}return!0}else if(l.policy==="AnyOff"){for(const U of l.ids){if(!Q(this,q).has(U))return x(`Optional content group not found: ${U}`),!0;if(!Q(this,q).get(U).visible)return!0}return!1}else if(l.policy==="AllOff"){for(const U of l.ids){if(!Q(this,q).has(U))return x(`Optional content group not found: ${U}`),!0;if(Q(this,q).get(U).visible)return!1}return!0}return x(`Unknown optional content policy ${l.policy}.`),!0}return x(`Unknown group type ${l.type}.`),!0}setVisibility(l,U=!0){const Z=Q(this,q).get(l);if(!Z){x(`Optional content group not found: ${l}`);return}Z._setVisible(TZ,!!U,!0),i(this,zZ,null)}setOCGState({state:l,preserveRB:U}){let Z;for(const d of l){switch(d){case"ON":case"OFF":case"Toggle":Z=d;continue}const F=Q(this,q).get(d);if(F)switch(Z){case"ON":F._setVisible(TZ,!0);break;case"OFF":F._setVisible(TZ,!1);break;case"Toggle":F._setVisible(TZ,!F.visible);break}}i(this,zZ,null)}get hasInitialVisibility(){return Q(this,kF)===null||this.getHash()===Q(this,kF)}getOrder(){return Q(this,q).size?Q(this,oF)?Q(this,oF).slice():[...Q(this,q).keys()]:null}getGroups(){return Q(this,q).size>0?lR(Q(this,q)):null}getGroup(l){return Q(this,q).get(l)||null}getHash(){if(Q(this,zZ)!==null)return Q(this,zZ);const l=new ON;for(const[U,Z]of Q(this,q))l.update(`${U}:${Z.visible}`);return i(this,zZ,l.hexdigest())}}zZ=new WeakMap,q=new WeakMap,kF=new WeakMap,oF=new WeakMap,PW=new WeakSet,dN=function(l){const U=l.length;if(U<2)return!0;const Z=l[0];for(let d=1;d<U;d++){const F=l[d];let W;if(Array.isArray(F))W=m(this,PW,dN).call(this,F);else if(Q(this,q).has(F))W=Q(this,q).get(F).visible;else return x(`Optional content group not found: ${F}`),!0;switch(Z){case"And":if(!W)return!1;break;case"Or":if(W)return!0;break;case"Not":return!W;default:return!0}}return Z==="And"};class Ha{constructor(l,{disableRange:U=!1,disableStream:Z=!1}){Rl(l,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');const{length:d,initialData:F,progressiveDone:W,contentDispositionFilename:V}=l;if(this._queuedChunks=[],this._progressiveDone=W,this._contentDispositionFilename=V,(F==null?void 0:F.length)>0){const c=F instanceof Uint8Array&&F.byteLength===F.buffer.byteLength?F.buffer:new Uint8Array(F).buffer;this._queuedChunks.push(c)}this._pdfDataRangeTransport=l,this._isStreamingSupported=!Z,this._isRangeSupported=!U,this._contentLength=d,this._fullRequestReader=null,this._rangeReaders=[],l.addRangeListener((c,t)=>{this._onReceiveData({begin:c,chunk:t})}),l.addProgressListener((c,t)=>{this._onProgress({loaded:c,total:t})}),l.addProgressiveReadListener(c=>{this._onReceiveData({chunk:c})}),l.addProgressiveDoneListener(()=>{this._onProgressiveDone()}),l.transportReady()}_onReceiveData({begin:l,chunk:U}){const Z=U instanceof Uint8Array&&U.byteLength===U.buffer.byteLength?U.buffer:new Uint8Array(U).buffer;if(l===void 0)this._fullRequestReader?this._fullRequestReader._enqueue(Z):this._queuedChunks.push(Z);else{const d=this._rangeReaders.some(function(F){return F._begin!==l?!1:(F._enqueue(Z),!0)});Rl(d,"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}_onProgress(l){var U,Z,d,F;l.total===void 0?(Z=(U=this._rangeReaders[0])==null?void 0:U.onProgress)==null||Z.call(U,{loaded:l.loaded}):(F=(d=this._fullRequestReader)==null?void 0:d.onProgress)==null||F.call(d,{loaded:l.loaded,total:l.total})}_onProgressiveDone(){var l;(l=this._fullRequestReader)==null||l.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(l){const U=this._rangeReaders.indexOf(l);U>=0&&this._rangeReaders.splice(U,1)}getFullReader(){Rl(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const l=this._queuedChunks;return this._queuedChunks=null,new va(this,l,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=new Pa(this,l,U);return this._pdfDataRangeTransport.requestDataRange(l,U),this._rangeReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeReaders.slice(0))Z.cancel(l);this._pdfDataRangeTransport.abort()}}class va{constructor(l,U,Z=!1,d=null){this._stream=l,this._done=Z||!1,this._filename=VR(d)?d:null,this._queuedChunks=U||[],this._loaded=0;for(const F of this._queuedChunks)this._loaded+=F.byteLength;this._requests=[],this._headersReady=Promise.resolve(),l._fullRequestReader=this,this.onProgress=null}_enqueue(l){this._done||(this._requests.length>0?this._requests.shift().resolve({value:l,done:!1}):this._queuedChunks.push(l),this._loaded+=l.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class Pa{constructor(l,U,Z){this._stream=l,this._begin=U,this._end=Z,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(l){if(!this._done){if(this._requests.length===0)this._queuedChunk=l;else{this._requests.shift().resolve({value:l,done:!1});for(const Z of this._requests)Z.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}function Aa(R){let l=!0,U=Z("filename\\*","i").exec(R);if(U){U=U[1];let N=V(U);return N=unescape(N),N=c(N),N=t(N),F(N)}if(U=W(R),U){const N=t(U);return F(N)}if(U=Z("filename","i").exec(R),U){U=U[1];let N=V(U);return N=t(N),F(N)}function Z(N,s){return new RegExp("(?:^|;)\\s*"+N+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',s)}function d(N,s){if(N){if(!/^[\x00-\xFF]+$/.test(s))return s;try{const b=new TextDecoder(N,{fatal:!0}),n=BV(s);s=b.decode(n),l=!1}catch{}}return s}function F(N){return l&&/[\x80-\xff]/.test(N)&&(N=d("utf-8",N),l&&(N=d("iso-8859-1",N))),N}function W(N){const s=[];let b;const n=Z("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;(b=n.exec(N))!==null;){let[,M,G,J]=b;if(M=parseInt(M,10),M in s){if(M===0)break;continue}s[M]=[G,J]}const h=[];for(let M=0;M<s.length&&M in s;++M){let[G,J]=s[M];J=V(J),G&&(J=unescape(J),M===0&&(J=c(J))),h.push(J)}return h.join("")}function V(N){if(N.startsWith('"')){const s=N.slice(1).split('\\"');for(let b=0;b<s.length;++b){const n=s[b].indexOf('"');n!==-1&&(s[b]=s[b].slice(0,n),s.length=b+1),s[b]=s[b].replaceAll(/\\(.)/g,"$1")}N=s.join('"')}return N}function c(N){const s=N.indexOf("'");if(s===-1)return N;const b=N.slice(0,s),h=N.slice(s+1).replace(/^[^']*'/,"");return d(b,h)}function t(N){return!N.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(N)?N:N.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,function(s,b,n,h){if(n==="q"||n==="Q")return h=h.replaceAll("_"," "),h=h.replaceAll(/=([0-9a-fA-F]{2})/g,function(M,G){return String.fromCharCode(parseInt(G,16))}),d(b,h);try{h=atob(h)}catch{}return d(b,h)})}return""}function hR({getResponseHeader:R,isHttp:l,rangeChunkSize:U,disableRange:Z}){const d={allowRangeRequests:!1,suggestedLength:void 0},F=parseInt(R("Content-Length"),10);return!Number.isInteger(F)||(d.suggestedLength=F,F<=2*U)||Z||!l||R("Accept-Ranges")!=="bytes"||(R("Content-Encoding")||"identity")!=="identity"||(d.allowRangeRequests=!0),d}function mR(R){const l=R("Content-Disposition");if(l){let U=Aa(l);if(U.includes("%"))try{U=decodeURIComponent(U)}catch{}if(VR(U))return U}return null}function xV(R,l){return R===404||R===0&&l.startsWith("file:")?new $Z('Missing PDF "'+l+'".'):new SV(`Unexpected server response (${R}) while retrieving PDF "${l}".`,R)}function Fs(R){return R===200||R===206}function Ws(R,l,U){return{method:"GET",headers:R,signal:U.signal,mode:"cors",credentials:l?"include":"same-origin",redirect:"follow"}}function Qs(R){const l=new Headers;for(const U in R){const Z=R[U];Z!==void 0&&l.append(U,Z)}return l}function Vs(R){return R instanceof Uint8Array?R.buffer:R instanceof ArrayBuffer?R:(x(`getArrayBuffer - unexpected data format: ${R}`),new Uint8Array(R).buffer)}class cs{constructor(l){this.source=l,this.isHttp=/^https?:/i.test(l.url),this.httpHeaders=this.isHttp&&l.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}getFullReader(){return Rl(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new fa(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=new _a(this,l,U);return this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class fa{constructor(l){this._stream=l,this._reader=null,this._loaded=0,this._filename=null;const U=l.source;this._withCredentials=U.withCredentials||!1,this._contentLength=U.length,this._headersCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._headers=Qs(this._stream.httpHeaders);const Z=U.url;fetch(Z,Ws(this._headers,this._withCredentials,this._abortController)).then(d=>{if(!Fs(d.status))throw xV(d.status,Z);this._reader=d.body.getReader(),this._headersCapability.resolve();const F=c=>d.headers.get(c),{allowRangeRequests:W,suggestedLength:V}=hR({getResponseHeader:F,isHttp:this._stream.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=W,this._contentLength=V||this._contentLength,this._filename=mR(F),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new ld("Streaming is disabled."))}).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;await this._headersCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded,total:this._contentLength}),{value:Vs(l),done:!1})}cancel(l){var U;(U=this._reader)==null||U.cancel(l),this._abortController.abort()}}class _a{constructor(l,U,Z){this._stream=l,this._reader=null,this._loaded=0;const d=l.source;this._withCredentials=d.withCredentials||!1,this._readCapability=Promise.withResolvers(),this._isStreamingSupported=!d.disableStream,this._abortController=new AbortController,this._headers=Qs(this._stream.httpHeaders),this._headers.append("Range",`bytes=${U}-${Z-1}`);const F=d.url;fetch(F,Ws(this._headers,this._withCredentials,this._abortController)).then(W=>{if(!Fs(W.status))throw xV(W.status,F);this._readCapability.resolve(),this._reader=W.body.getReader()}).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;await this._readCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded}),{value:Vs(l),done:!1})}cancel(l){var U;(U=this._reader)==null||U.cancel(l),this._abortController.abort()}}const iR=200,MR=206;function qa(R){const l=R.response;return typeof l!="string"?l:BV(l).buffer}class $a{constructor(l,U={}){this.url=l,this.isHttp=/^https?:/i.test(l),this.httpHeaders=this.isHttp&&U.httpHeaders||Object.create(null),this.withCredentials=U.withCredentials||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}requestRange(l,U,Z){const d={begin:l,end:U};for(const F in Z)d[F]=Z[F];return this.request(d)}requestFull(l){return this.request(l)}request(l){const U=new XMLHttpRequest,Z=this.currXhrId++,d=this.pendingRequests[Z]={xhr:U};U.open("GET",this.url),U.withCredentials=this.withCredentials;for(const F in this.httpHeaders){const W=this.httpHeaders[F];W!==void 0&&U.setRequestHeader(F,W)}return this.isHttp&&"begin"in l&&"end"in l?(U.setRequestHeader("Range",`bytes=${l.begin}-${l.end-1}`),d.expectedStatus=MR):d.expectedStatus=iR,U.responseType="arraybuffer",l.onError&&(U.onerror=function(F){l.onError(U.status)}),U.onreadystatechange=this.onStateChange.bind(this,Z),U.onprogress=this.onProgress.bind(this,Z),d.onHeadersReceived=l.onHeadersReceived,d.onDone=l.onDone,d.onError=l.onError,d.onProgress=l.onProgress,U.send(null),Z}onProgress(l,U){var d;const Z=this.pendingRequests[l];Z&&((d=Z.onProgress)==null||d.call(Z,U))}onStateChange(l,U){var c,t,N;const Z=this.pendingRequests[l];if(!Z)return;const d=Z.xhr;if(d.readyState>=2&&Z.onHeadersReceived&&(Z.onHeadersReceived(),delete Z.onHeadersReceived),d.readyState!==4||!(l in this.pendingRequests))return;if(delete this.pendingRequests[l],d.status===0&&this.isHttp){(c=Z.onError)==null||c.call(Z,d.status);return}const F=d.status||iR;if(!(F===iR&&Z.expectedStatus===MR)&&F!==Z.expectedStatus){(t=Z.onError)==null||t.call(Z,d.status);return}const V=qa(d);if(F===MR){const s=d.getResponseHeader("Content-Range"),b=/bytes (\d+)-(\d+)\/(\d+)/.exec(s);Z.onDone({begin:parseInt(b[1],10),chunk:V})}else V?Z.onDone({begin:0,chunk:V}):(N=Z.onError)==null||N.call(Z,d.status)}getRequestXhr(l){return this.pendingRequests[l].xhr}isPendingRequest(l){return l in this.pendingRequests}abortRequest(l){const U=this.pendingRequests[l].xhr;delete this.pendingRequests[l],U.abort()}}class ln{constructor(l){this._source=l,this._manager=new $a(l.url,{httpHeaders:l.httpHeaders,withCredentials:l.withCredentials}),this._rangeChunkSize=l.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(l){const U=this._rangeRequestReaders.indexOf(l);U>=0&&this._rangeRequestReaders.splice(U,1)}getFullReader(){return Rl(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new Un(this._manager,this._source),this._fullRequestReader}getRangeReader(l,U){const Z=new Zn(this._manager,l,U);return Z.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class Un{constructor(l,U){this._manager=l;const Z={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=U.url,this._fullRequestId=l.requestFull(Z),this._headersReceivedCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._contentLength=U.length,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const l=this._fullRequestId,U=this._manager.getRequestXhr(l),Z=W=>U.getResponseHeader(W),{allowRangeRequests:d,suggestedLength:F}=hR({getResponseHeader:Z,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});d&&(this._isRangeSupported=!0),this._contentLength=F||this._contentLength,this._filename=mR(Z),this._isRangeSupported&&this._manager.abortRequest(l),this._headersReceivedCapability.resolve()}_onDone(l){if(l&&(this._requests.length>0?this._requests.shift().resolve({value:l.chunk,done:!1}):this._cachedChunks.push(l.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(l){this._storedError=xV(l,this._url),this._headersReceivedCapability.reject(this._storedError);for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(l){var U;(U=this.onProgress)==null||U.call(this,{loaded:l.loaded,total:l.lengthComputable?l.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersReceivedCapability.promise}async read(){if(this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0,this._headersReceivedCapability.reject(l);for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class Zn{constructor(l,U,Z){this._manager=l;const d={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=l.url,this._requestId=l.requestRange(U,Z,d),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_close(){var l;(l=this.onClosed)==null||l.call(this,this)}_onDone(l){const U=l.chunk;this._requests.length>0?this._requests.shift().resolve({value:U,done:!1}):this._queuedChunk=U,this._done=!0;for(const Z of this._requests)Z.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(l){this._storedError=xV(l,this._url);for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(l){var U;this.isStreamingSupported||(U=this.onProgress)==null||U.call(this,{loaded:l.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(this._queuedChunk!==null){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}const ts=/^file:\/\/\/[a-zA-Z]:\//;function dn(R){const l=GU.get("url"),U=l.parse(R);return U.protocol==="file:"||U.host?U:/^[a-z]:[/\\]/i.test(R)?l.parse(`file:///${R}`):(U.host||(U.protocol="file:"),U)}class Fn{constructor(l){this.source=l,this.url=dn(l.url),this.isHttp=this.url.protocol==="http:"||this.url.protocol==="https:",this.isFsUrl=this.url.protocol==="file:",this.httpHeaders=this.isHttp&&l.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}getFullReader(){return Rl(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=this.isFsUrl?new Vn(this):new Wn(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=this.isFsUrl?new cn(this,l,U):new Qn(this,l,U);return this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class Rs{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null;const U=l.source;this._contentLength=U.length,this._loaded=0,this._filename=null,this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._readableStream=null,this._readCapability=Promise.withResolvers(),this._headersCapability=Promise.withResolvers()}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new ld("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class Ns{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=Promise.withResolvers();const U=l.source;this._isStreamingSupported=!U.disableStream}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),this._storedError&&this._readableStream.destroy(this._storedError)}}function jV(R,l){return{protocol:R.protocol,auth:R.auth,host:R.hostname,port:R.port,path:R.path,method:"GET",headers:l}}class Wn extends Rs{constructor(l){super(l);const U=Z=>{if(Z.statusCode===404){const V=new $Z(`Missing PDF "${this._url}".`);this._storedError=V,this._headersCapability.reject(V);return}this._headersCapability.resolve(),this._setReadableStream(Z);const d=V=>this._readableStream.headers[V.toLowerCase()],{allowRangeRequests:F,suggestedLength:W}=hR({getResponseHeader:d,isHttp:l.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=F,this._contentLength=W||this._contentLength,this._filename=mR(d)};if(this._request=null,this._url.protocol==="http:"){const Z=GU.get("http");this._request=Z.request(jV(this._url,l.httpHeaders),U)}else{const Z=GU.get("https");this._request=Z.request(jV(this._url,l.httpHeaders),U)}this._request.on("error",Z=>{this._storedError=Z,this._headersCapability.reject(Z)}),this._request.end()}}class Qn extends Ns{constructor(l,U,Z){super(l),this._httpHeaders={};for(const F in l.httpHeaders){const W=l.httpHeaders[F];W!==void 0&&(this._httpHeaders[F]=W)}this._httpHeaders.Range=`bytes=${U}-${Z-1}`;const d=F=>{if(F.statusCode===404){const W=new $Z(`Missing PDF "${this._url}".`);this._storedError=W;return}this._setReadableStream(F)};if(this._request=null,this._url.protocol==="http:"){const F=GU.get("http");this._request=F.request(jV(this._url,this._httpHeaders),d)}else{const F=GU.get("https");this._request=F.request(jV(this._url,this._httpHeaders),d)}this._request.on("error",F=>{this._storedError=F}),this._request.end()}}class Vn extends Rs{constructor(l){super(l);let U=decodeURIComponent(this._url.path);ts.test(this._url.href)&&(U=U.replace(/^\//,""));const Z=GU.get("fs");Z.promises.lstat(U).then(d=>{this._contentLength=d.size,this._setReadableStream(Z.createReadStream(U)),this._headersCapability.resolve()},d=>{d.code==="ENOENT"&&(d=new $Z(`Missing PDF "${U}".`)),this._storedError=d,this._headersCapability.reject(d)})}}class cn extends Ns{constructor(l,U,Z){super(l);let d=decodeURIComponent(this._url.path);ts.test(this._url.href)&&(d=d.replace(/^\//,""));const F=GU.get("fs");this._setReadableStream(F.createReadStream(d,{start:U,end:Z-1}))}}class j0{static textContent(l){const U=[],Z={items:U,styles:Object.create(null)};function d(F){var c;if(!F)return;let W=null;const V=F.name;if(V==="#text")W=F.value;else if(j0.shouldBuildText(V))(c=F==null?void 0:F.attributes)!=null&&c.textContent?W=F.attributes.textContent:F.value&&(W=F.value);else return;if(W!==null&&U.push({str:W}),!!F.children)for(const t of F.children)d(t)}return d(l),Z}static shouldBuildText(l){return!(l==="textarea"||l==="input"||l==="option"||l==="select")}}const tn=65536,Rn=100,Nn=5e3,sn=hl?Ta:ta,bn=hl?Xa:IN,an=hl?Ga:ca,nn=hl?Ya:EN;function hn(R){if(typeof R=="string"||R instanceof URL?R={url:R}:(R instanceof ArrayBuffer||ArrayBuffer.isView(R))&&(R={data:R}),typeof R!="object")throw new Error("Invalid parameter in getDocument, need parameter object.");if(!R.url&&!R.data&&!R.range)throw new Error("Invalid parameter object: need either .data, .range or .url");const l=new OV,{docId:U}=l,Z=R.url?Mn(R.url):null,d=R.data?Jn(R.data):null,F=R.httpHeaders||null,W=R.withCredentials===!0,V=R.password??null,c=R.range instanceof bs?R.range:null,t=Number.isInteger(R.rangeChunkSize)&&R.rangeChunkSize>0?R.rangeChunkSize:tn;let N=R.worker instanceof rV?R.worker:null;const s=R.verbosity,b=typeof R.docBaseUrl=="string"&&!QR(R.docBaseUrl)?R.docBaseUrl:null,n=typeof R.cMapUrl=="string"?R.cMapUrl:null,h=R.cMapPacked!==!1,M=R.CMapReaderFactory||bn,G=typeof R.standardFontDataUrl=="string"?R.standardFontDataUrl:null,J=R.StandardFontDataFactory||nn,T=R.stopAtErrors!==!0,X=Number.isInteger(R.maxImageSize)&&R.maxImageSize>-1?R.maxImageSize:-1,S=R.isEvalSupported!==!1,e=typeof R.isOffscreenCanvasSupported=="boolean"?R.isOffscreenCanvasSupported:!hl,Y=Number.isInteger(R.canvasMaxAreaInBytes)?R.canvasMaxAreaInBytes:-1,B=typeof R.disableFontFace=="boolean"?R.disableFontFace:hl,p=R.fontExtraProperties===!0,z=R.enableXfa===!0,C=R.ownerDocument||globalThis.document,L=R.disableRange===!0,v=R.disableStream===!0,r=R.disableAutoFetch===!0,P=R.pdfBug===!0,f=c?c.length:R.length??NaN,dl=typeof R.useSystemFonts=="boolean"?R.useSystemFonts:!hl&&!B,o=typeof R.useWorkerFetch=="boolean"?R.useWorkerFetch:M===IN&&J===EN&&n&&G&&o0(n,document.baseURI)&&o0(G,document.baseURI),w=R.canvasFactory||new sn({ownerDocument:C}),Y0=R.filterFactory||new an({docId:U,ownerDocument:C}),et=null;_b(s);const S0={canvasFactory:w,filterFactory:Y0};if(o||(S0.cMapReaderFactory=new M({baseUrl:n,isCompressed:h}),S0.standardFontDataFactory=new J({baseUrl:G})),!N){const PZ={verbosity:s,port:gU.workerPort};N=PZ.port?rV.fromPort(PZ):new rV(PZ),l._worker=N}const _l={docId:U,apiVersion:"4.3.54",data:d,password:V,disableAutoFetch:r,rangeChunkSize:t,length:f,docBaseUrl:b,enableXfa:z,evaluatorOptions:{maxImageSize:X,disableFontFace:B,ignoreErrors:T,isEvalSupported:S,isOffscreenCanvasSupported:e,canvasMaxAreaInBytes:Y,fontExtraProperties:p,useSystemFonts:dl,cMapUrl:o?n:null,standardFontDataUrl:o?G:null}},pl={disableFontFace:B,fontExtraProperties:p,enableXfa:z,ownerDocument:C,disableAutoFetch:r,pdfBug:P,styleElement:et};return N.promise.then(function(){if(l.destroyed)throw new Error("Loading aborted");const PZ=mn(N,_l),zR=new Promise(function(AZ){let Fl;c?Fl=new Ha(c,{disableRange:L,disableStream:v}):d||(Fl=(fZ=>hl?function(){return typeof fetch<"u"&&typeof Response<"u"&&"body"in Response.prototype}()&&o0(fZ.url)?new cs(fZ):new Fn(fZ):o0(fZ.url)?new cs(fZ):new ln(fZ))({url:Z,length:f,httpHeaders:F,withCredentials:W,rangeChunkSize:t,disableRange:L,disableStream:v})),AZ(Fl)});return Promise.all([PZ,zR]).then(function([AZ,Fl]){if(l.destroyed)throw new Error("Loading aborted");const kR=new x0(U,AZ,N.port),fZ=new Yn(kR,l,Fl,pl,S0);l._transport=fZ,kR.send("Ready",null)})}).catch(l._capability.reject),l}async function mn(R,l){if(R.destroyed)throw new Error("Worker was destroyed");const U=await R.messageHandler.sendWithPromise("GetDocRequest",l,l.data?[l.data.buffer]:null);if(R.destroyed)throw new Error("Worker was destroyed");return U}function Mn(R){if(R instanceof URL)return R.href;try{return new URL(R,window.location).href}catch{if(hl&&typeof R=="string")return R}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}function Jn(R){if(hl&&typeof Buffer<"u"&&R instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(R instanceof Uint8Array&&R.byteLength===R.buffer.byteLength)return R;if(typeof R=="string")return BV(R);if(R instanceof ArrayBuffer||ArrayBuffer.isView(R)||typeof R=="object"&&!isNaN(R==null?void 0:R.length))return new Uint8Array(R);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}function ss(R){return typeof R=="object"&&Number.isInteger(R==null?void 0:R.num)&&R.num>=0&&Number.isInteger(R==null?void 0:R.gen)&&R.gen>=0}const uR=class{constructor(){this._capability=Promise.withResolvers(),this._transport=null,this._worker=null,this.docId=`d${MU(uR,kc)._++}`,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){var l,U,Z;this.destroyed=!0;try{(l=this._worker)!=null&&l.port&&(this._worker._pendingDestroy=!0),await((U=this._transport)==null?void 0:U.destroy())}catch(d){throw(Z=this._worker)!=null&&Z.port&&delete this._worker._pendingDestroy,d}this._transport=null,this._worker&&(this._worker.destroy(),this._worker=null)}};let OV=uR;kc=new WeakMap,a(OV,kc,0);class bs{constructor(l,U,Z=!1,d=null){this.length=l,this.initialData=U,this.progressiveDone=Z,this.contentDispositionFilename=d,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=Promise.withResolvers()}addRangeListener(l){this._rangeListeners.push(l)}addProgressListener(l){this._progressListeners.push(l)}addProgressiveReadListener(l){this._progressiveReadListeners.push(l)}addProgressiveDoneListener(l){this._progressiveDoneListeners.push(l)}onDataRange(l,U){for(const Z of this._rangeListeners)Z(l,U)}onDataProgress(l,U){this._readyCapability.promise.then(()=>{for(const Z of this._progressListeners)Z(l,U)})}onDataProgressiveRead(l){this._readyCapability.promise.then(()=>{for(const U of this._progressiveReadListeners)U(l)})}onDataProgressiveDone(){this._readyCapability.promise.then(()=>{for(const l of this._progressiveDoneListeners)l()})}transportReady(){this._readyCapability.resolve()}requestDataRange(l,U){_("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}class Gn{constructor(l,U){this._pdfInfo=l,this._transport=U}get annotationStorage(){return this._transport.annotationStorage}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return g(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(l){return this._transport.getPage(l)}getPageIndex(l){return this._transport.getPageIndex(l)}getDestinations(){return this._transport.getDestinations()}getDestination(l){return this._transport.getDestination(l)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getOptionalContentConfig(U)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(l=!1){return this._transport.startCleanup(l||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(l){return this._transport.cachedPageNumber(l)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}class Tn{constructor(l,U,Z,d=!1){a(this,oZ);a(this,DF);a(this,kZ,null);a(this,WZ,!1);this._pageIndex=l,this._pageInfo=U,this._transport=Z,this._stats=d?new CN:null,this._pdfBug=d,this.commonObjs=Z.commonObjs,this.objs=new as,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:l,rotation:U=this.rotate,offsetX:Z=0,offsetY:d=0,dontFlip:F=!1}={}){return new k0({viewBox:this.view,scale:l,rotation:U,offsetX:Z,offsetY:d,dontFlip:F})}getAnnotations({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getAnnotations(this._pageIndex,U)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return g(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){var l;return((l=this._transport._htmlForXfa)==null?void 0:l.children[this._pageIndex])||null}render({canvasContext:l,viewport:U,intent:Z="display",annotationMode:d=JZ.ENABLE,transform:F=null,background:W=null,optionalContentConfigPromise:V=null,annotationCanvasMap:c=null,pageColors:t=null,printAnnotationStorage:N=null}){var X,S;(X=this._stats)==null||X.time("Overall");const s=this._transport.getRenderingIntent(Z,d,N),{renderingIntent:b,cacheKey:n}=s;i(this,WZ,!1),m(this,DF,ot).call(this),V||(V=this._transport.getOptionalContentConfig(b));let h=this._intentStates.get(n);h||(h=Object.create(null),this._intentStates.set(n,h)),h.streamReaderCancelTimeout&&(clearTimeout(h.streamReaderCancelTimeout),h.streamReaderCancelTimeout=null);const M=!!(b&ql.PRINT);h.displayReadyCapability||(h.displayReadyCapability=Promise.withResolvers(),h.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(S=this._stats)==null||S.time("Page Request"),this._pumpOperatorList(s));const G=e=>{var Y;h.renderTasks.delete(J),(this._maybeCleanupAfterRender||M)&&i(this,WZ,!0),m(this,oZ,u0).call(this,!M),e?(J.capability.reject(e),this._abortOperatorList({intentState:h,reason:e instanceof Error?e:new Error(e)})):J.capability.resolve(),this._stats&&(this._stats.timeEnd("Rendering"),this._stats.timeEnd("Overall"),(Y=globalThis.Stats)!=null&&Y.enabled&&globalThis.Stats.add(this.pageNumber,this._stats))},J=new gV({callback:G,params:{canvasContext:l,viewport:U,transform:F,background:W},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:c,operatorList:h.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!M,pdfBug:this._pdfBug,pageColors:t});(h.renderTasks||(h.renderTasks=new Set)).add(J);const T=J.task;return Promise.all([h.displayReadyCapability.promise,V]).then(([e,Y])=>{var B;if(this.destroyed){G();return}if((B=this._stats)==null||B.time("Rendering"),!(Y.renderingIntent&b))throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` and `PDFDocumentProxy.getOptionalContentConfig` methods.");J.initializeGraphics({transparency:e,optionalContentConfig:Y}),J.operatorListChanged()}).catch(G),T}getOperatorList({intent:l="display",annotationMode:U=JZ.ENABLE,printAnnotationStorage:Z=null}={}){var c;function d(){W.operatorList.lastChunk&&(W.opListReadCapability.resolve(W.operatorList),W.renderTasks.delete(V))}const F=this._transport.getRenderingIntent(l,U,Z,!0);let W=this._intentStates.get(F.cacheKey);W||(W=Object.create(null),this._intentStates.set(F.cacheKey,W));let V;return W.opListReadCapability||(V=Object.create(null),V.operatorListChanged=d,W.opListReadCapability=Promise.withResolvers(),(W.renderTasks||(W.renderTasks=new Set)).add(V),W.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(c=this._stats)==null||c.time("Page Request"),this._pumpOperatorList(F)),W.opListReadCapability.promise}streamTextContent({includeMarkedContent:l=!1,disableNormalization:U=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:l===!0,disableNormalization:U===!0},{highWaterMark:100,size(d){return d.items.length}})}getTextContent(l={}){if(this._transport._htmlForXfa)return this.getXfa().then(Z=>j0.textContent(Z));const U=this.streamTextContent(l);return new Promise(function(Z,d){function F(){W.read().then(function({value:c,done:t}){if(t){Z(V);return}V.lang??(V.lang=c.lang),Object.assign(V.styles,c.styles),V.items.push(...c.items),F()},d)}const W=U.getReader(),V={items:[],styles:Object.create(null),lang:null};F()})}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const l=[];for(const U of this._intentStates.values())if(this._abortOperatorList({intentState:U,reason:new Error("Page was destroyed."),force:!0}),!U.opListReadCapability)for(const Z of U.renderTasks)l.push(Z.completed),Z.cancel();return this.objs.clear(),i(this,WZ,!1),m(this,DF,ot).call(this),Promise.all(l)}cleanup(l=!1){i(this,WZ,!0);const U=m(this,oZ,u0).call(this,!1);return l&&U&&this._stats&&(this._stats=new CN),U}_startRenderPage(l,U){var d,F;const Z=this._intentStates.get(U);Z&&((d=this._stats)==null||d.timeEnd("Page Request"),(F=Z.displayReadyCapability)==null||F.resolve(l))}_renderPageChunk(l,U){for(let Z=0,d=l.length;Z<d;Z++)U.operatorList.fnArray.push(l.fnArray[Z]),U.operatorList.argsArray.push(l.argsArray[Z]);U.operatorList.lastChunk=l.lastChunk,U.operatorList.separateAnnots=l.separateAnnots;for(const Z of U.renderTasks)Z.operatorListChanged();l.lastChunk&&m(this,oZ,u0).call(this,!0)}_pumpOperatorList({renderingIntent:l,cacheKey:U,annotationStorageSerializable:Z}){const{map:d,transfer:F}=Z,V=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:l,cacheKey:U,annotationStorage:d},F).getReader(),c=this._intentStates.get(U);c.streamReader=V;const t=()=>{V.read().then(({value:N,done:s})=>{if(s){c.streamReader=null;return}this._transport.destroyed||(this._renderPageChunk(N,c),t())},N=>{if(c.streamReader=null,!this._transport.destroyed){if(c.operatorList){c.operatorList.lastChunk=!0;for(const s of c.renderTasks)s.operatorListChanged();m(this,oZ,u0).call(this,!0)}if(c.displayReadyCapability)c.displayReadyCapability.reject(N);else if(c.opListReadCapability)c.opListReadCapability.reject(N);else throw N}})};t()}_abortOperatorList({intentState:l,reason:U,force:Z=!1}){if(l.streamReader){if(l.streamReaderCancelTimeout&&(clearTimeout(l.streamReaderCancelTimeout),l.streamReaderCancelTimeout=null),!Z){if(l.renderTasks.size>0)return;if(U instanceof WR){let d=Rn;U.extraDelay>0&&U.extraDelay<1e3&&(d+=U.extraDelay),l.streamReaderCancelTimeout=setTimeout(()=>{l.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:l,reason:U,force:!0})},d);return}}if(l.streamReader.cancel(new ld(U.message)).catch(()=>{}),l.streamReader=null,!this._transport.destroyed){for(const[d,F]of this._intentStates)if(F===l){this._intentStates.delete(d);break}this.cleanup()}}}get stats(){return this._stats}}kZ=new WeakMap,WZ=new WeakMap,oZ=new WeakSet,u0=function(l=!1){if(m(this,DF,ot).call(this),!Q(this,WZ)||this.destroyed)return!1;if(l)return i(this,kZ,setTimeout(()=>{i(this,kZ,null),m(this,oZ,u0).call(this,!1)},Nn)),!1;for(const{renderTasks:U,operatorList:Z}of this._intentStates.values())if(U.size>0||!Z.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),i(this,WZ,!1),!0},DF=new WeakSet,ot=function(){Q(this,kZ)&&(clearTimeout(Q(this,kZ)),i(this,kZ,null))};class Xn{constructor(){a(this,pd,new Set);a(this,oc,Promise.resolve())}postMessage(l,U){const Z={data:structuredClone(l,U?{transfer:U}:null)};Q(this,oc).then(()=>{for(const d of Q(this,pd))d.call(this,Z)})}addEventListener(l,U){Q(this,pd).add(U)}removeEventListener(l,U){Q(this,pd).delete(U)}terminate(){Q(this,pd).clear()}}pd=new WeakMap,oc=new WeakMap;const HU={isWorkerDisabled:!1,fakeWorkerId:0};hl&&(HU.isWorkerDisabled=!0,gU.workerSrc||(gU.workerSrc="./pdf.worker.mjs")),HU.isSameOrigin=function(R,l){let U;try{if(U=new URL(R),!U.origin||U.origin==="null")return!1}catch{return!1}const Z=new URL(l,U);return U.origin===Z.origin},HU.createCDNWrapper=function(R){const l=`await import("${R}");`;return URL.createObjectURL(new Blob([l],{type:"text/javascript"}))};let rV=(Il=class{constructor({name:l=null,port:U=null,verbosity:Z=qb()}={}){var d;if(this.name=l,this.destroyed=!1,this.verbosity=Z,this._readyCapability=Promise.withResolvers(),this._port=null,this._webWorker=null,this._messageHandler=null,U){if((d=Q(Il,ud))!=null&&d.has(U))throw new Error("Cannot use more than one PDFWorker per port.");(Q(Il,ud)||i(Il,ud,new WeakMap)).set(U,this),this._initializeFromPort(U);return}this._initialize()}get promise(){return hl?Promise.all([GU.promise,this._readyCapability.promise]):this._readyCapability.promise}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(l){this._port=l,this._messageHandler=new x0("main","worker",l),this._messageHandler.on("ready",function(){}),this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})}_initialize(){if(!HU.isWorkerDisabled&&!Q(Il,IF,Dt)){let{workerSrc:l}=Il;try{HU.isSameOrigin(window.location.href,l)||(l=HU.createCDNWrapper(new URL(l,window.location).href));const U=new Worker(l,{type:"module"}),Z=new x0("main","worker",U),d=()=>{U.removeEventListener("error",F),Z.destroy(),U.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},F=()=>{this._webWorker||d()};U.addEventListener("error",F),Z.on("test",V=>{if(U.removeEventListener("error",F),this.destroyed){d();return}V?(this._messageHandler=Z,this._port=U,this._webWorker=U,this._readyCapability.resolve(),Z.send("configure",{verbosity:this.verbosity})):(this._setupFakeWorker(),Z.destroy(),U.terminate())}),Z.on("ready",V=>{if(U.removeEventListener("error",F),this.destroyed){d();return}try{W()}catch{this._setupFakeWorker()}});const W=()=>{const V=new Uint8Array;Z.send("test",V,[V.buffer])};W();return}catch{YV("The worker has been disabled.")}}this._setupFakeWorker()}_setupFakeWorker(){HU.isWorkerDisabled||(x("Setting up fake worker."),HU.isWorkerDisabled=!0),Il._setupFakeWorkerGlobal.then(l=>{if(this.destroyed){this._readyCapability.reject(new Error("Worker was destroyed"));return}const U=new Xn;this._port=U;const Z=`fake${HU.fakeWorkerId++}`,d=new x0(Z+"_worker",Z,U);l.setup(d,U);const F=new x0(Z,Z+"_worker",U);this._messageHandler=F,this._readyCapability.resolve(),F.send("configure",{verbosity:this.verbosity})}).catch(l=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${l.message}".`))})}destroy(){var l;this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),(l=Q(Il,ud))==null||l.delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}static fromPort(l){var Z;if(!(l!=null&&l.port))throw new Error("PDFWorker.fromPort - invalid method signature.");const U=(Z=Q(this,ud))==null?void 0:Z.get(l.port);if(U){if(U._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return U}return new Il(l)}static get workerSrc(){if(gU.workerSrc)return gU.workerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get _setupFakeWorkerGlobal(){return g(this,"_setupFakeWorkerGlobal",(async()=>Q(this,IF,Dt)?Q(this,IF,Dt):(await import(this.workerSrc)).WorkerMessageHandler)())}},ud=new WeakMap,IF=new WeakSet,Dt=function(){var l;try{return((l=globalThis.pdfjsWorker)==null?void 0:l.WorkerMessageHandler)||null}catch{return null}},a(Il,IF),a(Il,ud,void 0),Il);class Yn{constructor(l,U,Z,d,F){a(this,yd);a(this,QZ,new Map);a(this,yU,new Map);a(this,EF,new Map);a(this,CF,new Map);a(this,LU,null);this.messageHandler=l,this.loadingTask=U,this.commonObjs=new as,this.fontLoader=new Ma({ownerDocument:d.ownerDocument,styleElement:d.styleElement}),this._params=d,this.canvasFactory=F.canvasFactory,this.filterFactory=F.filterFactory,this.cMapReaderFactory=F.cMapReaderFactory,this.standardFontDataFactory=F.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._networkStream=Z,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=Promise.withResolvers(),this.setupMessageHandler()}get annotationStorage(){return g(this,"annotationStorage",new NR)}getRenderingIntent(l,U=JZ.ENABLE,Z=null,d=!1){let F=ql.DISPLAY,W=RR;switch(l){case"any":F=ql.ANY;break;case"display":break;case"print":F=ql.PRINT;break;default:x(`getRenderingIntent - invalid intent: ${l}`)}switch(U){case JZ.DISABLE:F+=ql.ANNOTATIONS_DISABLE;break;case JZ.ENABLE:break;case JZ.ENABLE_FORMS:F+=ql.ANNOTATIONS_FORMS;break;case JZ.ENABLE_STORAGE:F+=ql.ANNOTATIONS_STORAGE,W=(F&ql.PRINT&&Z instanceof rN?Z:this.annotationStorage).serializable;break;default:x(`getRenderingIntent - invalid annotationMode: ${U}`)}return d&&(F+=ql.OPLIST),{renderingIntent:F,cacheKey:`${F}_${W.hash}`,annotationStorageSerializable:W}}destroy(){var Z;if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=Promise.withResolvers(),(Z=Q(this,LU))==null||Z.reject(new Error("Worker was destroyed during onPassword callback"));const l=[];for(const d of Q(this,yU).values())l.push(d._destroy());Q(this,yU).clear(),Q(this,EF).clear(),Q(this,CF).clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const U=this.messageHandler.sendWithPromise("Terminate",null);return l.push(U),Promise.all(l).then(()=>{var d;this.commonObjs.clear(),this.fontLoader.clear(),Q(this,QZ).clear(),this.filterFactory.destroy(),Zs(),(d=this._networkStream)==null||d.cancelAllRequests(new ld("Worker was terminated.")),this.messageHandler&&(this.messageHandler.destroy(),this.messageHandler=null),this.destroyCapability.resolve()},this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:l,loadingTask:U}=this;l.on("GetReader",(Z,d)=>{Rl(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=F=>{this._lastProgress={loaded:F.loaded,total:F.total}},d.onPull=()=>{this._fullReader.read().then(function({value:F,done:W}){if(W){d.close();return}Rl(F instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),d.enqueue(new Uint8Array(F),1,[F])}).catch(F=>{d.error(F)})},d.onCancel=F=>{this._fullReader.cancel(F),d.ready.catch(W=>{if(!this.destroyed)throw W})}}),l.on("ReaderHeadersReady",Z=>{const d=Promise.withResolvers(),F=this._fullReader;return F.headersReady.then(()=>{var W;(!F.isStreamingSupported||!F.isRangeSupported)&&(this._lastProgress&&((W=U.onProgress)==null||W.call(U,this._lastProgress)),F.onProgress=V=>{var c;(c=U.onProgress)==null||c.call(U,{loaded:V.loaded,total:V.total})}),d.resolve({isStreamingSupported:F.isStreamingSupported,isRangeSupported:F.isRangeSupported,contentLength:F.contentLength})},d.reject),d.promise}),l.on("GetRangeReader",(Z,d)=>{Rl(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const F=this._networkStream.getRangeReader(Z.begin,Z.end);if(!F){d.close();return}d.onPull=()=>{F.read().then(function({value:W,done:V}){if(V){d.close();return}Rl(W instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),d.enqueue(new Uint8Array(W),1,[W])}).catch(W=>{d.error(W)})},d.onCancel=W=>{F.cancel(W),d.ready.catch(V=>{if(!this.destroyed)throw V})}}),l.on("GetDoc",({pdfInfo:Z})=>{this._numPages=Z.numPages,this._htmlForXfa=Z.htmlForXfa,delete Z.htmlForXfa,U._capability.resolve(new Gn(Z,this))}),l.on("DocException",function(Z){let d;switch(Z.name){case"PasswordException":d=new qt(Z.message,Z.code);break;case"InvalidPDFException":d=new zN(Z.message);break;case"MissingPDFException":d=new $Z(Z.message);break;case"UnexpectedResponseException":d=new SV(Z.message,Z.status);break;case"UnknownErrorException":d=new $t(Z.message,Z.details);break;default:_("DocException - expected a valid Error.")}U._capability.reject(d)}),l.on("PasswordRequest",Z=>{if(i(this,LU,Promise.withResolvers()),U.onPassword){const d=F=>{F instanceof Error?Q(this,LU).reject(F):Q(this,LU).resolve({password:F})};try{U.onPassword(d,Z.code)}catch(F){Q(this,LU).reject(F)}}else Q(this,LU).reject(new qt(Z.message,Z.code));return Q(this,LU).promise}),l.on("DataLoaded",Z=>{var d;(d=U.onProgress)==null||d.call(U,{loaded:Z.length,total:Z.length}),this.downloadInfoCapability.resolve(Z)}),l.on("StartRenderPage",Z=>{if(this.destroyed)return;Q(this,yU).get(Z.pageIndex)._startRenderPage(Z.transparency,Z.cacheKey)}),l.on("commonobj",([Z,d,F])=>{var W;if(this.destroyed||this.commonObjs.has(Z))return null;switch(d){case"Font":const{disableFontFace:V,fontExtraProperties:c,pdfBug:t}=this._params;if("error"in F){const n=F.error;x(`Error during font loading: ${n}`),this.commonObjs.resolve(Z,n);break}const N=t&&((W=globalThis.FontInspector)!=null&&W.enabled)?(n,h)=>globalThis.FontInspector.fontAdded(n,h):null,s=new Ja(F,{disableFontFace:V,inspectFont:N});this.fontLoader.bind(s).catch(()=>l.sendWithPromise("FontFallback",{id:Z})).finally(()=>{!c&&s.data&&(s.data=null),this.commonObjs.resolve(Z,s)});break;case"CopyLocalImage":const{imageRef:b}=F;Rl(b,"The imageRef must be defined.");for(const n of Q(this,yU).values())for(const[,h]of n.objs)if(h.ref===b)return h.dataLen?(this.commonObjs.resolve(Z,structuredClone(h)),h.dataLen):null;break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(Z,F);break;default:throw new Error(`Got unknown common object type ${d}`)}return null}),l.on("obj",([Z,d,F,W])=>{var c;if(this.destroyed)return;const V=Q(this,yU).get(d);if(!V.objs.has(Z)){if(V._intentStates.size===0){(c=W==null?void 0:W.bitmap)==null||c.close();return}switch(F){case"Image":V.objs.resolve(Z,W),(W==null?void 0:W.dataLen)>vb&&(V._maybeCleanupAfterRender=!0);break;case"Pattern":V.objs.resolve(Z,W);break;default:throw new Error(`Got unknown object type ${F}`)}}}),l.on("DocProgress",Z=>{var d;this.destroyed||(d=U.onProgress)==null||d.call(U,{loaded:Z.loaded,total:Z.total})}),l.on("FetchBuiltInCMap",Z=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.cMapReaderFactory?this.cMapReaderFactory.fetch(Z):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter."))),l.on("FetchStandardFontData",Z=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.standardFontDataFactory?this.standardFontDataFactory.fetch(Z):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.")))}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){var Z;this.annotationStorage.size<=0&&x("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:l,transfer:U}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:l,filename:((Z=this._fullReader)==null?void 0:Z.filename)??null},U).finally(()=>{this.annotationStorage.resetModified()})}getPage(l){if(!Number.isInteger(l)||l<=0||l>this._numPages)return Promise.reject(new Error("Invalid page request."));const U=l-1,Z=Q(this,EF).get(U);if(Z)return Z;const d=this.messageHandler.sendWithPromise("GetPage",{pageIndex:U}).then(F=>{if(this.destroyed)throw new Error("Transport destroyed");F.refStr&&Q(this,CF).set(F.refStr,l);const W=new Tn(U,F,this,this._params.pdfBug);return Q(this,yU).set(U,W),W});return Q(this,EF).set(U,d),d}getPageIndex(l){return ss(l)?this.messageHandler.sendWithPromise("GetPageIndex",{num:l.num,gen:l.gen}):Promise.reject(new Error("Invalid pageIndex request."))}getAnnotations(l,U){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:l,intent:U})}getFieldObjects(){return m(this,yd,bV).call(this,"GetFieldObjects")}hasJSActions(){return m(this,yd,bV).call(this,"HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(l){return typeof l!="string"?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:l})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return m(this,yd,bV).call(this,"GetDocJSActions")}getPageJSActions(l){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:l})}getStructTree(l){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:l})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(l){return m(this,yd,bV).call(this,"GetOptionalContentConfig").then(U=>new ga(U,l))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const l="GetMetadata",U=Q(this,QZ).get(l);if(U)return U;const Z=this.messageHandler.sendWithPromise(l,null).then(d=>{var F,W;return{info:d[0],metadata:d[1]?new ra(d[1]):null,contentDispositionFilename:((F=this._fullReader)==null?void 0:F.filename)??null,contentLength:((W=this._fullReader)==null?void 0:W.contentLength)??null}});return Q(this,QZ).set(l,Z),Z}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(l=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const U of Q(this,yU).values())if(!U.cleanup())throw new Error(`startCleanup: Page ${U.pageNumber} is currently rendering.`);this.commonObjs.clear(),l||this.fontLoader.clear(),Q(this,QZ).clear(),this.filterFactory.destroy(!0),Zs()}}cachedPageNumber(l){if(!ss(l))return null;const U=l.gen===0?`${l.num}R`:`${l.num}R${l.gen}`;return Q(this,CF).get(U)??null}get loadingParams(){const{disableAutoFetch:l,enableXfa:U}=this._params;return g(this,"loadingParams",{disableAutoFetch:l,enableXfa:U})}}QZ=new WeakMap,yU=new WeakMap,EF=new WeakMap,CF=new WeakMap,LU=new WeakMap,yd=new WeakSet,bV=function(l,U=null){const Z=Q(this,QZ).get(l);if(Z)return Z;const d=this.messageHandler.sendWithPromise(l,U);return Q(this,QZ).set(l,d),d};const KV=Symbol("INITIAL_DATA");class as{constructor(){a(this,AW);a(this,bU,Object.create(null))}get(l,U=null){if(U){const d=m(this,AW,FN).call(this,l);return d.promise.then(()=>U(d.data)),null}const Z=Q(this,bU)[l];if(!Z||Z.data===KV)throw new Error(`Requesting object that isn't resolved yet ${l}.`);return Z.data}has(l){const U=Q(this,bU)[l];return!!U&&U.data!==KV}resolve(l,U=null){const Z=m(this,AW,FN).call(this,l);Z.data=U,Z.resolve()}clear(){var l;for(const U in Q(this,bU)){const{data:Z}=Q(this,bU)[U];(l=Z==null?void 0:Z.bitmap)==null||l.close()}i(this,bU,Object.create(null))}*[Symbol.iterator](){for(const l in Q(this,bU)){const{data:U}=Q(this,bU)[l];U!==KV&&(yield[l,U])}}}bU=new WeakMap,AW=new WeakSet,FN=function(l){var U;return(U=Q(this,bU))[l]||(U[l]={...Promise.withResolvers(),data:KV})};class Sn{constructor(l){a(this,DZ,null);i(this,DZ,l),this.onContinue=null}get promise(){return Q(this,DZ).capability.promise}cancel(l=0){Q(this,DZ).cancel(null,l)}get separateAnnots(){const{separateAnnots:l}=Q(this,DZ).operatorList;if(!l)return!1;const{annotationCanvasMap:U}=Q(this,DZ);return l.form||l.canvas&&(U==null?void 0:U.size)>0}}DZ=new WeakMap;const wF=class{constructor({callback:l,params:U,objs:Z,commonObjs:d,annotationCanvasMap:F,operatorList:W,pageIndex:V,canvasFactory:c,filterFactory:t,useRequestAnimationFrame:N=!1,pdfBug:s=!1,pageColors:b=null}){this.callback=l,this.params=U,this.objs=Z,this.commonObjs=d,this.annotationCanvasMap=F,this.operatorListIdx=null,this.operatorList=W,this._pageIndex=V,this.canvasFactory=c,this.filterFactory=t,this._pdfBug=s,this.pageColors=b,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=N===!0&&typeof window<"u",this.cancelled=!1,this.capability=Promise.withResolvers(),this.task=new Sn(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=U.canvasContext.canvas}get completed(){return this.capability.promise.catch(function(){})}initializeGraphics({transparency:l=!1,optionalContentConfig:U}){var V,c;if(this.cancelled)return;if(this._canvas){if(Q(wF,Ld).has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");Q(wF,Ld).add(this._canvas)}this._pdfBug&&((V=globalThis.StepperManager)!=null&&V.enabled)&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:Z,viewport:d,transform:F,background:W}=this.params;this.gfx=new NF(Z,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:U},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:F,viewport:d,transparency:l,background:W}),this.operatorListIdx=0,this.graphicsReady=!0,(c=this.graphicsReadyCallback)==null||c.call(this)}cancel(l=null,U=0){var Z;this.running=!1,this.cancelled=!0,(Z=this.gfx)==null||Z.endDrawing(),Q(wF,Ld).delete(this._canvas),this.callback(l||new WR(`Rendering cancelled, page ${this._pageIndex+1}`,U))}operatorListChanged(){var l;if(!this.graphicsReady){this.graphicsReadyCallback||(this.graphicsReadyCallback=this._continueBound);return}(l=this.stepper)==null||l.updateOperatorList(this.operatorList),!this.running&&this._continue()}_continue(){this.running=!0,!this.cancelled&&(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?window.requestAnimationFrame(()=>{this._nextBound().catch(this._cancelBound)}):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),Q(wF,Ld).delete(this._canvas),this.callback())))}};let gV=wF;Ld=new WeakMap,a(gV,Ld,new WeakSet);const Bn="4.3.54",en="33f3228e0";function ns(R){return Math.floor(Math.max(0,Math.min(1,R))*255).toString(16).padStart(2,"0")}function O0(R){return Math.max(0,Math.min(255,255*R))}class hs{static CMYK_G([l,U,Z,d]){return["G",1-Math.min(1,.3*l+.59*Z+.11*U+d)]}static G_CMYK([l]){return["CMYK",0,0,0,1-l]}static G_RGB([l]){return["RGB",l,l,l]}static G_rgb([l]){return l=O0(l),[l,l,l]}static G_HTML([l]){const U=ns(l);return`#${U}${U}${U}`}static RGB_G([l,U,Z]){return["G",.3*l+.59*U+.11*Z]}static RGB_rgb(l){return l.map(O0)}static RGB_HTML(l){return`#${l.map(ns).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([l,U,Z,d]){return["RGB",1-Math.min(1,l+d),1-Math.min(1,Z+d),1-Math.min(1,U+d)]}static CMYK_rgb([l,U,Z,d]){return[O0(1-Math.min(1,l+d)),O0(1-Math.min(1,Z+d)),O0(1-Math.min(1,U+d))]}static CMYK_HTML(l){const U=this.CMYK_RGB(l).slice(1);return this.RGB_HTML(U)}static RGB_CMYK([l,U,Z]){const d=1-l,F=1-U,W=1-Z,V=Math.min(d,F,W);return["CMYK",d,F,W,V]}}class ms{static setupStorage(l,U,Z,d,F){const W=d.getValue(U,{value:null});switch(Z.name){case"textarea":if(W.value!==null&&(l.textContent=W.value),F==="print")break;l.addEventListener("input",V=>{d.setValue(U,{value:V.target.value})});break;case"input":if(Z.attributes.type==="radio"||Z.attributes.type==="checkbox"){if(W.value===Z.attributes.xfaOn?l.setAttribute("checked",!0):W.value===Z.attributes.xfaOff&&l.removeAttribute("checked"),F==="print")break;l.addEventListener("change",V=>{d.setValue(U,{value:V.target.checked?V.target.getAttribute("xfaOn"):V.target.getAttribute("xfaOff")})})}else{if(W.value!==null&&l.setAttribute("value",W.value),F==="print")break;l.addEventListener("input",V=>{d.setValue(U,{value:V.target.value})})}break;case"select":if(W.value!==null){l.setAttribute("value",W.value);for(const V of Z.children)V.attributes.value===W.value?V.attributes.selected=!0:V.attributes.hasOwnProperty("selected")&&delete V.attributes.selected}l.addEventListener("input",V=>{const c=V.target.options,t=c.selectedIndex===-1?"":c[c.selectedIndex].value;d.setValue(U,{value:t})});break}}static setAttributes({html:l,element:U,storage:Z=null,intent:d,linkService:F}){const{attributes:W}=U,V=l instanceof HTMLAnchorElement;W.type==="radio"&&(W.name=`${W.name}-${d}`);for(const[c,t]of Object.entries(W))if(t!=null)switch(c){case"class":t.length&&l.setAttribute(c,t.join(" "));break;case"dataId":break;case"id":l.setAttribute("data-element-id",t);break;case"style":Object.assign(l.style,t);break;case"textContent":l.textContent=t;break;default:(!V||c!=="href"&&c!=="newWindow")&&l.setAttribute(c,t)}V&&F.addLinkAttributes(l,W.href,W.newWindow),Z&&W.dataId&&this.setupStorage(l,W.dataId,U,Z)}static render(l){var s,b;const U=l.annotationStorage,Z=l.linkService,d=l.xfaHtml,F=l.intent||"display",W=document.createElement(d.name);d.attributes&&this.setAttributes({html:W,element:d,intent:F,linkService:Z});const V=F!=="richText",c=l.div;if(c.append(W),l.viewport){const n=`matrix(${l.viewport.transform.join(",")})`;c.style.transform=n}V&&c.setAttribute("class","xfaLayer xfaFont");const t=[];if(d.children.length===0){if(d.value){const n=document.createTextNode(d.value);W.append(n),V&&j0.shouldBuildText(d.name)&&t.push(n)}return{textDivs:t}}const N=[[d,-1,W]];for(;N.length>0;){const[n,h,M]=N.at(-1);if(h+1===n.children.length){N.pop();continue}const G=n.children[++N.at(-1)[1]];if(G===null)continue;const{name:J}=G;if(J==="#text"){const X=document.createTextNode(G.value);t.push(X),M.append(X);continue}const T=(s=G==null?void 0:G.attributes)!=null&&s.xmlns?document.createElementNS(G.attributes.xmlns,J):document.createElement(J);if(M.append(T),G.attributes&&this.setAttributes({html:T,element:G,storage:U,intent:F,linkService:Z}),((b=G.children)==null?void 0:b.length)>0)N.push([G,-1,T]);else if(G.value){const X=document.createTextNode(G.value);V&&j0.shouldBuildText(J)&&t.push(X),T.append(X)}}for(const n of c.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))n.setAttribute("readOnly",!0);return{textDivs:t}}static update(l){const U=`matrix(${l.viewport.transform.join(",")})`;l.div.style.transform=U,l.div.hidden=!1}}const r0=1e3,pn=9,dd=new WeakSet;function vU(R){return{width:R[2]-R[0],height:R[3]-R[1]}}class un{static create(l){switch(l.data.annotationType){case tl.LINK:return new is(l);case tl.TEXT:return new yn(l);case tl.WIDGET:switch(l.data.fieldType){case"Tx":return new Ln(l);case"Btn":return l.data.radioButton?new Ms(l):l.data.checkBox?new kn(l):new on(l);case"Ch":return new Dn(l);case"Sig":return new zn(l)}return new Fd(l);case tl.POPUP:return new JR(l);case tl.FREETEXT:return new Js(l);case tl.LINE:return new En(l);case tl.SQUARE:return new Cn(l);case tl.CIRCLE:return new wn(l);case tl.POLYLINE:return new Gs(l);case tl.CARET:return new jn(l);case tl.INK:return new Ts(l);case tl.POLYGON:return new xn(l);case tl.HIGHLIGHT:return new On(l);case tl.UNDERLINE:return new rn(l);case tl.SQUIGGLY:return new Kn(l);case tl.STRIKEOUT:return new gn(l);case tl.STAMP:return new Xs(l);case tl.FILEATTACHMENT:return new Hn(l);default:return new Wl(l)}}}const yR=class{constructor(l,{isRenderable:U=!1,ignoreBorder:Z=!1,createQuadrilaterals:d=!1}={}){a(this,fW);a(this,zd,null);a(this,xF,!1);this.isRenderable=U,this.data=l.data,this.layer=l.layer,this.linkService=l.linkService,this.downloadManager=l.downloadManager,this.imageResourcesPath=l.imageResourcesPath,this.renderForms=l.renderForms,this.svgFactory=l.svgFactory,this.annotationStorage=l.annotationStorage,this.enableScripting=l.enableScripting,this.hasJSActions=l.hasJSActions,this._fieldObjects=l.fieldObjects,this.parent=l.parent,U&&(this.container=this._createContainer(Z)),d&&this._createQuadrilaterals()}static _hasPopupData({titleObj:l,contentsObj:U,richText:Z}){return!!(l!=null&&l.str||U!=null&&U.str||Z!=null&&Z.str)}get hasPopupData(){return yR._hasPopupData(this.data)}updateEdited(l){if(!this.container)return;Q(this,zd)||i(this,zd,{rect:this.data.rect.slice(0)});const{rect:U}=l;U&&m(this,fW,WN).call(this,U)}resetEdited(){Q(this,zd)&&(m(this,fW,WN).call(this,Q(this,zd).rect),i(this,zd,null))}_createContainer(l){const{data:U,parent:{page:Z,viewport:d}}=this,F=document.createElement("section");F.setAttribute("data-annotation-id",U.id),this instanceof Fd||(F.tabIndex=r0);const{style:W}=F;if(W.zIndex=this.parent.zIndex++,U.popupRef&&F.setAttribute("aria-haspopup","dialog"),U.alternativeText&&(F.title=U.alternativeText),U.noRotate&&F.classList.add("norotate"),!U.rect||this instanceof JR){const{rotation:M}=U;return!U.hasOwnCanvas&&M!==0&&this.setRotation(M,F),F}const{width:V,height:c}=vU(U.rect);if(!l&&U.borderStyle.width>0){W.borderWidth=`${U.borderStyle.width}px`;const M=U.borderStyle.horizontalCornerRadius,G=U.borderStyle.verticalCornerRadius;if(M>0||G>0){const T=`calc(${M}px * var(--scale-factor)) / calc(${G}px * var(--scale-factor))`;W.borderRadius=T}else if(this instanceof Ms){const T=`calc(${V}px * var(--scale-factor)) / calc(${c}px * var(--scale-factor))`;W.borderRadius=T}switch(U.borderStyle.style){case z0.SOLID:W.borderStyle="solid";break;case z0.DASHED:W.borderStyle="dashed";break;case z0.BEVELED:x("Unimplemented border style: beveled");break;case z0.INSET:x("Unimplemented border style: inset");break;case z0.UNDERLINE:W.borderBottomStyle="solid";break}const J=U.borderColor||null;J?(i(this,xF,!0),W.borderColor=y.makeHexColor(J[0]|0,J[1]|0,J[2]|0)):W.borderWidth=0}const t=y.normalizeRect([U.rect[0],Z.view[3]-U.rect[1]+Z.view[1],U.rect[2],Z.view[3]-U.rect[3]+Z.view[1]]),{pageWidth:N,pageHeight:s,pageX:b,pageY:n}=d.rawDims;W.left=`${100*(t[0]-b)/N}%`,W.top=`${100*(t[1]-n)/s}%`;const{rotation:h}=U;return U.hasOwnCanvas||h===0?(W.width=`${100*V/N}%`,W.height=`${100*c/s}%`):this.setRotation(h,F),F}setRotation(l,U=this.container){if(!this.data.rect)return;const{pageWidth:Z,pageHeight:d}=this.parent.viewport.rawDims,{width:F,height:W}=vU(this.data.rect);let V,c;l%180===0?(V=100*F/Z,c=100*W/d):(V=100*W/Z,c=100*F/d),U.style.width=`${V}%`,U.style.height=`${c}%`,U.setAttribute("data-main-rotation",(360-l)%360)}get _commonActions(){const l=(U,Z,d)=>{const F=d.detail[U],W=F[0],V=F.slice(1);d.target.style[Z]=hs[`${W}_HTML`](V),this.annotationStorage.setValue(this.data.id,{[Z]:hs[`${W}_rgb`](V)})};return g(this,"_commonActions",{display:U=>{const{display:Z}=U.detail,d=Z%2===1;this.container.style.visibility=d?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noView:d,noPrint:Z===1||Z===2})},print:U=>{this.annotationStorage.setValue(this.data.id,{noPrint:!U.detail.print})},hidden:U=>{const{hidden:Z}=U.detail;this.container.style.visibility=Z?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noPrint:Z,noView:Z})},focus:U=>{setTimeout(()=>U.target.focus({preventScroll:!1}),0)},userName:U=>{U.target.title=U.detail.userName},readonly:U=>{U.target.disabled=U.detail.readonly},required:U=>{this._setRequired(U.target,U.detail.required)},bgColor:U=>{l("bgColor","backgroundColor",U)},fillColor:U=>{l("fillColor","backgroundColor",U)},fgColor:U=>{l("fgColor","color",U)},textColor:U=>{l("textColor","color",U)},borderColor:U=>{l("borderColor","borderColor",U)},strokeColor:U=>{l("strokeColor","borderColor",U)},rotation:U=>{const Z=U.detail.rotation;this.setRotation(Z),this.annotationStorage.setValue(this.data.id,{rotation:Z})}})}_dispatchEventFromSandbox(l,U){const Z=this._commonActions;for(const d of Object.keys(U.detail)){const F=l[d]||Z[d];F==null||F(U)}}_setDefaultPropertiesFromJS(l){if(!this.enableScripting)return;const U=this.annotationStorage.getRawValue(this.data.id);if(!U)return;const Z=this._commonActions;for(const[d,F]of Object.entries(U)){const W=Z[d];if(W){const V={detail:{[d]:F},target:l};W(V),delete U[d]}}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:l}=this.data;if(!l)return;const[U,Z,d,F]=this.data.rect;if(l.length===1){const[,{x:M,y:G},{x:J,y:T}]=l[0];if(d===M&&F===G&&U===J&&Z===T)return}const{style:W}=this.container;let V;if(Q(this,xF)){const{borderColor:M,borderWidth:G}=W;W.borderWidth=0,V=["url('data:image/svg+xml;utf8,",'<svg xmlns="http://www.w3.org/2000/svg"',' preserveAspectRatio="none" viewBox="0 0 1 1">',`<g fill="transparent" stroke="${M}" stroke-width="${G}">`],this.container.classList.add("hasBorder")}const c=d-U,t=F-Z,{svgFactory:N}=this,s=N.createElement("svg");s.classList.add("quadrilateralsContainer"),s.setAttribute("width",0),s.setAttribute("height",0);const b=N.createElement("defs");s.append(b);const n=N.createElement("clipPath"),h=`clippath_${this.data.id}`;n.setAttribute("id",h),n.setAttribute("clipPathUnits","objectBoundingBox"),b.append(n);for(const[,{x:M,y:G},{x:J,y:T}]of l){const X=N.createElement("rect"),S=(J-U)/c,e=(F-G)/t,Y=(M-J)/c,B=(G-T)/t;X.setAttribute("x",S),X.setAttribute("y",e),X.setAttribute("width",Y),X.setAttribute("height",B),n.append(X),V==null||V.push(`<rect vector-effect="non-scaling-stroke" x="${S}" y="${e}" width="${Y}" height="${B}"/>`)}Q(this,xF)&&(V.push("</g></svg>')"),W.backgroundImage=V.join("")),this.container.append(s),this.container.style.clipPath=`url(#${h})`}_createPopup(){const{container:l,data:U}=this;l.setAttribute("aria-haspopup","dialog");const Z=new JR({data:{color:U.color,titleObj:U.titleObj,modificationDate:U.modificationDate,contentsObj:U.contentsObj,richText:U.richText,parentRect:U.rect,borderStyle:0,id:`popup_${U.id}`,rotation:U.rotation},parent:this.parent,elements:[this]});this.parent.div.append(Z.render())}render(){_("Abstract method `AnnotationElement.render` called")}_getElementsByName(l,U=null){const Z=[];if(this._fieldObjects){const d=this._fieldObjects[l];if(d)for(const{page:F,id:W,exportValues:V}of d){if(F===-1||W===U)continue;const c=typeof V=="string"?V:null,t=document.querySelector(`[data-element-id="${W}"]`);if(t&&!dd.has(t)){x(`_getElementsByName - element not allowed: ${W}`);continue}Z.push({id:W,exportValue:c,domElement:t})}return Z}for(const d of document.getElementsByName(l)){const{exportValue:F}=d,W=d.getAttribute("data-element-id");W!==U&&dd.has(d)&&Z.push({id:W,exportValue:F,domElement:d})}return Z}show(){var l;this.container&&(this.container.hidden=!1),(l=this.popup)==null||l.maybeShow()}hide(){var l;this.container&&(this.container.hidden=!0),(l=this.popup)==null||l.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const l=this.getElementsToTriggerPopup();if(Array.isArray(l))for(const U of l)U.classList.add("highlightArea");else l.classList.add("highlightArea")}get _isEditable(){return!1}_editOnDoubleClick(){if(!this._isEditable)return;const{annotationEditorType:l,data:{id:U}}=this;this.container.addEventListener("dblclick",()=>{var Z;(Z=this.linkService.eventBus)==null||Z.dispatch("switchannotationeditormode",{source:this,mode:l,editId:U})})}};let Wl=yR;zd=new WeakMap,xF=new WeakMap,fW=new WeakSet,WN=function(l){const{container:{style:U},data:{rect:Z,rotation:d},parent:{viewport:{rawDims:{pageWidth:F,pageHeight:W,pageX:V,pageY:c}}}}=this;Z==null||Z.splice(0,4,...l);const{width:t,height:N}=vU(l);U.left=`${100*(l[0]-V)/F}%`,U.top=`${100*(W-l[3]+c)/W}%`,d===0?(U.width=`${100*t/F}%`,U.height=`${100*N/W}%`):this.setRotation(d)};class is extends Wl{constructor(U,Z=null){super(U,{isRenderable:!0,ignoreBorder:!!(Z!=null&&Z.ignoreBorder),createQuadrilaterals:!0});a(this,VZ);a(this,Dc);a(this,Ic);this.isTooltipOnly=U.data.isTooltipOnly}render(){const{data:U,linkService:Z}=this,d=document.createElement("a");d.setAttribute("data-element-id",U.id);let F=!1;return U.url?(Z.addLinkAttributes(d,U.url,U.newWindow),F=!0):U.action?(this._bindNamedAction(d,U.action),F=!0):U.attachment?(m(this,Dc,Qb).call(this,d,U.attachment,U.attachmentDest),F=!0):U.setOCGState?(m(this,Ic,Vb).call(this,d,U.setOCGState),F=!0):U.dest?(this._bindLink(d,U.dest),F=!0):(U.actions&&(U.actions.Action||U.actions["Mouse Up"]||U.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(d,U),F=!0),U.resetForm?(this._bindResetFormAction(d,U.resetForm),F=!0):this.isTooltipOnly&&!F&&(this._bindLink(d,""),F=!0)),this.container.classList.add("linkAnnotation"),F&&this.container.append(d),this.container}_bindLink(U,Z){U.href=this.linkService.getDestinationHash(Z),U.onclick=()=>(Z&&this.linkService.goToDestination(Z),!1),(Z||Z==="")&&m(this,VZ,cF).call(this)}_bindNamedAction(U,Z){U.href=this.linkService.getAnchorUrl(""),U.onclick=()=>(this.linkService.executeNamedAction(Z),!1),m(this,VZ,cF).call(this)}_bindJSAction(U,Z){U.href=this.linkService.getAnchorUrl("");const d=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const F of Object.keys(Z.actions)){const W=d.get(F);W&&(U[W]=()=>{var V;return(V=this.linkService.eventBus)==null||V.dispatch("dispatcheventinsandbox",{source:this,detail:{id:Z.id,name:F}}),!1})}U.onclick||(U.onclick=()=>!1),m(this,VZ,cF).call(this)}_bindResetFormAction(U,Z){const d=U.onclick;if(d||(U.href=this.linkService.getAnchorUrl("")),m(this,VZ,cF).call(this),!this._fieldObjects){x('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),d||(U.onclick=()=>!1);return}U.onclick=()=>{var s;d==null||d();const{fields:F,refs:W,include:V}=Z,c=[];if(F.length!==0||W.length!==0){const b=new Set(W);for(const n of F){const h=this._fieldObjects[n]||[];for(const{id:M}of h)b.add(M)}for(const n of Object.values(this._fieldObjects))for(const h of n)b.has(h.id)===V&&c.push(h)}else for(const b of Object.values(this._fieldObjects))c.push(...b);const t=this.annotationStorage,N=[];for(const b of c){const{id:n}=b;switch(N.push(n),b.type){case"text":{const M=b.defaultValue||"";t.setValue(n,{value:M});break}case"checkbox":case"radiobutton":{const M=b.defaultValue===b.exportValues;t.setValue(n,{value:M});break}case"combobox":case"listbox":{const M=b.defaultValue||"";t.setValue(n,{value:M});break}default:continue}const h=document.querySelector(`[data-element-id="${n}"]`);if(h){if(!dd.has(h)){x(`_bindResetFormAction - element not allowed: ${n}`);continue}}else continue;h.dispatchEvent(new Event("resetform"))}return this.enableScripting&&((s=this.linkService.eventBus)==null||s.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:N,name:"ResetForm"}})),!1}}}VZ=new WeakSet,cF=function(){this.container.setAttribute("data-internal-link","")},Dc=new WeakSet,Qb=function(U,Z,d=null){U.href=this.linkService.getAnchorUrl(""),Z.description&&(U.title=Z.description),U.onclick=()=>{var F;return(F=this.downloadManager)==null||F.openOrDownloadData(Z.content,Z.filename,d),!1},m(this,VZ,cF).call(this)},Ic=new WeakSet,Vb=function(U,Z){U.href=this.linkService.getAnchorUrl(""),U.onclick=()=>(this.linkService.executeSetOCGState(Z),!1),m(this,VZ,cF).call(this)};class yn extends Wl{constructor(l){super(l,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const l=document.createElement("img");return l.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",l.setAttribute("data-l10n-id","pdfjs-text-annotation-type"),l.setAttribute("data-l10n-args",JSON.stringify({type:this.data.name})),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.append(l),this.container}}class Fd extends Wl{render(){return this.container}showElementAndHideCanvas(l){var U;this.data.hasOwnCanvas&&(((U=l.previousSibling)==null?void 0:U.nodeName)==="CANVAS"&&(l.previousSibling.hidden=!0),l.hidden=!1)}_getKeyModifier(l){return xl.platform.isMac?l.metaKey:l.ctrlKey}_setEventListener(l,U,Z,d,F){Z.includes("mouse")?l.addEventListener(Z,W=>{var V;(V=this.linkService.eventBus)==null||V.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:d,value:F(W),shift:W.shiftKey,modifier:this._getKeyModifier(W)}})}):l.addEventListener(Z,W=>{var V;if(Z==="blur"){if(!U.focused||!W.relatedTarget)return;U.focused=!1}else if(Z==="focus"){if(U.focused)return;U.focused=!0}F&&((V=this.linkService.eventBus)==null||V.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:d,value:F(W)}}))})}_setEventListeners(l,U,Z,d){var F,W,V;for(const[c,t]of Z)(t==="Action"||(F=this.data.actions)!=null&&F[t])&&((t==="Focus"||t==="Blur")&&(U||(U={focused:!1})),this._setEventListener(l,U,c,t,d),t==="Focus"&&!((W=this.data.actions)!=null&&W.Blur)?this._setEventListener(l,U,"blur","Blur",null):t==="Blur"&&!((V=this.data.actions)!=null&&V.Focus)&&this._setEventListener(l,U,"focus","Focus",null))}_setBackgroundColor(l){const U=this.data.backgroundColor||null;l.style.backgroundColor=U===null?"transparent":y.makeHexColor(U[0],U[1],U[2])}_setTextStyle(l){const U=["left","center","right"],{fontColor:Z}=this.data.defaultAppearanceData,d=this.data.defaultAppearanceData.fontSize||pn,F=l.style;let W;const V=2,c=t=>Math.round(10*t)/10;if(this.data.multiLine){const t=Math.abs(this.data.rect[3]-this.data.rect[1]-V),N=Math.round(t/(ft*d))||1,s=t/N;W=Math.min(d,c(s/ft))}else{const t=Math.abs(this.data.rect[3]-this.data.rect[1]-V);W=Math.min(d,c(t/ft))}F.fontSize=`calc(${W}px * var(--scale-factor))`,F.color=y.makeHexColor(Z[0],Z[1],Z[2]),this.data.textAlignment!==null&&(F.textAlign=U[this.data.textAlignment])}_setRequired(l,U){U?l.setAttribute("required",!0):l.removeAttribute("required"),l.setAttribute("aria-required",U)}}class Ln extends Fd{constructor(l){const U=l.renderForms||l.data.hasOwnCanvas||!l.data.hasAppearance&&!!l.data.fieldValue;super(l,{isRenderable:U})}setPropertyOnSiblings(l,U,Z,d){const F=this.annotationStorage;for(const W of this._getElementsByName(l.name,l.id))W.domElement&&(W.domElement[U]=Z),F.setValue(W.id,{[d]:Z})}render(){var d,F;const l=this.annotationStorage,U=this.data.id;this.container.classList.add("textWidgetAnnotation");let Z=null;if(this.renderForms){const W=l.getValue(U,{value:this.data.fieldValue});let V=W.value||"";const c=l.getValue(U,{charLimit:this.data.maxLen}).charLimit;c&&V.length>c&&(V=V.slice(0,c));let t=W.formattedValue||((d=this.data.textContent)==null?void 0:d.join(`
`))||null;t&&this.data.comb&&(t=t.replaceAll(/\s+/g,""));const N={userValue:V,formattedValue:t,lastCommittedValue:null,commitKey:1,focused:!1};this.data.multiLine?(Z=document.createElement("textarea"),Z.textContent=t??V,this.data.doNotScroll&&(Z.style.overflowY="hidden")):(Z=document.createElement("input"),Z.type="text",Z.setAttribute("value",t??V),this.data.doNotScroll&&(Z.style.overflowX="hidden")),this.data.hasOwnCanvas&&(Z.hidden=!0),dd.add(Z),Z.setAttribute("data-element-id",U),Z.disabled=this.data.readOnly,Z.name=this.data.fieldName,Z.tabIndex=r0,this._setRequired(Z,this.data.required),c&&(Z.maxLength=c),Z.addEventListener("input",b=>{l.setValue(U,{value:b.target.value}),this.setPropertyOnSiblings(Z,"value",b.target.value,"value"),N.formattedValue=null}),Z.addEventListener("resetform",b=>{const n=this.data.defaultFieldValue??"";Z.value=N.userValue=n,N.formattedValue=null});let s=b=>{const{formattedValue:n}=N;n!=null&&(b.target.value=n),b.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){Z.addEventListener("focus",n=>{var M;if(N.focused)return;const{target:h}=n;N.userValue&&(h.value=N.userValue),N.lastCommittedValue=h.value,N.commitKey=1,(M=this.data.actions)!=null&&M.Focus||(N.focused=!0)}),Z.addEventListener("updatefromsandbox",n=>{this.showElementAndHideCanvas(n.target);const h={value(M){N.userValue=M.detail.value??"",l.setValue(U,{value:N.userValue.toString()}),M.target.value=N.userValue},formattedValue(M){const{formattedValue:G}=M.detail;N.formattedValue=G,G!=null&&M.target!==document.activeElement&&(M.target.value=G),l.setValue(U,{formattedValue:G})},selRange(M){M.target.setSelectionRange(...M.detail.selRange)},charLimit:M=>{var X;const{charLimit:G}=M.detail,{target:J}=M;if(G===0){J.removeAttribute("maxLength");return}J.setAttribute("maxLength",G);let T=N.userValue;!T||T.length<=G||(T=T.slice(0,G),J.value=N.userValue=T,l.setValue(U,{value:T}),(X=this.linkService.eventBus)==null||X.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:T,willCommit:!0,commitKey:1,selStart:J.selectionStart,selEnd:J.selectionEnd}}))}};this._dispatchEventFromSandbox(h,n)}),Z.addEventListener("keydown",n=>{var G;N.commitKey=1;let h=-1;if(n.key==="Escape"?h=0:n.key==="Enter"&&!this.data.multiLine?h=2:n.key==="Tab"&&(N.commitKey=3),h===-1)return;const{value:M}=n.target;N.lastCommittedValue!==M&&(N.lastCommittedValue=M,N.userValue=M,(G=this.linkService.eventBus)==null||G.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:M,willCommit:!0,commitKey:h,selStart:n.target.selectionStart,selEnd:n.target.selectionEnd}}))});const b=s;s=null,Z.addEventListener("blur",n=>{var M,G;if(!N.focused||!n.relatedTarget)return;(M=this.data.actions)!=null&&M.Blur||(N.focused=!1);const{value:h}=n.target;N.userValue=h,N.lastCommittedValue!==h&&((G=this.linkService.eventBus)==null||G.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:h,willCommit:!0,commitKey:N.commitKey,selStart:n.target.selectionStart,selEnd:n.target.selectionEnd}})),b(n)}),(F=this.data.actions)!=null&&F.Keystroke&&Z.addEventListener("beforeinput",n=>{var e;N.lastCommittedValue=null;const{data:h,target:M}=n,{value:G,selectionStart:J,selectionEnd:T}=M;let X=J,S=T;switch(n.inputType){case"deleteWordBackward":{const Y=G.substring(0,J).match(/\w*[^\w]*$/);Y&&(X-=Y[0].length);break}case"deleteWordForward":{const Y=G.substring(J).match(/^[^\w]*\w*/);Y&&(S+=Y[0].length);break}case"deleteContentBackward":J===T&&(X-=1);break;case"deleteContentForward":J===T&&(S+=1);break}n.preventDefault(),(e=this.linkService.eventBus)==null||e.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:G,change:h||"",willCommit:!1,selStart:X,selEnd:S}})}),this._setEventListeners(Z,N,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],n=>n.target.value)}if(s&&Z.addEventListener("blur",s),this.data.comb){const n=(this.data.rect[2]-this.data.rect[0])/c;Z.classList.add("comb"),Z.style.letterSpacing=`calc(${n}px * var(--scale-factor) - 1ch)`}}else Z=document.createElement("div"),Z.textContent=this.data.fieldValue,Z.style.verticalAlign="middle",Z.style.display="table-cell",this.data.hasOwnCanvas&&(Z.hidden=!0);return this._setTextStyle(Z),this._setBackgroundColor(Z),this._setDefaultPropertiesFromJS(Z),this.container.append(Z),this.container}}class zn extends Fd{constructor(l){super(l,{isRenderable:!!l.data.hasOwnCanvas})}}class kn extends Fd{constructor(l){super(l,{isRenderable:l.renderForms})}render(){const l=this.annotationStorage,U=this.data,Z=U.id;let d=l.getValue(Z,{value:U.exportValue===U.fieldValue}).value;typeof d=="string"&&(d=d!=="Off",l.setValue(Z,{value:d})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const F=document.createElement("input");return dd.add(F),F.setAttribute("data-element-id",Z),F.disabled=U.readOnly,this._setRequired(F,this.data.required),F.type="checkbox",F.name=U.fieldName,d&&F.setAttribute("checked",!0),F.setAttribute("exportValue",U.exportValue),F.tabIndex=r0,F.addEventListener("change",W=>{const{name:V,checked:c}=W.target;for(const t of this._getElementsByName(V,Z)){const N=c&&t.exportValue===U.exportValue;t.domElement&&(t.domElement.checked=N),l.setValue(t.id,{value:N})}l.setValue(Z,{value:c})}),F.addEventListener("resetform",W=>{const V=U.defaultFieldValue||"Off";W.target.checked=V===U.exportValue}),this.enableScripting&&this.hasJSActions&&(F.addEventListener("updatefromsandbox",W=>{const V={value(c){c.target.checked=c.detail.value!=="Off",l.setValue(Z,{value:c.target.checked})}};this._dispatchEventFromSandbox(V,W)}),this._setEventListeners(F,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],W=>W.target.checked)),this._setBackgroundColor(F),this._setDefaultPropertiesFromJS(F),this.container.append(F),this.container}}class Ms extends Fd{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const l=this.annotationStorage,U=this.data,Z=U.id;let d=l.getValue(Z,{value:U.fieldValue===U.buttonValue}).value;if(typeof d=="string"&&(d=d!==U.buttonValue,l.setValue(Z,{value:d})),d)for(const W of this._getElementsByName(U.fieldName,Z))l.setValue(W.id,{value:!1});const F=document.createElement("input");if(dd.add(F),F.setAttribute("data-element-id",Z),F.disabled=U.readOnly,this._setRequired(F,this.data.required),F.type="radio",F.name=U.fieldName,d&&F.setAttribute("checked",!0),F.tabIndex=r0,F.addEventListener("change",W=>{const{name:V,checked:c}=W.target;for(const t of this._getElementsByName(V,Z))l.setValue(t.id,{value:!1});l.setValue(Z,{value:c})}),F.addEventListener("resetform",W=>{const V=U.defaultFieldValue;W.target.checked=V!=null&&V===U.buttonValue}),this.enableScripting&&this.hasJSActions){const W=U.buttonValue;F.addEventListener("updatefromsandbox",V=>{const c={value:t=>{const N=W===t.detail.value;for(const s of this._getElementsByName(t.target.name)){const b=N&&s.id===Z;s.domElement&&(s.domElement.checked=b),l.setValue(s.id,{value:b})}}};this._dispatchEventFromSandbox(c,V)}),this._setEventListeners(F,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],V=>V.target.checked)}return this._setBackgroundColor(F),this._setDefaultPropertiesFromJS(F),this.container.append(F),this.container}}class on extends is{constructor(l){super(l,{ignoreBorder:l.data.hasAppearance})}render(){const l=super.render();l.classList.add("buttonWidgetAnnotation","pushButton");const U=l.lastChild;return this.enableScripting&&this.hasJSActions&&U&&(this._setDefaultPropertiesFromJS(U),U.addEventListener("updatefromsandbox",Z=>{this._dispatchEventFromSandbox({},Z)})),l}}class Dn extends Fd{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const l=this.annotationStorage,U=this.data.id,Z=l.getValue(U,{value:this.data.fieldValue}),d=document.createElement("select");dd.add(d),d.setAttribute("data-element-id",U),d.disabled=this.data.readOnly,this._setRequired(d,this.data.required),d.name=this.data.fieldName,d.tabIndex=r0;let F=this.data.combo&&this.data.options.length>0;this.data.combo||(d.size=this.data.options.length,this.data.multiSelect&&(d.multiple=!0)),d.addEventListener("resetform",N=>{const s=this.data.defaultFieldValue;for(const b of d.options)b.selected=b.value===s});for(const N of this.data.options){const s=document.createElement("option");s.textContent=N.displayValue,s.value=N.exportValue,Z.value.includes(N.exportValue)&&(s.setAttribute("selected",!0),F=!1),d.append(s)}let W=null;if(F){const N=document.createElement("option");N.value=" ",N.setAttribute("hidden",!0),N.setAttribute("selected",!0),d.prepend(N),W=()=>{N.remove(),d.removeEventListener("input",W),W=null},d.addEventListener("input",W)}const V=N=>{const s=N?"value":"textContent",{options:b,multiple:n}=d;return n?Array.prototype.filter.call(b,h=>h.selected).map(h=>h[s]):b.selectedIndex===-1?null:b[b.selectedIndex][s]};let c=V(!1);const t=N=>{const s=N.target.options;return Array.prototype.map.call(s,b=>({displayValue:b.textContent,exportValue:b.value}))};return this.enableScripting&&this.hasJSActions?(d.addEventListener("updatefromsandbox",N=>{const s={value(b){W==null||W();const n=b.detail.value,h=new Set(Array.isArray(n)?n:[n]);for(const M of d.options)M.selected=h.has(M.value);l.setValue(U,{value:V(!0)}),c=V(!1)},multipleSelection(b){d.multiple=!0},remove(b){const n=d.options,h=b.detail.remove;n[h].selected=!1,d.remove(h),n.length>0&&Array.prototype.findIndex.call(n,G=>G.selected)===-1&&(n[0].selected=!0),l.setValue(U,{value:V(!0),items:t(b)}),c=V(!1)},clear(b){for(;d.length!==0;)d.remove(0);l.setValue(U,{value:null,items:[]}),c=V(!1)},insert(b){const{index:n,displayValue:h,exportValue:M}=b.detail.insert,G=d.children[n],J=document.createElement("option");J.textContent=h,J.value=M,G?G.before(J):d.append(J),l.setValue(U,{value:V(!0),items:t(b)}),c=V(!1)},items(b){const{items:n}=b.detail;for(;d.length!==0;)d.remove(0);for(const h of n){const{displayValue:M,exportValue:G}=h,J=document.createElement("option");J.textContent=M,J.value=G,d.append(J)}d.options.length>0&&(d.options[0].selected=!0),l.setValue(U,{value:V(!0),items:t(b)}),c=V(!1)},indices(b){const n=new Set(b.detail.indices);for(const h of b.target.options)h.selected=n.has(h.index);l.setValue(U,{value:V(!0)}),c=V(!1)},editable(b){b.target.disabled=!b.detail.editable}};this._dispatchEventFromSandbox(s,N)}),d.addEventListener("input",N=>{var n;const s=V(!0),b=V(!1);l.setValue(U,{value:s}),N.preventDefault(),(n=this.linkService.eventBus)==null||n.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:c,change:b,changeEx:s,willCommit:!1,commitKey:1,keyDown:!1}})}),this._setEventListeners(d,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],N=>N.target.value)):d.addEventListener("input",function(N){l.setValue(U,{value:V(!0)})}),this.data.combo&&this._setTextStyle(d),this._setBackgroundColor(d),this._setDefaultPropertiesFromJS(d),this.container.append(d),this.container}}class JR extends Wl{constructor(l){const{data:U,elements:Z}=l;super(l,{isRenderable:Wl._hasPopupData(U)}),this.elements=Z}render(){this.container.classList.add("popupAnnotation");const l=new In({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),U=[];for(const Z of this.elements)Z.popup=l,U.push(Z.data.id),Z.addHighlightArea();return this.container.setAttribute("aria-controls",U.map(Z=>`${DN}${Z}`).join(",")),this.container}}class In{constructor({container:l,color:U,elements:Z,titleObj:d,modificationDate:F,contentsObj:W,richText:V,parent:c,rect:t,parentRect:N,open:s}){a(this,wc);a(this,gF);a(this,dQ);a(this,FQ);a(this,jF,m(this,wc,cb).bind(this));a(this,Ec,m(this,FQ,VN).bind(this));a(this,Cc,m(this,dQ,QN).bind(this));a(this,OF,m(this,gF,It).bind(this));a(this,kd,null);a(this,Zl,null);a(this,_W,null);a(this,od,null);a(this,qW,null);a(this,$W,null);a(this,rF,null);a(this,cZ,!1);a(this,KF,null);a(this,lQ,null);a(this,UQ,null);a(this,ZQ,null);a(this,Dd,!1);var b;i(this,Zl,l),i(this,ZQ,d),i(this,_W,W),i(this,UQ,V),i(this,$W,c),i(this,kd,U),i(this,lQ,t),i(this,rF,N),i(this,qW,Z),i(this,od,xN.toDateObject(F)),this.trigger=Z.flatMap(n=>n.getElementsToTriggerPopup());for(const n of this.trigger)n.addEventListener("click",Q(this,OF)),n.addEventListener("mouseenter",Q(this,Cc)),n.addEventListener("mouseleave",Q(this,Ec)),n.classList.add("popupTriggerArea");for(const n of Z)(b=n.container)==null||b.addEventListener("keydown",Q(this,jF));Q(this,Zl).hidden=!0,s&&m(this,gF,It).call(this)}render(){if(Q(this,KF))return;const{page:{view:l},viewport:{rawDims:{pageWidth:U,pageHeight:Z,pageX:d,pageY:F}}}=Q(this,$W),W=i(this,KF,document.createElement("div"));if(W.className="popup",Q(this,kd)){const X=W.style.outlineColor=y.makeHexColor(...Q(this,kd));CSS.supports("background-color","color-mix(in srgb, red 30%, white)")?W.style.backgroundColor=`color-mix(in srgb, ${X} 30%, white)`:W.style.backgroundColor=y.makeHexColor(...Q(this,kd).map(e=>Math.floor(.7*(255-e)+e)))}const V=document.createElement("span");V.className="header";const c=document.createElement("h1");if(V.append(c),{dir:c.dir,str:c.textContent}=Q(this,ZQ),W.append(V),Q(this,od)){const X=document.createElement("span");X.classList.add("popupDate"),X.setAttribute("data-l10n-id","pdfjs-annotation-date-string"),X.setAttribute("data-l10n-args",JSON.stringify({date:Q(this,od).toLocaleDateString(),time:Q(this,od).toLocaleTimeString()})),V.append(X)}const t=Q(this,_W),N=Q(this,UQ);if(N!=null&&N.str&&(!(t!=null&&t.str)||t.str===N.str))ms.render({xfaHtml:N.html,intent:"richText",div:W}),W.lastChild.classList.add("richText","popupContent");else{const X=this._formatContents(t);W.append(X)}let s=!!Q(this,rF),b=s?Q(this,rF):Q(this,lQ);for(const X of Q(this,qW))if(!b||y.intersect(X.data.rect,b)!==null){b=X.data.rect,s=!0;break}const n=y.normalizeRect([b[0],l[3]-b[1]+l[1],b[2],l[3]-b[3]+l[1]]),h=5,M=s?b[2]-b[0]+h:0,G=n[0]+M,J=n[1],{style:T}=Q(this,Zl);T.left=`${100*(G-d)/U}%`,T.top=`${100*(J-F)/Z}%`,Q(this,Zl).append(W)}_formatContents({str:l,dir:U}){const Z=document.createElement("p");Z.classList.add("popupContent"),Z.dir=U;const d=l.split(/(?:\r\n?|\n)/);for(let F=0,W=d.length;F<W;++F){const V=d[F];Z.append(document.createTextNode(V)),F<W-1&&Z.append(document.createElement("br"))}return Z}forceHide(){i(this,Dd,this.isVisible),Q(this,Dd)&&(Q(this,Zl).hidden=!0)}maybeShow(){Q(this,Dd)&&(i(this,Dd,!1),Q(this,Zl).hidden=!1)}get isVisible(){return Q(this,Zl).hidden===!1}}jF=new WeakMap,Ec=new WeakMap,Cc=new WeakMap,OF=new WeakMap,kd=new WeakMap,Zl=new WeakMap,_W=new WeakMap,od=new WeakMap,qW=new WeakMap,$W=new WeakMap,rF=new WeakMap,cZ=new WeakMap,KF=new WeakMap,lQ=new WeakMap,UQ=new WeakMap,ZQ=new WeakMap,Dd=new WeakMap,wc=new WeakSet,cb=function(l){l.altKey||l.shiftKey||l.ctrlKey||l.metaKey||(l.key==="Enter"||l.key==="Escape"&&Q(this,cZ))&&m(this,gF,It).call(this)},gF=new WeakSet,It=function(){i(this,cZ,!Q(this,cZ)),Q(this,cZ)?(m(this,dQ,QN).call(this),Q(this,Zl).addEventListener("click",Q(this,OF)),Q(this,Zl).addEventListener("keydown",Q(this,jF))):(m(this,FQ,VN).call(this),Q(this,Zl).removeEventListener("click",Q(this,OF)),Q(this,Zl).removeEventListener("keydown",Q(this,jF)))},dQ=new WeakSet,QN=function(){Q(this,KF)||this.render(),this.isVisible?Q(this,cZ)&&Q(this,Zl).classList.add("focused"):(Q(this,Zl).hidden=!1,Q(this,Zl).style.zIndex=parseInt(Q(this,Zl).style.zIndex)+1e3)},FQ=new WeakSet,VN=function(){Q(this,Zl).classList.remove("focused"),!(Q(this,cZ)||!this.isVisible)&&(Q(this,Zl).hidden=!0,Q(this,Zl).style.zIndex=parseInt(Q(this,Zl).style.zIndex)-1e3)};class Js extends Wl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.textContent=l.data.textContent,this.textPosition=l.data.textPosition,this.annotationEditorType=K.FREETEXT}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const l=document.createElement("div");l.classList.add("annotationTextContent"),l.setAttribute("role","comment");for(const U of this.textContent){const Z=document.createElement("span");Z.textContent=U,l.append(Z)}this.container.append(l)}return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}get _isEditable(){return this.data.hasOwnCanvas}}class En extends Wl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});a(this,WQ,null)}render(){this.container.classList.add("lineAnnotation");const U=this.data,{width:Z,height:d}=vU(U.rect),F=this.svgFactory.create(Z,d,!0),W=i(this,WQ,this.svgFactory.createElement("svg:line"));return W.setAttribute("x1",U.rect[2]-U.lineCoordinates[0]),W.setAttribute("y1",U.rect[3]-U.lineCoordinates[1]),W.setAttribute("x2",U.rect[2]-U.lineCoordinates[2]),W.setAttribute("y2",U.rect[3]-U.lineCoordinates[3]),W.setAttribute("stroke-width",U.borderStyle.width||1),W.setAttribute("stroke","transparent"),W.setAttribute("fill","transparent"),F.append(W),this.container.append(F),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,WQ)}addHighlightArea(){this.container.classList.add("highlightArea")}}WQ=new WeakMap;class Cn extends Wl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});a(this,QQ,null)}render(){this.container.classList.add("squareAnnotation");const U=this.data,{width:Z,height:d}=vU(U.rect),F=this.svgFactory.create(Z,d,!0),W=U.borderStyle.width,V=i(this,QQ,this.svgFactory.createElement("svg:rect"));return V.setAttribute("x",W/2),V.setAttribute("y",W/2),V.setAttribute("width",Z-W),V.setAttribute("height",d-W),V.setAttribute("stroke-width",W||1),V.setAttribute("stroke","transparent"),V.setAttribute("fill","transparent"),F.append(V),this.container.append(F),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,QQ)}addHighlightArea(){this.container.classList.add("highlightArea")}}QQ=new WeakMap;class wn extends Wl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});a(this,VQ,null)}render(){this.container.classList.add("circleAnnotation");const U=this.data,{width:Z,height:d}=vU(U.rect),F=this.svgFactory.create(Z,d,!0),W=U.borderStyle.width,V=i(this,VQ,this.svgFactory.createElement("svg:ellipse"));return V.setAttribute("cx",Z/2),V.setAttribute("cy",d/2),V.setAttribute("rx",Z/2-W/2),V.setAttribute("ry",d/2-W/2),V.setAttribute("stroke-width",W||1),V.setAttribute("stroke","transparent"),V.setAttribute("fill","transparent"),F.append(V),this.container.append(F),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,VQ)}addHighlightArea(){this.container.classList.add("highlightArea")}}VQ=new WeakMap;class Gs extends Wl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});a(this,cQ,null);this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const U=this.data,{width:Z,height:d}=vU(U.rect),F=this.svgFactory.create(Z,d,!0);let W=[];for(const c of U.vertices){const t=c.x-U.rect[0],N=U.rect[3]-c.y;W.push(t+","+N)}W=W.join(" ");const V=i(this,cQ,this.svgFactory.createElement(this.svgElementName));return V.setAttribute("points",W),V.setAttribute("stroke-width",U.borderStyle.width||1),V.setAttribute("stroke","transparent"),V.setAttribute("fill","transparent"),F.append(V),this.container.append(F),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,cQ)}addHighlightArea(){this.container.classList.add("highlightArea")}}cQ=new WeakMap;class xn extends Gs{constructor(l){super(l),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class jn extends Wl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class Ts extends Wl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});a(this,tQ,[]);this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline",this.annotationEditorType=K.INK}render(){this.container.classList.add(this.containerClassName);const U=this.data,{width:Z,height:d}=vU(U.rect),F=this.svgFactory.create(Z,d,!0);for(const W of U.inkLists){let V=[];for(const t of W){const N=t.x-U.rect[0],s=U.rect[3]-t.y;V.push(`${N},${s}`)}V=V.join(" ");const c=this.svgFactory.createElement(this.svgElementName);Q(this,tQ).push(c),c.setAttribute("points",V),c.setAttribute("stroke-width",U.borderStyle.width||1),c.setAttribute("stroke","transparent"),c.setAttribute("fill","transparent"),!U.popupRef&&this.hasPopupData&&this._createPopup(),F.append(c)}return this.container.append(F),this.container}getElementsToTriggerPopup(){return Q(this,tQ)}addHighlightArea(){this.container.classList.add("highlightArea")}}tQ=new WeakMap;class On extends Wl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("highlightAnnotation"),this.container}}class rn extends Wl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("underlineAnnotation"),this.container}}class Kn extends Wl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("squigglyAnnotation"),this.container}}class gn extends Wl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("strikeoutAnnotation"),this.container}}class Xs extends Wl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("stampAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class Hn extends Wl{constructor(U){var d;super(U,{isRenderable:!0});a(this,NQ);a(this,RQ,null);const{file:Z}=this.data;this.filename=Z.filename,this.content=Z.content,(d=this.linkService.eventBus)==null||d.dispatch("fileattachmentannotation",{source:this,...Z})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:U,data:Z}=this;let d;Z.hasAppearance||Z.fillAlpha===0?d=document.createElement("div"):(d=document.createElement("img"),d.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(Z.name)?"paperclip":"pushpin"}.svg`,Z.fillAlpha&&Z.fillAlpha<1&&(d.style=`filter: opacity(${Math.round(Z.fillAlpha*100)}%);`)),d.addEventListener("dblclick",m(this,NQ,cN).bind(this)),i(this,RQ,d);const{isMac:F}=xl.platform;return U.addEventListener("keydown",W=>{W.key==="Enter"&&(F?W.metaKey:W.ctrlKey)&&m(this,NQ,cN).call(this)}),!Z.popupRef&&this.hasPopupData?this._createPopup():d.classList.add("popupTriggerArea"),U.append(d),U}getElementsToTriggerPopup(){return Q(this,RQ)}addHighlightArea(){this.container.classList.add("highlightArea")}}RQ=new WeakMap,NQ=new WeakSet,cN=function(){var U;(U=this.downloadManager)==null||U.openOrDownloadData(this.content,this.filename)};class vn{constructor({div:l,accessibilityManager:U,annotationCanvasMap:Z,annotationEditorUIManager:d,page:F,viewport:W}){a(this,xc);a(this,bQ);a(this,sQ,null);a(this,Id,null);a(this,HF,new Map);this.div=l,i(this,sQ,U),i(this,Id,Z),this.page=F,this.viewport=W,this.zIndex=0,this._annotationEditorUIManager=d}async render(l){var W;const{annotations:U}=l,Z=this.div;Ud(Z,this.viewport);const d=new Map,F={data:null,layer:Z,linkService:l.linkService,downloadManager:l.downloadManager,imageResourcesPath:l.imageResourcesPath||"",renderForms:l.renderForms!==!1,svgFactory:new FR,annotationStorage:l.annotationStorage||new NR,enableScripting:l.enableScripting===!0,hasJSActions:l.hasJSActions,fieldObjects:l.fieldObjects,parent:this,elements:null};for(const V of U){if(V.noHTML)continue;const c=V.annotationType===tl.POPUP;if(c){const s=d.get(V.id);if(!s)continue;F.elements=s}else{const{width:s,height:b}=vU(V.rect);if(s<=0||b<=0)continue}F.data=V;const t=un.create(F);if(!t.isRenderable)continue;if(!c&&V.popupRef){const s=d.get(V.popupRef);s?s.push(t):d.set(V.popupRef,[t])}const N=t.render();V.hidden&&(N.style.visibility="hidden"),m(this,xc,tb).call(this,N,V.id),t.annotationEditorType>0&&(Q(this,HF).set(t.data.id,t),(W=this._annotationEditorUIManager)==null||W.renderAnnotationElement(t))}m(this,bQ,tN).call(this)}update({viewport:l}){const U=this.div;this.viewport=l,Ud(U,{rotation:l.rotation}),m(this,bQ,tN).call(this),U.hidden=!1}getEditableAnnotations(){return Array.from(Q(this,HF).values())}getEditableAnnotation(l){return Q(this,HF).get(l)}}sQ=new WeakMap,Id=new WeakMap,HF=new WeakMap,xc=new WeakSet,tb=function(l,U){var d;const Z=l.firstChild||l;Z.id=`${DN}${U}`,this.div.append(l),(d=Q(this,sQ))==null||d.moveElementInDOM(this.div,l,Z,!1)},bQ=new WeakSet,tN=function(){if(!Q(this,Id))return;const l=this.div;for(const[U,Z]of Q(this,Id)){const d=l.querySelector(`[data-annotation-id="${U}"]`);if(!d)continue;Z.className="annotationContent";const{firstChild:F}=d;F?F.nodeName==="CANVAS"?F.replaceWith(Z):F.classList.contains("annotationContent")?F.after(Z):F.before(Z):d.append(Z)}Q(this,Id).clear()};const HV=/\r\n?|\n/g,sl=class extends H{constructor(U){super({...U,name:"freeTextEditor"});a(this,jc);a(this,Oc);a(this,rc);a(this,PF);a(this,fF);a(this,Kc);a(this,gc);a(this,aQ,this.editorDivBlur.bind(this));a(this,nQ,this.editorDivFocus.bind(this));a(this,hQ,this.editorDivInput.bind(this));a(this,mQ,this.editorDivKeydown.bind(this));a(this,iQ,this.editorDivPaste.bind(this));a(this,aU,void 0);a(this,ZU,"");a(this,MQ,`${this.id}-editor`);a(this,vl,void 0);a(this,vF,null);i(this,aU,U.color||sl._defaultColor||H._defaultLineColor),i(this,vl,U.fontSize||sl._defaultFontSize)}static get _keyboardManager(){const U=sl.prototype,Z=W=>W.isEmpty(),d=KU.TRANSLATE_SMALL,F=KU.TRANSLATE_BIG;return g(this,"_keyboardManager",new D0([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],U.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],U.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],U._translateEmpty,{args:[-d,0],checker:Z}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],U._translateEmpty,{args:[-F,0],checker:Z}],[["ArrowRight","mac+ArrowRight"],U._translateEmpty,{args:[d,0],checker:Z}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],U._translateEmpty,{args:[F,0],checker:Z}],[["ArrowUp","mac+ArrowUp"],U._translateEmpty,{args:[0,-d],checker:Z}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],U._translateEmpty,{args:[0,-F],checker:Z}],[["ArrowDown","mac+ArrowDown"],U._translateEmpty,{args:[0,d],checker:Z}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],U._translateEmpty,{args:[0,F],checker:Z}]]))}static initialize(U,Z){H.initialize(U,Z,{strings:["pdfjs-free-text-default-content"]});const d=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(d.getPropertyValue("--freetext-padding"))}static updateDefaultParams(U,Z){switch(U){case I.FREETEXT_SIZE:sl._defaultFontSize=Z;break;case I.FREETEXT_COLOR:sl._defaultColor=Z;break}}updateParams(U,Z){switch(U){case I.FREETEXT_SIZE:m(this,jc,Rb).call(this,Z);break;case I.FREETEXT_COLOR:m(this,Oc,Nb).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[I.FREETEXT_SIZE,sl._defaultFontSize],[I.FREETEXT_COLOR,sl._defaultColor||H._defaultLineColor]]}get propertiesToUpdate(){return[[I.FREETEXT_SIZE,Q(this,vl)],[I.FREETEXT_COLOR,Q(this,aU)]]}_translateEmpty(U,Z){this._uiManager.translateSelectedEditors(U,Z,!0)}getInitialTranslation(){const U=this.parentScale;return[-sl._internalPadding*U,-(sl._internalPadding+Q(this,vl))*U]}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.isAttachedToDOM||this.parent.add(this)))}enableEditMode(){this.isInEditMode()||(this.parent.setEditingState(!1),this.parent.updateToolbar(K.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this._isDraggable=!1,this.div.removeAttribute("aria-activedescendant"),this.editorDiv.addEventListener("keydown",Q(this,mQ)),this.editorDiv.addEventListener("focus",Q(this,nQ)),this.editorDiv.addEventListener("blur",Q(this,aQ)),this.editorDiv.addEventListener("input",Q(this,hQ)),this.editorDiv.addEventListener("paste",Q(this,iQ)))}disableEditMode(){this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",Q(this,MQ)),this._isDraggable=!0,this.editorDiv.removeEventListener("keydown",Q(this,mQ)),this.editorDiv.removeEventListener("focus",Q(this,nQ)),this.editorDiv.removeEventListener("blur",Q(this,aQ)),this.editorDiv.removeEventListener("input",Q(this,hQ)),this.editorDiv.removeEventListener("paste",Q(this,iQ)),this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freetextEditing"))}focusin(U){this._focusEventsAllowed&&(super.focusin(U),U.target!==this.editorDiv&&this.editorDiv.focus())}onceAdded(){var U;this.width||(this.enableEditMode(),this.editorDiv.focus(),(U=this._initialOptions)!=null&&U.isCentered&&this.center(),this._initialOptions=null)}isEmpty(){return!this.editorDiv||this.editorDiv.innerText.trim()===""}remove(){this.isEditing=!1,this.parent&&(this.parent.setEditingState(!0),this.parent.div.classList.add("freetextEditing")),super.remove()}commit(){if(!this.isInEditMode())return;super.commit(),this.disableEditMode();const U=Q(this,ZU),Z=i(this,ZU,m(this,rc,sb).call(this).trimEnd());if(U===Z)return;const d=F=>{if(i(this,ZU,F),!F){this.remove();return}m(this,fF,wt).call(this),this._uiManager.rebuild(this),m(this,PF,Et).call(this)};this.addCommands({cmd:()=>{d(Z)},undo:()=>{d(U)},mustExec:!1}),m(this,PF,Et).call(this)}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode(),this.editorDiv.focus()}dblclick(U){this.enterInEditMode()}keydown(U){U.target===this.div&&U.key==="Enter"&&(this.enterInEditMode(),U.preventDefault())}editorDivKeydown(U){sl._keyboardManager.exec(this,U)}editorDivFocus(U){this.isEditing=!0}editorDivBlur(U){this.isEditing=!1}editorDivInput(U){this.parent.div.classList.toggle("freetextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let U,Z;this.width&&(U=this.x,Z=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",Q(this,MQ)),this.editorDiv.setAttribute("data-l10n-id","pdfjs-free-text"),this.enableEditing(),H._l10nPromise.get("pdfjs-free-text-default-content").then(F=>{var W;return(W=this.editorDiv)==null?void 0:W.setAttribute("default-content",F)}),this.editorDiv.contentEditable=!0;const{style:d}=this.editorDiv;if(d.fontSize=`calc(${Q(this,vl)}px * var(--scale-factor))`,d.color=Q(this,aU),this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),kV(this,this.div,["dblclick","keydown"]),this.width){const[F,W]=this.parentDimensions;if(this.annotationElementId){const{position:V}=Q(this,vF);let[c,t]=this.getInitialTranslation();[c,t]=this.pageTranslationToScreen(c,t);const[N,s]=this.pageDimensions,[b,n]=this.pageTranslation;let h,M;switch(this.rotation){case 0:h=U+(V[0]-b)/N,M=Z+this.height-(V[1]-n)/s;break;case 90:h=U+(V[0]-b)/N,M=Z-(V[1]-n)/s,[c,t]=[t,-c];break;case 180:h=U-this.width+(V[0]-b)/N,M=Z-(V[1]-n)/s,[c,t]=[-c,-t];break;case 270:h=U+(V[0]-b-this.height*s)/N,M=Z+(V[1]-n-this.width*N)/s,[c,t]=[-t,c];break}this.setAt(h*F,M*W,c,t)}else this.setAt(U*F,Z*W,this.width*F,this.height*W);m(this,fF,wt).call(this),this._isDraggable=!0,this.editorDiv.contentEditable=!1}else this._isDraggable=!1,this.editorDiv.contentEditable=!0;return this.div}editorDivPaste(U){var h,M,G;const Z=U.clipboardData||window.clipboardData,{types:d}=Z;if(d.length===1&&d[0]==="text/plain")return;U.preventDefault();const F=m(h=sl,JQ,RN).call(h,Z.getData("text")||"").replaceAll(HV,`
`);if(!F)return;const W=window.getSelection();if(!W.rangeCount)return;this.editorDiv.normalize(),W.deleteFromDocument();const V=W.getRangeAt(0);if(!F.includes(`
`)){V.insertNode(document.createTextNode(F)),this.editorDiv.normalize(),W.collapseToStart();return}const{startContainer:c,startOffset:t}=V,N=[],s=[];if(c.nodeType===Node.TEXT_NODE){const J=c.parentElement;if(s.push(c.nodeValue.slice(t).replaceAll(HV,"")),J!==this.editorDiv){let T=N;for(const X of this.editorDiv.childNodes){if(X===J){T=s;continue}T.push(m(M=sl,AF,Ct).call(M,X))}}N.push(c.nodeValue.slice(0,t).replaceAll(HV,""))}else if(c===this.editorDiv){let J=N,T=0;for(const X of this.editorDiv.childNodes)T++===t&&(J=s),J.push(m(G=sl,AF,Ct).call(G,X))}i(this,ZU,`${N.join(`
`)}${F}${s.join(`
`)}`),m(this,fF,wt).call(this);const b=new Range;let n=N.reduce((J,T)=>J+T.length,0);for(const{firstChild:J}of this.editorDiv.childNodes)if(J.nodeType===Node.TEXT_NODE){const T=J.nodeValue.length;if(n<=T){b.setStart(J,n),b.setEnd(J,n);break}n-=T}W.removeAllRanges(),W.addRange(b)}get contentDiv(){return this.editorDiv}static deserialize(U,Z,d){var V;let F=null;if(U instanceof Js){const{data:{defaultAppearanceData:{fontSize:c,fontColor:t},rect:N,rotation:s,id:b},textContent:n,textPosition:h,parent:{page:{pageNumber:M}}}=U;if(!n||n.length===0)return null;F=U={annotationType:K.FREETEXT,color:Array.from(t),fontSize:c,value:n.join(`
`),position:h,pageIndex:M-1,rect:N.slice(0),rotation:s,id:b,deleted:!1}}const W=super.deserialize(U,Z,d);return i(W,vl,U.fontSize),i(W,aU,y.makeHexColor(...U.color)),i(W,ZU,m(V=sl,JQ,RN).call(V,U.value)),W.annotationElementId=U.id||null,i(W,vF,F),W}serialize(U=!1){if(this.isEmpty())return null;if(this.deleted)return{pageIndex:this.pageIndex,id:this.annotationElementId,deleted:!0};const Z=sl._internalPadding*this.parentScale,d=this.getRect(Z,Z),F=H._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:Q(this,aU)),W={annotationType:K.FREETEXT,color:F,fontSize:Q(this,vl),value:m(this,Kc,bb).call(this),pageIndex:this.pageIndex,rect:d,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return U?W:this.annotationElementId&&!m(this,gc,ab).call(this,W)?null:(W.id=this.annotationElementId,W)}renderAnnotationElement(U){const Z=super.renderAnnotationElement(U);if(this.deleted)return Z;const{style:d}=Z;d.fontSize=`calc(${Q(this,vl)}px * var(--scale-factor))`,d.color=Q(this,aU),Z.replaceChildren();for(const W of Q(this,ZU).split(`
`)){const V=document.createElement("div");V.append(W?document.createTextNode(W):document.createElement("br")),Z.append(V)}const F=sl._internalPadding*this.parentScale;return U.updateEdited({rect:this.getRect(F,F)}),Z}resetAnnotationElement(U){super.resetAnnotationElement(U),U.resetEdited()}};let VU=sl;aQ=new WeakMap,nQ=new WeakMap,hQ=new WeakMap,mQ=new WeakMap,iQ=new WeakMap,aU=new WeakMap,ZU=new WeakMap,MQ=new WeakMap,vl=new WeakMap,vF=new WeakMap,jc=new WeakSet,Rb=function(U){const Z=F=>{this.editorDiv.style.fontSize=`calc(${F}px * var(--scale-factor))`,this.translate(0,-(F-Q(this,vl))*this.parentScale),i(this,vl,F),m(this,PF,Et).call(this)},d=Q(this,vl);this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:I.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})},Oc=new WeakSet,Nb=function(U){const Z=F=>{i(this,aU,this.editorDiv.style.color=F)},d=Q(this,aU);this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:I.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})},rc=new WeakSet,sb=function(){var Z;const U=[];this.editorDiv.normalize();for(const d of this.editorDiv.childNodes)U.push(m(Z=sl,AF,Ct).call(Z,d));return U.join(`
`)},PF=new WeakSet,Et=function(){const[U,Z]=this.parentDimensions;let d;if(this.isAttachedToDOM)d=this.div.getBoundingClientRect();else{const{currentLayer:F,div:W}=this,V=W.style.display,c=W.classList.contains("hidden");W.classList.remove("hidden"),W.style.display="hidden",F.div.append(this.div),d=W.getBoundingClientRect(),W.remove(),W.style.display=V,W.classList.toggle("hidden",c)}this.rotation%180===this.parentRotation%180?(this.width=d.width/U,this.height=d.height/Z):(this.width=d.height/U,this.height=d.width/Z),this.fixAndSetPosition()},AF=new WeakSet,Ct=function(U){return(U.nodeType===Node.TEXT_NODE?U.nodeValue:U.innerText).replaceAll(HV,"")},fF=new WeakSet,wt=function(){if(this.editorDiv.replaceChildren(),!!Q(this,ZU))for(const U of Q(this,ZU).split(`
`)){const Z=document.createElement("div");Z.append(U?document.createTextNode(U):document.createElement("br")),this.editorDiv.append(Z)}},Kc=new WeakSet,bb=function(){return Q(this,ZU).replaceAll(" "," ")},JQ=new WeakSet,RN=function(U){return U.replaceAll(" "," ")},gc=new WeakSet,ab=function(U){const{value:Z,fontSize:d,color:F,pageIndex:W}=Q(this,vF);return this._hasBeenMoved||U.value!==Z||U.fontSize!==d||U.color.some((V,c)=>V!==F[c])||U.pageIndex!==W},a(VU,AF),a(VU,JQ),E(VU,"_freeTextDefaultContent",""),E(VU,"_internalPadding",0),E(VU,"_defaultColor",null),E(VU,"_defaultFontSize",10),E(VU,"_type","freetext"),E(VU,"_editorType",K.FREETEXT);class GR{constructor(l,U=0,Z=0,d=!0){a(this,Hc);a(this,_F);a(this,vc);a(this,Pc);a(this,TQ);a(this,GQ,void 0);a(this,IZ,[]);a(this,nU,[]);let F=1/0,W=-1/0,V=1/0,c=-1/0;const N=10**-4;for(const{x:J,y:T,width:X,height:S}of l){const e=Math.floor((J-U)/N)*N,Y=Math.ceil((J+X+U)/N)*N,B=Math.floor((T-U)/N)*N,p=Math.ceil((T+S+U)/N)*N,z=[e,B,p,!0],C=[Y,B,p,!1];Q(this,IZ).push(z,C),F=Math.min(F,e),W=Math.max(W,Y),V=Math.min(V,B),c=Math.max(c,p)}const s=W-F+2*Z,b=c-V+2*Z,n=F-Z,h=V-Z,M=Q(this,IZ).at(d?-1:-2),G=[M[0],M[2]];for(const J of Q(this,IZ)){const[T,X,S]=J;J[0]=(T-n)/s,J[1]=(X-h)/b,J[2]=(S-h)/b}i(this,GQ,{x:n,y:h,width:s,height:b,lastPoint:G})}getOutlines(){Q(this,IZ).sort((U,Z)=>U[0]-Z[0]||U[1]-Z[1]||U[2]-Z[2]);const l=[];for(const U of Q(this,IZ))U[3]?(l.push(...m(this,TQ,NN).call(this,U)),m(this,vc,hb).call(this,U)):(m(this,Pc,mb).call(this,U),l.push(...m(this,TQ,NN).call(this,U)));return m(this,Hc,nb).call(this,l)}}GQ=new WeakMap,IZ=new WeakMap,nU=new WeakMap,Hc=new WeakSet,nb=function(l){const U=[],Z=new Set;for(const W of l){const[V,c,t]=W;U.push([V,c,W],[V,t,W])}U.sort((W,V)=>W[1]-V[1]||W[0]-V[0]);for(let W=0,V=U.length;W<V;W+=2){const c=U[W][2],t=U[W+1][2];c.push(t),t.push(c),Z.add(c),Z.add(t)}const d=[];let F;for(;Z.size>0;){const W=Z.values().next().value;let[V,c,t,N,s]=W;Z.delete(W);let b=V,n=c;for(F=[V,t],d.push(F);;){let h;if(Z.has(N))h=N;else if(Z.has(s))h=s;else break;Z.delete(h),[V,c,t,N,s]=h,b!==V&&(F.push(b,n,V,n===c?c:t),b=V),n=n===c?t:c}F.push(b,n)}return new Pn(d,Q(this,GQ))},_F=new WeakSet,xt=function(l){const U=Q(this,nU);let Z=0,d=U.length-1;for(;Z<=d;){const F=Z+d>>1,W=U[F][0];if(W===l)return F;W<l?Z=F+1:d=F-1}return d+1},vc=new WeakSet,hb=function([,l,U]){const Z=m(this,_F,xt).call(this,l);Q(this,nU).splice(Z,0,[l,U])},Pc=new WeakSet,mb=function([,l,U]){const Z=m(this,_F,xt).call(this,l);for(let d=Z;d<Q(this,nU).length;d++){const[F,W]=Q(this,nU)[d];if(F!==l)break;if(F===l&&W===U){Q(this,nU).splice(d,1);return}}for(let d=Z-1;d>=0;d--){const[F,W]=Q(this,nU)[d];if(F!==l)break;if(F===l&&W===U){Q(this,nU).splice(d,1);return}}},TQ=new WeakSet,NN=function(l){const[U,Z,d]=l,F=[[U,Z,d]],W=m(this,_F,xt).call(this,d);for(let V=0;V<W;V++){const[c,t]=Q(this,nU)[V];for(let N=0,s=F.length;N<s;N++){const[,b,n]=F[N];if(!(t<=b||n<=c)){if(b>=c){if(n>t)F[N][1]=t;else{if(s===1)return[];F.splice(N,1),N--,s--}continue}F[N][2]=c,n>t&&F.push([U,t,n])}}}return F};class Ys{toSVGPath(){throw new Error("Abstract method `toSVGPath` must be implemented.")}get box(){throw new Error("Abstract getter `box` must be implemented.")}serialize(l,U){throw new Error("Abstract method `serialize` must be implemented.")}get free(){return this instanceof TR}}class Pn extends Ys{constructor(U,Z){super();a(this,XQ,void 0);a(this,qF,void 0);i(this,qF,U),i(this,XQ,Z)}toSVGPath(){const U=[];for(const Z of Q(this,qF)){let[d,F]=Z;U.push(`M${d} ${F}`);for(let W=2;W<Z.length;W+=2){const V=Z[W],c=Z[W+1];V===d?(U.push(`V${c}`),F=c):c===F&&(U.push(`H${V}`),d=V)}U.push("Z")}return U.join(" ")}serialize([U,Z,d,F],W){const V=[],c=d-U,t=F-Z;for(const N of Q(this,qF)){const s=new Array(N.length);for(let b=0;b<N.length;b+=2)s[b]=U+N[b]*c,s[b+1]=F-N[b+1]*t;V.push(s)}return V}get box(){return Q(this,XQ)}}XQ=new WeakMap,qF=new WeakMap;const d0=class{constructor({x:l,y:U},Z,d,F,W,V=0){a(this,eQ);a(this,zU,void 0);a(this,tZ,[]);a(this,$F,void 0);a(this,l0,void 0);a(this,kU,[]);a(this,O,new Float64Array(18));a(this,Ed,void 0);a(this,Cd,void 0);a(this,YQ,void 0);a(this,SQ,void 0);a(this,U0,void 0);a(this,Z0,void 0);a(this,EZ,[]);i(this,zU,Z),i(this,Z0,F*d),i(this,l0,W),Q(this,O).set([NaN,NaN,NaN,NaN,l,U],6),i(this,$F,V),i(this,SQ,Q(d0,BQ)*d),i(this,YQ,Q(d0,fc)*d),i(this,U0,d),Q(this,EZ).push(l,U)}get free(){return!0}isEmpty(){return isNaN(Q(this,O)[8])}add({x:l,y:U}){var z;i(this,Ed,l),i(this,Cd,U);const[Z,d,F,W]=Q(this,zU);let[V,c,t,N]=Q(this,O).subarray(8,12);const s=l-t,b=U-N,n=Math.hypot(s,b);if(n<Q(this,YQ))return!1;const h=n-Q(this,SQ),M=h/n,G=M*s,J=M*b;let T=V,X=c;V=t,c=N,t+=G,N+=J,(z=Q(this,EZ))==null||z.push(l,U);const S=-J/h,e=G/h,Y=S*Q(this,Z0),B=e*Q(this,Z0);return Q(this,O).set(Q(this,O).subarray(2,8),0),Q(this,O).set([t+Y,N+B],4),Q(this,O).set(Q(this,O).subarray(14,18),12),Q(this,O).set([t-Y,N-B],16),isNaN(Q(this,O)[6])?(Q(this,kU).length===0&&(Q(this,O).set([V+Y,c+B],2),Q(this,kU).push(NaN,NaN,NaN,NaN,(V+Y-Z)/F,(c+B-d)/W),Q(this,O).set([V-Y,c-B],14),Q(this,tZ).push(NaN,NaN,NaN,NaN,(V-Y-Z)/F,(c-B-d)/W)),Q(this,O).set([T,X,V,c,t,N],6),!this.isEmpty()):(Q(this,O).set([T,X,V,c,t,N],6),Math.abs(Math.atan2(X-c,T-V)-Math.atan2(J,G))<Math.PI/2?([V,c,t,N]=Q(this,O).subarray(2,6),Q(this,kU).push(NaN,NaN,NaN,NaN,((V+t)/2-Z)/F,((c+N)/2-d)/W),[V,c,T,X]=Q(this,O).subarray(14,18),Q(this,tZ).push(NaN,NaN,NaN,NaN,((T+V)/2-Z)/F,((X+c)/2-d)/W),!0):([T,X,V,c,t,N]=Q(this,O).subarray(0,6),Q(this,kU).push(((T+5*V)/6-Z)/F,((X+5*c)/6-d)/W,((5*V+t)/6-Z)/F,((5*c+N)/6-d)/W,((V+t)/2-Z)/F,((c+N)/2-d)/W),[t,N,V,c,T,X]=Q(this,O).subarray(12,18),Q(this,tZ).push(((T+5*V)/6-Z)/F,((X+5*c)/6-d)/W,((5*V+t)/6-Z)/F,((5*c+N)/6-d)/W,((V+t)/2-Z)/F,((c+N)/2-d)/W),!0))}toSVGPath(){if(this.isEmpty())return"";const l=Q(this,kU),U=Q(this,tZ),Z=Q(this,O).subarray(4,6),d=Q(this,O).subarray(16,18),[F,W,V,c]=Q(this,zU),[t,N,s,b]=m(this,eQ,sN).call(this);if(isNaN(Q(this,O)[6])&&!this.isEmpty())return`M${(Q(this,O)[2]-F)/V} ${(Q(this,O)[3]-W)/c} L${(Q(this,O)[4]-F)/V} ${(Q(this,O)[5]-W)/c} L${t} ${N} L${s} ${b} L${(Q(this,O)[16]-F)/V} ${(Q(this,O)[17]-W)/c} L${(Q(this,O)[14]-F)/V} ${(Q(this,O)[15]-W)/c} Z`;const n=[];n.push(`M${l[4]} ${l[5]}`);for(let h=6;h<l.length;h+=6)isNaN(l[h])?n.push(`L${l[h+4]} ${l[h+5]}`):n.push(`C${l[h]} ${l[h+1]} ${l[h+2]} ${l[h+3]} ${l[h+4]} ${l[h+5]}`);n.push(`L${(Z[0]-F)/V} ${(Z[1]-W)/c} L${t} ${N} L${s} ${b} L${(d[0]-F)/V} ${(d[1]-W)/c}`);for(let h=U.length-6;h>=6;h-=6)isNaN(U[h])?n.push(`L${U[h+4]} ${U[h+5]}`):n.push(`C${U[h]} ${U[h+1]} ${U[h+2]} ${U[h+3]} ${U[h+4]} ${U[h+5]}`);return n.push(`L${U[4]} ${U[5]} Z`),n.join(" ")}getOutlines(){var J;const l=Q(this,kU),U=Q(this,tZ),Z=Q(this,O),d=Z.subarray(4,6),F=Z.subarray(16,18),[W,V,c,t]=Q(this,zU),N=new Float64Array((((J=Q(this,EZ))==null?void 0:J.length)??0)+2);for(let T=0,X=N.length-2;T<X;T+=2)N[T]=(Q(this,EZ)[T]-W)/c,N[T+1]=(Q(this,EZ)[T+1]-V)/t;N[N.length-2]=(Q(this,Ed)-W)/c,N[N.length-1]=(Q(this,Cd)-V)/t;const[s,b,n,h]=m(this,eQ,sN).call(this);if(isNaN(Z[6])&&!this.isEmpty()){const T=new Float64Array(36);return T.set([NaN,NaN,NaN,NaN,(Z[2]-W)/c,(Z[3]-V)/t,NaN,NaN,NaN,NaN,(Z[4]-W)/c,(Z[5]-V)/t,NaN,NaN,NaN,NaN,s,b,NaN,NaN,NaN,NaN,n,h,NaN,NaN,NaN,NaN,(Z[16]-W)/c,(Z[17]-V)/t,NaN,NaN,NaN,NaN,(Z[14]-W)/c,(Z[15]-V)/t],0),new TR(T,N,Q(this,zU),Q(this,U0),Q(this,$F),Q(this,l0))}const M=new Float64Array(Q(this,kU).length+24+Q(this,tZ).length);let G=l.length;for(let T=0;T<G;T+=2){if(isNaN(l[T])){M[T]=M[T+1]=NaN;continue}M[T]=l[T],M[T+1]=l[T+1]}M.set([NaN,NaN,NaN,NaN,(d[0]-W)/c,(d[1]-V)/t,NaN,NaN,NaN,NaN,s,b,NaN,NaN,NaN,NaN,n,h,NaN,NaN,NaN,NaN,(F[0]-W)/c,(F[1]-V)/t],G),G+=24;for(let T=U.length-6;T>=6;T-=6)for(let X=0;X<6;X+=2){if(isNaN(U[T+X])){M[G]=M[G+1]=NaN,G+=2;continue}M[G]=U[T+X],M[G+1]=U[T+X+1],G+=2}return M.set([NaN,NaN,NaN,NaN,U[4],U[5]],G),new TR(M,N,Q(this,zU),Q(this,U0),Q(this,$F),Q(this,l0))}};let Wd=d0;zU=new WeakMap,tZ=new WeakMap,$F=new WeakMap,l0=new WeakMap,kU=new WeakMap,O=new WeakMap,Ed=new WeakMap,Cd=new WeakMap,YQ=new WeakMap,SQ=new WeakMap,U0=new WeakMap,Z0=new WeakMap,EZ=new WeakMap,BQ=new WeakMap,Ac=new WeakMap,fc=new WeakMap,eQ=new WeakSet,sN=function(){const l=Q(this,O).subarray(4,6),U=Q(this,O).subarray(16,18),[Z,d,F,W]=Q(this,zU);return[(Q(this,Ed)+(l[0]-U[0])/2-Z)/F,(Q(this,Cd)+(l[1]-U[1])/2-d)/W,(Q(this,Ed)+(U[0]-l[0])/2-Z)/F,(Q(this,Cd)+(U[1]-l[1])/2-d)/W]},a(Wd,BQ,8),a(Wd,Ac,2),a(Wd,fc,Q(d0,BQ)+Q(d0,Ac));class TR extends Ys{constructor(U,Z,d,F,W,V){super();a(this,xd);a(this,jd);a(this,_c);a(this,F0,void 0);a(this,wd,null);a(this,RZ,void 0);a(this,pQ,void 0);a(this,Pl,void 0);a(this,uQ,void 0);a(this,Ql,void 0);i(this,Ql,U),i(this,Pl,Z),i(this,F0,d),i(this,uQ,F),i(this,RZ,W),i(this,pQ,V),m(this,_c,ib).call(this,V);const{x:c,y:t,width:N,height:s}=Q(this,wd);for(let b=0,n=U.length;b<n;b+=2)U[b]=(U[b]-c)/N,U[b+1]=(U[b+1]-t)/s;for(let b=0,n=Z.length;b<n;b+=2)Z[b]=(Z[b]-c)/N,Z[b+1]=(Z[b+1]-t)/s}toSVGPath(){const U=[`M${Q(this,Ql)[4]} ${Q(this,Ql)[5]}`];for(let Z=6,d=Q(this,Ql).length;Z<d;Z+=6){if(isNaN(Q(this,Ql)[Z])){U.push(`L${Q(this,Ql)[Z+4]} ${Q(this,Ql)[Z+5]}`);continue}U.push(`C${Q(this,Ql)[Z]} ${Q(this,Ql)[Z+1]} ${Q(this,Ql)[Z+2]} ${Q(this,Ql)[Z+3]} ${Q(this,Ql)[Z+4]} ${Q(this,Ql)[Z+5]}`)}return U.push("Z"),U.join(" ")}serialize([U,Z,d,F],W){const V=d-U,c=F-Z;let t,N;switch(W){case 0:t=m(this,xd,aV).call(this,Q(this,Ql),U,F,V,-c),N=m(this,xd,aV).call(this,Q(this,Pl),U,F,V,-c);break;case 90:t=m(this,jd,nV).call(this,Q(this,Ql),U,Z,V,c),N=m(this,jd,nV).call(this,Q(this,Pl),U,Z,V,c);break;case 180:t=m(this,xd,aV).call(this,Q(this,Ql),d,Z,-V,c),N=m(this,xd,aV).call(this,Q(this,Pl),d,Z,-V,c);break;case 270:t=m(this,jd,nV).call(this,Q(this,Ql),d,F,-V,-c),N=m(this,jd,nV).call(this,Q(this,Pl),d,F,-V,-c);break}return{outline:Array.from(t),points:[Array.from(N)]}}get box(){return Q(this,wd)}getNewOutline(U,Z){const{x:d,y:F,width:W,height:V}=Q(this,wd),[c,t,N,s]=Q(this,F0),b=W*N,n=V*s,h=d*N+c,M=F*s+t,G=new Wd({x:Q(this,Pl)[0]*b+h,y:Q(this,Pl)[1]*n+M},Q(this,F0),Q(this,uQ),U,Q(this,pQ),Z??Q(this,RZ));for(let J=2;J<Q(this,Pl).length;J+=2)G.add({x:Q(this,Pl)[J]*b+h,y:Q(this,Pl)[J+1]*n+M});return G.getOutlines()}}F0=new WeakMap,wd=new WeakMap,RZ=new WeakMap,pQ=new WeakMap,Pl=new WeakMap,uQ=new WeakMap,Ql=new WeakMap,xd=new WeakSet,aV=function(U,Z,d,F,W){const V=new Float64Array(U.length);for(let c=0,t=U.length;c<t;c+=2)V[c]=Z+U[c]*F,V[c+1]=d+U[c+1]*W;return V},jd=new WeakSet,nV=function(U,Z,d,F,W){const V=new Float64Array(U.length);for(let c=0,t=U.length;c<t;c+=2)V[c]=Z+U[c+1]*F,V[c+1]=d+U[c]*W;return V},_c=new WeakSet,ib=function(U){const Z=Q(this,Ql);let d=Z[4],F=Z[5],W=d,V=F,c=d,t=F,N=d,s=F;const b=U?Math.max:Math.min;for(let J=6,T=Z.length;J<T;J+=6){if(isNaN(Z[J]))W=Math.min(W,Z[J+4]),V=Math.min(V,Z[J+5]),c=Math.max(c,Z[J+4]),t=Math.max(t,Z[J+5]),s<Z[J+5]?(N=Z[J+4],s=Z[J+5]):s===Z[J+5]&&(N=b(N,Z[J+4]));else{const X=y.bezierBoundingBox(d,F,...Z.slice(J,J+6));W=Math.min(W,X[0]),V=Math.min(V,X[1]),c=Math.max(c,X[2]),t=Math.max(t,X[3]),s<X[3]?(N=X[2],s=X[3]):s===X[3]&&(N=b(N,X[2]))}d=Z[J+4],F=Z[J+5]}const n=W-Q(this,RZ),h=V-Q(this,RZ),M=c-W+2*Q(this,RZ),G=t-V+2*Q(this,RZ);i(this,wd,{x:n,y:h,width:M,height:G,lastPoint:[N,s]})};const sZ=class{constructor({editor:l=null,uiManager:U=null}){a(this,DQ);a(this,IQ);a(this,qc);a(this,NZ);a(this,$c);a(this,oU);a(this,yQ,m(this,qc,Mb).bind(this));a(this,LQ,m(this,$c,Jb).bind(this));a(this,hU,null);a(this,Od,null);a(this,W0,void 0);a(this,bl,null);a(this,zQ,!1);a(this,Q0,!1);a(this,kQ,null);a(this,oQ,void 0);a(this,CZ,null);a(this,V0,void 0);var Z;l?(i(this,Q0,!1),i(this,V0,I.HIGHLIGHT_COLOR),i(this,kQ,l)):(i(this,Q0,!0),i(this,V0,I.HIGHLIGHT_DEFAULT_COLOR)),i(this,CZ,(l==null?void 0:l._uiManager)||U),i(this,oQ,Q(this,CZ)._eventBus),i(this,W0,(l==null?void 0:l.color)||((Z=Q(this,CZ))==null?void 0:Z.highlightColors.values().next().value)||"#FFFF98")}static get _keyboardManager(){return g(this,"_keyboardManager",new D0([[["Escape","mac+Escape"],sZ.prototype._hideDropdownFromKeyboard],[[" ","mac+ "],sZ.prototype._colorSelectFromKeyboard],[["ArrowDown","ArrowRight","mac+ArrowDown","mac+ArrowRight"],sZ.prototype._moveToNext],[["ArrowUp","ArrowLeft","mac+ArrowUp","mac+ArrowLeft"],sZ.prototype._moveToPrevious],[["Home","mac+Home"],sZ.prototype._moveToBeginning],[["End","mac+End"],sZ.prototype._moveToEnd]]))}renderButton(){const l=i(this,hU,document.createElement("button"));l.className="colorPicker",l.tabIndex="0",l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-button"),l.setAttribute("aria-haspopup",!0),l.addEventListener("click",m(this,NZ,tF).bind(this)),l.addEventListener("keydown",Q(this,yQ));const U=i(this,Od,document.createElement("span"));return U.className="swatch",U.setAttribute("aria-hidden",!0),U.style.backgroundColor=Q(this,W0),l.append(U),l}renderMainDropdown(){const l=i(this,bl,m(this,DQ,bN).call(this));return l.setAttribute("aria-orientation","horizontal"),l.setAttribute("aria-labelledby","highlightColorPickerLabel"),l}_colorSelectFromKeyboard(l){if(l.target===Q(this,hU)){m(this,NZ,tF).call(this,l);return}const U=l.target.getAttribute("data-color");U&&m(this,IQ,aN).call(this,U,l)}_moveToNext(l){var U,Z;if(!Q(this,oU,qZ)){m(this,NZ,tF).call(this,l);return}if(l.target===Q(this,hU)){(U=Q(this,bl).firstChild)==null||U.focus();return}(Z=l.target.nextSibling)==null||Z.focus()}_moveToPrevious(l){var U,Z;if(l.target===((U=Q(this,bl))==null?void 0:U.firstChild)||l.target===Q(this,hU)){Q(this,oU,qZ)&&this._hideDropdownFromKeyboard();return}Q(this,oU,qZ)||m(this,NZ,tF).call(this,l),(Z=l.target.previousSibling)==null||Z.focus()}_moveToBeginning(l){var U;if(!Q(this,oU,qZ)){m(this,NZ,tF).call(this,l);return}(U=Q(this,bl).firstChild)==null||U.focus()}_moveToEnd(l){var U;if(!Q(this,oU,qZ)){m(this,NZ,tF).call(this,l);return}(U=Q(this,bl).lastChild)==null||U.focus()}hideDropdown(){var l;(l=Q(this,bl))==null||l.classList.add("hidden"),window.removeEventListener("pointerdown",Q(this,LQ))}_hideDropdownFromKeyboard(){var l;if(!Q(this,Q0)){if(!Q(this,oU,qZ)){(l=Q(this,kQ))==null||l.unselect();return}this.hideDropdown(),Q(this,hU).focus({preventScroll:!0,focusVisible:Q(this,zQ)})}}updateColor(l){if(Q(this,Od)&&(Q(this,Od).style.backgroundColor=l),!Q(this,bl))return;const U=Q(this,CZ).highlightColors.values();for(const Z of Q(this,bl).children)Z.setAttribute("aria-selected",U.next().value===l)}destroy(){var l,U;(l=Q(this,hU))==null||l.remove(),i(this,hU,null),i(this,Od,null),(U=Q(this,bl))==null||U.remove(),i(this,bl,null)}};let vV=sZ;yQ=new WeakMap,LQ=new WeakMap,hU=new WeakMap,Od=new WeakMap,W0=new WeakMap,bl=new WeakMap,zQ=new WeakMap,Q0=new WeakMap,kQ=new WeakMap,oQ=new WeakMap,CZ=new WeakMap,V0=new WeakMap,DQ=new WeakSet,bN=function(){const l=document.createElement("div");l.addEventListener("contextmenu",jl),l.className="dropdown",l.role="listbox",l.setAttribute("aria-multiselectable",!1),l.setAttribute("aria-orientation","vertical"),l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-dropdown");for(const[U,Z]of Q(this,CZ).highlightColors){const d=document.createElement("button");d.tabIndex="0",d.role="option",d.setAttribute("data-color",Z),d.title=U,d.setAttribute("data-l10n-id",`pdfjs-editor-colorpicker-${U}`);const F=document.createElement("span");d.append(F),F.className="swatch",F.style.backgroundColor=Z,d.setAttribute("aria-selected",Z===Q(this,W0)),d.addEventListener("click",m(this,IQ,aN).bind(this,Z)),l.append(d)}return l.addEventListener("keydown",Q(this,yQ)),l},IQ=new WeakSet,aN=function(l,U){U.stopPropagation(),Q(this,oQ).dispatch("switchannotationeditorparams",{source:this,type:Q(this,V0),value:l})},qc=new WeakSet,Mb=function(l){sZ._keyboardManager.exec(this,l)},NZ=new WeakSet,tF=function(l){if(Q(this,oU,qZ)){this.hideDropdown();return}if(i(this,zQ,l.detail===0),window.addEventListener("pointerdown",Q(this,LQ)),Q(this,bl)){Q(this,bl).classList.remove("hidden");return}const U=i(this,bl,m(this,DQ,bN).call(this));Q(this,hU).append(U)},$c=new WeakSet,Jb=function(l){var U;(U=Q(this,bl))!=null&&U.contains(l.target)||this.hideDropdown()},oU=new WeakSet,qZ=function(){return Q(this,bl)&&!Q(this,bl).classList.contains("hidden")};const Vl=class extends H{constructor(U){super({...U,name:"highlightEditor"});a(this,jQ);a(this,OQ);a(this,Ut);a(this,Zt);a(this,dt);a(this,rQ);a(this,Hd);a(this,Ft);a(this,s0);a(this,vd);a(this,Wt);a(this,Qt);a(this,c0,null);a(this,EQ,0);a(this,wZ,void 0);a(this,rd,null);a(this,t0,null);a(this,dU,null);a(this,CQ,null);a(this,wQ,0);a(this,Kd,null);a(this,mU,null);a(this,El,null);a(this,Al,!1);a(this,lt,m(this,Ft,Yb).bind(this));a(this,R0,null);a(this,gd,void 0);a(this,al,null);a(this,N0,"");a(this,DU,void 0);a(this,xQ,"");this.color=U.color||Vl._defaultColor,i(this,DU,U.thickness||Vl._defaultThickness),i(this,gd,U.opacity||Vl._defaultOpacity),i(this,wZ,U.boxes||null),i(this,xQ,U.methodOfCreation||""),i(this,N0,U.text||""),this._isDraggable=!1,U.highlightId>-1?(i(this,Al,!0),m(this,OQ,hN).call(this,U),m(this,Hd,hV).call(this)):(i(this,c0,U.anchorNode),i(this,EQ,U.anchorOffset),i(this,CQ,U.focusNode),i(this,wQ,U.focusOffset),m(this,jQ,nN).call(this),m(this,Hd,hV).call(this),this.rotate(this.rotation))}static get _keyboardManager(){const U=Vl.prototype;return g(this,"_keyboardManager",new D0([[["ArrowLeft","mac+ArrowLeft"],U._moveCaret,{args:[0]}],[["ArrowRight","mac+ArrowRight"],U._moveCaret,{args:[1]}],[["ArrowUp","mac+ArrowUp"],U._moveCaret,{args:[2]}],[["ArrowDown","mac+ArrowDown"],U._moveCaret,{args:[3]}]]))}get telemetryInitialData(){return{action:"added",type:Q(this,Al)?"free_highlight":"highlight",color:this._uiManager.highlightColorNames.get(this.color),thickness:Q(this,DU),methodOfCreation:Q(this,xQ)}}get telemetryFinalData(){return{type:"highlight",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(U){return{numberOfColors:U.get("color").size}}static initialize(U,Z){var d;H.initialize(U,Z),Vl._defaultColor||(Vl._defaultColor=((d=Z.highlightColors)==null?void 0:d.values().next().value)||"#fff066")}static updateDefaultParams(U,Z){switch(U){case I.HIGHLIGHT_DEFAULT_COLOR:Vl._defaultColor=Z;break;case I.HIGHLIGHT_THICKNESS:Vl._defaultThickness=Z;break}}translateInPage(U,Z){}get toolbarPosition(){return Q(this,R0)}updateParams(U,Z){switch(U){case I.HIGHLIGHT_COLOR:m(this,Ut,Gb).call(this,Z);break;case I.HIGHLIGHT_THICKNESS:m(this,Zt,Tb).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[I.HIGHLIGHT_DEFAULT_COLOR,Vl._defaultColor],[I.HIGHLIGHT_THICKNESS,Vl._defaultThickness]]}get propertiesToUpdate(){return[[I.HIGHLIGHT_COLOR,this.color||Vl._defaultColor],[I.HIGHLIGHT_THICKNESS,Q(this,DU)||Vl._defaultThickness],[I.HIGHLIGHT_FREE,Q(this,Al)]]}async addEditToolbar(){const U=await super.addEditToolbar();return U?(this._uiManager.highlightColors&&(i(this,t0,new vV({editor:this})),U.addColorPicker(Q(this,t0))),U):null}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}fixAndSetPosition(){return super.fixAndSetPosition(m(this,vd,mV).call(this))}getBaseTranslation(){return[0,0]}getRect(U,Z){return super.getRect(U,Z,m(this,vd,mV).call(this))}onceAdded(){this.parent.addUndoableEditor(this),this.div.focus()}remove(){m(this,rQ,mN).call(this),this._reportTelemetry({action:"deleted"}),super.remove()}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(m(this,Hd,hV).call(this),this.isAttachedToDOM||this.parent.add(this)))}setParent(U){var d;let Z=!1;this.parent&&!U?m(this,rQ,mN).call(this):U&&(m(this,Hd,hV).call(this,U),Z=!this.parent&&((d=this.div)==null?void 0:d.classList.contains("selectedEditor"))),super.setParent(U),this.show(this._isVisible),Z&&this.select()}rotate(U){var F,W,V;const{drawLayer:Z}=this.parent;let d;Q(this,Al)?(U=(U-this.rotation+360)%360,d=m(F=Vl,xZ,y0).call(F,Q(this,mU).box,U)):d=m(W=Vl,xZ,y0).call(W,this,U),Z.rotate(Q(this,El),U),Z.rotate(Q(this,al),U),Z.updateBox(Q(this,El),d),Z.updateBox(Q(this,al),m(V=Vl,xZ,y0).call(V,Q(this,dU).box,U))}render(){if(this.div)return this.div;const U=super.render();Q(this,N0)&&(U.setAttribute("aria-label",Q(this,N0)),U.setAttribute("role","mark")),Q(this,Al)?U.classList.add("free"):this.div.addEventListener("keydown",Q(this,lt));const Z=i(this,Kd,document.createElement("div"));U.append(Z),Z.setAttribute("aria-hidden","true"),Z.className="internal",Z.style.clipPath=Q(this,rd);const[d,F]=this.parentDimensions;return this.setDims(this.width*d,this.height*F),kV(this,Q(this,Kd),["pointerover","pointerleave"]),this.enableEditing(),U}pointerover(){this.parent.drawLayer.addClass(Q(this,al),"hovered")}pointerleave(){this.parent.drawLayer.removeClass(Q(this,al),"hovered")}_moveCaret(U){switch(this.parent.unselect(this),U){case 0:case 2:m(this,s0,jt).call(this,!0);break;case 1:case 3:m(this,s0,jt).call(this,!1);break}}select(){var U,Z;super.select(),Q(this,al)&&((U=this.parent)==null||U.drawLayer.removeClass(Q(this,al),"hovered"),(Z=this.parent)==null||Z.drawLayer.addClass(Q(this,al),"selected"))}unselect(){var U;super.unselect(),Q(this,al)&&((U=this.parent)==null||U.drawLayer.removeClass(Q(this,al),"selected"),Q(this,Al)||m(this,s0,jt).call(this,!1))}get _mustFixPosition(){return!Q(this,Al)}show(U=this._isVisible){super.show(U),this.parent&&(this.parent.drawLayer.show(Q(this,El),U),this.parent.drawLayer.show(Q(this,al),U))}static startHighlighting(U,Z,{target:d,x:F,y:W}){const{x:V,y:c,width:t,height:N}=d.getBoundingClientRect(),s=M=>{m(this,Vt,eb).call(this,U,M)},b={capture:!0,passive:!1},n=M=>{M.preventDefault(),M.stopPropagation()},h=M=>{d.removeEventListener("pointermove",s),window.removeEventListener("blur",h),window.removeEventListener("pointerup",h),window.removeEventListener("pointerdown",n,b),window.removeEventListener("contextmenu",jl),m(this,ct,pb).call(this,U,M)};window.addEventListener("blur",h),window.addEventListener("pointerup",h),window.addEventListener("pointerdown",n,b),window.addEventListener("contextmenu",jl),d.addEventListener("pointermove",s),this._freeHighlight=new Wd({x:F,y:W},[V,c,t,N],U.scale,this._defaultThickness/2,Z,.001),{id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=U.drawLayer.highlight(this._freeHighlight,this._defaultColor,this._defaultOpacity,!0)}static deserialize(U,Z,d){var M;const F=super.deserialize(U,Z,d),{rect:[W,V,c,t],color:N,quadPoints:s}=U;F.color=y.makeHexColor(...N),i(F,gd,U.opacity);const[b,n]=F.pageDimensions;F.width=(c-W)/b,F.height=(t-V)/n;const h=i(F,wZ,[]);for(let G=0;G<s.length;G+=8)h.push({x:(s[4]-c)/b,y:(t-(1-s[G+5]))/n,width:(s[G+2]-s[G])/b,height:(s[G+5]-s[G+1])/n});return m(M=F,jQ,nN).call(M),F}serialize(U=!1){if(this.isEmpty()||U)return null;const Z=this.getRect(0,0),d=H._colorManager.convert(this.color);return{annotationType:K.HIGHLIGHT,color:d,opacity:Q(this,gd),thickness:Q(this,DU),quadPoints:m(this,Wt,Sb).call(this),outlines:m(this,Qt,Bb).call(this,Z),pageIndex:this.pageIndex,rect:Z,rotation:m(this,vd,mV).call(this),structTreeParentId:this._structTreeParentId}}static canCreateNewEmptyEditor(){return!1}};let yl=Vl;c0=new WeakMap,EQ=new WeakMap,wZ=new WeakMap,rd=new WeakMap,t0=new WeakMap,dU=new WeakMap,CQ=new WeakMap,wQ=new WeakMap,Kd=new WeakMap,mU=new WeakMap,El=new WeakMap,Al=new WeakMap,lt=new WeakMap,R0=new WeakMap,gd=new WeakMap,al=new WeakMap,N0=new WeakMap,DU=new WeakMap,xQ=new WeakMap,jQ=new WeakSet,nN=function(){const U=new GR(Q(this,wZ),.001);i(this,mU,U.getOutlines()),{x:this.x,y:this.y,width:this.width,height:this.height}=Q(this,mU).box;const Z=new GR(Q(this,wZ),.0025,.001,this._uiManager.direction==="ltr");i(this,dU,Z.getOutlines());const{lastPoint:d}=Q(this,dU).box;i(this,R0,[(d[0]-this.x)/this.width,(d[1]-this.y)/this.height])},OQ=new WeakSet,hN=function({highlightOutlines:U,highlightId:Z,clipPathId:d}){var s,b;i(this,mU,U);const F=1.5;if(i(this,dU,U.getNewOutline(Q(this,DU)/2+F,.0025)),Z>=0)i(this,El,Z),i(this,rd,d),this.parent.drawLayer.finalizeLine(Z,U),i(this,al,this.parent.drawLayer.highlightOutline(Q(this,dU)));else if(this.parent){const n=this.parent.viewport.rotation;this.parent.drawLayer.updateLine(Q(this,El),U),this.parent.drawLayer.updateBox(Q(this,El),m(s=Vl,xZ,y0).call(s,Q(this,mU).box,(n-this.rotation+360)%360)),this.parent.drawLayer.updateLine(Q(this,al),Q(this,dU)),this.parent.drawLayer.updateBox(Q(this,al),m(b=Vl,xZ,y0).call(b,Q(this,dU).box,n))}const{x:W,y:V,width:c,height:t}=U.box;switch(this.rotation){case 0:this.x=W,this.y=V,this.width=c,this.height=t;break;case 90:{const[n,h]=this.parentDimensions;this.x=V,this.y=1-W,this.width=c*h/n,this.height=t*n/h;break}case 180:this.x=1-W,this.y=1-V,this.width=c,this.height=t;break;case 270:{const[n,h]=this.parentDimensions;this.x=1-V,this.y=W,this.width=c*h/n,this.height=t*n/h;break}}const{lastPoint:N}=Q(this,dU).box;i(this,R0,[(N[0]-W)/c,(N[1]-V)/t])},Ut=new WeakSet,Gb=function(U){const Z=F=>{var W,V;this.color=F,(W=this.parent)==null||W.drawLayer.changeColor(Q(this,El),F),(V=Q(this,t0))==null||V.updateColor(F)},d=this.color;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:I.HIGHLIGHT_COLOR,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"color_changed",color:this._uiManager.highlightColorNames.get(U)},!0)},Zt=new WeakSet,Tb=function(U){const Z=Q(this,DU),d=F=>{i(this,DU,F),m(this,dt,Xb).call(this,F)};this.addCommands({cmd:d.bind(this,U),undo:d.bind(this,Z),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:I.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"thickness_changed",thickness:U},!0)},dt=new WeakSet,Xb=function(U){if(!Q(this,Al))return;m(this,OQ,hN).call(this,{highlightOutlines:Q(this,mU).getNewOutline(U/2)}),this.fixAndSetPosition();const[Z,d]=this.parentDimensions;this.setDims(this.width*Z,this.height*d)},rQ=new WeakSet,mN=function(){Q(this,El)===null||!this.parent||(this.parent.drawLayer.remove(Q(this,El)),i(this,El,null),this.parent.drawLayer.remove(Q(this,al)),i(this,al,null))},Hd=new WeakSet,hV=function(U=this.parent){Q(this,El)===null&&({id:MU(this,El)._,clipPathId:MU(this,rd)._}=U.drawLayer.highlight(Q(this,mU),this.color,Q(this,gd)),i(this,al,U.drawLayer.highlightOutline(Q(this,dU))),Q(this,Kd)&&(Q(this,Kd).style.clipPath=Q(this,rd)))},xZ=new WeakSet,y0=function({x:U,y:Z,width:d,height:F},W){switch(W){case 90:return{x:1-Z-F,y:U,width:F,height:d};case 180:return{x:1-U-d,y:1-Z-F,width:d,height:F};case 270:return{x:Z,y:1-U-d,width:F,height:d}}return{x:U,y:Z,width:d,height:F}},Ft=new WeakSet,Yb=function(U){Vl._keyboardManager.exec(this,U)},s0=new WeakSet,jt=function(U){if(!Q(this,c0))return;const Z=window.getSelection();U?Z.setPosition(Q(this,c0),Q(this,EQ)):Z.setPosition(Q(this,CQ),Q(this,wQ))},vd=new WeakSet,mV=function(){return Q(this,Al)?this.rotation:0},Wt=new WeakSet,Sb=function(){if(Q(this,Al))return null;const[U,Z]=this.pageDimensions,d=Q(this,wZ),F=new Array(d.length*8);let W=0;for(const{x:V,y:c,width:t,height:N}of d){const s=V*U,b=(1-c-N)*Z;F[W]=F[W+4]=s,F[W+1]=F[W+3]=b,F[W+2]=F[W+6]=s+t*U,F[W+5]=F[W+7]=b+N*Z,W+=8}return F},Qt=new WeakSet,Bb=function(U){return Q(this,mU).serialize(U,m(this,vd,mV).call(this))},Vt=new WeakSet,eb=function(U,Z){this._freeHighlight.add(Z)&&U.drawLayer.updatePath(this._freeHighlightId,this._freeHighlight)},ct=new WeakSet,pb=function(U,Z){this._freeHighlight.isEmpty()?U.drawLayer.removeFreeHighlight(this._freeHighlightId):U.createAndAddNewEditor(Z,!1,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:"main_toolbar"}),this._freeHighlightId=-1,this._freeHighlight=null,this._freeHighlightClipId=""},a(yl,xZ),a(yl,Vt),a(yl,ct),E(yl,"_defaultColor",null),E(yl,"_defaultOpacity",1),E(yl,"_defaultThickness",12),E(yl,"_l10nPromise"),E(yl,"_type","highlight"),E(yl,"_editorType",K.HIGHLIGHT),E(yl,"_freeHighlightId",-1),E(yl,"_freeHighlight",null),E(yl,"_freeHighlightClipId","");const Sl=class extends H{constructor(U){super({...U,name:"inkEditor"});a(this,tt);a(this,Rt);a(this,Nt);a(this,st);a(this,vQ);a(this,bt);a(this,PQ);a(this,at);a(this,nt);a(this,ht);a(this,mt);a(this,it);a(this,aZ);a(this,AQ);a(this,b0);a(this,a0);a(this,OZ);a(this,fQ);a(this,n0);a(this,Gt);a(this,qQ);a(this,h0);a(this,ZF);a(this,Pd,0);a(this,Ad,0);a(this,KQ,this.canvasPointermove.bind(this));a(this,gQ,this.canvasPointerleave.bind(this));a(this,HQ,this.canvasPointerup.bind(this));a(this,fd,this.canvasPointerdown.bind(this));a(this,IU,null);a(this,bZ,new Path2D);a(this,FU,!1);a(this,_d,!1);a(this,qd,!1);a(this,$d,null);a(this,lF,0);a(this,UF,0);a(this,jZ,null);this.color=U.color||null,this.thickness=U.thickness||null,this.opacity=U.opacity||null,this.paths=[],this.bezierPath2D=[],this.allRawPaths=[],this.currentPath=[],this.scaleFactor=1,this.translationX=this.translationY=0,this.x=0,this.y=0,this._willKeepAspectRatio=!0}static initialize(U,Z){H.initialize(U,Z)}static updateDefaultParams(U,Z){switch(U){case I.INK_THICKNESS:Sl._defaultThickness=Z;break;case I.INK_COLOR:Sl._defaultColor=Z;break;case I.INK_OPACITY:Sl._defaultOpacity=Z/100;break}}updateParams(U,Z){switch(U){case I.INK_THICKNESS:m(this,tt,ub).call(this,Z);break;case I.INK_COLOR:m(this,Rt,yb).call(this,Z);break;case I.INK_OPACITY:m(this,Nt,Lb).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[I.INK_THICKNESS,Sl._defaultThickness],[I.INK_COLOR,Sl._defaultColor||H._defaultLineColor],[I.INK_OPACITY,Math.round(Sl._defaultOpacity*100)]]}get propertiesToUpdate(){return[[I.INK_THICKNESS,this.thickness||Sl._defaultThickness],[I.INK_COLOR,this.color||Sl._defaultColor||H._defaultLineColor],[I.INK_OPACITY,Math.round(100*(this.opacity??Sl._defaultOpacity))]]}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.canvas||(m(this,b0,Ot).call(this),m(this,a0,rt).call(this)),this.isAttachedToDOM||(this.parent.add(this),m(this,OZ,L0).call(this)),m(this,ZF,iV).call(this)))}remove(){this.canvas!==null&&(this.isEmpty()||this.commit(),this.canvas.width=this.canvas.height=0,this.canvas.remove(),this.canvas=null,Q(this,IU)&&(clearTimeout(Q(this,IU)),i(this,IU,null)),Q(this,$d).disconnect(),i(this,$d,null),super.remove())}setParent(U){!this.parent&&U?this._uiManager.removeShouldRescale(this):this.parent&&U===null&&this._uiManager.addShouldRescale(this),super.setParent(U)}onScaleChanging(){const[U,Z]=this.parentDimensions,d=this.width*U,F=this.height*Z;this.setDimensions(d,F)}enableEditMode(){Q(this,FU)||this.canvas===null||(super.enableEditMode(),this._isDraggable=!1,this.canvas.addEventListener("pointerdown",Q(this,fd)))}disableEditMode(){!this.isInEditMode()||this.canvas===null||(super.disableEditMode(),this._isDraggable=!this.isEmpty(),this.div.classList.remove("editing"),this.canvas.removeEventListener("pointerdown",Q(this,fd)))}onceAdded(){this._isDraggable=!this.isEmpty()}isEmpty(){return this.paths.length===0||this.paths.length===1&&this.paths[0].length===0}commit(){Q(this,FU)||(super.commit(),this.isEditing=!1,this.disableEditMode(),this.setInForeground(),i(this,FU,!0),this.div.classList.add("disabled"),m(this,ZF,iV).call(this,!0),this.select(),this.parent.addInkEditorIfNeeded(!0),this.moveInDOM(),this.div.focus({preventScroll:!0}))}focusin(U){this._focusEventsAllowed&&(super.focusin(U),this.enableEditMode())}canvasPointerdown(U){U.button!==0||!this.isInEditMode()||Q(this,FU)||(this.setInForeground(),U.preventDefault(),this.div.contains(document.activeElement)||this.div.focus({preventScroll:!0}),m(this,bt,kb).call(this,U.offsetX,U.offsetY))}canvasPointermove(U){U.preventDefault(),m(this,PQ,MN).call(this,U.offsetX,U.offsetY)}canvasPointerup(U){U.preventDefault(),m(this,AQ,JN).call(this,U)}canvasPointerleave(U){m(this,AQ,JN).call(this,U)}get isResizable(){return!this.isEmpty()&&Q(this,FU)}render(){if(this.div)return this.div;let U,Z;this.width&&(U=this.x,Z=this.y),super.render(),this.div.setAttribute("data-l10n-id","pdfjs-ink");const[d,F,W,V]=m(this,st,zb).call(this);if(this.setAt(d,F,0,0),this.setDims(W,V),m(this,b0,Ot).call(this),this.width){const[c,t]=this.parentDimensions;this.setAspectRatio(this.width*c,this.height*t),this.setAt(U*c,Z*t,this.width*c,this.height*t),i(this,qd,!0),m(this,OZ,L0).call(this),this.setDims(this.width*c,this.height*t),m(this,aZ,RF).call(this),this.div.classList.add("disabled")}else this.div.classList.add("editing"),this.enableEditMode();return m(this,a0,rt).call(this),this.div}setDimensions(U,Z){const d=Math.round(U),F=Math.round(Z);if(Q(this,lF)===d&&Q(this,UF)===F)return;i(this,lF,d),i(this,UF,F),this.canvas.style.visibility="hidden";const[W,V]=this.parentDimensions;this.width=U/W,this.height=Z/V,this.fixAndSetPosition(),Q(this,FU)&&m(this,fQ,GN).call(this,U,Z),m(this,OZ,L0).call(this),m(this,aZ,RF).call(this),this.canvas.style.visibility="visible",this.fixDims()}static deserialize(U,Z,d){var G,J,T;if(U instanceof Ts)return null;const F=super.deserialize(U,Z,d);F.thickness=U.thickness,F.color=y.makeHexColor(...U.color),F.opacity=U.opacity;const[W,V]=F.pageDimensions,c=F.width*W,t=F.height*V,N=F.parentScale,s=U.thickness/2;i(F,FU,!0),i(F,lF,Math.round(c)),i(F,UF,Math.round(t));const{paths:b,rect:n,rotation:h}=U;for(let{bezier:X}of b){X=m(G=Sl,Jt,xb).call(G,X,n,h);const S=[];F.paths.push(S);let e=N*(X[0]-s),Y=N*(X[1]-s);for(let p=2,z=X.length;p<z;p+=6){const C=N*(X[p]-s),L=N*(X[p+1]-s),v=N*(X[p+2]-s),r=N*(X[p+3]-s),P=N*(X[p+4]-s),f=N*(X[p+5]-s);S.push([[e,Y],[C,L],[v,r],[P,f]]),e=P,Y=f}const B=m(this,Mt,wb).call(this,S);F.bezierPath2D.push(B)}const M=m(J=F,qQ,XN).call(J);return i(F,Ad,Math.max(H.MIN_SIZE,M[2]-M[0])),i(F,Pd,Math.max(H.MIN_SIZE,M[3]-M[1])),m(T=F,fQ,GN).call(T,c,t),F}serialize(){if(this.isEmpty())return null;const U=this.getRect(0,0),Z=H._colorManager.convert(this.ctx.strokeStyle);return{annotationType:K.INK,color:Z,thickness:this.thickness,opacity:this.opacity,paths:m(this,Gt,jb).call(this,this.scaleFactor/this.parentScale,this.translationX,this.translationY,U),pageIndex:this.pageIndex,rect:U,rotation:this.rotation,structTreeParentId:this._structTreeParentId}}};let cU=Sl;Pd=new WeakMap,Ad=new WeakMap,KQ=new WeakMap,gQ=new WeakMap,HQ=new WeakMap,fd=new WeakMap,IU=new WeakMap,bZ=new WeakMap,FU=new WeakMap,_d=new WeakMap,qd=new WeakMap,$d=new WeakMap,lF=new WeakMap,UF=new WeakMap,jZ=new WeakMap,tt=new WeakSet,ub=function(U){const Z=F=>{this.thickness=F,m(this,ZF,iV).call(this)},d=this.thickness;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:I.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})},Rt=new WeakSet,yb=function(U){const Z=F=>{this.color=F,m(this,aZ,RF).call(this)},d=this.color;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:I.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})},Nt=new WeakSet,Lb=function(U){const Z=F=>{this.opacity=F,m(this,aZ,RF).call(this)};U/=100;const d=this.opacity;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:I.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})},st=new WeakSet,zb=function(){const{parentRotation:U,parentDimensions:[Z,d]}=this;switch(U){case 90:return[0,d,d,Z];case 180:return[Z,d,Z,d];case 270:return[Z,0,d,Z];default:return[0,0,Z,d]}},vQ=new WeakSet,iN=function(){const{ctx:U,color:Z,opacity:d,thickness:F,parentScale:W,scaleFactor:V}=this;U.lineWidth=F*W/V,U.lineCap="round",U.lineJoin="round",U.miterLimit=10,U.strokeStyle=`${Z}${na(d)}`},bt=new WeakSet,kb=function(U,Z){this.canvas.addEventListener("contextmenu",jl),this.canvas.addEventListener("pointerleave",Q(this,gQ)),this.canvas.addEventListener("pointermove",Q(this,KQ)),this.canvas.addEventListener("pointerup",Q(this,HQ)),this.canvas.removeEventListener("pointerdown",Q(this,fd)),this.isEditing=!0,Q(this,qd)||(i(this,qd,!0),m(this,OZ,L0).call(this),this.thickness||(this.thickness=Sl._defaultThickness),this.color||(this.color=Sl._defaultColor||H._defaultLineColor),this.opacity??(this.opacity=Sl._defaultOpacity)),this.currentPath.push([U,Z]),i(this,_d,!1),m(this,vQ,iN).call(this),i(this,jZ,()=>{m(this,ht,Ib).call(this),Q(this,jZ)&&window.requestAnimationFrame(Q(this,jZ))}),window.requestAnimationFrame(Q(this,jZ))},PQ=new WeakSet,MN=function(U,Z){const[d,F]=this.currentPath.at(-1);if(this.currentPath.length>1&&U===d&&Z===F)return;const W=this.currentPath;let V=Q(this,bZ);if(W.push([U,Z]),i(this,_d,!0),W.length<=2){V.moveTo(...W[0]),V.lineTo(U,Z);return}W.length===3&&(i(this,bZ,V=new Path2D),V.moveTo(...W[0])),m(this,mt,Eb).call(this,V,...W.at(-3),...W.at(-2),U,Z)},at=new WeakSet,ob=function(){if(this.currentPath.length===0)return;const U=this.currentPath.at(-1);Q(this,bZ).lineTo(...U)},nt=new WeakSet,Db=function(U,Z){i(this,jZ,null),U=Math.min(Math.max(U,0),this.canvas.width),Z=Math.min(Math.max(Z,0),this.canvas.height),m(this,PQ,MN).call(this,U,Z),m(this,at,ob).call(this);let d;if(this.currentPath.length!==1)d=m(this,it,Cb).call(this);else{const t=[U,Z];d=[[t,t.slice(),t.slice(),t]]}const F=Q(this,bZ),W=this.currentPath;this.currentPath=[],i(this,bZ,new Path2D);const V=()=>{this.allRawPaths.push(W),this.paths.push(d),this.bezierPath2D.push(F),this._uiManager.rebuild(this)},c=()=>{this.allRawPaths.pop(),this.paths.pop(),this.bezierPath2D.pop(),this.paths.length===0?this.remove():(this.canvas||(m(this,b0,Ot).call(this),m(this,a0,rt).call(this)),m(this,ZF,iV).call(this))};this.addCommands({cmd:V,undo:c,mustExec:!0})},ht=new WeakSet,Ib=function(){if(!Q(this,_d))return;i(this,_d,!1);const U=Math.ceil(this.thickness*this.parentScale),Z=this.currentPath.slice(-3),d=Z.map(V=>V[0]),F=Z.map(V=>V[1]);Math.min(...d)-U,Math.max(...d)+U,Math.min(...F)-U,Math.max(...F)+U;const{ctx:W}=this;W.save(),W.clearRect(0,0,this.canvas.width,this.canvas.height);for(const V of this.bezierPath2D)W.stroke(V);W.stroke(Q(this,bZ)),W.restore()},mt=new WeakSet,Eb=function(U,Z,d,F,W,V,c){const t=(Z+F)/2,N=(d+W)/2,s=(F+V)/2,b=(W+c)/2;U.bezierCurveTo(t+2*(F-t)/3,N+2*(W-N)/3,s+2*(F-s)/3,b+2*(W-b)/3,s,b)},it=new WeakSet,Cb=function(){const U=this.currentPath;if(U.length<=2)return[[U[0],U[0],U.at(-1),U.at(-1)]];const Z=[];let d,[F,W]=U[0];for(d=1;d<U.length-2;d++){const[n,h]=U[d],[M,G]=U[d+1],J=(n+M)/2,T=(h+G)/2,X=[F+2*(n-F)/3,W+2*(h-W)/3],S=[J+2*(n-J)/3,T+2*(h-T)/3];Z.push([[F,W],X,S,[J,T]]),[F,W]=[J,T]}const[V,c]=U[d],[t,N]=U[d+1],s=[F+2*(V-F)/3,W+2*(c-W)/3],b=[t+2*(V-t)/3,N+2*(c-N)/3];return Z.push([[F,W],s,b,[t,N]]),Z},aZ=new WeakSet,RF=function(){if(this.isEmpty()){m(this,n0,Kt).call(this);return}m(this,vQ,iN).call(this);const{canvas:U,ctx:Z}=this;Z.setTransform(1,0,0,1,0,0),Z.clearRect(0,0,U.width,U.height),m(this,n0,Kt).call(this);for(const d of this.bezierPath2D)Z.stroke(d)},AQ=new WeakSet,JN=function(U){this.canvas.removeEventListener("pointerleave",Q(this,gQ)),this.canvas.removeEventListener("pointermove",Q(this,KQ)),this.canvas.removeEventListener("pointerup",Q(this,HQ)),this.canvas.addEventListener("pointerdown",Q(this,fd)),Q(this,IU)&&clearTimeout(Q(this,IU)),i(this,IU,setTimeout(()=>{i(this,IU,null),this.canvas.removeEventListener("contextmenu",jl)},10)),m(this,nt,Db).call(this,U.offsetX,U.offsetY),this.addToAnnotationStorage(),this.setInBackground()},b0=new WeakSet,Ot=function(){this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=0,this.canvas.className="inkEditorCanvas",this.canvas.setAttribute("data-l10n-id","pdfjs-ink-canvas"),this.div.append(this.canvas),this.ctx=this.canvas.getContext("2d")},a0=new WeakSet,rt=function(){i(this,$d,new ResizeObserver(U=>{const Z=U[0].contentRect;Z.width&&Z.height&&this.setDimensions(Z.width,Z.height)})),Q(this,$d).observe(this.div)},OZ=new WeakSet,L0=function(){if(!Q(this,qd))return;const[U,Z]=this.parentDimensions;this.canvas.width=Math.ceil(this.width*U),this.canvas.height=Math.ceil(this.height*Z),m(this,n0,Kt).call(this)},fQ=new WeakSet,GN=function(U,Z){const d=m(this,h0,gt).call(this),F=(U-d)/Q(this,Ad),W=(Z-d)/Q(this,Pd);this.scaleFactor=Math.min(F,W)},n0=new WeakSet,Kt=function(){const U=m(this,h0,gt).call(this)/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+U,this.translationY*this.scaleFactor+U)},Mt=new WeakSet,wb=function(U){const Z=new Path2D;for(let d=0,F=U.length;d<F;d++){const[W,V,c,t]=U[d];d===0&&Z.moveTo(...W),Z.bezierCurveTo(V[0],V[1],c[0],c[1],t[0],t[1])}return Z},_Q=new WeakSet,TN=function(U,Z,d){const[F,W,V,c]=Z;switch(d){case 0:for(let t=0,N=U.length;t<N;t+=2)U[t]+=F,U[t+1]=c-U[t+1];break;case 90:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=U[t+1]+F,U[t+1]=s+W}break;case 180:for(let t=0,N=U.length;t<N;t+=2)U[t]=V-U[t],U[t+1]+=W;break;case 270:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=V-U[t+1],U[t+1]=c-s}break;default:throw new Error("Invalid rotation")}return U},Jt=new WeakSet,xb=function(U,Z,d){const[F,W,V,c]=Z;switch(d){case 0:for(let t=0,N=U.length;t<N;t+=2)U[t]-=F,U[t+1]=c-U[t+1];break;case 90:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=U[t+1]-W,U[t+1]=s-F}break;case 180:for(let t=0,N=U.length;t<N;t+=2)U[t]=V-U[t],U[t+1]-=W;break;case 270:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=c-U[t+1],U[t+1]=V-s}break;default:throw new Error("Invalid rotation")}return U},Gt=new WeakSet,jb=function(U,Z,d,F){var N,s;const W=[],V=this.thickness/2,c=U*Z+V,t=U*d+V;for(const b of this.paths){const n=[],h=[];for(let M=0,G=b.length;M<G;M++){const[J,T,X,S]=b[M];if(J[0]===S[0]&&J[1]===S[1]&&G===1){const r=U*J[0]+c,P=U*J[1]+t;n.push(r,P),h.push(r,P);break}const e=U*J[0]+c,Y=U*J[1]+t,B=U*T[0]+c,p=U*T[1]+t,z=U*X[0]+c,C=U*X[1]+t,L=U*S[0]+c,v=U*S[1]+t;M===0&&(n.push(e,Y),h.push(e,Y)),n.push(B,p,z,C,L,v),h.push(B,p),M===G-1&&h.push(L,v)}W.push({bezier:m(N=Sl,_Q,TN).call(N,n,F,this.rotation),points:m(s=Sl,_Q,TN).call(s,h,F,this.rotation)})}return W},qQ=new WeakSet,XN=function(){let U=1/0,Z=-1/0,d=1/0,F=-1/0;for(const W of this.paths)for(const[V,c,t,N]of W){const s=y.bezierBoundingBox(...V,...c,...t,...N);U=Math.min(U,s[0]),d=Math.min(d,s[1]),Z=Math.max(Z,s[2]),F=Math.max(F,s[3])}return[U,d,Z,F]},h0=new WeakSet,gt=function(){return Q(this,FU)?Math.ceil(this.thickness*this.parentScale):0},ZF=new WeakSet,iV=function(U=!1){if(this.isEmpty())return;if(!Q(this,FU)){m(this,aZ,RF).call(this);return}const Z=m(this,qQ,XN).call(this),d=m(this,h0,gt).call(this);i(this,Ad,Math.max(H.MIN_SIZE,Z[2]-Z[0])),i(this,Pd,Math.max(H.MIN_SIZE,Z[3]-Z[1]));const F=Math.ceil(d+Q(this,Ad)*this.scaleFactor),W=Math.ceil(d+Q(this,Pd)*this.scaleFactor),[V,c]=this.parentDimensions;this.width=F/V,this.height=W/c,this.setAspectRatio(F,W);const t=this.translationX,N=this.translationY;this.translationX=-Z[0],this.translationY=-Z[1],m(this,OZ,L0).call(this),m(this,aZ,RF).call(this),i(this,lF,F),i(this,UF,W),this.setDims(F,W);const s=U?d/this.scaleFactor/2:0;this.translate(t-this.translationX-s,N-this.translationY-s)},a(cU,Mt),a(cU,_Q),a(cU,Jt),E(cU,"_defaultColor",null),E(cU,"_defaultOpacity",1),E(cU,"_defaultThickness",1),E(cU,"_type","ink"),E(cU,"_editorType",K.INK);const LR=class extends H{constructor(U){super({...U,name:"stampEditor"});a(this,FF);a(this,WF);a(this,i0);a(this,lV);a(this,Tt);a(this,Xt);a(this,UV);a(this,M0);a(this,Yt);a(this,Bl,null);a(this,el,null);a(this,rZ,null);a(this,nZ,null);a(this,KZ,null);a(this,m0,"");a(this,EU,null);a(this,dF,null);a(this,CU,null);a(this,iU,!1);a(this,$Q,!1);i(this,nZ,U.bitmapUrl),i(this,KZ,U.bitmapFile)}static initialize(U,Z){H.initialize(U,Z)}static get supportedTypes(){return g(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map(Z=>`image/${Z}`))}static get supportedTypesStr(){return g(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(U){return this.supportedTypes.includes(U)}static paste(U,Z){Z.pasteEditor(K.STAMP,{bitmapFile:U.getAsFile()})}remove(){var U,Z;Q(this,el)&&(i(this,Bl,null),this._uiManager.imageManager.deleteId(Q(this,el)),(U=Q(this,EU))==null||U.remove(),i(this,EU,null),(Z=Q(this,dF))==null||Z.disconnect(),i(this,dF,null),Q(this,CU)&&(clearTimeout(Q(this,CU)),i(this,CU,null))),super.remove()}rebuild(){if(!this.parent){Q(this,el)&&m(this,i0,Ht).call(this);return}super.rebuild(),this.div!==null&&(Q(this,el)&&Q(this,EU)===null&&m(this,i0,Ht).call(this),this.isAttachedToDOM||this.parent.add(this))}onceAdded(){this._isDraggable=!0,this.div.focus()}isEmpty(){return!(Q(this,rZ)||Q(this,Bl)||Q(this,nZ)||Q(this,KZ)||Q(this,el))}get isResizable(){return!0}render(){if(this.div)return this.div;let U,Z;if(this.width&&(U=this.x,Z=this.y),super.render(),this.div.hidden=!0,this.addAltTextButton(),Q(this,Bl)?m(this,lV,YN).call(this):m(this,i0,Ht).call(this),this.width){const[d,F]=this.parentDimensions;this.setAt(U*d,Z*F,this.width*d,this.height*F)}return this.div}getImageForAltText(){return Q(this,EU)}static deserialize(U,Z,d){if(U instanceof Xs)return null;const F=super.deserialize(U,Z,d),{rect:W,bitmapUrl:V,bitmapId:c,isSvg:t,accessibilityData:N}=U;c&&d.imageManager.isValidId(c)?i(F,el,c):i(F,nZ,V),i(F,iU,t);const[s,b]=F.pageDimensions;return F.width=(W[2]-W[0])/s,F.height=(W[3]-W[1])/b,N&&(F.altTextData=N),F}serialize(U=!1,Z=null){if(this.isEmpty())return null;const d={annotationType:K.STAMP,bitmapId:Q(this,el),pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:Q(this,iU),structTreeParentId:this._structTreeParentId};if(U)return d.bitmapUrl=m(this,M0,vt).call(this,!0),d.accessibilityData=this.altTextData,d;const{decorative:F,altText:W}=this.altTextData;if(!F&&W&&(d.accessibilityData={type:"Figure",alt:W}),Z===null)return d;Z.stamps||(Z.stamps=new Map);const V=Q(this,iU)?(d.rect[2]-d.rect[0])*(d.rect[3]-d.rect[1]):null;if(!Z.stamps.has(Q(this,el)))Z.stamps.set(Q(this,el),{area:V,serialized:d}),d.bitmap=m(this,M0,vt).call(this,!1);else if(Q(this,iU)){const c=Z.stamps.get(Q(this,el));V>c.area&&(c.area=V,c.serialized.bitmap.close(),c.serialized.bitmap=m(this,M0,vt).call(this,!1))}return d}};let K0=LR;Bl=new WeakMap,el=new WeakMap,rZ=new WeakMap,nZ=new WeakMap,KZ=new WeakMap,m0=new WeakMap,EU=new WeakMap,dF=new WeakMap,CU=new WeakMap,iU=new WeakMap,$Q=new WeakMap,FF=new WeakSet,MV=function(U,Z=!1){if(!U){this.remove();return}i(this,Bl,U.bitmap),Z||(i(this,el,U.id),i(this,iU,U.isSvg)),U.file&&i(this,m0,U.file.name),m(this,lV,YN).call(this)},WF=new WeakSet,JV=function(){i(this,rZ,null),this._uiManager.enableWaiting(!1),Q(this,EU)&&this.div.focus()},i0=new WeakSet,Ht=function(){if(Q(this,el)){this._uiManager.enableWaiting(!0),this._uiManager.imageManager.getFromId(Q(this,el)).then(Z=>m(this,FF,MV).call(this,Z,!0)).finally(()=>m(this,WF,JV).call(this));return}if(Q(this,nZ)){const Z=Q(this,nZ);i(this,nZ,null),this._uiManager.enableWaiting(!0),i(this,rZ,this._uiManager.imageManager.getFromUrl(Z).then(d=>m(this,FF,MV).call(this,d)).finally(()=>m(this,WF,JV).call(this)));return}if(Q(this,KZ)){const Z=Q(this,KZ);i(this,KZ,null),this._uiManager.enableWaiting(!0),i(this,rZ,this._uiManager.imageManager.getFromFile(Z).then(d=>m(this,FF,MV).call(this,d)).finally(()=>m(this,WF,JV).call(this)));return}const U=document.createElement("input");U.type="file",U.accept=LR.supportedTypesStr,i(this,rZ,new Promise(Z=>{U.addEventListener("change",async()=>{if(!U.files||U.files.length===0)this.remove();else{this._uiManager.enableWaiting(!0);const d=await this._uiManager.imageManager.getFromFile(U.files[0]);m(this,FF,MV).call(this,d)}Z()}),U.addEventListener("cancel",()=>{this.remove(),Z()})}).finally(()=>m(this,WF,JV).call(this))),U.click()},lV=new WeakSet,YN=function(){const{div:U}=this;let{width:Z,height:d}=Q(this,Bl);const[F,W]=this.pageDimensions,V=.75;if(this.width)Z=this.width*F,d=this.height*W;else if(Z>V*F||d>V*W){const s=Math.min(V*F/Z,V*W/d);Z*=s,d*=s}const[c,t]=this.parentDimensions;this.setDims(Z*c/F,d*t/W),this._uiManager.enableWaiting(!1);const N=i(this,EU,document.createElement("canvas"));U.append(N),U.hidden=!1,m(this,UV,SN).call(this,Z,d),m(this,Yt,Kb).call(this),Q(this,$Q)||(this.parent.addUndoableEditor(this),i(this,$Q,!0)),this._reportTelemetry({action:"inserted_image"}),Q(this,m0)&&N.setAttribute("aria-label",Q(this,m0))},Tt=new WeakSet,Ob=function(U,Z){var V;const[d,F]=this.parentDimensions;this.width=U/d,this.height=Z/F,this.setDims(U,Z),(V=this._initialOptions)!=null&&V.isCentered?this.center():this.fixAndSetPosition(),this._initialOptions=null,Q(this,CU)!==null&&clearTimeout(Q(this,CU)),i(this,CU,setTimeout(()=>{i(this,CU,null),m(this,UV,SN).call(this,U,Z)},200))},Xt=new WeakSet,rb=function(U,Z){const{width:d,height:F}=Q(this,Bl);let W=d,V=F,c=Q(this,Bl);for(;W>2*U||V>2*Z;){const t=W,N=V;W>2*U&&(W=W>=16384?Math.floor(W/2)-1:Math.ceil(W/2)),V>2*Z&&(V=V>=16384?Math.floor(V/2)-1:Math.ceil(V/2));const s=new OffscreenCanvas(W,V);s.getContext("2d").drawImage(c,0,0,t,N,0,0,W,V),c=s.transferToImageBitmap()}return c},UV=new WeakSet,SN=function(U,Z){U=Math.ceil(U),Z=Math.ceil(Z);const d=Q(this,EU);if(!d||d.width===U&&d.height===Z)return;d.width=U,d.height=Z;const F=Q(this,iU)?Q(this,Bl):m(this,Xt,rb).call(this,U,Z);if(this._uiManager.hasMLManager&&!this.hasAltText()){const V=new OffscreenCanvas(U,Z);V.getContext("2d").drawImage(F,0,0,F.width,F.height,0,0,U,Z),V.convertToBlob().then(t=>{const N=new FileReader;N.onload=()=>{const s=N.result;this._uiManager.mlGuess({service:"image-to-text",request:{imageData:s}}).then(b=>{const n=(b==null?void 0:b.output)||"";this.parent&&n&&!this.hasAltText()&&(this.altTextData={altText:n,decorative:!1})})},N.readAsDataURL(t)})}const W=d.getContext("2d");W.filter=this._uiManager.hcmFilter,W.drawImage(F,0,0,F.width,F.height,0,0,U,Z)},M0=new WeakSet,vt=function(U){if(U){if(Q(this,iU)){const F=this._uiManager.imageManager.getSvgUrl(Q(this,el));if(F)return F}const Z=document.createElement("canvas");return{width:Z.width,height:Z.height}=Q(this,Bl),Z.getContext("2d").drawImage(Q(this,Bl),0,0),Z.toDataURL()}if(Q(this,iU)){const[Z,d]=this.pageDimensions,F=Math.round(this.width*Z*QU.PDF_TO_CSS_UNITS),W=Math.round(this.height*d*QU.PDF_TO_CSS_UNITS),V=new OffscreenCanvas(F,W);return V.getContext("2d").drawImage(Q(this,Bl),0,0,Q(this,Bl).width,Q(this,Bl).height,0,0,F,W),V.transferToImageBitmap()}return structuredClone(Q(this,Bl))},Yt=new WeakSet,Kb=function(){i(this,dF,new ResizeObserver(U=>{const Z=U[0].contentRect;Z.width&&Z.height&&m(this,Tt,Ob).call(this,Z.width,Z.height)})),Q(this,dF).observe(this.div)},E(K0,"_type","stamp"),E(K0,"_editorType",K.STAMP);const MZ=class{constructor({uiManager:l,pageIndex:U,div:Z,accessibilityManager:d,annotationLayer:F,drawLayer:W,textLayer:V,viewport:c,l10n:t}){a(this,St);a(this,ZV);a(this,dV);a(this,FV);a(this,X0);a(this,QF,void 0);a(this,J0,!1);a(this,wU,null);a(this,VF,null);a(this,hZ,null);a(this,mZ,null);a(this,iZ,null);a(this,fl,new Map);a(this,gZ,!1);a(this,G0,!1);a(this,T0,!1);a(this,Cl,null);a(this,D,void 0);const N=[...Q(MZ,HZ).values()];if(!MZ._initialized){MZ._initialized=!0;for(const s of N)s.initialize(t,l)}l.registerEditorTypes(N),i(this,D,l),this.pageIndex=U,this.div=Z,i(this,QF,d),i(this,wU,F),this.viewport=c,i(this,Cl,V),this.drawLayer=W,Q(this,D).addLayer(this)}get isEmpty(){return Q(this,fl).size===0}get isInvisible(){return this.isEmpty&&Q(this,D).getMode()===K.NONE}updateToolbar(l){Q(this,D).updateToolbar(l)}updateMode(l=Q(this,D).getMode()){switch(m(this,X0,Pt).call(this),l){case K.NONE:this.disableTextSelection(),this.togglePointerEvents(!1),this.toggleAnnotationLayerPointerEvents(!0),this.disableClick();return;case K.INK:this.addInkEditorIfNeeded(!1),this.disableTextSelection(),this.togglePointerEvents(!0),this.disableClick();break;case K.HIGHLIGHT:this.enableTextSelection(),this.togglePointerEvents(!1),this.disableClick();break;default:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick()}this.toggleAnnotationLayerPointerEvents(!1);const{classList:U}=this.div;for(const Z of Q(MZ,HZ).values())U.toggle(`${Z._type}Editing`,l===Z._editorType);this.div.hidden=!1}hasTextLayer(l){var U;return l===((U=Q(this,Cl))==null?void 0:U.div)}addInkEditorIfNeeded(l){if(Q(this,D).getMode()!==K.INK)return;if(!l){for(const Z of Q(this,fl).values())if(Z.isEmpty()){Z.setInBackground();return}}this.createAndAddNewEditor({offsetX:0,offsetY:0},!1).setInBackground()}setEditingState(l){Q(this,D).setEditingState(l)}addCommands(l){Q(this,D).addCommands(l)}togglePointerEvents(l=!1){this.div.classList.toggle("disabled",!l)}toggleAnnotationLayerPointerEvents(l=!1){var U;(U=Q(this,wU))==null||U.div.classList.toggle("disabled",!l)}enable(){this.div.tabIndex=0,this.togglePointerEvents(!0);const l=new Set;for(const Z of Q(this,fl).values())Z.enableEditing(),Z.show(!0),Z.annotationElementId&&(Q(this,D).removeChangedExistingAnnotation(Z),l.add(Z.annotationElementId));if(!Q(this,wU))return;const U=Q(this,wU).getEditableAnnotations();for(const Z of U){if(Z.hide(),Q(this,D).isDeletedAnnotationElement(Z.data.id)||l.has(Z.data.id))continue;const d=this.deserialize(Z);d&&(this.addOrRebuild(d),d.enableEditing())}}disable(){var d;i(this,T0,!0),this.div.tabIndex=-1,this.togglePointerEvents(!1);const l=new Map,U=new Map;for(const F of Q(this,fl).values())if(F.disableEditing(),!!F.annotationElementId){if(F.serialize()!==null){l.set(F.annotationElementId,F);continue}else U.set(F.annotationElementId,F);(d=this.getEditableAnnotation(F.annotationElementId))==null||d.show(),F.remove()}if(Q(this,wU)){const F=Q(this,wU).getEditableAnnotations();for(const W of F){const{id:V}=W.data;if(Q(this,D).isDeletedAnnotationElement(V))continue;let c=U.get(V);if(c){c.resetAnnotationElement(W),c.show(!1),W.show();continue}c=l.get(V),c&&(Q(this,D).addChangedExistingAnnotation(c),c.renderAnnotationElement(W),c.show(!1)),W.show()}}m(this,X0,Pt).call(this),this.isEmpty&&(this.div.hidden=!0);const{classList:Z}=this.div;for(const F of Q(MZ,HZ).values())Z.remove(`${F._type}Editing`);this.disableTextSelection(),this.toggleAnnotationLayerPointerEvents(!0),i(this,T0,!1)}getEditableAnnotation(l){var U;return((U=Q(this,wU))==null?void 0:U.getEditableAnnotation(l))||null}setActiveEditor(l){Q(this,D).getActive()!==l&&Q(this,D).setActiveEditor(l)}enableTextSelection(){var l;this.div.tabIndex=-1,(l=Q(this,Cl))!=null&&l.div&&!Q(this,mZ)&&(i(this,mZ,m(this,St,gb).bind(this)),Q(this,Cl).div.addEventListener("pointerdown",Q(this,mZ)),Q(this,Cl).div.classList.add("highlighting"))}disableTextSelection(){var l;this.div.tabIndex=0,(l=Q(this,Cl))!=null&&l.div&&Q(this,mZ)&&(Q(this,Cl).div.removeEventListener("pointerdown",Q(this,mZ)),i(this,mZ,null),Q(this,Cl).div.classList.remove("highlighting"))}enableClick(){Q(this,hZ)||(i(this,hZ,this.pointerdown.bind(this)),i(this,VF,this.pointerup.bind(this)),this.div.addEventListener("pointerdown",Q(this,hZ)),this.div.addEventListener("pointerup",Q(this,VF)))}disableClick(){Q(this,hZ)&&(this.div.removeEventListener("pointerdown",Q(this,hZ)),this.div.removeEventListener("pointerup",Q(this,VF)),i(this,hZ,null),i(this,VF,null))}attach(l){Q(this,fl).set(l.id,l);const{annotationElementId:U}=l;U&&Q(this,D).isDeletedAnnotationElement(U)&&Q(this,D).removeDeletedAnnotationElement(l)}detach(l){var U;Q(this,fl).delete(l.id),(U=Q(this,QF))==null||U.removePointerInTextLayer(l.contentDiv),!Q(this,T0)&&l.annotationElementId&&Q(this,D).addDeletedAnnotationElement(l)}remove(l){this.detach(l),Q(this,D).removeEditor(l),l.div.remove(),l.isAttachedToDOM=!1,Q(this,G0)||this.addInkEditorIfNeeded(!1)}changeParent(l){var U;l.parent!==this&&(l.parent&&l.annotationElementId&&(Q(this,D).addDeletedAnnotationElement(l.annotationElementId),H.deleteAnnotationElement(l),l.annotationElementId=null),this.attach(l),(U=l.parent)==null||U.detach(l),l.setParent(this),l.div&&l.isAttachedToDOM&&(l.div.remove(),this.div.append(l.div)))}add(l){if(!(l.parent===this&&l.isAttachedToDOM)){if(this.changeParent(l),Q(this,D).addEditor(l),this.attach(l),!l.isAttachedToDOM){const U=l.render();this.div.append(U),l.isAttachedToDOM=!0}l.fixAndSetPosition(),l.onceAdded(),Q(this,D).addToAnnotationStorage(l),l._reportTelemetry(l.telemetryInitialData)}}moveEditorInDOM(l){var Z;if(!l.isAttachedToDOM)return;const{activeElement:U}=document;l.div.contains(U)&&!Q(this,iZ)&&(l._focusEventsAllowed=!1,i(this,iZ,setTimeout(()=>{i(this,iZ,null),l.div.contains(document.activeElement)?l._focusEventsAllowed=!0:(l.div.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0}),U.focus())},0))),l._structTreeParentId=(Z=Q(this,QF))==null?void 0:Z.moveElementInDOM(this.div,l.div,l.contentDiv,!0)}addOrRebuild(l){l.needsToBeRebuilt()?(l.parent||(l.parent=this),l.rebuild(),l.show()):this.add(l)}addUndoableEditor(l){const U=()=>l._uiManager.rebuild(l),Z=()=>{l.remove()};this.addCommands({cmd:U,undo:Z,mustExec:!1})}getNextId(){return Q(this,D).getId()}canCreateNewEmptyEditor(){var l;return(l=Q(this,ZV,BN))==null?void 0:l.canCreateNewEmptyEditor()}pasteEditor(l,U){Q(this,D).updateToolbar(l),Q(this,D).updateMode(l);const{offsetX:Z,offsetY:d}=m(this,FV,pN).call(this),F=this.getNextId(),W=m(this,dV,eN).call(this,{parent:this,id:F,x:Z,y:d,uiManager:Q(this,D),isCentered:!0,...U});W&&this.add(W)}deserialize(l){var U;return((U=Q(MZ,HZ).get(l.annotationType??l.annotationEditorType))==null?void 0:U.deserialize(l,this,Q(this,D)))||null}createAndAddNewEditor(l,U,Z={}){const d=this.getNextId(),F=m(this,dV,eN).call(this,{parent:this,id:d,x:l.offsetX,y:l.offsetY,uiManager:Q(this,D),isCentered:U,...Z});return F&&this.add(F),F}addNewEditor(){this.createAndAddNewEditor(m(this,FV,pN).call(this),!0)}setSelected(l){Q(this,D).setSelected(l)}toggleSelected(l){Q(this,D).toggleSelected(l)}isSelected(l){return Q(this,D).isSelected(l)}unselect(l){Q(this,D).unselect(l)}pointerup(l){const{isMac:U}=xl.platform;if(!(l.button!==0||l.ctrlKey&&U)&&l.target===this.div&&Q(this,gZ)){if(i(this,gZ,!1),!Q(this,J0)){i(this,J0,!0);return}if(Q(this,D).getMode()===K.STAMP){Q(this,D).unselectAll();return}this.createAndAddNewEditor(l,!1)}}pointerdown(l){if(Q(this,D).getMode()===K.HIGHLIGHT&&this.enableTextSelection(),Q(this,gZ)){i(this,gZ,!1);return}const{isMac:U}=xl.platform;if(l.button!==0||l.ctrlKey&&U||l.target!==this.div)return;i(this,gZ,!0);const Z=Q(this,D).getActive();i(this,J0,!Z||Z.isEmpty())}findNewParent(l,U,Z){const d=Q(this,D).findParent(U,Z);return d===null||d===this?!1:(d.changeParent(l),!0)}destroy(){var l,U;((l=Q(this,D).getActive())==null?void 0:l.parent)===this&&(Q(this,D).commitOrRemove(),Q(this,D).setActiveEditor(null)),Q(this,iZ)&&(clearTimeout(Q(this,iZ)),i(this,iZ,null));for(const Z of Q(this,fl).values())(U=Q(this,QF))==null||U.removePointerInTextLayer(Z.contentDiv),Z.setParent(null),Z.isAttachedToDOM=!1,Z.div.remove();this.div=null,Q(this,fl).clear(),Q(this,D).removeLayer(this)}render({viewport:l}){this.viewport=l,Ud(this.div,l);for(const U of Q(this,D).getEditors(this.pageIndex))this.add(U),U.rebuild();this.updateMode()}update({viewport:l}){Q(this,D).commitOrRemove(),m(this,X0,Pt).call(this);const U=this.viewport.rotation,Z=l.rotation;if(this.viewport=l,Ud(this.div,{rotation:Z}),U!==Z)for(const d of Q(this,fl).values())d.rotate(Z);this.addInkEditorIfNeeded(!1)}get pageDimensions(){const{pageWidth:l,pageHeight:U}=this.viewport.rawDims;return[l,U]}get scale(){return Q(this,D).viewParameters.realScale}};let g0=MZ;QF=new WeakMap,J0=new WeakMap,wU=new WeakMap,VF=new WeakMap,hZ=new WeakMap,mZ=new WeakMap,iZ=new WeakMap,fl=new WeakMap,gZ=new WeakMap,G0=new WeakMap,T0=new WeakMap,Cl=new WeakMap,D=new WeakMap,HZ=new WeakMap,St=new WeakSet,gb=function(l){if(Q(this,D).unselectAll(),l.target===Q(this,Cl).div){const{isMac:U}=xl.platform;if(l.button!==0||l.ctrlKey&&U)return;Q(this,D).showAllEditors("highlight",!0,!0),Q(this,Cl).div.classList.add("free"),yl.startHighlighting(this,Q(this,D).direction==="ltr",l),Q(this,Cl).div.addEventListener("pointerup",()=>{Q(this,Cl).div.classList.remove("free")},{once:!0}),l.preventDefault()}},ZV=new WeakSet,BN=function(){return Q(MZ,HZ).get(Q(this,D).getMode())},dV=new WeakSet,eN=function(l){const U=Q(this,ZV,BN);return U?new U.prototype.constructor(l):null},FV=new WeakSet,pN=function(){const{x:l,y:U,width:Z,height:d}=this.div.getBoundingClientRect(),F=Math.max(0,l),W=Math.max(0,U),V=Math.min(window.innerWidth,l+Z),c=Math.min(window.innerHeight,U+d),t=(F+V)/2-l,N=(W+c)/2-U,[s,b]=this.viewport.rotation%180===0?[t,N]:[N,t];return{offsetX:s,offsetY:b}},X0=new WeakSet,Pt=function(){i(this,G0,!0);for(const l of Q(this,fl).values())l.isEmpty()&&l.remove();i(this,G0,!1)},E(g0,"_initialized",!1),a(g0,HZ,new Map([VU,cU,K0,yl].map(l=>[l._editorType,l])));const zl=class{constructor({pageIndex:l}){a(this,VV);a(this,Bt);a(this,xU,null);a(this,WV,0);a(this,nl,new Map);a(this,vZ,new Map);this.pageIndex=l}setParent(l){if(!Q(this,xU)){i(this,xU,l);return}if(Q(this,xU)!==l){if(Q(this,nl).size>0)for(const U of Q(this,nl).values())U.remove(),l.append(U);i(this,xU,l)}}static get _svgFactory(){return g(this,"_svgFactory",new FR)}highlight(l,U,Z,d=!1){const F=MU(this,WV)._++,W=m(this,VV,yN).call(this,l.box);W.classList.add("highlight"),l.free&&W.classList.add("free");const V=zl._svgFactory.createElement("defs");W.append(V);const c=zl._svgFactory.createElement("path");V.append(c);const t=`path_p${this.pageIndex}_${F}`;c.setAttribute("id",t),c.setAttribute("d",l.toSVGPath()),d&&Q(this,vZ).set(F,c);const N=m(this,Bt,Hb).call(this,V,t),s=zl._svgFactory.createElement("use");return W.append(s),W.setAttribute("fill",U),W.setAttribute("fill-opacity",Z),s.setAttribute("href",`#${t}`),Q(this,nl).set(F,W),{id:F,clipPathId:`url(#${N})`}}highlightOutline(l){const U=MU(this,WV)._++,Z=m(this,VV,yN).call(this,l.box);Z.classList.add("highlightOutline");const d=zl._svgFactory.createElement("defs");Z.append(d);const F=zl._svgFactory.createElement("path");d.append(F);const W=`path_p${this.pageIndex}_${U}`;F.setAttribute("id",W),F.setAttribute("d",l.toSVGPath()),F.setAttribute("vector-effect","non-scaling-stroke");let V;if(l.free){Z.classList.add("free");const N=zl._svgFactory.createElement("mask");d.append(N),V=`mask_p${this.pageIndex}_${U}`,N.setAttribute("id",V),N.setAttribute("maskUnits","objectBoundingBox");const s=zl._svgFactory.createElement("rect");N.append(s),s.setAttribute("width","1"),s.setAttribute("height","1"),s.setAttribute("fill","white");const b=zl._svgFactory.createElement("use");N.append(b),b.setAttribute("href",`#${W}`),b.setAttribute("stroke","none"),b.setAttribute("fill","black"),b.setAttribute("fill-rule","nonzero"),b.classList.add("mask")}const c=zl._svgFactory.createElement("use");Z.append(c),c.setAttribute("href",`#${W}`),V&&c.setAttribute("mask",`url(#${V})`);const t=c.cloneNode();return Z.append(t),c.classList.add("mainOutline"),t.classList.add("secondaryOutline"),Q(this,nl).set(U,Z),U}finalizeLine(l,U){const Z=Q(this,vZ).get(l);Q(this,vZ).delete(l),this.updateBox(l,U.box),Z.setAttribute("d",U.toSVGPath())}updateLine(l,U){Q(this,nl).get(l).firstChild.firstChild.setAttribute("d",U.toSVGPath())}removeFreeHighlight(l){this.remove(l),Q(this,vZ).delete(l)}updatePath(l,U){Q(this,vZ).get(l).setAttribute("d",U.toSVGPath())}updateBox(l,U){var Z;m(Z=zl,QV,uN).call(Z,Q(this,nl).get(l),U)}show(l,U){Q(this,nl).get(l).classList.toggle("hidden",!U)}rotate(l,U){Q(this,nl).get(l).setAttribute("data-main-rotation",U)}changeColor(l,U){Q(this,nl).get(l).setAttribute("fill",U)}changeOpacity(l,U){Q(this,nl).get(l).setAttribute("fill-opacity",U)}addClass(l,U){Q(this,nl).get(l).classList.add(U)}removeClass(l,U){Q(this,nl).get(l).classList.remove(U)}remove(l){Q(this,xU)!==null&&(Q(this,nl).get(l).remove(),Q(this,nl).delete(l))}destroy(){i(this,xU,null);for(const l of Q(this,nl).values())l.remove();Q(this,nl).clear()}};let PV=zl;xU=new WeakMap,WV=new WeakMap,nl=new WeakMap,vZ=new WeakMap,QV=new WeakSet,uN=function(l,{x:U=0,y:Z=0,width:d=1,height:F=1}={}){const{style:W}=l;W.top=`${100*Z}%`,W.left=`${100*U}%`,W.width=`${100*d}%`,W.height=`${100*F}%`},VV=new WeakSet,yN=function(l){var Z;const U=zl._svgFactory.create(1,1,!0);return Q(this,xU).append(U),U.setAttribute("aria-hidden",!0),m(Z=zl,QV,uN).call(Z,U,l),U},Bt=new WeakSet,Hb=function(l,U){const Z=zl._svgFactory.createElement("clipPath");l.append(Z);const d=`clip_${U}`;Z.setAttribute("id",d),Z.setAttribute("clipPathUnits","objectBoundingBox");const F=zl._svgFactory.createElement("use");return Z.append(F),F.setAttribute("href",`#${U}`),F.classList.add("clip"),d},a(PV,QV),k.AbortException,k.AnnotationEditorLayer,k.AnnotationEditorParamsType,k.AnnotationEditorType,k.AnnotationEditorUIManager;var An=k.AnnotationLayer,Ss=k.AnnotationMode;k.CMapCompressionType,k.ColorPicker,k.DOMSVGFactory,k.DrawLayer,k.FeatureTest;var AV=k.GlobalWorkerOptions;k.ImageKind,k.InvalidPDFException,k.MissingPDFException,k.OPS,k.Outliner,k.PDFDataRangeTransport,k.PDFDateString,k.PDFWorker,k.PasswordResponses,k.PermissionFlag,k.PixelsPerInch,k.RenderingCancelledException,k.UnexpectedResponseException,k.Util,k.VerbosityLevel;var fn=k.XfaLayer;k.build,k.createValidAbsoluteUrl,k.fetchData;var _n=k.getDocument;k.getFilenameFromUrl,k.getPdfFilenameFromUrl,k.getXfaPageViewport,k.isDataScheme,k.isPdfFile,k.noContextMenu,k.normalizeUnicode;var qn=k.renderTextLayer;k.setLayerDimensions,k.shadow,k.updateTextLayer,k.version;const Ih="",Bs="internal-link",$n="link",lh="file-attachment",Uh="form-text",Zh="form-select",dh="form-checkbox",Fh="form-radio",Wh="form-button",es=["click","dblclick","mouseover","input","change"];function H0(R,l,U){const Z=[];if(U)for(const d of U)d[R]===l&&Z.push(d);return Z}function PU(R,l){return{type:R,data:l}}function sF(R,l){switch(R.type){case"textarea":case"text":return PU(Uh,{fieldName:R.name,value:R.value});case"select-one":case"select-multiple":const U=[];for(const d of R.options)U.push({value:d.value,label:d.label});const Z=[];for(const d of R.selectedOptions)Z.push({value:d.value,label:d.label});return PU(Zh,{fieldName:R.name,value:Z,options:U});case"checkbox":return PU(dh,{fieldName:R.name,checked:R.checked});case"radio":return PU(Fh,{fieldName:R.name,...l});case"button":return PU(Wh,{fieldName:R.name,...l})}}function Qh(R){return PU(lh,R.file)}async function Vh(R,l){if(R.dest){if(typeof R.dest=="string")return PU(Bs,{referencedPage:Number(R.dest.substring(1,R.dest.length)),offset:null});{const U=await l.getPageIndex(R.dest[0]);return PU(Bs,{referencedPage:U+1,offset:{left:R.dest[2],bottom:R.dest[3]}})}}else if(R.url)return PU($n,{url:R.url,unsafeUrl:R.unsafeUrl})}function ps(R){for(const l of R.getElementsByTagName("span")){let U=l.textContent;const Z=JSON.parse(l.dataset.l10nArgs??"{}");if(U)for(const d in Z)U=U.replace(`{{${d}}}`,Z[d]);l.textContent=U}}function ch(R,l,U){var d;let Z=R.target.parentNode;if(Z.tagName==="DIV"&&(Z=Z.firstChild),Z.className==="linkAnnotation"&&R.type==="click"){const F=(d=Z.dataset)==null?void 0:d.annotationId;if(F)return Vh(H0("id",F,U)[0],l)}else if(Z.className.includes("popupAnnotation")||Z.className.includes("textAnnotation"))ps(Z);else if(Z.className.includes("fileAttachmentAnnotation")){ps(Z);const F=Z.dataset.annotationId;if(F&&R.type==="dblclick")return Qh(H0("id",F,U)[0])}else if(Z.className.includes("textWidgetAnnotation")&&R.type==="input"){let F=Z.getElementsByTagName("input")[0];return F||(F=Z.getElementsByTagName("textarea")[0]),sF(F)}else{if(Z.className.includes("choiceWidgetAnnotation")&&R.type==="input")return sF(Z.getElementsByTagName("select")[0]);if(Z.className.includes("buttonWidgetAnnotation checkBox")&&R.type==="change")return sF(Z.getElementsByTagName("input")[0]);if(Z.className.includes("buttonWidgetAnnotation radioButton")&&R.type==="change"){const F=Z.dataset.annotationId;if(F){const W=H0("id",F,U)[0],V=[];for(const c of H0("fieldName",W.fieldName,U))c.buttonValue&&V.push(c.buttonValue);return sF(Z.getElementsByTagName("input")[0],{value:W.buttonValue,defaultValue:W.fieldValue,options:V})}}else if(Z.className.includes("buttonWidgetAnnotation pushButton")&&R.type==="click"){const F=Z.dataset.annotationId;if(F){const W=H0("id",F,U)[0];return W.resetForm?sF({name:W.fieldName,type:"button"},{actions:W.actions,reset:!0}):sF({name:W.fieldName,type:"button"},{actions:W.actions,reset:!1})}}}}class us{constructor(){E(this,"externalLinkEnabled");this.externalLinkEnabled=!0}get pagesCount(){return 0}get page(){return 0}set page(l){}get rotation(){return 0}set rotation(l){}get isInPresentationMode(){return!1}async goToDestination(l){}goToPage(l){}addLinkAttributes(l,U,Z=!1){}getDestinationHash(l){return"#"}getAnchorUrl(l){return"#"}setHash(l){}executeNamedAction(l){}executeSetOCGState(l){}cachePageRef(l,U){}}const th=u.defineComponent({__name:"AnnotationLayer",props:{page:{},viewport:{},document:{},annotationsFilter:{},annotationsMap:{},imageResourcesPath:{},hideForms:{type:Boolean},enableScripting:{type:Boolean},intent:{}},emits:["annotation","annotationLoaded"],setup(R,{emit:l}){const U=R,Z=u.ref(),d=u.ref();function F(N){const s=ch(N,U.document,d.value);Promise.resolve(s).then(b=>{b&&l("annotation",b)})}async function W(){var s;return await((s=u.toRaw(U.document))==null?void 0:s.getFieldObjects())}async function V(){var s;return await((s=u.toRaw(U.document))==null?void 0:s.hasJSActions())}async function c(){const N=U.page;let s=await(N==null?void 0:N.getAnnotations({intent:U.intent}));if(U.annotationsFilter){const b=U.annotationsFilter;s=s.filter(n=>{const h=n.subtype,M=n.fieldType?`${h}.${n.fieldType}`:null;return(b==null?void 0:b.includes(h))||M!==null&&(b==null?void 0:b.includes(M))})}return s}async function t(){var T,X;(X=(T=Z.value).replaceChildren)==null||X.call(T);for(const S of es)Z.value.removeEventListener(S,F);const N=u.toRaw(U.document),s=U.page,b=U.viewport;d.value=await c();const n=new Map([]);for(const S of d.value)if(S.subtype==="Widget"&&S.fieldType==="Btn"&&S.pushButton){const e=S.rect[2]-S.rect[0],Y=S.rect[3]-S.rect[1],B=document.createElement("canvas");B.setAttribute("width",(e*b.scale).toString()),B.setAttribute("height",(Y*b.scale).toString()),n.set(S.id,B)}const h=N.annotationStorage;if(U.annotationsMap)for(const[S,e]of Object.entries(U.annotationsMap))h.setValue(S,e);const M={accessibilityManager:void 0,annotationCanvasMap:n,div:Z.value,l10n:null,page:s,viewport:b.clone({dontFlip:!0})},G={annotations:d.value,viewport:b.clone({dontFlip:!0}),linkService:new us,annotationCanvasMap:n,div:Z.value,annotationStorage:h,renderForms:!U.hideForms,page:s,enableScripting:!1,hasJSActions:await V(),fieldObjects:await W(),downloadManager:null,imageResourcesPath:U.imageResourcesPath};new An(M).render(G).then(async()=>{l("annotationLoaded",await c())});for(const S of es)Z.value.addEventListener(S,F)}return u.watch(()=>U.viewport,()=>{U.page&&U.viewport&&Z.value&&t()}),u.onMounted(()=>{U.page&&U.viewport&&Z.value&&t()}),(N,s)=>(u.openBlock(),u.createElementBlock("div",{ref_key:"layer",ref:Z,class:"annotationLayer",style:{display:"block"}},null,512))}}),Eh="";function Rh(R,l,U){const Z=[];for(const N of R.items)Z.push(N.str),N.hasEOL&&Z.push(`
`);const d=Z.join("").replace(/\n/g," "),F=["g"];U.ignoreCase&&F.push("i");let W=l.trim();U.completeWords&&(W=`\\b${W}\\b`);const V=new RegExp(W,F.join("")),c=[];let t;for(;(t=V.exec(d))!==null;)c.push([t.index,t[0].length,t[0]]);return c}function Nh(R,l){let U=0,Z=0;const d=l.items,F=d.length-1,W=[];for(let V=0;V<R.length;V++){let c=R[V][0];for(;U!==F&&c>=Z+d[U].str.length;)Z+=d[U].str.length+(d[U].hasEOL?1:0),U++;const t={idx:U,offset:c-Z};for(c+=R[V][1];U!==F&&c>Z+d[U].str.length;)Z+=d[U].str.length+(d[U].hasEOL?1:0),U++;const N={idx:U,offset:c-Z};W.push({start:t,end:N,str:R[V][2],oindex:R[V][0]})}return W}function sh(R,l,U){function Z(d,F=-1,W=-1){const V=l.items[d],c=[];let t="",N="",s="",b=U[d];if(!b)return;if(b.nodeType===Node.TEXT_NODE){const M=document.createElement("span");b.before(M),M.append(b),U[d]=M,b=M}F>=0&&W>=0?t=V.str.substring(F,W):F<0&&W<0?t=V.str:F>=0?t=V.str.substring(F):W>=0&&(t=V.str.substring(0,W));const n=document.createTextNode(t),h=document.createElement("span");if(h.className="highlight appended",h.append(n),c.push(h),F>0)if(b.childNodes.length===1&&b.childNodes[0].nodeType===Node.TEXT_NODE){N=V.str.substring(0,F);const M=document.createTextNode(N);c.unshift(M)}else{let M=0;const G=[];for(const J of b.childNodes){const T=J.nodeType===Node.TEXT_NODE?J.nodeValue:J.firstChild.nodeValue;M+=T.length,M<=F?G.push(J):F>=M-T.length&&W<=M&&G.push(document.createTextNode(T.substring(0,F-(M-T.length))))}c.unshift(...G)}if(W>0){s=V.str.substring(W);const M=document.createTextNode(s);c.push(M)}b.replaceChildren(...c)}for(const d of R)if(d.start.idx===d.end.idx)Z(d.start.idx,d.start.offset,d.end.offset);else for(let F=d.start.idx,W=d.end.idx;F<=W;F++)F===d.start.idx?Z(F,d.start.offset):F===d.end.idx?Z(F,-1,d.end.offset):Z(F)}function bh(R,l){const U=R.items.map(Z=>Z.str);for(let Z=0;Z<l.length;Z++){const d=l[Z];if(d&&d.nodeType!==Node.TEXT_NODE){const F=document.createTextNode(U[Z]);d.replaceChildren(F)}}}function ah(R,l,U){const Z=[];for(const d of R){const F=Rh(l,d,U);Z.push(...Nh(F,l))}return Z}const nh=u.defineComponent({__name:"TextLayer",props:{page:{},viewport:{},highlightText:{},highlightOptions:{}},emits:["highlight","textLoaded"],setup(R,{emit:l}){const U=R,Z=u.ref(),d=u.ref(),F=[];function W(){return Object.assign({},{ignoreCase:!0,completeWords:!1},U.highlightOptions)}async function V(s=!1){const b=U.page,n=await(b==null?void 0:b.getTextContent());if(n&&(s&&bh(n,F),U.highlightText)){const h=typeof U.highlightText=="string"?[U.highlightText]:U.highlightText,M=ah(h,n,W());sh(M,n,F),l("highlight",{matches:M,textContent:n,textDivs:F,page:(b==null?void 0:b.pageNumber)||1})}}function c(){var G,J;(J=(G=Z.value).replaceChildren)==null||J.call(G),F.splice(0,F.length);const s=U.page,b=U.viewport,h={textContentSource:s==null?void 0:s.streamTextContent({includeMarkedContent:!0,disableNormalization:!0}),viewport:b,container:Z.value,isOffscreenCanvasSupported:!0,textDivs:F,textDivProperties:new WeakMap};qn(h).promise.then(async()=>{var S;const T=await(s==null?void 0:s.getTextContent());l("textLoaded",{textDivs:F,textContent:T});const X=document.createElement("div");X.className="endOfContent",(S=Z.value)==null||S.appendChild(X),d.value=X,V()})}function t(){d.value&&d.value.classList.add("active")}function N(){d.value&&d.value.classList.remove("active")}return u.watch(()=>U.viewport,s=>{U.page&&U.viewport&&Z.value&&c()}),u.watch(()=>[U.highlightText,U.highlightOptions],s=>{V(!0)},{deep:!0}),u.onMounted(()=>{U.page&&U.viewport&&Z.value&&c()}),(s,b)=>(u.openBlock(),u.createElementBlock("div",{ref_key:"layer",ref:Z,class:"textLayer",style:{display:"block"},onMousedown:t,onMouseup:N},null,544))}}),hh=u.defineComponent({__name:"XFALayer",props:{page:{},document:{},viewport:{}},emits:["xfaLoaded"],setup(R,{emit:l}){const U=R,Z=u.ref();async function d(){var c,t;(t=(c=Z.value).replaceChildren)==null||t.call(c);const F=u.toRaw(U.document),W=U.page,V=U.viewport;if(F.isPureXfa){const N=await W.getXfa(),s={div:Z.value,viewport:V.clone({dontFlip:!0}),linkService:new us,annotationStorage:F==null?void 0:F.annotationStorage,xfaHtml:N};fn.render(s),l("xfaLoaded")}}return u.watch(()=>U.viewport,F=>{U.page&&U.viewport&&Z.value&&d()}),u.onMounted(()=>{U.page&&U.viewport&&Z.value&&d()}),(F,W)=>(u.openBlock(),u.createElementBlock("div",{ref_key:"layer",ref:Z,style:{display:"block"}},null,512))}}),Ch="",mh=u.createElementVNode("canvas",{dir:"ltr",style:{display:"block"},role:"main"},null,-1),XR=u.defineComponent({__name:"VuePDF",props:{pdf:{},page:{default:1},scale:{default:1},rotation:{},fitParent:{type:Boolean},width:{},height:{},textLayer:{type:Boolean},imageResourcesPath:{},hideForms:{type:Boolean},intent:{default:"display"},annotationLayer:{type:Boolean},annotationsFilter:{},annotationsMap:{},watermarkText:{},watermarkOptions:{},highlightText:{},highlightOptions:{}},emits:["annotation","highlight","loaded","textLoaded","annotationLoaded","xfaLoaded"],setup(R,{expose:l,emit:U}){const Z=R,d=u.ref(),F=u.ref(),W=u.ref(!1);let V;const c=u.computed(()=>({viewport:void 0,document:void 0,page:void 0})),t=u.computed(()=>({annotationsMap:Z.annotationsMap,annotationsFilter:Z.annotationsFilter,imageResourcesPath:Z.imageResourcesPath,hideForms:Z.hideForms,intent:Z.intent})),N=u.computed(()=>({highlightText:Z.highlightText,highlightOptions:Z.highlightOptions}));function s(){return Object.assign({},{columns:4,rows:4,rotation:45,fontSize:18,color:"rgba(211, 210, 211, 0.4)"},Z.watermarkOptions)}function b(Y){if(!(typeof Y=="number"&&Y%90===0))return 0;const B=Y/90;return B>4?b(Y-360):B<0?b(Y+360):Y}function n(Y){let B=Z.scale;if(Z.fitParent){const p=d.value.parentNode.clientWidth,z=Y.getViewport({scale:1}).width;B=p/z}else if(Z.width){const p=Y.getViewport({scale:1}).width;B=Z.width/p}else if(Z.height){const p=Y.getViewport({scale:1}).height;B=Z.height/p}return B}function h(Y=1){if(!Z.watermarkText)return;const B=M();if(!B)return;const p=B.getContext("2d");if(!p)return;const z=s(),C=Z.watermarkText,L=z.columns,v=z.rows,r=L*v,P=z.rotation,f=z.fontSize*Y;p.font=`${f}px Trebuchet MS`,p.fillStyle=z.color;for(let dl=0;dl<r;dl++){const o=dl%L*(B.width/L)+B.width/(L*2),w=Math.floor(dl/L)*(B.height/v)+B.height/(v*2),Y0=p.measureText(C).width;p.save(),p.translate(o,w),p.rotate(-P*(Math.PI/180)),p.fillText(C,-Y0/2,f/2),p.restore()}}function M(){var B;let Y=null;return(B=d.value)==null||B.childNodes.forEach(p=>{p.tagName==="CANVAS"&&(Y=p)}),Y}function G(Y){var C;let B;const p=M();p&&(p==null?void 0:p.getAttribute("role"))==="main"?B=p:(B=document.createElement("canvas"),B.style.display="block",B.setAttribute("dir","ltr"));const z=window.devicePixelRatio||1;return B.width=Math.floor(Y.width*z),B.height=Math.floor(Y.height*z),B.style.width=`${Math.floor(Y.width)}px`,B.style.height=`${Math.floor(Y.height)}px`,(C=d.value)==null||C.style.setProperty("--scale-factor",`${Y.scale}`),F.value.style.width=`${Math.floor(Y.width)}px`,F.value.style.height=`${Math.floor(Y.height)}px`,F.value.style.top="0",F.value.style.left="0",W.value=!0,B}function J(){V&&V.cancel()}function T(Y){var B;(B=u.toRaw(c.value.document))==null||B.getPage(Y).then(p=>{var o;J();const z=p.getViewport(),C={scale:n(p),rotation:b((Z.rotation||0)+z.rotation)},L=p.getViewport(C),v=M(),r=G(L),P=window.devicePixelRatio||1,f=P!==1?[P,0,0,P,0,0]:void 0,dl={canvasContext:r.getContext("2d"),viewport:L,annotationMode:Z.hideForms?Ss.ENABLE:Ss.ENABLE_FORMS,transform:f,intent:Z.intent};(r==null?void 0:r.getAttribute("role"))!=="main"?v&&((o=d.value)==null||o.replaceChild(r,v)):r.removeAttribute("role"),c.value.page=p,c.value.viewport=L,V=p.render(dl),V.promise.then(()=>{W.value=!1,h(L.scale),U("loaded",c.value.viewport)}).catch(()=>{})})}function X(Y){Y.promise.then(async B=>{c.value.document=B,T(Z.page)})}u.watch(()=>Z.pdf,Y=>{Y!==void 0&&X(Y)}),u.watch(()=>[Z.scale,Z.width,Z.height,Z.rotation,Z.page,Z.hideForms,Z.intent],()=>{T(Z.page)}),u.onMounted(()=>{Z.pdf!==void 0&&X(Z.pdf)});function S(){T(Z.page)}function e(){J()}return l({reload:S,cancel:e}),(Y,B)=>(u.openBlock(),u.createElementBlock("div",{ref_key:"container",ref:d,style:{position:"relative",display:"block"}},[mh,Y.annotationLayer?(u.openBlock(),u.createBlock(th,u.mergeProps({key:0},{...c.value,...t.value},{onAnnotation:B[0]||(B[0]=p=>U("annotation",p)),onAnnotationLoaded:B[1]||(B[1]=p=>U("annotationLoaded",p))}),null,16)):u.createCommentVNode("",!0),Y.textLayer?(u.openBlock(),u.createBlock(nh,u.mergeProps({key:1},{...c.value,...N.value},{onHighlight:B[2]||(B[2]=p=>U("highlight",p)),onTextLoaded:B[3]||(B[3]=p=>U("textLoaded",p))}),null,16)):u.createCommentVNode("",!0),u.createVNode(hh,u.mergeProps({...c.value},{onXfaLoaded:B[4]||(B[4]=p=>U("xfaLoaded"))}),null,16),u.withDirectives(u.createElementVNode("div",{ref_key:"loadingLayer",ref:F,style:{position:"absolute"}},[u.renderSlot(Y.$slots,"default")],512),[[u.vShow,W.value]])],512))}}),ih="data:application/javascript;base64,LyoqCiAqIEBsaWNzdGFydCBUaGUgZm9sbG93aW5nIGlzIHRoZSBlbnRpcmUgbGljZW5zZSBub3RpY2UgZm9yIHRoZQogKiBKYXZhU2NyaXB0IGNvZGUgaW4gdGhpcyBwYWdlCiAqCiAqIENvcHlyaWdodCAyMDIzIE1vemlsbGEgRm91bmRhdGlvbgogKgogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKiBAbGljZW5kIFRoZSBhYm92ZSBpcyB0aGUgZW50aXJlIGxpY2Vuc2Ugbm90aWNlIGZvciB0aGUKICogSmF2YVNjcmlwdCBjb2RlIGluIHRoaXMgcGFnZQogKi92YXIgZT17ZDoodCxpKT0+e2Zvcih2YXIgYSBpbiBpKWUubyhpLGEpJiYhZS5vKHQsYSkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGEse2VudW1lcmFibGU6ITAsZ2V0OmlbYV19KX0sbzooZSx0KT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LF9fd2VicGFja19leHBvcnRzX189Z2xvYmFsVGhpcy5wZGZqc1dvcmtlcj17fTtlLmQoX193ZWJwYWNrX2V4cG9ydHNfXyx7V29ya2VyTWVzc2FnZUhhbmRsZXI6KCk9Pldvcmtlck1lc3NhZ2VIYW5kbGVyfSk7Y29uc3QgdD0hKCJvYmplY3QiIT10eXBlb2YgcHJvY2Vzc3x8cHJvY2VzcysiIiE9IltvYmplY3QgcHJvY2Vzc10ifHxwcm9jZXNzLnZlcnNpb25zLm53fHxwcm9jZXNzLnZlcnNpb25zLmVsZWN0cm9uJiZwcm9jZXNzLnR5cGUmJiJicm93c2VyIiE9PXByb2Nlc3MudHlwZSksaT1bMSwwLDAsMSwwLDBdLGE9Wy4wMDEsMCwwLC4wMDEsMCwwXSxzPTEuMzUscj0uMzUsbj0uMjU5MjU5MjU5MjU5MjU5MjQsbz0xLGc9MixjPTQsaD04LGw9MTYsQz02NCxRPTI1NixFPSJwZGZqc19pbnRlcm5hbF9lZGl0b3JfIix1PTMsZD05LGY9MTMscD0xNSxtPXtQUklOVDo0LE1PRElGWV9DT05URU5UUzo4LENPUFk6MTYsTU9ESUZZX0FOTk9UQVRJT05TOjMyLEZJTExfSU5URVJBQ1RJVkVfRk9STVM6MjU2LENPUFlfRk9SX0FDQ0VTU0lCSUxJVFk6NTEyLEFTU0VNQkxFOjEwMjQsUFJJTlRfSElHSF9RVUFMSVRZOjIwNDh9LHk9MCx3PTQsYj0xLEQ9MixGPTMsUz0xLGs9MixSPTMsTj00LEc9NSx4PTYsTT03LFU9OCxMPTksSj0xMCxIPTExLFk9MTIsdj0xMyxLPTE0LFQ9MTUscT0xNixPPTE3LFc9MjAsWD0iR3JvdXAiLGo9IlIiLFo9MSxWPTIsej00LF89MTYsJD0zMixBQT0xMjgsZUE9NTEyLHRBPTEsaUE9MixhQT00MDk2LHNBPTgxOTIsckE9MzI3NjgsbkE9NjU1MzYsb0E9MTMxMDcyLGdBPTEwNDg1NzYsSUE9MjA5NzE1MixjQT04Mzg4NjA4LGhBPTE2Nzc3MjE2LGxBPTEsQ0E9MixCQT0zLFFBPTQsRUE9NSx1QT17RToiTW91c2UgRW50ZXIiLFg6Ik1vdXNlIEV4aXQiLEQ6Ik1vdXNlIERvd24iLFU6Ik1vdXNlIFVwIixGbzoiRm9jdXMiLEJsOiJCbHVyIixQTzoiUGFnZU9wZW4iLFBDOiJQYWdlQ2xvc2UiLFBWOiJQYWdlVmlzaWJsZSIsUEk6IlBhZ2VJbnZpc2libGUiLEs6IktleXN0cm9rZSIsRjoiRm9ybWF0IixWOiJWYWxpZGF0ZSIsQzoiQ2FsY3VsYXRlIn0sZEE9e1dDOiJXaWxsQ2xvc2UiLFdTOiJXaWxsU2F2ZSIsRFM6IkRpZFNhdmUiLFdQOiJXaWxsUHJpbnQiLERQOiJEaWRQcmludCJ9LGZBPXtPOiJQYWdlT3BlbiIsQzoiUGFnZUNsb3NlIn0scEE9e0VSUk9SUzowLFdBUk5JTkdTOjEsSU5GT1M6NX0sbUE9e05PTkU6MCxCSU5BUlk6MX0seUE9MSx3QT0yLGJBPTMsREE9NCxGQT01LFNBPTYsa0E9NyxSQT04LE5BPTksR0E9MTAseEE9MTEsTUE9MTIsVUE9MTMsTEE9MTQsSkE9MTUsSEE9MTYsWUE9MTcsdkE9MTgsS0E9MTksVEE9MjAscUE9MjEsT0E9MjIsUEE9MjMsV0E9MjQsWEE9MjUsakE9MjYsWkE9MjcsVkE9MjgsekE9MjksX0E9MzAsJEE9MzEsQWU9MzIsZWU9MzMsdGU9MzQsaWU9MzUsYWU9MzYsc2U9MzcscmU9MzgsbmU9Mzksb2U9NDAsZ2U9NDEsSWU9NDIsY2U9NDMsaGU9NDQsbGU9NDUsQ2U9NDYsQmU9NDcsUWU9NDgsRWU9NDksdWU9NTAsZGU9NTEsZmU9NTIscGU9NTMsbWU9NTQseWU9NTUsd2U9NTYsYmU9NTcsRGU9NTgsRmU9NTksU2U9NjAsa2U9NjEsUmU9NjIsTmU9NjMsR2U9NjQseGU9NjUsTWU9NjYsVWU9NjcsTGU9NjgsSmU9NjksSGU9NzAsWWU9NzEsdmU9NzIsS2U9NzMsVGU9NzQscWU9NzUsT2U9NzYsUGU9NzcsV2U9ODAsWGU9ODEsamU9ODMsWmU9ODQsVmU9ODUsemU9ODYsX2U9ODcsJGU9ODgsQXQ9ODksZXQ9OTAsdHQ9OTEsaXQ9MSxhdD0yO2xldCBzdD1wQS5XQVJOSU5HUztmdW5jdGlvbiBnZXRWZXJib3NpdHlMZXZlbCgpe3JldHVybiBzdH1mdW5jdGlvbiBpbmZvKGUpe3N0Pj1wQS5JTkZPUyYmY29uc29sZS5sb2coYEluZm86ICR7ZX1gKX1mdW5jdGlvbiB3YXJuKGUpe3N0Pj1wQS5XQVJOSU5HUyYmY29uc29sZS5sb2coYFdhcm5pbmc6ICR7ZX1gKX1mdW5jdGlvbiB1bnJlYWNoYWJsZShlKXt0aHJvdyBuZXcgRXJyb3IoZSl9ZnVuY3Rpb24gYXNzZXJ0KGUsdCl7ZXx8dW5yZWFjaGFibGUodCl9ZnVuY3Rpb24gY3JlYXRlVmFsaWRBYnNvbHV0ZVVybChlLHQ9bnVsbCxpPW51bGwpe2lmKCFlKXJldHVybiBudWxsO3RyeXtpZihpJiYic3RyaW5nIj09dHlwZW9mIGUpe2lmKGkuYWRkRGVmYXVsdFByb3RvY29sJiZlLnN0YXJ0c1dpdGgoInd3dy4iKSl7Y29uc3QgdD1lLm1hdGNoKC9cLi9nKTt0Py5sZW5ndGg+PTImJihlPWBodHRwOi8vJHtlfWApfWlmKGkudHJ5Q29udmVydEVuY29kaW5nKXRyeXtlPXN0cmluZ1RvVVRGOFN0cmluZyhlKX1jYXRjaHt9fWNvbnN0IGE9dD9uZXcgVVJMKGUsdCk6bmV3IFVSTChlKTtpZihmdW5jdGlvbiBfaXNWYWxpZFByb3RvY29sKGUpe3N3aXRjaChlPy5wcm90b2NvbCl7Y2FzZSJodHRwOiI6Y2FzZSJodHRwczoiOmNhc2UiZnRwOiI6Y2FzZSJtYWlsdG86IjpjYXNlInRlbDoiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fShhKSlyZXR1cm4gYX1jYXRjaHt9cmV0dXJuIG51bGx9ZnVuY3Rpb24gc2hhZG93KGUsdCxpLGE9ITEpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOmksZW51bWVyYWJsZTohYSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITF9KTtyZXR1cm4gaX1jb25zdCBydD1mdW5jdGlvbiBCYXNlRXhjZXB0aW9uQ2xvc3VyZSgpe2Z1bmN0aW9uIEJhc2VFeGNlcHRpb24oZSx0KXt0aGlzLmNvbnN0cnVjdG9yPT09QmFzZUV4Y2VwdGlvbiYmdW5yZWFjaGFibGUoIkNhbm5vdCBpbml0aWFsaXplIEJhc2VFeGNlcHRpb24uIik7dGhpcy5tZXNzYWdlPWU7dGhpcy5uYW1lPXR9QmFzZUV4Y2VwdGlvbi5wcm90b3R5cGU9bmV3IEVycm9yO0Jhc2VFeGNlcHRpb24uY29uc3RydWN0b3I9QmFzZUV4Y2VwdGlvbjtyZXR1cm4gQmFzZUV4Y2VwdGlvbn0oKTtjbGFzcyBQYXNzd29yZEV4Y2VwdGlvbiBleHRlbmRzIHJ0e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSwiUGFzc3dvcmRFeGNlcHRpb24iKTt0aGlzLmNvZGU9dH19Y2xhc3MgVW5rbm93bkVycm9yRXhjZXB0aW9uIGV4dGVuZHMgcnR7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLCJVbmtub3duRXJyb3JFeGNlcHRpb24iKTt0aGlzLmRldGFpbHM9dH19Y2xhc3MgSW52YWxpZFBERkV4Y2VwdGlvbiBleHRlbmRzIHJ0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsIkludmFsaWRQREZFeGNlcHRpb24iKX19Y2xhc3MgTWlzc2luZ1BERkV4Y2VwdGlvbiBleHRlbmRzIHJ0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsIk1pc3NpbmdQREZFeGNlcHRpb24iKX19Y2xhc3MgVW5leHBlY3RlZFJlc3BvbnNlRXhjZXB0aW9uIGV4dGVuZHMgcnR7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLCJVbmV4cGVjdGVkUmVzcG9uc2VFeGNlcHRpb24iKTt0aGlzLnN0YXR1cz10fX1jbGFzcyBGb3JtYXRFcnJvciBleHRlbmRzIHJ0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsIkZvcm1hdEVycm9yIil9fWNsYXNzIEFib3J0RXhjZXB0aW9uIGV4dGVuZHMgcnR7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwiQWJvcnRFeGNlcHRpb24iKX19ZnVuY3Rpb24gYnl0ZXNUb1N0cmluZyhlKXsib2JqZWN0Ij09dHlwZW9mIGUmJnZvaWQgMCE9PWU/Lmxlbmd0aHx8dW5yZWFjaGFibGUoIkludmFsaWQgYXJndW1lbnQgZm9yIGJ5dGVzVG9TdHJpbmciKTtjb25zdCB0PWUubGVuZ3RoLGk9ODE5MjtpZih0PGkpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxlKTtjb25zdCBhPVtdO2ZvcihsZXQgcz0wO3M8dDtzKz1pKXtjb25zdCByPU1hdGgubWluKHMraSx0KSxuPWUuc3ViYXJyYXkocyxyKTthLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLG4pKX1yZXR1cm4gYS5qb2luKCIiKX1mdW5jdGlvbiBzdHJpbmdUb0J5dGVzKGUpeyJzdHJpbmciIT10eXBlb2YgZSYmdW5yZWFjaGFibGUoIkludmFsaWQgYXJndW1lbnQgZm9yIHN0cmluZ1RvQnl0ZXMiKTtjb25zdCB0PWUubGVuZ3RoLGk9bmV3IFVpbnQ4QXJyYXkodCk7Zm9yKGxldCBhPTA7YTx0OysrYSlpW2FdPTI1NSZlLmNoYXJDb2RlQXQoYSk7cmV0dXJuIGl9ZnVuY3Rpb24gc3RyaW5nMzIoZSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZSl9ZnVuY3Rpb24gb2JqZWN0U2l6ZShlKXtyZXR1cm4gT2JqZWN0LmtleXMoZSkubGVuZ3RofWNsYXNzIEZlYXR1cmVUZXN0e3N0YXRpYyBnZXQgaXNMaXR0bGVFbmRpYW4oKXtyZXR1cm4gc2hhZG93KHRoaXMsImlzTGl0dGxlRW5kaWFuIixmdW5jdGlvbiBpc0xpdHRsZUVuZGlhbigpe2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkoNCk7ZVswXT0xO3JldHVybiAxPT09bmV3IFVpbnQzMkFycmF5KGUuYnVmZmVyLDAsMSlbMF19KCkpfXN0YXRpYyBnZXQgaXNFdmFsU3VwcG9ydGVkKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJpc0V2YWxTdXBwb3J0ZWQiLGZ1bmN0aW9uIGlzRXZhbFN1cHBvcnRlZCgpe3RyeXtuZXcgRnVuY3Rpb24oIiIpO3JldHVybiEwfWNhdGNoe3JldHVybiExfX0oKSl9c3RhdGljIGdldCBpc09mZnNjcmVlbkNhbnZhc1N1cHBvcnRlZCgpe3JldHVybiBzaGFkb3codGhpcywiaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQiLCJ1bmRlZmluZWQiIT10eXBlb2YgT2Zmc2NyZWVuQ2FudmFzKX1zdGF0aWMgZ2V0IHBsYXRmb3JtKCl7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBuYXZpZ2F0b3ImJiJzdHJpbmciPT10eXBlb2YgbmF2aWdhdG9yPy5wbGF0Zm9ybT9zaGFkb3codGhpcywicGxhdGZvcm0iLHtpc01hYzpuYXZpZ2F0b3IucGxhdGZvcm0uaW5jbHVkZXMoIk1hYyIpfSk6c2hhZG93KHRoaXMsInBsYXRmb3JtIix7aXNNYWM6ITF9KX1zdGF0aWMgZ2V0IGlzQ1NTUm91bmRTdXBwb3J0ZWQoKXtyZXR1cm4gc2hhZG93KHRoaXMsImlzQ1NTUm91bmRTdXBwb3J0ZWQiLGdsb2JhbFRoaXMuQ1NTPy5zdXBwb3J0cz8uKCJ3aWR0aDogcm91bmQoMS41cHgsIDFweCkiKSl9fWNvbnN0IG50PUFycmF5LmZyb20oQXJyYXkoMjU2KS5rZXlzKCksKGU9PmUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIjAiKSkpO2NsYXNzIFV0aWx7c3RhdGljIG1ha2VIZXhDb2xvcihlLHQsaSl7cmV0dXJuYCMke250W2VdfSR7bnRbdF19JHtudFtpXX1gfXN0YXRpYyBzY2FsZU1pbk1heChlLHQpe2xldCBpO2lmKGVbMF0pe2lmKGVbMF08MCl7aT10WzBdO3RbMF09dFsyXTt0WzJdPWl9dFswXSo9ZVswXTt0WzJdKj1lWzBdO2lmKGVbM108MCl7aT10WzFdO3RbMV09dFszXTt0WzNdPWl9dFsxXSo9ZVszXTt0WzNdKj1lWzNdfWVsc2V7aT10WzBdO3RbMF09dFsxXTt0WzFdPWk7aT10WzJdO3RbMl09dFszXTt0WzNdPWk7aWYoZVsxXTwwKXtpPXRbMV07dFsxXT10WzNdO3RbM109aX10WzFdKj1lWzFdO3RbM10qPWVbMV07aWYoZVsyXTwwKXtpPXRbMF07dFswXT10WzJdO3RbMl09aX10WzBdKj1lWzJdO3RbMl0qPWVbMl19dFswXSs9ZVs0XTt0WzFdKz1lWzVdO3RbMl0rPWVbNF07dFszXSs9ZVs1XX1zdGF0aWMgdHJhbnNmb3JtKGUsdCl7cmV0dXJuW2VbMF0qdFswXStlWzJdKnRbMV0sZVsxXSp0WzBdK2VbM10qdFsxXSxlWzBdKnRbMl0rZVsyXSp0WzNdLGVbMV0qdFsyXStlWzNdKnRbM10sZVswXSp0WzRdK2VbMl0qdFs1XStlWzRdLGVbMV0qdFs0XStlWzNdKnRbNV0rZVs1XV19c3RhdGljIGFwcGx5VHJhbnNmb3JtKGUsdCl7cmV0dXJuW2VbMF0qdFswXStlWzFdKnRbMl0rdFs0XSxlWzBdKnRbMV0rZVsxXSp0WzNdK3RbNV1dfXN0YXRpYyBhcHBseUludmVyc2VUcmFuc2Zvcm0oZSx0KXtjb25zdCBpPXRbMF0qdFszXS10WzFdKnRbMl07cmV0dXJuWyhlWzBdKnRbM10tZVsxXSp0WzJdK3RbMl0qdFs1XS10WzRdKnRbM10pL2ksKC1lWzBdKnRbMV0rZVsxXSp0WzBdK3RbNF0qdFsxXS10WzVdKnRbMF0pL2ldfXN0YXRpYyBnZXRBeGlhbEFsaWduZWRCb3VuZGluZ0JveChlLHQpe2NvbnN0IGk9dGhpcy5hcHBseVRyYW5zZm9ybShlLHQpLGE9dGhpcy5hcHBseVRyYW5zZm9ybShlLnNsaWNlKDIsNCksdCkscz10aGlzLmFwcGx5VHJhbnNmb3JtKFtlWzBdLGVbM11dLHQpLHI9dGhpcy5hcHBseVRyYW5zZm9ybShbZVsyXSxlWzFdXSx0KTtyZXR1cm5bTWF0aC5taW4oaVswXSxhWzBdLHNbMF0sclswXSksTWF0aC5taW4oaVsxXSxhWzFdLHNbMV0sclsxXSksTWF0aC5tYXgoaVswXSxhWzBdLHNbMF0sclswXSksTWF0aC5tYXgoaVsxXSxhWzFdLHNbMV0sclsxXSldfXN0YXRpYyBpbnZlcnNlVHJhbnNmb3JtKGUpe2NvbnN0IHQ9ZVswXSplWzNdLWVbMV0qZVsyXTtyZXR1cm5bZVszXS90LC1lWzFdL3QsLWVbMl0vdCxlWzBdL3QsKGVbMl0qZVs1XS1lWzRdKmVbM10pL3QsKGVbNF0qZVsxXS1lWzVdKmVbMF0pL3RdfXN0YXRpYyBzaW5ndWxhclZhbHVlRGVjb21wb3NlMmRTY2FsZShlKXtjb25zdCB0PVtlWzBdLGVbMl0sZVsxXSxlWzNdXSxpPWVbMF0qdFswXStlWzFdKnRbMl0sYT1lWzBdKnRbMV0rZVsxXSp0WzNdLHM9ZVsyXSp0WzBdK2VbM10qdFsyXSxyPWVbMl0qdFsxXStlWzNdKnRbM10sbj0oaStyKS8yLG89TWF0aC5zcXJ0KChpK3IpKioyLTQqKGkqci1zKmEpKS8yLGc9bitvfHwxLGM9bi1vfHwxO3JldHVybltNYXRoLnNxcnQoZyksTWF0aC5zcXJ0KGMpXX1zdGF0aWMgbm9ybWFsaXplUmVjdChlKXtjb25zdCB0PWUuc2xpY2UoMCk7aWYoZVswXT5lWzJdKXt0WzBdPWVbMl07dFsyXT1lWzBdfWlmKGVbMV0+ZVszXSl7dFsxXT1lWzNdO3RbM109ZVsxXX1yZXR1cm4gdH1zdGF0aWMgaW50ZXJzZWN0KGUsdCl7Y29uc3QgaT1NYXRoLm1heChNYXRoLm1pbihlWzBdLGVbMl0pLE1hdGgubWluKHRbMF0sdFsyXSkpLGE9TWF0aC5taW4oTWF0aC5tYXgoZVswXSxlWzJdKSxNYXRoLm1heCh0WzBdLHRbMl0pKTtpZihpPmEpcmV0dXJuIG51bGw7Y29uc3Qgcz1NYXRoLm1heChNYXRoLm1pbihlWzFdLGVbM10pLE1hdGgubWluKHRbMV0sdFszXSkpLHI9TWF0aC5taW4oTWF0aC5tYXgoZVsxXSxlWzNdKSxNYXRoLm1heCh0WzFdLHRbM10pKTtyZXR1cm4gcz5yP251bGw6W2kscyxhLHJdfXN0YXRpYyNBKGUsdCxpLGEscyxyLG4sbyxnLGMpe2lmKGc8PTB8fGc+PTEpcmV0dXJuO2NvbnN0IGg9MS1nLGw9ZypnLEM9bCpnLFE9aCooaCooaCplKzMqZyp0KSszKmwqaSkrQyphLEU9aCooaCooaCpzKzMqZypyKSszKmwqbikrQypvO2NbMF09TWF0aC5taW4oY1swXSxRKTtjWzFdPU1hdGgubWluKGNbMV0sRSk7Y1syXT1NYXRoLm1heChjWzJdLFEpO2NbM109TWF0aC5tYXgoY1szXSxFKX1zdGF0aWMjZShlLHQsaSxhLHMscixuLG8sZyxjLGgsbCl7aWYoTWF0aC5hYnMoZyk8MWUtMTIpe01hdGguYWJzKGMpPj0xZS0xMiYmdGhpcy4jQShlLHQsaSxhLHMscixuLG8sLWgvYyxsKTtyZXR1cm59Y29uc3QgQz1jKioyLTQqaCpnO2lmKEM8MClyZXR1cm47Y29uc3QgUT1NYXRoLnNxcnQoQyksRT0yKmc7dGhpcy4jQShlLHQsaSxhLHMscixuLG8sKC1jK1EpL0UsbCk7dGhpcy4jQShlLHQsaSxhLHMscixuLG8sKC1jLVEpL0UsbCl9c3RhdGljIGJlemllckJvdW5kaW5nQm94KGUsdCxpLGEscyxyLG4sbyxnKXtpZihnKXtnWzBdPU1hdGgubWluKGdbMF0sZSxuKTtnWzFdPU1hdGgubWluKGdbMV0sdCxvKTtnWzJdPU1hdGgubWF4KGdbMl0sZSxuKTtnWzNdPU1hdGgubWF4KGdbM10sdCxvKX1lbHNlIGc9W01hdGgubWluKGUsbiksTWF0aC5taW4odCxvKSxNYXRoLm1heChlLG4pLE1hdGgubWF4KHQsbyldO3RoaXMuI2UoZSxpLHMsbix0LGEscixvLDMqKDMqKGktcyktZStuKSw2KihlLTIqaStzKSwzKihpLWUpLGcpO3RoaXMuI2UoZSxpLHMsbix0LGEscixvLDMqKDMqKGEtciktdCtvKSw2Kih0LTIqYStyKSwzKihhLXQpLGcpO3JldHVybiBnfX1jb25zdCBvdD1bMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsNzI4LDcxMSw3MTAsNzI5LDczMyw3MzEsNzMwLDczMiwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCw4MjI2LDgyMjQsODIyNSw4MjMwLDgyMTIsODIxMSw0MDIsODI2MCw4MjQ5LDgyNTAsODcyMiw4MjQwLDgyMjIsODIyMCw4MjIxLDgyMTYsODIxNyw4MjE4LDg0ODIsNjQyNTcsNjQyNTgsMzIxLDMzOCwzNTIsMzc2LDM4MSwzMDUsMzIyLDMzOSwzNTMsMzgyLDAsODM2NF07ZnVuY3Rpb24gc3RyaW5nVG9QREZTdHJpbmcoZSl7aWYoZVswXT49IsOvIil7bGV0IHQ7aWYoIsO+Ij09PWVbMF0mJiLDvyI9PT1lWzFdKXt0PSJ1dGYtMTZiZSI7ZS5sZW5ndGglMj09MSYmKGU9ZS5zbGljZSgwLC0xKSl9ZWxzZSBpZigiw78iPT09ZVswXSYmIsO+Ij09PWVbMV0pe3Q9InV0Zi0xNmxlIjtlLmxlbmd0aCUyPT0xJiYoZT1lLnNsaWNlKDAsLTEpKX1lbHNlIsOvIj09PWVbMF0mJiLCuyI9PT1lWzFdJiYiwr8iPT09ZVsyXSYmKHQ9InV0Zi04Iik7aWYodCl0cnl7Y29uc3QgaT1uZXcgVGV4dERlY29kZXIodCx7ZmF0YWw6ITB9KSxhPXN0cmluZ1RvQnl0ZXMoZSkscz1pLmRlY29kZShhKTtyZXR1cm4gcy5pbmNsdWRlcygiGyIpP3MucmVwbGFjZUFsbCgvXHgxYlteXHgxYl0qKD86XHgxYnwkKS9nLCIiKTpzfWNhdGNoKGUpe3dhcm4oYHN0cmluZ1RvUERGU3RyaW5nOiAiJHtlfSIuYCl9fWNvbnN0IHQ9W107Zm9yKGxldCBpPTAsYT1lLmxlbmd0aDtpPGE7aSsrKXtjb25zdCBzPWUuY2hhckNvZGVBdChpKTtpZigyNz09PXMpe2Zvcig7KytpPGEmJjI3IT09ZS5jaGFyQ29kZUF0KGkpOyk7Y29udGludWV9Y29uc3Qgcj1vdFtzXTt0LnB1c2gocj9TdHJpbmcuZnJvbUNoYXJDb2RlKHIpOmUuY2hhckF0KGkpKX1yZXR1cm4gdC5qb2luKCIiKX1mdW5jdGlvbiBzdHJpbmdUb1VURjhTdHJpbmcoZSl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUoZSkpfWZ1bmN0aW9uIHV0ZjhTdHJpbmdUb1N0cmluZyhlKXtyZXR1cm4gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGUpKX1mdW5jdGlvbiBpc0FycmF5RXF1YWwoZSx0KXtpZihlLmxlbmd0aCE9PXQubGVuZ3RoKXJldHVybiExO2ZvcihsZXQgaT0wLGE9ZS5sZW5ndGg7aTxhO2krKylpZihlW2ldIT09dFtpXSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBnZXRNb2RpZmljYXRpb25EYXRlKGU9bmV3IERhdGUpe3JldHVybltlLmdldFVUQ0Z1bGxZZWFyKCkudG9TdHJpbmcoKSwoZS5nZXRVVENNb250aCgpKzEpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwiMCIpLGUuZ2V0VVRDRGF0ZSgpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwiMCIpLGUuZ2V0VVRDSG91cnMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIjAiKSxlLmdldFVUQ01pbnV0ZXMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIjAiKSxlLmdldFVUQ1NlY29uZHMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIjAiKV0uam9pbigiIil9bGV0IGd0PW51bGwsSXQ9bnVsbDtjb25zdCBjdD0wLGh0PTEsbHQ9MixDdD0zLEJ0PTQsUXQ9NSxFdD02LHV0PTcsZHQ9OCxmdD1TeW1ib2woIkNJUkNVTEFSX1JFRiIpLHB0PVN5bWJvbCgiRU9GIik7bGV0IG10PU9iamVjdC5jcmVhdGUobnVsbCkseXQ9T2JqZWN0LmNyZWF0ZShudWxsKSx3dD1PYmplY3QuY3JlYXRlKG51bGwpO2NsYXNzIE5hbWV7Y29uc3RydWN0b3IoZSl7dGhpcy5uYW1lPWV9c3RhdGljIGdldChlKXtyZXR1cm4geXRbZV18fD1uZXcgTmFtZShlKX19Y2xhc3MgQ21ke2NvbnN0cnVjdG9yKGUpe3RoaXMuY21kPWV9c3RhdGljIGdldChlKXtyZXR1cm4gbXRbZV18fD1uZXcgQ21kKGUpfX1jb25zdCBidD1mdW5jdGlvbiBub25TZXJpYWxpemFibGVDbG9zdXJlKCl7cmV0dXJuIGJ0fTtjbGFzcyBEaWN0e2NvbnN0cnVjdG9yKGU9bnVsbCl7dGhpcy5fbWFwPU9iamVjdC5jcmVhdGUobnVsbCk7dGhpcy54cmVmPWU7dGhpcy5vYmpJZD1udWxsO3RoaXMuc3VwcHJlc3NFbmNyeXB0aW9uPSExO3RoaXMuX19ub25TZXJpYWxpemFibGVfXz1idH1hc3NpZ25YcmVmKGUpe3RoaXMueHJlZj1lfWdldCBzaXplKCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuX21hcCkubGVuZ3RofWdldChlLHQsaSl7bGV0IGE9dGhpcy5fbWFwW2VdO2lmKHZvaWQgMD09PWEmJnZvaWQgMCE9PXQpe2E9dGhpcy5fbWFwW3RdO3ZvaWQgMD09PWEmJnZvaWQgMCE9PWkmJihhPXRoaXMuX21hcFtpXSl9cmV0dXJuIGEgaW5zdGFuY2VvZiBSZWYmJnRoaXMueHJlZj90aGlzLnhyZWYuZmV0Y2goYSx0aGlzLnN1cHByZXNzRW5jcnlwdGlvbik6YX1hc3luYyBnZXRBc3luYyhlLHQsaSl7bGV0IGE9dGhpcy5fbWFwW2VdO2lmKHZvaWQgMD09PWEmJnZvaWQgMCE9PXQpe2E9dGhpcy5fbWFwW3RdO3ZvaWQgMD09PWEmJnZvaWQgMCE9PWkmJihhPXRoaXMuX21hcFtpXSl9cmV0dXJuIGEgaW5zdGFuY2VvZiBSZWYmJnRoaXMueHJlZj90aGlzLnhyZWYuZmV0Y2hBc3luYyhhLHRoaXMuc3VwcHJlc3NFbmNyeXB0aW9uKTphfWdldEFycmF5KGUsdCxpKXtsZXQgYT10aGlzLl9tYXBbZV07aWYodm9pZCAwPT09YSYmdm9pZCAwIT09dCl7YT10aGlzLl9tYXBbdF07dm9pZCAwPT09YSYmdm9pZCAwIT09aSYmKGE9dGhpcy5fbWFwW2ldKX1hIGluc3RhbmNlb2YgUmVmJiZ0aGlzLnhyZWYmJihhPXRoaXMueHJlZi5mZXRjaChhLHRoaXMuc3VwcHJlc3NFbmNyeXB0aW9uKSk7aWYoQXJyYXkuaXNBcnJheShhKSl7YT1hLnNsaWNlKCk7Zm9yKGxldCBlPTAsdD1hLmxlbmd0aDtlPHQ7ZSsrKWFbZV1pbnN0YW5jZW9mIFJlZiYmdGhpcy54cmVmJiYoYVtlXT10aGlzLnhyZWYuZmV0Y2goYVtlXSx0aGlzLnN1cHByZXNzRW5jcnlwdGlvbikpfXJldHVybiBhfWdldFJhdyhlKXtyZXR1cm4gdGhpcy5fbWFwW2VdfWdldEtleXMoKXtyZXR1cm4gT2JqZWN0LmtleXModGhpcy5fbWFwKX1nZXRSYXdWYWx1ZXMoKXtyZXR1cm4gT2JqZWN0LnZhbHVlcyh0aGlzLl9tYXApfXNldChlLHQpe3RoaXMuX21hcFtlXT10fWhhcyhlKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fbWFwW2VdfWZvckVhY2goZSl7Zm9yKGNvbnN0IHQgaW4gdGhpcy5fbWFwKWUodCx0aGlzLmdldCh0KSl9c3RhdGljIGdldCBlbXB0eSgpe2NvbnN0IGU9bmV3IERpY3QobnVsbCk7ZS5zZXQ9KGUsdCk9Pnt1bnJlYWNoYWJsZSgiU2hvdWxkIG5vdCBjYWxsIGBzZXRgIG9uIHRoZSBlbXB0eSBkaWN0aW9uYXJ5LiIpfTtyZXR1cm4gc2hhZG93KHRoaXMsImVtcHR5IixlKX1zdGF0aWMgbWVyZ2Uoe3hyZWY6ZSxkaWN0QXJyYXk6dCxtZXJnZVN1YkRpY3RzOmk9ITF9KXtjb25zdCBhPW5ldyBEaWN0KGUpLHM9bmV3IE1hcDtmb3IoY29uc3QgZSBvZiB0KWlmKGUgaW5zdGFuY2VvZiBEaWN0KWZvcihjb25zdFt0LGFdb2YgT2JqZWN0LmVudHJpZXMoZS5fbWFwKSl7bGV0IGU9cy5nZXQodCk7aWYodm9pZCAwPT09ZSl7ZT1bXTtzLnNldCh0LGUpfWVsc2UgaWYoIShpJiZhIGluc3RhbmNlb2YgRGljdCkpY29udGludWU7ZS5wdXNoKGEpfWZvcihjb25zdFt0LGldb2Ygcyl7aWYoMT09PWkubGVuZ3RofHwhKGlbMF1pbnN0YW5jZW9mIERpY3QpKXthLl9tYXBbdF09aVswXTtjb250aW51ZX1jb25zdCBzPW5ldyBEaWN0KGUpO2Zvcihjb25zdCBlIG9mIGkpZm9yKGNvbnN0W3QsaV1vZiBPYmplY3QuZW50cmllcyhlLl9tYXApKXZvaWQgMD09PXMuX21hcFt0XSYmKHMuX21hcFt0XT1pKTtzLnNpemU+MCYmKGEuX21hcFt0XT1zKX1zLmNsZWFyKCk7cmV0dXJuIGEuc2l6ZT4wP2E6RGljdC5lbXB0eX1jbG9uZSgpe2NvbnN0IGU9bmV3IERpY3QodGhpcy54cmVmKTtmb3IoY29uc3QgdCBvZiB0aGlzLmdldEtleXMoKSllLnNldCh0LHRoaXMuZ2V0UmF3KHQpKTtyZXR1cm4gZX19Y2xhc3MgUmVme2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5udW09ZTt0aGlzLmdlbj10fXRvU3RyaW5nKCl7cmV0dXJuIDA9PT10aGlzLmdlbj9gJHt0aGlzLm51bX1SYDpgJHt0aGlzLm51bX1SJHt0aGlzLmdlbn1gfXN0YXRpYyBmcm9tU3RyaW5nKGUpe2NvbnN0IHQ9d3RbZV07aWYodClyZXR1cm4gdDtjb25zdCBpPS9eKFxkKylSKFxkKikkLy5leGVjKGUpO3JldHVybiBpJiYiMCIhPT1pWzFdP3d0W2VdPW5ldyBSZWYocGFyc2VJbnQoaVsxXSksaVsyXT9wYXJzZUludChpWzJdKTowKTpudWxsfXN0YXRpYyBnZXQoZSx0KXtjb25zdCBpPTA9PT10P2Ake2V9UmA6YCR7ZX1SJHt0fWA7cmV0dXJuIHd0W2ldfHw9bmV3IFJlZihlLHQpfX1jbGFzcyBSZWZTZXR7Y29uc3RydWN0b3IoZT1udWxsKXt0aGlzLl9zZXQ9bmV3IFNldChlPy5fc2V0KX1oYXMoZSl7cmV0dXJuIHRoaXMuX3NldC5oYXMoZS50b1N0cmluZygpKX1wdXQoZSl7dGhpcy5fc2V0LmFkZChlLnRvU3RyaW5nKCkpfXJlbW92ZShlKXt0aGlzLl9zZXQuZGVsZXRlKGUudG9TdHJpbmcoKSl9W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpcy5fc2V0LnZhbHVlcygpfWNsZWFyKCl7dGhpcy5fc2V0LmNsZWFyKCl9fWNsYXNzIFJlZlNldENhY2hle2NvbnN0cnVjdG9yKCl7dGhpcy5fbWFwPW5ldyBNYXB9Z2V0IHNpemUoKXtyZXR1cm4gdGhpcy5fbWFwLnNpemV9Z2V0KGUpe3JldHVybiB0aGlzLl9tYXAuZ2V0KGUudG9TdHJpbmcoKSl9aGFzKGUpe3JldHVybiB0aGlzLl9tYXAuaGFzKGUudG9TdHJpbmcoKSl9cHV0KGUsdCl7dGhpcy5fbWFwLnNldChlLnRvU3RyaW5nKCksdCl9cHV0QWxpYXMoZSx0KXt0aGlzLl9tYXAuc2V0KGUudG9TdHJpbmcoKSx0aGlzLmdldCh0KSl9W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpcy5fbWFwLnZhbHVlcygpfWNsZWFyKCl7dGhpcy5fbWFwLmNsZWFyKCl9Kml0ZW1zKCl7Zm9yKGNvbnN0W2UsdF1vZiB0aGlzLl9tYXApeWllbGRbUmVmLmZyb21TdHJpbmcoZSksdF19fWZ1bmN0aW9uIGlzTmFtZShlLHQpe3JldHVybiBlIGluc3RhbmNlb2YgTmFtZSYmKHZvaWQgMD09PXR8fGUubmFtZT09PXQpfWZ1bmN0aW9uIGlzQ21kKGUsdCl7cmV0dXJuIGUgaW5zdGFuY2VvZiBDbWQmJih2b2lkIDA9PT10fHxlLmNtZD09PXQpfWZ1bmN0aW9uIGlzRGljdChlLHQpe3JldHVybiBlIGluc3RhbmNlb2YgRGljdCYmKHZvaWQgMD09PXR8fGlzTmFtZShlLmdldCgiVHlwZSIpLHQpKX1mdW5jdGlvbiBpc1JlZnNFcXVhbChlLHQpe3JldHVybiBlLm51bT09PXQubnVtJiZlLmdlbj09PXQuZ2VufWNsYXNzIEJhc2VTdHJlYW17Y29uc3RydWN0b3IoKXt0aGlzLmNvbnN0cnVjdG9yPT09QmFzZVN0cmVhbSYmdW5yZWFjaGFibGUoIkNhbm5vdCBpbml0aWFsaXplIEJhc2VTdHJlYW0uIil9Z2V0IGxlbmd0aCgpe3VucmVhY2hhYmxlKCJBYnN0cmFjdCBnZXR0ZXIgYGxlbmd0aGAgYWNjZXNzZWQiKX1nZXQgaXNFbXB0eSgpe3VucmVhY2hhYmxlKCJBYnN0cmFjdCBnZXR0ZXIgYGlzRW1wdHlgIGFjY2Vzc2VkIil9Z2V0IGlzRGF0YUxvYWRlZCgpe3JldHVybiBzaGFkb3codGhpcywiaXNEYXRhTG9hZGVkIiwhMCl9Z2V0Qnl0ZSgpe3VucmVhY2hhYmxlKCJBYnN0cmFjdCBtZXRob2QgYGdldEJ5dGVgIGNhbGxlZCIpfWdldEJ5dGVzKGUpe3VucmVhY2hhYmxlKCJBYnN0cmFjdCBtZXRob2QgYGdldEJ5dGVzYCBjYWxsZWQiKX1wZWVrQnl0ZSgpe2NvbnN0IGU9dGhpcy5nZXRCeXRlKCk7LTEhPT1lJiZ0aGlzLnBvcy0tO3JldHVybiBlfXBlZWtCeXRlcyhlKXtjb25zdCB0PXRoaXMuZ2V0Qnl0ZXMoZSk7dGhpcy5wb3MtPXQubGVuZ3RoO3JldHVybiB0fWdldFVpbnQxNigpe2NvbnN0IGU9dGhpcy5nZXRCeXRlKCksdD10aGlzLmdldEJ5dGUoKTtyZXR1cm4tMT09PWV8fC0xPT09dD8tMTooZTw8OCkrdH1nZXRJbnQzMigpe3JldHVybih0aGlzLmdldEJ5dGUoKTw8MjQpKyh0aGlzLmdldEJ5dGUoKTw8MTYpKyh0aGlzLmdldEJ5dGUoKTw8OCkrdGhpcy5nZXRCeXRlKCl9Z2V0Qnl0ZVJhbmdlKGUsdCl7dW5yZWFjaGFibGUoIkFic3RyYWN0IG1ldGhvZCBgZ2V0Qnl0ZVJhbmdlYCBjYWxsZWQiKX1nZXRTdHJpbmcoZSl7cmV0dXJuIGJ5dGVzVG9TdHJpbmcodGhpcy5nZXRCeXRlcyhlKSl9c2tpcChlKXt0aGlzLnBvcys9ZXx8MX1yZXNldCgpe3VucmVhY2hhYmxlKCJBYnN0cmFjdCBtZXRob2QgYHJlc2V0YCBjYWxsZWQiKX1tb3ZlU3RhcnQoKXt1bnJlYWNoYWJsZSgiQWJzdHJhY3QgbWV0aG9kIGBtb3ZlU3RhcnRgIGNhbGxlZCIpfW1ha2VTdWJTdHJlYW0oZSx0LGk9bnVsbCl7dW5yZWFjaGFibGUoIkFic3RyYWN0IG1ldGhvZCBgbWFrZVN1YlN0cmVhbWAgY2FsbGVkIil9Z2V0QmFzZVN0cmVhbXMoKXtyZXR1cm4gbnVsbH19Y29uc3QgRHQ9L15bMS05XVwuXGQkLztmdW5jdGlvbiBnZXRMb29rdXBUYWJsZUZhY3RvcnkoZSl7bGV0IHQ7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoZSl7dD1PYmplY3QuY3JlYXRlKG51bGwpO2UodCk7ZT1udWxsfXJldHVybiB0fX1jbGFzcyBNaXNzaW5nRGF0YUV4Y2VwdGlvbiBleHRlbmRzIHJ0e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoYE1pc3NpbmcgZGF0YSBbJHtlfSwgJHt0fSlgLCJNaXNzaW5nRGF0YUV4Y2VwdGlvbiIpO3RoaXMuYmVnaW49ZTt0aGlzLmVuZD10fX1jbGFzcyBQYXJzZXJFT0ZFeGNlcHRpb24gZXh0ZW5kcyBydHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlLCJQYXJzZXJFT0ZFeGNlcHRpb24iKX19Y2xhc3MgWFJlZkVudHJ5RXhjZXB0aW9uIGV4dGVuZHMgcnR7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwiWFJlZkVudHJ5RXhjZXB0aW9uIil9fWNsYXNzIFhSZWZQYXJzZUV4Y2VwdGlvbiBleHRlbmRzIHJ0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsIlhSZWZQYXJzZUV4Y2VwdGlvbiIpfX1mdW5jdGlvbiBhcnJheUJ1ZmZlcnNUb0J5dGVzKGUpe2NvbnN0IHQ9ZS5sZW5ndGg7aWYoMD09PXQpcmV0dXJuIG5ldyBVaW50OEFycmF5KDApO2lmKDE9PT10KXJldHVybiBuZXcgVWludDhBcnJheShlWzBdKTtsZXQgaT0wO2ZvcihsZXQgYT0wO2E8dDthKyspaSs9ZVthXS5ieXRlTGVuZ3RoO2NvbnN0IGE9bmV3IFVpbnQ4QXJyYXkoaSk7bGV0IHM9MDtmb3IobGV0IGk9MDtpPHQ7aSsrKXtjb25zdCB0PW5ldyBVaW50OEFycmF5KGVbaV0pO2Euc2V0KHQscyk7cys9dC5ieXRlTGVuZ3RofXJldHVybiBhfWZ1bmN0aW9uIGdldEluaGVyaXRhYmxlUHJvcGVydHkoe2RpY3Q6ZSxrZXk6dCxnZXRBcnJheTppPSExLHN0b3BXaGVuRm91bmQ6YT0hMH0pe2xldCBzO2NvbnN0IHI9bmV3IFJlZlNldDtmb3IoO2UgaW5zdGFuY2VvZiBEaWN0JiYoIWUub2JqSWR8fCFyLmhhcyhlLm9iaklkKSk7KXtlLm9iaklkJiZyLnB1dChlLm9iaklkKTtjb25zdCBuPWk/ZS5nZXRBcnJheSh0KTplLmdldCh0KTtpZih2b2lkIDAhPT1uKXtpZihhKXJldHVybiBuOyhzfHw9W10pLnB1c2gobil9ZT1lLmdldCgiUGFyZW50Iil9cmV0dXJuIHN9Y29uc3QgRnQ9WyIiLCJDIiwiQ0MiLCJDQ0MiLCJDRCIsIkQiLCJEQyIsIkRDQyIsIkRDQ0MiLCJDTSIsIiIsIlgiLCJYWCIsIlhYWCIsIlhMIiwiTCIsIkxYIiwiTFhYIiwiTFhYWCIsIlhDIiwiIiwiSSIsIklJIiwiSUlJIiwiSVYiLCJWIiwiVkkiLCJWSUkiLCJWSUlJIiwiSVgiXTtmdW5jdGlvbiB0b1JvbWFuTnVtZXJhbHMoZSx0PSExKXthc3NlcnQoTnVtYmVyLmlzSW50ZWdlcihlKSYmZT4wLCJUaGUgbnVtYmVyIHNob3VsZCBiZSBhIHBvc2l0aXZlIGludGVnZXIuIik7Y29uc3QgaT1bXTtsZXQgYTtmb3IoO2U+PTFlMzspe2UtPTFlMztpLnB1c2goIk0iKX1hPWUvMTAwfDA7ZSU9MTAwO2kucHVzaChGdFthXSk7YT1lLzEwfDA7ZSU9MTA7aS5wdXNoKEZ0WzEwK2FdKTtpLnB1c2goRnRbMjArZV0pO2NvbnN0IHM9aS5qb2luKCIiKTtyZXR1cm4gdD9zLnRvTG93ZXJDYXNlKCk6c31mdW5jdGlvbiBsb2cyKGUpe3JldHVybiBlPD0wPzA6TWF0aC5jZWlsKE1hdGgubG9nMihlKSl9ZnVuY3Rpb24gcmVhZEludDgoZSx0KXtyZXR1cm4gZVt0XTw8MjQ+PjI0fWZ1bmN0aW9uIHJlYWRVaW50MTYoZSx0KXtyZXR1cm4gZVt0XTw8OHxlW3QrMV19ZnVuY3Rpb24gcmVhZFVpbnQzMihlLHQpe3JldHVybihlW3RdPDwyNHxlW3QrMV08PDE2fGVbdCsyXTw8OHxlW3QrM10pPj4+MH1mdW5jdGlvbiBpc1doaXRlU3BhY2UoZSl7cmV0dXJuIDMyPT09ZXx8OT09PWV8fDEzPT09ZXx8MTA9PT1lfWZ1bmN0aW9uIGlzTnVtYmVyQXJyYXkoZSx0KXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKSYmKG51bGw9PT10fHxlLmxlbmd0aD09PXQpJiZlLmV2ZXJ5KChlPT4ibnVtYmVyIj09dHlwZW9mIGUpKX1mdW5jdGlvbiBsb29rdXBNYXRyaXgoZSx0KXtyZXR1cm4gaXNOdW1iZXJBcnJheShlLDYpP2U6dH1mdW5jdGlvbiBsb29rdXBSZWN0KGUsdCl7cmV0dXJuIGlzTnVtYmVyQXJyYXkoZSw0KT9lOnR9ZnVuY3Rpb24gbG9va3VwTm9ybWFsUmVjdChlLHQpe3JldHVybiBpc051bWJlckFycmF5KGUsNCk/VXRpbC5ub3JtYWxpemVSZWN0KGUpOnR9ZnVuY3Rpb24gcGFyc2VYRkFQYXRoKGUpe2NvbnN0IHQ9LyguKylcWyhcZCspXF0kLztyZXR1cm4gZS5zcGxpdCgiLiIpLm1hcCgoZT0+e2NvbnN0IGk9ZS5tYXRjaCh0KTtyZXR1cm4gaT97bmFtZTppWzFdLHBvczpwYXJzZUludChpWzJdLDEwKX06e25hbWU6ZSxwb3M6MH19KSl9ZnVuY3Rpb24gZXNjYXBlUERGTmFtZShlKXtjb25zdCB0PVtdO2xldCBpPTA7Zm9yKGxldCBhPTAscz1lLmxlbmd0aDthPHM7YSsrKXtjb25zdCBzPWUuY2hhckNvZGVBdChhKTtpZihzPDMzfHxzPjEyNnx8MzU9PT1zfHw0MD09PXN8fDQxPT09c3x8NjA9PT1zfHw2Mj09PXN8fDkxPT09c3x8OTM9PT1zfHwxMjM9PT1zfHwxMjU9PT1zfHw0Nz09PXN8fDM3PT09cyl7aTxhJiZ0LnB1c2goZS5zdWJzdHJpbmcoaSxhKSk7dC5wdXNoKGAjJHtzLnRvU3RyaW5nKDE2KX1gKTtpPWErMX19aWYoMD09PXQubGVuZ3RoKXJldHVybiBlO2k8ZS5sZW5ndGgmJnQucHVzaChlLnN1YnN0cmluZyhpLGUubGVuZ3RoKSk7cmV0dXJuIHQuam9pbigiIil9ZnVuY3Rpb24gZXNjYXBlU3RyaW5nKGUpe3JldHVybiBlLnJlcGxhY2VBbGwoLyhbKClcXFxuXHJdKS9nLChlPT4iXG4iPT09ZT8iXFxuIjoiXHIiPT09ZT8iXFxyIjpgXFwke2V9YCkpfWZ1bmN0aW9uIF9jb2xsZWN0SlMoZSx0LGksYSl7aWYoIWUpcmV0dXJuO2xldCBzPW51bGw7aWYoZSBpbnN0YW5jZW9mIFJlZil7aWYoYS5oYXMoZSkpcmV0dXJuO3M9ZTthLnB1dChzKTtlPXQuZmV0Y2goZSl9aWYoQXJyYXkuaXNBcnJheShlKSlmb3IoY29uc3QgcyBvZiBlKV9jb2xsZWN0SlMocyx0LGksYSk7ZWxzZSBpZihlIGluc3RhbmNlb2YgRGljdCl7aWYoaXNOYW1lKGUuZ2V0KCJTIiksIkphdmFTY3JpcHQiKSl7Y29uc3QgdD1lLmdldCgiSlMiKTtsZXQgYTt0IGluc3RhbmNlb2YgQmFzZVN0cmVhbT9hPXQuZ2V0U3RyaW5nKCk6InN0cmluZyI9PXR5cGVvZiB0JiYoYT10KTthJiY9c3RyaW5nVG9QREZTdHJpbmcoYSkucmVwbGFjZUFsbCgiXDAiLCIiKTthJiZpLnB1c2goYSl9X2NvbGxlY3RKUyhlLmdldFJhdygiTmV4dCIpLHQsaSxhKX1zJiZhLnJlbW92ZShzKX1mdW5jdGlvbiBjb2xsZWN0QWN0aW9ucyhlLHQsaSl7Y29uc3QgYT1PYmplY3QuY3JlYXRlKG51bGwpLHM9Z2V0SW5oZXJpdGFibGVQcm9wZXJ0eSh7ZGljdDp0LGtleToiQUEiLHN0b3BXaGVuRm91bmQ6ITF9KTtpZihzKWZvcihsZXQgdD1zLmxlbmd0aC0xO3Q+PTA7dC0tKXtjb25zdCByPXNbdF07aWYociBpbnN0YW5jZW9mIERpY3QpZm9yKGNvbnN0IHQgb2Ygci5nZXRLZXlzKCkpe2NvbnN0IHM9aVt0XTtpZighcyljb250aW51ZTtjb25zdCBuPVtdO19jb2xsZWN0SlMoci5nZXRSYXcodCksZSxuLG5ldyBSZWZTZXQpO24ubGVuZ3RoPjAmJihhW3NdPW4pfX1pZih0LmhhcygiQSIpKXtjb25zdCBpPVtdO19jb2xsZWN0SlModC5nZXQoIkEiKSxlLGksbmV3IFJlZlNldCk7aS5sZW5ndGg+MCYmKGEuQWN0aW9uPWkpfXJldHVybiBvYmplY3RTaXplKGEpPjA/YTpudWxsfWNvbnN0IFN0PXs2MDoiJmx0OyIsNjI6IiZndDsiLDM4OiImYW1wOyIsMzQ6IiZxdW90OyIsMzk6IiZhcG9zOyJ9O2Z1bmN0aW9uKmNvZGVQb2ludEl0ZXIoZSl7Zm9yKGxldCB0PTAsaT1lLmxlbmd0aDt0PGk7dCsrKXtjb25zdCBpPWUuY29kZVBvaW50QXQodCk7aT41NTI5NSYmKGk8NTczNDR8fGk+NjU1MzMpJiZ0Kys7eWllbGQgaX19ZnVuY3Rpb24gZW5jb2RlVG9YbWxTdHJpbmcoZSl7Y29uc3QgdD1bXTtsZXQgaT0wO2ZvcihsZXQgYT0wLHM9ZS5sZW5ndGg7YTxzO2ErKyl7Y29uc3Qgcz1lLmNvZGVQb2ludEF0KGEpO2lmKDMyPD1zJiZzPD0xMjYpe2NvbnN0IHI9U3Rbc107aWYocil7aTxhJiZ0LnB1c2goZS5zdWJzdHJpbmcoaSxhKSk7dC5wdXNoKHIpO2k9YSsxfX1lbHNle2k8YSYmdC5wdXNoKGUuc3Vic3RyaW5nKGksYSkpO3QucHVzaChgJiN4JHtzLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfTtgKTtzPjU1Mjk1JiYoczw1NzM0NHx8cz42NTUzMykmJmErKztpPWErMX19aWYoMD09PXQubGVuZ3RoKXJldHVybiBlO2k8ZS5sZW5ndGgmJnQucHVzaChlLnN1YnN0cmluZyhpLGUubGVuZ3RoKSk7cmV0dXJuIHQuam9pbigiIil9ZnVuY3Rpb24gdmFsaWRhdGVGb250TmFtZShlLHQ9ITEpe2NvbnN0IGk9L14oInwnKS4qKCJ8JykkLy5leGVjKGUpO2lmKGkmJmlbMV09PT1pWzJdKXtpZihuZXcgUmVnRXhwKGBbXlxcXFxdJHtpWzFdfWApLnRlc3QoZS5zbGljZSgxLC0xKSkpe3QmJndhcm4oYEZvbnRGYW1pbHkgY29udGFpbnMgdW5lc2NhcGVkICR7aVsxXX06ICR7ZX0uYCk7cmV0dXJuITF9fWVsc2UgZm9yKGNvbnN0IGkgb2YgZS5zcGxpdCgvWyBcdF0rLykpaWYoL14oXGR8KC0oXGR8LSkpKS8udGVzdChpKXx8IS9eW1x3LVxcXSskLy50ZXN0KGkpKXt0JiZ3YXJuKGBGb250RmFtaWx5IGNvbnRhaW5zIGludmFsaWQgPGN1c3RvbS1pZGVudD46ICR7ZX0uYCk7cmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gdmFsaWRhdGVDU1NGb250KGUpe2NvbnN0IHQ9bmV3IFNldChbIjEwMCIsIjIwMCIsIjMwMCIsIjQwMCIsIjUwMCIsIjYwMCIsIjcwMCIsIjgwMCIsIjkwMCIsIjEwMDAiLCJub3JtYWwiLCJib2xkIiwiYm9sZGVyIiwibGlnaHRlciJdKSx7Zm9udEZhbWlseTppLGZvbnRXZWlnaHQ6YSxpdGFsaWNBbmdsZTpzfT1lO2lmKCF2YWxpZGF0ZUZvbnROYW1lKGksITApKXJldHVybiExO2NvbnN0IHI9YT9hLnRvU3RyaW5nKCk6IiI7ZS5mb250V2VpZ2h0PXQuaGFzKHIpP3I6IjQwMCI7Y29uc3Qgbj1wYXJzZUZsb2F0KHMpO2UuaXRhbGljQW5nbGU9aXNOYU4obil8fG48LTkwfHxuPjkwPyIxNCI6cy50b1N0cmluZygpO3JldHVybiEwfWZ1bmN0aW9uIHJlY292ZXJKc1VSTChlKXtjb25zdCB0PW5ldyBSZWdFeHAoIl5cXHMqKCIrWyJhcHAubGF1bmNoVVJMIiwid2luZG93Lm9wZW4iLCJ4ZmEuaG9zdC5nb3RvVVJMIl0uam9pbigifCIpLnJlcGxhY2VBbGwoIi4iLCJcXC4iKSsiKVxcKCg/Oid8XCIpKFteJ1wiXSopKD86J3xcIikoPzosXFxzKihcXHcrKVxcKXxcXCkpIiwiaSIpLmV4ZWMoZSk7aWYodD8uWzJdKXtjb25zdCBlPXRbMl07bGV0IGk9ITE7InRydWUiPT09dFszXSYmImFwcC5sYXVuY2hVUkwiPT09dFsxXSYmKGk9ITApO3JldHVybnt1cmw6ZSxuZXdXaW5kb3c6aX19cmV0dXJuIG51bGx9ZnVuY3Rpb24gbnVtYmVyVG9TdHJpbmcoZSl7aWYoTnVtYmVyLmlzSW50ZWdlcihlKSlyZXR1cm4gZS50b1N0cmluZygpO2NvbnN0IHQ9TWF0aC5yb3VuZCgxMDAqZSk7cmV0dXJuIHQlMTAwPT0wPyh0LzEwMCkudG9TdHJpbmcoKTp0JTEwPT0wP2UudG9GaXhlZCgxKTplLnRvRml4ZWQoMil9ZnVuY3Rpb24gZ2V0TmV3QW5ub3RhdGlvbnNNYXAoZSl7aWYoIWUpcmV0dXJuIG51bGw7Y29uc3QgdD1uZXcgTWFwO2Zvcihjb25zdFtpLGFdb2YgZSl7aWYoIWkuc3RhcnRzV2l0aChFKSljb250aW51ZTtsZXQgZT10LmdldChhLnBhZ2VJbmRleCk7aWYoIWUpe2U9W107dC5zZXQoYS5wYWdlSW5kZXgsZSl9ZS5wdXNoKGEpfXJldHVybiB0LnNpemU+MD90Om51bGx9ZnVuY3Rpb24gaXNBc2NpaShlKXtyZXR1cm4vXltceDAwLVx4N0ZdKiQvLnRlc3QoZSl9ZnVuY3Rpb24gc3RyaW5nVG9VVEYxNkhleFN0cmluZyhlKXtjb25zdCB0PVtdO2ZvcihsZXQgaT0wLGE9ZS5sZW5ndGg7aTxhO2krKyl7Y29uc3QgYT1lLmNoYXJDb2RlQXQoaSk7dC5wdXNoKChhPj44JjI1NSkudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIjAiKSwoMjU1JmEpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCIwIikpfXJldHVybiB0LmpvaW4oIiIpfWZ1bmN0aW9uIHN0cmluZ1RvVVRGMTZTdHJpbmcoZSx0PSExKXtjb25zdCBpPVtdO3QmJmkucHVzaCgiw77DvyIpO2ZvcihsZXQgdD0wLGE9ZS5sZW5ndGg7dDxhO3QrKyl7Y29uc3QgYT1lLmNoYXJDb2RlQXQodCk7aS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoYT4+OCYyNTUpLFN0cmluZy5mcm9tQ2hhckNvZGUoMjU1JmEpKX1yZXR1cm4gaS5qb2luKCIiKX1mdW5jdGlvbiBnZXRSb3RhdGlvbk1hdHJpeChlLHQsaSl7c3dpdGNoKGUpe2Nhc2UgOTA6cmV0dXJuWzAsMSwtMSwwLHQsMF07Y2FzZSAxODA6cmV0dXJuWy0xLDAsMCwtMSx0LGldO2Nhc2UgMjcwOnJldHVyblswLC0xLDEsMCwwLGldO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJJbnZhbGlkIHJvdGF0aW9uIil9fWZ1bmN0aW9uIGdldFNpemVJbkJ5dGVzKGUpe3JldHVybiBNYXRoLmNlaWwoTWF0aC5jZWlsKE1hdGgubG9nMigxK2UpKS84KX1jbGFzcyBTdHJlYW0gZXh0ZW5kcyBCYXNlU3RyZWFte2NvbnN0cnVjdG9yKGUsdCxpLGEpe3N1cGVyKCk7dGhpcy5ieXRlcz1lIGluc3RhbmNlb2YgVWludDhBcnJheT9lOm5ldyBVaW50OEFycmF5KGUpO3RoaXMuc3RhcnQ9dHx8MDt0aGlzLnBvcz10aGlzLnN0YXJ0O3RoaXMuZW5kPXQraXx8dGhpcy5ieXRlcy5sZW5ndGg7dGhpcy5kaWN0PWF9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLmVuZC10aGlzLnN0YXJ0fWdldCBpc0VtcHR5KCl7cmV0dXJuIDA9PT10aGlzLmxlbmd0aH1nZXRCeXRlKCl7cmV0dXJuIHRoaXMucG9zPj10aGlzLmVuZD8tMTp0aGlzLmJ5dGVzW3RoaXMucG9zKytdfWdldEJ5dGVzKGUpe2NvbnN0IHQ9dGhpcy5ieXRlcyxpPXRoaXMucG9zLGE9dGhpcy5lbmQ7aWYoIWUpcmV0dXJuIHQuc3ViYXJyYXkoaSxhKTtsZXQgcz1pK2U7cz5hJiYocz1hKTt0aGlzLnBvcz1zO3JldHVybiB0LnN1YmFycmF5KGkscyl9Z2V0Qnl0ZVJhbmdlKGUsdCl7ZTwwJiYoZT0wKTt0PnRoaXMuZW5kJiYodD10aGlzLmVuZCk7cmV0dXJuIHRoaXMuYnl0ZXMuc3ViYXJyYXkoZSx0KX1yZXNldCgpe3RoaXMucG9zPXRoaXMuc3RhcnR9bW92ZVN0YXJ0KCl7dGhpcy5zdGFydD10aGlzLnBvc31tYWtlU3ViU3RyZWFtKGUsdCxpPW51bGwpe3JldHVybiBuZXcgU3RyZWFtKHRoaXMuYnl0ZXMuYnVmZmVyLGUsdCxpKX19Y2xhc3MgU3RyaW5nU3RyZWFtIGV4dGVuZHMgU3RyZWFte2NvbnN0cnVjdG9yKGUpe3N1cGVyKHN0cmluZ1RvQnl0ZXMoZSkpfX1jbGFzcyBOdWxsU3RyZWFtIGV4dGVuZHMgU3RyZWFte2NvbnN0cnVjdG9yKCl7c3VwZXIobmV3IFVpbnQ4QXJyYXkoMCkpfX1jbGFzcyBDaHVua2VkU3RyZWFtIGV4dGVuZHMgU3RyZWFte2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcihuZXcgVWludDhBcnJheShlKSwwLGUsbnVsbCk7dGhpcy5jaHVua1NpemU9dDt0aGlzLl9sb2FkZWRDaHVua3M9bmV3IFNldDt0aGlzLm51bUNodW5rcz1NYXRoLmNlaWwoZS90KTt0aGlzLm1hbmFnZXI9aTt0aGlzLnByb2dyZXNzaXZlRGF0YUxlbmd0aD0wO3RoaXMubGFzdFN1Y2Nlc3NmdWxFbnN1cmVCeXRlQ2h1bms9LTF9Z2V0TWlzc2luZ0NodW5rcygpe2NvbnN0IGU9W107Zm9yKGxldCB0PTAsaT10aGlzLm51bUNodW5rczt0PGk7Kyt0KXRoaXMuX2xvYWRlZENodW5rcy5oYXModCl8fGUucHVzaCh0KTtyZXR1cm4gZX1nZXQgbnVtQ2h1bmtzTG9hZGVkKCl7cmV0dXJuIHRoaXMuX2xvYWRlZENodW5rcy5zaXplfWdldCBpc0RhdGFMb2FkZWQoKXtyZXR1cm4gdGhpcy5udW1DaHVua3NMb2FkZWQ9PT10aGlzLm51bUNodW5rc31vblJlY2VpdmVEYXRhKGUsdCl7Y29uc3QgaT10aGlzLmNodW5rU2l6ZTtpZihlJWkhPTApdGhyb3cgbmV3IEVycm9yKGBCYWQgYmVnaW4gb2Zmc2V0OiAke2V9YCk7Y29uc3QgYT1lK3QuYnl0ZUxlbmd0aDtpZihhJWkhPTAmJmEhPT10aGlzLmJ5dGVzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoYEJhZCBlbmQgb2Zmc2V0OiAke2F9YCk7dGhpcy5ieXRlcy5zZXQobmV3IFVpbnQ4QXJyYXkodCksZSk7Y29uc3Qgcz1NYXRoLmZsb29yKGUvaSkscj1NYXRoLmZsb29yKChhLTEpL2kpKzE7Zm9yKGxldCBlPXM7ZTxyOysrZSl0aGlzLl9sb2FkZWRDaHVua3MuYWRkKGUpfW9uUmVjZWl2ZVByb2dyZXNzaXZlRGF0YShlKXtsZXQgdD10aGlzLnByb2dyZXNzaXZlRGF0YUxlbmd0aDtjb25zdCBpPU1hdGguZmxvb3IodC90aGlzLmNodW5rU2l6ZSk7dGhpcy5ieXRlcy5zZXQobmV3IFVpbnQ4QXJyYXkoZSksdCk7dCs9ZS5ieXRlTGVuZ3RoO3RoaXMucHJvZ3Jlc3NpdmVEYXRhTGVuZ3RoPXQ7Y29uc3QgYT10Pj10aGlzLmVuZD90aGlzLm51bUNodW5rczpNYXRoLmZsb29yKHQvdGhpcy5jaHVua1NpemUpO2ZvcihsZXQgZT1pO2U8YTsrK2UpdGhpcy5fbG9hZGVkQ2h1bmtzLmFkZChlKX1lbnN1cmVCeXRlKGUpe2lmKGU8dGhpcy5wcm9ncmVzc2l2ZURhdGFMZW5ndGgpcmV0dXJuO2NvbnN0IHQ9TWF0aC5mbG9vcihlL3RoaXMuY2h1bmtTaXplKTtpZighKHQ+dGhpcy5udW1DaHVua3MpJiZ0IT09dGhpcy5sYXN0U3VjY2Vzc2Z1bEVuc3VyZUJ5dGVDaHVuayl7aWYoIXRoaXMuX2xvYWRlZENodW5rcy5oYXModCkpdGhyb3cgbmV3IE1pc3NpbmdEYXRhRXhjZXB0aW9uKGUsZSsxKTt0aGlzLmxhc3RTdWNjZXNzZnVsRW5zdXJlQnl0ZUNodW5rPXR9fWVuc3VyZVJhbmdlKGUsdCl7aWYoZT49dClyZXR1cm47aWYodDw9dGhpcy5wcm9ncmVzc2l2ZURhdGFMZW5ndGgpcmV0dXJuO2NvbnN0IGk9TWF0aC5mbG9vcihlL3RoaXMuY2h1bmtTaXplKTtpZihpPnRoaXMubnVtQ2h1bmtzKXJldHVybjtjb25zdCBhPU1hdGgubWluKE1hdGguZmxvb3IoKHQtMSkvdGhpcy5jaHVua1NpemUpKzEsdGhpcy5udW1DaHVua3MpO2ZvcihsZXQgcz1pO3M8YTsrK3MpaWYoIXRoaXMuX2xvYWRlZENodW5rcy5oYXMocykpdGhyb3cgbmV3IE1pc3NpbmdEYXRhRXhjZXB0aW9uKGUsdCl9bmV4dEVtcHR5Q2h1bmsoZSl7Y29uc3QgdD10aGlzLm51bUNodW5rcztmb3IobGV0IGk9MDtpPHQ7KytpKXtjb25zdCBhPShlK2kpJXQ7aWYoIXRoaXMuX2xvYWRlZENodW5rcy5oYXMoYSkpcmV0dXJuIGF9cmV0dXJuIG51bGx9aGFzQ2h1bmsoZSl7cmV0dXJuIHRoaXMuX2xvYWRlZENodW5rcy5oYXMoZSl9Z2V0Qnl0ZSgpe2NvbnN0IGU9dGhpcy5wb3M7aWYoZT49dGhpcy5lbmQpcmV0dXJuLTE7ZT49dGhpcy5wcm9ncmVzc2l2ZURhdGFMZW5ndGgmJnRoaXMuZW5zdXJlQnl0ZShlKTtyZXR1cm4gdGhpcy5ieXRlc1t0aGlzLnBvcysrXX1nZXRCeXRlcyhlKXtjb25zdCB0PXRoaXMuYnl0ZXMsaT10aGlzLnBvcyxhPXRoaXMuZW5kO2lmKCFlKXthPnRoaXMucHJvZ3Jlc3NpdmVEYXRhTGVuZ3RoJiZ0aGlzLmVuc3VyZVJhbmdlKGksYSk7cmV0dXJuIHQuc3ViYXJyYXkoaSxhKX1sZXQgcz1pK2U7cz5hJiYocz1hKTtzPnRoaXMucHJvZ3Jlc3NpdmVEYXRhTGVuZ3RoJiZ0aGlzLmVuc3VyZVJhbmdlKGkscyk7dGhpcy5wb3M9cztyZXR1cm4gdC5zdWJhcnJheShpLHMpfWdldEJ5dGVSYW5nZShlLHQpe2U8MCYmKGU9MCk7dD50aGlzLmVuZCYmKHQ9dGhpcy5lbmQpO3Q+dGhpcy5wcm9ncmVzc2l2ZURhdGFMZW5ndGgmJnRoaXMuZW5zdXJlUmFuZ2UoZSx0KTtyZXR1cm4gdGhpcy5ieXRlcy5zdWJhcnJheShlLHQpfW1ha2VTdWJTdHJlYW0oZSx0LGk9bnVsbCl7dD9lK3Q+dGhpcy5wcm9ncmVzc2l2ZURhdGFMZW5ndGgmJnRoaXMuZW5zdXJlUmFuZ2UoZSxlK3QpOmU+PXRoaXMucHJvZ3Jlc3NpdmVEYXRhTGVuZ3RoJiZ0aGlzLmVuc3VyZUJ5dGUoZSk7ZnVuY3Rpb24gQ2h1bmtlZFN0cmVhbVN1YnN0cmVhbSgpe31DaHVua2VkU3RyZWFtU3Vic3RyZWFtLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHRoaXMpO0NodW5rZWRTdHJlYW1TdWJzdHJlYW0ucHJvdG90eXBlLmdldE1pc3NpbmdDaHVua3M9ZnVuY3Rpb24oKXtjb25zdCBlPXRoaXMuY2h1bmtTaXplLHQ9TWF0aC5mbG9vcih0aGlzLnN0YXJ0L2UpLGk9TWF0aC5mbG9vcigodGhpcy5lbmQtMSkvZSkrMSxhPVtdO2ZvcihsZXQgZT10O2U8aTsrK2UpdGhpcy5fbG9hZGVkQ2h1bmtzLmhhcyhlKXx8YS5wdXNoKGUpO3JldHVybiBhfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoQ2h1bmtlZFN0cmVhbVN1YnN0cmVhbS5wcm90b3R5cGUsImlzRGF0YUxvYWRlZCIse2dldCgpe3JldHVybiB0aGlzLm51bUNodW5rc0xvYWRlZD09PXRoaXMubnVtQ2h1bmtzfHwwPT09dGhpcy5nZXRNaXNzaW5nQ2h1bmtzKCkubGVuZ3RofSxjb25maWd1cmFibGU6ITB9KTtjb25zdCBhPW5ldyBDaHVua2VkU3RyZWFtU3Vic3RyZWFtO2EucG9zPWEuc3RhcnQ9ZTthLmVuZD1lK3R8fHRoaXMuZW5kO2EuZGljdD1pO3JldHVybiBhfWdldEJhc2VTdHJlYW1zKCl7cmV0dXJuW3RoaXNdfX1jbGFzcyBDaHVua2VkU3RyZWFtTWFuYWdlcntjb25zdHJ1Y3RvcihlLHQpe3RoaXMubGVuZ3RoPXQubGVuZ3RoO3RoaXMuY2h1bmtTaXplPXQucmFuZ2VDaHVua1NpemU7dGhpcy5zdHJlYW09bmV3IENodW5rZWRTdHJlYW0odGhpcy5sZW5ndGgsdGhpcy5jaHVua1NpemUsdGhpcyk7dGhpcy5wZGZOZXR3b3JrU3RyZWFtPWU7dGhpcy5kaXNhYmxlQXV0b0ZldGNoPXQuZGlzYWJsZUF1dG9GZXRjaDt0aGlzLm1zZ0hhbmRsZXI9dC5tc2dIYW5kbGVyO3RoaXMuY3VyclJlcXVlc3RJZD0wO3RoaXMuX2NodW5rc05lZWRlZEJ5UmVxdWVzdD1uZXcgTWFwO3RoaXMuX3JlcXVlc3RzQnlDaHVuaz1uZXcgTWFwO3RoaXMuX3Byb21pc2VzQnlSZXF1ZXN0PW5ldyBNYXA7dGhpcy5wcm9ncmVzc2l2ZURhdGFMZW5ndGg9MDt0aGlzLmFib3J0ZWQ9ITE7dGhpcy5fbG9hZGVkU3RyZWFtQ2FwYWJpbGl0eT1Qcm9taXNlLndpdGhSZXNvbHZlcnMoKX1zZW5kUmVxdWVzdChlLHQpe2NvbnN0IGk9dGhpcy5wZGZOZXR3b3JrU3RyZWFtLmdldFJhbmdlUmVhZGVyKGUsdCk7aS5pc1N0cmVhbWluZ1N1cHBvcnRlZHx8KGkub25Qcm9ncmVzcz10aGlzLm9uUHJvZ3Jlc3MuYmluZCh0aGlzKSk7bGV0IGE9W10scz0wO3JldHVybiBuZXcgUHJvbWlzZSgoKGUsdCk9Pntjb25zdCByZWFkQ2h1bms9KHt2YWx1ZTpyLGRvbmU6bn0pPT57dHJ5e2lmKG4pe2NvbnN0IHQ9YXJyYXlCdWZmZXJzVG9CeXRlcyhhKTthPW51bGw7ZSh0KTtyZXR1cm59cys9ci5ieXRlTGVuZ3RoO2kuaXNTdHJlYW1pbmdTdXBwb3J0ZWQmJnRoaXMub25Qcm9ncmVzcyh7bG9hZGVkOnN9KTthLnB1c2gocik7aS5yZWFkKCkudGhlbihyZWFkQ2h1bmssdCl9Y2F0Y2goZSl7dChlKX19O2kucmVhZCgpLnRoZW4ocmVhZENodW5rLHQpfSkpLnRoZW4oKHQ9Pnt0aGlzLmFib3J0ZWR8fHRoaXMub25SZWNlaXZlRGF0YSh7Y2h1bms6dCxiZWdpbjplfSl9KSl9cmVxdWVzdEFsbENodW5rcyhlPSExKXtpZighZSl7Y29uc3QgZT10aGlzLnN0cmVhbS5nZXRNaXNzaW5nQ2h1bmtzKCk7dGhpcy5fcmVxdWVzdENodW5rcyhlKX1yZXR1cm4gdGhpcy5fbG9hZGVkU3RyZWFtQ2FwYWJpbGl0eS5wcm9taXNlfV9yZXF1ZXN0Q2h1bmtzKGUpe2NvbnN0IHQ9dGhpcy5jdXJyUmVxdWVzdElkKyssaT1uZXcgU2V0O3RoaXMuX2NodW5rc05lZWRlZEJ5UmVxdWVzdC5zZXQodCxpKTtmb3IoY29uc3QgdCBvZiBlKXRoaXMuc3RyZWFtLmhhc0NodW5rKHQpfHxpLmFkZCh0KTtpZigwPT09aS5zaXplKXJldHVybiBQcm9taXNlLnJlc29sdmUoKTtjb25zdCBhPVByb21pc2Uud2l0aFJlc29sdmVycygpO3RoaXMuX3Byb21pc2VzQnlSZXF1ZXN0LnNldCh0LGEpO2NvbnN0IHM9W107Zm9yKGNvbnN0IGUgb2YgaSl7bGV0IGk9dGhpcy5fcmVxdWVzdHNCeUNodW5rLmdldChlKTtpZighaSl7aT1bXTt0aGlzLl9yZXF1ZXN0c0J5Q2h1bmsuc2V0KGUsaSk7cy5wdXNoKGUpfWkucHVzaCh0KX1pZihzLmxlbmd0aD4wKXtjb25zdCBlPXRoaXMuZ3JvdXBDaHVua3Mocyk7Zm9yKGNvbnN0IHQgb2YgZSl7Y29uc3QgZT10LmJlZ2luQ2h1bmsqdGhpcy5jaHVua1NpemUsaT1NYXRoLm1pbih0LmVuZENodW5rKnRoaXMuY2h1bmtTaXplLHRoaXMubGVuZ3RoKTt0aGlzLnNlbmRSZXF1ZXN0KGUsaSkuY2F0Y2goYS5yZWplY3QpfX1yZXR1cm4gYS5wcm9taXNlLmNhdGNoKChlPT57aWYoIXRoaXMuYWJvcnRlZCl0aHJvdyBlfSkpfWdldFN0cmVhbSgpe3JldHVybiB0aGlzLnN0cmVhbX1yZXF1ZXN0UmFuZ2UoZSx0KXt0PU1hdGgubWluKHQsdGhpcy5sZW5ndGgpO2NvbnN0IGk9dGhpcy5nZXRCZWdpbkNodW5rKGUpLGE9dGhpcy5nZXRFbmRDaHVuayh0KSxzPVtdO2ZvcihsZXQgZT1pO2U8YTsrK2Upcy5wdXNoKGUpO3JldHVybiB0aGlzLl9yZXF1ZXN0Q2h1bmtzKHMpfXJlcXVlc3RSYW5nZXMoZT1bXSl7Y29uc3QgdD1bXTtmb3IoY29uc3QgaSBvZiBlKXtjb25zdCBlPXRoaXMuZ2V0QmVnaW5DaHVuayhpLmJlZ2luKSxhPXRoaXMuZ2V0RW5kQ2h1bmsoaS5lbmQpO2ZvcihsZXQgaT1lO2k8YTsrK2kpdC5pbmNsdWRlcyhpKXx8dC5wdXNoKGkpfXQuc29ydCgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS10fSkpO3JldHVybiB0aGlzLl9yZXF1ZXN0Q2h1bmtzKHQpfWdyb3VwQ2h1bmtzKGUpe2NvbnN0IHQ9W107bGV0IGk9LTEsYT0tMTtmb3IobGV0IHM9MCxyPWUubGVuZ3RoO3M8cjsrK3Mpe2NvbnN0IHI9ZVtzXTtpPDAmJihpPXIpO2lmKGE+PTAmJmErMSE9PXIpe3QucHVzaCh7YmVnaW5DaHVuazppLGVuZENodW5rOmErMX0pO2k9cn1zKzE9PT1lLmxlbmd0aCYmdC5wdXNoKHtiZWdpbkNodW5rOmksZW5kQ2h1bms6cisxfSk7YT1yfXJldHVybiB0fW9uUHJvZ3Jlc3MoZSl7dGhpcy5tc2dIYW5kbGVyLnNlbmQoIkRvY1Byb2dyZXNzIix7bG9hZGVkOnRoaXMuc3RyZWFtLm51bUNodW5rc0xvYWRlZCp0aGlzLmNodW5rU2l6ZStlLmxvYWRlZCx0b3RhbDp0aGlzLmxlbmd0aH0pfW9uUmVjZWl2ZURhdGEoZSl7Y29uc3QgdD1lLmNodW5rLGk9dm9pZCAwPT09ZS5iZWdpbixhPWk/dGhpcy5wcm9ncmVzc2l2ZURhdGFMZW5ndGg6ZS5iZWdpbixzPWErdC5ieXRlTGVuZ3RoLHI9TWF0aC5mbG9vcihhL3RoaXMuY2h1bmtTaXplKSxuPXM8dGhpcy5sZW5ndGg/TWF0aC5mbG9vcihzL3RoaXMuY2h1bmtTaXplKTpNYXRoLmNlaWwocy90aGlzLmNodW5rU2l6ZSk7aWYoaSl7dGhpcy5zdHJlYW0ub25SZWNlaXZlUHJvZ3Jlc3NpdmVEYXRhKHQpO3RoaXMucHJvZ3Jlc3NpdmVEYXRhTGVuZ3RoPXN9ZWxzZSB0aGlzLnN0cmVhbS5vblJlY2VpdmVEYXRhKGEsdCk7dGhpcy5zdHJlYW0uaXNEYXRhTG9hZGVkJiZ0aGlzLl9sb2FkZWRTdHJlYW1DYXBhYmlsaXR5LnJlc29sdmUodGhpcy5zdHJlYW0pO2NvbnN0IG89W107Zm9yKGxldCBlPXI7ZTxuOysrZSl7Y29uc3QgdD10aGlzLl9yZXF1ZXN0c0J5Q2h1bmsuZ2V0KGUpO2lmKHQpe3RoaXMuX3JlcXVlc3RzQnlDaHVuay5kZWxldGUoZSk7Zm9yKGNvbnN0IGkgb2YgdCl7Y29uc3QgdD10aGlzLl9jaHVua3NOZWVkZWRCeVJlcXVlc3QuZ2V0KGkpO3QuaGFzKGUpJiZ0LmRlbGV0ZShlKTt0LnNpemU+MHx8by5wdXNoKGkpfX19aWYoIXRoaXMuZGlzYWJsZUF1dG9GZXRjaCYmMD09PXRoaXMuX3JlcXVlc3RzQnlDaHVuay5zaXplKXtsZXQgZTtpZigxPT09dGhpcy5zdHJlYW0ubnVtQ2h1bmtzTG9hZGVkKXtjb25zdCB0PXRoaXMuc3RyZWFtLm51bUNodW5rcy0xO3RoaXMuc3RyZWFtLmhhc0NodW5rKHQpfHwoZT10KX1lbHNlIGU9dGhpcy5zdHJlYW0ubmV4dEVtcHR5Q2h1bmsobik7TnVtYmVyLmlzSW50ZWdlcihlKSYmdGhpcy5fcmVxdWVzdENodW5rcyhbZV0pfWZvcihjb25zdCBlIG9mIG8pe2NvbnN0IHQ9dGhpcy5fcHJvbWlzZXNCeVJlcXVlc3QuZ2V0KGUpO3RoaXMuX3Byb21pc2VzQnlSZXF1ZXN0LmRlbGV0ZShlKTt0LnJlc29sdmUoKX10aGlzLm1zZ0hhbmRsZXIuc2VuZCgiRG9jUHJvZ3Jlc3MiLHtsb2FkZWQ6dGhpcy5zdHJlYW0ubnVtQ2h1bmtzTG9hZGVkKnRoaXMuY2h1bmtTaXplLHRvdGFsOnRoaXMubGVuZ3RofSl9b25FcnJvcihlKXt0aGlzLl9sb2FkZWRTdHJlYW1DYXBhYmlsaXR5LnJlamVjdChlKX1nZXRCZWdpbkNodW5rKGUpe3JldHVybiBNYXRoLmZsb29yKGUvdGhpcy5jaHVua1NpemUpfWdldEVuZENodW5rKGUpe3JldHVybiBNYXRoLmZsb29yKChlLTEpL3RoaXMuY2h1bmtTaXplKSsxfWFib3J0KGUpe3RoaXMuYWJvcnRlZD0hMDt0aGlzLnBkZk5ldHdvcmtTdHJlYW0/LmNhbmNlbEFsbFJlcXVlc3RzKGUpO2Zvcihjb25zdCB0IG9mIHRoaXMuX3Byb21pc2VzQnlSZXF1ZXN0LnZhbHVlcygpKXQucmVqZWN0KGUpfX1jbGFzcyBDb2xvclNwYWNle2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5jb25zdHJ1Y3Rvcj09PUNvbG9yU3BhY2UmJnVucmVhY2hhYmxlKCJDYW5ub3QgaW5pdGlhbGl6ZSBDb2xvclNwYWNlLiIpO3RoaXMubmFtZT1lO3RoaXMubnVtQ29tcHM9dH1nZXRSZ2IoZSx0KXtjb25zdCBpPW5ldyBVaW50OENsYW1wZWRBcnJheSgzKTt0aGlzLmdldFJnYkl0ZW0oZSx0LGksMCk7cmV0dXJuIGl9Z2V0UmdiSXRlbShlLHQsaSxhKXt1bnJlYWNoYWJsZSgiU2hvdWxkIG5vdCBjYWxsIENvbG9yU3BhY2UuZ2V0UmdiSXRlbSIpfWdldFJnYkJ1ZmZlcihlLHQsaSxhLHMscixuKXt1bnJlYWNoYWJsZSgiU2hvdWxkIG5vdCBjYWxsIENvbG9yU3BhY2UuZ2V0UmdiQnVmZmVyIil9Z2V0T3V0cHV0TGVuZ3RoKGUsdCl7dW5yZWFjaGFibGUoIlNob3VsZCBub3QgY2FsbCBDb2xvclNwYWNlLmdldE91dHB1dExlbmd0aCIpfWlzUGFzc3Rocm91Z2goZSl7cmV0dXJuITF9aXNEZWZhdWx0RGVjb2RlKGUsdCl7cmV0dXJuIENvbG9yU3BhY2UuaXNEZWZhdWx0RGVjb2RlKGUsdGhpcy5udW1Db21wcyl9ZmlsbFJnYihlLHQsaSxhLHMscixuLG8sZyl7Y29uc3QgYz10Kmk7bGV0IGg9bnVsbDtjb25zdCBsPTE8PG4sQz1pIT09c3x8dCE9PWE7aWYodGhpcy5pc1Bhc3N0aHJvdWdoKG4pKWg9bztlbHNlIGlmKDE9PT10aGlzLm51bUNvbXBzJiZjPmwmJiJEZXZpY2VHcmF5IiE9PXRoaXMubmFtZSYmIkRldmljZVJHQiIhPT10aGlzLm5hbWUpe2NvbnN0IHQ9bjw9OD9uZXcgVWludDhBcnJheShsKTpuZXcgVWludDE2QXJyYXkobCk7Zm9yKGxldCBlPTA7ZTxsO2UrKyl0W2VdPWU7Y29uc3QgaT1uZXcgVWludDhDbGFtcGVkQXJyYXkoMypsKTt0aGlzLmdldFJnYkJ1ZmZlcih0LDAsbCxpLDAsbiwwKTtpZihDKXtoPW5ldyBVaW50OEFycmF5KDMqYyk7bGV0IGU9MDtmb3IobGV0IHQ9MDt0PGM7Kyt0KXtjb25zdCBhPTMqb1t0XTtoW2UrK109aVthXTtoW2UrK109aVthKzFdO2hbZSsrXT1pW2ErMl19fWVsc2V7bGV0IHQ9MDtmb3IobGV0IGE9MDthPGM7KythKXtjb25zdCBzPTMqb1thXTtlW3QrK109aVtzXTtlW3QrK109aVtzKzFdO2VbdCsrXT1pW3MrMl07dCs9Z319fWVsc2UgaWYoQyl7aD1uZXcgVWludDhDbGFtcGVkQXJyYXkoMypjKTt0aGlzLmdldFJnYkJ1ZmZlcihvLDAsYyxoLDAsbiwwKX1lbHNlIHRoaXMuZ2V0UmdiQnVmZmVyKG8sMCxhKnIsZSwwLG4sZyk7aWYoaClpZihDKSFmdW5jdGlvbiByZXNpemVSZ2JJbWFnZShlLHQsaSxhLHMscixuKXtuPTEhPT1uPzA6bjtjb25zdCBvPWkvcyxnPWEvcjtsZXQgYyxoPTA7Y29uc3QgbD1uZXcgVWludDE2QXJyYXkocyksQz0zKmk7Zm9yKGxldCBlPTA7ZTxzO2UrKylsW2VdPTMqTWF0aC5mbG9vcihlKm8pO2ZvcihsZXQgaT0wO2k8cjtpKyspe2NvbnN0IGE9TWF0aC5mbG9vcihpKmcpKkM7Zm9yKGxldCBpPTA7aTxzO2krKyl7Yz1hK2xbaV07dFtoKytdPWVbYysrXTt0W2grK109ZVtjKytdO3RbaCsrXT1lW2MrK107aCs9bn19fShoLGUsdCxpLGEscyxnKTtlbHNle2xldCB0PTAsaT0wO2ZvcihsZXQgcz0wLG49YSpyO3M8bjtzKyspe2VbdCsrXT1oW2krK107ZVt0KytdPWhbaSsrXTtlW3QrK109aFtpKytdO3QrPWd9fX1nZXQgdXNlc1plcm9Ub09uZVJhbmdlKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJ1c2VzWmVyb1RvT25lUmFuZ2UiLCEwKX1zdGF0aWMgX2NhY2hlKGUsdCxpLGEpe2lmKCFpKXRocm93IG5ldyBFcnJvcignQ29sb3JTcGFjZS5fY2FjaGUgLSBleHBlY3RlZCAibG9jYWxDb2xvclNwYWNlQ2FjaGUiIGFyZ3VtZW50LicpO2lmKCFhKXRocm93IG5ldyBFcnJvcignQ29sb3JTcGFjZS5fY2FjaGUgLSBleHBlY3RlZCAicGFyc2VkQ29sb3JTcGFjZSIgYXJndW1lbnQuJyk7bGV0IHMscjtpZihlIGluc3RhbmNlb2YgUmVmKXtyPWU7ZT10LmZldGNoKGUpfWUgaW5zdGFuY2VvZiBOYW1lJiYocz1lLm5hbWUpOyhzfHxyKSYmaS5zZXQocyxyLGEpfXN0YXRpYyBnZXRDYWNoZWQoZSx0LGkpe2lmKCFpKXRocm93IG5ldyBFcnJvcignQ29sb3JTcGFjZS5nZXRDYWNoZWQgLSBleHBlY3RlZCAibG9jYWxDb2xvclNwYWNlQ2FjaGUiIGFyZ3VtZW50LicpO2lmKGUgaW5zdGFuY2VvZiBSZWYpe2NvbnN0IGE9aS5nZXRCeVJlZihlKTtpZihhKXJldHVybiBhO3RyeXtlPXQuZmV0Y2goZSl9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGV9fWlmKGUgaW5zdGFuY2VvZiBOYW1lKXtjb25zdCB0PWkuZ2V0QnlOYW1lKGUubmFtZSk7aWYodClyZXR1cm4gdH1yZXR1cm4gbnVsbH1zdGF0aWMgYXN5bmMgcGFyc2VBc3luYyh7Y3M6ZSx4cmVmOnQscmVzb3VyY2VzOmk9bnVsbCxwZGZGdW5jdGlvbkZhY3Rvcnk6YSxsb2NhbENvbG9yU3BhY2VDYWNoZTpzfSl7Y29uc3Qgcj10aGlzLl9wYXJzZShlLHQsaSxhKTt0aGlzLl9jYWNoZShlLHQscyxyKTtyZXR1cm4gcn1zdGF0aWMgcGFyc2Uoe2NzOmUseHJlZjp0LHJlc291cmNlczppPW51bGwscGRmRnVuY3Rpb25GYWN0b3J5OmEsbG9jYWxDb2xvclNwYWNlQ2FjaGU6c30pe2NvbnN0IHI9dGhpcy5nZXRDYWNoZWQoZSx0LHMpO2lmKHIpcmV0dXJuIHI7Y29uc3Qgbj10aGlzLl9wYXJzZShlLHQsaSxhKTt0aGlzLl9jYWNoZShlLHQscyxuKTtyZXR1cm4gbn1zdGF0aWMgX3BhcnNlKGUsdCxpPW51bGwsYSl7aWYoKGU9dC5mZXRjaElmUmVmKGUpKWluc3RhbmNlb2YgTmFtZSlzd2l0Y2goZS5uYW1lKXtjYXNlIkciOmNhc2UiRGV2aWNlR3JheSI6cmV0dXJuIHRoaXMuc2luZ2xldG9ucy5ncmF5O2Nhc2UiUkdCIjpjYXNlIkRldmljZVJHQiI6cmV0dXJuIHRoaXMuc2luZ2xldG9ucy5yZ2I7Y2FzZSJDTVlLIjpjYXNlIkRldmljZUNNWUsiOnJldHVybiB0aGlzLnNpbmdsZXRvbnMuY215aztjYXNlIlBhdHRlcm4iOnJldHVybiBuZXcgUGF0dGVybkNTKG51bGwpO2RlZmF1bHQ6aWYoaSBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IHM9aS5nZXQoIkNvbG9yU3BhY2UiKTtpZihzIGluc3RhbmNlb2YgRGljdCl7Y29uc3Qgcj1zLmdldChlLm5hbWUpO2lmKHIpe2lmKHIgaW5zdGFuY2VvZiBOYW1lKXJldHVybiB0aGlzLl9wYXJzZShyLHQsaSxhKTtlPXI7YnJlYWt9fX10aHJvdyBuZXcgRm9ybWF0RXJyb3IoYFVucmVjb2duaXplZCBDb2xvclNwYWNlOiAke2UubmFtZX1gKX1pZihBcnJheS5pc0FycmF5KGUpKXtjb25zdCBzPXQuZmV0Y2hJZlJlZihlWzBdKS5uYW1lO2xldCByLG4sbyxnLGMsaDtzd2l0Y2gocyl7Y2FzZSJHIjpjYXNlIkRldmljZUdyYXkiOnJldHVybiB0aGlzLnNpbmdsZXRvbnMuZ3JheTtjYXNlIlJHQiI6Y2FzZSJEZXZpY2VSR0IiOnJldHVybiB0aGlzLnNpbmdsZXRvbnMucmdiO2Nhc2UiQ01ZSyI6Y2FzZSJEZXZpY2VDTVlLIjpyZXR1cm4gdGhpcy5zaW5nbGV0b25zLmNteWs7Y2FzZSJDYWxHcmF5IjpyPXQuZmV0Y2hJZlJlZihlWzFdKTtnPXIuZ2V0QXJyYXkoIldoaXRlUG9pbnQiKTtjPXIuZ2V0QXJyYXkoIkJsYWNrUG9pbnQiKTtoPXIuZ2V0KCJHYW1tYSIpO3JldHVybiBuZXcgQ2FsR3JheUNTKGcsYyxoKTtjYXNlIkNhbFJHQiI6cj10LmZldGNoSWZSZWYoZVsxXSk7Zz1yLmdldEFycmF5KCJXaGl0ZVBvaW50Iik7Yz1yLmdldEFycmF5KCJCbGFja1BvaW50Iik7aD1yLmdldEFycmF5KCJHYW1tYSIpO2NvbnN0IGw9ci5nZXRBcnJheSgiTWF0cml4Iik7cmV0dXJuIG5ldyBDYWxSR0JDUyhnLGMsaCxsKTtjYXNlIklDQ0Jhc2VkIjpjb25zdCBDPXQuZmV0Y2hJZlJlZihlWzFdKS5kaWN0O249Qy5nZXQoIk4iKTtjb25zdCBRPUMuZ2V0KCJBbHRlcm5hdGUiKTtpZihRKXtjb25zdCBlPXRoaXMuX3BhcnNlKFEsdCxpLGEpO2lmKGUubnVtQ29tcHM9PT1uKXJldHVybiBlO3dhcm4oIklDQ0Jhc2VkIGNvbG9yIHNwYWNlOiBJZ25vcmluZyBpbmNvcnJlY3QgL0FsdGVybmF0ZSBlbnRyeS4iKX1pZigxPT09bilyZXR1cm4gdGhpcy5zaW5nbGV0b25zLmdyYXk7aWYoMz09PW4pcmV0dXJuIHRoaXMuc2luZ2xldG9ucy5yZ2I7aWYoND09PW4pcmV0dXJuIHRoaXMuc2luZ2xldG9ucy5jbXlrO2JyZWFrO2Nhc2UiUGF0dGVybiI6bz1lWzFdfHxudWxsO28mJihvPXRoaXMuX3BhcnNlKG8sdCxpLGEpKTtyZXR1cm4gbmV3IFBhdHRlcm5DUyhvKTtjYXNlIkkiOmNhc2UiSW5kZXhlZCI6bz10aGlzLl9wYXJzZShlWzFdLHQsaSxhKTtjb25zdCBFPXQuZmV0Y2hJZlJlZihlWzJdKSsxLHU9dC5mZXRjaElmUmVmKGVbM10pO3JldHVybiBuZXcgSW5kZXhlZENTKG8sRSx1KTtjYXNlIlNlcGFyYXRpb24iOmNhc2UiRGV2aWNlTiI6Y29uc3QgZD10LmZldGNoSWZSZWYoZVsxXSk7bj1BcnJheS5pc0FycmF5KGQpP2QubGVuZ3RoOjE7bz10aGlzLl9wYXJzZShlWzJdLHQsaSxhKTtjb25zdCBmPWEuY3JlYXRlKGVbM10pO3JldHVybiBuZXcgQWx0ZXJuYXRlQ1MobixvLGYpO2Nhc2UiTGFiIjpyPXQuZmV0Y2hJZlJlZihlWzFdKTtnPXIuZ2V0QXJyYXkoIldoaXRlUG9pbnQiKTtjPXIuZ2V0QXJyYXkoIkJsYWNrUG9pbnQiKTtjb25zdCBwPXIuZ2V0QXJyYXkoIlJhbmdlIik7cmV0dXJuIG5ldyBMYWJDUyhnLGMscCk7ZGVmYXVsdDp0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYFVuaW1wbGVtZW50ZWQgQ29sb3JTcGFjZSBvYmplY3Q6ICR7c31gKX19dGhyb3cgbmV3IEZvcm1hdEVycm9yKGBVbnJlY29nbml6ZWQgQ29sb3JTcGFjZSBvYmplY3Q6ICR7ZX1gKX1zdGF0aWMgaXNEZWZhdWx0RGVjb2RlKGUsdCl7aWYoIUFycmF5LmlzQXJyYXkoZSkpcmV0dXJuITA7aWYoMip0IT09ZS5sZW5ndGgpe3dhcm4oIlRoZSBkZWNvZGUgbWFwIGlzIG5vdCB0aGUgY29ycmVjdCBsZW5ndGgiKTtyZXR1cm4hMH1mb3IobGV0IHQ9MCxpPWUubGVuZ3RoO3Q8aTt0Kz0yKWlmKDAhPT1lW3RdfHwxIT09ZVt0KzFdKXJldHVybiExO3JldHVybiEwfXN0YXRpYyBnZXQgc2luZ2xldG9ucygpe3JldHVybiBzaGFkb3codGhpcywic2luZ2xldG9ucyIse2dldCBncmF5KCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJncmF5IixuZXcgRGV2aWNlR3JheUNTKX0sZ2V0IHJnYigpe3JldHVybiBzaGFkb3codGhpcywicmdiIixuZXcgRGV2aWNlUmdiQ1MpfSxnZXQgY215aygpe3JldHVybiBzaGFkb3codGhpcywiY215ayIsbmV3IERldmljZUNteWtDUyl9fSl9fWNsYXNzIEFsdGVybmF0ZUNTIGV4dGVuZHMgQ29sb3JTcGFjZXtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIoIkFsdGVybmF0ZSIsZSk7dGhpcy5iYXNlPXQ7dGhpcy50aW50Rm49aTt0aGlzLnRtcEJ1Zj1uZXcgRmxvYXQzMkFycmF5KHQubnVtQ29tcHMpfWdldFJnYkl0ZW0oZSx0LGksYSl7Y29uc3Qgcz10aGlzLnRtcEJ1Zjt0aGlzLnRpbnRGbihlLHQscywwKTt0aGlzLmJhc2UuZ2V0UmdiSXRlbShzLDAsaSxhKX1nZXRSZ2JCdWZmZXIoZSx0LGksYSxzLHIsbil7Y29uc3Qgbz10aGlzLnRpbnRGbixnPXRoaXMuYmFzZSxjPTEvKCgxPDxyKS0xKSxoPWcubnVtQ29tcHMsbD1nLnVzZXNaZXJvVG9PbmVSYW5nZSxDPShnLmlzUGFzc3Rocm91Z2goOCl8fCFsKSYmMD09PW47bGV0IFE9Qz9zOjA7Y29uc3QgRT1DP2E6bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGgqaSksdT10aGlzLm51bUNvbXBzLGQ9bmV3IEZsb2F0MzJBcnJheSh1KSxmPW5ldyBGbG9hdDMyQXJyYXkoaCk7bGV0IHAsbTtmb3IocD0wO3A8aTtwKyspe2ZvcihtPTA7bTx1O20rKylkW21dPWVbdCsrXSpjO28oZCwwLGYsMCk7aWYobClmb3IobT0wO208aDttKyspRVtRKytdPTI1NSpmW21dO2Vsc2V7Zy5nZXRSZ2JJdGVtKGYsMCxFLFEpO1ErPWh9fUN8fGcuZ2V0UmdiQnVmZmVyKEUsMCxpLGEscyw4LG4pfWdldE91dHB1dExlbmd0aChlLHQpe3JldHVybiB0aGlzLmJhc2UuZ2V0T3V0cHV0TGVuZ3RoKGUqdGhpcy5iYXNlLm51bUNvbXBzL3RoaXMubnVtQ29tcHMsdCl9fWNsYXNzIFBhdHRlcm5DUyBleHRlbmRzIENvbG9yU3BhY2V7Y29uc3RydWN0b3IoZSl7c3VwZXIoIlBhdHRlcm4iLG51bGwpO3RoaXMuYmFzZT1lfWlzRGVmYXVsdERlY29kZShlLHQpe3VucmVhY2hhYmxlKCJTaG91bGQgbm90IGNhbGwgUGF0dGVybkNTLmlzRGVmYXVsdERlY29kZSIpfX1jbGFzcyBJbmRleGVkQ1MgZXh0ZW5kcyBDb2xvclNwYWNle2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcigiSW5kZXhlZCIsMSk7dGhpcy5iYXNlPWU7dGhpcy5oaWdoVmFsPXQ7Y29uc3QgYT1lLm51bUNvbXBzKnQ7dGhpcy5sb29rdXA9bmV3IFVpbnQ4QXJyYXkoYSk7aWYoaSBpbnN0YW5jZW9mIEJhc2VTdHJlYW0pe2NvbnN0IGU9aS5nZXRCeXRlcyhhKTt0aGlzLmxvb2t1cC5zZXQoZSl9ZWxzZXtpZigic3RyaW5nIiE9dHlwZW9mIGkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbmRleGVkQ1MgLSB1bnJlY29nbml6ZWQgbG9va3VwIHRhYmxlOiAke2l9YCk7Zm9yKGxldCBlPTA7ZTxhOysrZSl0aGlzLmxvb2t1cFtlXT0yNTUmaS5jaGFyQ29kZUF0KGUpfX1nZXRSZ2JJdGVtKGUsdCxpLGEpe2NvbnN0IHM9dGhpcy5iYXNlLm51bUNvbXBzLHI9ZVt0XSpzO3RoaXMuYmFzZS5nZXRSZ2JCdWZmZXIodGhpcy5sb29rdXAsciwxLGksYSw4LDApfWdldFJnYkJ1ZmZlcihlLHQsaSxhLHMscixuKXtjb25zdCBvPXRoaXMuYmFzZSxnPW8ubnVtQ29tcHMsYz1vLmdldE91dHB1dExlbmd0aChnLG4pLGg9dGhpcy5sb29rdXA7Zm9yKGxldCByPTA7cjxpOysrcil7Y29uc3QgaT1lW3QrK10qZztvLmdldFJnYkJ1ZmZlcihoLGksMSxhLHMsOCxuKTtzKz1jfX1nZXRPdXRwdXRMZW5ndGgoZSx0KXtyZXR1cm4gdGhpcy5iYXNlLmdldE91dHB1dExlbmd0aChlKnRoaXMuYmFzZS5udW1Db21wcyx0KX1pc0RlZmF1bHREZWNvZGUoZSx0KXtpZighQXJyYXkuaXNBcnJheShlKSlyZXR1cm4hMDtpZigyIT09ZS5sZW5ndGgpe3dhcm4oIkRlY29kZSBtYXAgbGVuZ3RoIGlzIG5vdCBjb3JyZWN0Iik7cmV0dXJuITB9aWYoIU51bWJlci5pc0ludGVnZXIodCl8fHQ8MSl7d2FybigiQml0cyBwZXIgY29tcG9uZW50IGlzIG5vdCBjb3JyZWN0Iik7cmV0dXJuITB9cmV0dXJuIDA9PT1lWzBdJiZlWzFdPT09KDE8PHQpLTF9fWNsYXNzIERldmljZUdyYXlDUyBleHRlbmRzIENvbG9yU3BhY2V7Y29uc3RydWN0b3IoKXtzdXBlcigiRGV2aWNlR3JheSIsMSl9Z2V0UmdiSXRlbShlLHQsaSxhKXtjb25zdCBzPTI1NSplW3RdO2lbYV09aVthKzFdPWlbYSsyXT1zfWdldFJnYkJ1ZmZlcihlLHQsaSxhLHMscixuKXtjb25zdCBvPTI1NS8oKDE8PHIpLTEpO2xldCBnPXQsYz1zO2ZvcihsZXQgdD0wO3Q8aTsrK3Qpe2NvbnN0IHQ9byplW2crK107YVtjKytdPXQ7YVtjKytdPXQ7YVtjKytdPXQ7Yys9bn19Z2V0T3V0cHV0TGVuZ3RoKGUsdCl7cmV0dXJuIGUqKDMrdCl9fWNsYXNzIERldmljZVJnYkNTIGV4dGVuZHMgQ29sb3JTcGFjZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKCJEZXZpY2VSR0IiLDMpfWdldFJnYkl0ZW0oZSx0LGksYSl7aVthXT0yNTUqZVt0XTtpW2ErMV09MjU1KmVbdCsxXTtpW2ErMl09MjU1KmVbdCsyXX1nZXRSZ2JCdWZmZXIoZSx0LGksYSxzLHIsbil7aWYoOD09PXImJjA9PT1uKXthLnNldChlLnN1YmFycmF5KHQsdCszKmkpLHMpO3JldHVybn1jb25zdCBvPTI1NS8oKDE8PHIpLTEpO2xldCBnPXQsYz1zO2ZvcihsZXQgdD0wO3Q8aTsrK3Qpe2FbYysrXT1vKmVbZysrXTthW2MrK109byplW2crK107YVtjKytdPW8qZVtnKytdO2MrPW59fWdldE91dHB1dExlbmd0aChlLHQpe3JldHVybiBlKigzK3QpLzN8MH1pc1Bhc3N0aHJvdWdoKGUpe3JldHVybiA4PT09ZX19Y2xhc3MgRGV2aWNlQ215a0NTIGV4dGVuZHMgQ29sb3JTcGFjZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKCJEZXZpY2VDTVlLIiw0KX0jdChlLHQsaSxhLHMpe2NvbnN0IHI9ZVt0XSppLG49ZVt0KzFdKmksbz1lW3QrMl0qaSxnPWVbdCszXSppO2Fbc109MjU1K3IqKC00LjM4NzMzMjM4NDYwOTk4OCpyKzU0LjQ4NjE1MTk0MTg5MTc2Km4rMTguODIyOTA1MDIxNjUzMDIqbysyMTIuMjU2NjI0NTE2Mzk1ODUqZy0yODUuMjMzMTAyNjEzNzAwNCkrbiooMS43MTQ5NzYzNDc3MzYyMTM0Km4tNS42MDk2NzM2OTA0MDQ3MzE1Km8rLTE3Ljg3Mzg3MDg2MTQxNTQ0NCpnLTUuNDk3MDA2NDI3MTk2MzY2KStvKigtMi41MjE3MzQwMTMxNjgzMDMzKm8tMjEuMjQ4OTIzMzM3MzUzMDczKmcrMTcuNTExOTI3MDg0MTgxMykrZyooLTIxLjg2MTIyMTQ3NDYzNjA1KmctMTg5LjQ4MTgwODM1OTIyNzQ3KTthW3MrMV09MjU1K3IqKDguODQxMDQxNDIyMDM2MTQ5KnIrNjAuMTE4MDI3MDQ1NTk3MzY2Km4rNi44NzE0MjU1OTIwNDkwMDcqbyszMS4xNTkxMDAxMzAwNTU5MjIqZy03OS4yOTcwODQ0ODE2NTQ4KStuKigtMTUuMzEwMzYxMzA2OTY3ODE3Km4rMTcuNTc1MjUxMjYxMTA5NDgyKm8rMTMxLjM1MjUwOTEyNDkzOTc2KmctMTkwLjk0NTMzMDI1ODg5NTEpK28qKDQuNDQ0MzM5MTAyODUyNzM5Km8rOS44NjMyODYxNDkzNDA1KmctMjQuODY3NDE1ODI1NTU4NzgpK2cqKC0yMC43MzczMjU0NzExODEwMzQqZy0xODcuODA0NTM3MDk3MTk1NzgpO2FbcysyXT0yNTUrciooLjg4NDI1MjI0MzAwMDMyOTYqcis4LjA3ODY3NzUwMzExMjkyOCpuKzMwLjg5OTc4MzA5NzAzNzI5Km8tLjIzODgzMjM4Njg5MTc4OTM0KmctMTQuMTgzNTc2Nzk5NjczMjg2KStuKigxMC40OTU5MzI3MzQzMjA3MipuKzYzLjAyMzc4NDk0NzU0MDUyKm8rNTAuNjA2OTU3NjU2MzYwNzM0KmctMTEyLjIzODg0MjUzNzE5MjQ4KStvKiguMDMyOTYwNDExMTQ4NzMyMTcqbysxMTUuNjAzODQ0NDk2NDY2NDEqZy0xOTMuNTgyMDkzNTY4NjE1MDUpK2cqKC0yMi4zMzgxNjgwNzMwOTg4NipnLTE4MC4xMjYxMzk3NDcwODM2Nyl9Z2V0UmdiSXRlbShlLHQsaSxhKXt0aGlzLiN0KGUsdCwxLGksYSl9Z2V0UmdiQnVmZmVyKGUsdCxpLGEscyxyLG4pe2NvbnN0IG89MS8oKDE8PHIpLTEpO2ZvcihsZXQgcj0wO3I8aTtyKyspe3RoaXMuI3QoZSx0LG8sYSxzKTt0Kz00O3MrPTMrbn19Z2V0T3V0cHV0TGVuZ3RoKGUsdCl7cmV0dXJuIGUvNCooMyt0KXwwfX1jbGFzcyBDYWxHcmF5Q1MgZXh0ZW5kcyBDb2xvclNwYWNle2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcigiQ2FsR3JheSIsMSk7aWYoIWUpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJXaGl0ZVBvaW50IG1pc3NpbmcgLSByZXF1aXJlZCBmb3IgY29sb3Igc3BhY2UgQ2FsR3JheSIpO1t0aGlzLlhXLHRoaXMuWVcsdGhpcy5aV109ZTtbdGhpcy5YQix0aGlzLllCLHRoaXMuWkJdPXR8fFswLDAsMF07dGhpcy5HPWl8fDE7aWYodGhpcy5YVzwwfHx0aGlzLlpXPDB8fDEhPT10aGlzLllXKXRocm93IG5ldyBGb3JtYXRFcnJvcihgSW52YWxpZCBXaGl0ZVBvaW50IGNvbXBvbmVudHMgZm9yICR7dGhpcy5uYW1lfSwgbm8gZmFsbGJhY2sgYXZhaWxhYmxlYCk7aWYodGhpcy5YQjwwfHx0aGlzLllCPDB8fHRoaXMuWkI8MCl7aW5mbyhgSW52YWxpZCBCbGFja1BvaW50IGZvciAke3RoaXMubmFtZX0sIGZhbGxpbmcgYmFjayB0byBkZWZhdWx0LmApO3RoaXMuWEI9dGhpcy5ZQj10aGlzLlpCPTB9MD09PXRoaXMuWEImJjA9PT10aGlzLllCJiYwPT09dGhpcy5aQnx8d2FybihgJHt0aGlzLm5hbWV9LCBCbGFja1BvaW50OiBYQjogJHt0aGlzLlhCfSwgWUI6ICR7dGhpcy5ZQn0sIFpCOiAke3RoaXMuWkJ9LCBvbmx5IGRlZmF1bHQgdmFsdWVzIGFyZSBzdXBwb3J0ZWQuYCk7aWYodGhpcy5HPDEpe2luZm8oYEludmFsaWQgR2FtbWE6ICR7dGhpcy5HfSBmb3IgJHt0aGlzLm5hbWV9LCBmYWxsaW5nIGJhY2sgdG8gZGVmYXVsdC5gKTt0aGlzLkc9MX19I3QoZSx0LGksYSxzKXtjb25zdCByPShlW3RdKnMpKip0aGlzLkcsbj10aGlzLllXKnIsbz1NYXRoLm1heCgyOTUuOCpuKiouMzMzMzMzMzMzMzMzMzMzMy00MC44LDApO2lbYV09bztpW2ErMV09bztpW2ErMl09b31nZXRSZ2JJdGVtKGUsdCxpLGEpe3RoaXMuI3QoZSx0LGksYSwxKX1nZXRSZ2JCdWZmZXIoZSx0LGksYSxzLHIsbil7Y29uc3Qgbz0xLygoMTw8ciktMSk7Zm9yKGxldCByPTA7cjxpOysrcil7dGhpcy4jdChlLHQsYSxzLG8pO3QrPTE7cys9MytufX1nZXRPdXRwdXRMZW5ndGgoZSx0KXtyZXR1cm4gZSooMyt0KX19Y2xhc3MgQ2FsUkdCQ1MgZXh0ZW5kcyBDb2xvclNwYWNle3N0YXRpYyNpPW5ldyBGbG9hdDMyQXJyYXkoWy44OTUxLC4yNjY0LC0uMTYxNCwtLjc1MDIsMS43MTM1LC4wMzY3LC4wMzg5LC0uMDY4NSwxLjAyOTZdKTtzdGF0aWMjYT1uZXcgRmxvYXQzMkFycmF5KFsuOTg2OTkyOSwtLjE0NzA1NDMsLjE1OTk2MjcsLjQzMjMwNTMsLjUxODM2MDMsLjA0OTI5MTIsLS4wMDg1Mjg3LC4wNDAwNDI4LC45Njg0ODY3XSk7c3RhdGljI3M9bmV3IEZsb2F0MzJBcnJheShbMy4yNDA0NTQyLC0xLjUzNzEzODUsLS40OTg1MzE0LC0uOTY5MjY2LDEuODc2MDEwOCwuMDQxNTU2LC4wNTU2NDM0LC0uMjA0MDI1OSwxLjA1NzIyNTJdKTtzdGF0aWMjcj1uZXcgRmxvYXQzMkFycmF5KFsxLDEsMV0pO3N0YXRpYyNuPW5ldyBGbG9hdDMyQXJyYXkoMyk7c3RhdGljI289bmV3IEZsb2F0MzJBcnJheSgzKTtzdGF0aWMjZz1uZXcgRmxvYXQzMkFycmF5KDMpO3N0YXRpYyNJPSgyNC8xMTYpKiozLzg7Y29uc3RydWN0b3IoZSx0LGksYSl7c3VwZXIoIkNhbFJHQiIsMyk7aWYoIWUpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJXaGl0ZVBvaW50IG1pc3NpbmcgLSByZXF1aXJlZCBmb3IgY29sb3Igc3BhY2UgQ2FsUkdCIik7Y29uc3RbcyxyLG5dPXRoaXMud2hpdGVQb2ludD1lLFtvLGcsY109dGhpcy5ibGFja1BvaW50PXR8fG5ldyBGbG9hdDMyQXJyYXkoMyk7W3RoaXMuR1IsdGhpcy5HRyx0aGlzLkdCXT1pfHxuZXcgRmxvYXQzMkFycmF5KFsxLDEsMV0pO1t0aGlzLk1YQSx0aGlzLk1ZQSx0aGlzLk1aQSx0aGlzLk1YQix0aGlzLk1ZQix0aGlzLk1aQix0aGlzLk1YQyx0aGlzLk1ZQyx0aGlzLk1aQ109YXx8bmV3IEZsb2F0MzJBcnJheShbMSwwLDAsMCwxLDAsMCwwLDFdKTtpZihzPDB8fG48MHx8MSE9PXIpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIFdoaXRlUG9pbnQgY29tcG9uZW50cyBmb3IgJHt0aGlzLm5hbWV9LCBubyBmYWxsYmFjayBhdmFpbGFibGVgKTtpZihvPDB8fGc8MHx8YzwwKXtpbmZvKGBJbnZhbGlkIEJsYWNrUG9pbnQgZm9yICR7dGhpcy5uYW1lfSBbJHtvfSwgJHtnfSwgJHtjfV0sIGZhbGxpbmcgYmFjayB0byBkZWZhdWx0LmApO3RoaXMuYmxhY2tQb2ludD1uZXcgRmxvYXQzMkFycmF5KDMpfWlmKHRoaXMuR1I8MHx8dGhpcy5HRzwwfHx0aGlzLkdCPDApe2luZm8oYEludmFsaWQgR2FtbWEgWyR7dGhpcy5HUn0sICR7dGhpcy5HR30sICR7dGhpcy5HQn1dIGZvciAke3RoaXMubmFtZX0sIGZhbGxpbmcgYmFjayB0byBkZWZhdWx0LmApO3RoaXMuR1I9dGhpcy5HRz10aGlzLkdCPTF9fSNjKGUsdCxpKXtpWzBdPWVbMF0qdFswXStlWzFdKnRbMV0rZVsyXSp0WzJdO2lbMV09ZVszXSp0WzBdK2VbNF0qdFsxXStlWzVdKnRbMl07aVsyXT1lWzZdKnRbMF0rZVs3XSp0WzFdK2VbOF0qdFsyXX0jaChlLHQsaSl7aVswXT0xKnRbMF0vZVswXTtpWzFdPTEqdFsxXS9lWzFdO2lbMl09MSp0WzJdL2VbMl19I2woZSx0LGkpe2lbMF09Ljk1MDQ3KnRbMF0vZVswXTtpWzFdPTEqdFsxXS9lWzFdO2lbMl09MS4wODg4Myp0WzJdL2VbMl19I0MoZSl7cmV0dXJuIGU8PS4wMDMxMzA4P3RoaXMuI0IoMCwxLDEyLjkyKmUpOmU+PS45OTU1NDUyNT8xOnRoaXMuI0IoMCwxLDEuMDU1KmUqKigxLzIuNCktLjA1NSl9I0IoZSx0LGkpe3JldHVybiBNYXRoLm1heChlLE1hdGgubWluKHQsaSkpfSNRKGUpe3JldHVybiBlPDA/LXRoaXMuI1EoLWUpOmU+OD8oKGUrMTYpLzExNikqKjM6ZSpDYWxSR0JDUy4jSX0jRShlLHQsaSl7aWYoMD09PWVbMF0mJjA9PT1lWzFdJiYwPT09ZVsyXSl7aVswXT10WzBdO2lbMV09dFsxXTtpWzJdPXRbMl07cmV0dXJufWNvbnN0IGE9dGhpcy4jUSgwKSxzPSgxLWEpLygxLXRoaXMuI1EoZVswXSkpLHI9MS1zLG49KDEtYSkvKDEtdGhpcy4jUShlWzFdKSksbz0xLW4sZz0oMS1hKS8oMS10aGlzLiNRKGVbMl0pKSxjPTEtZztpWzBdPXRbMF0qcytyO2lbMV09dFsxXSpuK287aVsyXT10WzJdKmcrY30jdShlLHQsaSl7aWYoMT09PWVbMF0mJjE9PT1lWzJdKXtpWzBdPXRbMF07aVsxXT10WzFdO2lbMl09dFsyXTtyZXR1cm59Y29uc3QgYT1pO3RoaXMuI2MoQ2FsUkdCQ1MuI2ksdCxhKTtjb25zdCBzPUNhbFJHQkNTLiNuO3RoaXMuI2goZSxhLHMpO3RoaXMuI2MoQ2FsUkdCQ1MuI2EscyxpKX0jZChlLHQsaSl7Y29uc3QgYT1pO3RoaXMuI2MoQ2FsUkdCQ1MuI2ksdCxhKTtjb25zdCBzPUNhbFJHQkNTLiNuO3RoaXMuI2woZSxhLHMpO3RoaXMuI2MoQ2FsUkdCQ1MuI2EscyxpKX0jdChlLHQsaSxhLHMpe2NvbnN0IHI9dGhpcy4jQigwLDEsZVt0XSpzKSxuPXRoaXMuI0IoMCwxLGVbdCsxXSpzKSxvPXRoaXMuI0IoMCwxLGVbdCsyXSpzKSxnPTE9PT1yPzE6cioqdGhpcy5HUixjPTE9PT1uPzE6bioqdGhpcy5HRyxoPTE9PT1vPzE6byoqdGhpcy5HQixsPXRoaXMuTVhBKmcrdGhpcy5NWEIqYyt0aGlzLk1YQypoLEM9dGhpcy5NWUEqZyt0aGlzLk1ZQipjK3RoaXMuTVlDKmgsUT10aGlzLk1aQSpnK3RoaXMuTVpCKmMrdGhpcy5NWkMqaCxFPUNhbFJHQkNTLiNvO0VbMF09bDtFWzFdPUM7RVsyXT1RO2NvbnN0IHU9Q2FsUkdCQ1MuI2c7dGhpcy4jdSh0aGlzLndoaXRlUG9pbnQsRSx1KTtjb25zdCBkPUNhbFJHQkNTLiNvO3RoaXMuI0UodGhpcy5ibGFja1BvaW50LHUsZCk7Y29uc3QgZj1DYWxSR0JDUy4jZzt0aGlzLiNkKENhbFJHQkNTLiNyLGQsZik7Y29uc3QgcD1DYWxSR0JDUy4jbzt0aGlzLiNjKENhbFJHQkNTLiNzLGYscCk7aVthXT0yNTUqdGhpcy4jQyhwWzBdKTtpW2ErMV09MjU1KnRoaXMuI0MocFsxXSk7aVthKzJdPTI1NSp0aGlzLiNDKHBbMl0pfWdldFJnYkl0ZW0oZSx0LGksYSl7dGhpcy4jdChlLHQsaSxhLDEpfWdldFJnYkJ1ZmZlcihlLHQsaSxhLHMscixuKXtjb25zdCBvPTEvKCgxPDxyKS0xKTtmb3IobGV0IHI9MDtyPGk7KytyKXt0aGlzLiN0KGUsdCxhLHMsbyk7dCs9MztzKz0zK259fWdldE91dHB1dExlbmd0aChlLHQpe3JldHVybiBlKigzK3QpLzN8MH19Y2xhc3MgTGFiQ1MgZXh0ZW5kcyBDb2xvclNwYWNle2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcigiTGFiIiwzKTtpZighZSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIldoaXRlUG9pbnQgbWlzc2luZyAtIHJlcXVpcmVkIGZvciBjb2xvciBzcGFjZSBMYWIiKTtbdGhpcy5YVyx0aGlzLllXLHRoaXMuWlddPWU7W3RoaXMuYW1pbix0aGlzLmFtYXgsdGhpcy5ibWluLHRoaXMuYm1heF09aXx8Wy0xMDAsMTAwLC0xMDAsMTAwXTtbdGhpcy5YQix0aGlzLllCLHRoaXMuWkJdPXR8fFswLDAsMF07aWYodGhpcy5YVzwwfHx0aGlzLlpXPDB8fDEhPT10aGlzLllXKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBXaGl0ZVBvaW50IGNvbXBvbmVudHMsIG5vIGZhbGxiYWNrIGF2YWlsYWJsZSIpO2lmKHRoaXMuWEI8MHx8dGhpcy5ZQjwwfHx0aGlzLlpCPDApe2luZm8oIkludmFsaWQgQmxhY2tQb2ludCwgZmFsbGluZyBiYWNrIHRvIGRlZmF1bHQiKTt0aGlzLlhCPXRoaXMuWUI9dGhpcy5aQj0wfWlmKHRoaXMuYW1pbj50aGlzLmFtYXh8fHRoaXMuYm1pbj50aGlzLmJtYXgpe2luZm8oIkludmFsaWQgUmFuZ2UsIGZhbGxpbmcgYmFjayB0byBkZWZhdWx0cyIpO3RoaXMuYW1pbj0tMTAwO3RoaXMuYW1heD0xMDA7dGhpcy5ibWluPS0xMDA7dGhpcy5ibWF4PTEwMH19I2YoZSl7cmV0dXJuIGU+PTYvMjk/ZSoqMzoxMDgvODQxKihlLTQvMjkpfSNwKGUsdCxpLGEpe3JldHVybiBpK2UqKGEtaSkvdH0jdChlLHQsaSxhLHMpe2xldCByPWVbdF0sbj1lW3QrMV0sbz1lW3QrMl07aWYoITEhPT1pKXtyPXRoaXMuI3AocixpLDAsMTAwKTtuPXRoaXMuI3AobixpLHRoaXMuYW1pbix0aGlzLmFtYXgpO289dGhpcy4jcChvLGksdGhpcy5ibWluLHRoaXMuYm1heCl9bj50aGlzLmFtYXg/bj10aGlzLmFtYXg6bjx0aGlzLmFtaW4mJihuPXRoaXMuYW1pbik7bz50aGlzLmJtYXg/bz10aGlzLmJtYXg6bzx0aGlzLmJtaW4mJihvPXRoaXMuYm1pbik7Y29uc3QgZz0ocisxNikvMTE2LGM9ZytuLzUwMCxoPWctby8yMDAsbD10aGlzLlhXKnRoaXMuI2YoYyksQz10aGlzLllXKnRoaXMuI2YoZyksUT10aGlzLlpXKnRoaXMuI2YoaCk7bGV0IEUsdSxkO2lmKHRoaXMuWlc8MSl7RT0zLjEzMzkqbCstMS42MTcqQystLjQ5MDYqUTt1PS0uOTc4NSpsKzEuOTE2KkMrLjAzMzMqUTtkPS4wNzIqbCstLjIyOSpDKzEuNDA1NypRfWVsc2V7RT0zLjI0MDYqbCstMS41MzcyKkMrLS40OTg2KlE7dT0tLjk2ODkqbCsxLjg3NTgqQysuMDQxNSpRO2Q9LjA1NTcqbCstLjIwNCpDKzEuMDU3KlF9YVtzXT0yNTUqTWF0aC5zcXJ0KEUpO2FbcysxXT0yNTUqTWF0aC5zcXJ0KHUpO2FbcysyXT0yNTUqTWF0aC5zcXJ0KGQpfWdldFJnYkl0ZW0oZSx0LGksYSl7dGhpcy4jdChlLHQsITEsaSxhKX1nZXRSZ2JCdWZmZXIoZSx0LGksYSxzLHIsbil7Y29uc3Qgbz0oMTw8ciktMTtmb3IobGV0IHI9MDtyPGk7cisrKXt0aGlzLiN0KGUsdCxvLGEscyk7dCs9MztzKz0zK259fWdldE91dHB1dExlbmd0aChlLHQpe3JldHVybiBlKigzK3QpLzN8MH1pc0RlZmF1bHREZWNvZGUoZSx0KXtyZXR1cm4hMH1nZXQgdXNlc1plcm9Ub09uZVJhbmdlKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJ1c2VzWmVyb1RvT25lUmFuZ2UiLCExKX19ZnVuY3Rpb24gaGV4VG9JbnQoZSx0KXtsZXQgaT0wO2ZvcihsZXQgYT0wO2E8PXQ7YSsrKWk9aTw8OHxlW2FdO3JldHVybiBpPj4+MH1mdW5jdGlvbiBoZXhUb1N0cihlLHQpe3JldHVybiAxPT09dD9TdHJpbmcuZnJvbUNoYXJDb2RlKGVbMF0sZVsxXSk6Mz09PXQ/U3RyaW5nLmZyb21DaGFyQ29kZShlWzBdLGVbMV0sZVsyXSxlWzNdKTpTdHJpbmcuZnJvbUNoYXJDb2RlKC4uLmUuc3ViYXJyYXkoMCx0KzEpKX1mdW5jdGlvbiBhZGRIZXgoZSx0LGkpe2xldCBhPTA7Zm9yKGxldCBzPWk7cz49MDtzLS0pe2ErPWVbc10rdFtzXTtlW3NdPTI1NSZhO2E+Pj04fX1mdW5jdGlvbiBpbmNIZXgoZSx0KXtsZXQgaT0xO2ZvcihsZXQgYT10O2E+PTAmJmk+MDthLS0pe2krPWVbYV07ZVthXT0yNTUmaTtpPj49OH19Y29uc3Qga3Q9MTY7Y2xhc3MgQmluYXJ5Q01hcFN0cmVhbXtjb25zdHJ1Y3RvcihlKXt0aGlzLmJ1ZmZlcj1lO3RoaXMucG9zPTA7dGhpcy5lbmQ9ZS5sZW5ndGg7dGhpcy50bXBCdWY9bmV3IFVpbnQ4QXJyYXkoMTkpfXJlYWRCeXRlKCl7cmV0dXJuIHRoaXMucG9zPj10aGlzLmVuZD8tMTp0aGlzLmJ1ZmZlclt0aGlzLnBvcysrXX1yZWFkTnVtYmVyKCl7bGV0IGUsdD0wO2Rve2NvbnN0IGk9dGhpcy5yZWFkQnl0ZSgpO2lmKGk8MCl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoInVuZXhwZWN0ZWQgRU9GIGluIGJjbWFwIik7ZT0hKDEyOCZpKTt0PXQ8PDd8MTI3Jml9d2hpbGUoIWUpO3JldHVybiB0fXJlYWRTaWduZWQoKXtjb25zdCBlPXRoaXMucmVhZE51bWJlcigpO3JldHVybiAxJmU/fihlPj4+MSk6ZT4+PjF9cmVhZEhleChlLHQpe2Uuc2V0KHRoaXMuYnVmZmVyLnN1YmFycmF5KHRoaXMucG9zLHRoaXMucG9zK3QrMSkpO3RoaXMucG9zKz10KzF9cmVhZEhleE51bWJlcihlLHQpe2xldCBpO2NvbnN0IGE9dGhpcy50bXBCdWY7bGV0IHM9MDtkb3tjb25zdCBlPXRoaXMucmVhZEJ5dGUoKTtpZihlPDApdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJ1bmV4cGVjdGVkIEVPRiBpbiBiY21hcCIpO2k9ISgxMjgmZSk7YVtzKytdPTEyNyZlfXdoaWxlKCFpKTtsZXQgcj10LG49MCxvPTA7Zm9yKDtyPj0wOyl7Zm9yKDtvPDgmJmEubGVuZ3RoPjA7KXtufD1hWy0tc108PG87bys9N31lW3JdPTI1NSZuO3ItLTtuPj49ODtvLT04fX1yZWFkSGV4U2lnbmVkKGUsdCl7dGhpcy5yZWFkSGV4TnVtYmVyKGUsdCk7Y29uc3QgaT0xJmVbdF0/MjU1OjA7bGV0IGE9MDtmb3IobGV0IHM9MDtzPD10O3MrKyl7YT0oMSZhKTw8OHxlW3NdO2Vbc109YT4+MV5pfX1yZWFkU3RyaW5nKCl7Y29uc3QgZT10aGlzLnJlYWROdW1iZXIoKSx0PW5ldyBBcnJheShlKTtmb3IobGV0IGk9MDtpPGU7aSsrKXRbaV09dGhpcy5yZWFkTnVtYmVyKCk7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoLi4udCl9fWNsYXNzIEJpbmFyeUNNYXBSZWFkZXJ7YXN5bmMgcHJvY2VzcyhlLHQsaSl7Y29uc3QgYT1uZXcgQmluYXJ5Q01hcFN0cmVhbShlKSxzPWEucmVhZEJ5dGUoKTt0LnZlcnRpY2FsPSEhKDEmcyk7bGV0IHI9bnVsbDtjb25zdCBuPW5ldyBVaW50OEFycmF5KGt0KSxvPW5ldyBVaW50OEFycmF5KGt0KSxnPW5ldyBVaW50OEFycmF5KGt0KSxjPW5ldyBVaW50OEFycmF5KGt0KSxoPW5ldyBVaW50OEFycmF5KGt0KTtsZXQgbCxDO2Zvcig7KEM9YS5yZWFkQnl0ZSgpKT49MDspe2NvbnN0IGU9Qz4+NTtpZig3PT09ZSl7c3dpdGNoKDMxJkMpe2Nhc2UgMDphLnJlYWRTdHJpbmcoKTticmVhaztjYXNlIDE6cj1hLnJlYWRTdHJpbmcoKX1jb250aW51ZX1jb25zdCBpPSEhKDE2JkMpLHM9MTUmQztpZihzKzE+a3QpdGhyb3cgbmV3IEVycm9yKCJCaW5hcnlDTWFwUmVhZGVyLnByb2Nlc3M6IEludmFsaWQgZGF0YVNpemUuIik7Y29uc3QgUT0xLEU9YS5yZWFkTnVtYmVyKCk7c3dpdGNoKGUpe2Nhc2UgMDphLnJlYWRIZXgobixzKTthLnJlYWRIZXhOdW1iZXIobyxzKTthZGRIZXgobyxuLHMpO3QuYWRkQ29kZXNwYWNlUmFuZ2UocysxLGhleFRvSW50KG4scyksaGV4VG9JbnQobyxzKSk7Zm9yKGxldCBlPTE7ZTxFO2UrKyl7aW5jSGV4KG8scyk7YS5yZWFkSGV4TnVtYmVyKG4scyk7YWRkSGV4KG4sbyxzKTthLnJlYWRIZXhOdW1iZXIobyxzKTthZGRIZXgobyxuLHMpO3QuYWRkQ29kZXNwYWNlUmFuZ2UocysxLGhleFRvSW50KG4scyksaGV4VG9JbnQobyxzKSl9YnJlYWs7Y2FzZSAxOmEucmVhZEhleChuLHMpO2EucmVhZEhleE51bWJlcihvLHMpO2FkZEhleChvLG4scyk7YS5yZWFkTnVtYmVyKCk7Zm9yKGxldCBlPTE7ZTxFO2UrKyl7aW5jSGV4KG8scyk7YS5yZWFkSGV4TnVtYmVyKG4scyk7YWRkSGV4KG4sbyxzKTthLnJlYWRIZXhOdW1iZXIobyxzKTthZGRIZXgobyxuLHMpO2EucmVhZE51bWJlcigpfWJyZWFrO2Nhc2UgMjphLnJlYWRIZXgoZyxzKTtsPWEucmVhZE51bWJlcigpO3QubWFwT25lKGhleFRvSW50KGcscyksbCk7Zm9yKGxldCBlPTE7ZTxFO2UrKyl7aW5jSGV4KGcscyk7aWYoIWkpe2EucmVhZEhleE51bWJlcihoLHMpO2FkZEhleChnLGgscyl9bD1hLnJlYWRTaWduZWQoKSsobCsxKTt0Lm1hcE9uZShoZXhUb0ludChnLHMpLGwpfWJyZWFrO2Nhc2UgMzphLnJlYWRIZXgobixzKTthLnJlYWRIZXhOdW1iZXIobyxzKTthZGRIZXgobyxuLHMpO2w9YS5yZWFkTnVtYmVyKCk7dC5tYXBDaWRSYW5nZShoZXhUb0ludChuLHMpLGhleFRvSW50KG8scyksbCk7Zm9yKGxldCBlPTE7ZTxFO2UrKyl7aW5jSGV4KG8scyk7aWYoaSluLnNldChvKTtlbHNle2EucmVhZEhleE51bWJlcihuLHMpO2FkZEhleChuLG8scyl9YS5yZWFkSGV4TnVtYmVyKG8scyk7YWRkSGV4KG8sbixzKTtsPWEucmVhZE51bWJlcigpO3QubWFwQ2lkUmFuZ2UoaGV4VG9JbnQobixzKSxoZXhUb0ludChvLHMpLGwpfWJyZWFrO2Nhc2UgNDphLnJlYWRIZXgoZyxRKTthLnJlYWRIZXgoYyxzKTt0Lm1hcE9uZShoZXhUb0ludChnLFEpLGhleFRvU3RyKGMscykpO2ZvcihsZXQgZT0xO2U8RTtlKyspe2luY0hleChnLFEpO2lmKCFpKXthLnJlYWRIZXhOdW1iZXIoaCxRKTthZGRIZXgoZyxoLFEpfWluY0hleChjLHMpO2EucmVhZEhleFNpZ25lZChoLHMpO2FkZEhleChjLGgscyk7dC5tYXBPbmUoaGV4VG9JbnQoZyxRKSxoZXhUb1N0cihjLHMpKX1icmVhaztjYXNlIDU6YS5yZWFkSGV4KG4sUSk7YS5yZWFkSGV4TnVtYmVyKG8sUSk7YWRkSGV4KG8sbixRKTthLnJlYWRIZXgoYyxzKTt0Lm1hcEJmUmFuZ2UoaGV4VG9JbnQobixRKSxoZXhUb0ludChvLFEpLGhleFRvU3RyKGMscykpO2ZvcihsZXQgZT0xO2U8RTtlKyspe2luY0hleChvLFEpO2lmKGkpbi5zZXQobyk7ZWxzZXthLnJlYWRIZXhOdW1iZXIobixRKTthZGRIZXgobixvLFEpfWEucmVhZEhleE51bWJlcihvLFEpO2FkZEhleChvLG4sUSk7YS5yZWFkSGV4KGMscyk7dC5tYXBCZlJhbmdlKGhleFRvSW50KG4sUSksaGV4VG9JbnQobyxRKSxoZXhUb1N0cihjLHMpKX1icmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihgQmluYXJ5Q01hcFJlYWRlci5wcm9jZXNzIC0gdW5rbm93biB0eXBlOiAke2V9YCl9fXJldHVybiByP2kocik6dH19Y29uc3QgUnQ9bmV3IFVpbnQ4QXJyYXkoMCk7Y2xhc3MgRGVjb2RlU3RyZWFtIGV4dGVuZHMgQmFzZVN0cmVhbXtjb25zdHJ1Y3RvcihlKXtzdXBlcigpO3RoaXMuX3Jhd01pbkJ1ZmZlckxlbmd0aD1lfHwwO3RoaXMucG9zPTA7dGhpcy5idWZmZXJMZW5ndGg9MDt0aGlzLmVvZj0hMTt0aGlzLmJ1ZmZlcj1SdDt0aGlzLm1pbkJ1ZmZlckxlbmd0aD01MTI7aWYoZSlmb3IoO3RoaXMubWluQnVmZmVyTGVuZ3RoPGU7KXRoaXMubWluQnVmZmVyTGVuZ3RoKj0yfWdldCBpc0VtcHR5KCl7Zm9yKDshdGhpcy5lb2YmJjA9PT10aGlzLmJ1ZmZlckxlbmd0aDspdGhpcy5yZWFkQmxvY2soKTtyZXR1cm4gMD09PXRoaXMuYnVmZmVyTGVuZ3RofWVuc3VyZUJ1ZmZlcihlKXtjb25zdCB0PXRoaXMuYnVmZmVyO2lmKGU8PXQuYnl0ZUxlbmd0aClyZXR1cm4gdDtsZXQgaT10aGlzLm1pbkJ1ZmZlckxlbmd0aDtmb3IoO2k8ZTspaSo9Mjtjb25zdCBhPW5ldyBVaW50OEFycmF5KGkpO2Euc2V0KHQpO3JldHVybiB0aGlzLmJ1ZmZlcj1hfWdldEJ5dGUoKXtjb25zdCBlPXRoaXMucG9zO2Zvcig7dGhpcy5idWZmZXJMZW5ndGg8PWU7KXtpZih0aGlzLmVvZilyZXR1cm4tMTt0aGlzLnJlYWRCbG9jaygpfXJldHVybiB0aGlzLmJ1ZmZlclt0aGlzLnBvcysrXX1nZXRCeXRlcyhlLHQ9ITEpe2NvbnN0IGk9dGhpcy5wb3M7bGV0IGE7aWYoZSl7dGhpcy5lbnN1cmVCdWZmZXIoaStlKTthPWkrZTtmb3IoOyF0aGlzLmVvZiYmdGhpcy5idWZmZXJMZW5ndGg8YTspdGhpcy5yZWFkQmxvY2sodCk7Y29uc3Qgcz10aGlzLmJ1ZmZlckxlbmd0aDthPnMmJihhPXMpfWVsc2V7Zm9yKDshdGhpcy5lb2Y7KXRoaXMucmVhZEJsb2NrKHQpO2E9dGhpcy5idWZmZXJMZW5ndGh9dGhpcy5wb3M9YTtyZXR1cm4gdGhpcy5idWZmZXIuc3ViYXJyYXkoaSxhKX1yZXNldCgpe3RoaXMucG9zPTB9bWFrZVN1YlN0cmVhbShlLHQsaT1udWxsKXtpZih2b2lkIDA9PT10KWZvcig7IXRoaXMuZW9mOyl0aGlzLnJlYWRCbG9jaygpO2Vsc2V7Y29uc3QgaT1lK3Q7Zm9yKDt0aGlzLmJ1ZmZlckxlbmd0aDw9aSYmIXRoaXMuZW9mOyl0aGlzLnJlYWRCbG9jaygpfXJldHVybiBuZXcgU3RyZWFtKHRoaXMuYnVmZmVyLGUsdCxpKX1nZXRCYXNlU3RyZWFtcygpe3JldHVybiB0aGlzLnN0cj90aGlzLnN0ci5nZXRCYXNlU3RyZWFtcygpOm51bGx9fWNsYXNzIFN0cmVhbXNTZXF1ZW5jZVN0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQ9bnVsbCl7bGV0IGk9MDtmb3IoY29uc3QgdCBvZiBlKWkrPXQgaW5zdGFuY2VvZiBEZWNvZGVTdHJlYW0/dC5fcmF3TWluQnVmZmVyTGVuZ3RoOnQubGVuZ3RoO3N1cGVyKGkpO3RoaXMuc3RyZWFtcz1lO3RoaXMuX29uRXJyb3I9dH1yZWFkQmxvY2soKXtjb25zdCBlPXRoaXMuc3RyZWFtcztpZigwPT09ZS5sZW5ndGgpe3RoaXMuZW9mPSEwO3JldHVybn1jb25zdCB0PWUuc2hpZnQoKTtsZXQgaTt0cnl7aT10LmdldEJ5dGVzKCl9Y2F0Y2goZSl7aWYodGhpcy5fb25FcnJvcil7dGhpcy5fb25FcnJvcihlLHQuZGljdD8ub2JqSWQpO3JldHVybn10aHJvdyBlfWNvbnN0IGE9dGhpcy5idWZmZXJMZW5ndGgscz1hK2kubGVuZ3RoO3RoaXMuZW5zdXJlQnVmZmVyKHMpLnNldChpLGEpO3RoaXMuYnVmZmVyTGVuZ3RoPXN9Z2V0QmFzZVN0cmVhbXMoKXtjb25zdCBlPVtdO2Zvcihjb25zdCB0IG9mIHRoaXMuc3RyZWFtcyl7Y29uc3QgaT10LmdldEJhc2VTdHJlYW1zKCk7aSYmZS5wdXNoKC4uLmkpfXJldHVybiBlLmxlbmd0aD4wP2U6bnVsbH19Y2xhc3MgQXNjaWk4NVN0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQpe3QmJih0Kj0uOCk7c3VwZXIodCk7dGhpcy5zdHI9ZTt0aGlzLmRpY3Q9ZS5kaWN0O3RoaXMuaW5wdXQ9bmV3IFVpbnQ4QXJyYXkoNSl9cmVhZEJsb2NrKCl7Y29uc3QgZT10aGlzLnN0cjtsZXQgdD1lLmdldEJ5dGUoKTtmb3IoO2lzV2hpdGVTcGFjZSh0KTspdD1lLmdldEJ5dGUoKTtpZigtMT09PXR8fDEyNj09PXQpe3RoaXMuZW9mPSEwO3JldHVybn1jb25zdCBpPXRoaXMuYnVmZmVyTGVuZ3RoO2xldCBhLHM7aWYoMTIyPT09dCl7YT10aGlzLmVuc3VyZUJ1ZmZlcihpKzQpO2ZvcihzPTA7czw0OysrcylhW2krc109MDt0aGlzLmJ1ZmZlckxlbmd0aCs9NH1lbHNle2NvbnN0IHI9dGhpcy5pbnB1dDtyWzBdPXQ7Zm9yKHM9MTtzPDU7KytzKXt0PWUuZ2V0Qnl0ZSgpO2Zvcig7aXNXaGl0ZVNwYWNlKHQpOyl0PWUuZ2V0Qnl0ZSgpO3Jbc109dDtpZigtMT09PXR8fDEyNj09PXQpYnJlYWt9YT10aGlzLmVuc3VyZUJ1ZmZlcihpK3MtMSk7dGhpcy5idWZmZXJMZW5ndGgrPXMtMTtpZihzPDUpe2Zvcig7czw1OysrcylyW3NdPTExNzt0aGlzLmVvZj0hMH1sZXQgbj0wO2ZvcihzPTA7czw1OysrcyluPTg1Km4rKHJbc10tMzMpO2ZvcihzPTM7cz49MDstLXMpe2FbaStzXT0yNTUmbjtuPj49OH19fX1jbGFzcyBBc2NpaUhleFN0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQpe3QmJih0Kj0uNSk7c3VwZXIodCk7dGhpcy5zdHI9ZTt0aGlzLmRpY3Q9ZS5kaWN0O3RoaXMuZmlyc3REaWdpdD0tMX1yZWFkQmxvY2soKXtjb25zdCBlPXRoaXMuc3RyLmdldEJ5dGVzKDhlMyk7aWYoIWUubGVuZ3RoKXt0aGlzLmVvZj0hMDtyZXR1cm59Y29uc3QgdD1lLmxlbmd0aCsxPj4xLGk9dGhpcy5lbnN1cmVCdWZmZXIodGhpcy5idWZmZXJMZW5ndGgrdCk7bGV0IGE9dGhpcy5idWZmZXJMZW5ndGgscz10aGlzLmZpcnN0RGlnaXQ7Zm9yKGNvbnN0IHQgb2YgZSl7bGV0IGU7aWYodD49NDgmJnQ8PTU3KWU9MTUmdDtlbHNle2lmKCEodD49NjUmJnQ8PTcwfHx0Pj05NyYmdDw9MTAyKSl7aWYoNjI9PT10KXt0aGlzLmVvZj0hMDticmVha31jb250aW51ZX1lPTkrKDE1JnQpfWlmKHM8MClzPWU7ZWxzZXtpW2ErK109czw8NHxlO3M9LTF9fWlmKHM+PTAmJnRoaXMuZW9mKXtpW2ErK109czw8NDtzPS0xfXRoaXMuZmlyc3REaWdpdD1zO3RoaXMuYnVmZmVyTGVuZ3RoPWF9fWNvbnN0IE50PS0xLEd0PVtbLTEsLTFdLFstMSwtMV0sWzcsOF0sWzcsN10sWzYsNl0sWzYsNl0sWzYsNV0sWzYsNV0sWzQsMF0sWzQsMF0sWzQsMF0sWzQsMF0sWzQsMF0sWzQsMF0sWzQsMF0sWzQsMF0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsMV0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsNF0sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzMsM10sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl0sWzEsMl1dLHh0PVtbLTEsLTFdLFsxMiwtMl0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFsxMSwxNzkyXSxbMTEsMTc5Ml0sWzEyLDE5ODRdLFsxMiwyMDQ4XSxbMTIsMjExMl0sWzEyLDIxNzZdLFsxMiwyMjQwXSxbMTIsMjMwNF0sWzExLDE4NTZdLFsxMSwxODU2XSxbMTEsMTkyMF0sWzExLDE5MjBdLFsxMiwyMzY4XSxbMTIsMjQzMl0sWzEyLDI0OTZdLFsxMiwyNTYwXV0sTXQ9W1stMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWzgsMjldLFs4LDI5XSxbOCwzMF0sWzgsMzBdLFs4LDQ1XSxbOCw0NV0sWzgsNDZdLFs4LDQ2XSxbNywyMl0sWzcsMjJdLFs3LDIyXSxbNywyMl0sWzcsMjNdLFs3LDIzXSxbNywyM10sWzcsMjNdLFs4LDQ3XSxbOCw0N10sWzgsNDhdLFs4LDQ4XSxbNiwxM10sWzYsMTNdLFs2LDEzXSxbNiwxM10sWzYsMTNdLFs2LDEzXSxbNiwxM10sWzYsMTNdLFs3LDIwXSxbNywyMF0sWzcsMjBdLFs3LDIwXSxbOCwzM10sWzgsMzNdLFs4LDM0XSxbOCwzNF0sWzgsMzVdLFs4LDM1XSxbOCwzNl0sWzgsMzZdLFs4LDM3XSxbOCwzN10sWzgsMzhdLFs4LDM4XSxbNywxOV0sWzcsMTldLFs3LDE5XSxbNywxOV0sWzgsMzFdLFs4LDMxXSxbOCwzMl0sWzgsMzJdLFs2LDFdLFs2LDFdLFs2LDFdLFs2LDFdLFs2LDFdLFs2LDFdLFs2LDFdLFs2LDFdLFs2LDEyXSxbNiwxMl0sWzYsMTJdLFs2LDEyXSxbNiwxMl0sWzYsMTJdLFs2LDEyXSxbNiwxMl0sWzgsNTNdLFs4LDUzXSxbOCw1NF0sWzgsNTRdLFs3LDI2XSxbNywyNl0sWzcsMjZdLFs3LDI2XSxbOCwzOV0sWzgsMzldLFs4LDQwXSxbOCw0MF0sWzgsNDFdLFs4LDQxXSxbOCw0Ml0sWzgsNDJdLFs4LDQzXSxbOCw0M10sWzgsNDRdLFs4LDQ0XSxbNywyMV0sWzcsMjFdLFs3LDIxXSxbNywyMV0sWzcsMjhdLFs3LDI4XSxbNywyOF0sWzcsMjhdLFs4LDYxXSxbOCw2MV0sWzgsNjJdLFs4LDYyXSxbOCw2M10sWzgsNjNdLFs4LDBdLFs4LDBdLFs4LDMyMF0sWzgsMzIwXSxbOCwzODRdLFs4LDM4NF0sWzUsMTBdLFs1LDEwXSxbNSwxMF0sWzUsMTBdLFs1LDEwXSxbNSwxMF0sWzUsMTBdLFs1LDEwXSxbNSwxMF0sWzUsMTBdLFs1LDEwXSxbNSwxMF0sWzUsMTBdLFs1LDEwXSxbNSwxMF0sWzUsMTBdLFs1LDExXSxbNSwxMV0sWzUsMTFdLFs1LDExXSxbNSwxMV0sWzUsMTFdLFs1LDExXSxbNSwxMV0sWzUsMTFdLFs1LDExXSxbNSwxMV0sWzUsMTFdLFs1LDExXSxbNSwxMV0sWzUsMTFdLFs1LDExXSxbNywyN10sWzcsMjddLFs3LDI3XSxbNywyN10sWzgsNTldLFs4LDU5XSxbOCw2MF0sWzgsNjBdLFs5LDE0NzJdLFs5LDE1MzZdLFs5LDE2MDBdLFs5LDE3MjhdLFs3LDE4XSxbNywxOF0sWzcsMThdLFs3LDE4XSxbNywyNF0sWzcsMjRdLFs3LDI0XSxbNywyNF0sWzgsNDldLFs4LDQ5XSxbOCw1MF0sWzgsNTBdLFs4LDUxXSxbOCw1MV0sWzgsNTJdLFs4LDUyXSxbNywyNV0sWzcsMjVdLFs3LDI1XSxbNywyNV0sWzgsNTVdLFs4LDU1XSxbOCw1Nl0sWzgsNTZdLFs4LDU3XSxbOCw1N10sWzgsNThdLFs4LDU4XSxbNiwxOTJdLFs2LDE5Ml0sWzYsMTkyXSxbNiwxOTJdLFs2LDE5Ml0sWzYsMTkyXSxbNiwxOTJdLFs2LDE5Ml0sWzYsMTY2NF0sWzYsMTY2NF0sWzYsMTY2NF0sWzYsMTY2NF0sWzYsMTY2NF0sWzYsMTY2NF0sWzYsMTY2NF0sWzYsMTY2NF0sWzgsNDQ4XSxbOCw0NDhdLFs4LDUxMl0sWzgsNTEyXSxbOSw3MDRdLFs5LDc2OF0sWzgsNjQwXSxbOCw2NDBdLFs4LDU3Nl0sWzgsNTc2XSxbOSw4MzJdLFs5LDg5Nl0sWzksOTYwXSxbOSwxMDI0XSxbOSwxMDg4XSxbOSwxMTUyXSxbOSwxMjE2XSxbOSwxMjgwXSxbOSwxMzQ0XSxbOSwxNDA4XSxbNywyNTZdLFs3LDI1Nl0sWzcsMjU2XSxbNywyNTZdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDJdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs0LDNdLFs1LDEyOF0sWzUsMTI4XSxbNSwxMjhdLFs1LDEyOF0sWzUsMTI4XSxbNSwxMjhdLFs1LDEyOF0sWzUsMTI4XSxbNSwxMjhdLFs1LDEyOF0sWzUsMTI4XSxbNSwxMjhdLFs1LDEyOF0sWzUsMTI4XSxbNSwxMjhdLFs1LDEyOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOF0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzUsOV0sWzYsMTZdLFs2LDE2XSxbNiwxNl0sWzYsMTZdLFs2LDE2XSxbNiwxNl0sWzYsMTZdLFs2LDE2XSxbNiwxN10sWzYsMTddLFs2LDE3XSxbNiwxN10sWzYsMTddLFs2LDE3XSxbNiwxN10sWzYsMTddLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDRdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFs2LDE0XSxbNiwxNF0sWzYsMTRdLFs2LDE0XSxbNiwxNF0sWzYsMTRdLFs2LDE0XSxbNiwxNF0sWzYsMTVdLFs2LDE1XSxbNiwxNV0sWzYsMTVdLFs2LDE1XSxbNiwxNV0sWzYsMTVdLFs2LDE1XSxbNSw2NF0sWzUsNjRdLFs1LDY0XSxbNSw2NF0sWzUsNjRdLFs1LDY0XSxbNSw2NF0sWzUsNjRdLFs1LDY0XSxbNSw2NF0sWzUsNjRdLFs1LDY0XSxbNSw2NF0sWzUsNjRdLFs1LDY0XSxbNSw2NF0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsNl0sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN10sWzQsN11dLFV0PVtbLTEsLTFdLFstMSwtMV0sWzEyLC0yXSxbMTIsLTJdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFstMSwtMV0sWzExLDE3OTJdLFsxMSwxNzkyXSxbMTEsMTc5Ml0sWzExLDE3OTJdLFsxMiwxOTg0XSxbMTIsMTk4NF0sWzEyLDIwNDhdLFsxMiwyMDQ4XSxbMTIsMjExMl0sWzEyLDIxMTJdLFsxMiwyMTc2XSxbMTIsMjE3Nl0sWzEyLDIyNDBdLFsxMiwyMjQwXSxbMTIsMjMwNF0sWzEyLDIzMDRdLFsxMSwxODU2XSxbMTEsMTg1Nl0sWzExLDE4NTZdLFsxMSwxODU2XSxbMTEsMTkyMF0sWzExLDE5MjBdLFsxMSwxOTIwXSxbMTEsMTkyMF0sWzEyLDIzNjhdLFsxMiwyMzY4XSxbMTIsMjQzMl0sWzEyLDI0MzJdLFsxMiwyNDk2XSxbMTIsMjQ5Nl0sWzEyLDI1NjBdLFsxMiwyNTYwXSxbMTAsMThdLFsxMCwxOF0sWzEwLDE4XSxbMTAsMThdLFsxMCwxOF0sWzEwLDE4XSxbMTAsMThdLFsxMCwxOF0sWzEyLDUyXSxbMTIsNTJdLFsxMyw2NDBdLFsxMyw3MDRdLFsxMyw3NjhdLFsxMyw4MzJdLFsxMiw1NV0sWzEyLDU1XSxbMTIsNTZdLFsxMiw1Nl0sWzEzLDEyODBdLFsxMywxMzQ0XSxbMTMsMTQwOF0sWzEzLDE0NzJdLFsxMiw1OV0sWzEyLDU5XSxbMTIsNjBdLFsxMiw2MF0sWzEzLDE1MzZdLFsxMywxNjAwXSxbMTEsMjRdLFsxMSwyNF0sWzExLDI0XSxbMTEsMjRdLFsxMSwyNV0sWzExLDI1XSxbMTEsMjVdLFsxMSwyNV0sWzEzLDE2NjRdLFsxMywxNzI4XSxbMTIsMzIwXSxbMTIsMzIwXSxbMTIsMzg0XSxbMTIsMzg0XSxbMTIsNDQ4XSxbMTIsNDQ4XSxbMTMsNTEyXSxbMTMsNTc2XSxbMTIsNTNdLFsxMiw1M10sWzEyLDU0XSxbMTIsNTRdLFsxMyw4OTZdLFsxMyw5NjBdLFsxMywxMDI0XSxbMTMsMTA4OF0sWzEzLDExNTJdLFsxMywxMjE2XSxbMTAsNjRdLFsxMCw2NF0sWzEwLDY0XSxbMTAsNjRdLFsxMCw2NF0sWzEwLDY0XSxbMTAsNjRdLFsxMCw2NF1dLEx0PVtbOCwxM10sWzgsMTNdLFs4LDEzXSxbOCwxM10sWzgsMTNdLFs4LDEzXSxbOCwxM10sWzgsMTNdLFs4LDEzXSxbOCwxM10sWzgsMTNdLFs4LDEzXSxbOCwxM10sWzgsMTNdLFs4LDEzXSxbOCwxM10sWzExLDIzXSxbMTEsMjNdLFsxMiw1MF0sWzEyLDUxXSxbMTIsNDRdLFsxMiw0NV0sWzEyLDQ2XSxbMTIsNDddLFsxMiw1N10sWzEyLDU4XSxbMTIsNjFdLFsxMiwyNTZdLFsxMCwxNl0sWzEwLDE2XSxbMTAsMTZdLFsxMCwxNl0sWzEwLDE3XSxbMTAsMTddLFsxMCwxN10sWzEwLDE3XSxbMTIsNDhdLFsxMiw0OV0sWzEyLDYyXSxbMTIsNjNdLFsxMiwzMF0sWzEyLDMxXSxbMTIsMzJdLFsxMiwzM10sWzEyLDQwXSxbMTIsNDFdLFsxMSwyMl0sWzExLDIyXSxbOCwxNF0sWzgsMTRdLFs4LDE0XSxbOCwxNF0sWzgsMTRdLFs4LDE0XSxbOCwxNF0sWzgsMTRdLFs4LDE0XSxbOCwxNF0sWzgsMTRdLFs4LDE0XSxbOCwxNF0sWzgsMTRdLFs4LDE0XSxbOCwxNF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMF0sWzcsMTBdLFs3LDEwXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs3LDExXSxbNywxMV0sWzcsMTFdLFs5LDE1XSxbOSwxNV0sWzksMTVdLFs5LDE1XSxbOSwxNV0sWzksMTVdLFs5LDE1XSxbOSwxNV0sWzEyLDEyOF0sWzEyLDE5Ml0sWzEyLDI2XSxbMTIsMjddLFsxMiwyOF0sWzEyLDI5XSxbMTEsMTldLFsxMSwxOV0sWzExLDIwXSxbMTEsMjBdLFsxMiwzNF0sWzEyLDM1XSxbMTIsMzZdLFsxMiwzN10sWzEyLDM4XSxbMTIsMzldLFsxMSwyMV0sWzExLDIxXSxbMTIsNDJdLFsxMiw0M10sWzEwLDBdLFsxMCwwXSxbMTAsMF0sWzEwLDBdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl0sWzcsMTJdLFs3LDEyXSxbNywxMl1dLEp0PVtbLTEsLTFdLFstMSwtMV0sWy0xLC0xXSxbLTEsLTFdLFs2LDldLFs2LDhdLFs1LDddLFs1LDddLFs0LDZdLFs0LDZdLFs0LDZdLFs0LDZdLFs0LDVdLFs0LDVdLFs0LDVdLFs0LDVdLFszLDFdLFszLDFdLFszLDFdLFszLDFdLFszLDFdLFszLDFdLFszLDFdLFszLDFdLFszLDRdLFszLDRdLFszLDRdLFszLDRdLFszLDRdLFszLDRdLFszLDRdLFszLDRdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDNdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdLFsyLDJdXTtjbGFzcyBDQ0lUVEZheERlY29kZXJ7Y29uc3RydWN0b3IoZSx0PXt9KXtpZighZXx8ImZ1bmN0aW9uIiE9dHlwZW9mIGUubmV4dCl0aHJvdyBuZXcgRXJyb3IoJ0NDSVRURmF4RGVjb2RlciAtIGludmFsaWQgInNvdXJjZSIgcGFyYW1ldGVyLicpO3RoaXMuc291cmNlPWU7dGhpcy5lb2Y9ITE7dGhpcy5lbmNvZGluZz10Lkt8fDA7dGhpcy5lb2xpbmU9dC5FbmRPZkxpbmV8fCExO3RoaXMuYnl0ZUFsaWduPXQuRW5jb2RlZEJ5dGVBbGlnbnx8ITE7dGhpcy5jb2x1bW5zPXQuQ29sdW1uc3x8MTcyODt0aGlzLnJvd3M9dC5Sb3dzfHwwO3RoaXMuZW9ibG9jaz10LkVuZE9mQmxvY2s/PyEwO3RoaXMuYmxhY2s9dC5CbGFja0lzMXx8ITE7dGhpcy5jb2RpbmdMaW5lPW5ldyBVaW50MzJBcnJheSh0aGlzLmNvbHVtbnMrMSk7dGhpcy5yZWZMaW5lPW5ldyBVaW50MzJBcnJheSh0aGlzLmNvbHVtbnMrMik7dGhpcy5jb2RpbmdMaW5lWzBdPXRoaXMuY29sdW1uczt0aGlzLmNvZGluZ1Bvcz0wO3RoaXMucm93PTA7dGhpcy5uZXh0TGluZTJEPXRoaXMuZW5jb2Rpbmc8MDt0aGlzLmlucHV0Qml0cz0wO3RoaXMuaW5wdXRCdWY9MDt0aGlzLm91dHB1dEJpdHM9MDt0aGlzLnJvd3NEb25lPSExO2xldCBpO2Zvcig7MD09PShpPXRoaXMuX2xvb2tCaXRzKDEyKSk7KXRoaXMuX2VhdEJpdHMoMSk7MT09PWkmJnRoaXMuX2VhdEJpdHMoMTIpO2lmKHRoaXMuZW5jb2Rpbmc+MCl7dGhpcy5uZXh0TGluZTJEPSF0aGlzLl9sb29rQml0cygxKTt0aGlzLl9lYXRCaXRzKDEpfX1yZWFkTmV4dENoYXIoKXtpZih0aGlzLmVvZilyZXR1cm4tMTtjb25zdCBlPXRoaXMucmVmTGluZSx0PXRoaXMuY29kaW5nTGluZSxpPXRoaXMuY29sdW1ucztsZXQgYSxzLHIsbixvO2lmKDA9PT10aGlzLm91dHB1dEJpdHMpe3RoaXMucm93c0RvbmUmJih0aGlzLmVvZj0hMCk7aWYodGhpcy5lb2YpcmV0dXJuLTE7dGhpcy5lcnI9ITE7bGV0IHIsbyxnO2lmKHRoaXMubmV4dExpbmUyRCl7Zm9yKG49MDt0W25dPGk7KytuKWVbbl09dFtuXTtlW24rK109aTtlW25dPWk7dFswXT0wO3RoaXMuY29kaW5nUG9zPTA7YT0wO3M9MDtmb3IoO3RbdGhpcy5jb2RpbmdQb3NdPGk7KXtyPXRoaXMuX2dldFR3b0RpbUNvZGUoKTtzd2l0Y2gocil7Y2FzZSAwOnRoaXMuX2FkZFBpeGVscyhlW2ErMV0scyk7ZVthKzFdPGkmJihhKz0yKTticmVhaztjYXNlIDE6cj1vPTA7aWYocyl7ZG97cis9Zz10aGlzLl9nZXRCbGFja0NvZGUoKX13aGlsZShnPj02NCk7ZG97bys9Zz10aGlzLl9nZXRXaGl0ZUNvZGUoKX13aGlsZShnPj02NCl9ZWxzZXtkb3tyKz1nPXRoaXMuX2dldFdoaXRlQ29kZSgpfXdoaWxlKGc+PTY0KTtkb3tvKz1nPXRoaXMuX2dldEJsYWNrQ29kZSgpfXdoaWxlKGc+PTY0KX10aGlzLl9hZGRQaXhlbHModFt0aGlzLmNvZGluZ1Bvc10rcixzKTt0W3RoaXMuY29kaW5nUG9zXTxpJiZ0aGlzLl9hZGRQaXhlbHModFt0aGlzLmNvZGluZ1Bvc10rbywxXnMpO2Zvcig7ZVthXTw9dFt0aGlzLmNvZGluZ1Bvc10mJmVbYV08aTspYSs9MjticmVhaztjYXNlIDc6dGhpcy5fYWRkUGl4ZWxzKGVbYV0rMyxzKTtzXj0xO2lmKHRbdGhpcy5jb2RpbmdQb3NdPGkpeysrYTtmb3IoO2VbYV08PXRbdGhpcy5jb2RpbmdQb3NdJiZlW2FdPGk7KWErPTJ9YnJlYWs7Y2FzZSA1OnRoaXMuX2FkZFBpeGVscyhlW2FdKzIscyk7c149MTtpZih0W3RoaXMuY29kaW5nUG9zXTxpKXsrK2E7Zm9yKDtlW2FdPD10W3RoaXMuY29kaW5nUG9zXSYmZVthXTxpOylhKz0yfWJyZWFrO2Nhc2UgMzp0aGlzLl9hZGRQaXhlbHMoZVthXSsxLHMpO3NePTE7aWYodFt0aGlzLmNvZGluZ1Bvc108aSl7KythO2Zvcig7ZVthXTw9dFt0aGlzLmNvZGluZ1Bvc10mJmVbYV08aTspYSs9Mn1icmVhaztjYXNlIDI6dGhpcy5fYWRkUGl4ZWxzKGVbYV0scyk7c149MTtpZih0W3RoaXMuY29kaW5nUG9zXTxpKXsrK2E7Zm9yKDtlW2FdPD10W3RoaXMuY29kaW5nUG9zXSYmZVthXTxpOylhKz0yfWJyZWFrO2Nhc2UgODp0aGlzLl9hZGRQaXhlbHNOZWcoZVthXS0zLHMpO3NePTE7aWYodFt0aGlzLmNvZGluZ1Bvc108aSl7YT4wPy0tYTorK2E7Zm9yKDtlW2FdPD10W3RoaXMuY29kaW5nUG9zXSYmZVthXTxpOylhKz0yfWJyZWFrO2Nhc2UgNjp0aGlzLl9hZGRQaXhlbHNOZWcoZVthXS0yLHMpO3NePTE7aWYodFt0aGlzLmNvZGluZ1Bvc108aSl7YT4wPy0tYTorK2E7Zm9yKDtlW2FdPD10W3RoaXMuY29kaW5nUG9zXSYmZVthXTxpOylhKz0yfWJyZWFrO2Nhc2UgNDp0aGlzLl9hZGRQaXhlbHNOZWcoZVthXS0xLHMpO3NePTE7aWYodFt0aGlzLmNvZGluZ1Bvc108aSl7YT4wPy0tYTorK2E7Zm9yKDtlW2FdPD10W3RoaXMuY29kaW5nUG9zXSYmZVthXTxpOylhKz0yfWJyZWFrO2Nhc2UgTnQ6dGhpcy5fYWRkUGl4ZWxzKGksMCk7dGhpcy5lb2Y9ITA7YnJlYWs7ZGVmYXVsdDppbmZvKCJiYWQgMmQgY29kZSIpO3RoaXMuX2FkZFBpeGVscyhpLDApO3RoaXMuZXJyPSEwfX19ZWxzZXt0WzBdPTA7dGhpcy5jb2RpbmdQb3M9MDtzPTA7Zm9yKDt0W3RoaXMuY29kaW5nUG9zXTxpOyl7cj0wO2lmKHMpZG97cis9Zz10aGlzLl9nZXRCbGFja0NvZGUoKX13aGlsZShnPj02NCk7ZWxzZSBkb3tyKz1nPXRoaXMuX2dldFdoaXRlQ29kZSgpfXdoaWxlKGc+PTY0KTt0aGlzLl9hZGRQaXhlbHModFt0aGlzLmNvZGluZ1Bvc10rcixzKTtzXj0xfX1sZXQgYz0hMTt0aGlzLmJ5dGVBbGlnbiYmKHRoaXMuaW5wdXRCaXRzJj0tOCk7aWYodGhpcy5lb2Jsb2NrfHx0aGlzLnJvdyE9PXRoaXMucm93cy0xKXtyPXRoaXMuX2xvb2tCaXRzKDEyKTtpZih0aGlzLmVvbGluZSlmb3IoO3IhPT1OdCYmMSE9PXI7KXt0aGlzLl9lYXRCaXRzKDEpO3I9dGhpcy5fbG9va0JpdHMoMTIpfWVsc2UgZm9yKDswPT09cjspe3RoaXMuX2VhdEJpdHMoMSk7cj10aGlzLl9sb29rQml0cygxMil9aWYoMT09PXIpe3RoaXMuX2VhdEJpdHMoMTIpO2M9ITB9ZWxzZSByPT09TnQmJih0aGlzLmVvZj0hMCl9ZWxzZSB0aGlzLnJvd3NEb25lPSEwO2lmKCF0aGlzLmVvZiYmdGhpcy5lbmNvZGluZz4wJiYhdGhpcy5yb3dzRG9uZSl7dGhpcy5uZXh0TGluZTJEPSF0aGlzLl9sb29rQml0cygxKTt0aGlzLl9lYXRCaXRzKDEpfWlmKHRoaXMuZW9ibG9jayYmYyYmdGhpcy5ieXRlQWxpZ24pe3I9dGhpcy5fbG9va0JpdHMoMTIpO2lmKDE9PT1yKXt0aGlzLl9lYXRCaXRzKDEyKTtpZih0aGlzLmVuY29kaW5nPjApe3RoaXMuX2xvb2tCaXRzKDEpO3RoaXMuX2VhdEJpdHMoMSl9aWYodGhpcy5lbmNvZGluZz49MClmb3Iobj0wO248NDsrK24pe3I9dGhpcy5fbG9va0JpdHMoMTIpOzEhPT1yJiZpbmZvKCJiYWQgcnRjIGNvZGU6ICIrcik7dGhpcy5fZWF0Qml0cygxMik7aWYodGhpcy5lbmNvZGluZz4wKXt0aGlzLl9sb29rQml0cygxKTt0aGlzLl9lYXRCaXRzKDEpfX10aGlzLmVvZj0hMH19ZWxzZSBpZih0aGlzLmVyciYmdGhpcy5lb2xpbmUpe2Zvcig7Oyl7cj10aGlzLl9sb29rQml0cygxMyk7aWYocj09PU50KXt0aGlzLmVvZj0hMDtyZXR1cm4tMX1pZihyPj4xPT0xKWJyZWFrO3RoaXMuX2VhdEJpdHMoMSl9dGhpcy5fZWF0Qml0cygxMik7aWYodGhpcy5lbmNvZGluZz4wKXt0aGlzLl9lYXRCaXRzKDEpO3RoaXMubmV4dExpbmUyRD0hKDEmcil9fXRoaXMub3V0cHV0Qml0cz10WzBdPjA/dFt0aGlzLmNvZGluZ1Bvcz0wXTp0W3RoaXMuY29kaW5nUG9zPTFdO3RoaXMucm93Kyt9aWYodGhpcy5vdXRwdXRCaXRzPj04KXtvPTEmdGhpcy5jb2RpbmdQb3M/MDoyNTU7dGhpcy5vdXRwdXRCaXRzLT04O2lmKDA9PT10aGlzLm91dHB1dEJpdHMmJnRbdGhpcy5jb2RpbmdQb3NdPGkpe3RoaXMuY29kaW5nUG9zKys7dGhpcy5vdXRwdXRCaXRzPXRbdGhpcy5jb2RpbmdQb3NdLXRbdGhpcy5jb2RpbmdQb3MtMV19fWVsc2V7cj04O289MDtkb3tpZigibnVtYmVyIiE9dHlwZW9mIHRoaXMub3V0cHV0Qml0cyl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoJ0ludmFsaWQgL0NDSVRURmF4RGVjb2RlIGRhdGEsICJvdXRwdXRCaXRzIiBtdXN0IGJlIGEgbnVtYmVyLicpO2lmKHRoaXMub3V0cHV0Qml0cz5yKXtvPDw9cjsxJnRoaXMuY29kaW5nUG9zfHwob3w9MjU1Pj44LXIpO3RoaXMub3V0cHV0Qml0cy09cjtyPTB9ZWxzZXtvPDw9dGhpcy5vdXRwdXRCaXRzOzEmdGhpcy5jb2RpbmdQb3N8fChvfD0yNTU+PjgtdGhpcy5vdXRwdXRCaXRzKTtyLT10aGlzLm91dHB1dEJpdHM7dGhpcy5vdXRwdXRCaXRzPTA7aWYodFt0aGlzLmNvZGluZ1Bvc108aSl7dGhpcy5jb2RpbmdQb3MrKzt0aGlzLm91dHB1dEJpdHM9dFt0aGlzLmNvZGluZ1Bvc10tdFt0aGlzLmNvZGluZ1Bvcy0xXX1lbHNlIGlmKHI+MCl7bzw8PXI7cj0wfX19d2hpbGUocil9dGhpcy5ibGFjayYmKG9ePTI1NSk7cmV0dXJuIG99X2FkZFBpeGVscyhlLHQpe2NvbnN0IGk9dGhpcy5jb2RpbmdMaW5lO2xldCBhPXRoaXMuY29kaW5nUG9zO2lmKGU+aVthXSl7aWYoZT50aGlzLmNvbHVtbnMpe2luZm8oInJvdyBpcyB3cm9uZyBsZW5ndGgiKTt0aGlzLmVycj0hMDtlPXRoaXMuY29sdW1uc30xJmFedCYmKythO2lbYV09ZX10aGlzLmNvZGluZ1Bvcz1hfV9hZGRQaXhlbHNOZWcoZSx0KXtjb25zdCBpPXRoaXMuY29kaW5nTGluZTtsZXQgYT10aGlzLmNvZGluZ1BvcztpZihlPmlbYV0pe2lmKGU+dGhpcy5jb2x1bW5zKXtpbmZvKCJyb3cgaXMgd3JvbmcgbGVuZ3RoIik7dGhpcy5lcnI9ITA7ZT10aGlzLmNvbHVtbnN9MSZhXnQmJisrYTtpW2FdPWV9ZWxzZSBpZihlPGlbYV0pe2lmKGU8MCl7aW5mbygiaW52YWxpZCBjb2RlIik7dGhpcy5lcnI9ITA7ZT0wfWZvcig7YT4wJiZlPGlbYS0xXTspLS1hO2lbYV09ZX10aGlzLmNvZGluZ1Bvcz1hfV9maW5kVGFibGVDb2RlKGUsdCxpLGEpe2NvbnN0IHM9YXx8MDtmb3IobGV0IGE9ZTthPD10OysrYSl7bGV0IGU9dGhpcy5fbG9va0JpdHMoYSk7aWYoZT09PU50KXJldHVyblshMCwxLCExXTthPHQmJihlPDw9dC1hKTtpZighc3x8ZT49cyl7Y29uc3QgdD1pW2Utc107aWYodFswXT09PWEpe3RoaXMuX2VhdEJpdHMoYSk7cmV0dXJuWyEwLHRbMV0sITBdfX19cmV0dXJuWyExLDAsITFdfV9nZXRUd29EaW1Db2RlKCl7bGV0IGUsdD0wO2lmKHRoaXMuZW9ibG9jayl7dD10aGlzLl9sb29rQml0cyg3KTtlPUd0W3RdO2lmKGU/LlswXT4wKXt0aGlzLl9lYXRCaXRzKGVbMF0pO3JldHVybiBlWzFdfX1lbHNle2NvbnN0IGU9dGhpcy5fZmluZFRhYmxlQ29kZSgxLDcsR3QpO2lmKGVbMF0mJmVbMl0pcmV0dXJuIGVbMV19aW5mbygiQmFkIHR3byBkaW0gY29kZSIpO3JldHVybiBOdH1fZ2V0V2hpdGVDb2RlKCl7bGV0IGUsdD0wO2lmKHRoaXMuZW9ibG9jayl7dD10aGlzLl9sb29rQml0cygxMik7aWYodD09PU50KXJldHVybiAxO2U9dD4+NT9NdFt0Pj4zXTp4dFt0XTtpZihlWzBdPjApe3RoaXMuX2VhdEJpdHMoZVswXSk7cmV0dXJuIGVbMV19fWVsc2V7bGV0IGU9dGhpcy5fZmluZFRhYmxlQ29kZSgxLDksTXQpO2lmKGVbMF0pcmV0dXJuIGVbMV07ZT10aGlzLl9maW5kVGFibGVDb2RlKDExLDEyLHh0KTtpZihlWzBdKXJldHVybiBlWzFdfWluZm8oImJhZCB3aGl0ZSBjb2RlIik7dGhpcy5fZWF0Qml0cygxKTtyZXR1cm4gMX1fZ2V0QmxhY2tDb2RlKCl7bGV0IGUsdDtpZih0aGlzLmVvYmxvY2spe2U9dGhpcy5fbG9va0JpdHMoMTMpO2lmKGU9PT1OdClyZXR1cm4gMTt0PWU+Pjc/IShlPj45KSYmZT4+Nz9MdFsoZT4+MSktNjRdOkp0W2U+PjddOlV0W2VdO2lmKHRbMF0+MCl7dGhpcy5fZWF0Qml0cyh0WzBdKTtyZXR1cm4gdFsxXX19ZWxzZXtsZXQgZT10aGlzLl9maW5kVGFibGVDb2RlKDIsNixKdCk7aWYoZVswXSlyZXR1cm4gZVsxXTtlPXRoaXMuX2ZpbmRUYWJsZUNvZGUoNywxMixMdCw2NCk7aWYoZVswXSlyZXR1cm4gZVsxXTtlPXRoaXMuX2ZpbmRUYWJsZUNvZGUoMTAsMTMsVXQpO2lmKGVbMF0pcmV0dXJuIGVbMV19aW5mbygiYmFkIGJsYWNrIGNvZGUiKTt0aGlzLl9lYXRCaXRzKDEpO3JldHVybiAxfV9sb29rQml0cyhlKXtsZXQgdDtmb3IoO3RoaXMuaW5wdXRCaXRzPGU7KXtpZigtMT09PSh0PXRoaXMuc291cmNlLm5leHQoKSkpcmV0dXJuIDA9PT10aGlzLmlucHV0Qml0cz9OdDp0aGlzLmlucHV0QnVmPDxlLXRoaXMuaW5wdXRCaXRzJjY1NTM1Pj4xNi1lO3RoaXMuaW5wdXRCdWY9dGhpcy5pbnB1dEJ1Zjw8OHx0O3RoaXMuaW5wdXRCaXRzKz04fXJldHVybiB0aGlzLmlucHV0QnVmPj50aGlzLmlucHV0Qml0cy1lJjY1NTM1Pj4xNi1lfV9lYXRCaXRzKGUpeyh0aGlzLmlucHV0Qml0cy09ZSk8MCYmKHRoaXMuaW5wdXRCaXRzPTApfX1jbGFzcyBDQ0lUVEZheFN0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIodCk7dGhpcy5zdHI9ZTt0aGlzLmRpY3Q9ZS5kaWN0O2kgaW5zdGFuY2VvZiBEaWN0fHwoaT1EaWN0LmVtcHR5KTtjb25zdCBhPXtuZXh0OigpPT5lLmdldEJ5dGUoKX07dGhpcy5jY2l0dEZheERlY29kZXI9bmV3IENDSVRURmF4RGVjb2RlcihhLHtLOmkuZ2V0KCJLIiksRW5kT2ZMaW5lOmkuZ2V0KCJFbmRPZkxpbmUiKSxFbmNvZGVkQnl0ZUFsaWduOmkuZ2V0KCJFbmNvZGVkQnl0ZUFsaWduIiksQ29sdW1uczppLmdldCgiQ29sdW1ucyIpLFJvd3M6aS5nZXQoIlJvd3MiKSxFbmRPZkJsb2NrOmkuZ2V0KCJFbmRPZkJsb2NrIiksQmxhY2tJczE6aS5nZXQoIkJsYWNrSXMxIil9KX1yZWFkQmxvY2soKXtmb3IoOyF0aGlzLmVvZjspe2NvbnN0IGU9dGhpcy5jY2l0dEZheERlY29kZXIucmVhZE5leHRDaGFyKCk7aWYoLTE9PT1lKXt0aGlzLmVvZj0hMDtyZXR1cm59dGhpcy5lbnN1cmVCdWZmZXIodGhpcy5idWZmZXJMZW5ndGgrMSk7dGhpcy5idWZmZXJbdGhpcy5idWZmZXJMZW5ndGgrK109ZX19fWNvbnN0IEh0PW5ldyBJbnQzMkFycmF5KFsxNiwxNywxOCwwLDgsNyw5LDYsMTAsNSwxMSw0LDEyLDMsMTMsMiwxNCwxLDE1XSksWXQ9bmV3IEludDMyQXJyYXkoWzMsNCw1LDYsNyw4LDksMTAsNjU1NDcsNjU1NDksNjU1NTEsNjU1NTMsMTMxMDkxLDEzMTA5NSwxMzEwOTksMTMxMTAzLDE5NjY0MywxOTY2NTEsMTk2NjU5LDE5NjY2NywyNjIyMTEsMjYyMjI3LDI2MjI0MywyNjIyNTksMzI3ODExLDMyNzg0MywzMjc4NzUsMzI3OTA3LDI1OCwyNTgsMjU4XSksdnQ9bmV3IEludDMyQXJyYXkoWzEsMiwzLDQsNjU1NDEsNjU1NDMsMTMxMDgxLDEzMTA4NSwxOTY2MjUsMTk2NjMzLDI2MjE3NywyNjIxOTMsMzI3NzQ1LDMyNzc3NywzOTMzNDUsMzkzNDA5LDQ1OTAwOSw0NTkxMzcsNTI0ODAxLDUyNTA1Nyw1OTA4NDksNTkxMzYxLDY1NzQwOSw2NTg0MzMsNzI0OTkzLDcyNzA0MSw3OTQ2MjUsNzk4NzIxLDg2ODM1Myw4NzY1NDVdKSxLdD1bbmV3IEludDMyQXJyYXkoWzQ1OTAwOCw1MjQzNjgsNTI0MzA0LDUyNDU2OCw0NTkwMjQsNTI0NDAwLDUyNDMzNiw1OTAwMTYsNDU5MDE2LDUyNDM4NCw1MjQzMjAsNTg5OTg0LDUyNDI4OCw1MjQ0MTYsNTI0MzUyLDU5MDA0OCw0NTkwMTIsNTI0Mzc2LDUyNDMxMiw1ODk5NjgsNDU5MDI4LDUyNDQwOCw1MjQzNDQsNTkwMDMyLDQ1OTAyMCw1MjQzOTIsNTI0MzI4LDU5ZTQsNTI0Mjk2LDUyNDQyNCw1MjQzNjAsNTkwMDY0LDQ1OTAxMCw1MjQzNzIsNTI0MzA4LDUyNDU3Miw0NTkwMjYsNTI0NDA0LDUyNDM0MCw1OTAwMjQsNDU5MDE4LDUyNDM4OCw1MjQzMjQsNTg5OTkyLDUyNDI5Miw1MjQ0MjAsNTI0MzU2LDU5MDA1Niw0NTkwMTQsNTI0MzgwLDUyNDMxNiw1ODk5NzYsNDU5MDMwLDUyNDQxMiw1MjQzNDgsNTkwMDQwLDQ1OTAyMiw1MjQzOTYsNTI0MzMyLDU5MDAwOCw1MjQzMDAsNTI0NDI4LDUyNDM2NCw1OTAwNzIsNDU5MDA5LDUyNDM3MCw1MjQzMDYsNTI0NTcwLDQ1OTAyNSw1MjQ0MDIsNTI0MzM4LDU5MDAyMCw0NTkwMTcsNTI0Mzg2LDUyNDMyMiw1ODk5ODgsNTI0MjkwLDUyNDQxOCw1MjQzNTQsNTkwMDUyLDQ1OTAxMyw1MjQzNzgsNTI0MzE0LDU4OTk3Miw0NTkwMjksNTI0NDEwLDUyNDM0Niw1OTAwMzYsNDU5MDIxLDUyNDM5NCw1MjQzMzAsNTkwMDA0LDUyNDI5OCw1MjQ0MjYsNTI0MzYyLDU5MDA2OCw0NTkwMTEsNTI0Mzc0LDUyNDMxMCw1MjQ1NzQsNDU5MDI3LDUyNDQwNiw1MjQzNDIsNTkwMDI4LDQ1OTAxOSw1MjQzOTAsNTI0MzI2LDU4OTk5Niw1MjQyOTQsNTI0NDIyLDUyNDM1OCw1OTAwNjAsNDU5MDE1LDUyNDM4Miw1MjQzMTgsNTg5OTgwLDQ1OTAzMSw1MjQ0MTQsNTI0MzUwLDU5MDA0NCw0NTkwMjMsNTI0Mzk4LDUyNDMzNCw1OTAwMTIsNTI0MzAyLDUyNDQzMCw1MjQzNjYsNTkwMDc2LDQ1OTAwOCw1MjQzNjksNTI0MzA1LDUyNDU2OSw0NTkwMjQsNTI0NDAxLDUyNDMzNyw1OTAwMTgsNDU5MDE2LDUyNDM4NSw1MjQzMjEsNTg5OTg2LDUyNDI4OSw1MjQ0MTcsNTI0MzUzLDU5MDA1MCw0NTkwMTIsNTI0Mzc3LDUyNDMxMyw1ODk5NzAsNDU5MDI4LDUyNDQwOSw1MjQzNDUsNTkwMDM0LDQ1OTAyMCw1MjQzOTMsNTI0MzI5LDU5MDAwMiw1MjQyOTcsNTI0NDI1LDUyNDM2MSw1OTAwNjYsNDU5MDEwLDUyNDM3Myw1MjQzMDksNTI0NTczLDQ1OTAyNiw1MjQ0MDUsNTI0MzQxLDU5MDAyNiw0NTkwMTgsNTI0Mzg5LDUyNDMyNSw1ODk5OTQsNTI0MjkzLDUyNDQyMSw1MjQzNTcsNTkwMDU4LDQ1OTAxNCw1MjQzODEsNTI0MzE3LDU4OTk3OCw0NTkwMzAsNTI0NDEzLDUyNDM0OSw1OTAwNDIsNDU5MDIyLDUyNDM5Nyw1MjQzMzMsNTkwMDEwLDUyNDMwMSw1MjQ0MjksNTI0MzY1LDU5MDA3NCw0NTkwMDksNTI0MzcxLDUyNDMwNyw1MjQ1NzEsNDU5MDI1LDUyNDQwMyw1MjQzMzksNTkwMDIyLDQ1OTAxNyw1MjQzODcsNTI0MzIzLDU4OTk5MCw1MjQyOTEsNTI0NDE5LDUyNDM1NSw1OTAwNTQsNDU5MDEzLDUyNDM3OSw1MjQzMTUsNTg5OTc0LDQ1OTAyOSw1MjQ0MTEsNTI0MzQ3LDU5MDAzOCw0NTkwMjEsNTI0Mzk1LDUyNDMzMSw1OTAwMDYsNTI0Mjk5LDUyNDQyNyw1MjQzNjMsNTkwMDcwLDQ1OTAxMSw1MjQzNzUsNTI0MzExLDUyNDU3NSw0NTkwMjcsNTI0NDA3LDUyNDM0Myw1OTAwMzAsNDU5MDE5LDUyNDM5MSw1MjQzMjcsNTg5OTk4LDUyNDI5NSw1MjQ0MjMsNTI0MzU5LDU5MDA2Miw0NTkwMTUsNTI0MzgzLDUyNDMxOSw1ODk5ODIsNDU5MDMxLDUyNDQxNSw1MjQzNTEsNTkwMDQ2LDQ1OTAyMyw1MjQzOTksNTI0MzM1LDU5MDAxNCw1MjQzMDMsNTI0NDMxLDUyNDM2Nyw1OTAwNzgsNDU5MDA4LDUyNDM2OCw1MjQzMDQsNTI0NTY4LDQ1OTAyNCw1MjQ0MDAsNTI0MzM2LDU5MDAxNyw0NTkwMTYsNTI0Mzg0LDUyNDMyMCw1ODk5ODUsNTI0Mjg4LDUyNDQxNiw1MjQzNTIsNTkwMDQ5LDQ1OTAxMiw1MjQzNzYsNTI0MzEyLDU4OTk2OSw0NTkwMjgsNTI0NDA4LDUyNDM0NCw1OTAwMzMsNDU5MDIwLDUyNDM5Miw1MjQzMjgsNTkwMDAxLDUyNDI5Niw1MjQ0MjQsNTI0MzYwLDU5MDA2NSw0NTkwMTAsNTI0MzcyLDUyNDMwOCw1MjQ1NzIsNDU5MDI2LDUyNDQwNCw1MjQzNDAsNTkwMDI1LDQ1OTAxOCw1MjQzODgsNTI0MzI0LDU4OTk5Myw1MjQyOTIsNTI0NDIwLDUyNDM1Niw1OTAwNTcsNDU5MDE0LDUyNDM4MCw1MjQzMTYsNTg5OTc3LDQ1OTAzMCw1MjQ0MTIsNTI0MzQ4LDU5MDA0MSw0NTkwMjIsNTI0Mzk2LDUyNDMzMiw1OTAwMDksNTI0MzAwLDUyNDQyOCw1MjQzNjQsNTkwMDczLDQ1OTAwOSw1MjQzNzAsNTI0MzA2LDUyNDU3MCw0NTkwMjUsNTI0NDAyLDUyNDMzOCw1OTAwMjEsNDU5MDE3LDUyNDM4Niw1MjQzMjIsNTg5OTg5LDUyNDI5MCw1MjQ0MTgsNTI0MzU0LDU5MDA1Myw0NTkwMTMsNTI0Mzc4LDUyNDMxNCw1ODk5NzMsNDU5MDI5LDUyNDQxMCw1MjQzNDYsNTkwMDM3LDQ1OTAyMSw1MjQzOTQsNTI0MzMwLDU5MDAwNSw1MjQyOTgsNTI0NDI2LDUyNDM2Miw1OTAwNjksNDU5MDExLDUyNDM3NCw1MjQzMTAsNTI0NTc0LDQ1OTAyNyw1MjQ0MDYsNTI0MzQyLDU5MDAyOSw0NTkwMTksNTI0MzkwLDUyNDMyNiw1ODk5OTcsNTI0Mjk0LDUyNDQyMiw1MjQzNTgsNTkwMDYxLDQ1OTAxNSw1MjQzODIsNTI0MzE4LDU4OTk4MSw0NTkwMzEsNTI0NDE0LDUyNDM1MCw1OTAwNDUsNDU5MDIzLDUyNDM5OCw1MjQzMzQsNTkwMDEzLDUyNDMwMiw1MjQ0MzAsNTI0MzY2LDU5MDA3Nyw0NTkwMDgsNTI0MzY5LDUyNDMwNSw1MjQ1NjksNDU5MDI0LDUyNDQwMSw1MjQzMzcsNTkwMDE5LDQ1OTAxNiw1MjQzODUsNTI0MzIxLDU4OTk4Nyw1MjQyODksNTI0NDE3LDUyNDM1Myw1OTAwNTEsNDU5MDEyLDUyNDM3Nyw1MjQzMTMsNTg5OTcxLDQ1OTAyOCw1MjQ0MDksNTI0MzQ1LDU5MDAzNSw0NTkwMjAsNTI0MzkzLDUyNDMyOSw1OTAwMDMsNTI0Mjk3LDUyNDQyNSw1MjQzNjEsNTkwMDY3LDQ1OTAxMCw1MjQzNzMsNTI0MzA5LDUyNDU3Myw0NTkwMjYsNTI0NDA1LDUyNDM0MSw1OTAwMjcsNDU5MDE4LDUyNDM4OSw1MjQzMjUsNTg5OTk1LDUyNDI5Myw1MjQ0MjEsNTI0MzU3LDU5MDA1OSw0NTkwMTQsNTI0MzgxLDUyNDMxNyw1ODk5NzksNDU5MDMwLDUyNDQxMyw1MjQzNDksNTkwMDQzLDQ1OTAyMiw1MjQzOTcsNTI0MzMzLDU5MDAxMSw1MjQzMDEsNTI0NDI5LDUyNDM2NSw1OTAwNzUsNDU5MDA5LDUyNDM3MSw1MjQzMDcsNTI0NTcxLDQ1OTAyNSw1MjQ0MDMsNTI0MzM5LDU5MDAyMyw0NTkwMTcsNTI0Mzg3LDUyNDMyMyw1ODk5OTEsNTI0MjkxLDUyNDQxOSw1MjQzNTUsNTkwMDU1LDQ1OTAxMyw1MjQzNzksNTI0MzE1LDU4OTk3NSw0NTkwMjksNTI0NDExLDUyNDM0Nyw1OTAwMzksNDU5MDIxLDUyNDM5NSw1MjQzMzEsNTkwMDA3LDUyNDI5OSw1MjQ0MjcsNTI0MzYzLDU5MDA3MSw0NTkwMTEsNTI0Mzc1LDUyNDMxMSw1MjQ1NzUsNDU5MDI3LDUyNDQwNyw1MjQzNDMsNTkwMDMxLDQ1OTAxOSw1MjQzOTEsNTI0MzI3LDU4OTk5OSw1MjQyOTUsNTI0NDIzLDUyNDM1OSw1OTAwNjMsNDU5MDE1LDUyNDM4Myw1MjQzMTksNTg5OTgzLDQ1OTAzMSw1MjQ0MTUsNTI0MzUxLDU5MDA0Nyw0NTkwMjMsNTI0Mzk5LDUyNDMzNSw1OTAwMTUsNTI0MzAzLDUyNDQzMSw1MjQzNjcsNTkwMDc5XSksOV0sVHQ9W25ldyBJbnQzMkFycmF5KFszMjc2ODAsMzI3Njk2LDMyNzY4OCwzMjc3MDQsMzI3Njg0LDMyNzcwMCwzMjc2OTIsMzI3NzA4LDMyNzY4MiwzMjc2OTgsMzI3NjkwLDMyNzcwNiwzMjc2ODYsMzI3NzAyLDMyNzY5NCwwLDMyNzY4MSwzMjc2OTcsMzI3Njg5LDMyNzcwNSwzMjc2ODUsMzI3NzAxLDMyNzY5MywzMjc3MDksMzI3NjgzLDMyNzY5OSwzMjc2OTEsMzI3NzA3LDMyNzY4NywzMjc3MDMsMzI3Njk1LDBdKSw1XTtjbGFzcyBGbGF0ZVN0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKHQpO3RoaXMuc3RyPWU7dGhpcy5kaWN0PWUuZGljdDtjb25zdCBpPWUuZ2V0Qnl0ZSgpLGE9ZS5nZXRCeXRlKCk7aWYoLTE9PT1pfHwtMT09PWEpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIGhlYWRlciBpbiBmbGF0ZSBzdHJlYW06ICR7aX0sICR7YX1gKTtpZig4IT0oMTUmaSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBVbmtub3duIGNvbXByZXNzaW9uIG1ldGhvZCBpbiBmbGF0ZSBzdHJlYW06ICR7aX0sICR7YX1gKTtpZigoKGk8PDgpK2EpJTMxIT0wKXRocm93IG5ldyBGb3JtYXRFcnJvcihgQmFkIEZDSEVDSyBpbiBmbGF0ZSBzdHJlYW06ICR7aX0sICR7YX1gKTtpZigzMiZhKXRocm93IG5ldyBGb3JtYXRFcnJvcihgRkRJQ1QgYml0IHNldCBpbiBmbGF0ZSBzdHJlYW06ICR7aX0sICR7YX1gKTt0aGlzLmNvZGVTaXplPTA7dGhpcy5jb2RlQnVmPTB9Z2V0Qml0cyhlKXtjb25zdCB0PXRoaXMuc3RyO2xldCBpLGE9dGhpcy5jb2RlU2l6ZSxzPXRoaXMuY29kZUJ1Zjtmb3IoO2E8ZTspe2lmKC0xPT09KGk9dC5nZXRCeXRlKCkpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiQmFkIGVuY29kaW5nIGluIGZsYXRlIHN0cmVhbSIpO3N8PWk8PGE7YSs9OH1pPXMmKDE8PGUpLTE7dGhpcy5jb2RlQnVmPXM+PmU7dGhpcy5jb2RlU2l6ZT1hLT1lO3JldHVybiBpfWdldENvZGUoZSl7Y29uc3QgdD10aGlzLnN0cixpPWVbMF0sYT1lWzFdO2xldCBzLHI9dGhpcy5jb2RlU2l6ZSxuPXRoaXMuY29kZUJ1Zjtmb3IoO3I8YSYmLTEhPT0ocz10LmdldEJ5dGUoKSk7KXtufD1zPDxyO3IrPTh9Y29uc3Qgbz1pW24mKDE8PGEpLTFdLGc9bz4+MTYsYz02NTUzNSZvO2lmKGc8MXx8cjxnKXRocm93IG5ldyBGb3JtYXRFcnJvcigiQmFkIGVuY29kaW5nIGluIGZsYXRlIHN0cmVhbSIpO3RoaXMuY29kZUJ1Zj1uPj5nO3RoaXMuY29kZVNpemU9ci1nO3JldHVybiBjfWdlbmVyYXRlSHVmZm1hblRhYmxlKGUpe2NvbnN0IHQ9ZS5sZW5ndGg7bGV0IGksYT0wO2ZvcihpPTA7aTx0OysraSllW2ldPmEmJihhPWVbaV0pO2NvbnN0IHM9MTw8YSxyPW5ldyBJbnQzMkFycmF5KHMpO2ZvcihsZXQgbj0xLG89MCxnPTI7bjw9YTsrK24sbzw8PTEsZzw8PTEpZm9yKGxldCBhPTA7YTx0OysrYSlpZihlW2FdPT09bil7bGV0IGU9MCx0PW87Zm9yKGk9MDtpPG47KytpKXtlPWU8PDF8MSZ0O3Q+Pj0xfWZvcihpPWU7aTxzO2krPWcpcltpXT1uPDwxNnxhOysrb31yZXR1cm5bcixhXX0jbShlKXtpbmZvKGUpO3RoaXMuZW9mPSEwfXJlYWRCbG9jaygpe2xldCBlLHQ7Y29uc3QgaT10aGlzLnN0cjtsZXQgYSxzLHI9dGhpcy5nZXRCaXRzKDMpOzEmciYmKHRoaXMuZW9mPSEwKTtyPj49MTtpZigwPT09cil7bGV0IHQ7aWYoLTE9PT0odD1pLmdldEJ5dGUoKSkpe3RoaXMuI20oIkJhZCBibG9jayBoZWFkZXIgaW4gZmxhdGUgc3RyZWFtIik7cmV0dXJufWxldCBhPXQ7aWYoLTE9PT0odD1pLmdldEJ5dGUoKSkpe3RoaXMuI20oIkJhZCBibG9jayBoZWFkZXIgaW4gZmxhdGUgc3RyZWFtIik7cmV0dXJufWF8PXQ8PDg7aWYoLTE9PT0odD1pLmdldEJ5dGUoKSkpe3RoaXMuI20oIkJhZCBibG9jayBoZWFkZXIgaW4gZmxhdGUgc3RyZWFtIik7cmV0dXJufWxldCBzPXQ7aWYoLTE9PT0odD1pLmdldEJ5dGUoKSkpe3RoaXMuI20oIkJhZCBibG9jayBoZWFkZXIgaW4gZmxhdGUgc3RyZWFtIik7cmV0dXJufXN8PXQ8PDg7aWYocyE9PSg2NTUzNSZ+YSkmJigwIT09YXx8MCE9PXMpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiQmFkIHVuY29tcHJlc3NlZCBibG9jayBsZW5ndGggaW4gZmxhdGUgc3RyZWFtIik7dGhpcy5jb2RlQnVmPTA7dGhpcy5jb2RlU2l6ZT0wO2NvbnN0IHI9dGhpcy5idWZmZXJMZW5ndGgsbj1yK2E7ZT10aGlzLmVuc3VyZUJ1ZmZlcihuKTt0aGlzLmJ1ZmZlckxlbmd0aD1uO2lmKDA9PT1hKS0xPT09aS5wZWVrQnl0ZSgpJiYodGhpcy5lb2Y9ITApO2Vsc2V7Y29uc3QgdD1pLmdldEJ5dGVzKGEpO2Uuc2V0KHQscik7dC5sZW5ndGg8YSYmKHRoaXMuZW9mPSEwKX1yZXR1cm59aWYoMT09PXIpe2E9S3Q7cz1UdH1lbHNle2lmKDIhPT1yKXRocm93IG5ldyBGb3JtYXRFcnJvcigiVW5rbm93biBibG9jayB0eXBlIGluIGZsYXRlIHN0cmVhbSIpO3tjb25zdCBlPXRoaXMuZ2V0Qml0cyg1KSsyNTcsaT10aGlzLmdldEJpdHMoNSkrMSxyPXRoaXMuZ2V0Qml0cyg0KSs0LG49bmV3IFVpbnQ4QXJyYXkoSHQubGVuZ3RoKTtsZXQgbztmb3Iobz0wO288cjsrK28pbltIdFtvXV09dGhpcy5nZXRCaXRzKDMpO2NvbnN0IGc9dGhpcy5nZW5lcmF0ZUh1ZmZtYW5UYWJsZShuKTt0PTA7bz0wO2NvbnN0IGM9ZStpLGg9bmV3IFVpbnQ4QXJyYXkoYyk7bGV0IGwsQyxRO2Zvcig7bzxjOyl7Y29uc3QgZT10aGlzLmdldENvZGUoZyk7aWYoMTY9PT1lKXtsPTI7Qz0zO1E9dH1lbHNlIGlmKDE3PT09ZSl7bD0zO0M9MztRPXQ9MH1lbHNle2lmKDE4IT09ZSl7aFtvKytdPXQ9ZTtjb250aW51ZX1sPTc7Qz0xMTtRPXQ9MH1sZXQgaT10aGlzLmdldEJpdHMobCkrQztmb3IoO2ktLSA+MDspaFtvKytdPVF9YT10aGlzLmdlbmVyYXRlSHVmZm1hblRhYmxlKGguc3ViYXJyYXkoMCxlKSk7cz10aGlzLmdlbmVyYXRlSHVmZm1hblRhYmxlKGguc3ViYXJyYXkoZSxjKSl9fWU9dGhpcy5idWZmZXI7bGV0IG49ZT9lLmxlbmd0aDowLG89dGhpcy5idWZmZXJMZW5ndGg7Zm9yKDs7KXtsZXQgaT10aGlzLmdldENvZGUoYSk7aWYoaTwyNTYpe2lmKG8rMT49bil7ZT10aGlzLmVuc3VyZUJ1ZmZlcihvKzEpO249ZS5sZW5ndGh9ZVtvKytdPWk7Y29udGludWV9aWYoMjU2PT09aSl7dGhpcy5idWZmZXJMZW5ndGg9bztyZXR1cm59aS09MjU3O2k9WXRbaV07bGV0IHI9aT4+MTY7cj4wJiYocj10aGlzLmdldEJpdHMocikpO3Q9KDY1NTM1JmkpK3I7aT10aGlzLmdldENvZGUocyk7aT12dFtpXTtyPWk+PjE2O3I+MCYmKHI9dGhpcy5nZXRCaXRzKHIpKTtjb25zdCBnPSg2NTUzNSZpKStyO2lmKG8rdD49bil7ZT10aGlzLmVuc3VyZUJ1ZmZlcihvK3QpO249ZS5sZW5ndGh9Zm9yKGxldCBpPTA7aTx0OysraSwrK28pZVtvXT1lW28tZ119fX1jb25zdCBxdD1be3FlOjIyMDE3LG5tcHM6MSxubHBzOjEsc3dpdGNoRmxhZzoxfSx7cWU6MTMzMTMsbm1wczoyLG5scHM6Nixzd2l0Y2hGbGFnOjB9LHtxZTo2MTQ1LG5tcHM6MyxubHBzOjksc3dpdGNoRmxhZzowfSx7cWU6Mjc1MyxubXBzOjQsbmxwczoxMixzd2l0Y2hGbGFnOjB9LHtxZToxMzEzLG5tcHM6NSxubHBzOjI5LHN3aXRjaEZsYWc6MH0se3FlOjU0NSxubXBzOjM4LG5scHM6MzMsc3dpdGNoRmxhZzowfSx7cWU6MjIwMTcsbm1wczo3LG5scHM6Nixzd2l0Y2hGbGFnOjF9LHtxZToyMTUwNSxubXBzOjgsbmxwczoxNCxzd2l0Y2hGbGFnOjB9LHtxZToxODQzMyxubXBzOjksbmxwczoxNCxzd2l0Y2hGbGFnOjB9LHtxZToxNDMzNyxubXBzOjEwLG5scHM6MTQsc3dpdGNoRmxhZzowfSx7cWU6MTIyODksbm1wczoxMSxubHBzOjE3LHN3aXRjaEZsYWc6MH0se3FlOjkyMTcsbm1wczoxMixubHBzOjE4LHN3aXRjaEZsYWc6MH0se3FlOjcxNjksbm1wczoxMyxubHBzOjIwLHN3aXRjaEZsYWc6MH0se3FlOjU2MzMsbm1wczoyOSxubHBzOjIxLHN3aXRjaEZsYWc6MH0se3FlOjIyMDE3LG5tcHM6MTUsbmxwczoxNCxzd2l0Y2hGbGFnOjF9LHtxZToyMTUwNSxubXBzOjE2LG5scHM6MTQsc3dpdGNoRmxhZzowfSx7cWU6MjA3Mzcsbm1wczoxNyxubHBzOjE1LHN3aXRjaEZsYWc6MH0se3FlOjE4NDMzLG5tcHM6MTgsbmxwczoxNixzd2l0Y2hGbGFnOjB9LHtxZToxNDMzNyxubXBzOjE5LG5scHM6MTcsc3dpdGNoRmxhZzowfSx7cWU6MTMzMTMsbm1wczoyMCxubHBzOjE4LHN3aXRjaEZsYWc6MH0se3FlOjEyMjg5LG5tcHM6MjEsbmxwczoxOSxzd2l0Y2hGbGFnOjB9LHtxZToxMDI0MSxubXBzOjIyLG5scHM6MTksc3dpdGNoRmxhZzowfSx7cWU6OTIxNyxubXBzOjIzLG5scHM6MjAsc3dpdGNoRmxhZzowfSx7cWU6ODcwNSxubXBzOjI0LG5scHM6MjEsc3dpdGNoRmxhZzowfSx7cWU6NzE2OSxubXBzOjI1LG5scHM6MjIsc3dpdGNoRmxhZzowfSx7cWU6NjE0NSxubXBzOjI2LG5scHM6MjMsc3dpdGNoRmxhZzowfSx7cWU6NTYzMyxubXBzOjI3LG5scHM6MjQsc3dpdGNoRmxhZzowfSx7cWU6NTEyMSxubXBzOjI4LG5scHM6MjUsc3dpdGNoRmxhZzowfSx7cWU6NDYwOSxubXBzOjI5LG5scHM6MjYsc3dpdGNoRmxhZzowfSx7cWU6NDM1MyxubXBzOjMwLG5scHM6Mjcsc3dpdGNoRmxhZzowfSx7cWU6Mjc1MyxubXBzOjMxLG5scHM6Mjgsc3dpdGNoRmxhZzowfSx7cWU6MjQ5NyxubXBzOjMyLG5scHM6Mjksc3dpdGNoRmxhZzowfSx7cWU6MjIwOSxubXBzOjMzLG5scHM6MzAsc3dpdGNoRmxhZzowfSx7cWU6MTMxMyxubXBzOjM0LG5scHM6MzEsc3dpdGNoRmxhZzowfSx7cWU6MTA4OSxubXBzOjM1LG5scHM6MzIsc3dpdGNoRmxhZzowfSx7cWU6NjczLG5tcHM6MzYsbmxwczozMyxzd2l0Y2hGbGFnOjB9LHtxZTo1NDUsbm1wczozNyxubHBzOjM0LHN3aXRjaEZsYWc6MH0se3FlOjMyMSxubXBzOjM4LG5scHM6MzUsc3dpdGNoRmxhZzowfSx7cWU6MjczLG5tcHM6MzksbmxwczozNixzd2l0Y2hGbGFnOjB9LHtxZToxMzMsbm1wczo0MCxubHBzOjM3LHN3aXRjaEZsYWc6MH0se3FlOjczLG5tcHM6NDEsbmxwczozOCxzd2l0Y2hGbGFnOjB9LHtxZTozNyxubXBzOjQyLG5scHM6Mzksc3dpdGNoRmxhZzowfSx7cWU6MjEsbm1wczo0MyxubHBzOjQwLHN3aXRjaEZsYWc6MH0se3FlOjksbm1wczo0NCxubHBzOjQxLHN3aXRjaEZsYWc6MH0se3FlOjUsbm1wczo0NSxubHBzOjQyLHN3aXRjaEZsYWc6MH0se3FlOjEsbm1wczo0NSxubHBzOjQzLHN3aXRjaEZsYWc6MH0se3FlOjIyMDE3LG5tcHM6NDYsbmxwczo0Nixzd2l0Y2hGbGFnOjB9XTtjbGFzcyBBcml0aG1ldGljRGVjb2Rlcntjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5kYXRhPWU7dGhpcy5icD10O3RoaXMuZGF0YUVuZD1pO3RoaXMuY2hpZ2g9ZVt0XTt0aGlzLmNsb3c9MDt0aGlzLmJ5dGVJbigpO3RoaXMuY2hpZ2g9dGhpcy5jaGlnaDw8NyY2NTUzNXx0aGlzLmNsb3c+PjkmMTI3O3RoaXMuY2xvdz10aGlzLmNsb3c8PDcmNjU1MzU7dGhpcy5jdC09Nzt0aGlzLmE9MzI3Njh9Ynl0ZUluKCl7Y29uc3QgZT10aGlzLmRhdGE7bGV0IHQ9dGhpcy5icDtpZigyNTU9PT1lW3RdKWlmKGVbdCsxXT4xNDMpe3RoaXMuY2xvdys9NjUyODA7dGhpcy5jdD04fWVsc2V7dCsrO3RoaXMuY2xvdys9ZVt0XTw8OTt0aGlzLmN0PTc7dGhpcy5icD10fWVsc2V7dCsrO3RoaXMuY2xvdys9dDx0aGlzLmRhdGFFbmQ/ZVt0XTw8ODo2NTI4MDt0aGlzLmN0PTg7dGhpcy5icD10fWlmKHRoaXMuY2xvdz42NTUzNSl7dGhpcy5jaGlnaCs9dGhpcy5jbG93Pj4xNjt0aGlzLmNsb3cmPTY1NTM1fX1yZWFkQml0KGUsdCl7bGV0IGk9ZVt0XT4+MSxhPTEmZVt0XTtjb25zdCBzPXF0W2ldLHI9cy5xZTtsZXQgbixvPXRoaXMuYS1yO2lmKHRoaXMuY2hpZ2g8cilpZihvPHIpe289cjtuPWE7aT1zLm5tcHN9ZWxzZXtvPXI7bj0xXmE7MT09PXMuc3dpdGNoRmxhZyYmKGE9bik7aT1zLm5scHN9ZWxzZXt0aGlzLmNoaWdoLT1yO2lmKDMyNzY4Jm8pe3RoaXMuYT1vO3JldHVybiBhfWlmKG88cil7bj0xXmE7MT09PXMuc3dpdGNoRmxhZyYmKGE9bik7aT1zLm5scHN9ZWxzZXtuPWE7aT1zLm5tcHN9fWRvezA9PT10aGlzLmN0JiZ0aGlzLmJ5dGVJbigpO288PD0xO3RoaXMuY2hpZ2g9dGhpcy5jaGlnaDw8MSY2NTUzNXx0aGlzLmNsb3c+PjE1JjE7dGhpcy5jbG93PXRoaXMuY2xvdzw8MSY2NTUzNTt0aGlzLmN0LS19d2hpbGUoISgzMjc2OCZvKSk7dGhpcy5hPW87ZVt0XT1pPDwxfGE7cmV0dXJuIG59fWNsYXNzIEpiaWcyRXJyb3IgZXh0ZW5kcyBydHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlLCJKYmlnMkVycm9yIil9fWNsYXNzIENvbnRleHRDYWNoZXtnZXRDb250ZXh0cyhlKXtyZXR1cm4gZSBpbiB0aGlzP3RoaXNbZV06dGhpc1tlXT1uZXcgSW50OEFycmF5KDY1NTM2KX19Y2xhc3MgRGVjb2RpbmdDb250ZXh0e2NvbnN0cnVjdG9yKGUsdCxpKXt0aGlzLmRhdGE9ZTt0aGlzLnN0YXJ0PXQ7dGhpcy5lbmQ9aX1nZXQgZGVjb2Rlcigpe3JldHVybiBzaGFkb3codGhpcywiZGVjb2RlciIsbmV3IEFyaXRobWV0aWNEZWNvZGVyKHRoaXMuZGF0YSx0aGlzLnN0YXJ0LHRoaXMuZW5kKSl9Z2V0IGNvbnRleHRDYWNoZSgpe3JldHVybiBzaGFkb3codGhpcywiY29udGV4dENhY2hlIixuZXcgQ29udGV4dENhY2hlKX19Y29uc3QgT3Q9MioqMzEtMSxQdD0tKDIqKjMxKTtmdW5jdGlvbiBkZWNvZGVJbnRlZ2VyKGUsdCxpKXtjb25zdCBhPWUuZ2V0Q29udGV4dHModCk7bGV0IHM9MTtmdW5jdGlvbiByZWFkQml0cyhlKXtsZXQgdD0wO2ZvcihsZXQgcj0wO3I8ZTtyKyspe2NvbnN0IGU9aS5yZWFkQml0KGEscyk7cz1zPDI1Nj9zPDwxfGU6NTExJihzPDwxfGUpfDI1Njt0PXQ8PDF8ZX1yZXR1cm4gdD4+PjB9Y29uc3Qgcj1yZWFkQml0cygxKSxuPXJlYWRCaXRzKDEpP3JlYWRCaXRzKDEpP3JlYWRCaXRzKDEpP3JlYWRCaXRzKDEpP3JlYWRCaXRzKDEpP3JlYWRCaXRzKDMyKSs0NDM2OnJlYWRCaXRzKDEyKSszNDA6cmVhZEJpdHMoOCkrODQ6cmVhZEJpdHMoNikrMjA6cmVhZEJpdHMoNCkrNDpyZWFkQml0cygyKTtsZXQgbzswPT09cj9vPW46bj4wJiYobz0tbik7cmV0dXJuIG8+PVB0JiZvPD1PdD9vOm51bGx9ZnVuY3Rpb24gZGVjb2RlSUFJRChlLHQsaSl7Y29uc3QgYT1lLmdldENvbnRleHRzKCJJQUlEIik7bGV0IHM9MTtmb3IobGV0IGU9MDtlPGk7ZSsrKXtzPXM8PDF8dC5yZWFkQml0KGEscyl9cmV0dXJuIGk8MzE/cyYoMTw8aSktMToyMTQ3NDgzNjQ3JnN9Y29uc3QgV3Q9WyJTeW1ib2xEaWN0aW9uYXJ5IixudWxsLG51bGwsbnVsbCwiSW50ZXJtZWRpYXRlVGV4dFJlZ2lvbiIsbnVsbCwiSW1tZWRpYXRlVGV4dFJlZ2lvbiIsIkltbWVkaWF0ZUxvc3NsZXNzVGV4dFJlZ2lvbiIsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLCJQYXR0ZXJuRGljdGlvbmFyeSIsbnVsbCxudWxsLG51bGwsIkludGVybWVkaWF0ZUhhbGZ0b25lUmVnaW9uIixudWxsLCJJbW1lZGlhdGVIYWxmdG9uZVJlZ2lvbiIsIkltbWVkaWF0ZUxvc3NsZXNzSGFsZnRvbmVSZWdpb24iLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLCJJbnRlcm1lZGlhdGVHZW5lcmljUmVnaW9uIixudWxsLCJJbW1lZGlhdGVHZW5lcmljUmVnaW9uIiwiSW1tZWRpYXRlTG9zc2xlc3NHZW5lcmljUmVnaW9uIiwiSW50ZXJtZWRpYXRlR2VuZXJpY1JlZmluZW1lbnRSZWdpb24iLG51bGwsIkltbWVkaWF0ZUdlbmVyaWNSZWZpbmVtZW50UmVnaW9uIiwiSW1tZWRpYXRlTG9zc2xlc3NHZW5lcmljUmVmaW5lbWVudFJlZ2lvbiIsbnVsbCxudWxsLG51bGwsbnVsbCwiUGFnZUluZm9ybWF0aW9uIiwiRW5kT2ZQYWdlIiwiRW5kT2ZTdHJpcGUiLCJFbmRPZkZpbGUiLCJQcm9maWxlcyIsIlRhYmxlcyIsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLCJFeHRlbnNpb24iXSxYdD1bW3t4Oi0xLHk6LTJ9LHt4OjAseTotMn0se3g6MSx5Oi0yfSx7eDotMix5Oi0xfSx7eDotMSx5Oi0xfSx7eDowLHk6LTF9LHt4OjEseTotMX0se3g6Mix5Oi0xfSx7eDotNCx5OjB9LHt4Oi0zLHk6MH0se3g6LTIseTowfSx7eDotMSx5OjB9XSxbe3g6LTEseTotMn0se3g6MCx5Oi0yfSx7eDoxLHk6LTJ9LHt4OjIseTotMn0se3g6LTIseTotMX0se3g6LTEseTotMX0se3g6MCx5Oi0xfSx7eDoxLHk6LTF9LHt4OjIseTotMX0se3g6LTMseTowfSx7eDotMix5OjB9LHt4Oi0xLHk6MH1dLFt7eDotMSx5Oi0yfSx7eDowLHk6LTJ9LHt4OjEseTotMn0se3g6LTIseTotMX0se3g6LTEseTotMX0se3g6MCx5Oi0xfSx7eDoxLHk6LTF9LHt4Oi0yLHk6MH0se3g6LTEseTowfV0sW3t4Oi0zLHk6LTF9LHt4Oi0yLHk6LTF9LHt4Oi0xLHk6LTF9LHt4OjAseTotMX0se3g6MSx5Oi0xfSx7eDotNCx5OjB9LHt4Oi0zLHk6MH0se3g6LTIseTowfSx7eDotMSx5OjB9XV0sanQ9W3tjb2Rpbmc6W3t4OjAseTotMX0se3g6MSx5Oi0xfSx7eDotMSx5OjB9XSxyZWZlcmVuY2U6W3t4OjAseTotMX0se3g6MSx5Oi0xfSx7eDotMSx5OjB9LHt4OjAseTowfSx7eDoxLHk6MH0se3g6LTEseToxfSx7eDowLHk6MX0se3g6MSx5OjF9XX0se2NvZGluZzpbe3g6LTEseTotMX0se3g6MCx5Oi0xfSx7eDoxLHk6LTF9LHt4Oi0xLHk6MH1dLHJlZmVyZW5jZTpbe3g6MCx5Oi0xfSx7eDotMSx5OjB9LHt4OjAseTowfSx7eDoxLHk6MH0se3g6MCx5OjF9LHt4OjEseToxfV19XSxadD1bMzk3MTcsMTk0MSwyMjksNDA1XSxWdD1bMzIsOF07ZnVuY3Rpb24gZGVjb2RlQml0bWFwKGUsdCxpLGEscyxyLG4sbyl7aWYoZSl7cmV0dXJuIGRlY29kZU1NUkJpdG1hcChuZXcgUmVhZGVyKG8uZGF0YSxvLnN0YXJ0LG8uZW5kKSx0LGksITEpfWlmKDA9PT1hJiYhciYmIXMmJjQ9PT1uLmxlbmd0aCYmMz09PW5bMF0ueCYmLTE9PT1uWzBdLnkmJi0zPT09blsxXS54JiYtMT09PW5bMV0ueSYmMj09PW5bMl0ueCYmLTI9PT1uWzJdLnkmJi0yPT09blszXS54JiYtMj09PW5bM10ueSlyZXR1cm4gZnVuY3Rpb24gZGVjb2RlQml0bWFwVGVtcGxhdGUwKGUsdCxpKXtjb25zdCBhPWkuZGVjb2RlcixzPWkuY29udGV4dENhY2hlLmdldENvbnRleHRzKCJHQiIpLHI9W107bGV0IG4sbyxnLGMsaCxsLEM7Zm9yKG89MDtvPHQ7bysrKXtoPXJbb109bmV3IFVpbnQ4QXJyYXkoZSk7bD1vPDE/aDpyW28tMV07Qz1vPDI/aDpyW28tMl07bj1DWzBdPDwxM3xDWzFdPDwxMnxDWzJdPDwxMXxsWzBdPDw3fGxbMV08PDZ8bFsyXTw8NXxsWzNdPDw0O2ZvcihnPTA7ZzxlO2crKyl7aFtnXT1jPWEucmVhZEJpdChzLG4pO249KDMxNzM1Jm4pPDwxfChnKzM8ZT9DW2crM108PDExOjApfChnKzQ8ZT9sW2crNF08PDQ6MCl8Y319cmV0dXJuIHJ9KHQsaSxvKTtjb25zdCBnPSEhcixjPVh0W2FdLmNvbmNhdChuKTtjLnNvcnQoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUueS10Lnl8fGUueC10Lnh9KSk7Y29uc3QgaD1jLmxlbmd0aCxsPW5ldyBJbnQ4QXJyYXkoaCksQz1uZXcgSW50OEFycmF5KGgpLFE9W107bGV0IEUsdSxkPTAsZj0wLHA9MCxtPTA7Zm9yKHU9MDt1PGg7dSsrKXtsW3VdPWNbdV0ueDtDW3VdPWNbdV0ueTtmPU1hdGgubWluKGYsY1t1XS54KTtwPU1hdGgubWF4KHAsY1t1XS54KTttPU1hdGgubWluKG0sY1t1XS55KTt1PGgtMSYmY1t1XS55PT09Y1t1KzFdLnkmJmNbdV0ueD09PWNbdSsxXS54LTE/ZHw9MTw8aC0xLXU6US5wdXNoKHUpfWNvbnN0IHk9US5sZW5ndGgsdz1uZXcgSW50OEFycmF5KHkpLGI9bmV3IEludDhBcnJheSh5KSxEPW5ldyBVaW50MTZBcnJheSh5KTtmb3IoRT0wO0U8eTtFKyspe3U9UVtFXTt3W0VdPWNbdV0ueDtiW0VdPWNbdV0ueTtEW0VdPTE8PGgtMS11fWNvbnN0IEY9LWYsUz0tbSxrPXQtcCxSPVp0W2FdO2xldCBOPW5ldyBVaW50OEFycmF5KHQpO2NvbnN0IEc9W10seD1vLmRlY29kZXIsTT1vLmNvbnRleHRDYWNoZS5nZXRDb250ZXh0cygiR0IiKTtsZXQgVSxMLEosSCxZLHY9MCxLPTA7Zm9yKGxldCBlPTA7ZTxpO2UrKyl7aWYocyl7dl49eC5yZWFkQml0KE0sUik7aWYodil7Ry5wdXNoKE4pO2NvbnRpbnVlfX1OPW5ldyBVaW50OEFycmF5KE4pO0cucHVzaChOKTtmb3IoVT0wO1U8dDtVKyspe2lmKGcmJnJbZV1bVV0pe05bVV09MDtjb250aW51ZX1pZihVPj1GJiZVPGsmJmU+PVMpe0s9Szw8MSZkO2Zvcih1PTA7dTx5O3UrKyl7TD1lK2JbdV07Sj1VK3dbdV07SD1HW0xdW0pdO2lmKEgpe0g9RFt1XTtLfD1IfX19ZWxzZXtLPTA7WT1oLTE7Zm9yKHU9MDt1PGg7dSsrLFktLSl7Sj1VK2xbdV07aWYoSj49MCYmSjx0KXtMPWUrQ1t1XTtpZihMPj0wKXtIPUdbTF1bSl07SCYmKEt8PUg8PFkpfX19fWNvbnN0IGk9eC5yZWFkQml0KE0sSyk7TltVXT1pfX1yZXR1cm4gR31mdW5jdGlvbiBkZWNvZGVSZWZpbmVtZW50KGUsdCxpLGEscyxyLG4sbyxnKXtsZXQgYz1qdFtpXS5jb2Rpbmc7MD09PWkmJihjPWMuY29uY2F0KFtvWzBdXSkpO2NvbnN0IGg9Yy5sZW5ndGgsbD1uZXcgSW50MzJBcnJheShoKSxDPW5ldyBJbnQzMkFycmF5KGgpO2xldCBRO2ZvcihRPTA7UTxoO1ErKyl7bFtRXT1jW1FdLng7Q1tRXT1jW1FdLnl9bGV0IEU9anRbaV0ucmVmZXJlbmNlOzA9PT1pJiYoRT1FLmNvbmNhdChbb1sxXV0pKTtjb25zdCB1PUUubGVuZ3RoLGQ9bmV3IEludDMyQXJyYXkodSksZj1uZXcgSW50MzJBcnJheSh1KTtmb3IoUT0wO1E8dTtRKyspe2RbUV09RVtRXS54O2ZbUV09RVtRXS55fWNvbnN0IHA9YVswXS5sZW5ndGgsbT1hLmxlbmd0aCx5PVZ0W2ldLHc9W10sYj1nLmRlY29kZXIsRD1nLmNvbnRleHRDYWNoZS5nZXRDb250ZXh0cygiR1IiKTtsZXQgRj0wO2ZvcihsZXQgaT0wO2k8dDtpKyspe2lmKG4pe0ZePWIucmVhZEJpdChELHkpO2lmKEYpdGhyb3cgbmV3IEpiaWcyRXJyb3IoInByZWRpY3Rpb24gaXMgbm90IHN1cHBvcnRlZCIpfWNvbnN0IHQ9bmV3IFVpbnQ4QXJyYXkoZSk7dy5wdXNoKHQpO2ZvcihsZXQgbj0wO248ZTtuKyspe2xldCBvLGcsYz0wO2ZvcihRPTA7UTxoO1ErKyl7bz1pK0NbUV07Zz1uK2xbUV07bzwwfHxnPDB8fGc+PWU/Yzw8PTE6Yz1jPDwxfHdbb11bZ119Zm9yKFE9MDtRPHU7USsrKXtvPWkrZltRXS1yO2c9bitkW1FdLXM7bzwwfHxvPj1tfHxnPDB8fGc+PXA/Yzw8PTE6Yz1jPDwxfGFbb11bZ119Y29uc3QgRT1iLnJlYWRCaXQoRCxjKTt0W25dPUV9fXJldHVybiB3fWZ1bmN0aW9uIGRlY29kZVRleHRSZWdpb24oZSx0LGksYSxzLHIsbixvLGcsYyxoLGwsQyxRLEUsdSxkLGYscCl7aWYoZSYmdCl0aHJvdyBuZXcgSmJpZzJFcnJvcigicmVmaW5lbWVudCB3aXRoIEh1ZmZtYW4gaXMgbm90IHN1cHBvcnRlZCIpO2NvbnN0IG09W107bGV0IHksdztmb3IoeT0wO3k8YTt5Kyspe3c9bmV3IFVpbnQ4QXJyYXkoaSk7aWYocylmb3IobGV0IGU9MDtlPGk7ZSsrKXdbZV09czttLnB1c2godyl9Y29uc3QgYj1kLmRlY29kZXIsRD1kLmNvbnRleHRDYWNoZTtsZXQgRj1lPy1RLnRhYmxlRGVsdGFULmRlY29kZShwKTotZGVjb2RlSW50ZWdlcihELCJJQURUIixiKSxTPTA7eT0wO2Zvcig7eTxyOyl7Ris9ZT9RLnRhYmxlRGVsdGFULmRlY29kZShwKTpkZWNvZGVJbnRlZ2VyKEQsIklBRFQiLGIpO1MrPWU/US50YWJsZUZpcnN0Uy5kZWNvZGUocCk6ZGVjb2RlSW50ZWdlcihELCJJQUZTIixiKTtsZXQgYT1TO2Zvcig7Oyl7bGV0IHM9MDtuPjEmJihzPWU/cC5yZWFkQml0cyhmKTpkZWNvZGVJbnRlZ2VyKEQsIklBSVQiLGIpKTtjb25zdCByPW4qRitzLFM9ZT9RLnN5bWJvbElEVGFibGUuZGVjb2RlKHApOmRlY29kZUlBSUQoRCxiLGcpLGs9dCYmKGU/cC5yZWFkQml0KCk6ZGVjb2RlSW50ZWdlcihELCJJQVJJIixiKSk7bGV0IFI9b1tTXSxOPVJbMF0ubGVuZ3RoLEc9Ui5sZW5ndGg7aWYoayl7Y29uc3QgZT1kZWNvZGVJbnRlZ2VyKEQsIklBUkRXIixiKSx0PWRlY29kZUludGVnZXIoRCwiSUFSREgiLGIpO04rPWU7Rys9dDtSPWRlY29kZVJlZmluZW1lbnQoTixHLEUsUiwoZT4+MSkrZGVjb2RlSW50ZWdlcihELCJJQVJEWCIsYiksKHQ+PjEpK2RlY29kZUludGVnZXIoRCwiSUFSRFkiLGIpLCExLHUsZCl9bGV0IHg9MDtjPzEmbD94PUctMTphKz1HLTE6bD4xP2ErPU4tMTp4PU4tMTtjb25zdCBNPXItKDEmbD8wOkctMSksVT1hLSgyJmw/Ti0xOjApO2xldCBMLEosSDtpZihjKWZvcihMPTA7TDxHO0wrKyl7dz1tW1UrTF07aWYoIXcpY29udGludWU7SD1SW0xdO2NvbnN0IGU9TWF0aC5taW4oaS1NLE4pO3N3aXRjaChDKXtjYXNlIDA6Zm9yKEo9MDtKPGU7SisrKXdbTStKXXw9SFtKXTticmVhaztjYXNlIDI6Zm9yKEo9MDtKPGU7SisrKXdbTStKXV49SFtKXTticmVhaztkZWZhdWx0OnRocm93IG5ldyBKYmlnMkVycm9yKGBvcGVyYXRvciAke0N9IGlzIG5vdCBzdXBwb3J0ZWRgKX19ZWxzZSBmb3IoSj0wO0o8RztKKyspe3c9bVtNK0pdO2lmKHcpe0g9UltKXTtzd2l0Y2goQyl7Y2FzZSAwOmZvcihMPTA7TDxOO0wrKyl3W1UrTF18PUhbTF07YnJlYWs7Y2FzZSAyOmZvcihMPTA7TDxOO0wrKyl3W1UrTF1ePUhbTF07YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcihgb3BlcmF0b3IgJHtDfSBpcyBub3Qgc3VwcG9ydGVkYCl9fX15Kys7Y29uc3QgWT1lP1EudGFibGVEZWx0YVMuZGVjb2RlKHApOmRlY29kZUludGVnZXIoRCwiSUFEUyIsYik7aWYobnVsbD09PVkpYnJlYWs7YSs9eCtZK2h9fXJldHVybiBtfWZ1bmN0aW9uIHJlYWRTZWdtZW50SGVhZGVyKGUsdCl7Y29uc3QgaT17fTtpLm51bWJlcj1yZWFkVWludDMyKGUsdCk7Y29uc3QgYT1lW3QrNF0scz02MyZhO2lmKCFXdFtzXSl0aHJvdyBuZXcgSmJpZzJFcnJvcigiaW52YWxpZCBzZWdtZW50IHR5cGU6ICIrcyk7aS50eXBlPXM7aS50eXBlTmFtZT1XdFtzXTtpLmRlZmVycmVkTm9uUmV0YWluPSEhKDEyOCZhKTtjb25zdCByPSEhKDY0JmEpLG49ZVt0KzVdO2xldCBvPW4+PjUmNztjb25zdCBnPVszMSZuXTtsZXQgYz10KzY7aWYoNz09PW4pe289NTM2ODcwOTExJnJlYWRVaW50MzIoZSxjLTEpO2MrPTM7bGV0IHQ9bys3Pj4zO2dbMF09ZVtjKytdO2Zvcig7LS10PjA7KWcucHVzaChlW2MrK10pfWVsc2UgaWYoNT09PW58fDY9PT1uKXRocm93IG5ldyBKYmlnMkVycm9yKCJpbnZhbGlkIHJlZmVycmVkLXRvIGZsYWdzIik7aS5yZXRhaW5CaXRzPWc7bGV0IGg9NDtpLm51bWJlcjw9MjU2P2g9MTppLm51bWJlcjw9NjU1MzYmJihoPTIpO2NvbnN0IGw9W107bGV0IEMsUTtmb3IoQz0wO0M8bztDKyspe2xldCB0O3Q9MT09PWg/ZVtjXToyPT09aD9yZWFkVWludDE2KGUsYyk6cmVhZFVpbnQzMihlLGMpO2wucHVzaCh0KTtjKz1ofWkucmVmZXJyZWRUbz1sO2lmKHIpe2kucGFnZUFzc29jaWF0aW9uPXJlYWRVaW50MzIoZSxjKTtjKz00fWVsc2UgaS5wYWdlQXNzb2NpYXRpb249ZVtjKytdO2kubGVuZ3RoPXJlYWRVaW50MzIoZSxjKTtjKz00O2lmKDQyOTQ5NjcyOTU9PT1pLmxlbmd0aCl7aWYoMzghPT1zKXRocm93IG5ldyBKYmlnMkVycm9yKCJpbnZhbGlkIHVua25vd24gc2VnbWVudCBsZW5ndGgiKTt7Y29uc3QgdD1yZWFkUmVnaW9uU2VnbWVudEluZm9ybWF0aW9uKGUsYyksYT0hISgxJmVbYyt6dF0pLHM9NixyPW5ldyBVaW50OEFycmF5KHMpO2lmKCFhKXtyWzBdPTI1NTtyWzFdPTE3Mn1yWzJdPXQuaGVpZ2h0Pj4+MjQmMjU1O3JbM109dC5oZWlnaHQ+PjE2JjI1NTtyWzRdPXQuaGVpZ2h0Pj44JjI1NTtyWzVdPTI1NSZ0LmhlaWdodDtmb3IoQz1jLFE9ZS5sZW5ndGg7QzxRO0MrKyl7bGV0IHQ9MDtmb3IoO3Q8cyYmclt0XT09PWVbQyt0XTspdCsrO2lmKHQ9PT1zKXtpLmxlbmd0aD1DK3M7YnJlYWt9fWlmKDQyOTQ5NjcyOTU9PT1pLmxlbmd0aCl0aHJvdyBuZXcgSmJpZzJFcnJvcigic2VnbWVudCBlbmQgd2FzIG5vdCBmb3VuZCIpfX1pLmhlYWRlckVuZD1jO3JldHVybiBpfWZ1bmN0aW9uIHJlYWRTZWdtZW50cyhlLHQsaSxhKXtjb25zdCBzPVtdO2xldCByPWk7Zm9yKDtyPGE7KXtjb25zdCBpPXJlYWRTZWdtZW50SGVhZGVyKHQscik7cj1pLmhlYWRlckVuZDtjb25zdCBhPXtoZWFkZXI6aSxkYXRhOnR9O2lmKCFlLnJhbmRvbUFjY2Vzcyl7YS5zdGFydD1yO3IrPWkubGVuZ3RoO2EuZW5kPXJ9cy5wdXNoKGEpO2lmKDUxPT09aS50eXBlKWJyZWFrfWlmKGUucmFuZG9tQWNjZXNzKWZvcihsZXQgZT0wLHQ9cy5sZW5ndGg7ZTx0O2UrKyl7c1tlXS5zdGFydD1yO3IrPXNbZV0uaGVhZGVyLmxlbmd0aDtzW2VdLmVuZD1yfXJldHVybiBzfWZ1bmN0aW9uIHJlYWRSZWdpb25TZWdtZW50SW5mb3JtYXRpb24oZSx0KXtyZXR1cm57d2lkdGg6cmVhZFVpbnQzMihlLHQpLGhlaWdodDpyZWFkVWludDMyKGUsdCs0KSx4OnJlYWRVaW50MzIoZSx0KzgpLHk6cmVhZFVpbnQzMihlLHQrMTIpLGNvbWJpbmF0aW9uT3BlcmF0b3I6NyZlW3QrMTZdfX1jb25zdCB6dD0xNztmdW5jdGlvbiBwcm9jZXNzU2VnbWVudChlLHQpe2NvbnN0IGk9ZS5oZWFkZXIsYT1lLmRhdGEscz1lLmVuZDtsZXQgcixuLG8sZyxjPWUuc3RhcnQ7c3dpdGNoKGkudHlwZSl7Y2FzZSAwOmNvbnN0IGU9e30sdD1yZWFkVWludDE2KGEsYyk7ZS5odWZmbWFuPSEhKDEmdCk7ZS5yZWZpbmVtZW50PSEhKDImdCk7ZS5odWZmbWFuREhTZWxlY3Rvcj10Pj4yJjM7ZS5odWZmbWFuRFdTZWxlY3Rvcj10Pj40JjM7ZS5iaXRtYXBTaXplU2VsZWN0b3I9dD4+NiYxO2UuYWdncmVnYXRpb25JbnN0YW5jZXNTZWxlY3Rvcj10Pj43JjE7ZS5iaXRtYXBDb2RpbmdDb250ZXh0VXNlZD0hISgyNTYmdCk7ZS5iaXRtYXBDb2RpbmdDb250ZXh0UmV0YWluZWQ9ISEoNTEyJnQpO2UudGVtcGxhdGU9dD4+MTAmMztlLnJlZmluZW1lbnRUZW1wbGF0ZT10Pj4xMiYxO2MrPTI7aWYoIWUuaHVmZm1hbil7Zz0wPT09ZS50ZW1wbGF0ZT80OjE7bj1bXTtmb3Iobz0wO288ZztvKyspe24ucHVzaCh7eDpyZWFkSW50OChhLGMpLHk6cmVhZEludDgoYSxjKzEpfSk7Yys9Mn1lLmF0PW59aWYoZS5yZWZpbmVtZW50JiYhZS5yZWZpbmVtZW50VGVtcGxhdGUpe249W107Zm9yKG89MDtvPDI7bysrKXtuLnB1c2goe3g6cmVhZEludDgoYSxjKSx5OnJlYWRJbnQ4KGEsYysxKX0pO2MrPTJ9ZS5yZWZpbmVtZW50QXQ9bn1lLm51bWJlck9mRXhwb3J0ZWRTeW1ib2xzPXJlYWRVaW50MzIoYSxjKTtjKz00O2UubnVtYmVyT2ZOZXdTeW1ib2xzPXJlYWRVaW50MzIoYSxjKTtjKz00O3I9W2UsaS5udW1iZXIsaS5yZWZlcnJlZFRvLGEsYyxzXTticmVhaztjYXNlIDY6Y2FzZSA3OmNvbnN0IGg9e307aC5pbmZvPXJlYWRSZWdpb25TZWdtZW50SW5mb3JtYXRpb24oYSxjKTtjKz16dDtjb25zdCBsPXJlYWRVaW50MTYoYSxjKTtjKz0yO2guaHVmZm1hbj0hISgxJmwpO2gucmVmaW5lbWVudD0hISgyJmwpO2gubG9nU3RyaXBTaXplPWw+PjImMztoLnN0cmlwU2l6ZT0xPDxoLmxvZ1N0cmlwU2l6ZTtoLnJlZmVyZW5jZUNvcm5lcj1sPj40JjM7aC50cmFuc3Bvc2VkPSEhKDY0JmwpO2guY29tYmluYXRpb25PcGVyYXRvcj1sPj43JjM7aC5kZWZhdWx0UGl4ZWxWYWx1ZT1sPj45JjE7aC5kc09mZnNldD1sPDwxNz4+Mjc7aC5yZWZpbmVtZW50VGVtcGxhdGU9bD4+MTUmMTtpZihoLmh1ZmZtYW4pe2NvbnN0IGU9cmVhZFVpbnQxNihhLGMpO2MrPTI7aC5odWZmbWFuRlM9MyZlO2guaHVmZm1hbkRTPWU+PjImMztoLmh1ZmZtYW5EVD1lPj40JjM7aC5odWZmbWFuUmVmaW5lbWVudERXPWU+PjYmMztoLmh1ZmZtYW5SZWZpbmVtZW50REg9ZT4+OCYzO2guaHVmZm1hblJlZmluZW1lbnREWD1lPj4xMCYzO2guaHVmZm1hblJlZmluZW1lbnREWT1lPj4xMiYzO2guaHVmZm1hblJlZmluZW1lbnRTaXplU2VsZWN0b3I9ISEoMTYzODQmZSl9aWYoaC5yZWZpbmVtZW50JiYhaC5yZWZpbmVtZW50VGVtcGxhdGUpe249W107Zm9yKG89MDtvPDI7bysrKXtuLnB1c2goe3g6cmVhZEludDgoYSxjKSx5OnJlYWRJbnQ4KGEsYysxKX0pO2MrPTJ9aC5yZWZpbmVtZW50QXQ9bn1oLm51bWJlck9mU3ltYm9sSW5zdGFuY2VzPXJlYWRVaW50MzIoYSxjKTtjKz00O3I9W2gsaS5yZWZlcnJlZFRvLGEsYyxzXTticmVhaztjYXNlIDE2OmNvbnN0IEM9e30sUT1hW2MrK107Qy5tbXI9ISEoMSZRKTtDLnRlbXBsYXRlPVE+PjEmMztDLnBhdHRlcm5XaWR0aD1hW2MrK107Qy5wYXR0ZXJuSGVpZ2h0PWFbYysrXTtDLm1heFBhdHRlcm5JbmRleD1yZWFkVWludDMyKGEsYyk7Yys9NDtyPVtDLGkubnVtYmVyLGEsYyxzXTticmVhaztjYXNlIDIyOmNhc2UgMjM6Y29uc3QgRT17fTtFLmluZm89cmVhZFJlZ2lvblNlZ21lbnRJbmZvcm1hdGlvbihhLGMpO2MrPXp0O2NvbnN0IHU9YVtjKytdO0UubW1yPSEhKDEmdSk7RS50ZW1wbGF0ZT11Pj4xJjM7RS5lbmFibGVTa2lwPSEhKDgmdSk7RS5jb21iaW5hdGlvbk9wZXJhdG9yPXU+PjQmNztFLmRlZmF1bHRQaXhlbFZhbHVlPXU+PjcmMTtFLmdyaWRXaWR0aD1yZWFkVWludDMyKGEsYyk7Yys9NDtFLmdyaWRIZWlnaHQ9cmVhZFVpbnQzMihhLGMpO2MrPTQ7RS5ncmlkT2Zmc2V0WD00Mjk0OTY3Mjk1JnJlYWRVaW50MzIoYSxjKTtjKz00O0UuZ3JpZE9mZnNldFk9NDI5NDk2NzI5NSZyZWFkVWludDMyKGEsYyk7Yys9NDtFLmdyaWRWZWN0b3JYPXJlYWRVaW50MTYoYSxjKTtjKz0yO0UuZ3JpZFZlY3Rvclk9cmVhZFVpbnQxNihhLGMpO2MrPTI7cj1bRSxpLnJlZmVycmVkVG8sYSxjLHNdO2JyZWFrO2Nhc2UgMzg6Y2FzZSAzOTpjb25zdCBkPXt9O2QuaW5mbz1yZWFkUmVnaW9uU2VnbWVudEluZm9ybWF0aW9uKGEsYyk7Yys9enQ7Y29uc3QgZj1hW2MrK107ZC5tbXI9ISEoMSZmKTtkLnRlbXBsYXRlPWY+PjEmMztkLnByZWRpY3Rpb249ISEoOCZmKTtpZighZC5tbXIpe2c9MD09PWQudGVtcGxhdGU/NDoxO249W107Zm9yKG89MDtvPGc7bysrKXtuLnB1c2goe3g6cmVhZEludDgoYSxjKSx5OnJlYWRJbnQ4KGEsYysxKX0pO2MrPTJ9ZC5hdD1ufXI9W2QsYSxjLHNdO2JyZWFrO2Nhc2UgNDg6Y29uc3QgcD17d2lkdGg6cmVhZFVpbnQzMihhLGMpLGhlaWdodDpyZWFkVWludDMyKGEsYys0KSxyZXNvbHV0aW9uWDpyZWFkVWludDMyKGEsYys4KSxyZXNvbHV0aW9uWTpyZWFkVWludDMyKGEsYysxMil9OzQyOTQ5NjcyOTU9PT1wLmhlaWdodCYmZGVsZXRlIHAuaGVpZ2h0O2NvbnN0IG09YVtjKzE2XTtyZWFkVWludDE2KGEsYysxNyk7cC5sb3NzbGVzcz0hISgxJm0pO3AucmVmaW5lbWVudD0hISgyJm0pO3AuZGVmYXVsdFBpeGVsVmFsdWU9bT4+MiYxO3AuY29tYmluYXRpb25PcGVyYXRvcj1tPj4zJjM7cC5yZXF1aXJlc0J1ZmZlcj0hISgzMiZtKTtwLmNvbWJpbmF0aW9uT3BlcmF0b3JPdmVycmlkZT0hISg2NCZtKTtyPVtwXTticmVhaztjYXNlIDQ5OmNhc2UgNTA6Y2FzZSA1MTpjYXNlIDYyOmJyZWFrO2Nhc2UgNTM6cj1baS5udW1iZXIsYSxjLHNdO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEpiaWcyRXJyb3IoYHNlZ21lbnQgdHlwZSAke2kudHlwZU5hbWV9KCR7aS50eXBlfSkgaXMgbm90IGltcGxlbWVudGVkYCl9Y29uc3QgaD0ib24iK2kudHlwZU5hbWU7aCBpbiB0JiZ0W2hdLmFwcGx5KHQscil9ZnVuY3Rpb24gcHJvY2Vzc1NlZ21lbnRzKGUsdCl7Zm9yKGxldCBpPTAsYT1lLmxlbmd0aDtpPGE7aSsrKXByb2Nlc3NTZWdtZW50KGVbaV0sdCl9Y2xhc3MgU2ltcGxlU2VnbWVudFZpc2l0b3J7b25QYWdlSW5mb3JtYXRpb24oZSl7dGhpcy5jdXJyZW50UGFnZUluZm89ZTtjb25zdCB0PWUud2lkdGgrNz4+MyxpPW5ldyBVaW50OENsYW1wZWRBcnJheSh0KmUuaGVpZ2h0KTtlLmRlZmF1bHRQaXhlbFZhbHVlJiZpLmZpbGwoMjU1KTt0aGlzLmJ1ZmZlcj1pfWRyYXdCaXRtYXAoZSx0KXtjb25zdCBpPXRoaXMuY3VycmVudFBhZ2VJbmZvLGE9ZS53aWR0aCxzPWUuaGVpZ2h0LHI9aS53aWR0aCs3Pj4zLG49aS5jb21iaW5hdGlvbk9wZXJhdG9yT3ZlcnJpZGU/ZS5jb21iaW5hdGlvbk9wZXJhdG9yOmkuY29tYmluYXRpb25PcGVyYXRvcixvPXRoaXMuYnVmZmVyLGc9MTI4Pj4oNyZlLngpO2xldCBjLGgsbCxDLFE9ZS55KnIrKGUueD4+Myk7c3dpdGNoKG4pe2Nhc2UgMDpmb3IoYz0wO2M8cztjKyspe2w9ZztDPVE7Zm9yKGg9MDtoPGE7aCsrKXt0W2NdW2hdJiYob1tDXXw9bCk7bD4+PTE7aWYoIWwpe2w9MTI4O0MrK319USs9cn1icmVhaztjYXNlIDI6Zm9yKGM9MDtjPHM7YysrKXtsPWc7Qz1RO2ZvcihoPTA7aDxhO2grKyl7dFtjXVtoXSYmKG9bQ11ePWwpO2w+Pj0xO2lmKCFsKXtsPTEyODtDKyt9fVErPXJ9YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcihgb3BlcmF0b3IgJHtufSBpcyBub3Qgc3VwcG9ydGVkYCl9fW9uSW1tZWRpYXRlR2VuZXJpY1JlZ2lvbihlLHQsaSxhKXtjb25zdCBzPWUuaW5mbyxyPW5ldyBEZWNvZGluZ0NvbnRleHQodCxpLGEpLG49ZGVjb2RlQml0bWFwKGUubW1yLHMud2lkdGgscy5oZWlnaHQsZS50ZW1wbGF0ZSxlLnByZWRpY3Rpb24sbnVsbCxlLmF0LHIpO3RoaXMuZHJhd0JpdG1hcChzLG4pfW9uSW1tZWRpYXRlTG9zc2xlc3NHZW5lcmljUmVnaW9uKCl7dGhpcy5vbkltbWVkaWF0ZUdlbmVyaWNSZWdpb24oLi4uYXJndW1lbnRzKX1vblN5bWJvbERpY3Rpb25hcnkoZSx0LGksYSxzLHIpe2xldCBuLG87aWYoZS5odWZmbWFuKXtuPWZ1bmN0aW9uIGdldFN5bWJvbERpY3Rpb25hcnlIdWZmbWFuVGFibGVzKGUsdCxpKXtsZXQgYSxzLHIsbixvPTA7c3dpdGNoKGUuaHVmZm1hbkRIU2VsZWN0b3Ipe2Nhc2UgMDpjYXNlIDE6YT1nZXRTdGFuZGFyZFRhYmxlKGUuaHVmZm1hbkRIU2VsZWN0b3IrNCk7YnJlYWs7Y2FzZSAzOmE9Z2V0Q3VzdG9tSHVmZm1hblRhYmxlKG8sdCxpKTtvKys7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcigiaW52YWxpZCBIdWZmbWFuIERIIHNlbGVjdG9yIil9c3dpdGNoKGUuaHVmZm1hbkRXU2VsZWN0b3Ipe2Nhc2UgMDpjYXNlIDE6cz1nZXRTdGFuZGFyZFRhYmxlKGUuaHVmZm1hbkRXU2VsZWN0b3IrMik7YnJlYWs7Y2FzZSAzOnM9Z2V0Q3VzdG9tSHVmZm1hblRhYmxlKG8sdCxpKTtvKys7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcigiaW52YWxpZCBIdWZmbWFuIERXIHNlbGVjdG9yIil9aWYoZS5iaXRtYXBTaXplU2VsZWN0b3Ipe3I9Z2V0Q3VzdG9tSHVmZm1hblRhYmxlKG8sdCxpKTtvKyt9ZWxzZSByPWdldFN0YW5kYXJkVGFibGUoMSk7bj1lLmFnZ3JlZ2F0aW9uSW5zdGFuY2VzU2VsZWN0b3I/Z2V0Q3VzdG9tSHVmZm1hblRhYmxlKG8sdCxpKTpnZXRTdGFuZGFyZFRhYmxlKDEpO3JldHVybnt0YWJsZURlbHRhSGVpZ2h0OmEsdGFibGVEZWx0YVdpZHRoOnMsdGFibGVCaXRtYXBTaXplOnIsdGFibGVBZ2dyZWdhdGVJbnN0YW5jZXM6bn19KGUsaSx0aGlzLmN1c3RvbVRhYmxlcyk7bz1uZXcgUmVhZGVyKGEscyxyKX1sZXQgZz10aGlzLnN5bWJvbHM7Z3x8KHRoaXMuc3ltYm9scz1nPXt9KTtjb25zdCBjPVtdO2Zvcihjb25zdCBlIG9mIGkpe2NvbnN0IHQ9Z1tlXTt0JiZjLnB1c2goLi4udCl9Y29uc3QgaD1uZXcgRGVjb2RpbmdDb250ZXh0KGEscyxyKTtnW3RdPWZ1bmN0aW9uIGRlY29kZVN5bWJvbERpY3Rpb25hcnkoZSx0LGksYSxzLHIsbixvLGcsYyxoLGwpe2lmKGUmJnQpdGhyb3cgbmV3IEpiaWcyRXJyb3IoInN5bWJvbCByZWZpbmVtZW50IHdpdGggSHVmZm1hbiBpcyBub3Qgc3VwcG9ydGVkIik7Y29uc3QgQz1bXTtsZXQgUT0wLEU9bG9nMihpLmxlbmd0aCthKTtjb25zdCB1PWguZGVjb2RlcixkPWguY29udGV4dENhY2hlO2xldCBmLHA7aWYoZSl7Zj1nZXRTdGFuZGFyZFRhYmxlKDEpO3A9W107RT1NYXRoLm1heChFLDEpfWZvcig7Qy5sZW5ndGg8YTspe1ErPWU/ci50YWJsZURlbHRhSGVpZ2h0LmRlY29kZShsKTpkZWNvZGVJbnRlZ2VyKGQsIklBREgiLHUpO2xldCBhPTAscz0wO2NvbnN0IGY9ZT9wLmxlbmd0aDowO2Zvcig7Oyl7Y29uc3QgZj1lP3IudGFibGVEZWx0YVdpZHRoLmRlY29kZShsKTpkZWNvZGVJbnRlZ2VyKGQsIklBRFciLHUpO2lmKG51bGw9PT1mKWJyZWFrO2ErPWY7cys9YTtsZXQgbTtpZih0KXtjb25zdCBzPWRlY29kZUludGVnZXIoZCwiSUFBSSIsdSk7aWYocz4xKW09ZGVjb2RlVGV4dFJlZ2lvbihlLHQsYSxRLDAscywxLGkuY29uY2F0KEMpLEUsMCwwLDEsMCxyLGcsYyxoLDAsbCk7ZWxzZXtjb25zdCBlPWRlY29kZUlBSUQoZCx1LEUpLHQ9ZGVjb2RlSW50ZWdlcihkLCJJQVJEWCIsdSkscz1kZWNvZGVJbnRlZ2VyKGQsIklBUkRZIix1KTttPWRlY29kZVJlZmluZW1lbnQoYSxRLGcsZTxpLmxlbmd0aD9pW2VdOkNbZS1pLmxlbmd0aF0sdCxzLCExLGMsaCl9Qy5wdXNoKG0pfWVsc2UgaWYoZSlwLnB1c2goYSk7ZWxzZXttPWRlY29kZUJpdG1hcCghMSxhLFEsbiwhMSxudWxsLG8saCk7Qy5wdXNoKG0pfX1pZihlJiYhdCl7Y29uc3QgZT1yLnRhYmxlQml0bWFwU2l6ZS5kZWNvZGUobCk7bC5ieXRlQWxpZ24oKTtsZXQgdDtpZigwPT09ZSl0PXJlYWRVbmNvbXByZXNzZWRCaXRtYXAobCxzLFEpO2Vsc2V7Y29uc3QgaT1sLmVuZCxhPWwucG9zaXRpb24rZTtsLmVuZD1hO3Q9ZGVjb2RlTU1SQml0bWFwKGwscyxRLCExKTtsLmVuZD1pO2wucG9zaXRpb249YX1jb25zdCBpPXAubGVuZ3RoO2lmKGY9PT1pLTEpQy5wdXNoKHQpO2Vsc2V7bGV0IGUsYSxzLHIsbixvPTA7Zm9yKGU9ZjtlPGk7ZSsrKXtyPXBbZV07cz1vK3I7bj1bXTtmb3IoYT0wO2E8UTthKyspbi5wdXNoKHRbYV0uc3ViYXJyYXkobyxzKSk7Qy5wdXNoKG4pO289c319fX1jb25zdCBtPVtdLHk9W107bGV0IHcsYixEPSExO2NvbnN0IEY9aS5sZW5ndGgrYTtmb3IoO3kubGVuZ3RoPEY7KXtsZXQgdD1lP2YuZGVjb2RlKGwpOmRlY29kZUludGVnZXIoZCwiSUFFWCIsdSk7Zm9yKDt0LS07KXkucHVzaChEKTtEPSFEfWZvcih3PTAsYj1pLmxlbmd0aDt3PGI7dysrKXlbd10mJm0ucHVzaChpW3ddKTtmb3IobGV0IGU9MDtlPGE7dysrLGUrKyl5W3ddJiZtLnB1c2goQ1tlXSk7cmV0dXJuIG19KGUuaHVmZm1hbixlLnJlZmluZW1lbnQsYyxlLm51bWJlck9mTmV3U3ltYm9scyxlLm51bWJlck9mRXhwb3J0ZWRTeW1ib2xzLG4sZS50ZW1wbGF0ZSxlLmF0LGUucmVmaW5lbWVudFRlbXBsYXRlLGUucmVmaW5lbWVudEF0LGgsbyl9b25JbW1lZGlhdGVUZXh0UmVnaW9uKGUsdCxpLGEscyl7Y29uc3Qgcj1lLmluZm87bGV0IG4sbztjb25zdCBnPXRoaXMuc3ltYm9scyxjPVtdO2Zvcihjb25zdCBlIG9mIHQpe2NvbnN0IHQ9Z1tlXTt0JiZjLnB1c2goLi4udCl9Y29uc3QgaD1sb2cyKGMubGVuZ3RoKTtpZihlLmh1ZmZtYW4pe289bmV3IFJlYWRlcihpLGEscyk7bj1mdW5jdGlvbiBnZXRUZXh0UmVnaW9uSHVmZm1hblRhYmxlcyhlLHQsaSxhLHMpe2NvbnN0IHI9W107Zm9yKGxldCBlPTA7ZTw9MzQ7ZSsrKXtjb25zdCB0PXMucmVhZEJpdHMoNCk7ci5wdXNoKG5ldyBIdWZmbWFuTGluZShbZSx0LDAsMF0pKX1jb25zdCBuPW5ldyBIdWZmbWFuVGFibGUociwhMSk7ci5sZW5ndGg9MDtmb3IobGV0IGU9MDtlPGE7KXtjb25zdCB0PW4uZGVjb2RlKHMpO2lmKHQ+PTMyKXtsZXQgaSxhLG47c3dpdGNoKHQpe2Nhc2UgMzI6aWYoMD09PWUpdGhyb3cgbmV3IEpiaWcyRXJyb3IoIm5vIHByZXZpb3VzIHZhbHVlIGluIHN5bWJvbCBJRCB0YWJsZSIpO2E9cy5yZWFkQml0cygyKSszO2k9cltlLTFdLnByZWZpeExlbmd0aDticmVhaztjYXNlIDMzOmE9cy5yZWFkQml0cygzKSszO2k9MDticmVhaztjYXNlIDM0OmE9cy5yZWFkQml0cyg3KSsxMTtpPTA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcigiaW52YWxpZCBjb2RlIGxlbmd0aCBpbiBzeW1ib2wgSUQgdGFibGUiKX1mb3Iobj0wO248YTtuKyspe3IucHVzaChuZXcgSHVmZm1hbkxpbmUoW2UsaSwwLDBdKSk7ZSsrfX1lbHNle3IucHVzaChuZXcgSHVmZm1hbkxpbmUoW2UsdCwwLDBdKSk7ZSsrfX1zLmJ5dGVBbGlnbigpO2NvbnN0IG89bmV3IEh1ZmZtYW5UYWJsZShyLCExKTtsZXQgZyxjLGgsbD0wO3N3aXRjaChlLmh1ZmZtYW5GUyl7Y2FzZSAwOmNhc2UgMTpnPWdldFN0YW5kYXJkVGFibGUoZS5odWZmbWFuRlMrNik7YnJlYWs7Y2FzZSAzOmc9Z2V0Q3VzdG9tSHVmZm1hblRhYmxlKGwsdCxpKTtsKys7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcigiaW52YWxpZCBIdWZmbWFuIEZTIHNlbGVjdG9yIil9c3dpdGNoKGUuaHVmZm1hbkRTKXtjYXNlIDA6Y2FzZSAxOmNhc2UgMjpjPWdldFN0YW5kYXJkVGFibGUoZS5odWZmbWFuRFMrOCk7YnJlYWs7Y2FzZSAzOmM9Z2V0Q3VzdG9tSHVmZm1hblRhYmxlKGwsdCxpKTtsKys7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcigiaW52YWxpZCBIdWZmbWFuIERTIHNlbGVjdG9yIil9c3dpdGNoKGUuaHVmZm1hbkRUKXtjYXNlIDA6Y2FzZSAxOmNhc2UgMjpoPWdldFN0YW5kYXJkVGFibGUoZS5odWZmbWFuRFQrMTEpO2JyZWFrO2Nhc2UgMzpoPWdldEN1c3RvbUh1ZmZtYW5UYWJsZShsLHQsaSk7bCsrO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEpiaWcyRXJyb3IoImludmFsaWQgSHVmZm1hbiBEVCBzZWxlY3RvciIpfWlmKGUucmVmaW5lbWVudCl0aHJvdyBuZXcgSmJpZzJFcnJvcigicmVmaW5lbWVudCB3aXRoIEh1ZmZtYW4gaXMgbm90IHN1cHBvcnRlZCIpO3JldHVybntzeW1ib2xJRFRhYmxlOm8sdGFibGVGaXJzdFM6Zyx0YWJsZURlbHRhUzpjLHRhYmxlRGVsdGFUOmh9fShlLHQsdGhpcy5jdXN0b21UYWJsZXMsYy5sZW5ndGgsbyl9Y29uc3QgbD1uZXcgRGVjb2RpbmdDb250ZXh0KGksYSxzKSxDPWRlY29kZVRleHRSZWdpb24oZS5odWZmbWFuLGUucmVmaW5lbWVudCxyLndpZHRoLHIuaGVpZ2h0LGUuZGVmYXVsdFBpeGVsVmFsdWUsZS5udW1iZXJPZlN5bWJvbEluc3RhbmNlcyxlLnN0cmlwU2l6ZSxjLGgsZS50cmFuc3Bvc2VkLGUuZHNPZmZzZXQsZS5yZWZlcmVuY2VDb3JuZXIsZS5jb21iaW5hdGlvbk9wZXJhdG9yLG4sZS5yZWZpbmVtZW50VGVtcGxhdGUsZS5yZWZpbmVtZW50QXQsbCxlLmxvZ1N0cmlwU2l6ZSxvKTt0aGlzLmRyYXdCaXRtYXAocixDKX1vbkltbWVkaWF0ZUxvc3NsZXNzVGV4dFJlZ2lvbigpe3RoaXMub25JbW1lZGlhdGVUZXh0UmVnaW9uKC4uLmFyZ3VtZW50cyl9b25QYXR0ZXJuRGljdGlvbmFyeShlLHQsaSxhLHMpe2xldCByPXRoaXMucGF0dGVybnM7cnx8KHRoaXMucGF0dGVybnM9cj17fSk7Y29uc3Qgbj1uZXcgRGVjb2RpbmdDb250ZXh0KGksYSxzKTtyW3RdPWZ1bmN0aW9uIGRlY29kZVBhdHRlcm5EaWN0aW9uYXJ5KGUsdCxpLGEscyxyKXtjb25zdCBuPVtdO2lmKCFlKXtuLnB1c2goe3g6LXQseTowfSk7MD09PXMmJm4ucHVzaCh7eDotMyx5Oi0xfSx7eDoyLHk6LTJ9LHt4Oi0yLHk6LTJ9KX1jb25zdCBvPWRlY29kZUJpdG1hcChlLChhKzEpKnQsaSxzLCExLG51bGwsbixyKSxnPVtdO2ZvcihsZXQgZT0wO2U8PWE7ZSsrKXtjb25zdCBhPVtdLHM9dCplLHI9cyt0O2ZvcihsZXQgZT0wO2U8aTtlKyspYS5wdXNoKG9bZV0uc3ViYXJyYXkocyxyKSk7Zy5wdXNoKGEpfXJldHVybiBnfShlLm1tcixlLnBhdHRlcm5XaWR0aCxlLnBhdHRlcm5IZWlnaHQsZS5tYXhQYXR0ZXJuSW5kZXgsZS50ZW1wbGF0ZSxuKX1vbkltbWVkaWF0ZUhhbGZ0b25lUmVnaW9uKGUsdCxpLGEscyl7Y29uc3Qgcj10aGlzLnBhdHRlcm5zW3RbMF1dLG49ZS5pbmZvLG89bmV3IERlY29kaW5nQ29udGV4dChpLGEscyksZz1mdW5jdGlvbiBkZWNvZGVIYWxmdG9uZVJlZ2lvbihlLHQsaSxhLHMscixuLG8sZyxjLGgsbCxDLFEsRSl7aWYobil0aHJvdyBuZXcgSmJpZzJFcnJvcigic2tpcCBpcyBub3Qgc3VwcG9ydGVkIik7aWYoMCE9PW8pdGhyb3cgbmV3IEpiaWcyRXJyb3IoYG9wZXJhdG9yICIke299IiBpcyBub3Qgc3VwcG9ydGVkIGluIGhhbGZ0b25lIHJlZ2lvbmApO2NvbnN0IHU9W107bGV0IGQsZixwO2ZvcihkPTA7ZDxzO2QrKyl7cD1uZXcgVWludDhBcnJheShhKTtpZihyKWZvcihmPTA7ZjxhO2YrKylwW2ZdPXI7dS5wdXNoKHApfWNvbnN0IG09dC5sZW5ndGgseT10WzBdLHc9eVswXS5sZW5ndGgsYj15Lmxlbmd0aCxEPWxvZzIobSksRj1bXTtpZighZSl7Ri5wdXNoKHt4Omk8PTE/MzoyLHk6LTF9KTswPT09aSYmRi5wdXNoKHt4Oi0zLHk6LTF9LHt4OjIseTotMn0se3g6LTIseTotMn0pfWNvbnN0IFM9W107bGV0IGssUixOLEcseCxNLFUsTCxKLEgsWTtlJiYoaz1uZXcgUmVhZGVyKEUuZGF0YSxFLnN0YXJ0LEUuZW5kKSk7Zm9yKGQ9RC0xO2Q+PTA7ZC0tKXtSPWU/ZGVjb2RlTU1SQml0bWFwKGssZyxjLCEwKTpkZWNvZGVCaXRtYXAoITEsZyxjLGksITEsbnVsbCxGLEUpO1NbZF09Un1mb3IoTj0wO048YztOKyspZm9yKEc9MDtHPGc7RysrKXt4PTA7TT0wO2ZvcihmPUQtMTtmPj0wO2YtLSl7eF49U1tmXVtOXVtHXTtNfD14PDxmfVU9dFtNXTtMPWgrTipRK0cqQz4+ODtKPWwrTipDLUcqUT4+ODtpZihMPj0wJiZMK3c8PWEmJko+PTAmJkorYjw9cylmb3IoZD0wO2Q8YjtkKyspe1k9dVtKK2RdO0g9VVtkXTtmb3IoZj0wO2Y8dztmKyspWVtMK2ZdfD1IW2ZdfWVsc2V7bGV0IGUsdDtmb3IoZD0wO2Q8YjtkKyspe3Q9SitkO2lmKCEodDwwfHx0Pj1zKSl7WT11W3RdO0g9VVtkXTtmb3IoZj0wO2Y8dztmKyspe2U9TCtmO2U+PTAmJmU8YSYmKFlbZV18PUhbZl0pfX19fX1yZXR1cm4gdX0oZS5tbXIscixlLnRlbXBsYXRlLG4ud2lkdGgsbi5oZWlnaHQsZS5kZWZhdWx0UGl4ZWxWYWx1ZSxlLmVuYWJsZVNraXAsZS5jb21iaW5hdGlvbk9wZXJhdG9yLGUuZ3JpZFdpZHRoLGUuZ3JpZEhlaWdodCxlLmdyaWRPZmZzZXRYLGUuZ3JpZE9mZnNldFksZS5ncmlkVmVjdG9yWCxlLmdyaWRWZWN0b3JZLG8pO3RoaXMuZHJhd0JpdG1hcChuLGcpfW9uSW1tZWRpYXRlTG9zc2xlc3NIYWxmdG9uZVJlZ2lvbigpe3RoaXMub25JbW1lZGlhdGVIYWxmdG9uZVJlZ2lvbiguLi5hcmd1bWVudHMpfW9uVGFibGVzKGUsdCxpLGEpe2xldCBzPXRoaXMuY3VzdG9tVGFibGVzO3N8fCh0aGlzLmN1c3RvbVRhYmxlcz1zPXt9KTtzW2VdPWZ1bmN0aW9uIGRlY29kZVRhYmxlc1NlZ21lbnQoZSx0LGkpe2NvbnN0IGE9ZVt0XSxzPTQyOTQ5NjcyOTUmcmVhZFVpbnQzMihlLHQrMSkscj00Mjk0OTY3Mjk1JnJlYWRVaW50MzIoZSx0KzUpLG49bmV3IFJlYWRlcihlLHQrOSxpKSxvPTErKGE+PjEmNyksZz0xKyhhPj40JjcpLGM9W107bGV0IGgsbCxDPXM7ZG97aD1uLnJlYWRCaXRzKG8pO2w9bi5yZWFkQml0cyhnKTtjLnB1c2gobmV3IEh1ZmZtYW5MaW5lKFtDLGgsbCwwXSkpO0MrPTE8PGx9d2hpbGUoQzxyKTtoPW4ucmVhZEJpdHMobyk7Yy5wdXNoKG5ldyBIdWZmbWFuTGluZShbcy0xLGgsMzIsMCwibG93ZXIiXSkpO2g9bi5yZWFkQml0cyhvKTtjLnB1c2gobmV3IEh1ZmZtYW5MaW5lKFtyLGgsMzIsMF0pKTtpZigxJmEpe2g9bi5yZWFkQml0cyhvKTtjLnB1c2gobmV3IEh1ZmZtYW5MaW5lKFtoLDBdKSl9cmV0dXJuIG5ldyBIdWZmbWFuVGFibGUoYywhMSl9KHQsaSxhKX19Y2xhc3MgSHVmZm1hbkxpbmV7Y29uc3RydWN0b3IoZSl7aWYoMj09PWUubGVuZ3RoKXt0aGlzLmlzT09CPSEwO3RoaXMucmFuZ2VMb3c9MDt0aGlzLnByZWZpeExlbmd0aD1lWzBdO3RoaXMucmFuZ2VMZW5ndGg9MDt0aGlzLnByZWZpeENvZGU9ZVsxXTt0aGlzLmlzTG93ZXJSYW5nZT0hMX1lbHNle3RoaXMuaXNPT0I9ITE7dGhpcy5yYW5nZUxvdz1lWzBdO3RoaXMucHJlZml4TGVuZ3RoPWVbMV07dGhpcy5yYW5nZUxlbmd0aD1lWzJdO3RoaXMucHJlZml4Q29kZT1lWzNdO3RoaXMuaXNMb3dlclJhbmdlPSJsb3dlciI9PT1lWzRdfX19Y2xhc3MgSHVmZm1hblRyZWVOb2Rle2NvbnN0cnVjdG9yKGUpe3RoaXMuY2hpbGRyZW49W107aWYoZSl7dGhpcy5pc0xlYWY9ITA7dGhpcy5yYW5nZUxlbmd0aD1lLnJhbmdlTGVuZ3RoO3RoaXMucmFuZ2VMb3c9ZS5yYW5nZUxvdzt0aGlzLmlzTG93ZXJSYW5nZT1lLmlzTG93ZXJSYW5nZTt0aGlzLmlzT09CPWUuaXNPT0J9ZWxzZSB0aGlzLmlzTGVhZj0hMX1idWlsZFRyZWUoZSx0KXtjb25zdCBpPWUucHJlZml4Q29kZT4+dCYxO2lmKHQ8PTApdGhpcy5jaGlsZHJlbltpXT1uZXcgSHVmZm1hblRyZWVOb2RlKGUpO2Vsc2V7bGV0IGE9dGhpcy5jaGlsZHJlbltpXTthfHwodGhpcy5jaGlsZHJlbltpXT1hPW5ldyBIdWZmbWFuVHJlZU5vZGUobnVsbCkpO2EuYnVpbGRUcmVlKGUsdC0xKX19ZGVjb2RlTm9kZShlKXtpZih0aGlzLmlzTGVhZil7aWYodGhpcy5pc09PQilyZXR1cm4gbnVsbDtjb25zdCB0PWUucmVhZEJpdHModGhpcy5yYW5nZUxlbmd0aCk7cmV0dXJuIHRoaXMucmFuZ2VMb3crKHRoaXMuaXNMb3dlclJhbmdlPy10OnQpfWNvbnN0IHQ9dGhpcy5jaGlsZHJlbltlLnJlYWRCaXQoKV07aWYoIXQpdGhyb3cgbmV3IEpiaWcyRXJyb3IoImludmFsaWQgSHVmZm1hbiBkYXRhIik7cmV0dXJuIHQuZGVjb2RlTm9kZShlKX19Y2xhc3MgSHVmZm1hblRhYmxle2NvbnN0cnVjdG9yKGUsdCl7dHx8dGhpcy5hc3NpZ25QcmVmaXhDb2RlcyhlKTt0aGlzLnJvb3ROb2RlPW5ldyBIdWZmbWFuVHJlZU5vZGUobnVsbCk7Zm9yKGxldCB0PTAsaT1lLmxlbmd0aDt0PGk7dCsrKXtjb25zdCBpPWVbdF07aS5wcmVmaXhMZW5ndGg+MCYmdGhpcy5yb290Tm9kZS5idWlsZFRyZWUoaSxpLnByZWZpeExlbmd0aC0xKX19ZGVjb2RlKGUpe3JldHVybiB0aGlzLnJvb3ROb2RlLmRlY29kZU5vZGUoZSl9YXNzaWduUHJlZml4Q29kZXMoZSl7Y29uc3QgdD1lLmxlbmd0aDtsZXQgaT0wO2ZvcihsZXQgYT0wO2E8dDthKyspaT1NYXRoLm1heChpLGVbYV0ucHJlZml4TGVuZ3RoKTtjb25zdCBhPW5ldyBVaW50MzJBcnJheShpKzEpO2ZvcihsZXQgaT0wO2k8dDtpKyspYVtlW2ldLnByZWZpeExlbmd0aF0rKztsZXQgcyxyLG4sbz0xLGc9MDthWzBdPTA7Zm9yKDtvPD1pOyl7Zz1nK2Fbby0xXTw8MTtzPWc7cj0wO2Zvcig7cjx0Oyl7bj1lW3JdO2lmKG4ucHJlZml4TGVuZ3RoPT09byl7bi5wcmVmaXhDb2RlPXM7cysrfXIrK31vKyt9fX1jb25zdCBfdD17fTtmdW5jdGlvbiBnZXRTdGFuZGFyZFRhYmxlKGUpe2xldCB0LGk9X3RbZV07aWYoaSlyZXR1cm4gaTtzd2l0Y2goZSl7Y2FzZSAxOnQ9W1swLDEsNCwwXSxbMTYsMiw4LDJdLFsyNzIsMywxNiw2XSxbNjU4MDgsMywzMiw3XV07YnJlYWs7Y2FzZSAyOnQ9W1swLDEsMCwwXSxbMSwyLDAsMl0sWzIsMywwLDZdLFszLDQsMywxNF0sWzExLDUsNiwzMF0sWzc1LDYsMzIsNjJdLFs2LDYzXV07YnJlYWs7Y2FzZSAzOnQ9W1stMjU2LDgsOCwyNTRdLFswLDEsMCwwXSxbMSwyLDAsMl0sWzIsMywwLDZdLFszLDQsMywxNF0sWzExLDUsNiwzMF0sWy0yNTcsOCwzMiwyNTUsImxvd2VyIl0sWzc1LDcsMzIsMTI2XSxbNiw2Ml1dO2JyZWFrO2Nhc2UgNDp0PVtbMSwxLDAsMF0sWzIsMiwwLDJdLFszLDMsMCw2XSxbNCw0LDMsMTRdLFsxMiw1LDYsMzBdLFs3Niw1LDMyLDMxXV07YnJlYWs7Y2FzZSA1OnQ9W1stMjU1LDcsOCwxMjZdLFsxLDEsMCwwXSxbMiwyLDAsMl0sWzMsMywwLDZdLFs0LDQsMywxNF0sWzEyLDUsNiwzMF0sWy0yNTYsNywzMiwxMjcsImxvd2VyIl0sWzc2LDYsMzIsNjJdXTticmVhaztjYXNlIDY6dD1bWy0yMDQ4LDUsMTAsMjhdLFstMTAyNCw0LDksOF0sWy01MTIsNCw4LDldLFstMjU2LDQsNywxMF0sWy0xMjgsNSw2LDI5XSxbLTY0LDUsNSwzMF0sWy0zMiw0LDUsMTFdLFswLDIsNywwXSxbMTI4LDMsNywyXSxbMjU2LDMsOCwzXSxbNTEyLDQsOSwxMl0sWzEwMjQsNCwxMCwxM10sWy0yMDQ5LDYsMzIsNjIsImxvd2VyIl0sWzIwNDgsNiwzMiw2M11dO2JyZWFrO2Nhc2UgNzp0PVtbLTEwMjQsNCw5LDhdLFstNTEyLDMsOCwwXSxbLTI1Niw0LDcsOV0sWy0xMjgsNSw2LDI2XSxbLTY0LDUsNSwyN10sWy0zMiw0LDUsMTBdLFswLDQsNSwxMV0sWzMyLDUsNSwyOF0sWzY0LDUsNiwyOV0sWzEyOCw0LDcsMTJdLFsyNTYsMyw4LDFdLFs1MTIsMyw5LDJdLFsxMDI0LDMsMTAsM10sWy0xMDI1LDUsMzIsMzAsImxvd2VyIl0sWzIwNDgsNSwzMiwzMV1dO2JyZWFrO2Nhc2UgODp0PVtbLTE1LDgsMywyNTJdLFstNyw5LDEsNTA4XSxbLTUsOCwxLDI1M10sWy0zLDksMCw1MDldLFstMiw3LDAsMTI0XSxbLTEsNCwwLDEwXSxbMCwyLDEsMF0sWzIsNSwwLDI2XSxbMyw2LDAsNThdLFs0LDMsNCw0XSxbMjAsNiwxLDU5XSxbMjIsNCw0LDExXSxbMzgsNCw1LDEyXSxbNzAsNSw2LDI3XSxbMTM0LDUsNywyOF0sWzI2Miw2LDcsNjBdLFszOTAsNyw4LDEyNV0sWzY0Niw2LDEwLDYxXSxbLTE2LDksMzIsNTEwLCJsb3dlciJdLFsxNjcwLDksMzIsNTExXSxbMiwxXV07YnJlYWs7Y2FzZSA5OnQ9W1stMzEsOCw0LDI1Ml0sWy0xNSw5LDIsNTA4XSxbLTExLDgsMiwyNTNdLFstNyw5LDEsNTA5XSxbLTUsNywxLDEyNF0sWy0zLDQsMSwxMF0sWy0xLDMsMSwyXSxbMSwzLDEsM10sWzMsNSwxLDI2XSxbNSw2LDEsNThdLFs3LDMsNSw0XSxbMzksNiwyLDU5XSxbNDMsNCw1LDExXSxbNzUsNCw2LDEyXSxbMTM5LDUsNywyN10sWzI2Nyw1LDgsMjhdLFs1MjMsNiw4LDYwXSxbNzc5LDcsOSwxMjVdLFsxMjkxLDYsMTEsNjFdLFstMzIsOSwzMiw1MTAsImxvd2VyIl0sWzMzMzksOSwzMiw1MTFdLFsyLDBdXTticmVhaztjYXNlIDEwOnQ9W1stMjEsNyw0LDEyMl0sWy01LDgsMCwyNTJdLFstNCw3LDAsMTIzXSxbLTMsNSwwLDI0XSxbLTIsMiwyLDBdLFsyLDUsMCwyNV0sWzMsNiwwLDU0XSxbNCw3LDAsMTI0XSxbNSw4LDAsMjUzXSxbNiwyLDYsMV0sWzcwLDUsNSwyNl0sWzEwMiw2LDUsNTVdLFsxMzQsNiw2LDU2XSxbMTk4LDYsNyw1N10sWzMyNiw2LDgsNThdLFs1ODIsNiw5LDU5XSxbMTA5NCw2LDEwLDYwXSxbMjExOCw3LDExLDEyNV0sWy0yMiw4LDMyLDI1NCwibG93ZXIiXSxbNDE2Niw4LDMyLDI1NV0sWzIsMl1dO2JyZWFrO2Nhc2UgMTE6dD1bWzEsMSwwLDBdLFsyLDIsMSwyXSxbNCw0LDAsMTJdLFs1LDQsMSwxM10sWzcsNSwxLDI4XSxbOSw1LDIsMjldLFsxMyw2LDIsNjBdLFsxNyw3LDIsMTIyXSxbMjEsNywzLDEyM10sWzI5LDcsNCwxMjRdLFs0NSw3LDUsMTI1XSxbNzcsNyw2LDEyNl0sWzE0MSw3LDMyLDEyN11dO2JyZWFrO2Nhc2UgMTI6dD1bWzEsMSwwLDBdLFsyLDIsMCwyXSxbMywzLDEsNl0sWzUsNSwwLDI4XSxbNiw1LDEsMjldLFs4LDYsMSw2MF0sWzEwLDcsMCwxMjJdLFsxMSw3LDEsMTIzXSxbMTMsNywyLDEyNF0sWzE3LDcsMywxMjVdLFsyNSw3LDQsMTI2XSxbNDEsOCw1LDI1NF0sWzczLDgsMzIsMjU1XV07YnJlYWs7Y2FzZSAxMzp0PVtbMSwxLDAsMF0sWzIsMywwLDRdLFszLDQsMCwxMl0sWzQsNSwwLDI4XSxbNSw0LDEsMTNdLFs3LDMsMyw1XSxbMTUsNiwxLDU4XSxbMTcsNiwyLDU5XSxbMjEsNiwzLDYwXSxbMjksNiw0LDYxXSxbNDUsNiw1LDYyXSxbNzcsNyw2LDEyNl0sWzE0MSw3LDMyLDEyN11dO2JyZWFrO2Nhc2UgMTQ6dD1bWy0yLDMsMCw0XSxbLTEsMywwLDVdLFswLDEsMCwwXSxbMSwzLDAsNl0sWzIsMywwLDddXTticmVhaztjYXNlIDE1OnQ9W1stMjQsNyw0LDEyNF0sWy04LDYsMiw2MF0sWy00LDUsMSwyOF0sWy0yLDQsMCwxMl0sWy0xLDMsMCw0XSxbMCwxLDAsMF0sWzEsMywwLDVdLFsyLDQsMCwxM10sWzMsNSwxLDI5XSxbNSw2LDIsNjFdLFs5LDcsNCwxMjVdLFstMjUsNywzMiwxMjYsImxvd2VyIl0sWzI1LDcsMzIsMTI3XV07YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgSmJpZzJFcnJvcihgc3RhbmRhcmQgdGFibGUgQi4ke2V9IGRvZXMgbm90IGV4aXN0YCl9Zm9yKGxldCBlPTAsaT10Lmxlbmd0aDtlPGk7ZSsrKXRbZV09bmV3IEh1ZmZtYW5MaW5lKHRbZV0pO2k9bmV3IEh1ZmZtYW5UYWJsZSh0LCEwKTtfdFtlXT1pO3JldHVybiBpfWNsYXNzIFJlYWRlcntjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5kYXRhPWU7dGhpcy5zdGFydD10O3RoaXMuZW5kPWk7dGhpcy5wb3NpdGlvbj10O3RoaXMuc2hpZnQ9LTE7dGhpcy5jdXJyZW50Qnl0ZT0wfXJlYWRCaXQoKXtpZih0aGlzLnNoaWZ0PDApe2lmKHRoaXMucG9zaXRpb24+PXRoaXMuZW5kKXRocm93IG5ldyBKYmlnMkVycm9yKCJlbmQgb2YgZGF0YSB3aGlsZSByZWFkaW5nIGJpdCIpO3RoaXMuY3VycmVudEJ5dGU9dGhpcy5kYXRhW3RoaXMucG9zaXRpb24rK107dGhpcy5zaGlmdD03fWNvbnN0IGU9dGhpcy5jdXJyZW50Qnl0ZT4+dGhpcy5zaGlmdCYxO3RoaXMuc2hpZnQtLTtyZXR1cm4gZX1yZWFkQml0cyhlKXtsZXQgdCxpPTA7Zm9yKHQ9ZS0xO3Q+PTA7dC0tKWl8PXRoaXMucmVhZEJpdCgpPDx0O3JldHVybiBpfWJ5dGVBbGlnbigpe3RoaXMuc2hpZnQ9LTF9bmV4dCgpe3JldHVybiB0aGlzLnBvc2l0aW9uPj10aGlzLmVuZD8tMTp0aGlzLmRhdGFbdGhpcy5wb3NpdGlvbisrXX19ZnVuY3Rpb24gZ2V0Q3VzdG9tSHVmZm1hblRhYmxlKGUsdCxpKXtsZXQgYT0wO2ZvcihsZXQgcz0wLHI9dC5sZW5ndGg7czxyO3MrKyl7Y29uc3Qgcj1pW3Rbc11dO2lmKHIpe2lmKGU9PT1hKXJldHVybiByO2ErK319dGhyb3cgbmV3IEpiaWcyRXJyb3IoImNhbid0IGZpbmQgY3VzdG9tIEh1ZmZtYW4gdGFibGUiKX1mdW5jdGlvbiByZWFkVW5jb21wcmVzc2VkQml0bWFwKGUsdCxpKXtjb25zdCBhPVtdO2ZvcihsZXQgcz0wO3M8aTtzKyspe2NvbnN0IGk9bmV3IFVpbnQ4QXJyYXkodCk7YS5wdXNoKGkpO2ZvcihsZXQgYT0wO2E8dDthKyspaVthXT1lLnJlYWRCaXQoKTtlLmJ5dGVBbGlnbigpfXJldHVybiBhfWZ1bmN0aW9uIGRlY29kZU1NUkJpdG1hcChlLHQsaSxhKXtjb25zdCBzPW5ldyBDQ0lUVEZheERlY29kZXIoZSx7SzotMSxDb2x1bW5zOnQsUm93czppLEJsYWNrSXMxOiEwLEVuZE9mQmxvY2s6YX0pLHI9W107bGV0IG4sbz0hMTtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCBlPW5ldyBVaW50OEFycmF5KHQpO3IucHVzaChlKTtsZXQgaT0tMTtmb3IobGV0IGE9MDthPHQ7YSsrKXtpZihpPDApe249cy5yZWFkTmV4dENoYXIoKTtpZigtMT09PW4pe249MDtvPSEwfWk9N31lW2FdPW4+PmkmMTtpLS19fWlmKGEmJiFvKXtjb25zdCBlPTU7Zm9yKGxldCB0PTA7dDxlJiYtMSE9PXMucmVhZE5leHRDaGFyKCk7dCsrKTt9cmV0dXJuIHJ9Y2xhc3MgSmJpZzJJbWFnZXtwYXJzZUNodW5rcyhlKXtyZXR1cm4gZnVuY3Rpb24gcGFyc2VKYmlnMkNodW5rcyhlKXtjb25zdCB0PW5ldyBTaW1wbGVTZWdtZW50VmlzaXRvcjtmb3IobGV0IGk9MCxhPWUubGVuZ3RoO2k8YTtpKyspe2NvbnN0IGE9ZVtpXTtwcm9jZXNzU2VnbWVudHMocmVhZFNlZ21lbnRzKHt9LGEuZGF0YSxhLnN0YXJ0LGEuZW5kKSx0KX1yZXR1cm4gdC5idWZmZXJ9KGUpfXBhcnNlKGUpe3Rocm93IG5ldyBFcnJvcigiTm90IGltcGxlbWVudGVkOiBKYmlnMkltYWdlLnBhcnNlIil9fWNsYXNzIEpiaWcyU3RyZWFtIGV4dGVuZHMgRGVjb2RlU3RyZWFte2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcih0KTt0aGlzLnN0cmVhbT1lO3RoaXMuZGljdD1lLmRpY3Q7dGhpcy5tYXliZUxlbmd0aD10O3RoaXMucGFyYW1zPWl9Z2V0IGJ5dGVzKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJieXRlcyIsdGhpcy5zdHJlYW0uZ2V0Qnl0ZXModGhpcy5tYXliZUxlbmd0aCkpfWVuc3VyZUJ1ZmZlcihlKXt9cmVhZEJsb2NrKCl7aWYodGhpcy5lb2YpcmV0dXJuO2NvbnN0IGU9bmV3IEpiaWcySW1hZ2UsdD1bXTtpZih0aGlzLnBhcmFtcyBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IGU9dGhpcy5wYXJhbXMuZ2V0KCJKQklHMkdsb2JhbHMiKTtpZihlIGluc3RhbmNlb2YgQmFzZVN0cmVhbSl7Y29uc3QgaT1lLmdldEJ5dGVzKCk7dC5wdXNoKHtkYXRhOmksc3RhcnQ6MCxlbmQ6aS5sZW5ndGh9KX19dC5wdXNoKHtkYXRhOnRoaXMuYnl0ZXMsc3RhcnQ6MCxlbmQ6dGhpcy5ieXRlcy5sZW5ndGh9KTtjb25zdCBpPWUucGFyc2VDaHVua3ModCksYT1pLmxlbmd0aDtmb3IobGV0IGU9MDtlPGE7ZSsrKWlbZV1ePTI1NTt0aGlzLmJ1ZmZlcj1pO3RoaXMuYnVmZmVyTGVuZ3RoPWE7dGhpcy5lb2Y9ITB9fWZ1bmN0aW9uIGNvbnZlcnRUb1JHQkEoZSl7c3dpdGNoKGUua2luZCl7Y2FzZSBiOnJldHVybiBjb252ZXJ0QmxhY2tBbmRXaGl0ZVRvUkdCQShlKTtjYXNlIEQ6cmV0dXJuIGZ1bmN0aW9uIGNvbnZlcnRSR0JUb1JHQkEoe3NyYzplLHNyY1Bvczp0PTAsZGVzdDppLGRlc3RQb3M6YT0wLHdpZHRoOnMsaGVpZ2h0OnJ9KXtsZXQgbj0wO2NvbnN0IG89ZS5sZW5ndGg+PjIsZz1uZXcgVWludDMyQXJyYXkoZS5idWZmZXIsdCxvKTtpZihGZWF0dXJlVGVzdC5pc0xpdHRsZUVuZGlhbil7Zm9yKDtuPG8tMjtuKz0zLGErPTQpe2NvbnN0IGU9Z1tuXSx0PWdbbisxXSxzPWdbbisyXTtpW2FdPTQyNzgxOTAwODB8ZTtpW2ErMV09ZT4+PjI0fHQ8PDh8NDI3ODE5MDA4MDtpW2ErMl09dD4+PjE2fHM8PDE2fDQyNzgxOTAwODA7aVthKzNdPXM+Pj44fDQyNzgxOTAwODB9Zm9yKGxldCB0PTQqbixzPWUubGVuZ3RoO3Q8czt0Kz0zKWlbYSsrXT1lW3RdfGVbdCsxXTw8OHxlW3QrMl08PDE2fDQyNzgxOTAwODB9ZWxzZXtmb3IoO248by0yO24rPTMsYSs9NCl7Y29uc3QgZT1nW25dLHQ9Z1tuKzFdLHM9Z1tuKzJdO2lbYV09MjU1fGU7aVthKzFdPWU8PDI0fHQ+Pj44fDI1NTtpW2ErMl09dDw8MTZ8cz4+PjE2fDI1NTtpW2ErM109czw8OHwyNTV9Zm9yKGxldCB0PTQqbixzPWUubGVuZ3RoO3Q8czt0Kz0zKWlbYSsrXT1lW3RdPDwyNHxlW3QrMV08PDE2fGVbdCsyXTw8OHwyNTV9cmV0dXJue3NyY1Bvczp0LGRlc3RQb3M6YX19KGUpfXJldHVybiBudWxsfWZ1bmN0aW9uIGNvbnZlcnRCbGFja0FuZFdoaXRlVG9SR0JBKHtzcmM6ZSxzcmNQb3M6dD0wLGRlc3Q6aSx3aWR0aDphLGhlaWdodDpzLG5vbkJsYWNrQ29sb3I6cj00Mjk0OTY3Mjk1LGludmVyc2VEZWNvZGU6bj0hMX0pe2NvbnN0IG89RmVhdHVyZVRlc3QuaXNMaXR0bGVFbmRpYW4/NDI3ODE5MDA4MDoyNTUsW2csY109bj9bcixvXTpbbyxyXSxoPWE+PjMsbD03JmEsQz1lLmxlbmd0aDtpPW5ldyBVaW50MzJBcnJheShpLmJ1ZmZlcik7bGV0IFE9MDtmb3IobGV0IGE9MDthPHM7YSsrKXtmb3IoY29uc3QgYT10K2g7dDxhO3QrKyl7Y29uc3QgYT10PEM/ZVt0XToyNTU7aVtRKytdPTEyOCZhP2M6ZztpW1ErK109NjQmYT9jOmc7aVtRKytdPTMyJmE/YzpnO2lbUSsrXT0xNiZhP2M6ZztpW1ErK109OCZhP2M6ZztpW1ErK109NCZhP2M6ZztpW1ErK109MiZhP2M6ZztpW1ErK109MSZhP2M6Z31pZigwPT09bCljb250aW51ZTtjb25zdCBhPXQ8Qz9lW3QrK106MjU1O2ZvcihsZXQgZT0wO2U8bDtlKyspaVtRKytdPWEmMTw8Ny1lP2M6Z31yZXR1cm57c3JjUG9zOnQsZGVzdFBvczpRfX1jbGFzcyBKcGVnRXJyb3IgZXh0ZW5kcyBydHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlLCJKcGVnRXJyb3IiKX19Y2xhc3MgRE5MTWFya2VyRXJyb3IgZXh0ZW5kcyBydHtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsIkROTE1hcmtlckVycm9yIik7dGhpcy5zY2FuTGluZXM9dH19Y2xhc3MgRU9JTWFya2VyRXJyb3IgZXh0ZW5kcyBydHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlLCJFT0lNYXJrZXJFcnJvciIpfX1jb25zdCAkdD1uZXcgVWludDhBcnJheShbMCwxLDgsMTYsOSwyLDMsMTAsMTcsMjQsMzIsMjUsMTgsMTEsNCw1LDEyLDE5LDI2LDMzLDQwLDQ4LDQxLDM0LDI3LDIwLDEzLDYsNywxNCwyMSwyOCwzNSw0Miw0OSw1Niw1Nyw1MCw0MywzNiwyOSwyMiwxNSwyMywzMCwzNyw0NCw1MSw1OCw1OSw1Miw0NSwzOCwzMSwzOSw0Niw1Myw2MCw2MSw1NCw0Nyw1NSw2Miw2M10pLEFpPTQwMTcsZWk9Nzk5LHRpPTM0MDYsaWk9MjI3NixhaT0xNTY3LHNpPTM3ODQscmk9NTc5MyxuaT0yODk2O2Z1bmN0aW9uIGJ1aWxkSHVmZm1hblRhYmxlKGUsdCl7bGV0IGksYSxzPTAscj0xNjtmb3IoO3I+MCYmIWVbci0xXTspci0tO2NvbnN0IG49W3tjaGlsZHJlbjpbXSxpbmRleDowfV07bGV0IG8sZz1uWzBdO2ZvcihpPTA7aTxyO2krKyl7Zm9yKGE9MDthPGVbaV07YSsrKXtnPW4ucG9wKCk7Zy5jaGlsZHJlbltnLmluZGV4XT10W3NdO2Zvcig7Zy5pbmRleD4wOylnPW4ucG9wKCk7Zy5pbmRleCsrO24ucHVzaChnKTtmb3IoO24ubGVuZ3RoPD1pOyl7bi5wdXNoKG89e2NoaWxkcmVuOltdLGluZGV4OjB9KTtnLmNoaWxkcmVuW2cuaW5kZXhdPW8uY2hpbGRyZW47Zz1vfXMrK31pZihpKzE8cil7bi5wdXNoKG89e2NoaWxkcmVuOltdLGluZGV4OjB9KTtnLmNoaWxkcmVuW2cuaW5kZXhdPW8uY2hpbGRyZW47Zz1vfX1yZXR1cm4gblswXS5jaGlsZHJlbn1mdW5jdGlvbiBnZXRCbG9ja0J1ZmZlck9mZnNldChlLHQsaSl7cmV0dXJuIDY0KigoZS5ibG9ja3NQZXJMaW5lKzEpKnQraSl9ZnVuY3Rpb24gZGVjb2RlU2NhbihlLHQsaSxhLHMscixuLG8sZyxjPSExKXtjb25zdCBoPWkubWN1c1BlckxpbmUsbD1pLnByb2dyZXNzaXZlLEM9dDtsZXQgUT0wLEU9MDtmdW5jdGlvbiByZWFkQml0KCl7aWYoRT4wKXtFLS07cmV0dXJuIFE+PkUmMX1RPWVbdCsrXTtpZigyNTU9PT1RKXtjb25zdCBhPWVbdCsrXTtpZihhKXtpZigyMjA9PT1hJiZjKXtjb25zdCBhPXJlYWRVaW50MTYoZSx0Kz0yKTt0Kz0yO2lmKGE+MCYmYSE9PWkuc2NhbkxpbmVzKXRocm93IG5ldyBETkxNYXJrZXJFcnJvcigiRm91bmQgRE5MIG1hcmtlciAoMHhGRkRDKSB3aGlsZSBwYXJzaW5nIHNjYW4gZGF0YSIsYSl9ZWxzZSBpZigyMTc9PT1hKXtpZihjKXtjb25zdCBlPXAqKDg9PT1pLnByZWNpc2lvbj84OjApO2lmKGU+MCYmTWF0aC5yb3VuZChpLnNjYW5MaW5lcy9lKT49NSl0aHJvdyBuZXcgRE5MTWFya2VyRXJyb3IoIkZvdW5kIEVPSSBtYXJrZXIgKDB4RkZEOSkgd2hpbGUgcGFyc2luZyBzY2FuIGRhdGEsIHBvc3NpYmx5IGNhdXNlZCBieSBpbmNvcnJlY3QgYHNjYW5MaW5lc2AgcGFyYW1ldGVyIixlKX10aHJvdyBuZXcgRU9JTWFya2VyRXJyb3IoIkZvdW5kIEVPSSBtYXJrZXIgKDB4RkZEOSkgd2hpbGUgcGFyc2luZyBzY2FuIGRhdGEiKX10aHJvdyBuZXcgSnBlZ0Vycm9yKGB1bmV4cGVjdGVkIG1hcmtlciAkeyhRPDw4fGEpLnRvU3RyaW5nKDE2KX1gKX19RT03O3JldHVybiBRPj4+N31mdW5jdGlvbiBkZWNvZGVIdWZmbWFuKGUpe2xldCB0PWU7Zm9yKDs7KXt0PXRbcmVhZEJpdCgpXTtzd2l0Y2godHlwZW9mIHQpe2Nhc2UibnVtYmVyIjpyZXR1cm4gdDtjYXNlIm9iamVjdCI6Y29udGludWV9dGhyb3cgbmV3IEpwZWdFcnJvcigiaW52YWxpZCBodWZmbWFuIHNlcXVlbmNlIil9fWZ1bmN0aW9uIHJlY2VpdmUoZSl7bGV0IHQ9MDtmb3IoO2U+MDspe3Q9dDw8MXxyZWFkQml0KCk7ZS0tfXJldHVybiB0fWZ1bmN0aW9uIHJlY2VpdmVBbmRFeHRlbmQoZSl7aWYoMT09PWUpcmV0dXJuIDE9PT1yZWFkQml0KCk/MTotMTtjb25zdCB0PXJlY2VpdmUoZSk7cmV0dXJuIHQ+PTE8PGUtMT90OnQrKC0xPDxlKSsxfWxldCB1PTA7bGV0IGQsZj0wO2xldCBwPTA7ZnVuY3Rpb24gZGVjb2RlTWN1KGUsdCxpLGEscyl7Y29uc3Qgcj1pJWg7cD0oaS9ofDApKmUudithO2NvbnN0IG49ciplLmgrczt0KGUsZ2V0QmxvY2tCdWZmZXJPZmZzZXQoZSxwLG4pKX1mdW5jdGlvbiBkZWNvZGVCbG9jayhlLHQsaSl7cD1pL2UuYmxvY2tzUGVyTGluZXwwO2NvbnN0IGE9aSVlLmJsb2Nrc1BlckxpbmU7dChlLGdldEJsb2NrQnVmZmVyT2Zmc2V0KGUscCxhKSl9Y29uc3QgbT1hLmxlbmd0aDtsZXQgeSx3LGIsRCxGLFM7Uz1sPzA9PT1yPzA9PT1vP2Z1bmN0aW9uIGRlY29kZURDRmlyc3QoZSx0KXtjb25zdCBpPWRlY29kZUh1ZmZtYW4oZS5odWZmbWFuVGFibGVEQyksYT0wPT09aT8wOnJlY2VpdmVBbmRFeHRlbmQoaSk8PGc7ZS5ibG9ja0RhdGFbdF09ZS5wcmVkKz1hfTpmdW5jdGlvbiBkZWNvZGVEQ1N1Y2Nlc3NpdmUoZSx0KXtlLmJsb2NrRGF0YVt0XXw9cmVhZEJpdCgpPDxnfTowPT09bz9mdW5jdGlvbiBkZWNvZGVBQ0ZpcnN0KGUsdCl7aWYodT4wKXt1LS07cmV0dXJufWxldCBpPXI7Y29uc3QgYT1uO2Zvcig7aTw9YTspe2NvbnN0IGE9ZGVjb2RlSHVmZm1hbihlLmh1ZmZtYW5UYWJsZUFDKSxzPTE1JmEscj1hPj40O2lmKDA9PT1zKXtpZihyPDE1KXt1PXJlY2VpdmUocikrKDE8PHIpLTE7YnJlYWt9aSs9MTY7Y29udGludWV9aSs9cjtjb25zdCBuPSR0W2ldO2UuYmxvY2tEYXRhW3Qrbl09cmVjZWl2ZUFuZEV4dGVuZChzKSooMTw8Zyk7aSsrfX06ZnVuY3Rpb24gZGVjb2RlQUNTdWNjZXNzaXZlKGUsdCl7bGV0IGk9cjtjb25zdCBhPW47bGV0IHMsbyxjPTA7Zm9yKDtpPD1hOyl7Y29uc3QgYT10KyR0W2ldLHI9ZS5ibG9ja0RhdGFbYV08MD8tMToxO3N3aXRjaChmKXtjYXNlIDA6bz1kZWNvZGVIdWZmbWFuKGUuaHVmZm1hblRhYmxlQUMpO3M9MTUmbztjPW8+PjQ7aWYoMD09PXMpaWYoYzwxNSl7dT1yZWNlaXZlKGMpKygxPDxjKTtmPTR9ZWxzZXtjPTE2O2Y9MX1lbHNle2lmKDEhPT1zKXRocm93IG5ldyBKcGVnRXJyb3IoImludmFsaWQgQUNuIGVuY29kaW5nIik7ZD1yZWNlaXZlQW5kRXh0ZW5kKHMpO2Y9Yz8yOjN9Y29udGludWU7Y2FzZSAxOmNhc2UgMjppZihlLmJsb2NrRGF0YVthXSllLmJsb2NrRGF0YVthXSs9cioocmVhZEJpdCgpPDxnKTtlbHNle2MtLTswPT09YyYmKGY9Mj09PWY/MzowKX1icmVhaztjYXNlIDM6aWYoZS5ibG9ja0RhdGFbYV0pZS5ibG9ja0RhdGFbYV0rPXIqKHJlYWRCaXQoKTw8Zyk7ZWxzZXtlLmJsb2NrRGF0YVthXT1kPDxnO2Y9MH1icmVhaztjYXNlIDQ6ZS5ibG9ja0RhdGFbYV0mJihlLmJsb2NrRGF0YVthXSs9cioocmVhZEJpdCgpPDxnKSl9aSsrfWlmKDQ9PT1mKXt1LS07MD09PXUmJihmPTApfX06ZnVuY3Rpb24gZGVjb2RlQmFzZWxpbmUoZSx0KXtjb25zdCBpPWRlY29kZUh1ZmZtYW4oZS5odWZmbWFuVGFibGVEQyksYT0wPT09aT8wOnJlY2VpdmVBbmRFeHRlbmQoaSk7ZS5ibG9ja0RhdGFbdF09ZS5wcmVkKz1hO2xldCBzPTE7Zm9yKDtzPDY0Oyl7Y29uc3QgaT1kZWNvZGVIdWZmbWFuKGUuaHVmZm1hblRhYmxlQUMpLGE9MTUmaSxyPWk+PjQ7aWYoMD09PWEpe2lmKHI8MTUpYnJlYWs7cys9MTY7Y29udGludWV9cys9cjtjb25zdCBuPSR0W3NdO2UuYmxvY2tEYXRhW3Qrbl09cmVjZWl2ZUFuZEV4dGVuZChhKTtzKyt9fTtsZXQgayxSPTA7Y29uc3QgTj0xPT09bT9hWzBdLmJsb2Nrc1BlckxpbmUqYVswXS5ibG9ja3NQZXJDb2x1bW46aCppLm1jdXNQZXJDb2x1bW47bGV0IEcseDtmb3IoO1I8PU47KXtjb25zdCBpPXM/TWF0aC5taW4oTi1SLHMpOk47aWYoaT4wKXtmb3Iodz0wO3c8bTt3KyspYVt3XS5wcmVkPTA7dT0wO2lmKDE9PT1tKXt5PWFbMF07Zm9yKEY9MDtGPGk7RisrKXtkZWNvZGVCbG9jayh5LFMsUik7UisrfX1lbHNlIGZvcihGPTA7RjxpO0YrKyl7Zm9yKHc9MDt3PG07dysrKXt5PWFbd107Rz15Lmg7eD15LnY7Zm9yKGI9MDtiPHg7YisrKWZvcihEPTA7RDxHO0QrKylkZWNvZGVNY3UoeSxTLFIsYixEKX1SKyt9fUU9MDtrPWZpbmROZXh0RmlsZU1hcmtlcihlLHQpO2lmKCFrKWJyZWFrO2lmKGsuaW52YWxpZCl7d2FybihgZGVjb2RlU2NhbiAtICR7aT4wPyJ1bmV4cGVjdGVkIjoiZXhjZXNzaXZlIn0gTUNVIGRhdGEsIGN1cnJlbnQgbWFya2VyIGlzOiAke2suaW52YWxpZH1gKTt0PWsub2Zmc2V0fWlmKCEoay5tYXJrZXI+PTY1NDg4JiZrLm1hcmtlcjw9NjU0OTUpKWJyZWFrO3QrPTJ9cmV0dXJuIHQtQ31mdW5jdGlvbiBxdWFudGl6ZUFuZEludmVyc2UoZSx0LGkpe2NvbnN0IGE9ZS5xdWFudGl6YXRpb25UYWJsZSxzPWUuYmxvY2tEYXRhO2xldCByLG4sbyxnLGMsaCxsLEMsUSxFLHUsZCxmLHAsbSx5LHc7aWYoIWEpdGhyb3cgbmV3IEpwZWdFcnJvcigibWlzc2luZyByZXF1aXJlZCBRdWFudGl6YXRpb24gVGFibGUuIik7Zm9yKGxldCBlPTA7ZTw2NDtlKz04KXtRPXNbdCtlXTtFPXNbdCtlKzFdO3U9c1t0K2UrMl07ZD1zW3QrZSszXTtmPXNbdCtlKzRdO3A9c1t0K2UrNV07bT1zW3QrZSs2XTt5PXNbdCtlKzddO1EqPWFbZV07aWYoRXx1fGR8ZnxwfG18eSl7RSo9YVtlKzFdO3UqPWFbZSsyXTtkKj1hW2UrM107Zio9YVtlKzRdO3AqPWFbZSs1XTttKj1hW2UrNl07eSo9YVtlKzddO3I9cmkqUSsxMjg+Pjg7bj1yaSpmKzEyOD4+ODtvPXU7Zz1tO2M9bmkqKEUteSkrMTI4Pj44O0M9bmkqKEUreSkrMTI4Pj44O2g9ZDw8NDtsPXA8PDQ7cj1yK24rMT4+MTtuPXItbjt3PW8qc2krZyphaSsxMjg+Pjg7bz1vKmFpLWcqc2krMTI4Pj44O2c9dztjPWMrbCsxPj4xO2w9Yy1sO0M9QytoKzE+PjE7aD1DLWg7cj1yK2crMT4+MTtnPXItZztuPW4rbysxPj4xO289bi1vO3c9YyppaStDKnRpKzIwNDg+PjEyO2M9Yyp0aS1DKmlpKzIwNDg+PjEyO0M9dzt3PWgqZWkrbCpBaSsyMDQ4Pj4xMjtoPWgqQWktbCplaSsyMDQ4Pj4xMjtsPXc7aVtlXT1yK0M7aVtlKzddPXItQztpW2UrMV09bitsO2lbZSs2XT1uLWw7aVtlKzJdPW8raDtpW2UrNV09by1oO2lbZSszXT1nK2M7aVtlKzRdPWctY31lbHNle3c9cmkqUSs1MTI+PjEwO2lbZV09dztpW2UrMV09dztpW2UrMl09dztpW2UrM109dztpW2UrNF09dztpW2UrNV09dztpW2UrNl09dztpW2UrN109d319Zm9yKGxldCBlPTA7ZTw4OysrZSl7UT1pW2VdO0U9aVtlKzhdO3U9aVtlKzE2XTtkPWlbZSsyNF07Zj1pW2UrMzJdO3A9aVtlKzQwXTttPWlbZSs0OF07eT1pW2UrNTZdO2lmKEV8dXxkfGZ8cHxtfHkpe3I9cmkqUSsyMDQ4Pj4xMjtuPXJpKmYrMjA0OD4+MTI7bz11O2c9bTtjPW5pKihFLXkpKzIwNDg+PjEyO0M9bmkqKEUreSkrMjA0OD4+MTI7aD1kO2w9cDtyPTQxMTIrKHIrbisxPj4xKTtuPXItbjt3PW8qc2krZyphaSsyMDQ4Pj4xMjtvPW8qYWktZypzaSsyMDQ4Pj4xMjtnPXc7Yz1jK2wrMT4+MTtsPWMtbDtDPUMraCsxPj4xO2g9Qy1oO3I9citnKzE+PjE7Zz1yLWc7bj1uK28rMT4+MTtvPW4tbzt3PWMqaWkrQyp0aSsyMDQ4Pj4xMjtjPWMqdGktQyppaSsyMDQ4Pj4xMjtDPXc7dz1oKmVpK2wqQWkrMjA0OD4+MTI7aD1oKkFpLWwqZWkrMjA0OD4+MTI7bD13O1E9citDO3k9ci1DO0U9bitsO209bi1sO3U9bytoO3A9by1oO2Q9ZytjO2Y9Zy1jO1E8MTY/UT0wOlE+PTQwODA/UT0yNTU6UT4+PTQ7RTwxNj9FPTA6RT49NDA4MD9FPTI1NTpFPj49NDt1PDE2P3U9MDp1Pj00MDgwP3U9MjU1OnU+Pj00O2Q8MTY/ZD0wOmQ+PTQwODA/ZD0yNTU6ZD4+PTQ7ZjwxNj9mPTA6Zj49NDA4MD9mPTI1NTpmPj49NDtwPDE2P3A9MDpwPj00MDgwP3A9MjU1OnA+Pj00O208MTY/bT0wOm0+PTQwODA/bT0yNTU6bT4+PTQ7eTwxNj95PTA6eT49NDA4MD95PTI1NTp5Pj49NDtzW3QrZV09UTtzW3QrZSs4XT1FO3NbdCtlKzE2XT11O3NbdCtlKzI0XT1kO3NbdCtlKzMyXT1mO3NbdCtlKzQwXT1wO3NbdCtlKzQ4XT1tO3NbdCtlKzU2XT15fWVsc2V7dz1yaSpRKzgxOTI+PjE0O3c9dzwtMjA0MD8wOnc+PTIwMjQ/MjU1OncrMjA1Nj4+NDtzW3QrZV09dztzW3QrZSs4XT13O3NbdCtlKzE2XT13O3NbdCtlKzI0XT13O3NbdCtlKzMyXT13O3NbdCtlKzQwXT13O3NbdCtlKzQ4XT13O3NbdCtlKzU2XT13fX19ZnVuY3Rpb24gYnVpbGRDb21wb25lbnREYXRhKGUsdCl7Y29uc3QgaT10LmJsb2Nrc1BlckxpbmUsYT10LmJsb2Nrc1BlckNvbHVtbixzPW5ldyBJbnQxNkFycmF5KDY0KTtmb3IobGV0IGU9MDtlPGE7ZSsrKWZvcihsZXQgYT0wO2E8aTthKyspe3F1YW50aXplQW5kSW52ZXJzZSh0LGdldEJsb2NrQnVmZmVyT2Zmc2V0KHQsZSxhKSxzKX1yZXR1cm4gdC5ibG9ja0RhdGF9ZnVuY3Rpb24gZmluZE5leHRGaWxlTWFya2VyKGUsdCxpPXQpe2NvbnN0IGE9ZS5sZW5ndGgtMTtsZXQgcz1pPHQ/aTp0O2lmKHQ+PWEpcmV0dXJuIG51bGw7Y29uc3Qgcj1yZWFkVWludDE2KGUsdCk7aWYocj49NjU0NzImJnI8PTY1NTM0KXJldHVybntpbnZhbGlkOm51bGwsbWFya2VyOnIsb2Zmc2V0OnR9O2xldCBuPXJlYWRVaW50MTYoZSxzKTtmb3IoOyEobj49NjU0NzImJm48PTY1NTM0KTspe2lmKCsrcz49YSlyZXR1cm4gbnVsbDtuPXJlYWRVaW50MTYoZSxzKX1yZXR1cm57aW52YWxpZDpyLnRvU3RyaW5nKDE2KSxtYXJrZXI6bixvZmZzZXQ6c319Y2xhc3MgSnBlZ0ltYWdle2NvbnN0cnVjdG9yKHtkZWNvZGVUcmFuc2Zvcm06ZT1udWxsLGNvbG9yVHJhbnNmb3JtOnQ9LTF9PXt9KXt0aGlzLl9kZWNvZGVUcmFuc2Zvcm09ZTt0aGlzLl9jb2xvclRyYW5zZm9ybT10fXBhcnNlKGUse2RubFNjYW5MaW5lczp0PW51bGx9PXt9KXtmdW5jdGlvbiByZWFkRGF0YUJsb2NrKCl7Y29uc3QgdD1yZWFkVWludDE2KGUscyk7cys9MjtsZXQgaT1zK3QtMjtjb25zdCBhPWZpbmROZXh0RmlsZU1hcmtlcihlLGkscyk7aWYoYT8uaW52YWxpZCl7d2FybigicmVhZERhdGFCbG9jayAtIGluY29ycmVjdCBsZW5ndGgsIGN1cnJlbnQgbWFya2VyIGlzOiAiK2EuaW52YWxpZCk7aT1hLm9mZnNldH1jb25zdCByPWUuc3ViYXJyYXkocyxpKTtzKz1yLmxlbmd0aDtyZXR1cm4gcn1mdW5jdGlvbiBwcmVwYXJlQ29tcG9uZW50cyhlKXtjb25zdCB0PU1hdGguY2VpbChlLnNhbXBsZXNQZXJMaW5lLzgvZS5tYXhIKSxpPU1hdGguY2VpbChlLnNjYW5MaW5lcy84L2UubWF4Vik7Zm9yKGNvbnN0IGEgb2YgZS5jb21wb25lbnRzKXtjb25zdCBzPU1hdGguY2VpbChNYXRoLmNlaWwoZS5zYW1wbGVzUGVyTGluZS84KSphLmgvZS5tYXhIKSxyPU1hdGguY2VpbChNYXRoLmNlaWwoZS5zY2FuTGluZXMvOCkqYS52L2UubWF4Viksbj10KmEuaCxvPTY0KihpKmEudikqKG4rMSk7YS5ibG9ja0RhdGE9bmV3IEludDE2QXJyYXkobyk7YS5ibG9ja3NQZXJMaW5lPXM7YS5ibG9ja3NQZXJDb2x1bW49cn1lLm1jdXNQZXJMaW5lPXQ7ZS5tY3VzUGVyQ29sdW1uPWl9bGV0IGksYSxzPTAscj1udWxsLG49bnVsbCxvPTA7Y29uc3QgZz1bXSxjPVtdLGg9W107bGV0IGw9cmVhZFVpbnQxNihlLHMpO3MrPTI7aWYoNjU0OTYhPT1sKXRocm93IG5ldyBKcGVnRXJyb3IoIlNPSSBub3QgZm91bmQiKTtsPXJlYWRVaW50MTYoZSxzKTtzKz0yO0E6Zm9yKDs2NTQ5NyE9PWw7KXtsZXQgQyxRLEU7c3dpdGNoKGwpe2Nhc2UgNjU1MDQ6Y2FzZSA2NTUwNTpjYXNlIDY1NTA2OmNhc2UgNjU1MDc6Y2FzZSA2NTUwODpjYXNlIDY1NTA5OmNhc2UgNjU1MTA6Y2FzZSA2NTUxMTpjYXNlIDY1NTEyOmNhc2UgNjU1MTM6Y2FzZSA2NTUxNDpjYXNlIDY1NTE1OmNhc2UgNjU1MTY6Y2FzZSA2NTUxNzpjYXNlIDY1NTE4OmNhc2UgNjU1MTk6Y2FzZSA2NTUzNDpjb25zdCB1PXJlYWREYXRhQmxvY2soKTs2NTUwND09PWwmJjc0PT09dVswXSYmNzA9PT11WzFdJiY3Mz09PXVbMl0mJjcwPT09dVszXSYmMD09PXVbNF0mJihyPXt2ZXJzaW9uOnttYWpvcjp1WzVdLG1pbm9yOnVbNl19LGRlbnNpdHlVbml0czp1WzddLHhEZW5zaXR5OnVbOF08PDh8dVs5XSx5RGVuc2l0eTp1WzEwXTw8OHx1WzExXSx0aHVtYldpZHRoOnVbMTJdLHRodW1iSGVpZ2h0OnVbMTNdLHRodW1iRGF0YTp1LnN1YmFycmF5KDE0LDE0KzMqdVsxMl0qdVsxM10pfSk7NjU1MTg9PT1sJiY2NT09PXVbMF0mJjEwMD09PXVbMV0mJjExMT09PXVbMl0mJjk4PT09dVszXSYmMTAxPT09dVs0XSYmKG49e3ZlcnNpb246dVs1XTw8OHx1WzZdLGZsYWdzMDp1WzddPDw4fHVbOF0sZmxhZ3MxOnVbOV08PDh8dVsxMF0sdHJhbnNmb3JtQ29kZTp1WzExXX0pO2JyZWFrO2Nhc2UgNjU0OTk6Y29uc3QgZD1yZWFkVWludDE2KGUscyk7cys9Mjtjb25zdCBmPWQrcy0yO2xldCBwO2Zvcig7czxmOyl7Y29uc3QgdD1lW3MrK10saT1uZXcgVWludDE2QXJyYXkoNjQpO2lmKHQ+PjQpe2lmKHQ+PjQhPTEpdGhyb3cgbmV3IEpwZWdFcnJvcigiRFFUIC0gaW52YWxpZCB0YWJsZSBzcGVjIik7Zm9yKFE9MDtRPDY0O1ErKyl7cD0kdFtRXTtpW3BdPXJlYWRVaW50MTYoZSxzKTtzKz0yfX1lbHNlIGZvcihRPTA7UTw2NDtRKyspe3A9JHRbUV07aVtwXT1lW3MrK119Z1sxNSZ0XT1pfWJyZWFrO2Nhc2UgNjU0NzI6Y2FzZSA2NTQ3MzpjYXNlIDY1NDc0OmlmKGkpdGhyb3cgbmV3IEpwZWdFcnJvcigiT25seSBzaW5nbGUgZnJhbWUgSlBFR3Mgc3VwcG9ydGVkIik7cys9MjtpPXt9O2kuZXh0ZW5kZWQ9NjU0NzM9PT1sO2kucHJvZ3Jlc3NpdmU9NjU0NzQ9PT1sO2kucHJlY2lzaW9uPWVbcysrXTtjb25zdCBtPXJlYWRVaW50MTYoZSxzKTtzKz0yO2kuc2NhbkxpbmVzPXR8fG07aS5zYW1wbGVzUGVyTGluZT1yZWFkVWludDE2KGUscyk7cys9MjtpLmNvbXBvbmVudHM9W107aS5jb21wb25lbnRJZHM9e307Y29uc3QgeT1lW3MrK107bGV0IHc9MCxiPTA7Zm9yKEM9MDtDPHk7QysrKXtjb25zdCB0PWVbc10sYT1lW3MrMV0+PjQscj0xNSZlW3MrMV07dzxhJiYodz1hKTtiPHImJihiPXIpO2NvbnN0IG49ZVtzKzJdO0U9aS5jb21wb25lbnRzLnB1c2goe2g6YSx2OnIscXVhbnRpemF0aW9uSWQ6bixxdWFudGl6YXRpb25UYWJsZTpudWxsfSk7aS5jb21wb25lbnRJZHNbdF09RS0xO3MrPTN9aS5tYXhIPXc7aS5tYXhWPWI7cHJlcGFyZUNvbXBvbmVudHMoaSk7YnJlYWs7Y2FzZSA2NTQ3Njpjb25zdCBEPXJlYWRVaW50MTYoZSxzKTtzKz0yO2ZvcihDPTI7QzxEOyl7Y29uc3QgdD1lW3MrK10saT1uZXcgVWludDhBcnJheSgxNik7bGV0IGE9MDtmb3IoUT0wO1E8MTY7USsrLHMrKylhKz1pW1FdPWVbc107Y29uc3Qgcj1uZXcgVWludDhBcnJheShhKTtmb3IoUT0wO1E8YTtRKysscysrKXJbUV09ZVtzXTtDKz0xNythOyh0Pj40P2M6aClbMTUmdF09YnVpbGRIdWZmbWFuVGFibGUoaSxyKX1icmVhaztjYXNlIDY1NTAxOnMrPTI7YT1yZWFkVWludDE2KGUscyk7cys9MjticmVhaztjYXNlIDY1NDk4OmNvbnN0IEY9MT09KytvJiYhdDtzKz0yO2NvbnN0IFM9ZVtzKytdLGs9W107Zm9yKEM9MDtDPFM7QysrKXtjb25zdCB0PWVbcysrXSxhPWkuY29tcG9uZW50SWRzW3RdLHI9aS5jb21wb25lbnRzW2FdO3IuaW5kZXg9dDtjb25zdCBuPWVbcysrXTtyLmh1ZmZtYW5UYWJsZURDPWhbbj4+NF07ci5odWZmbWFuVGFibGVBQz1jWzE1Jm5dO2sucHVzaChyKX1jb25zdCBSPWVbcysrXSxOPWVbcysrXSxHPWVbcysrXTt0cnl7Y29uc3QgdD1kZWNvZGVTY2FuKGUscyxpLGssYSxSLE4sRz4+NCwxNSZHLEYpO3MrPXR9Y2F0Y2godCl7aWYodCBpbnN0YW5jZW9mIEROTE1hcmtlckVycm9yKXt3YXJuKGAke3QubWVzc2FnZX0gLS0gYXR0ZW1wdGluZyB0byByZS1wYXJzZSB0aGUgSlBFRyBpbWFnZS5gKTtyZXR1cm4gdGhpcy5wYXJzZShlLHtkbmxTY2FuTGluZXM6dC5zY2FuTGluZXN9KX1pZih0IGluc3RhbmNlb2YgRU9JTWFya2VyRXJyb3Ipe3dhcm4oYCR7dC5tZXNzYWdlfSAtLSBpZ25vcmluZyB0aGUgcmVzdCBvZiB0aGUgaW1hZ2UgZGF0YS5gKTticmVhayBBfXRocm93IHR9YnJlYWs7Y2FzZSA2NTUwMDpzKz00O2JyZWFrO2Nhc2UgNjU1MzU6MjU1IT09ZVtzXSYmcy0tO2JyZWFrO2RlZmF1bHQ6Y29uc3QgeD1maW5kTmV4dEZpbGVNYXJrZXIoZSxzLTIscy0zKTtpZih4Py5pbnZhbGlkKXt3YXJuKCJKcGVnSW1hZ2UucGFyc2UgLSB1bmV4cGVjdGVkIGRhdGEsIGN1cnJlbnQgbWFya2VyIGlzOiAiK3guaW52YWxpZCk7cz14Lm9mZnNldDticmVha31pZigheHx8cz49ZS5sZW5ndGgtMSl7d2FybigiSnBlZ0ltYWdlLnBhcnNlIC0gcmVhY2hlZCB0aGUgZW5kIG9mIHRoZSBpbWFnZSBkYXRhIHdpdGhvdXQgZmluZGluZyBhbiBFT0kgbWFya2VyICgweEZGRDkpLiIpO2JyZWFrIEF9dGhyb3cgbmV3IEpwZWdFcnJvcigiSnBlZ0ltYWdlLnBhcnNlIC0gdW5rbm93biBtYXJrZXI6ICIrbC50b1N0cmluZygxNikpfWw9cmVhZFVpbnQxNihlLHMpO3MrPTJ9aWYoIWkpdGhyb3cgbmV3IEpwZWdFcnJvcigiSnBlZ0ltYWdlLnBhcnNlIC0gbm8gZnJhbWUgZGF0YSBmb3VuZC4iKTt0aGlzLndpZHRoPWkuc2FtcGxlc1BlckxpbmU7dGhpcy5oZWlnaHQ9aS5zY2FuTGluZXM7dGhpcy5qZmlmPXI7dGhpcy5hZG9iZT1uO3RoaXMuY29tcG9uZW50cz1bXTtmb3IoY29uc3QgZSBvZiBpLmNvbXBvbmVudHMpe2NvbnN0IHQ9Z1tlLnF1YW50aXphdGlvbklkXTt0JiYoZS5xdWFudGl6YXRpb25UYWJsZT10KTt0aGlzLmNvbXBvbmVudHMucHVzaCh7aW5kZXg6ZS5pbmRleCxvdXRwdXQ6YnVpbGRDb21wb25lbnREYXRhKDAsZSksc2NhbGVYOmUuaC9pLm1heEgsc2NhbGVZOmUudi9pLm1heFYsYmxvY2tzUGVyTGluZTplLmJsb2Nrc1BlckxpbmUsYmxvY2tzUGVyQ29sdW1uOmUuYmxvY2tzUGVyQ29sdW1ufSl9dGhpcy5udW1Db21wb25lbnRzPXRoaXMuY29tcG9uZW50cy5sZW5ndGh9X2dldExpbmVhcml6ZWRCbG9ja0RhdGEoZSx0LGk9ITEpe2NvbnN0IGE9dGhpcy53aWR0aC9lLHM9dGhpcy5oZWlnaHQvdDtsZXQgcixuLG8sZyxjLGgsbCxDLFEsRSx1LGQ9MDtjb25zdCBmPXRoaXMuY29tcG9uZW50cy5sZW5ndGgscD1lKnQqZixtPW5ldyBVaW50OENsYW1wZWRBcnJheShwKSx5PW5ldyBVaW50MzJBcnJheShlKSx3PTQyOTQ5NjcyODg7bGV0IGI7Zm9yKGw9MDtsPGY7bCsrKXtyPXRoaXMuY29tcG9uZW50c1tsXTtuPXIuc2NhbGVYKmE7bz1yLnNjYWxlWSpzO2Q9bDt1PXIub3V0cHV0O2c9ci5ibG9ja3NQZXJMaW5lKzE8PDM7aWYobiE9PWIpe2ZvcihjPTA7YzxlO2MrKyl7Qz0wfGMqbjt5W2NdPShDJncpPDwzfDcmQ31iPW59Zm9yKGg9MDtoPHQ7aCsrKXtDPTB8aCpvO0U9ZyooQyZ3KXwoNyZDKTw8Mztmb3IoYz0wO2M8ZTtjKyspe21bZF09dVtFK3lbY11dO2QrPWZ9fX1sZXQgRD10aGlzLl9kZWNvZGVUcmFuc2Zvcm07aXx8NCE9PWZ8fER8fChEPW5ldyBJbnQzMkFycmF5KFstMjU2LDI1NSwtMjU2LDI1NSwtMjU2LDI1NSwtMjU2LDI1NV0pKTtpZihEKWZvcihsPTA7bDxwOylmb3IoQz0wLFE9MDtDPGY7QysrLGwrKyxRKz0yKW1bbF09KG1bbF0qRFtRXT4+OCkrRFtRKzFdO3JldHVybiBtfWdldCBfaXNDb2xvckNvbnZlcnNpb25OZWVkZWQoKXtyZXR1cm4gdGhpcy5hZG9iZT8hIXRoaXMuYWRvYmUudHJhbnNmb3JtQ29kZTozPT09dGhpcy5udW1Db21wb25lbnRzPzAhPT10aGlzLl9jb2xvclRyYW5zZm9ybSYmKDgyIT09dGhpcy5jb21wb25lbnRzWzBdLmluZGV4fHw3MSE9PXRoaXMuY29tcG9uZW50c1sxXS5pbmRleHx8NjYhPT10aGlzLmNvbXBvbmVudHNbMl0uaW5kZXgpOjE9PT10aGlzLl9jb2xvclRyYW5zZm9ybX1fY29udmVydFljY1RvUmdiKGUpe2xldCB0LGksYTtmb3IobGV0IHM9MCxyPWUubGVuZ3RoO3M8cjtzKz0zKXt0PWVbc107aT1lW3MrMV07YT1lW3MrMl07ZVtzXT10LTE3OS40NTYrMS40MDIqYTtlW3MrMV09dCsxMzUuNDU5LS4zNDQqaS0uNzE0KmE7ZVtzKzJdPXQtMjI2LjgxNisxLjc3MippfXJldHVybiBlfV9jb252ZXJ0WWNjVG9SZ2JhKGUsdCl7Zm9yKGxldCBpPTAsYT0wLHM9ZS5sZW5ndGg7aTxzO2krPTMsYSs9NCl7Y29uc3Qgcz1lW2ldLHI9ZVtpKzFdLG49ZVtpKzJdO3RbYV09cy0xNzkuNDU2KzEuNDAyKm47dFthKzFdPXMrMTM1LjQ1OS0uMzQ0KnItLjcxNCpuO3RbYSsyXT1zLTIyNi44MTYrMS43NzIqcjt0W2ErM109MjU1fXJldHVybiB0fV9jb252ZXJ0WWNja1RvUmdiKGUpe2xldCB0LGksYSxzLHI9MDtmb3IobGV0IG49MCxvPWUubGVuZ3RoO248bztuKz00KXt0PWVbbl07aT1lW24rMV07YT1lW24rMl07cz1lW24rM107ZVtyKytdPWkqKC02NjA2MzU2Njk0MjAzNjRlLTE5KmkrLjAwMDQzNzEzMDQ3NTkyNjIzMiphLTU0MDgwNjEwMDY0NTk5ZS0xOCp0Ky4wMDA0ODQ0OTc5NzEyMDI4MSpzLS4xNTQzNjIxNTE4NzExMjYpLTEyMi42NzE5NTQwNjg5NCthKigtLjAwMDk1Nzk2NDM3ODQ0NTc3MyphKy4wMDA4MTcwNzY5MTEzNDY2MjUqdC0uMDA0NzcyNzE0MDU0MDg3NDcqcysxLjUzMzgwMjUzMjIxNzM0KSt0KiguMDAwOTYxMjUwMTg0MTMwNjg4KnQtLjAwMjY2MjU3MzMyMjgzOTMzKnMrLjQ4MzU3MDg4NDUxMjY1KStzKigtLjAwMDMzNjE5NzE3NzYxODM5NCpzKy40ODQ3OTE1NjE0OTA3NzYpO2VbcisrXT0xMDcuMjY4MDM5Mzk3NzI0K2kqKDIxOTkyNzEwNDUyNTc0MWUtMTkqaS0uMDAwNjQwOTkyMDE4Mjk3OTQ1KmErLjAwMDY1OTM5NzAwMTI0NTU3Nyp0Ky4wMDA0MjYxMDU2NTI5Mzg4Mzcqcy0uMTc2NDkxNzkyNDYyODc1KSthKigtLjAwMDc3ODI2OTk0MTUxMzY4MyphKy4wMDEzMDg3MjI2MTQwODI3NSp0Ky4wMDA3NzA0ODI2MzE4MDExMzIqcy0uMTUxMDUxNDkyNzc1NTYyKSt0KiguMDAxMjY5MzUzNjgxMTQ4NDMqdC0uMDAyNjUwOTAxODkwMTA4OTgqcysuMjU4MDI5MTAyMDY4NDUpK3MqKC0uMDAwMzE4OTEzMTE3NTg4MzI4KnMtLjIxMzc0MjQwMDMyMzY2NSk7ZVtyKytdPWkqKC0uMDAwNTcwMTE1MTk2OTczNjc3KmktMjYzNDA5MDUxMDA0NTg5ZS0xOSphKy4wMDIwNzQxMDg4MTE1MDEyKnQtLjAwMjg4MjYwMjM2ODUzNDQyKnMrLjgxNDI3Mjk2ODM1OTI5NSktMjAuODEwMDEyNTQ2OTQ3K2EqKC0xNTM0OTYwNTc0NDA5NzVlLTE5KmEtLjAwMDEzMjY4OTA0Mzk2MTQ0Nip0Ky4wMDA1NjA4MzM2OTEyNDI4MTIqcy0uMTk1MTUyMDI3NTM0MDQ5KSt0KiguMDAxNzQ0MTgxMzI5Mjc1ODIqdC0uMDAyNTUyNDMzMjE0MzkzNDcqcysuMTE2OTM1MDIwNDY1MTQ1KStzKigtLjAwMDM0MzUzMTk5NjUxMDU1NSpzKy4yNDE2NTI2MDIzMjQwNyl9cmV0dXJuIGUuc3ViYXJyYXkoMCxyKX1fY29udmVydFljY2tUb1JnYmEoZSl7Zm9yKGxldCB0PTAsaT1lLmxlbmd0aDt0PGk7dCs9NCl7Y29uc3QgaT1lW3RdLGE9ZVt0KzFdLHM9ZVt0KzJdLHI9ZVt0KzNdO2VbdF09YSooLTY2MDYzNTY2OTQyMDM2NGUtMTkqYSsuMDAwNDM3MTMwNDc1OTI2MjMyKnMtNTQwODA2MTAwNjQ1OTllLTE4KmkrLjAwMDQ4NDQ5Nzk3MTIwMjgxKnItLjE1NDM2MjE1MTg3MTEyNiktMTIyLjY3MTk1NDA2ODk0K3MqKC0uMDAwOTU3OTY0Mzc4NDQ1NzczKnMrLjAwMDgxNzA3NjkxMTM0NjYyNSppLS4wMDQ3NzI3MTQwNTQwODc0NypyKzEuNTMzODAyNTMyMjE3MzQpK2kqKC4wMDA5NjEyNTAxODQxMzA2ODgqaS0uMDAyNjYyNTczMzIyODM5MzMqcisuNDgzNTcwODg0NTEyNjUpK3IqKC0uMDAwMzM2MTk3MTc3NjE4Mzk0KnIrLjQ4NDc5MTU2MTQ5MDc3Nik7ZVt0KzFdPTEwNy4yNjgwMzkzOTc3MjQrYSooMjE5OTI3MTA0NTI1NzQxZS0xOSphLS4wMDA2NDA5OTIwMTgyOTc5NDUqcysuMDAwNjU5Mzk3MDAxMjQ1NTc3KmkrLjAwMDQyNjEwNTY1MjkzODgzNypyLS4xNzY0OTE3OTI0NjI4NzUpK3MqKC0uMDAwNzc4MjY5OTQxNTEzNjgzKnMrLjAwMTMwODcyMjYxNDA4Mjc1KmkrLjAwMDc3MDQ4MjYzMTgwMTEzMipyLS4xNTEwNTE0OTI3NzU1NjIpK2kqKC4wMDEyNjkzNTM2ODExNDg0MyppLS4wMDI2NTA5MDE4OTAxMDg5OCpyKy4yNTgwMjkxMDIwNjg0NSkrciooLS4wMDAzMTg5MTMxMTc1ODgzMjgqci0uMjEzNzQyNDAwMzIzNjY1KTtlW3QrMl09YSooLS4wMDA1NzAxMTUxOTY5NzM2NzcqYS0yNjM0MDkwNTEwMDQ1ODllLTE5KnMrLjAwMjA3NDEwODgxMTUwMTIqaS0uMDAyODgyNjAyMzY4NTM0NDIqcisuODE0MjcyOTY4MzU5Mjk1KS0yMC44MTAwMTI1NDY5NDcrcyooLTE1MzQ5NjA1NzQ0MDk3NWUtMTkqcy0uMDAwMTMyNjg5MDQzOTYxNDQ2KmkrLjAwMDU2MDgzMzY5MTI0MjgxMipyLS4xOTUxNTIwMjc1MzQwNDkpK2kqKC4wMDE3NDQxODEzMjkyNzU4MippLS4wMDI1NTI0MzMyMTQzOTM0NypyKy4xMTY5MzUwMjA0NjUxNDUpK3IqKC0uMDAwMzQzNTMxOTk2NTEwNTU1KnIrLjI0MTY1MjYwMjMyNDA3KTtlW3QrM109MjU1fXJldHVybiBlfV9jb252ZXJ0WWNja1RvQ215ayhlKXtsZXQgdCxpLGE7Zm9yKGxldCBzPTAscj1lLmxlbmd0aDtzPHI7cys9NCl7dD1lW3NdO2k9ZVtzKzFdO2E9ZVtzKzJdO2Vbc109NDM0LjQ1Ni10LTEuNDAyKmE7ZVtzKzFdPTExOS41NDEtdCsuMzQ0KmkrLjcxNCphO2VbcysyXT00ODEuODE2LXQtMS43NzIqaX1yZXR1cm4gZX1fY29udmVydENteWtUb1JnYihlKXtsZXQgdCxpLGEscyxyPTA7Zm9yKGxldCBuPTAsbz1lLmxlbmd0aDtuPG87bis9NCl7dD1lW25dO2k9ZVtuKzFdO2E9ZVtuKzJdO3M9ZVtuKzNdO2VbcisrXT0yNTUrdCooLTY3NDcxNDcwNzM2MDI0NDFlLTIwKnQrLjAwMDgzNzkyNjIxMjEwMTM3MjcqaSsuMDAwMjg5NDcxODE4ODY0MzI5NCphKy4wMDMyNjQyMzEwNTc1Mzc4MDYqcy0xLjExODU2MTE4NjcyMDM5MzcpK2kqKDI2Mzc0MTA3NjE2MDg5NDA1ZS0yMSppLTg2MjY5NDkxNTg2Mzg1NzJlLTIwKmEtLjAwMDI3NDg3NjkwNjc0OTk0OTEqcy0uMDIxNTU2ODg3OTQ5Nzg5NjcpK2EqKC0zODc4MDk5MjEyODY5MzYzZS0yMCphLS4wMDAzMjY3ODA4Mjc5NDg1Mjg2KnMrLjA2ODY3NDIyMzg1OTUzNDUpLXMqKC4wMDAzMzYxOTcxNzc2MTgzOTM3KnMrLjc0MzA2NTkxNTEzNDIyNTQpO2VbcisrXT0yNTUrdCooLjAwMDEzNTk2MzcyODEzNTg4ODQ4KnQrLjAwMDkyNDUzNzEzMjU3MzU4NSppKy4wMDAxMDU2NzM1OTYxODY4MzU5MyphKy4wMDA0NzkxODY0Njg3NDM2NTEyKnMtLjMxMDk2ODk1ODc1MTU4NzUpK2kqKC0uMDAwMjM1NDUzNDYxMDgzNzAzNDQqaSsuMDAwMjcwMjg0NTI1MzUzNDcxNCphKy4wMDIwMjAwMzA4OTc3MzA3MTU2KnMtLjc0ODgwNTIxNjcwMTU0OTQpK2EqKDY4MzQ4MTU5OTgyMzU2NjJlLTIwKmErLjAwMDE1MTY4NDUyMzYzNDYwOTczKnMtLjA5NzUxOTI3Nzc0NzI4OTMzKS1zKiguMDAwMzE4OTEzMTE3NTg4MzI4MSpzKy43MzY0ODgzODA3NzMzMTY4KTtlW3IrK109MjU1K3QqKDEzNTk4NjUwNDExMzg1MzA3ZS0yMSp0Ky4wMDAxMjQyMzk1NjE3NTQ5MDg1MSppKy4wMDA0NzUxOTg1MDk3NTgzNTg5KmEtMzY3MjkzMTc0NzY2MzA0MjJlLTIyKnMtLjA1NTYyMTg2OTgwMjY0MDM0KStpKiguMDAwMTYxNDEzODA1OTg3MjQ2NzYqaSsuMDAwOTY5MjIzOTEzMDcyNTE4NiphKy4wMDA3NzgyNjkyNDUwMDM2MjUzKnMtLjQ0MDE1MjMyMzY3NTI2NDYzKSthKig1LjA2ODg4MjkxNDA2ODc2OWUtNyphKy4wMDE3Nzc4MzY5MDExMzc1MDcxKnMtLjc1OTE0NTQ2NDk3NDk2MDkpLXMqKC4wMDAzNDM1MzE5OTY1MTA1NTUzKnMrLjcwNjM3NzAxODYxNjAxNDQpfXJldHVybiBlLnN1YmFycmF5KDAscil9X2NvbnZlcnRDbXlrVG9SZ2JhKGUpe2ZvcihsZXQgdD0wLGk9ZS5sZW5ndGg7dDxpO3QrPTQpe2NvbnN0IGk9ZVt0XSxhPWVbdCsxXSxzPWVbdCsyXSxyPWVbdCszXTtlW3RdPTI1NStpKigtNjc0NzE0NzA3MzYwMjQ0MWUtMjAqaSsuMDAwODM3OTI2MjEyMTAxMzcyNyphKy4wMDAyODk0NzE4MTg4NjQzMjk0KnMrLjAwMzI2NDIzMTA1NzUzNzgwNipyLTEuMTE4NTYxMTg2NzIwMzkzNykrYSooMjYzNzQxMDc2MTYwODk0MDVlLTIxKmEtODYyNjk0OTE1ODYzODU3MmUtMjAqcy0uMDAwMjc0ODc2OTA2NzQ5OTQ5MSpyLS4wMjE1NTY4ODc5NDk3ODk2NykrcyooLTM4NzgwOTkyMTI4NjkzNjNlLTIwKnMtLjAwMDMyNjc4MDgyNzk0ODUyODYqcisuMDY4Njc0MjIzODU5NTM0NSktciooLjAwMDMzNjE5NzE3NzYxODM5MzcqcisuNzQzMDY1OTE1MTM0MjI1NCk7ZVt0KzFdPTI1NStpKiguMDAwMTM1OTYzNzI4MTM1ODg4NDgqaSsuMDAwOTI0NTM3MTMyNTczNTg1KmErLjAwMDEwNTY3MzU5NjE4NjgzNTkzKnMrLjAwMDQ3OTE4NjQ2ODc0MzY1MTIqci0uMzEwOTY4OTU4NzUxNTg3NSkrYSooLS4wMDAyMzU0NTM0NjEwODM3MDM0NCphKy4wMDAyNzAyODQ1MjUzNTM0NzE0KnMrLjAwMjAyMDAzMDg5NzczMDcxNTYqci0uNzQ4ODA1MjE2NzAxNTQ5NCkrcyooNjgzNDgxNTk5ODIzNTY2MmUtMjAqcysuMDAwMTUxNjg0NTIzNjM0NjA5NzMqci0uMDk3NTE5Mjc3NzQ3Mjg5MzMpLXIqKC4wMDAzMTg5MTMxMTc1ODgzMjgxKnIrLjczNjQ4ODM4MDc3MzMxNjgpO2VbdCsyXT0yNTUraSooMTM1OTg2NTA0MTEzODUzMDdlLTIxKmkrLjAwMDEyNDIzOTU2MTc1NDkwODUxKmErLjAwMDQ3NTE5ODUwOTc1ODM1ODkqcy0zNjcyOTMxNzQ3NjYzMDQyMmUtMjIqci0uMDU1NjIxODY5ODAyNjQwMzQpK2EqKC4wMDAxNjE0MTM4MDU5ODcyNDY3NiphKy4wMDA5NjkyMjM5MTMwNzI1MTg2KnMrLjAwMDc3ODI2OTI0NTAwMzYyNTMqci0uNDQwMTUyMzIzNjc1MjY0NjMpK3MqKDUuMDY4ODgyOTE0MDY4NzY5ZS03KnMrLjAwMTc3NzgzNjkwMTEzNzUwNzEqci0uNzU5MTQ1NDY0OTc0OTYwOSktciooLjAwMDM0MzUzMTk5NjUxMDU1NTMqcisuNzA2Mzc3MDE4NjE2MDE0NCk7ZVt0KzNdPTI1NX1yZXR1cm4gZX1nZXREYXRhKHt3aWR0aDplLGhlaWdodDp0LGZvcmNlUkdCQTppPSExLGZvcmNlUkdCOmE9ITEsaXNTb3VyY2VQREY6cz0hMX0pe2lmKHRoaXMubnVtQ29tcG9uZW50cz40KXRocm93IG5ldyBKcGVnRXJyb3IoIlVuc3VwcG9ydGVkIGNvbG9yIG1vZGUiKTtjb25zdCByPXRoaXMuX2dldExpbmVhcml6ZWRCbG9ja0RhdGEoZSx0LHMpO2lmKDE9PT10aGlzLm51bUNvbXBvbmVudHMmJihpfHxhKSl7Y29uc3QgZT1yLmxlbmd0aCooaT80OjMpLHQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGUpO2xldCBhPTA7aWYoaSkhZnVuY3Rpb24gZ3JheVRvUkdCQShlLHQpe2lmKEZlYXR1cmVUZXN0LmlzTGl0dGxlRW5kaWFuKWZvcihsZXQgaT0wLGE9ZS5sZW5ndGg7aTxhO2krKyl0W2ldPTY1NzkzKmVbaV18NDI3ODE5MDA4MDtlbHNlIGZvcihsZXQgaT0wLGE9ZS5sZW5ndGg7aTxhO2krKyl0W2ldPTE2ODQzMDA4KmVbaV18MjU1fShyLG5ldyBVaW50MzJBcnJheSh0LmJ1ZmZlcikpO2Vsc2UgZm9yKGNvbnN0IGUgb2Ygcil7dFthKytdPWU7dFthKytdPWU7dFthKytdPWV9cmV0dXJuIHR9aWYoMz09PXRoaXMubnVtQ29tcG9uZW50cyYmdGhpcy5faXNDb2xvckNvbnZlcnNpb25OZWVkZWQpe2lmKGkpe2NvbnN0IGU9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KHIubGVuZ3RoLzMqNCk7cmV0dXJuIHRoaXMuX2NvbnZlcnRZY2NUb1JnYmEocixlKX1yZXR1cm4gdGhpcy5fY29udmVydFljY1RvUmdiKHIpfWlmKDQ9PT10aGlzLm51bUNvbXBvbmVudHMpe2lmKHRoaXMuX2lzQ29sb3JDb252ZXJzaW9uTmVlZGVkKXJldHVybiBpP3RoaXMuX2NvbnZlcnRZY2NrVG9SZ2JhKHIpOmE/dGhpcy5fY29udmVydFljY2tUb1JnYihyKTp0aGlzLl9jb252ZXJ0WWNja1RvQ215ayhyKTtpZihpKXJldHVybiB0aGlzLl9jb252ZXJ0Q215a1RvUmdiYShyKTtpZihhKXJldHVybiB0aGlzLl9jb252ZXJ0Q215a1RvUmdiKHIpfXJldHVybiByfX1jbGFzcyBKcGVnU3RyZWFtIGV4dGVuZHMgRGVjb2RlU3RyZWFte2NvbnN0cnVjdG9yKGUsdCxpKXtsZXQgYTtmb3IoOy0xIT09KGE9ZS5nZXRCeXRlKCkpOylpZigyNTU9PT1hKXtlLnNraXAoLTEpO2JyZWFrfXN1cGVyKHQpO3RoaXMuc3RyZWFtPWU7dGhpcy5kaWN0PWUuZGljdDt0aGlzLm1heWJlTGVuZ3RoPXQ7dGhpcy5wYXJhbXM9aX1nZXQgYnl0ZXMoKXtyZXR1cm4gc2hhZG93KHRoaXMsImJ5dGVzIix0aGlzLnN0cmVhbS5nZXRCeXRlcyh0aGlzLm1heWJlTGVuZ3RoKSl9ZW5zdXJlQnVmZmVyKGUpe31yZWFkQmxvY2soKXtpZih0aGlzLmVvZilyZXR1cm47Y29uc3QgZT17ZGVjb2RlVHJhbnNmb3JtOnZvaWQgMCxjb2xvclRyYW5zZm9ybTp2b2lkIDB9LHQ9dGhpcy5kaWN0LmdldEFycmF5KCJEIiwiRGVjb2RlIik7aWYoKHRoaXMuZm9yY2VSR0JBfHx0aGlzLmZvcmNlUkdCKSYmQXJyYXkuaXNBcnJheSh0KSl7Y29uc3QgaT10aGlzLmRpY3QuZ2V0KCJCUEMiLCJCaXRzUGVyQ29tcG9uZW50Iil8fDgsYT10Lmxlbmd0aCxzPW5ldyBJbnQzMkFycmF5KGEpO2xldCByPSExO2NvbnN0IG49KDE8PGkpLTE7Zm9yKGxldCBlPTA7ZTxhO2UrPTIpe3NbZV09MjU2Kih0W2UrMV0tdFtlXSl8MDtzW2UrMV09dFtlXSpufDA7MjU2PT09c1tlXSYmMD09PXNbZSsxXXx8KHI9ITApfXImJihlLmRlY29kZVRyYW5zZm9ybT1zKX1pZih0aGlzLnBhcmFtcyBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IHQ9dGhpcy5wYXJhbXMuZ2V0KCJDb2xvclRyYW5zZm9ybSIpO051bWJlci5pc0ludGVnZXIodCkmJihlLmNvbG9yVHJhbnNmb3JtPXQpfWNvbnN0IGk9bmV3IEpwZWdJbWFnZShlKTtpLnBhcnNlKHRoaXMuYnl0ZXMpO2NvbnN0IGE9aS5nZXREYXRhKHt3aWR0aDp0aGlzLmRyYXdXaWR0aCxoZWlnaHQ6dGhpcy5kcmF3SGVpZ2h0LGZvcmNlUkdCQTp0aGlzLmZvcmNlUkdCQSxmb3JjZVJHQjp0aGlzLmZvcmNlUkdCLGlzU291cmNlUERGOiEwfSk7dGhpcy5idWZmZXI9YTt0aGlzLmJ1ZmZlckxlbmd0aD1hLmxlbmd0aDt0aGlzLmVvZj0hMH19dmFyIG9pLGdpPShvaT0idW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50LmN1cnJlbnRTY3JpcHQ/LnNyYzp2b2lkIDAsZnVuY3Rpb24oZT17fSl7dmFyIHQsaSxhPU9iamVjdC5hc3NpZ24oe30sZSk7bmV3IFByb21pc2UoKChlLGEpPT57dD1lO2k9YX0pKTthLmRlY29kZT1mdW5jdGlvbihlLHQpe2NvbnN0IGk9ZS5sZW5ndGgscz1hLl9tYWxsb2MoaSk7YS5IRUFQVTguc2V0KGUscyk7Y29uc3Qgcj1hLl9qcDJfZGVjb2RlKHMsaSx0PzE6MCk7YS5fZnJlZShzKTtpZihyKXtjb25zdHtlcnJvck1lc3NhZ2VzOmV9PWE7aWYoZSl7ZGVsZXRlIGEuZXJyb3JNZXNzYWdlcztyZXR1cm4gZX1yZXR1cm4iVW5rbm93biBlcnJvciJ9Y29uc3R7aW1hZ2VEYXRhOm59PWE7YS5pbWFnZURhdGE9bnVsbDtyZXR1cm4gbn07dmFyIHMscj1PYmplY3QuYXNzaWduKHt9LGEpLG49Ii4vdGhpcy5wcm9ncmFtIixvPSIiOyJ1bmRlZmluZWQiIT10eXBlb2YgZG9jdW1lbnQmJmRvY3VtZW50LmN1cnJlbnRTY3JpcHQmJihvPWRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjKTtvaSYmKG89b2kpO289by5zdGFydHNXaXRoKCJibG9iOiIpPyIiOm8uc3Vic3RyKDAsby5yZXBsYWNlKC9bPyNdLiovLCIiKS5sYXN0SW5kZXhPZigiLyIpKzEpO3ZhciBnLGMsaCxsLEMsUT1hLnByaW50fHxjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpLEU9YS5wcmludEVycnx8Y29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUpO09iamVjdC5hc3NpZ24oYSxyKTtyPW51bGw7YS5hcmd1bWVudHMmJmEuYXJndW1lbnRzO2EudGhpc1Byb2dyYW0mJihuPWEudGhpc1Byb2dyYW0pO2EucXVpdCYmYS5xdWl0O2Eud2FzbUJpbmFyeSYmKGc9YS53YXNtQmluYXJ5KTtmdW5jdGlvbiB0cnlQYXJzZUFzRGF0YVVSSShlKXtpZihpc0RhdGFVUkkoZSkpcmV0dXJuIGZ1bmN0aW9uIGludEFycmF5RnJvbUJhc2U2NChlKXtmb3IodmFyIHQ9YXRvYihlKSxpPW5ldyBVaW50OEFycmF5KHQubGVuZ3RoKSxhPTA7YTx0Lmxlbmd0aDsrK2EpaVthXT10LmNoYXJDb2RlQXQoYSk7cmV0dXJuIGl9KGUuc2xpY2UoYi5sZW5ndGgpKX1mdW5jdGlvbiB1cGRhdGVNZW1vcnlWaWV3cygpe3ZhciBlPWMuYnVmZmVyO2EuSEVBUDg9aD1uZXcgSW50OEFycmF5KGUpO2EuSEVBUDE2PW5ldyBJbnQxNkFycmF5KGUpO2EuSEVBUFU4PWw9bmV3IFVpbnQ4QXJyYXkoZSk7YS5IRUFQVTE2PW5ldyBVaW50MTZBcnJheShlKTthLkhFQVAzMj1uZXcgSW50MzJBcnJheShlKTthLkhFQVBVMzI9Qz1uZXcgVWludDMyQXJyYXkoZSk7YS5IRUFQRjMyPW5ldyBGbG9hdDMyQXJyYXkoZSk7YS5IRUFQRjY0PW5ldyBGbG9hdDY0QXJyYXkoZSl9dmFyIHUsZD1bXSxmPVtdLHA9W10sbT0wLHk9bnVsbCx3PW51bGwsYj0iZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07YmFzZTY0LCIsaXNEYXRhVVJJPWU9PmUuc3RhcnRzV2l0aChiKTtmdW5jdGlvbiBpbnN0YW50aWF0ZVN5bmMoZSx0KXt2YXIgaSxhPWZ1bmN0aW9uIGdldEJpbmFyeVN5bmMoZSl7aWYoZT09dSYmZylyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoZyk7dmFyIHQ9dHJ5UGFyc2VBc0RhdGFVUkkoZSk7aWYodClyZXR1cm4gdDtpZihzKXJldHVybiBzKGUpO3Rocm93J3N5bmMgZmV0Y2hpbmcgb2YgdGhlIHdhc20gZmFpbGVkOiB5b3UgY2FuIHByZWxvYWQgaXQgdG8gTW9kdWxlWyJ3YXNtQmluYXJ5Il0gbWFudWFsbHksIG9yIGVtY2MucHkgd2lsbCBkbyB0aGF0IGZvciB5b3Ugd2hlbiBnZW5lcmF0aW5nIEhUTUwgKGJ1dCBub3QgSlMpJ30oZSk7aT1uZXcgV2ViQXNzZW1ibHkuTW9kdWxlKGEpO3JldHVybltuZXcgV2ViQXNzZW1ibHkuSW5zdGFuY2UoaSx0KSxpXX12YXIgRCxjYWxsUnVudGltZUNhbGxiYWNrcz1lPT57Zm9yKDtlLmxlbmd0aD4wOyllLnNoaWZ0KCkoYSl9LEY9KGEubm9FeGl0UnVudGltZSxlPT57dmFyIHQ9KGUtYy5idWZmZXIuYnl0ZUxlbmd0aCs2NTUzNSkvNjU1MzY7dHJ5e2MuZ3Jvdyh0KTt1cGRhdGVNZW1vcnlWaWV3cygpO3JldHVybiAxfWNhdGNoKGUpe319KSxTPXt9LGdldEVudlN0cmluZ3M9KCk9PntpZighZ2V0RW52U3RyaW5ncy5zdHJpbmdzKXt2YXIgZT17VVNFUjoid2ViX3VzZXIiLExPR05BTUU6IndlYl91c2VyIixQQVRIOiIvIixQV0Q6Ii8iLEhPTUU6Ii9ob21lL3dlYl91c2VyIixMQU5HOigib2JqZWN0Ij09dHlwZW9mIG5hdmlnYXRvciYmbmF2aWdhdG9yLmxhbmd1YWdlcyYmbmF2aWdhdG9yLmxhbmd1YWdlc1swXXx8IkMiKS5yZXBsYWNlKCItIiwiXyIpKyIuVVRGLTgiLF86bnx8Ii4vdGhpcy5wcm9ncmFtIn07Zm9yKHZhciB0IGluIFMpdm9pZCAwPT09U1t0XT9kZWxldGUgZVt0XTplW3RdPVNbdF07dmFyIGk9W107Zm9yKHZhciB0IGluIGUpaS5wdXNoKGAke3R9PSR7ZVt0XX1gKTtnZXRFbnZTdHJpbmdzLnN0cmluZ3M9aX1yZXR1cm4gZ2V0RW52U3RyaW5ncy5zdHJpbmdzfSxrPVtudWxsLFtdLFtdXSxSPSJ1bmRlZmluZWQiIT10eXBlb2YgVGV4dERlY29kZXI/bmV3IFRleHREZWNvZGVyKCJ1dGY4Iik6dm9pZCAwLFVURjhBcnJheVRvU3RyaW5nPShlLHQsaSk9Pntmb3IodmFyIGE9dCtpLHM9dDtlW3NdJiYhKHM+PWEpOykrK3M7aWYocy10PjE2JiZlLmJ1ZmZlciYmUilyZXR1cm4gUi5kZWNvZGUoZS5zdWJhcnJheSh0LHMpKTtmb3IodmFyIHI9IiI7dDxzOyl7dmFyIG49ZVt0KytdO2lmKDEyOCZuKXt2YXIgbz02MyZlW3QrK107aWYoMTkyIT0oMjI0Jm4pKXt2YXIgZz02MyZlW3QrK107aWYoKG49MjI0PT0oMjQwJm4pPygxNSZuKTw8MTJ8bzw8NnxnOig3Jm4pPDwxOHxvPDwxMnxnPDw2fDYzJmVbdCsrXSk8NjU1MzYpcis9U3RyaW5nLmZyb21DaGFyQ29kZShuKTtlbHNle3ZhciBjPW4tNjU1MzY7cis9U3RyaW5nLmZyb21DaGFyQ29kZSg1NTI5NnxjPj4xMCw1NjMyMHwxMDIzJmMpfX1lbHNlIHIrPVN0cmluZy5mcm9tQ2hhckNvZGUoKDMxJm4pPDw2fG8pfWVsc2Ugcis9U3RyaW5nLmZyb21DaGFyQ29kZShuKX1yZXR1cm4gcn0scHJpbnRDaGFyPShlLHQpPT57dmFyIGk9a1tlXTtpZigwPT09dHx8MTA9PT10KXsoMT09PWU/UTpFKShVVEY4QXJyYXlUb1N0cmluZyhpLDApKTtpLmxlbmd0aD0wfWVsc2UgaS5wdXNoKHQpfSxVVEY4VG9TdHJpbmc9KGUsdCk9PmU/VVRGOEFycmF5VG9TdHJpbmcobCxlLHQpOiIiLE49e2Y6KGUsdCxpKT0+bC5jb3B5V2l0aGluKGUsdCx0K2kpLGI6ZT0+e3ZhciB0PWwubGVuZ3RoLGk9MjE0NzQ4MzY0ODtpZigoZT4+Pj0wKT5pKXJldHVybiExO2Zvcih2YXIgYSxzLHI9MTtyPD00O3IqPTIpe3ZhciBuPXQqKDErLjIvcik7bj1NYXRoLm1pbihuLGUrMTAwNjYzMjk2KTt2YXIgbz1NYXRoLm1pbihpLChhPU1hdGgubWF4KGUsbikpKygocz02NTUzNiktYSVzKSVzKTtpZihGKG8pKXJldHVybiEwfXJldHVybiExfSxjOihlLHQpPT57dmFyIGk9MDtnZXRFbnZTdHJpbmdzKCkuZm9yRWFjaCgoKGEscyk9Pnt2YXIgcj10K2k7Q1tlKzQqcz4+Ml09cjsoKGUsdCk9Pntmb3IodmFyIGk9MDtpPGUubGVuZ3RoOysraSloW3QrK109ZS5jaGFyQ29kZUF0KGkpO2hbdF09MH0pKGEscik7aSs9YS5sZW5ndGgrMX0pKTtyZXR1cm4gMH0sZDooZSx0KT0+e3ZhciBpPWdldEVudlN0cmluZ3MoKTtDW2U+PjJdPWkubGVuZ3RoO3ZhciBhPTA7aS5mb3JFYWNoKChlPT5hKz1lLmxlbmd0aCsxKSk7Q1t0Pj4yXT1hO3JldHVybiAwfSxlOihlLHQsaSxhKT0+e2Zvcih2YXIgcz0wLHI9MDtyPGk7cisrKXt2YXIgbj1DW3Q+PjJdLG89Q1t0KzQ+PjJdO3QrPTg7Zm9yKHZhciBnPTA7ZzxvO2crKylwcmludENoYXIoZSxsW24rZ10pO3MrPW99Q1thPj4yXT1zO3JldHVybiAwfSxnOmZ1bmN0aW9uIF9qc1ByaW50V2FybmluZyhlKXtjb25zdCB0PVVURjhUb1N0cmluZyhlKTsoYS53YXJufHxjb25zb2xlLndhcm4pKGBPcGVuSlBFRzogJHt0fWApfSxoOmZ1bmN0aW9uIF9zZXRJbWFnZURhdGEoZSx0KXthLmltYWdlRGF0YT1uZXcgVWludDhDbGFtcGVkQXJyYXkoYS5IRUFQVTguc3ViYXJyYXkoZSxlK3QpKX0sYTpmdW5jdGlvbiBfc3RvcmVFcnJvck1lc3NhZ2UoZSl7Y29uc3QgdD1VVEY4VG9TdHJpbmcoZSk7YS5lcnJvck1lc3NhZ2VzP2EuZXJyb3JNZXNzYWdlcys9IlxuIit0OmEuZXJyb3JNZXNzYWdlcz10fX0sRz1mdW5jdGlvbiBjcmVhdGVXYXNtKCl7dmFyIGU9ZnVuY3Rpb24gZ2V0V2FzbUltcG9ydHMoKXtyZXR1cm57YTpOfX0oKTtmdW5jdGlvbiByZWNlaXZlSW5zdGFuY2UoZSx0KXtHPWUuZXhwb3J0cztjPUcuaTt1cGRhdGVNZW1vcnlWaWV3cygpOyFmdW5jdGlvbiBhZGRPbkluaXQoZSl7Zi51bnNoaWZ0KGUpfShHLmopOyFmdW5jdGlvbiByZW1vdmVSdW5EZXBlbmRlbmN5KGUpe20tLTthLm1vbml0b3JSdW5EZXBlbmRlbmNpZXM/LihtKTtpZigwPT1tKXtpZihudWxsIT09eSl7Y2xlYXJJbnRlcnZhbCh5KTt5PW51bGx9aWYodyl7dmFyIHQ9dzt3PW51bGw7dCgpfX19KCk7cmV0dXJuIEd9IWZ1bmN0aW9uIGFkZFJ1bkRlcGVuZGVuY3koZSl7bSsrO2EubW9uaXRvclJ1bkRlcGVuZGVuY2llcz8uKG0pfSgpO2lmKGEuaW5zdGFudGlhdGVXYXNtKXRyeXtyZXR1cm4gYS5pbnN0YW50aWF0ZVdhc20oZSxyZWNlaXZlSW5zdGFuY2UpfWNhdGNoKGUpe0UoYE1vZHVsZS5pbnN0YW50aWF0ZVdhc20gY2FsbGJhY2sgZmFpbGVkIHdpdGggZXJyb3I6ICR7ZX1gKTtpKGUpfXV8fCh1PSJkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsQUdGemJRRUFBQUFCemdFYVlBTi9mMzhCZjJBRWYzOS9md0YvWUFGL0FHQUNmMzhBWUFGL0FYOWdBMzkvZndCZ0FuOS9BWDlnQkg5L2YzOEFZQU4vZm44QmZtQUNmbjhCZjJBRmYzOS9mMzhCZjJBQ2ZuOEJmbUFEZjM1L0FYOWdBQUYvWUFkL2YzOS9mMzkvQVg5Z0JYOS9mMzkvQUdBSmYzOS9mMzkvZjM5L0FYOWdDMzkvZjM5L2YzOS9mMzkvQVg5Z0JuOS9mMzkvZndGL1lBWi9mSDkvZjM4QmYyQUlmMzkvZjM5L2YzOEFZQWgvZjM5L2YzOS9md0YvWUFBQVlBWi9mMzkvZjM4QVlBZC9mMzkvZjM5L0FHQUNmSDhCZkFJeENBRmhBV0VBQWdGaEFXSUFCQUZoQVdNQUJnRmhBV1FBQmdGaEFXVUFBUUZoQVdZQUJRRmhBV2NBQWdGaEFXZ0FBd08rQWJ3QkJ3SUZBQVlFQUFVR0JRRUVEd1VFRkFJR0FnWUNBZ0FRRVFRQ0NSSUNCUUlDQWdRSEJBSU5EQVlDRlFNSEFBQUVBd0VXQ2dvREFBb0dBUVFFQlFVTkRnRUJBd0FEQmdJUUJCY1lBZ2NHQXdjSEFRRUNBQVFFR1FZSEJBNFBBQVFDQWdJQUJnQUdBUUVCQVFFQkFRRUFBQUFBQUFZREFnSUNBd01EQXdNQUF4TUlCQTBBQXdNQUJBZ0pDd2dBQUFFQkFRRUJBUUVCREFFQUJBUUZDZzRCRWhFQkFBQUdBd01CQlFVRkJRVUZCUVVCQ3dFQkFRRUJBUUVCQVFrRUJRRndBV3hzQlFjQkFZSUNnSUFDQmdnQmZ3RkJnTmdGQ3djYkJnRnBBZ0FCYWdBNkFXc0Fqd0VCYkFBSkFXMEJBQUZ1QUk0QkNiSUJBUUJCQVF0clNzTUJ1UUZzYkMrZUFaTUJrQUdFQVlNQmdnR0JBWUFCZjM1OVMzcDVlSGQyZFhSemNuRndiMjdDQWNFQndBRy9BYjRCdlFFNXZBRzdBVGs1dWdHNEFiY0J0Z0cxQWJRQnN3R3lBYkVCc0FHcUFaOEJuUUdjQVpzQm1nR1pBWmdCbHdHV0FaVUJsQUdTQVpFQlFrTkZTMEY4VERGSmUwZytQMGNrSUtJQm9RR2pBYXNCcndHc0FhWUJvQUdrQWFVQnJRR3VBV21uQWFnQnFRRktqUUdNQVlVQmh3R0dBWWtCaXdHSUFRcUF1QTI4QVlJQ0FRTi9Jd0JCa0FScklnUWtBQUpBSUFCRkRRQUNRQUpBQWtBQ1FDQUJRUUZyRGdRQUFRUUNCQXNnQUVFTWFpRUJEQUlMSUFCQkVHb2hBU0FBUVFScUlRQU1BUXNnQUVFVWFpRUJJQUJCQ0dvaEFBc2dBU2dDQUNJRlJRMEFJQUpGRFFBZ0FDZ0NBQ0VHSUFSQkFFR0FCQkFPSWdFZ0F6WUNqQVFqQUVHZ0FXc2lBQ1FBSUFBZ0FUWUNsQUVnQUVIL0F6WUNtQUVnQUVFQVFaQUJFQTRpQUVGL05nSk1JQUJCNWdBMkFpUWdBRUYvTmdKUUlBQWdBRUdmQVdvMkFpd2dBQ0FBUVpRQmFqWUNWQ0FCUVFBNkFBQWdBQ0FDSUFOQjV3QkI2QUFRWkNBQVFhQUJhaVFBSUFGQkFEb0Evd01nQVNBR0lBVVJBd0FMSUFSQmtBUnFKQUFMMEFJQkJYOGdBQVJBSUFCQkJHc2lBeWdDQUNJRUlRRWdBeUVDSUFCQkNHc29BZ0FpQUNBQVFYNXhJZ0JIQkVBZ0FpQUFheUlDS0FJRUlnRWdBaWdDQ0NJRk5nSUlJQVVnQVRZQ0JDQUFJQVJxSVFFTElBTWdCR29pQUNnQ0FDSURJQUFnQTJwQkJHc29BZ0JIQkVBZ0FDZ0NCQ0lFSUFBb0FnZ2lBRFlDQ0NBQUlBUTJBZ1FnQVNBRGFpRUJDeUFDSUFFMkFnQWdBaUFCUVh4eGFrRUVheUFCUVFGeU5nSUFJQUlDZnlBQ0tBSUFRUWhySWdCQi93Qk5CRUFnQUVFRGRrRUJhd3dCQ3lBQVp5RURJQUJCSFNBRGEzWkJCSE1nQTBFQ2RHdEI3Z0JxSUFCQi94OU5EUUFhUVQ4Z0FFRWVJQU5yZGtFQ2N5QURRUUYwYTBISEFHb2lBQ0FBUVQ5UEd3c2lBVUVFZENJQVFhREdBV28yQWdRZ0FpQUFRYWpHQVdvaUFDZ0NBRFlDQ0NBQUlBSTJBZ0FnQWlnQ0NDQUNOZ0lFUWFqT0FVR296Z0VwQXdCQ0FTQUJyWWFFTndNQUN3dkpBZ0VFZnlBQlFRQTJBZ0FDUUNBQ1JRMEFJQUVnQW1vaEF3SkFJQUpCRUVrRVFDQUFJUUVNQVFzQ1FDQUFJQUpxSUFGTkRRQWdBQ0FEVHcwQUlBQWhBUXdCQ3lBRFFSQnJJUVlnQUNBQ1FYQnhJZ1ZxSVFFZ0F5QUZheUVEQTBBZ0JpQUVheUFBSUFScS9RQUFBUDBNQUFBQUFBQUFBQUFBQUFBQUFBQUFBUDBORHc0TkRBc0tDUWdIQmdVRUF3SUJBUDBMQUFBZ0JFRVFhaUlFSUFWSERRQUxJQUlnQlVZTkFRc0NRQ0FDUVFOeElnWkZCRUFnQlNFRURBRUxRUUFoQUNBRklRUURRQ0FEUVFGcklnTWdBUzBBQURvQUFDQUVRUUZxSVFRZ0FVRUJhaUVCSUFCQkFXb2lBQ0FHUncwQUN3c2dCU0FDYTBGOFN3MEFBMEFnQTBFQmF5QUJMUUFBT2dBQUlBTkJBbXNnQVMwQUFUb0FBQ0FEUVFOcklBRXRBQUk2QUFBZ0EwRUVheUlESUFFdEFBTTZBQUFnQVVFRWFpRUJJQVJCQkdvaUJDQUNSdzBBQ3dzTGdBUUJBMzhnQWtHQUJFOEVRQ0FBSUFFZ0FoQUZJQUFQQ3lBQUlBSnFJUU1DUUNBQUlBRnpRUU54UlFSQUFrQWdBRUVEY1VVRVFDQUFJUUlNQVFzZ0FrVUVRQ0FBSVFJTUFRc2dBQ0VDQTBBZ0FpQUJMUUFBT2dBQUlBRkJBV29oQVNBQ1FRRnFJZ0pCQTNGRkRRRWdBaUFEU1EwQUN3c0NRQ0FEUVh4eElnUkJ3QUJKRFFBZ0FpQUVRVUJxSWdWTERRQURRQ0FDSUFFb0FnQTJBZ0FnQWlBQktBSUVOZ0lFSUFJZ0FTZ0NDRFlDQ0NBQ0lBRW9BZ3cyQWd3Z0FpQUJLQUlRTmdJUUlBSWdBU2dDRkRZQ0ZDQUNJQUVvQWhnMkFoZ2dBaUFCS0FJY05nSWNJQUlnQVNnQ0lEWUNJQ0FDSUFFb0FpUTJBaVFnQWlBQktBSW9OZ0lvSUFJZ0FTZ0NMRFlDTENBQ0lBRW9BakEyQWpBZ0FpQUJLQUkwTmdJMElBSWdBU2dDT0RZQ09DQUNJQUVvQWp3MkFqd2dBVUZBYXlFQklBSkJRR3NpQWlBRlRRMEFDd3NnQWlBRVR3MEJBMEFnQWlBQktBSUFOZ0lBSUFGQkJHb2hBU0FDUVFScUlnSWdCRWtOQUFzTUFRc2dBMEVFU1FSQUlBQWhBZ3dCQ3lBQUlBTkJCR3NpQkVzRVFDQUFJUUlNQVFzZ0FDRUNBMEFnQWlBQkxRQUFPZ0FBSUFJZ0FTMEFBVG9BQVNBQ0lBRXRBQUk2QUFJZ0FpQUJMUUFET2dBRElBRkJCR29oQVNBQ1FRUnFJZ0lnQkUwTkFBc0xJQUlnQTBrRVFBTkFJQUlnQVMwQUFEb0FBQ0FCUVFGcUlRRWdBa0VCYWlJQ0lBTkhEUUFMQ3lBQUN6QUJBWDhDUUNBQVJRMEFJQUZGRFFCQkNDQUFJQUZzSWdFUUd5SUFCRUFnQUVFQUlBRVFEaG9MSUFBaEFnc2dBZ3NSQUNBQVJRUkFRUUFQQzBFSUlBQVFHd3Z5QWdJQ2Z3RitBa0FnQWtVTkFDQUFJQUU2QUFBZ0FDQUNhaUlEUVFGcklBRTZBQUFnQWtFRFNRMEFJQUFnQVRvQUFpQUFJQUU2QUFFZ0EwRURheUFCT2dBQUlBTkJBbXNnQVRvQUFDQUNRUWRKRFFBZ0FDQUJPZ0FESUFOQkJHc2dBVG9BQUNBQ1FRbEpEUUFnQUVFQUlBQnJRUU54SWdScUlnTWdBVUgvQVhGQmdZS0VDR3dpQVRZQ0FDQURJQUlnQkd0QmZIRWlCR29pQWtFRWF5QUJOZ0lBSUFSQkNVa05BQ0FESUFFMkFnZ2dBeUFCTmdJRUlBSkJDR3NnQVRZQ0FDQUNRUXhySUFFMkFnQWdCRUVaU1EwQUlBTWdBVFlDR0NBRElBRTJBaFFnQXlBQk5nSVFJQU1nQVRZQ0RDQUNRUkJySUFFMkFnQWdBa0VVYXlBQk5nSUFJQUpCR0dzZ0FUWUNBQ0FDUVJ4cklBRTJBZ0FnQkNBRFFRUnhRUmh5SWdScklnSkJJRWtOQUNBQnJVS0JnSUNBRUg0aEJTQURJQVJxSVFFRFFDQUJJQVUzQXhnZ0FTQUZOd01RSUFFZ0JUY0RDQ0FCSUFVM0F3QWdBVUVnYWlFQklBSkJJR3NpQWtFZlN3MEFDd3NnQUFzbkFRRi9Jd0JCRUdzaUF5UUFJQU1nQWpZQ0RDQUFJQUVnQWtFQVFRQVFaQ0FEUVJCcUpBQUw2QVVCQ1g4Z0FVVUVRRUVBRHdzQ2Z5QUFSUVJBUVFnZ0FSQWJEQUVMSUFGRkJFQWdBQkFKUVFBTUFRc0NRQ0FCUVVkTERRQWdBQUovUVFnZ0FVRURha0Y4Y1NBQlFRaE5HeUlIUVFocUlRRUNRQUovQWtBZ0FFRUVheUlLSWdRb0FnQWlCU0FFYWlJQ0tBSUFJZ2tnQWlBSmFpSUlRUVJyS0FJQVJ3UkFJQWdnQVNBRWFpSURRUkJxVHdSQUlBSW9BZ1FpQlNBQ0tBSUlJZ0kyQWdnZ0FpQUZOZ0lFSUFNZ0NDQURheUlDTmdJQUlBTWdBa0Y4Y1dwQkJHc2dBa0VCY2pZQ0FDQURBbjhnQXlnQ0FFRUlheUlDUWY4QVRRUkFJQUpCQTNaQkFXc01BUXNnQWtFZElBSm5JZ1ZyZGtFRWN5QUZRUUowYTBIdUFHb2dBa0gvSDAwTkFCcEJQeUFDUVI0Z0JXdDJRUUp6SUFWQkFYUnJRY2NBYWlJQ0lBSkJQMDhiQ3lJQ1FRUjBJZ1ZCb01ZQmFqWUNCQ0FESUFWQnFNWUJhaUlGS0FJQU5nSUlJQVVnQXpZQ0FDQURLQUlJSUFNMkFnUkJxTTRCUWFqT0FTa0RBRUlCSUFLdGhvUTNBd0FnQkNBQk5nSUFEQVFMSUFNZ0NFc05BU0FDS0FJRUlnRWdBaWdDQ0NJRE5nSUlJQU1nQVRZQ0JDQUVJQVVnQ1dvaUFUWUNBQXdEQ3lBRklBRkJFR3BQQkVBZ0JDQUJOZ0lBSUFRZ0FVRjhjV3BCQkdzZ0FUWUNBQ0FCSUFScUlnTWdCU0FCYXlJQk5nSUFJQU1nQVVGOGNXcEJCR3NnQVVFQmNqWUNBQ0FEQW44Z0F5Z0NBRUVJYXlJQlFmOEFUUVJBSUFGQkEzWkJBV3NNQVFzZ0FVRWRJQUZuSWdScmRrRUVjeUFFUVFKMGEwSHVBR29nQVVIL0gwME5BQnBCUHlBQlFSNGdCR3QyUVFKeklBUkJBWFJyUWNjQWFpSUJJQUZCUDA4YkN5SUJRUVIwSWdSQm9NWUJhallDQkNBRElBUkJxTVlCYWlJRUtBSUFOZ0lJSUFRZ0F6WUNBQ0FES0FJSUlBTTJBZ1JCcU00QlFhak9BU2tEQUVJQklBR3Rob1EzQXdCQkFRd0VDMEVCSUFFZ0JVME5BUm9MUVFBTERBRUxJQVFnQVVGOGNXcEJCR3NnQVRZQ0FFRUJDdzBCR2tFSUlBY1FHeUlCUlEwQUlBRWdBQ0FISUFvb0FnQkJDR3NpQmlBR0lBZExHeEFMR2lBQUVBa2dBU0VHQ3lBR0N3c1hBQ0FBTFFBQVFTQnhSUVJBSUFFZ0FpQUFFRFlhQ3d1OEJBRUZmeUFDSUFBb0FqQWlCVTBFUUNBQklBQW9BaVFnQWhBTEdpQUFJQUFvQWlRZ0FtbzJBaVFnQUNBQUtBSXdJQUpyTmdJd0lBQWdBQ2tET0NBQ3JYdzNBemdnQWc4TElBQXRBRVJCQkhFRVFDQUJJQUFvQWlRZ0JSQUxHaUFBS0FJd0lRRWdBRUVBTmdJd0lBQWdBU0FBS0FJa2FqWUNKQ0FBSUFBcEF6Z2dBYTE4TndNNElBVkJmeUFGR3c4TEFrQWdCUVJBSUFFZ0FDZ0NKQ0FGRUFzaEJDQUFJQUFvQWlBaUJ6WUNKQ0FBS0FJd0lRRWdBRUVBTmdJd0lBQWdBQ2tET0NBQnJYdzNBemdnQWlBQmF5RUNJQUVnQkdvaEFRd0JDeUFBSUFBb0FpQWlCellDSkFzQ1FBSkFBMEFDUUNBQUtBSUFJUVFnQUNnQ0VDRUdBa0FnQUNnQ1FDSUlJQUpMQkVBZ0FDQUhJQWdnQkNBR0VRQUFJZ1kyQWpBZ0JrRi9SZ1JBREFZTElBSWdCazBOQWlBQklBQW9BaVFnQmhBTEdpQUFJQUFvQWlBaUJ6WUNKQ0FBS0FJd0lRUU1BUXNnQUNBQklBSWdCQ0FHRVFBQUlnUTJBakFnQkVGL1JnUkFEQVVMSUFJZ0JFME5BeUFBSUFBb0FpQWlCellDSkNBRUlRWUxJQUJCQURZQ01DQUFJQUFwQXpnZ0JLMThOd000SUFFZ0JHb2hBU0FDSUFScklRSWdCU0FHYWlFRkRBRUxDeUFCSUFBb0FpUWdBaEFMR2lBQUlBQW9BaVFnQW1vMkFpUWdBQ0FBS0FJd0lBSnJOZ0l3SUFBZ0FDa0RPQ0FDclh3M0F6Z2dBaUFGYWc4TElBQkJBRFlDTUNBQUlBQW9BaUEyQWlRZ0FDQUFLUU00SUFTdGZEY0RPQ0FFSUFWcUR3c2dBMEVFUWF2MUFFRUFFQWdnQUVFQU5nSXdJQUFnQUNnQ1JFRUVjallDUkNBRlFYOGdCUnNMaXdjQ0RYOEJmaUFBS0FJUUlnZEJJRThFUUNBQUtRTUlwdzhMQWtBZ0FDZ0NHQ0lDUVFST0JFQWdBQ2dDQUNJQktBSUFJUVFnQUNBQ1FRUnJJZ1UyQWhnZ0FDQUJRUVJxTmdJQURBRUxRWDlCQUNBQUtBSWNHeUVFSUFKQkFFd0VRQ0FDSVFVTUFRc2dBa0VCY1NFTUlBQW9BZ0FoQVFKQUlBSkJBVVlFUUNBQklRWU1BUXNnQWtIKy8vLy9CM0VoQ2dOQUlBQWdBVUVCYWpZQ0FDQUJMUUFBSVFrZ0FDQUJRUUpxSWdZMkFnQWdBQ0FDUVFGck5nSVlJQUV0QUFFaEFTQUFJQUpCQW1zaUFqWUNHQ0FFUWY4QklBTjBRWDl6Y1NBSklBTjBja0dBL2dNZ0EzUkJmM054SUFFZ0EwRUljblJ5SVFRZ0EwRVFhaUVESUFZaEFTQUZRUUpxSWdVZ0NrY05BQXNMUVFBaEJTQU1SUTBBSUFBZ0JrRUJhallDQUNBR0xRQUFJUUVnQUNBQ1FRRnJOZ0lZSUFSQi93RWdBM1JCZjNOeElBRWdBM1J5SVFRTElBQW9BaFFoQVNBQUlBUkJHSFlpQ2tIL0FVWTJBaFFnQUVFSFFRZ2dBUnNpQVVFSFFRZ2dCRUgvQVhFaUJrSC9BVVliYWlJQ1FRZEJDQ0FFUVFoMlFmOEJjU0lEUWY4QlJodHFJZ2xCQjBFSUlBUkJFSFpCL3dGeElnUkIvd0ZHR3lBSGFtb2lDRFlDRUNBQUlBQXBBd2dnQXlBQmRDQUVJQUowY2lBS0lBbDBjaUFHY3EwZ0I2MkdoQ0lPTndNSUlBaEJIMDBFUUFKQUlBVkJCRTRFUUNBQUtBSUFJZ0VvQWdBaEFpQUFJQVZCQkdzMkFoZ2dBQ0FCUVFScU5nSUFEQUVMUVFBaEEwRi9RUUFnQUNnQ0hCc2hBaUFGUVFCTURRQWdCVUVCY1NFTklBQW9BZ0FoQVFKQUlBVkJBVVlFUUNBQklRUU1BUXNnQlVIKy8vLy9CM0VoQ1VFQUlRWURRQ0FBSUFGQkFXbzJBZ0FnQVMwQUFDRUxJQUFnQVVFQ2FpSUVOZ0lBSUFBZ0JVRUJhellDR0NBQkxRQUJJUUVnQUNBRlFRSnJJZ1UyQWhnZ0FrSC9BU0FEZEVGL2MzRWdDeUFEZEhKQmdQNERJQU4wUVg5emNTQUJJQU5CQ0hKMGNpRUNJQU5CRUdvaEF5QUVJUUVnQmtFQ2FpSUdJQWxIRFFBTEN5QU5SUTBBSUFBZ0JFRUJhallDQUNBRUxRQUFJUUVnQUNBRlFRRnJOZ0lZSUFKQi93RWdBM1JCZjNOeElBRWdBM1J5SVFJTElBQWdBa0VZZGlJQlFmOEJSallDRkNBQVFRZEJDQ0FLUWY4QlJoc2lCRUVIUVFnZ0FrSC9BWEVpQmtIL0FVWWJhaUlGUVFkQkNDQUNRUWgyUWY4QmNTSURRZjhCUmh0cUlnZEJCMEVJSUFKQkVIWkIvd0Z4SWdKQi93RkdHeUFJYW1vMkFoQWdBQ0FESUFSMElBSWdCWFJ5SUFFZ0IzUnlJQVp5clNBSXJZWWdEb1FpRGpjRENBc2dEcWNMYXdFQmZ5TUFRWUFDYXlJRkpBQUNRQ0FDSUFOTURRQWdCRUdBd0FSeERRQWdCU0FCSUFJZ0Eyc2lBMEdBQWlBRFFZQUNTU0lCR3hBT0dpQUJSUVJBQTBBZ0FDQUZRWUFDRUJFZ0EwR0FBbXNpQTBIL0FVc05BQXNMSUFBZ0JTQURFQkVMSUFWQmdBSnFKQUFMTVFBZ0FRSi9JQUlvQWt4QkFFZ0VRQ0FBSUFFZ0FoQTJEQUVMSUFBZ0FTQUNFRFlMSWdCR0JFQVBDeUFBSUFGdUdnczNBUUovSXdCQkVHc2lBU1FBSUFBRWZ5QUJRUXhxUVJBZ0FCQmxJUUJCQUNBQktBSU1JQUFiQlVFQUN5RUNJQUZCRUdva0FDQUNDeGNBSUFBZ0FTQUNJQU1nQkNBRklBWWdCMEVCRUI4YUMyb0JBMzhnQUFSQUlBQW9BaGdpQVFSQUlBQW9BaEFpQWdSL1FRQWhBUU5BSUFBb0FoZ2dBVUUwYkdvb0Fpd2lBd1JBSUFNUUNTQUFLQUlRSVFJTElBRkJBV29pQVNBQ1NRMEFDeUFBS0FJWUJTQUJDeEFKQ3lBQUtBSWNJZ0VFUUNBQkVBa0xJQUFRQ1FzTG9RRUJCSDhnQVVFQVRBUkFRUUFQQ3lBQUtBSU1JUUlnQUNnQ0VDRURBMEFnQVNFRkFrQWdBdzBBSUFBZ0FrRUlkRUdBL2dOeElnSTJBZ3dnQUVFSFFRZ2dBa0dBL2dOR0d5SUROZ0lRSUFBb0FnZ2lBU0FBS0FJRVR3MEFJQUFnQVVFQmFqWUNDQ0FBSUFJZ0FTMEFBSElpQWpZQ0RBc2dBQ0FEUVFGcklnTTJBaEFnQWlBRGRrRUJjU0FGUVFGcklnRjBJQVJ5SVFRZ0JVRUJTdzBBQ3lBRUN4NEFJQUFvQWd3RVFDQUFRUUEyQWlnRFFDQUFLQUlZUVFCS0RRQUxDd3VUQkFJR2Z3SitBa0FDUUFOQUlBQWdBRUVCYTNFTkFTQUJRVWRMRFFFZ0FFRUlJQUJCQ0VzaUJ4c2hBRUdvemdFcEF3QWlDQUovUVFnZ0FVRURha0Y4Y1NBQlFRaE5HeUlCUWY4QVRRUkFJQUZCQTNaQkFXc01BUXNnQVdjaEF5QUJRUjBnQTJ0MlFRUnpJQU5CQW5SclFlNEFhaUFCUWY4ZlRRMEFHa0UvSUFGQkhpQURhM1pCQW5NZ0EwRUJkR3RCeHdCcUlnTWdBMEUvVHhzTElnT3RpQ0lKUWdCU0JFQURRQ0FKSUFsNklnaUlJUWtDZmlBRElBaW5haUlEUVFSMElnUkJxTVlCYWlnQ0FDSUNJQVJCb01ZQmFpSUZSd1JBSUFJZ0FDQUJFRFVpQkEwR0lBSW9BZ1FpQkNBQ0tBSUlJZ1kyQWdnZ0JpQUVOZ0lFSUFJZ0JUWUNDQ0FDSUFVb0FnUTJBZ1FnQlNBQ05nSUVJQUlvQWdRZ0FqWUNDQ0FEUVFGcUlRTWdDVUlCaUF3QkMwR296Z0ZCcU00QktRTUFRbjRnQTYySmd6Y0RBQ0FKUWdHRkN5SUpRZ0JTRFFBTFFhak9BU2tEQUNFSUMwRS9JQWg1cDJzaEJRSkFJQWhRQkVCQkFDRUNEQUVMSUFWQkJIUWlCRUdveGdGcUtBSUFJUUlnQ0VLQWdJQ0FCRlFOQUVIakFDRURJQUlnQkVHZ3hnRnFJZ1pHRFFBRFFDQURSUTBCSUFJZ0FDQUJFRFVpQkEwRUlBTkJBV3NoQXlBQ0tBSUlJZ0lnQmtjTkFBc0xJQUVnQUVFd2FrRXdJQWNiYWhCbURRQUxJQUpGRFFBZ0FpQUZRUVIwUWFER0FXb2lBMFlOQUFOQUlBSWdBQ0FCRURVaUJBMENJQUlvQWdnaUFpQURSdzBBQ3d0QkFDRUVDeUFFQzVJVkFROS9Ba0FDUUNBQUtBSU1SUVJBUVFFaER5QUFLQUlFUVFCS0RRRWdBQ2dDQ0VFQlNnMEJEQUlMUVFFaERTQUFLQUlJUVFCS0RRQWdBQ2dDQkVFQ1NBMEJDeUFBS0FJQUlnZ2dEVUVGZEdvaEJBSkFJQUFvQWhBaUJ5QUFLQUlVSWdwUERRQWdCQ0FIUVFaMGFpRUJBa0FnQ2lBSGEwRURjU0lHUlFSQUlBY2hBZ3dCQ3lBSElRSURRQ0FCSUFIOUFBUUEvUXhZZHAwL1dIYWRQMWgyblQ5WWRwMC8vZVlCL1FzRUFDQUJJQUg5QUFRUS9ReFlkcDAvV0hhZFAxaDJuVDlZZHAwLy9lWUIvUXNFRUNBQlFVQnJJUUVnQWtFQmFpRUNJQU5CQVdvaUF5QUdSdzBBQ3dzZ0J5QUthMEY4U3cwQUEwQWdBU0FCL1FBRUFQME1XSGFkUDFoMm5UOVlkcDAvV0hhZFAvM21BZjBMQkFBZ0FTQUIvUUFFRVAwTVdIYWRQMWgyblQ5WWRwMC9XSGFkUC8zbUFmMExCQkFnQVNBQi9RQUVRUDBNV0hhZFAxaDJuVDlZZHAwL1dIYWRQLzNtQWYwTEJFQWdBU0FCL1FBRVVQME1XSGFkUDFoMm5UOVlkcDAvV0hhZFAvM21BZjBMQkZBZ0FTQUIvUUFFZ0FIOURGaDJuVDlZZHAwL1dIYWRQMWgyblQvOTVnSDlDd1NBQVNBQklBSDlBQVNRQWYwTVdIYWRQMWgyblQ5WWRwMC9XSGFkUC8zbUFmMExCSkFCSUFFZ0FmMEFCTUFCL1F4WWRwMC9XSGFkUDFoMm5UOVlkcDAvL2VZQi9Rc0V3QUVnQVNBQi9RQUUwQUg5REZoMm5UOVlkcDAvV0hhZFAxaDJuVC85NWdIOUN3VFFBU0FCUVlBQ2FpRUJJQUpCQkdvaUFpQUtSdzBBQ3dzZ0NDQVBRUVYwYWlFRkFrQWdBQ2dDR0NJR0lBQW9BaHdpQzA4TkFDQUZJQVpCQm5ScUlRRUNRQ0FMSUFaclFRTnhJZ2hGQkVBZ0JpRUNEQUVMUVFBaEF5QUdJUUlEUUNBQklBSDlBQVFBL1F3QUdOQS9BQmpRUHdBWTBEOEFHTkEvL2VZQi9Rc0VBQ0FCSUFIOUFBUVEvUXdBR05BL0FCalFQd0FZMEQ4QUdOQS8vZVlCL1FzRUVDQUJRVUJySVFFZ0FrRUJhaUVDSUFOQkFXb2lBeUFJUncwQUN3c2dCaUFMYTBGOFN3MEFBMEFnQVNBQi9RQUVBUDBNQUJqUVB3QVkwRDhBR05BL0FCalFQLzNtQWYwTEJBQWdBU0FCL1FBRUVQME1BQmpRUHdBWTBEOEFHTkEvQUJqUVAvM21BZjBMQkJBZ0FTQUIvUUFFUVAwTUFCalFQd0FZMEQ4QUdOQS9BQmpRUC8zbUFmMExCRUFnQVNBQi9RQUVVUDBNQUJqUVB3QVkwRDhBR05BL0FCalFQLzNtQWYwTEJGQWdBU0FCL1FBRWdBSDlEQUFZMEQ4QUdOQS9BQmpRUHdBWTBELzk1Z0g5Q3dTQUFTQUJJQUg5QUFTUUFmME1BQmpRUHdBWTBEOEFHTkEvQUJqUVAvM21BZjBMQkpBQklBRWdBZjBBQk1BQi9Rd0FHTkEvQUJqUVB3QVkwRDhBR05BLy9lWUIvUXNFd0FFZ0FTQUIvUUFFMEFIOURBQVkwRDhBR05BL0FCalFQd0FZMEQvOTVnSDlDd1RRQVNBQlFZQUNhaUVCSUFKQkJHb2lBaUFMUncwQUN3c2dDaUFBS0FJSUlna2dBQ2dDQkNJT0lBMXJJZ0FnQUNBSlNoc2lDQ0FJSUFwTEd5RU1JQVJCSUdvaEFRSi9JQWRGQkVBZ0RFVUVRRUVBSVFNZ0FRd0NDeUFFSUFUOUFBUUFJQVg5QUFRQUlBVDlBQVFnL2VRQi9ReFZFK00rVlJQalBsVVQ0ejVWRStNKy9lWUIvZVVCL1FzRUFDQUVJQVQ5QUFRUUlBWDlBQVFRSUFUOUFBUXcvZVFCL1F4VkUrTStWUlBqUGxVVDR6NVZFK00rL2VZQi9lVUIvUXNFRUVFQklRTWdCRUhnQUdvTUFRc2dBU0FISWdOQkJuUnFDeUVDSUFNZ0RFa0VRQU5BSUFKQklHc2lBQ0FBL1FBRUFDQUNRVUJxL1FBRUFDQUMvUUFFQVAza0FmME1WUlBqUGxVVDR6NVZFK00rVlJQalB2M21BZjNsQWYwTEJBQWdBa0VRYXlJQUlBRDlBQVFBSUFKQk1HdjlBQVFBSUFMOUFBUVEvZVFCL1F4VkUrTStWUlBqUGxVVDR6NVZFK00rL2VZQi9lVUIvUXNFQUNBQ1FVQnJJUUlnQTBFQmFpSURJQXhIRFFBTEN5QUlJQXBQSWcxRkJFQWdBa0VnYXlJQUlBRDlBQVFBSUFKQlFHcjlBQVFBL1F4VkUyTS9WUk5qUDFVVFl6OVZFMk0vL2VZQi9lVUIvUXNFQUNBQ1FSQnJJZ0FnQVAwQUJBQWdBa0V3YS8wQUJBRDlERlVUWXo5VkUyTS9WUk5qUDFVVFl6Lzk1Z0g5NVFIOUN3UUFDeUFMSUE0Z0NTQVBheUlBSUFBZ0Rrb2JJZzRnQ3lBT1NSc2hDU0FGUVNCcUlRSWdDUUovSUFaRkJFQWdDVVVFUUNBQ0lRTkJBQXdDQ3lBRklBWDlBQVFBSUFUOUFBUUFJQVg5QUFRZy9lUUIvUXgyQm1JL2RnWmlQM1lHWWo5MkJtSS8vZVlCL2VVQi9Rc0VBQ0FGSUFYOUFBUVFJQVQ5QUFRUUlBWDlBQVF3L2VRQi9ReDJCbUkvZGdaaVAzWUdZajkyQm1JLy9lWUIvZVVCL1FzRUVDQUZRZUFBYWlFRFFRRU1BUXNnQWlBR1FRWjBhaUVESUFZTElnQkxCRUFEUUNBRFFTQnJJZ2dnQ1AwQUJBQWdBMEZBYXYwQUJBQWdBLzBBQkFEOTVBSDlESFlHWWo5MkJtSS9kZ1ppUDNZR1lqLzk1Z0g5NVFIOUN3UUFJQU5CRUdzaUNDQUkvUUFFQUNBRFFUQnIvUUFFQUNBRC9RQUVFUDNrQWYwTWRnWmlQM1lHWWo5MkJtSS9kZ1ppUC8zbUFmM2xBZjBMQkFBZ0EwRkFheUVESUFCQkFXb2lBQ0FKUncwQUN3c2dDeUFPVFNJSVJRUkFJQU5CSUdzaUFDQUEvUUFFQUNBRFFVQnEvUUFFQVAwTWRnYmlQM1lHNGo5MkJ1SS9kZ2JpUC8zbUFmM2xBZjBMQkFBZ0EwRVFheUlBSUFEOUFBUUFJQU5CTUd2OUFBUUEvUXgyQnVJL2RnYmlQM1lHNGo5MkJ1SS8vZVlCL2VVQi9Rc0VBQXNDUUNBSFJRUkFJQXhGQkVCQkFDRUhEQUlMSUFRZ0JQMEFCQUFnQmYwQUJBQWdCUDBBQkNEOTVBSDlESzRCV1QydUFWazlyZ0ZaUGE0QldUMzk1Z0g5NUFIOUN3UUFJQVFnQlAwQUJCQWdCZjBBQkJBZ0JQMEFCREQ5NUFIOURLNEJXVDJ1QVZrOXJnRlpQYTRCV1QzOTVnSDk1QUg5Q3dRUUlBUkI0QUJxSVFGQkFTRUhEQUVMSUFFZ0IwRUdkR29oQVFzZ0J5QU1TUVJBQTBBZ0FVRWdheUlBSUFEOUFBUUFJQUZCUUdyOUFBUUFJQUg5QUFRQS9lUUIvUXl1QVZrOXJnRlpQYTRCV1QydUFWazkvZVlCL2VRQi9Rc0VBQ0FCUVJCcklnQWdBUDBBQkFBZ0FVRXdhLzBBQkFBZ0FmMEFCQkQ5NUFIOURLNEJXVDJ1QVZrOXJnRlpQYTRCV1QzOTVnSDk1QUg5Q3dRQUlBRkJRR3NoQVNBSFFRRnFJZ2NnREVjTkFBc0xJQTFGQkVBZ0FVRWdheUlBSUFEOUFBUUFJQUZCUUdyOUFBUUEvUXl1QWRrOXJnSFpQYTRCMlQydUFkazkvZVlCL2VRQi9Rc0VBQ0FCUVJCcklnQWdBUDBBQkFBZ0FVRXdhLzBBQkFEOURLNEIyVDJ1QWRrOXJnSFpQYTRCMlQzOTVnSDk1QUg5Q3dRQUN3SkFJQVpGQkVBZ0NVVUVRRUVBSVFZTUFnc2dCU0FGL1FBRUFDQUUvUUFFQUNBRi9RQUVJUDNrQWYwTWN3YkxQM01HeXo5ekJzcy9jd2JMUC8zbUFmM2tBZjBMQkFBZ0JTQUYvUUFFRUNBRS9RQUVFQ0FGL1FBRU1QM2tBZjBNY3diTFAzTUd5ejl6QnNzL2N3YkxQLzNtQWYza0FmMExCQkFnQlVIZ0FHb2hBa0VCSVFZTUFRc2dBaUFHUVFaMGFpRUNDeUFHSUFsSkJFQURRQ0FDUVNCcklnQWdBUDBBQkFBZ0FrRkFhdjBBQkFBZ0F2MEFCQUQ5NUFIOURITUd5ejl6QnNzL2N3YkxQM01HeXovOTVnSDk1QUg5Q3dRQUlBSkJFR3NpQUNBQS9RQUVBQ0FDUVRCci9RQUVBQ0FDL1FBRUVQM2tBZjBNY3diTFAzTUd5ejl6QnNzL2N3YkxQLzNtQWYza0FmMExCQUFnQWtGQWF5RUNJQVpCQVdvaUJpQUpSdzBBQ3dzZ0NBMEFJQUpCSUdzaUFDQUEvUUFFQUNBQ1FVQnEvUUFFQVAwTWN3WkxRSE1HUzBCekJrdEFjd1pMUVAzbUFmM2tBZjBMQkFBZ0FrRVFheUlBSUFEOUFBUUFJQUpCTUd2OUFBUUEvUXh6Qmt0QWN3WkxRSE1HUzBCekJrdEEvZVlCL2VRQi9Rc0VBQXNMWFFFRWZ5QUFCRUFnQUNnQ0ZDSUJJQUFvQWhBaUFtd0VRQU5BSUFBb0FoZ2dBMEVDZEdvb0FnQWlCQVJBSUFRUUNTQUFLQUlRSVFJZ0FDZ0NGQ0VCQ3lBRFFRRnFJZ01nQVNBQ2JFa05BQXNMSUFBb0FoZ1FDU0FBRUFrTEM0VUJBUUovQWtBQ1FDQUFLQUlFSWdNZ0FDZ0NBQ0lFUndSQUlBQW9BZ2doQXd3QkN5QUFJQU5CQ21vaUJEWUNCQ0FBS0FJSUlBUkJBblFRRUNJRFJRMEJJQUFnQXpZQ0NDQUFLQUlBSVFRTElBTWdCRUVDZEdvZ0FUWUNBQ0FBSUFSQkFXbzJBZ0JCQVE4TElBQW9BZ2dRQ1NBQVFnQTNBZ0FnQWtFQlFkSXVRUUFRQ0VFQUM5Z2pBaXAvQTNzQ1FDQUFLQUlBSWdrZ0Ewa05BQ0FCSUFOUERRQWdBU0FKVHcwQUlBQW9BZ1FpQ1NBRVNRMEFJQUlnQkU4TkFDQUNJQWxQRFFBZ0JVRWNheUVvSUFBb0FnZ2lHVUVDZENFUklBZEJBblFoRHlBR1FRSjBJUjhnQlVFRWF5RXBJQUlnQUNnQ0RHNGhIaUFCSUJsdUlTTWdCa0VJUnlFa0lBSWhIUU5BSUFBb0Fnd2lDU0VLSUFJZ0hVWUVRQ0FKSUFJZ0NYQnJJUW9MSUFvZ0JDQWRheUlNSUFvZ0RFa2JJaE5CZkhFaEd5QVRRUU54SVJZZ0UwRjRjU0VxSUJOQkIzRWhKU0FUUVFGcklSb2dHU0FKUVFKMElBcEJBblJyUVFScWJDRWdJQVpCQWtZZ0UwRUJSbkVoS3lBSklBcHJJQmxzSVNZZ0tDQVBJQjBnQW1zaURHd2lDV29oSnlBSklDbHFJU3dnQlNBSmFpRXRJQVVnQnlBTWJFRUNkR29oSENBaklTRWdBU0VZQTBBZ0dTQVpJQ05zSUFGcmFpQVpJQUVnR0VZYklnd2dBeUFZYXlJSklBa2dERXNiSVJBZ0dTQU1heUVKSUNGQkFuUWlEU0FBS0FJWUlBQW9BaEFnSG14QkFuUnFhaWdDQUNFU0FrQUNRQ0FJQkVBQ1FBSkFBa0FDUUFKQUlCSUVRQ0FTSUNaQkFuUnFJQWxCQW5ScUlRb2dHQ0FCYXlFTklBWkJBVVlOQkNBY0lBWWdEV3hCQW5ScUlRc2dFRUVCUmcwRElDc05BaUFrRFFFZ0VFRUhUUTBCSUJORkRRZ2dKeUFOSUI5c2FpQVFRUVYwYWlFVklCSWdJQ0FRUVFKMGFpQU1RUUowYTJvaElpQVFRWHh4SVExQkFDRVNEQVVMSUFaQkFVY0VRQ0FUUlEwSUlCQkJmSEVoRFNBUVFRTnhJUXdnSENBWUlBRnJJQVpzUVFKMGFpRUxRUUFoRWlBUVFRRnJRUU5KSVJRRFFBSkFJQkJGRFFCQkFDRUpRUUFoQ2tFQUlRNGdGRVVFUUFOQUlBc2dCaUFLYkVFQ2RHcEJBRFlDQUNBTElBcEJBWElnQm14QkFuUnFRUUEyQWdBZ0N5QUtRUUp5SUFac1FRSjBha0VBTmdJQUlBc2dDa0VEY2lBR2JFRUNkR3BCQURZQ0FDQUtRUVJxSVFvZ0RrRUVhaUlPSUExSERRQUxDeUFNUlEwQUEwQWdDeUFHSUFwc1FRSjBha0VBTmdJQUlBcEJBV29oQ2lBSlFRRnFJZ2tnREVjTkFBc0xJQXNnRDJvaEN5QVRJQkpCQVdvaUVrY05BQXNNQ0FzZ0UwVU5CeUFRUVFKMElRd2dIQ0FZSUFGclFRSjBhaUVMUVFBaENTQWFRUWRQQkVBRFFDQUxRUUFnREJBT0lBOXFRUUFnREJBT0lBOXFRUUFnREJBT0lBOXFRUUFnREJBT0lBOXFRUUFnREJBT0lBOXFRUUFnREJBT0lBOXFRUUFnREJBT0lBOXFRUUFnREJBT0lBOXFJUXNnQ1VFSWFpSUpJQ3BIRFFBTEMwRUFJUWtnSlVVTkJ3TkFJQXRCQUNBTUVBNGdEMm9oQ3lBSlFRRnFJZ2tnSlVjTkFBc01Cd3NnRTBVTkJpQVFRWHh4SVJRZ0VFRURjU0VTUVFBaERTQVFRUUZyUVFOSklSY01CUXRCQUNFSklCQkJmSEVpRGdSQUEwQWdDeUFKUVFOMGFpQUtJQWxCQW5ScUtBSUFOZ0lBSUFzZ0NVRUJjaUlVUVFOMGFpQUtJQlJCQW5ScUtBSUFOZ0lBSUFzZ0NVRUNjaUlVUVFOMGFpQUtJQlJCQW5ScUtBSUFOZ0lBSUFzZ0NVRURjaUlVUVFOMGFpQUtJQlJCQW5ScUtBSUFOZ0lBSUFsQkJHb2lDU0FPU1EwQUN3c2dDU0FRVHcwRkFrQWdFQ0FKYXlJVVFSQkpEUUFnTFNBTklCOXNJZzFxSUFsQkEzUnFJQklnSUdvaURpQVFJQXhyUVFKMGFra0VRQ0FPSUFrZ0RHdEJBblJxSUEwZ0xHb2dFRUVEZEdwSkRRRUxJQW9nQ1VFQ2RHb2hEU0FKL1JIOURBQUFBQUFCQUFBQUFnQUFBQU1BQUFEOXJnRWhNeUFKSUJSQmZIRWlER29oQ1VFQUlRNERRQ0FMSUROQkFmMnJBU0kwL1JzQVFRSjBhaUFOSUE1QkFuUnEvUUFDQUNJMS9Wb0NBQUFnQ3lBMC9Sc0JRUUowYWlBMS9Wb0NBQUVnQ3lBMC9Sc0NRUUowYWlBMS9Wb0NBQUlnQ3lBMC9Sc0RRUUowYWlBMS9Wb0NBQU1nTS8wTUJBQUFBQVFBQUFBRUFBQUFCQUFBQVAydUFTRXpJQTVCQkdvaURpQU1SdzBBQ3lBTUlCUkdEUVlMUVFBaERDQUpJUTRnRUNBSmEwRURjU0lOQkVBRFFDQUxJQTVCQTNScUlBb2dEa0VDZEdvb0FnQTJBZ0FnRGtFQmFpRU9JQXhCQVdvaURDQU5SdzBBQ3dzZ0NTQVFhMEY4U3cwRkEwQWdDeUFPUVFOMGFpQUtJQTVCQW5ScUtBSUFOZ0lBSUFzZ0RrRUJhaUlKUVFOMGFpQUtJQWxCQW5ScUtBSUFOZ0lBSUFzZ0RrRUNhaUlKUVFOMGFpQUtJQWxCQW5ScUtBSUFOZ0lBSUFzZ0RrRURhaUlKUVFOMGFpQUtJQWxCQW5ScUtBSUFOZ0lBSUE1QkJHb2lEaUFRUncwQUN3d0ZDeUFUUlEwRVFRQWhDU0FhUVFOUEJFQURRQ0FMSUFvb0FnQTJBZ0FnQ3lBUGFpSU1JQW9nRVdvaURTZ0NBRFlDQUNBTUlBOXFJZ3dnRFNBUmFpSU5LQUlBTmdJQUlBd2dEMm9pRENBTklCRnFJZzBvQWdBMkFnQWdEU0FSYWlFS0lBd2dEMm9oQ3lBSlFRUnFJZ2tnRzBjTkFBc0xRUUFoQ1NBV1JRMEVBMEFnQ3lBS0tBSUFOZ0lBSUFvZ0VXb2hDaUFMSUE5cUlRc2dDVUVCYWlJSklCWkhEUUFMREFRTElCd2dEVUVDZEdvaEN5QVFRUVJIQkVBZ0UwVU5CQ0FRUVFKMElRbEJBQ0VPSUJwQkEwOEVRQU5BSUFzZ0NpQUpFQXNoTHlBS0lCRnFJZzBnRVdvaUN5QVJhaUlTSUJGcUlRb2dMeUFQYWlBTklBa1FDeUFQYWlBTElBa1FDeUFQYWlBU0lBa1FDeUFQYWlFTElBNUJCR29pRGlBYlJ3MEFDd3RCQUNFT0lCWkZEUVFEUUNBTElBb2dDUkFMSVRBZ0NpQVJhaUVLSURBZ0Qyb2hDeUFPUVFGcUlnNGdGa2NOQUFzTUJBc2dFMFVOQTBFQUlRa2dHa0VEVHdSQUEwQWdDeUFLL1FBQ0FQMExBZ0FnQ3lBUGFpSU1JQW9nRVdvaURmMEFBZ0Q5Q3dJQUlBd2dEMm9pRENBTklCRnFJZzM5QUFJQS9Rc0NBQ0FNSUE5cUlnd2dEU0FSYWlJTi9RQUNBUDBMQWdBZ0RTQVJhaUVLSUF3Z0Qyb2hDeUFKUVFScUlna2dHMGNOQUFzTFFRQWhDU0FXUlEwREEwQWdDeUFLL1FBQ0FQMExBZ0FnQ2lBUmFpRUtJQXNnRDJvaEN5QUpRUUZxSWdrZ0ZrY05BQXNNQXdzRFFFRUFJUWtnRFFSQUEwQWdDeUFKUVFWMGFpQUtJQWxCQW5ScUtBSUFOZ0lBSUFzZ0NVRUJjaUlNUVFWMGFpQUtJQXhCQW5ScUtBSUFOZ0lBSUFzZ0NVRUNjaUlNUVFWMGFpQUtJQXhCQW5ScUtBSUFOZ0lBSUFzZ0NVRURjaUlNUVFWMGFpQUtJQXhCQW5ScUtBSUFOZ0lBSUFsQkJHb2lDU0FOU1EwQUN3c0NRQ0FKSUJCUERRQUNRQ0FRSUFsckloUkJDRThFUUFKQUlBc2dDVUVGZEdvZ0lpQVJJQkpzYWs4TkFDQUtJQWxCQW5ScUlCVWdEeUFTYkdwUERRQWdDU0VNREFJTElBbjlFZjBNQUFBQUFBRUFBQUFDQUFBQUF3QUFBUDJ1QVNFeklBa2dGRUY4Y1NJWGFpRU1RUUFoRGdOQUlBc2dNMEVEL2FzQklqVDlHd0JCQW5ScUlBb2dDU0FPYWtFQ2RHcjlBQUlBSWpYOVdnSUFBQ0FMSURUOUd3RkJBblJxSURYOVdnSUFBU0FMSURUOUd3SkJBblJxSURYOVdnSUFBaUFMSURUOUd3TkJBblJxSURYOVdnSUFBeUF6L1F3RUFBQUFCQUFBQUFRQUFBQUVBQUFBL2E0QklUTWdEa0VFYWlJT0lCZEhEUUFMSUJRZ0YwWU5BZ3dCQ3lBSklRd0xRUUFoRGlBUUlBd2lDV3RCQTNFaUZBUkFBMEFnQ3lBSlFRVjBhaUFLSUFsQkFuUnFLQUlBTmdJQUlBbEJBV29oQ1NBT1FRRnFJZzRnRkVjTkFBc0xJQXdnRUd0QmZFc05BQU5BSUFzZ0NVRUZkR29nQ2lBSlFRSjBhaWdDQURZQ0FDQUxJQWxCQVdvaURFRUZkR29nQ2lBTVFRSjBhaWdDQURZQ0FDQUxJQWxCQW1vaURFRUZkR29nQ2lBTVFRSjBhaWdDQURZQ0FDQUxJQWxCQTJvaURFRUZkR29nQ2lBTVFRSjBhaWdDQURZQ0FDQUpRUVJxSWdrZ0VFY05BQXNMSUFvZ0VXb2hDaUFMSUE5cUlRc2dFeUFTUVFGcUloSkhEUUFMREFJTElCSkZCRUJCQVNBQUtBSUlJQUFvQWd4c1FRSjBFQXdpRWtVRVFFRUFEd3NnQUNnQ0dDQUFLQUlRSUI1c1FRSjBhaUFOYWlBU05nSUFDeUFTSUNaQkFuUnFJQWxCQW5ScUlRc2dHQ0FCYXlFSkFrQUNRQUpBQWtBZ0JrRUJSd1JBSUJ3Z0JpQUpiRUVDZEdvaENpQVFRUUZHRFFFZ0pBMENJQkJCQjAwTkFpQVRSUTBHSUNjZ0NTQWZiR29nRUVFRmRHb2hJaUFnSUJCQkFuUnFJQXhCQW5ScklTNGdFRUY4Y1NFVVFRQWhEQU5BUVFBaENTQVVCRUFEUUNBTElBbEJBblJxSUFvZ0NVRUZkR29vQWdBMkFnQWdDeUFKUVFGeUlnMUJBblJxSUFvZ0RVRUZkR29vQWdBMkFnQWdDeUFKUVFKeUlnMUJBblJxSUFvZ0RVRUZkR29vQWdBMkFnQWdDeUFKUVFOeUlnMUJBblJxSUFvZ0RVRUZkR29vQWdBMkFnQWdDVUVFYWlJSklCUkpEUUFMQ3dKQUlBa2dFRThOQUFKQUlCQWdDV3NpRjBFSVR3UkFBa0FnQ3lBSlFRSjBhaUFpSUF3Z0QyeHFUdzBBSUFvZ0NVRUZkR29nRWlBdUlBd2dFV3hxYWs4TkFDQUpJUTBNQWdzZ0NmMFIvUXdBQUFBQUFRQUFBQUlBQUFBREFBQUEvYTRCSVRNZ0NTQVhRWHh4SWhWcUlRMUJBQ0VPQTBBZ0N5QUpJQTVxUVFKMGFpQUtJRE5CQS8yckFTSTAvUnNEUVFKMGFpQUtJRFQ5R3dKQkFuUnFJQW9nTlAwYkFVRUNkR29nQ2lBMC9Sc0FRUUowYXYwSkFnRDlWZ0lBQWYxV0FnQUMvVllDQUFQOUN3SUFJRFA5REFRQUFBQUVBQUFBQkFBQUFBUUFBQUQ5cmdFaE15QU9RUVJxSWc0Z0ZVY05BQXNnRlNBWFJnMENEQUVMSUFraERRdEJBQ0VPSUJBZ0RTSUphMEVEY1NJWEJFQURRQ0FMSUFsQkFuUnFJQW9nQ1VFRmRHb29BZ0EyQWdBZ0NVRUJhaUVKSUE1QkFXb2lEaUFYUncwQUN3c2dEU0FRYTBGOFN3MEFBMEFnQ3lBSlFRSjBhaUFLSUFsQkJYUnFLQUlBTmdJQUlBc2dDVUVCYWlJTlFRSjBhaUFLSUExQkJYUnFLQUlBTmdJQUlBc2dDVUVDYWlJTlFRSjBhaUFLSUExQkJYUnFLQUlBTmdJQUlBc2dDVUVEYWlJTlFRSjBhaUFLSUExQkJYUnFLQUlBTmdJQUlBbEJCR29pQ1NBUVJ3MEFDd3NnQ3lBUmFpRUxJQW9nRDJvaENpQVRJQXhCQVdvaURFY05BQXNNQmdzZ0hDQUpRUUowYWlFS0lCQkJCRVlOQWlBVFJRMEZJQkJCQW5RaENVRUFJUTRnR2tFRFR3UkFBMEFnQ3lBS0lBa1FDeUV4SUFvZ0Qyb2lEU0FQYWlJTElBOXFJaElnRDJvaENpQXhJQkZxSUEwZ0NSQUxJQkZxSUFzZ0NSQUxJQkZxSUJJZ0NSQUxJQkZxSVFzZ0RrRUVhaUlPSUJ0SERRQUxDMEVBSVE0Z0ZrVU5CUU5BSUFzZ0NpQUpFQXNoTWlBS0lBOXFJUW9nTWlBUmFpRUxJQTVCQVdvaURpQVdSdzBBQ3d3RkN5QVRSUTBFUVFBaENTQWFRUU5QQkVBRFFDQUxJQW9vQWdBMkFnQWdDeUFSYWlJTUlBb2dEMm9pRFNnQ0FEWUNBQ0FNSUJGcUlnd2dEU0FQYWlJTktBSUFOZ0lBSUF3Z0VXb2lEQ0FOSUE5cUlnMG9BZ0EyQWdBZ0RDQVJhaUVMSUEwZ0Qyb2hDaUFKUVFScUlna2dHMGNOQUFzTFFRQWhDU0FXUlEwRUEwQWdDeUFLS0FJQU5nSUFJQXNnRVdvaEN5QUtJQTlxSVFvZ0NVRUJhaUlKSUJaSERRQUxEQVFMSUJORkRRTWdFRUY4Y1NFVUlCQkJBM0VoRWtFQUlRMGdFRUVCYTBFRFNTRVhEQUVMSUJORkRRSkJBQ0VKSUJwQkEwOEVRQU5BSUFzZ0N2MEFBZ0Q5Q3dJQUlBc2dFV29pRENBS0lBOXFJZzM5QUFJQS9Rc0NBQ0FNSUJGcUlnd2dEU0FQYWlJTi9RQUNBUDBMQWdBZ0RDQVJhaUlNSUEwZ0Qyb2lEZjBBQWdEOUN3SUFJQTBnRDJvaENpQU1JQkZxSVFzZ0NVRUVhaUlKSUJ0SERRQUxDMEVBSVFrZ0ZrVU5BZ05BSUFzZ0N2MEFBZ0Q5Q3dJQUlBb2dEMm9oQ2lBTElCRnFJUXNnQ1VFQmFpSUpJQlpIRFFBTERBSUxBMEFDUUNBUVJRMEFRUUFoRGtFQUlRbEJBQ0VNSUJkRkJFQURRQ0FMSUFsQkFuUnFJQW9nQmlBSmJFRUNkR29vQWdBMkFnQWdDeUFKUVFGeUloVkJBblJxSUFvZ0JpQVZiRUVDZEdvb0FnQTJBZ0FnQ3lBSlFRSnlJaFZCQW5ScUlBb2dCaUFWYkVFQ2RHb29BZ0EyQWdBZ0N5QUpRUU55SWhWQkFuUnFJQW9nQmlBVmJFRUNkR29vQWdBMkFnQWdDVUVFYWlFSklBeEJCR29pRENBVVJ3MEFDd3NnRWtVTkFBTkFJQXNnQ1VFQ2RHb2dDaUFHSUFsc1FRSjBhaWdDQURZQ0FDQUpRUUZxSVFrZ0RrRUJhaUlPSUJKSERRQUxDeUFMSUJGcUlRc2dDaUFQYWlFS0lCTWdEVUVCYWlJTlJ3MEFDd3dCQ3dOQUFrQWdFRVVOQUVFQUlRNUJBQ0VKUVFBaERDQVhSUVJBQTBBZ0N5QUdJQWxzUVFKMGFpQUtJQWxCQW5ScUtBSUFOZ0lBSUFzZ0NVRUJjaUlWSUFac1FRSjBhaUFLSUJWQkFuUnFLQUlBTmdJQUlBc2dDVUVDY2lJVklBWnNRUUowYWlBS0lCVkJBblJxS0FJQU5nSUFJQXNnQ1VFRGNpSVZJQVpzUVFKMGFpQUtJQlZCQW5ScUtBSUFOZ0lBSUFsQkJHb2hDU0FNUVFScUlnd2dGRWNOQUFzTElCSkZEUUFEUUNBTElBWWdDV3hCQW5ScUlBb2dDVUVDZEdvb0FnQTJBZ0FnQ1VFQmFpRUpJQTVCQVdvaURpQVNSdzBBQ3dzZ0NpQVJhaUVLSUFzZ0Qyb2hDeUFOUVFGcUlnMGdFMGNOQUFzTElDRkJBV29oSVNBUUlCaHFJaGdnQTBrTkFBc2dIa0VCYWlFZUlCTWdIV29pSFNBRVNRMEFDd3RCQVF2SU13VW1mdzkrQVhzQmZRRjhJd0JCMEFCcklnOGtBQ0FQUVpEL0F6WUNLQ0FBS0FKc0lBQW9BbWhzSVJjQ2Z3SkFBa0FDUUNBQUtBSUlJZ3RCQ0VjRVFFRUFJQXRCZ0FKSERRUWFJQTlCMmY4RE5nSW9EQUVMSUFBdEFFUkJBWEVOQUNBWFFRRnhJU0lnRjBGOGNTRU5JQmRCQVd1dFFvd3NmaUl4UWlDSXAwRUFSeUVqSURHbklTUWdEMEhOQUdvaEpTQVBRY3dBYWlFb0lBOUJ5QUJxSVNrZ0YwRWtTU0VxUVpEL0F5RUxBa0FDUUFKQUEwQUNRQ0FMUVpQL0EwWU5BQUpBQTBBZ0NTa0RDQ0l4VUFSK1FnQUZJREVnQ1NrRE9IMExVQVJBSUFCQndBQTJBZ2dNQXdzZ0NTQUFLQUlRUVFJZ0NoQVNRUUpIQkVBZ0NrRUJRWllTUVFBUUNFRUFEQXNMSUFBb0FoQWdEMEVrYWtFQ0VBb2dEeWdDSkNJTFFRRk5CRUFnQ2tFQlFZY3VRUUFRQ0VFQURBc0xBa0FnRHlnQ0tFR0FnUUpHQkVBZ0NTa0RDQ0l4VUFSK1FnQUZJREVnQ1NrRE9IMExVQTBCSUE4b0FpUWhDd3NnQUNnQ0NDSVVRUkJ4QkVBZ0FDQUFLQUlZSUF0clFRSnJOZ0lZQ3lBUElBdEJBbXNpRWpZQ0pFSHd2UUVoRENBUEtBSW9JUTREUUNBTUlnc29BZ0FpR0FSQUlBdEJER29oRENBT0lCaEhEUUVMQ3lBTEtBSUVJQlJ4UlFSQUlBcEJBVUg4S0VFQUVBaEJBQXdNQ3dKQUlBQW9BaFFnRWs4RVFDQUFLQUlRSVF3TUFRc2dDU2tEQ0NJeFVBUitRZ0FGSURFZ0NTa0RPSDBMSUJLdFV3UkFJQXBCQVVHTUxFRUFFQWhCQUF3TkN5QUFLQUlRSUE4b0FpUVFFQ0lNUlFSQUlBQW9BaEFRQ1NBQVFnQTNBeEFnQ2tFQlFkUWxRUUFRQ0VFQURBMExJQUFnRERZQ0VDQUFJQThvQWlRaUVqWUNGQXNnQ1NBTUlCSWdDaEFTSWd3Z0R5Z0NKRWNFUUNBS1FRRkJsaEpCQUJBSVFRQU1EQXNnQ3lnQ0NDSUxSUVJBSUFwQkFVSHExZ0JCQUJBSVFRQU1EQXNnQUNBQUtBSVFJQXdnQ2lBTEVRRUFSUVJBSUE4Z0R5Z0NLRFlDSUNBS1FRRkJwT2dBSUE5QklHb1FDRUVBREF3TElBa3BBemdoTVNBUEtBSWtJUkVnQUNnQ3lBRWlGQ2dDS0NJU0lBQW9Bc3dCSWd4QktHd2lEbW9pRmlnQ0ZDSWNRUUZxSWgwZ0ZpZ0NIQ0lMU3dSQUlCWUNmeUFMczBNQUFNaENraUpCUXdBQWdFOWRJRUZEQUFBQUFHQnhCRUFnUWFrTUFRdEJBQXNpQ3pZQ0hDQVdLQUlZSUF0QkdHd1FFQ0VMSUJRb0FpZ2lFaUFPYWlFV0lBdEZEUU1nRmlBTE5nSVlJQllvQWhRaUhFRUJhaUVkQ3lBT0lCSnFJZzRvQWhnZ0hFRVliR29pQ3lBUlFRUnFOZ0lRSUFzZ01hY2dFV3RCQkdzaURLdzNBd2dnQ3lBWU93RUFJQTRnSFRZQ0ZBSkFJQmhCa1A4RFJ3MEFJQTRvQWhBaUN3UkFJQXNnRGlnQ0RFRVliR29nREswM0F3QUxJQWtwQXppbklBOG9BaVJyUVFScnJTSXhJQUFwQXpCWERRQWdBQ0F4TndNd0N5QUFMUUJFUVFSeEJFQWdDU0FBTlFJWUlBb2dDU2dDS0JFSUFDQUFOUUlZVWdSQUlBcEJBVUdXRWtFQUVBaEJBQXdOQ3lBUFFaUC9BellDS0F3RUN5QUpJQUFvQWhCQkFpQUtFQkpCQWtjRVFDQUtRUUZCbGhKQkFCQUlRUUFNREFzZ0FDZ0NFQ0FQUVNocVFRSVFDaUFQS0FJb1FaUC9BMGNOQVF3REN3c2dBRUhBQURZQ0NBd0JDeUFXS0FJWUVBa2dGQ2dDS0NBTVFTaHNhaUlBUVFBMkFod2dBRUlBTndJVUlBcEJBVUdGSFVFQUVBaEJBQXdJQ3dKQUlBa3BBd2dpTVZBRWZrSUFCU0F4SUFrcEF6aDlDMUFFUUNBQUtBSUlRY0FBUmcwQkN3SkFBa0FnQUMwQVJDSUxRUVJ4UlFSQUlBQW9Bc3dCUVl3c2JDRU1JQUFvQXB3QklTNENRQUpBSUFBb0FqZ0VRQ0FKS1FNSUlqRlFCSDVDQUFVZ01TQUpLUU00ZlF1bklSTU1BUXNnQUNnQ0dDSVRRUUpKRFFFTElBQWdFMEVDYXlJVE5nSVlDeUF1SUF4cUlSZ2dFMFVOQVNBSktRTUlJakZRQkg1Q0FBVWdNU0FKS1FNNGZRc2dFNjFUQkVBZ0FDZ0N1QUVFUUNBS1FRRkJ1U3hCQUJBSVFRQU1EUXNnQ2tFQ1Fia3NRUUFRQ0FzZ0FDZ0NHQ0lPUVg1UEJFQWdDa0VCUWY0S1FRQVFDRUVBREF3TEFrQWdHQ2dDM0NzaURBUkFJQmdvQXVBcklndEJmU0FPYTBzRVFDQUtRUUZCdXdsQkFCQUlRUUFNRGdzZ0RDQUxJQTVxUVFKcUVCQWlDd1JBSUJnZ0N6WUMzQ3NNQkFzZ0dDZ0MzQ3NRQ1NBWVFRQTJBdHdyREFFTElCZ2dEa0VDYWhBTklnczJBdHdySUFzTkFnc2dDa0VCUVljdlFRQVFDRUVBREFzTElBQkJDRFlDQ0NBQUlBdEIrZ0Z4T2dCRURBRUxJQUFvQXNnQkloWUVRQ0FXS0FJb0loSWdBQ2dDekFFaUZFRW9iQ0lSYWlJTUtBSVFJQXdvQWd4QkdHeHFJZ3NnQ1NrRE9DSXlRZ0o5SWpFM0F3Z2dDeUF5SUFBMUFoaDhOd01RSUFBb0FoZ2hEZ0pBSUF3b0FoUWlIRUVCYWlJZElBd29BaHdpQzAwRVFDQU1LQUlZSVF3TUFRc2dEQUovSUF1elF3QUF5RUtTSWtGREFBQ0FUMTBnUVVNQUFBQUFZSEVFUUNCQnFRd0JDMEVBQ3lJTE5nSWNJQXdvQWhnZ0MwRVliQkFRSVF3Z0ZpZ0NLQ0lTSUJGcUlRc2dERVVOQmlBTElBdzJBaGdnQ3lnQ0ZDSWNRUUZxSVIwTElBd2dIRUVZYkdvaUN5QU9RUUpxTmdJUUlBc2dNY1EzQXdnZ0MwR1Qvd003QVFBZ0VTQVNhaUFkTmdJVUN5QUFLQUlZSVF3Q1FDQVRSUVJBUVFBaEV3d0JDeUFKSUJnb0F0d3JJQmdvQXVBcmFpQU1JQW9RRWlFVElBQW9BaGdoREFzZ0FFRUlRY0FBSUF3Z0UwWWJOZ0lJSUJnZ0dDZ0M0Q3NnRTJvMkF1QXJJQUF0QUVRaUMwRUpjVUVCUncwQUlBQWdDMEVJY2pvQVJDQUFLQUxNQVNFT0lBa29BaHhCQWtZTkFDQUpLUU00SWpGQ2YxRU5BQUpBQTBCQkFDRU1JQWtnRDBIR0FHb2lDMEVDSUFvUUVrRUNSdzBCSUFzZ0QwRkFhMEVDRUFvZ0R5Z0NRRUdRL3dOSERRRkJsaEloRWlBSklBdEJBaUFLRUJKQkFrY05DU0FMSUE5QlBHcEJBaEFLSUE4b0FqeEJDa2NFUUVHSExpRVNEQW9MSUE5QkNEWUNQQ0FKSUE5QnhnQnFRUWdnQ2hBU0lnc2dEeWdDUEVjTkNTQUxRUWhIQkVCQnZSNGhFZ3dLQ3lBUFFjWUFhaUFQUVRocVFRSVFDaUFwSUE5Qk5HcEJCQkFLSUNnZ0QwRXdha0VCRUFvZ0pTQVBRU3hxUVFFUUNpQU9JQThvQWpoSEJFQWdEeWdDTkNJTFFRNUpEUUlnRHlBTFFReHJJZ3MyQWpRZ0NTQUxyU0FLSUFrb0FpZ1JDQUFnRHpVQ05GRU5BUXdDQ3dzZ0R5Z0NNQ0FQS0FJc1JpRU1DeUFKSURFZ0NpQUpLQUlzRVF3QVJRMElJQXhGRFFBZ0FDQUFMUUJFUWU0QmNVRVFjam9BUkFKQUlCZEZEUUFnQUNnQ25BRWhFMEVBSVFzQ1FDQXFEUUFnRTBIWUsyb2lEQ0FrYWlBTVNTQWpjZzBBQTBBZ0V5QUxRWXdzYkdvaUhDZ0MyQ3NpSGYwUklCTWdDMEVCY2tHTUxHeHFJaGdvQXRnckloYjlIQUVnRXlBTFFRSnlRWXdzYkdvaUVTZ0MyQ3NpRlAwY0FpQVRJQXRCQTNKQmpDeHNhaUlPS0FMWUt5SU0vUndEL1F3QUFBQUFBQUFBQUFBQUFBQUFBQUFBL1RnaVFQMGJBRUVCY1FSQUlCeEIyQ3RxSUIxQkFXbzJBZ0FMSUVEOUd3RkJBWEVFUUNBWVFkZ3JhaUFXUVFGcU5nSUFDeUJBL1JzQ1FRRnhCRUFnRVVIWUsyb2dGRUVCYWpZQ0FBc2dRUDBiQTBFQmNRUkFJQTVCMkN0cUlBeEJBV28yQWdBTElBdEJCR29pQ3lBTlJ3MEFDeUFYSUEwaUMwWU5BUXNnQzBFQmNpRU1JQ0lFUUNBVElBdEJqQ3hzYWlJT0tBTFlLeUlMQkVBZ0RrSFlLMm9nQzBFQmFqWUNBQXNnRENFTEN5QU1JQmRHRFFBRFFDQVRJQXRCakN4c2FpSU9LQUxZS3lJTUJFQWdEa0hZSzJvZ0RFRUJhallDQUFzZ0RrSGsxd0JxSWc0b0FnQWlEQVJBSUE0Z0RFRUJhallDQUFzZ0MwRUNhaUlMSUJkSERRQUxDeUFLUVFKQmxjTUFRUUFRQ0FzZ0FDMEFSRUVCY1EwQUlBa2dBQ2dDRUVFQ0lBb1FFa0VDUndSQUFrQWdBQ2dDekFGQkFXb2dGMGNOQUNBWFJRMEFJQUFvQXB3QklReEJBQ0VMQTBBZ0RDQUxRWXdzYkdvaUNTZ0MxQ3RGQkVBZ0NTZ0MyQ3RGRFFnTElBdEJBV29pQ3lBWFJ3MEFDd3NnQ2tFQlFaWVNRUUFRQ0VFQURBa0xJQUFvQWhBZ0QwRW9ha0VDRUFvZ0R5Z0NLQ0VMSUFBdEFFUkJBWEVOQWlBTFFkbi9BMGNOQVF3Q0N3c2dEeWdDS0NFTEN5QUxRZG4vQTBjTkFpQUFLQUlJUVlBQ1JnMENJQUJCZ0FJMkFnZ2dBRUVBTmdMTUFRd0NDeUFMS0FJWUVBa2dGaWdDS0NBVVFTaHNhaUlBUVFBMkFod2dBRUlBTndJVUlBcEJBVUdGSFVFQUVBaEJBQXdFQ3lBUElBczJBaEFnQ2tFRVFjTFJBQ0FQUVJCcUVBZ2dBQ0FMTmdMTUFTQVBRZG4vQXpZQ0tDQUFRWUFDTmdJSUN5QUFLQUxNQVNFTElBQW9BcHdCSVFrQ1FBSkFJQUF0QUVSQkFYRU5BQUpBQWtBZ0N5QVhUdzBBSUFrZ0MwR01MR3hxSVJNRFFDQVRLQUxjS3cwQklBQWdDMEVCYWlJTE5nTE1BU0FUUVl3c2FpRVRJQXNnRjBjTkFBc01BUXNnQ3lBWFJ3MEJDeUFJUVFBMkFnQU1BUXNDUUFKQUlBcEJBU0FKSUF0QmpDeHNhaUlSS0FLMEtBUi9RWncwQlNBUkxRQ0lMRUVDY1VVTkFnSkFJQkVvQXFnb0lnMUZCRUJCQUNFTURBRUxJQkVvQXF3b0lRbEJBQ0VNUVFBaEN5QU5RUVJQQkVBZ0RVRjhjU0VML1F3QUFBQUFBQUFBQUFBQUFBQUFBQUFBSVVCQkFDRVNBMEFnQ1NBU1FRTjBhaUlNUVJ4cUlBeEJGR29nREVFTWFpQU0vUWtDQlAxV0FnQUIvVllDQUFMOVZnSUFBeUJBL2E0QklVQWdFa0VFYWlJU0lBdEhEUUFMSUVBZ1FDQkEvUTBJQ1FvTERBME9Ed0FCQWdNQUFRSUQvYTRCSWtBZ1FDQkEvUTBFQlFZSEFBRUNBd0FCQWdNQUFRSUQvYTRCL1JzQUlRd2dDeUFOUmcwQkN3TkFJQWtnQzBFRGRHb29BZ1FnREdvaERDQUxRUUZxSWdzZ0RVY05BQXNMSUJFZ0RCQU5JZ2syQXJRb0lBa05BVUdYSGd0QkFCQUlJQXBCQVVIMVBFRUFFQWhCQUF3RkN5QVJJQXcyQXJ3b0lCRW9BcXdvSVFrZ0VTZ0NxQ2dpREFSQVFRQWhFa0VBSVFzRFFDQUpJQXRCQTNRaUZHb2lEaWdDQUNJTkJFQWdFU2dDdENnZ0Vtb2dEU0FPS0FJRUVBc2FJQkVvQXF3b0lCUnFJZ2tvQWdRaEx5QUpLQUlBRUFrZ0VTZ0NyQ2dpQ1NBVWFrSUFOd0lBSUM4Z0Vtb2hFaUFSS0FLb0tDRU1DeUFMUVFGcUlnc2dERWtOQUFzTElCRkJBRFlDcUNnZ0NSQUpJQkZCQURZQ3JDZ2dFU0FSS0FLMEtEWUNzQ2dnRVNBUktBSzhLRFlDdUNnTEFuOUJBQ0VvSUFBb0F0QUJJZ3NvQWh3aUppZ0NUQ0FBS0FMTUFTSUpRWXdzYkdvb0F0QXJJUnNnQ3lnQ0dDSVVLQUlZSVNjZ0N5Z0NGQ2dDQUNJZUlDWW9BZ1FnSmlnQ0RDSUxJQWtnQ1NBbUtBSVlJZ2x1SWd3Z0NXeHJiR29pRGlBVUtBSUFJZ2tnQ1NBT1NSc2lEVFlDQUNBZVFYOGdDeUFPYWlJSklBa2dEa2tiSWdzZ0ZDZ0NDQ0lKSUFrZ0Mwc2JJZ2syQWdnQ1FDQUpJQTFLSUExQkFFNXhSUVJBSUFwQkFVR0JNMEVBRUFnTUFRc2dIaWdDRkNFUUlCNGdKaWdDQ0NBTUlDWW9BaEFpQzJ4cUlnMGdGQ2dDQkNJSklBa2dEVWtiSWd3MkFnUWdIa0YvSUFzZ0RXb2lDU0FKSUExSkd5SUxJQlFvQWd3aUNTQUpJQXRMR3lJSk5nSU1JQWtnREVvZ0RFRUFUbkZGQkVBZ0NrRUJRZHN5UVFBUUNBd0JDd0pBSUJzb0FnUUVRQ0FlS0FJUURRRkJBUXdEQ3lBS1FRRkIxU2hCQUJBSURBRUxBa0FDUUFOQUlDZEJBRFlDSkNBUUlDYzBBZ0FpTlVJQmZTSXhJQjQwQWdCOElEVi9QZ0lBSUJBZ0p6UUNCQ0kwUWdGOUlqSWdIalFDQkh3Z05IOCtBZ1FnRUNBeElCNDBBZ2g4SURWL1BnSUlJQjQwQWd3aE1TQVFJQ2cyQWhBZ0VDQXhJREo4SURSL1BnSU1JQkFnR3lnQ0JDSUxOZ0lVSUJCQkFTQUxJQ1lvQWxBaUNXc2dDU0FMU3hzMkFoZ2dFQ2dDTkJBSklCQkJBRFlDUkNBUS9Rd0FBQUFBQUFBQUFBQUFBQUFBQUFBQS9Rc0NOQ0FMUVpnQmJDRU1Ba0FnRUNnQ0hDSUpSUVJBSUJBZ0RCQU5JZ2syQWh3Z0NVVU5CU0FRSUF3MkFpQWdDVUVBSUF3UURob01BUXNnRENBUUtBSWdUUTBBSUFrZ0RCQVFJZ3RGQkVBZ0NrRUJRWUFYUVFBUUNDQVFLQUljRUFrZ0VFSUFOd0ljREFVTElCQWdDellDSENBTElCQW9BaUFpQ1dwQkFDQU1JQWxyRUE0YUlCQWdERFlDSUFzZ0VDZ0NGQ0lMQkVBZ0cwR3dCMm9oSFNBYlFhd0dhaUVZSUJ0QkhHb2hLeUFRS0FJY0lScEJBQ0VzQTBBZ0drSi9JQXRCQVdzaUNhMGlNNFpDZjRVaU1pQVFOQUlBZkNBemg2Y2lGallDQUNBYUlESWdFRFFDQkh3Z000ZW5JaEUyQWdRZ0dpQXlJQkEwQWdoOElET0hJakduSWhRMkFnZ2dHaUF5SUJBMEFneDhJRE9ISWpTbklnNDJBZ3dnTWNSQ0FTQVlJQ3hCQW5RaURHb29BZ0FpSDYwaU1ZWjhRZ0Y5SURHSHB5QWZkQ0lOUVFCSURRUWdOTVJDZnlBTUlCMXFLQUlBSWlDdElqR0dRbitGZkNBeGg2Y2dJSFFpREVFQVNBMEVJQm9nREVGL0lDQjBJQkZ4SWhOcklDQjFRUUFnRGlBUlJ4c2lERFlDRkNBYUlBMUJmeUFmZENBV2NTSWlheUFmZFVFQUlCUWdGa2NiSWcwMkFoQUNRQ0FOUlEwQUlBMnRJQXl0ZmtJZ2lGQU5BQXdFQ3lBTUlBMXNJaU5CNTh5Wk0wOE5BeUFqUVNoc0lTRWdHaUFzQkg4Z0lFRUJheUVnSUI5QkFXc2hIeUFUckVJQmZFSUJpS2NoRXlBaXJFSUJmRUlCaUtjaElrRURCVUVCQ3pZQ0dDQWFRUnhxSVJWQ0FTQUxyU0kyaGlFM1FuOGdHeWdDRENJTElDQWdDeUFnU1JzaUxhMGlQSVpDZjRVaFBVSi9JQnNvQWdnaUN5QWZJQXNnSDBrYkloS3RJajZHUW4rRklUOUJBQ0VwQTBBQ2ZpQXNSUVJBSURJZ0VEUUNCSHdnTTRjaE9DQXlJQkEwQWdCOElET0hJVGxCQUNFTElESWlNU0U2SURNTUFRc2dOeUFwUVFGcUlndEJBWGF0SURPR1FuK0ZmQ0k2SUJBMEFnUjhJRGFISVRnZ055QUxRUUZ4clNBemhrSi9oWHdpTVNBUU5BSUFmQ0EyaHlFNUlEWUxJVHNnRURRQ0NDRTFJQkEwQWd3aE5DQVZJRGcrQWdRZ0ZTQTVQZ0lBSUJVZ0N6WUNFQ0FWSURRZ09ud2dPNGMrQWd3Z0ZTQXhJRFY4SUR1SFBnSUlRUUFoRFFKQUlCc29BaFJGRFFBZ0MwVU5BRUVDUVFFZ0MwRURSaHNoRFFzZ0t5Z0NCQ0VNUkFBQUFBQUFBUEEvSVVJQ1FDQW5LQUlZSUExcUlDc29BZ0JySWd0QmdBaE9CRUJFQUFBQUFBQUE0SDhoUWlBTFFmOFBTUVJBSUF0Qi93ZHJJUXNNQWd0RUFBQUFBQUFBOEg4aFFrSDlGeUFMSUF0Qi9SZFBHMEgrRDJzaEN3d0JDeUFMUVlGNFNnMEFSQUFBQUFBQUFHQURJVUlnQzBHNGNFc0VRQ0FMUWNrSGFpRUxEQUVMUkFBQUFBQUFBQUFBSVVKQjhHZ2dDeUFMUWZCb1RSdEJrZzlxSVFzTElCVWdRaUFMUWY4SGFxMUNOSWEvb2lBTXQwUUFBQUFBQUFCQVA2SkVBQUFBQUFBQThEK2dvclk0QWlBZ0ZTQXJLQUlBSUJzb0FxUUdha0VCYXpZQ0hDQVZLQUlVSVFzQ1FBSkFBa0FnSTBVTkFDQUxEUUFnRlNBaEVBMGlDellDRkNBTFJRUkFJQXBCQVVHVUZVRUFFQWdNQ2dzZ0MwRUFJQ0VRRGhvZ0ZTQWhOZ0lZREFFTElDRWdGU2dDR0VzRVFDQUxJQ0VRRUNJTVJRUkFJQXBCQVVHVUZVRUFFQWdnRlNnQ0ZCQUpJQlZDQURjQ0ZBd0tDeUFWSUF3MkFoUWdEQ0FWS0FJWUlndHFRUUFnSVNBTGF4QU9HaUFWSUNFMkFoZ0xJQ05GRFFFTElCVW9BaFFoQzBFQUlTUURRQ0FMSUNRZ0pDQWFLQUlRSWd4dUloWWdER3hySWc0Z0gzUWdJbW9pRFNBVktBSUFJZ3dnRENBTlNCc2lFVFlDQUNBTElCWWdJSFFnRTJvaURTQVZLQUlFSWd3Z0RDQU5TQnNpRkRZQ0JDQUxJQTVCQVdvZ0gzUWdJbW9pRFNBVktBSUlJZ3dnRENBTlNoc2lEallDQ0NBTElCWkJBV29nSUhRZ0Uyb2lEU0FWS0FJTUlnd2dEQ0FOU2hzaUREWUNEQ0FMSUQ4Z0RxeDhJRDZIcHlBUklCSjFJaFpySUJKMElCSjFJZzAyQWhBZ0N5QTlJQXlzZkNBOGg2Y2dGQ0F0ZFNJUmF5QXRkQ0F0ZFNJTU5nSVVJQXdnRFd3aUphMUNCb1pDSUloQ0FGSUVRQ0FLUVFGQjVSVkJBQkFJREFrTElDVkJCblFoRGdKQUFuOENRQ0FMS0FJWUlnd05BQ0FsUlEwQUlBc2dEaEFOSWd3MkFoZ2dERVVOQ3lBTVFRQWdEaEFPR2lBTFFSeHFEQUVMSUE0Z0N5Z0NIRTBOQVNBTUlBNFFFQ0lOUlFSQUlBc29BaGdRQ1NBTFFnQTNBaGdnQ2tFQlFlTVNRUUFRQ0F3TEN5QUxJQTAyQWhnZ0RTQUxLQUljSWd4cVFRQWdEaUFNYXhBT0dpQUxRUnhxQ3lBT05nSUFDeUFMS0FJVUlRNGdDeWdDRUNFTklBc0NmeUFMS0FJZ0lneEZCRUFnRFNBT0lBb1FYQXdCQ3lBTUlBMGdEaUFLRUZvTE5nSWdJQXNvQWhRaERpQUxLQUlRSVEwZ0N3Si9JQXNvQWlRaURFVUVRQ0FOSUE0Z0NoQmNEQUVMSUF3Z0RTQU9JQW9RV2dzMkFpUWdKUVJBUVFBaEZ3TkFJQmNnQ3lnQ0VDSU9iaUVjQWtBZ0N5Z0NHQ0FYUVFaMGFpSVpLQUlBSWhRRVFDQVpLQUk0SVEwZ0dTZ0NCQ0VNSUJrb0FqQWhLaUFaS0FJOEVBa2dHZjBNQUFBQUFBQUFBQUFBQUFBQUFBQUFBUDBMQWlnZ0dVSUFOd0k0SUJuOURBQUFBQUFBQUFBQUFBQUFBQUFBQUFEOUN3SVlJQm45REFBQUFBQUFBQUFBQUFBQUFBQUFBQUQ5Q3dJSUlCa2dGRFlDQUNBWklDbzJBakFnS2dSQUlCUkJBQ0FxUVJoc0VBNGFDeUFaSUEwMkFqZ2dHU0FNTmdJRURBRUxJQmxCQ2tFWUVBd2lERFlDQUNBTVJRMExJQmxCQ2pZQ01Bc2dHU0FYSUE0Z0hHeHJJQlpxSWhRZ0VuUWlEU0FMS0FJQUlnd2dEQ0FOU0JzMkFnZ2dHU0FSSUJ4cUlnNGdMWFFpRFNBTEtBSUVJZ3dnRENBTlNCczJBZ3dnR1NBVVFRRnFJQkowSWcwZ0N5Z0NDQ0lNSUF3Z0RVb2JOZ0lRSUJrZ0RrRUJhaUF0ZENJTklBc29BZ3dpRENBTUlBMUtHellDRkNBWFFRRnFJaGNnSlVjTkFBc0xJQXRCS0dvaEN5QWtRUUZxSWlRZ0kwY05BQXNMSUN0QkNHb2hLeUFWUVNScUlSVWdLVUVCYWlJcElCb29BaGhKRFFBTElCcEJtQUZxSVJvZ0NTRUxJQ3hCQVdvaUxDQVFLQUlVU1EwQUN3c2dKMEUwYWlFbklCQkJ6QUJxSVJBZ0cwRzRDR29oR3lBb1FRRnFJaWdnSGlnQ0VFa05BQXRCQVF3REN5QUtRUUZCbEJaQkFCQUlEQUVMSUFwQkFVR3pFVUVBRUFnTFFRQUxSUVJBSUFwQkFVSENHMEVBRUFoQkFBd0VDeUFBS0FMTUFTRUpJQThnQUNnQ2FDQUFLQUpzYkRZQ0JDQVBJQWxCQVdvMkFnQWdDa0VFUWM3WEFDQVBFQWdnQVNBQUtBTE1BVFlDQUNBSVFRRTJBZ0FnQWdSQUlBSWdBQ2dDMEFGQkFCQk5JZ0UyQWdCQkFDQUJRWDlHRFFRYUN5QURJQUFvQXRBQktBSVVLQUlBSWdFb0FnQTJBZ0FnQkNBQktBSUVOZ0lBSUFVZ0FTZ0NDRFlDQUNBR0lBRW9BZ3cyQWdBZ0J5QUJLQUlRTmdJQUlBQWdBQ2dDQ0VHQUFYSTJBZ2dMUVFFTUFnc2dDa0VCSUJKQkFCQUlDeUFLUVFGQjVCdEJBQkFJUVFBTElUQWdEMEhRQUdva0FDQXdDOTRRQWcxL0FuNENRQ0FBS0FJZ0lnVU5BQUpBSUFBb0FoQWlDVUVGU2dSQUlBa2hBd3dCQ3dKQUFrQWdBQ2dDRkNJQ1FRVk9CRUFnQUNnQ0FDSUJLQUlBSVFVZ0FDQUJRUVJxTmdJQUlBSkJCR3NoQnd3QkN5QUNRUUJNQkVCQmZ5RUZEQUlMSUFBb0FnQWhBUUovSUFKQkFVWUVRRUYvSVFaQkFBd0JDMEYvSVFZZ0FrRUJheUlEUVFGeElRMENRQ0FDUVFKR0JFQkJBQ0VGSUFJaEJBd0JDeUFEUVg1eElRdEJBQ0VGSUFFaEF5QUNJUVFEUUNBQUlBTkJBV28yQWdBZ0F5MEFBQ0VNSUFBZ0EwRUNhaUlCTmdJQUlBQWdCRUVCYXpZQ0ZDQURMUUFCSVFNZ0FDQUVRUUpySWdRMkFoUWdCa0gvQVNBRmRFRi9jM0VnRENBRmRISkJnUDRESUFWMFFYOXpjU0FESUFWQkNISjBjaUVHSUFWQkVHb2hCU0FCSVFNZ0NFRUNhaUlJSUF0SERRQUxDeUFOQkVBZ0FDQUJRUUZxSWdNMkFnQWdBUzBBQUNFQklBQWdCRUVCYXpZQ0ZDQUdRZjhCSUFWMFFYOXpjU0FCSUFWMGNpRUdJQU1oQVFzZ0FrRURkRUVJYXdzaEJTQUFJQUZCQVdvMkFnQWdCa0gvQVNBRmRFRi9jM0VnQVMwQUFFRVBjaUFGZEhJaEJRc2dBQ0FITmdJVUN5QUFLQUlZSVFFZ0FDQUZRUmgySWdkQi93RkdOZ0lZSUFBZ0NTQUZRUkIyUWY4QmNTSUlRZjhCUmlJS0lBVkJDSFpCL3dGeElndEIvd0ZHSWd3Z0FTQUZRZjhCY1NJRVFmOEJSaUlDYW1wcUlnRnJRU0JxSWdNMkFoQWdBQ0FBS1FNSUlBUkJCMEVJSUFJYmRDQUxja0VIUVFnZ0RCdDBJQWh5UVFkQkNDQUtHM1FnQjNLdElBRWdDV3RCSUdxdGhvUTNBd2hCQUNFRklBTkJCa2dOQVFzZ0FDZ0NIQ0lCUVFKMFFiQ2RBV29vQWdBaEFnSitJQUFwQXdnaURrSUFVd1JBUVF3Z0FVRUJhaUFCUVF0T0d5RUVJQU5CQVdzaEEwRi9JQUowUVg5elFRRjBJUUZDQVF3QkN5QUJRUUZyUVFBZ0FVRUJTaHNoQkNBT1FUOGdBbXV0aUtkQmZ5QUNkRUYvYzNGQkFYUkJBWEloQVNBRElBSkJBV29pQW1zaEF5QUNyUXNoRHlBQUlBTTJBaEFnQUNBRU5nSWNJQUFnRGlBUGhqY0RDQ0FBSUFHc0lBQXBBeWhDUUlPRU53TW9RUUVoQlNBRFFRWklEUUFnQUNnQ0hDSUJRUUowUWJDZEFXb29BZ0FoQWdKK0lBQXBBd2dpRGtJQVV3UkFRUXdnQVVFQmFpQUJRUXRPR3lFRUlBTkJBV3NoQTBGL0lBSjBRWDl6UVFGMElRRkNBUXdCQ3lBQlFRRnJRUUFnQVVFQlNoc2hCQ0FPUVQ4Z0FtdXRpS2RCZnlBQ2RFRi9jM0ZCQVhSQkFYSWhBU0FESUFKQkFXb2lBbXNoQXlBQ3JRc2hEeUFBSUFNMkFoQWdBQ0FFTmdJY0lBQWdEaUFQaGpjRENDQUFJQUFwQXloQy8wQ0RJQUdzUWdlR2hEY0RLRUVDSVFVZ0EwRUdTQTBBSUFBb0Fod2lBVUVDZEVHd25RRnFLQUlBSVFJQ2ZpQUFLUU1JSWc1Q0FGTUVRRUVNSUFGQkFXb2dBVUVMVGhzaEJDQURRUUZySVFOQmZ5QUNkRUYvYzBFQmRDRUJRZ0VNQVFzZ0FVRUJhMEVBSUFGQkFVb2JJUVFnRGtFL0lBSnJyWWluUVg4Z0FuUkJmM054UVFGMFFRRnlJUUVnQXlBQ1FRRnFJZ0pySVFNZ0FxMExJUThnQUNBRE5nSVFJQUFnQkRZQ0hDQUFJQTRnRDRZM0F3Z2dBQ0FBS1FNb1F2Ly9RSU1nQWF4Q0RvYUVOd01vUVFNaEJTQURRUVpJRFFBZ0FDZ0NIQ0lCUVFKMFFiQ2RBV29vQWdBaEFnSitJQUFwQXdnaURrSUFVd1JBUVF3Z0FVRUJhaUFCUVF0T0d5RUVJQU5CQVdzaEEwRi9JQUowUVg5elFRRjBJUUZDQVF3QkN5QUJRUUZyUVFBZ0FVRUJTaHNoQkNBT1FUOGdBbXV0aUtkQmZ5QUNkRUYvYzNGQkFYUkJBWEloQVNBRElBSkJBV29pQW1zaEF5QUNyUXNoRHlBQUlBTTJBaEFnQUNBRU5nSWNJQUFnRGlBUGhqY0RDQ0FBSUFBcEF5aEMvLy8vUUlNZ0FheENGWWFFTndNb1FRUWhCU0FEUVFaSURRQWdBQ2dDSENJQlFRSjBRYkNkQVdvb0FnQWhBZ0orSUFBcEF3Z2lEa0lBVXdSQVFRd2dBVUVCYWlBQlFRdE9HeUVFSUFOQkFXc2hBMEYvSUFKMFFYOXpRUUYwSVFGQ0FRd0JDeUFCUVFGclFRQWdBVUVCU2hzaEJDQU9RVDhnQW11dGlLZEJmeUFDZEVGL2MzRkJBWFJCQVhJaEFTQURJQUpCQVdvaUFtc2hBeUFDclFzaER5QUFJQU0yQWhBZ0FDQUVOZ0ljSUFBZ0RpQVBoamNEQ0NBQUlBQXBBeWhDLy8vLy8wQ0RJQUdzUWh5R2hEY0RLRUVGSVFVZ0EwRUdTQTBBSUFBb0Fod2lBVUVDZEVHd25RRnFLQUlBSVFJQ2ZpQUFLUU1JSWc1Q0FGTUVRRUVNSUFGQkFXb2dBVUVMVGhzaEJDQURRUUZySVFOQmZ5QUNkRUYvYzBFQmRDRUJRZ0VNQVFzZ0FVRUJhMEVBSUFGQkFVb2JJUVFnRGtFL0lBSnJyWWluUVg4Z0FuUkJmM054UVFGMFFRRnlJUUVnQXlBQ1FRRnFJZ0pySVFNZ0FxMExJUThnQUNBRE5nSVFJQUFnQkRZQ0hDQUFJQTRnRDRZM0F3Z2dBQ0FBS1FNb1F2Ly8vLy8vUUlNZ0FhMUNJNGFFTndNb1FRWWhCU0FEUVFaSURRQWdBQ2dDSENJQlFRSjBRYkNkQVdvb0FnQWhBZ0orSUFBcEF3Z2lEa0lBVXdSQVFRd2dBVUVCYWlBQlFRdE9HeUVFSUFOQkFXc2hBMEYvSUFKMFFYOXpRUUYwSVFGQ0FRd0JDeUFCUVFGclFRQWdBVUVCU2hzaEJDQU9RVDhnQW11dGlLZEJmeUFDZEVGL2MzRkJBWFJCQVhJaEFTQURJQUpCQVdvaUFtc2hBeUFDclFzaER5QUFJQU0yQWhBZ0FDQUVOZ0ljSUFBZ0RpQVBoamNEQ0NBQUlBQXBBeWhDLy8vLy8vLy9RSU1nQWExQ0tvYUVOd01vUVFjaEJTQURRUVpJRFFBZ0FDZ0NIQ0lCUVFKMFFiQ2RBV29vQWdBaEFnSitJQUFwQXdnaURrSUFVd1JBUVF3Z0FVRUJhaUFCUVF0T0d5RUVJQU5CQVdzaEEwRi9JQUowUVg5elFRRjBJUUZDQVF3QkN5QUJRUUZyUVFBZ0FVRUJTaHNoQkNBT1FUOGdBbXV0aUtkQmZ5QUNkRUYvYzNGQkFYUkJBWEloQVNBRElBSkJBV29pQW1zaEF5QUNyUXNoRHlBQUlBTTJBaEFnQUNBRU5nSWNJQUFnRGlBUGhqY0RDQ0FBSUFBcEF5aEMvLy8vLy8vLy8wQ0RJQUd0UWpHR2hEY0RLRUVJSVFVTElBQWdCVUVCYXpZQ0lDQUFJQUFwQXlnaURrSUhpRGNES0NBT3AwSC9BSEVMSWdFQmZ5QUFCRUFnQUNnQ0RDSUJCRUFnQVJBSklBQkJBRFlDREFzZ0FCQUpDd3VGQVFJRmZ3RitBa0FnQUVLQWdJQ0FFRlFFUUNBQUlRY01BUXNEUUNBQlFRRnJJZ0VnQUVJS2dDSUhRdllCZmlBQWZLZEJNSEk2QUFBZ0FFTC8vLy8vbndGV0lRVWdCeUVBSUFVTkFBc0xJQWVuSWdJRVFBTkFJQUZCQVdzaUFTQUNRUXB1SWdOQjlnRnNJQUpxUVRCeU9nQUFJQUpCQ1VzaEJpQURJUUlnQmcwQUN3c2dBUXY1NGdFRWVuOEdld2grQVgwakFFRVFheUpPSkFBQ1FDQUFMUUFJUVlBQmNVVU5BQ0FBS0FMTUFTQUJSdzBBSUFBb0Fwd0JJQUZCakN4c2FpSlBLQUxjS3lJVlJRUkFJRThRS1F3QkN5QUFLQUxJQVJvZ0FDZ0MwQUVoR1NBQUtBSk1JZ2RGQkVBZ0FDZ0NTQ0VIQ3lBSEtBSUFJUVlnQnlnQ0JDRUxJQWNvQWdnaENTQUhLQUlNSVEwZ0FDZ0NQQ0VISUFBb0FrQWhDQ0JQS0FMZ0t5RUtJd0JCRUdzaVFDUUFJQmtnQVRZQ0pDQVpLQUljS0FKTUlRd2dHVUVCTmdKQUlCa2dEVFlDUENBWklBazJBamdnR1NBTE5nSTBJQmtnQmpZQ01DQVpJQXdnQVVHTUxHeHFOZ0lnSUJrb0FrUVFDVUVBSVFzZ0dVRUFOZ0pFQWtBZ0J3UkFRUVFnR1NnQ0dDZ0NFQkFNSWd0RkJFQU1BZ3RCQUNFTlFRQWhDU0FIUVFSUEJFQWdCMEY4Y1NFTVFRQWhBUU5BSUFzZ0NDQUpRUUowYWlJR0tBSUFRUUowYWtFQk5nSUFJQXNnQmlnQ0JFRUNkR3BCQVRZQ0FDQUxJQVlvQWdoQkFuUnFRUUUyQWdBZ0N5QUdLQUlNUVFKMGFrRUJOZ0lBSUFsQkJHb2hDU0FCUVFScUlnRWdERWNOQUFzTElBZEJBM0VpQVFSQUEwQWdDeUFJSUFsQkFuUnFLQUlBUVFKMGFrRUJOZ0lBSUFsQkFXb2hDU0FOUVFGcUlnMGdBVWNOQUFzTElCa2dDellDUkFzQ1FBSkFJQmtvQWhnaUJpZ0NFQ0lOUlEwQVFRQWhDUUpBQTBBQ1FDQUxCRUFnQ3lBSlFRSjBhaWdDQUVVTkFRc2dCaWdDR0NBSlFUUnNhaUlCTlFJRUlvWUJRZ0Y5SW9vQklCazFBang4SUlZQmdDR0xBU0FCTlFJQUlvY0JRZ0Y5SW9nQklCazFBamg4SUljQmdDR01BU0NLQVNBWk5RSTBmQ0NHQVlBaGhnRWdHU2dDRkNnQ0FDZ0NGQ0FKUWN3QWJHb2lBU2dDRkNBQktBSVlheUlIUVI5TERRQUNRQ0NJQVNBWk5RSXdmQ0NIQVlDbklnZ2dBU2dDQUdzaURFRUFJQWdnREU4YklBZDJEUUFnaGdHbklnZ2dBU2dDQkdzaURFRUFJQWdnREU4YklBZDJEUUFnQVNnQ0NDSUlJSXdCcDJzaURFRUFJQWdnREU4YklBZDJEUUFnQVNnQ0RDSUJJSXNCcDJzaUNFRUFJQUVnQ0U4YklBZDJSUTBCQ3lBWlFRQTJBa0FNQWdzZ0NVRUJhaUlKSUExSERRQUxJQmtvQWtCRkRRQWdEVVVOQVVFQUlRMERRQ0FaS0FJVUtBSUFLQUlVSUExQnpBQnNhaUlCS0FJY0lBRW9BaGhCbUFGc2FpSUhRWlFCYXlnQ0FDRUdJQWRCakFGcktBSUFJUXNnQjBHWUFXc29BZ0FoQ1NBSFFaQUJheWdDQUNFSUFrQWdHU2dDUkNJSEJFQWdCeUFOUVFKMGFpZ0NBRVVOQVFzZ0N5QUdheUVISUFnZ0NXc2hDUUpBSUFZZ0MwWU5BQ0FIclNBSnJYNUNJSWhRRFFBZ0JVRUJRWlFXUVFBUUNBd0dDeUFISUFsc0lnZEJnSUNBZ0FSUEJFQWdCVUVCUVpRV1FRQVFDQXdHQ3lBQklBZEJBblFpQnpZQ0xBSi9Ba0FDUUFKQUlBRW9BaVFpQmdSQUlBY2dBU2dDTUUwTkJTQUJLQUlvRFFFTElBRWdCeEFXSWdjMkFpUWdCMEVCSUFFb0Fpd2lCeHRGRFFFZ0FTQUhOZ0l3SUFGQktHb01Bd3NnQmhBSklBRWdBU2dDTEJBV0lnYzJBaVFnQncwQklBRkJBRFlDTUNBQlFnQTNBaWdMSUFWQkFVR1VGa0VBRUFnTUJ3c2dBU0FCS0FJc05nSXdJQUZCS0dvTFFRRTJBZ0FMSUExQkFXb2lEU0FaS0FJWUlnWW9BaEJKRFFBTERBRUxJQTFGRFFBZ0JpZ0NHQ0VQSUJrb0FoUW9BZ0FvQWhRaEZrRUFJUUVEUUFKQUlBc0VRQ0FMSUFGQkFuUnFLQUlBUlEwQkN5QVdJQUZCekFCc2FpSUhJQWNvQWdBaUNTQVBJQUZCTkd4cUlnZzFBZ0FpaGdGQ0FYMGlpZ0VnR1RVQ01Id2doZ0dBcHlJTUlBa2dERXNiSWdrMkFqZ2dCeUFIS0FJRUlnd2dDRFVDQkNLSEFVSUJmU0tMQVNBWk5RSTBmQ0NIQVlDbklnZ2dDQ0FNU1JzaUNEWUNQQ0FISUFjb0FnZ2lEQ0NLQVNBWk5RSTRmQ0NHQVlDbkloY2dEQ0FYU1JzaUREWUNRQ0FISUFjb0Fnd2lGeUNMQVNBWk5RSThmQ0NIQVlDbklnNGdEaUFYU3hzaUZ6WUNSQ0FKSUF4TERRTWdDQ0FYU3cwRElBY29BaFFpRGtVTkFDQU9yU0dMQVNBWHJTR0lBU0FNclNHTUFTQUlyU0dOQVNBSnJTR0pBU0FIS0FJY0lRbENBQ0dIQVFOQUlBa2dod0duSWdoQm1BRnNhaUlIUW44Z0RpQUlRWDl6YXEwaWhnR0dRbitGSW9vQklJZ0JmQ0NHQVlnK0FwUUJJQWNnaWdFZ2pBRjhJSVlCaUQ0Q2tBRWdCeUNLQVNDTkFYd2doZ0dJUGdLTUFTQUhJSWtCSUlvQmZDQ0dBWWcrQW9nQklJY0JRZ0Y4SW9jQklJc0JVZzBBQ3dzZ0FVRUJhaUlCSUExSERRQUxDeUJBUVFBMkFnZ2dHU2dDSENFQlFRRkJDQkFNSWhzRVFDQWJJQUUyQWdRZ0d5QUdOZ0lBQ3lBYlJRMEJJQmtvQWlRaEVTQVpLQUlVS0FJQUlTQWpBRUh3QUdzaUV5UUFJQkZCakN4c0lnRWdHeWdDQkNJSUtBSk1haUljS0FLa0F5RW9BbjhnR3lnQ0FDSWVJUmNnQlNFelFRQWhEU01BUVNCcklnOGtBQ0FCSUFnb0FreHFJaDBvQXFRRElSZ0NRQ0FYS0FJUUloWkJrQVJzRUEwaURFVU5BQUpBSUJaQkFuUVFEU0lMUlFSQUlBd2hDd3dCQ3dKL0lBZ29Ba3dnRVVHTUxHeHFJZ2tvQXFRRElocEJBV29pQVVId0FSQU1JZ2NFUUFKQUlBRUVRQ0FYS0FJUUlRNGdCeUVCQTBBZ0FTQXpOZ0xzQVNBQklBNUJFQkFNSWdZMkFzZ0JJQVpGRFFJZ0FTQVhLQUlRSWg4MkFzUUJRUUFoQmtFQUlRNGdId1JBQTBBZ0FTZ0N5QUVnQmtFRWRHb2lEaUFKS0FMUUt5QUdRYmdJYkdvaUh5Z0NCRUVRRUF3aUlUWUNEQ0FoUlEwRUlBNGdIeWdDQkRZQ0NDQUdRUUZxSWdZZ0Z5Z0NFQ0lPU1EwQUN3c2dBVUh3QVdvaEFTQVNJQnBHSVhNZ0VrRUJhaUVTSUhORkRRQUxDeUFIREFJTElBY29BZ1FpQVFSQUlBRVFDU0FIUVFBMkFnUUxJQWNoQVVFQUlRa0RRQ0FCS0FMSUFTSUdCRUJCQUNFT0lBRW9Bc1FCSWhJRWZ3TkFJQVlvQWd3aUh3UkFJQjhRQ1NBR1FRQTJBZ3dnQVNnQ3hBRWhFZ3NnQmtFUWFpRUdJQTVCQVdvaURpQVNTUTBBQ3lBQktBTElBUVVnQmdzUUNTQUJRUUEyQXNnQkN5QUJRZkFCYWlFQklBa2dHa1loZENBSlFRRnFJUWtnZEVVTkFBc2dCeEFKQzBFQUN5SUhCRUFDUUNBV1JRMEFRUUFoQ1NBTUlRWWdGa0VFVHdSQUlBWWdGa0Y4Y1NJSlFaQUViR29oQmlBTUlRRURRQ0FMSUJCQkFuUnFJQUg5RWYwTUFBQUFBQkFDQUFBZ0JBQUFNQVlBQVAydUFmMExBZ0FnQVVIQUVHb2hBU0FRUVFScUloQWdDVWNOQUFzZ0NTQVdSZzBCQ3dOQUlBc2dDVUVDZEdvZ0JqWUNBQ0FHUVpBRWFpRUdJQWxCQVdvaUNTQVdSdzBBQ3dzZ0N5RU9RUUFoRWlBSUtBSk1JQkZCakN4c2FpZ0MwQ3NoQVNBWEtBSVlJUWtnRHlBSUtBSUVJQWdvQWd3Z0VTQVJJQWdvQWhnaUJtNGlDeUFHYkd0c2FpSUdJQmNvQWdBaUVDQUdJQkJMR3pZQ0ZDQVBRWDhnQmlBSUtBSU1haUlRSUFZZ0VFc2JJZ1lnRnlnQ0NDSVFJQVlnRUVrYk5nSVFJQThnQ0NnQ0NDQUlLQUlRSUF0c2FpSUdJQmNvQWdRaUN5QUdJQXRMR3pZQ0RDQVBRWDhnQmlBSUtBSVFhaUlMSUFZZ0Mwc2JJZ1lnRnlnQ0RDSUxJQVlnQzBrYk5nSUlJQTlCQURZQ0dDQVBRUUEyQWh3Z0QwSC8vLy8vQnpZQ0JDQVBRZi8vLy84SE5nSUFJQmNvQWhBRVFBTkFJQTRFZnlBT0lCSkJBblJxS0FJQUJVRUFDeUVMSUFrMUFnUWloZ0ZDQVgwaWlnRWdEelVDQ0h3Z2hnR0FJWXNCSUFrMUFnQWlod0ZDQVgwaWlBRWdEelVDRUh3Z2h3R0FJWXdCSUlvQklBODFBZ3g4SUlZQmdDR0dBU0NJQVNBUE5RSVVmQ0NIQVlBaGh3RWdBU2dDQkNJSUlBOG9BaHhMQkVBZ0R5QUlOZ0ljSUFFb0FnUWhDQXNnQ0FSQUlJc0JRdi8vLy84UGd5R0tBU0NNQVVMLy8vLy9ENE1oaXdFZ2hnRkMvLy8vL3crRElZZ0JJSWNCUXYvLy8vOFBneUdNQVNBQlFiQUhhaUVmSUFGQnJBWnFJU0ZCQUNFYUEwQWdIeUFhUVFKMEloQnFLQUlBSVFZZ0VDQWhhaWdDQUNFUlFRQWhFQ0FMQkVBZ0N5QUdOZ0lFSUFzZ0VUWUNBQ0FMUVFocUlSQUxBa0FnRVNBSVFRRnJJZ2hxSWd0Qkgwc05BQ0FKS0FJQUlpSkJmeUFMZGtzTkFDQVBJQThvQWdRaUp5QWlJQXQwSWdzZ0N5QW5TeHMyQWdRTEFrQWdCaUFJYWlJTFFSOUxEUUFnQ1NnQ0JDSWlRWDhnQzNaTERRQWdEeUFQS0FJQUlpY2dJaUFMZENJTElBc2dKMHNiTmdJQUMwRUFJUXNnaWdGQ2Z5QUlyU0tHQVlaQ2Y0VWlod0Y4SUlZQmlDS05BVUwvLy8vL0Q0TkNBU0FHclNLSkFZWjhRZ0Y5SUlrQmlLY2dod0VnaUFGOElJWUJpS2NpSWlBR2RtdEJmeUFHZG5GQkFDQWlJSTBCcDBjYklRWWdod0VnaXdGOElJWUJpQ0tOQVVMLy8vLy9ENE5DQVNBUnJTS0pBWVo4UWdGOUlJa0JpS2NnaHdFZ2pBRjhJSVlCaUtjaUlpQVJkbXRCZnlBUmRuRkJBQ0FpSUkwQnAwY2JJUkVnRUFSQUlCQWdCallDQkNBUUlCRTJBZ0FnRUVFSWFpRUxDeUFHSUJGc0lnWWdEeWdDR0VzRVFDQVBJQVkyQWhnTElCcEJBV29pR2lBQktBSUVTUTBBQ3dzZ0NVRTBhaUVKSUFGQnVBaHFJUUVnRWtFQmFpSVNJQmNvQWhCSkRRQUxDeUFZUVFGcUlTRWdEeWdDSENFUklBOG9BaGdoRWlBSFFRQTJBZ1FDUUNBZEtBSUlRUUZxSWdHdElCRWdFaUFXYkNJaWJDSWFyWDVDSUloUUJFQWdCeUFCSUJwc0lnRTJBZ2dnQnlBQlFRSVFEQ0lCTmdJRUlBRU5BUXNnREJBSklBNFFDU0FIS0FJRUlnRUVRQ0FCRUFrZ0IwRUFOZ0lFQ3lBaFJRUkFJQWNoQ3d3REMwRUFJUXNnQnlFQkEwQWdBU2dDeUFFaUNRUkFRUUFoQmlBQktBTEVBU0lRQkg4RFFDQUpLQUlNSWdnRVFDQUlFQWtnQ1VFQU5nSU1JQUVvQXNRQklSQUxJQWxCRUdvaENTQUdRUUZxSWdZZ0VFa05BQXNnQVNnQ3lBRUZJQWtMRUFrZ0FVRUFOZ0xJQVFzZ0FVSHdBV29oQVNBTElCaEdJWFVnQzBFQmFpRUxJSFZGRFFBTElBY2hDd3dDQ3lBWEtBSVlJUmNnQnlBUEtBSVVJaWMyQXN3QklBY2dEeWdDRENJd05nTFFBU0FISUE4b0FoQWlMVFlDMUFFZ0J5QVBLQUlJSWlzMkF0Z0JJQWNnR2pZQ0RDQUhJQ0kyQWhBZ0J5QVNOZ0lVUVFFaEh5QUhRUUUyQWhnZ0ZnUkFJQWNvQXNnQklRRkJBQ0VJSUJjaEN3TkFJQTRnQ0VFQ2RHb29BZ0FoQ1NBQklBc29BZ0EyQWdBZ0FTQUxLQUlFTmdJRUFrQWdBU2dDQ0NJTlJRMEFJQUVvQWd3aEJpQU5RUUZIQkVBZ0RVRitjU0V2UVFBaEVBTkFJQVlnQ1NnQ0FEWUNBQ0FHSUFrb0FnUTJBZ1FnQmlBSktBSUlOZ0lJSUFZZ0NTZ0NERFlDRENBR0lBa29BaEEyQWhBZ0JpQUpLQUlVTmdJVUlBWWdDU2dDR0RZQ0dDQUdJQWtvQWh3MkFod2dCa0VnYWlFR0lBbEJJR29oQ1NBUVFRSnFJaEFnTDBjTkFBc0xJQTFCQVhGRkRRQWdCaUFKS0FJQU5nSUFJQVlnQ1NnQ0JEWUNCQ0FHSUFrb0FnZzJBZ2dnQmlBSktBSU1OZ0lNQ3lBTFFUUnFJUXNnQVVFUWFpRUJJQWhCQVdvaUNDQVdSdzBBQ3dzZ0lVRUJTd1JBSUFjaERRTkFJQTBnS3pZQ3lBTWdEU0F0TmdMRUF5QU5JREEyQXNBRElBMGdKellDdkFNZ0RVRUJOZ0tJQWlBTklCSTJBb1FDSUEwZ0lqWUNnQUlnRFNBYU5nTDhBU0FXQkVBZ0RTZ0N1QU1oQVVFQUlRZ2dGeUVMQTBBZ0RpQUlRUUowYWlnQ0FDRUpJQUVnQ3lnQ0FEWUNBQ0FCSUFzb0FnUTJBZ1FDUUNBQktBSUlJaUZGRFFBZ0FTZ0NEQ0VHSUNGQkFVY0VRQ0FoUVg1eElTOUJBQ0VRQTBBZ0JpQUpLQUlBTmdJQUlBWWdDU2dDQkRZQ0JDQUdJQWtvQWdnMkFnZ2dCaUFKS0FJTU5nSU1JQVlnQ1NnQ0VEWUNFQ0FHSUFrb0FoUTJBaFFnQmlBSktBSVlOZ0lZSUFZZ0NTZ0NIRFlDSENBR1FTQnFJUVlnQ1VFZ2FpRUpJQkJCQW1vaUVDQXZSdzBBQ3dzZ0lVRUJjVVVOQUNBR0lBa29BZ0EyQWdBZ0JpQUpLQUlFTmdJRUlBWWdDU2dDQ0RZQ0NDQUdJQWtvQWd3MkFnd0xJQXRCTkdvaEN5QUJRUkJxSVFFZ0NFRUJhaUlJSUJaSERRQUxDeUFOSUEwcEFnUTNBdlFCSUJnZ0gwY2hkaUFOUWZBQmFpRU5JQjlCQVdvaEh5QjJEUUFMQ3lBTUVBa2dEaEFKSUIwb0FxUURJUXNDUUNBZExRQ0lMRUVFY1FSQUlBdEJmMFlOQVNBZFFhZ0RhaUVHSUIwb0FnZ2hBVUVBSVJBZ0J5RUpBMEFnQmlnQ0pDRU5JQWxCQVRZQ0xDQUpJQTAyQWxRZ0NTQUdLQUlBTmdJd0lBWW9BZ1FoRFNBSlFnQTNBa1FnQ1NBTk5nSTBJQWtnQmlnQ0REWUNQQ0FKSUFZb0FoQTJBa0FnQmlnQ0NDRU5JQWtnRWpZQ1RDQUpJQTBnQVNBQklBMUxHellDT0NBR1FaUUJhaUVHSUFsQjhBRnFJUWtnQ3lBUVJpRjNJQkJCQVdvaEVDQjNSUTBBQ3d3QkN5QUxRWDlHRFFBZ0hTZ0NDQ0VHSUIwb0FnUWhEU0FISVFrZ0N3UkFJQXRCQVdwQmZuRWhDRUVBSVFFRFFDQUpRZ0EzQWtRZ0NVRUFOZ0kwSUFsQ0FUY0NMQ0FKSUEwMkFsUWdDU0FSTmdJOElBa2dEVFlDeEFJZ0NTQVNOZ0pNSUFrZ0JqWUNPQ0FKUWdBM0FyUUNJQWxCQURZQ3BBSWdDVUlCTndLY0FpQUpJQkUyQXF3Q0lBa2dCallDcUFJZ0NTQVNOZ0s4QWlBSklBa29Bc1FCTmdKQUlBa2dDU2dDdEFNMkFyQUNJQWxCNEFOcUlRa2dBVUVDYWlJQklBaEhEUUFMQ3lBTFFRRnhEUUFnQ1VJQU53SkVJQWxCQURZQ05DQUpRZ0UzQWl3Z0NTQU5OZ0pVSUFrZ0VUWUNQQ0FKSUJJMkFrd2dDU0FHTmdJNElBa2dDU2dDeEFFMkFrQUxJQWNoRFF3Q0N5QU1FQWtMSUFzUUNRc2dEMEVnYWlRQVFRQWdEU0lIUlEwQUdpQW9RUUZxSVE0Z0ZTRWRJQWNoQ3dKQUFrQURRQ0FMS0FKVVFYOUdEUUlnSGlnQ0VFRUNkQkFOSWdGRkRRSWdBVUVCSUI0b0FoQkJBblFRRGlFSklBc1FVQVJBQTBBZ0lDZ0NGQ0VJQWtBQ1FDQUxLQUlvSUJ3b0FneFBEUUFnQ3lnQ0lDSUJJQWdnQ3lnQ0hFSE1BR3hxSWdZb0FoaFBEUUFnQmlnQ0hDQUJRWmdCYkdvaURTZ0NHRVVOQUNBTlFSeHFJUWhCQUNFQkFrQURRQ0FaSUFzb0Fod2dDeWdDSUNBSUlBRkJKR3hxSWdZb0FoQWdCaWdDRkNBTEtBSWtRU2hzYWlJR0tBSUFJQVlvQWdRZ0JpZ0NDQ0FHS0FJTUVESkZCRUFnQVVFQmFpSUJJQTBvQWhoSkRRRU1BZ3NMSUFrZ0N5Z0NIRUVDZEdwQkFEWUNBQ0FUUVFBMkFtZ2dHeWdDQkNBZ0tBSVVJQndnQ3lBVFFld0FhaUFkSUJOQjZBQnFJQW9nTXhCUFJRMEdJQXNvQWlBaENDQUxLQUljSVJZZ0V5Z0NhQ0VhSUJNb0Ftd0VRQ0FUUVFBMkFtZ2dJQ2dDRkNBV1Fjd0FiR29vQWh3Z0NFR1lBV3hxSWg4b0FoZ2lBUVIvSUFvZ0dtc2hHQ0FLSUIxcUlTRWdIMEVjYWlFTVFRQWhFVUVBSVE4Z0dpQWRhaUlpSVJJRFFBSkFJQXdvQWdnZ0RDZ0NBRVlOQUNBTUtBSU1JQXdvQWdSR0RRQWdEQ2dDRkNBTEtBSWtRU2hzYWlJR0tBSVVJQVlvQWhCc0lpaEZEUUFnQmlnQ0dDRUJRUUFoRmdOQUlBOEVRQ0FCUVFBMkFqUUxJQUVvQWlRaUZ3UkFJQUVvQWdBaENBSkFJQUVnQVNnQ0tDSUdCSDhnQ0NBR1FSaHNhaUlJUVJScktBSUFJQWhCREdzb0FnQkhCRUFnQ0VFWWF5RUlEQUlMSUFaQkFXb0ZRUUVMTmdJb0N3SkFBMEFDUUFKQUFrQWdDQ2dDRkNJTklCSkJmM05MRFFBZ0R3MEFJQTBnRW1vZ0lVME5BUXNnQ3lnQ0hDRUdJQXNvQWlBaEZ5QUxLQUlrSVE4Z0d5Z0NCQ2dDYUFSQUlCTWdCallDV0NBVElCYzJBbFFnRXlBUk5nSlFJQk1nRHpZQ1RDQVRJQlkyQWtnZ0V5QVlOZ0pFSUJNZ0RUWUNRQ0F6UVFGQmd1NEFJQk5CUUdzUUNBd1JDeUFUSUFZMkFqZ2dFeUFYTmdJMElCTWdFVFlDTUNBVElBODJBaXdnRXlBV05nSW9JQk1nR0RZQ0pDQVRJQTAyQWlBZ00wRUNRWUx1QUNBVFFTQnFFQWdnQVVFQU5nSTBJQWdnQ0NnQ0VDSUdJQWdvQWdScU5nSUVJQUVnQVNnQ0pDSU5JQVpySWhjMkFpUkJBU0VQSUFZZ0RVWU5BU0FCSUFFb0FpaEJBV29pQ0RZQ0tBd0RDeUFCS0FJRUlSQWdBU2dDTkNJUElBRW9BamhIQkg4Z0Z3VWdFQ0FQUVFGMFFRRnlJZ1pCQTNRUUVDSVFSUVJBSUROQkFVR0FDRUVBRUFnTUVRc2dBU0FHTmdJNElBRWdFRFlDQkNBQktBSTBJUThnQ0NnQ0ZDRU5JQUVvQWlRTElRWWdFQ0FQUVFOMGFpSVhJQTAyQWdRZ0Z5QVNOZ0lBSUFFZ0QwRUJhallDTkNBSUlBZ29BZ0FnRFdvMkFnQWdDQ0FJS0FJUUloQWdDQ2dDQkdvaUR6WUNCQ0FCSUFZZ0VHc2lGellDSkNBSUlBODJBZ2dnRFNBU2FpRVNRUUFoRHlBR0lCQkdEUUFnQVNBQktBSW9RUUZxTmdJb0lBaEJHR29oQ0FzZ0Z3MEFDeUFCS0FJb0lRZ0xJQUVnQ0RZQ0xBc2dBVUZBYXlFQklCWkJBV29pRmlBb1J3MEFDeUFmS0FJWUlRRUxJQXhCSkdvaERDQVJRUUZxSWhFZ0FVa05BQXNnQ3lnQ0hDRVdJQXNvQWlBaENDQVlJQklnSW1zZ0R4c0ZRUUFMSUJwcUlSb0xJQjRvQWhnZ0ZrRTBiR29pQVNBSUlBRW9BaVFpQVNBQklBaEpHellDSkF3Q0N5QWdLQUlVSVFnTElCTkJBRFlDYUNBYktBSUVJQWdnSENBTElCTkI3QUJxSUIwZ0UwSG9BR29nQ2lBekVFOUZEUVFnQ3lnQ0hDRVdJQk1vQW1naEdpQVRLQUpzUlEwQUFrQWdJQ2dDRkNBV1Fjd0FiR29vQWh3Z0N5Z0NJQ0lpUVpnQmJHb2lBU2dDR0NJb1JRUkFRUUFoRnd3QkN5QUtJQnBySVJBZ0FVRWNhaUVNSUFzb0FpUWhJVUVBSVJkQkFDRVlBMEFDUUNBTUtBSUlJQXdvQWdCR0RRQWdEQ2dDRENBTUtBSUVSZzBBSUF3b0FoUWdJVUVvYkdvaUFTZ0NGQ0FCS0FJUWJDSW5SUTBBSUFFb0FoZ2hFVUVBSVI4RFFDQVJLQUlrSWdFRVFDQVJLQUlBSVFnQ1FDQVJJQkVvQWlnaUVnUi9JQWdnRWtFWWJHb2lDRUVVYXlnQ0FDQUlRUXhyS0FJQVJ3UkFJQWhCR0dzaENBd0NDeUFTUVFGcUJVRUJDeUlTTmdJb0N3SkFBa0FnQ0NnQ0ZDSVBJQmRxSWcwZ0Qwa05BQ0FOSUJCTERRQURRQ0FOSVJjZ0NDQUlLQUlRSWcwZ0NDZ0NCR28yQWdRZ0FTQU5heUVHSUFFZ0RVWU5BaUFSSUJKQkFXb2lFallDS0NBSUtBSXNJZzhnRjJvaURTQVBUd1JBSUFoQkdHb2hDQ0FHSVFFZ0RTQVFUUTBCQ3dzZ0VTQUdOZ0lrQ3lBYktBSUVLQUpvSVFFZ0V5QVdOZ0lZSUJNZ0lqWUNGQ0FUSUJnMkFoQWdFeUFoTmdJTUlCTWdIellDQ0NBVElCQTJBZ1FnRXlBUE5nSUFJRE5CQVVFQ0lBRWJRYTN0QUNBVEVBZ2dBUTBLSUFzb0Fod2hGZ3dGQ3lBUklBWTJBaVFMSUJGQlFHc2hFU0FmUVFGcUloOGdKMGNOQUFzTElBeEJKR29oRENBWVFRRnFJaGdnS0VjTkFBc0xJQmNnR21vaEdnc0NRQ0FKSUJaQkFuUnFLQUlBUlEwQUlCNG9BaGdnRmtFMGJHb2lBU2dDSkEwQUlBRWdJQ2dDRkNBV1Fjd0FiR29vQWhoQkFXczJBaVFMSUFvZ0dtc2hDaUFhSUIxcUlSMGdDeEJRRFFBTEN5QUpFQWtnQzBId0FXb2hDeUFqUVFGcUlpTWdIQ2dDcEFOTkRRQUxJQWNnRGhBeklFQWdIU0FWYXpZQ0NFRUJEQUlMSUFjZ0RoQXpJQWtRQ1VFQURBRUxJQWNnRGhBelFRQUxJWGdnRTBId0FHb2tBQ0FiRUNVZ2VFVU5BU0FaS0FJZ0tBTFFLeUVKSUJrb0FoUW9BZ0FpRmlnQ0ZDRWRJRUJCQVRZQ0RFRUFJUTFCQUNFVklCa29BaUFpQVNnQ0RDQUJLQUlJUmdSQUlBa29BaEJCQkhaQkFYRWhGUXNDUUNBV0tBSVFJakZGRFFBRFFBSkFJQmtvQWtRaUFRUkFJQUVnRFVFQ2RHb29BZ0JGRFFFTElFQkJER29oRTBFQUlURUNRQ0FkS0FJWUlnRkZEUUFnR1NnQ0xDRVFBMEFnSFNnQ0hDQXhRWmdCYkdvaURDZ0NHQ0lMQkVBZ0RFRWNhaUVTSUF3b0FoUWhBU0FNS0FJUUlSZEJBQ0VPQTBBZ0FTQVhiQVJBSUJJZ0RrRWtiR29oRDBFQUlRZ0RRQ0FaSUIwb0FoQWdNU0FQS0FJUUlBOG9BaFFnQ0VFb2JHb2lCeWdDQUNBSEtBSUVJQWNvQWdnZ0J5Z0NEQkF5SVFZZ0J5Z0NGQ0lMSUFjb0FoQWlDbXdoQVFKQUlBWUVRQ0FCUlEwQlFRQWhDZ05BQWtBZ0dTQWRLQUlRSURFZ0R5Z0NFQ0FIS0FJWUlBcEJCblJxSWdZb0FnZ2dCaWdDRENBR0tBSVFJQVlvQWhRUU1rVUVRQ0FHS0FJOElnRkZEUUVnQVJBSklBWkJBRFlDUEF3QkN5QVpLQUpBUlFSQUlBWW9BandOQVNBR0tBSVFJQVlvQWdoR0RRRWdCaWdDRkNBR0tBSU1SZzBCQzBFQlFTd1FEQ0lCUlFSQUlFQkJBRFlDREF3S0N5QVpLQUpBSVFzZ0FVRUFOZ0lrSUFFZ0V6WUNIQ0FCSUFrMkFoUWdBU0FkTmdJUUlBRWdEellDRENBQklBWTJBZ2dnQVNBeE5nSUVJQUVnQ3pZQ0FDQUJJQlUyQWlnZ0FTQXpOZ0lnSUFFZ0VDZ0NCRUVCU2pZQ0dDQVFRUTRnQVJBbUlFQW9BZ3hGRFFrTElBcEJBV29pQ2lBSEtBSVVJQWNvQWhCc1NRMEFDd3dCQ3lBQlJRMEFRUUFoRndOQUlBY29BaGdnRjBFR2RHb2lBU2dDUENJR0JFQWdCaEFKSUFGQkFEWUNQQ0FIS0FJUUlRb2dCeWdDRkNFTEN5QVhRUUZxSWhjZ0NpQUxiRWtOQUFzTElBaEJBV29pQ0NBTUtBSVVJZ0VnRENnQ0VDSVhiRWtOQUFzZ0RDZ0NHQ0VMQ3lBT1FRRnFJZzRnQzBrTkFBc2dIU2dDR0NFQkN5QXhRUUZxSWpFZ0FVa05BQXNMSUVBb0FneEZEUUlnRmlnQ0VDRXhDeUFKUWJnSWFpRUpJQjFCekFCcUlSMGdEVUVCYWlJTklERkpEUUFMQzBFQUlURWdHU2dDTEJBYUlFQW9BZ3hGRFFFQ1FDQVpLQUpBRFFBZ0dTZ0NHQ0lkS0FJUVJRMEFRUUFoQ1FOQUlCa29BaFFvQWdBb0FoUWdDVUhNQUd4cUlnRW9BaHdnSFNnQ0dDQUpRVFJzYWlnQ0pFR1lBV3hxSWdjb0FvZ0JJUVlnQnlnQ2tBRWhDeUFIS0FLTUFTRUtJQWNvQXBRQklRY2dBU2dDTkJBSklBRkJBRFlDTkFKQUlCa29Ba1FpRFFSQUlBMGdDVUVDZEdvb0FnQkZEUUVMSUFZZ0MwWU5BQ0FISUFwR0RRQWdCeUFLYXlJSHJTQUxJQVpySWdhdGZrSWdpRUlBVWdSQUlETkJBVUdVRmtFQUVBZ01CUXNnQmlBSGJDSUhRWUNBZ0lBRVR3UkFJRE5CQVVHVUZrRUFFQWdNQlFzZ0FTQUhRUUowRUJZaUFUWUNOQ0FCRFFBZ00wRUJRWlFXUVFBUUNBd0VDeUFKUVFGcUlna2dHU2dDR0NJZEtBSVFTUTBBQ3dzZ0dTZ0NJQ0VkSUJrb0FoUW9BZ0FpRnlnQ0VBUkFJQmNvQWhRaENTQWRLQUxRS3lFZElCa29BaGdvQWhnaERVRUFJUXNEUUFKQUlCa29Ba1FpQVFSQUlBRWdDMEVDZEdvb0FnQkZEUUVMSUEwb0FpUkJBV29oQVNBZEtBSVVRUUZHQkVBZ0FTRWVRUUFoQmtFQUlRejlEQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWhnQUVqQUVFZ2F5SWxKQUFDUUFKQUlCa29Ba0FFUUVFQklRY2dBVUVCUmcwQ0lBa29BaHdpRENBSktBSVlRWmdCYkdvaUFVR1FBV3NvQWdBaUVDQUJRWmdCYXlnQ0FDSVRSZzBDSUF3b0FnUWhFU0FNS0FJTUlSZ2dEQ2dDQUNFYUlBd29BZ2doR3lBWktBSXNJZzRvQWdRaEZpQWVRUUZySWdvaEZTQU1JUWNDUUNBS1FRUlBCRUFnQ2tFRGNTRVZJQWNnQ2tGOGNTSUlRWmdCYkdvaEIwRUFJUUVEUUNDQUFTQU1JQUZCbUFGc2FpSUdRZWdFYWlBR1FkQURhaUFHUWJnQ2FpQUcvUWtDb0FIOVZnSUFBZjFXQWdBQy9WWUNBQU1nQmtIZ0JHb2dCa0hJQTJvZ0JrR3dBbW9nQnYwSkFwZ0IvVllDQUFIOVZnSUFBdjFXQWdBRC9iRUIvYmtCSUFaQjdBUnFJQVpCMUFOcUlBWkJ2QUpxSUFiOUNRS2tBZjFXQWdBQi9WWUNBQUw5VmdJQUF5QUdRZVFFYWlBR1Fjd0RhaUFHUWJRQ2FpQUcvUWtDbkFIOVZnSUFBZjFXQWdBQy9WWUNBQVA5c1FIOXVRRWhnQUVnQVVFRWFpSUJJQWhIRFFBTElJQUJJSUFCSUlBQi9RMElDUW9MREEwT0R3QUJBZ01BQVFJRC9ia0JJb0FCSUlBQklJQUIvUTBFQlFZSEFBRUNBd0FCQWdNQUFRSUQvYmtCL1JzQUlRWWdDQ0FLUmcwQkN3TkFJQVlnQnlnQ29BRWdCeWdDbUFGcklnRWdBU0FHU1JzaUFTQUhLQUtrQVNBSEtBS2NBV3NpQmlBQklBWkxHeUVHSUFkQm1BRnFJUWNnRlVFQmF5SVZEUUFMQzBFQUlRY2dCa0gvLy84L1N3MENJQ1VnQmtFRmRDSVNFQ3dpRHpZQ0VDQVBSUTBDSUNVZ0R6WUNBQ0FLQkVBZ0VDQVRheUVRSUJnZ0VXc2hDQ0FiSUJwcklRRURRQ0FKS0FJa0lSTWdKU0FJSWhVMkFnZ2dKU0FCSWdjMkFoZ2dEQ2dDbkFFaEJpQU1LQUtrQVNFSUlBd29BcUFCSVFFZ0pTQU1LQUtZQVNJUlFRSnZOZ0ljSUNVZ0FTQVJheUlCSUFkck5nSVVBa0FnRmtFQ1NDSWFSU0FJSUFacklnaEJBVXR4UlFSQVFRQWhCaUFJUlEwQkEwQWdKVUVRYWlBVElBWWdFR3hCQW5ScUVGWWdCa0VCYWlJR0lBaEhEUUFMREFFTElBZ2dGaUFJSUJaSkd5SVJRUUZySVJzZ0NDQVJiaUVZUVFBaEJ3TkFRU1FRRFNJR1JRMEZJQ1g5QUFJUUlZQUJJQVlnRXpZQ0dDQUdJQkEyQWhRZ0JpQUJOZ0lRSUFZZ2dBSDlDd0lBSUFZZ0J5QVliRFlDSENBSElCdEdJUjhnQmlBSUlBZEJBV29pQnlBWWJDQWZHellDSUNBR0lCSVFMQ0lmTmdJQUlCOUZCRUJCQUNFSElBNFFHaUFHRUFrZ0R4QUpEQWNMSUE1QkNpQUdFQ1lnQnlBUlJ3MEFDeUFPRUJvTElDVWdDQ0FWYXpZQ0JDQWxJQXdvQXB3QlFRSnZOZ0lNQWtBZ0drVWdBVUVCUzNGRkJFQkJDQ0VIUVFBaEJpQUJRUWhQQkVBRFFDQWxJQk1nQmtFQ2RHb2dFRUVJRUNzZ0J5SUdRUWhxSWdjZ0FVME5BQXNMSUFFZ0JrME5BU0FsSUJNZ0JrRUNkR29nRUNBQklBWnJFQ3NNQVFzZ0FTQVdJQUVnRmtrYkloVkJBV3NoR0NBQklCVnVJUkZCQUNFSEEwQkJKQkFOSWdaRkRRVWdKZjBBQWdBaGdBRWdCaUFUTmdJWUlBWWdFRFlDRkNBR0lBZzJBaEFnQmlDQUFmMExBZ0FnQmlBSElCRnNOZ0ljSUFjZ0dFWWhHaUFHSUFFZ0IwRUJhaUlISUJGc0lCb2JOZ0lnSUFZZ0VoQXNJaG8yQWdBZ0drVUVRRUVBSVFjZ0RoQWFJQVlRQ1NBUEVBa01Cd3NnRGtFTElBWVFKaUFISUJWSERRQUxJQTRRR2dzZ0RFR1lBV29oRENBS1FRRnJJZ29OQUFzTFFRRWhCeUFQRUFrTUFndEJBU0VISUFrb0Fod2lDQ0FlUVpnQmJHb2lOVUdZQVdzaVh5Z0NBQ0ExUVpBQmF5Z0NBRVlOQVNBMVFaUUJheUpnS0FJQUlEVkJqQUZyS0FJQVJnMEJJQWdvQWdRaERpQUlLQUlNSVE4Z0NDZ0NBQ0VXSUFnb0FnZ2hFQ0FKS0FKRUlTRWdDU2dDUUNFaUlBa29BandoS0NBSktBSTRJVEFnQ1NBZUVGVWlPVVVFUUVFQUlRY01BZ3NDUUFKQUlCNUJBVWNFUUFKQUFrQWdIa0VCYXlJS1FRUkpCRUFnQ2lFQklBZ2hCd3dCQ3lBS1FRTnhJUUVnQ0NBS1FYeHhJaFZCbUFGc2FpRUhBMEFnZ0FFZ0NDQU1RWmdCYkdvaUJrSG9CR29nQmtIUUEyb2dCa0c0QW1vZ0J2MEpBcUFCL1ZZQ0FBSDlWZ0lBQXYxV0FnQURJQVpCNEFScUlBWkJ5QU5xSUFaQnNBSnFJQWI5Q1FLWUFmMVdBZ0FCL1ZZQ0FBTDlWZ0lBQS8yeEFmMjVBU0FHUWV3RWFpQUdRZFFEYWlBR1Fid0NhaUFHL1FrQ3BBSDlWZ0lBQWYxV0FnQUMvVllDQUFNZ0JrSGtCR29nQmtITUEyb2dCa0cwQW1vZ0J2MEpBcHdCL1ZZQ0FBSDlWZ0lBQXYxV0FnQUQvYkVCL2JrQklZQUJJQXhCQkdvaURDQVZSdzBBQ3lDQUFTQ0FBU0NBQWYwTkNBa0tDd3dORGc4QUFRSURBQUVDQS8yNUFTS0FBU0NBQVNDQUFmME5CQVVHQndBQkFnTUFBUUlEQUFFQ0EvMjVBZjBiQUNFR0lBb2dGVVlOQVFzRFFDQUdJQWNvQXFBQklBY29BcGdCYXlJS0lBWWdDa3NiSWdZZ0J5Z0NwQUVnQnlnQ25BRnJJZ29nQmlBS1N4c2hCaUFIUVpnQmFpRUhJQUZCQVdzaUFRMEFDd3NnQmtHQWdJQ0FBVThOQWlBR1FRUjBFQ3dpRkVVTkFnSkFJQjVGRFFBZ0R5QU9heUVTSUJBZ0Ztc2hHaUFVUVFScklUc2dGRUVFYWlFa0lCUkJER29oS1NBVVFSeHFJVU1nRkVFWWFpRWZJQlJCRkdvaElDQVVRUXhySVVRZ0ZFRUlhaUVxSUJSQkVHb2hOaUFVUVJCcklUY2dGRUVJYXlGQklDR3RJWVlCSUNLdElZY0JJQ2l0SVlvQklEQ3RJWXNCUVFFaFJnTkFJQWdvQXB3QklnRkJBbThoUnlBSUtBS1lBU0lIUVFKdklUd2dDQ2dDcEFFZ0FXc2lKeUFTYXlFc0lBZ29BcUFCSUFkcklpMGdHbXNoTGlBd0lnd2hCeUFvSWdZaENpQWlJZ0VoT2lBaElnOGhFUUpBSUFrb0FoUWlGU0JHUmcwQUlCVWdSbXNoRlVFQUlRcEJBQ0VISUF3RVFFSi9JQld0SW9nQmhrSi9oU0NMQVh3Z2lBR0lweUVIQ3lBb0JFQkNmeUFWclNLSUFZWkNmNFVnaWdGOElJZ0JpS2NoQ2d0QkFDRVBRUUFoQVNBaUJFQkNmeUFWclNLSUFZWkNmNFVnaHdGOElJZ0JpS2NoQVFzZ0lRUkFRbjhnRmEwaWlBR0dRbitGSUlZQmZDQ0lBWWluSVE4TFFRQWhPa0VBSVF4QkFTQVZRUUZyZENJT0lEQkpCRUFnTUNBT2E2MUNmeUFWclNLSUFZWkNmNFY4SUlnQmlLY2hEQXNnRGlBaVNRUkFJQ0lnRG11dFFuOGdGYTBpaUFHR1FuK0ZmQ0NJQVlpbklUb0xRUUFoRVVFQUlRWWdEaUFvU1FSQUlDZ2dEbXV0UW44Z0ZhMGlpQUdHUW4rRmZDQ0lBWWluSVFZTElBNGdJVThOQUNBaElBNXJyVUovSUJXdElvZ0Joa0ovaFh3Z2lBR0lweUVSQzBGL0lEb2dDQ2dDdEFFaUZXc2lEa0VBSUE0Z09rMGJJZzVCQW1vaUZpQU9JQlpMR3lJT0lDNGdEaUF1U1JzaU5FRi9JQUVnQ0NnQzJBRWlFMnNpRGtFQUlBRWdEazhiSWdGQkFtb2lEaUFCSUE1TEd5SUJJQm9nQVNBYVNSc2lKaUE4RzBFQmRDSUJJQ1lnTkNBOEcwRUJkRUVCY2lJT0lBRWdEa3NiSWtnZ0xVa2hHQ0FNSUJWcklnRkJBQ0FCSUF4Tkd5SUJRUUpySWd4QkFDQUJJQXhQR3lJUUlBY2dFMnNpQVVFQUlBRWdCMDBiSWdGQkFtc2lERUVBSUFFZ0RFOGJJaFlnUEJ0QkFYUWlEQ0FXSUJBZ1BCdEJBWFJCQVhJaUswa2hMeUFLSUFnb0FyZ0JJaHRySWhWQkFDQUtJQlZQR3lJS1FRSnJJaFZCQUNBS0lCVlBHeUlWSVNNZ0JpQUlLQUxjQVNJS2F5SU9RUUFnQmlBT1R4c2lCa0VDYXlJT1FRQWdCaUFPVHhzaURpRTlRWDhnRHlBYmF5SUdRUUFnQmlBUFRSc2lCa0VDYWlJUElBWWdEMHNiSWdZZ0VpQUdJQkpKR3lJYklUNUJmeUFSSUFwcklnWkJBQ0FHSUJGTkd5SUdRUUpxSWdvZ0JpQUtTeHNpQmlBc0lBWWdMRWtiSWh3aFB5QkhCRUFnRlNFOUlCd2hQaUFiSVQ4Z0RpRWpDeUJJSUMwZ0dCc2hTU0FNSUNzZ0x4c2hHQ0FTSUJ4cUlWQWdEaUFTYWlGUklDY0VRQ0FVSUJaQkEzUWlCbW9pUlVFRWFpQTdJQzVCQTNRaUNtb2lVaUFXSUM1SUlnd2JJVk1nQmlBa2FpSUdJQ1lnTGlBbUlDNUlHeUlQSUFjZ0V5QUhJQk5KRzBFQ0lBRWdBVUVDVHh0cUlnRnFJaE1nQjJ0QkFtc2lFVUVEZENJcmFpQUdTU0FwSUFjZ0FXdEJBM1JxSWdFZ0syb2dBVWx5SUJGQi8vLy8vd0ZMY2lGVUlEUWdHa0VCYXlBYUlEUktHeUV2UVFBaEVTQWFRUUZLSUM1QkFFcHlJVlVnSkNBOFFRSjBJZ0ZySUJCQkEzUnFJVllnQVNCRmFpRlhJQllnQjBGL2N5QVRhaUpLUVh4eElqSnFJVGdnRmtFQmFpSVRJREpxSVVJZ0dpQTBhaUZZSUJBZ0dtb2hXU0FXL1JIOURBQUFBQUFCQUFBQUFnQUFBQU1BQUFEOXJnRWhnd0VnRkNBWVFRSjBhaUZhSUVFZ0drRURkQ0lCYWlGTElBRWdPMm9oVENBS0lFRnFJVTBnR2tVZ0xrRUJSbkVoV3lBVUlFbEJBblFpQVdvaFhDQUJJRHRxSVYwZ0UvMFIvUXdBQUFBQUFRQUFBQUlBQUFBREFBQUEvYTRCSVlRQklEc2dGaUF1SUF3YlFRTjBhaUZlQTBBQ1FBSkFJQkVnRzBrZ0VTQVZUM0VOQUNBUklGQkpJQkVnVVU5eERRQWdFVUVCYWlFckRBRUxJQzBnU0VzRVFDQmRRUUEyQWdBZ1hFRUFOZ0lBQ3lBNUlCWWdFU0FtSUJGQkFXb2lLeUJYUVFKQkFCQVhJRGtnV1NBUklGZ2dLeUJXUVFKQkFCQVhBa0FDUUFKQUlEeEZCRUFnVlVVTkF5QVdJQ1pPRFFJQ1FBSkFJQlpCQUVvRVFDQmVLQUlBSVFjTUFRc2dKQ2dDQUNJSElRRWdGa0VBU0EwQkN5QUhJUUVnVXlnQ0FDRUhDeUJGSUVVb0FnQWdBU0FIYWtFQ2FrRUNkV3MyQWdBZ0V5SUhJQTlPRFFGQkFDRUhJSVFCSVlBQklJTUJJWUlCSUJNaEFTQVdJUW9nU2tFVVNTQlVja1VFUUFOQUlCUWdnQUZCQWYyckFTS0JBZjBiQUVFQ2RHb2lBU0FVSUlFQi9Sc0RRUUowYWlJR0lCUWdnUUg5R3dKQkFuUnFJZ29nRkNDQkFmMGJBVUVDZEdvaURDQUIvUWtDQVAxV0FnQUIvVllDQUFMOVZnSUFBeUFVSUlJQlFRSDlxd0g5REFFQUFBQUJBQUFBQVFBQUFBRUFBQUQ5VUNLRkFmMGJBMEVDZEdvZ0ZDQ0ZBZjBiQWtFQ2RHb2dGQ0NGQWYwYkFVRUNkR29nRkNDRkFmMGJBRUVDZEdyOUNRSUEvVllDQUFIOVZnSUFBdjFXQWdBRElCUWdnUUg5REFFQUFBQUJBQUFBQVFBQUFBRUFBQUQ5VUNLQkFmMGJBMEVDZEdvZ0ZDQ0JBZjBiQWtFQ2RHb2dGQ0NCQWYwYkFVRUNkR29nRkNDQkFmMGJBRUVDZEdyOUNRSUEvVllDQUFIOVZnSUFBdjFXQWdBRC9hNEIvUXdDQUFBQUFnQUFBQUlBQUFBQ0FBQUEvYTRCUVFMOXJBSDlzUUVpZ1FIOVdnSUFBQ0FNSUlFQi9Wb0NBQUVnQ2lDQkFmMWFBZ0FDSUFZZ2dRSDlXZ0lBQXlDQ0FmME1CQUFBQUFRQUFBQUVBQUFBQkFBQUFQMnVBU0dDQVNDQUFmME1CQUFBQUFRQUFBQUVBQUFBQkFBQUFQMnVBU0dBQVNBSFFRUnFJZ2NnTWtjTkFBc2dRaUVCSURnaENpQVBJUWNnTWlCS1JnMENDd05BSUJRZ0FVRURkR29pQnlBSEtBSUFJQlFnQ2tFRGRHb29BZ1FnQnlnQ0JHcEJBbXBCQW5Wck5nSUFJQUVpQ2tFQmFpSUJJQTlIRFFBTElBOGhCd3dCQ3dKQUlGdEZCRUFnRmlJSElDWk9EUUVEUUNBVUlBZEJBM1JxSWdFb0FnUWhCaUFCSUFZQ2Z3SkFJQWRCQUU0RVFDQUJJRTBnQnlBdVNCc29BZ0FoT2lBSFFRRnFJUUVNQVFzZ0ZDZ0NBQ0U2UVFBaEFTQVVJQWRCQVdvaUJ3MEJHZ3NnQVNBdVRnUkFJQUVoQnlCTkRBRUxJQlFnQVNJSFFRTjBhZ3NvQWdBZ09tcEJBbXBCQW5Wck5nSUVJQWNnSmtnTkFBc01BUXNnRkNBVUtBSUFRUUp0TmdJQURBTUxJQkFpQnlBMFRnMENBMEFnRkNBSFFRTjBhaUlCS0FJQUlRb0NmeUFIUVFCSUJFQWdKQ2dDQUNFR0lDUU1BUXNnRkNBSFFRTjBha0VFYWlCTUlBY2dHa2diS0FJQUlRWWdKQ0FIUlEwQUdpQk1JQUZCQkdzZ0J5QWFTaHNMSVF3Z0FTQU1LQUlBSUFacVFRRjFJQXBxTmdJQUlBZEJBV29pQnlBMFJ3MEFDd3dDQ3lBSElDWk9EUUFEUUNBVUlBZEJBM1JxSWdFZ0FTZ0NBQUovQWtBZ0IwRUFTZ1JBSURzZ0J5QXVJQWNnTGtnYlFRTjBhaWdDQUNFS0RBRUxJQ1FvQWdBaENpQWtJQWRCQUVnTkFSb0xJRklnQnlBdVRnMEFHaUFVSUFkQkEzUnFRUVJxQ3lnQ0FDQUtha0VDYWtFQ2RXczJBZ0FnQjBFQmFpSUhJQ1pIRFFBTEN5QVFJRFJPRFFBZ0x5QVFJZ0VpQjBvRVFBTkFJQlFnQjBFRGRHb2lBU0FCS0FJRUlCUWdCMEVCYWlJSFFRTjBhaWdDQUNBQktBSUFha0VCZFdvMkFnUWdCeUF2UncwQUN5QXZJUUVMSUFFZ05FNE5BQU5BQW44Q1FDQUJJZ2RCQUU0RVFDQVVJQUZCQTNScUlFc2dBU0FhU0Jzb0FnQWhEQ0FCUVFGcUlRb01BUXNnRkNnQ0FDRU1RUUFoQ2lBVUlBZEJBV29pQVEwQkdnc2dDaUFhVGdSQUlBb2hBU0JMREFFTElCUWdDaUlCUVFOMGFnc2hCaUFVSUFkQkEzUnFJZ2NnQnlnQ0JDQUdLQUlBSUF4cVFRRjFhallDQkNBQklEUklEUUFMQ3lBNUlCZ2dFU0JKSUNzZ1drRUJRUUJCQUJBZlJRMEdDeUFySWhFZ0owY05BQXNMSUFoQm1BRnFJUWdnUGtFQmRDSUJJRDlCQVhSQkFYSWlCeUFCSUFkTEd5SUJJQ2NnQVNBblNSc2hTQ0JESUJWQkJYUWlBV29nT3lBc1FRVjBJZ2RxSUJVZ0xFZ2lCaHNoU2lBQklCOXFJQWNnUVdvZ0Joc2hTeUFCSUNCcUlBY2dSR29nQmhzaFRDQUJJRFpxSUFjZ04yb2dCaHNoVFNBY0lCSkJBV3NnRWlBY1Noc2hEQ0FzUVFCS0lnOGdFa0VCU25JaFVpQUJJQlJxSWlzZ1IwRUVkR29oVXlBcElCSkJBM1FpR2tFSWF5SStRUUFnRWtFQVRCdEJBblFpQ21vaFZDQUtJQ3BxSVZVZ0NpQWthaUZXSUFvZ0ZHb2hWeUFwUVFBZ0xFRURkQ0lLUVFocklqOGdEeHRCQW5RaUQyb2hXQ0FQSUNwcUlWa2dEeUFrYWlGYUlBOGdGR29oV3lBVVFRUWdSMEVDZEd0QkFuUnFJQTVCQlhScUlWd2dHeUFzSUJzZ0xFZ2JJUThnRlVFQmFpRVFJQlFnSTBFQmRDSVdJRDFCQVhSQkFYSWlFeUFUSUJaTEd5SmRRUVIwYWlGZUlBRWdLV29oUFNBQklDcHFJU01nQVNBa2FpRXZJQnBCQVdzaE9DQWFRUUpySVVJZ0drRURheUV1SUJRZ0VrRUZkR29oWVNBYVFRUnJJVFFnQ2tFRmF5RmlJQXBCQm1zaFl5QUtRUWRySVdRZ0VrVWdMRUVCUm5FaFpTQXBJQWRCRUdzaUFXb2hKaUFCSUNwcUlUb2dBU0FrYWlFOElBRWdGR29oUlNBcElENUJBblFpQVdvaGFDQUJJQ3BxSVdrZ0FTQWthaUZxSUFFZ0ZHb2hheUE3SUJVZ0xDQUdHMEVGZENJQmFpRnNJQUVnUVdvaEV5QUJJRVJxSVJFZ0FTQTNhaUZ0SUNrZ1AwRUNkQ0lCYWlGdUlBRWdLbW9oYnlBQklDUnFJWEFnQVNBVWFpRnhBMEFDUUFKQUFuOENRQ0FZSWhZZ1NVa0VRQ0E1SUJZZ0ZVRUVJRWtnRm1zaUFTQUJRUVJQR3lBV2FpSVlJQnNnVTBFQlFRZ1FGeUE1SUJZZ1VTQVlJRkFnWEVFQlFRZ1FGeUJIUlFSQUlGSkZEUVVnRlNBYlRnMEVBbjhnRlVFQVNnUkFJRzBvQWdBaEJ5QVRJUVlnRVNFS0lHd01BUXNnTmlnQ0FDRUhJQlZCQUVnTkF5QWZJUVlnSUNFS0lFTUxJWGtnS3lBcktBSUFJQWNnVFNnQ0FHcEJBbXBCQW5Wck5nSUFJQzhnTHlnQ0FDQUtLQUlBSUV3b0FnQnFRUUpxUVFKMWF6WUNBQ0FqSUNNb0FnQWdCaWdDQUNCTEtBSUFha0VDYWtFQ2RXczJBZ0FnU2lnQ0FDRUhJSGtvQWdBTUF3c2daUVJBSUJRZ0ZDZ0NBRUVDYlRZQ0FDQWtJQ1FvQWdCQkFtMDJBZ0FnS2lBcUtBSUFRUUp0TmdJQUlDa2dLU2dDQUVFQ2JUWUNBQXdGQ3lBYklCVWlCMG9FUUFOQUlBZEJBM1FoQVFKL0FrQWdCMEVBU0FSQUlBZEJmMFlOQVNBVUlBRkJBblJxSWdFZ0FTZ0NFQ0FVS0FJQVFRRjBRUUpxUVFKMWF6WUNFQ0FCSUFFb0FoUWdKQ2dDQUVFQmRFRUNha0VDZFdzMkFoUWdBU0FCS0FJWUlDb29BZ0JCQVhSQkFtcEJBblZyTmdJWUlDa29BZ0JCQVhSQkFtb2hCaUFCUVJ4cURBSUxJQ3dnQjBFQmFpSUdUQVJBSUJRZ0FVRUNkR29pQ2lBS0tBSVFJQlFnQVNBL0lBY2dMRWdpQmh0QkFuUnFLQUlBSUhFb0FnQnFRUUpxUVFKMWF6WUNFQ0FLSUFvb0FoUWdGQ0FCUVFGeUlHUWdCaHRCQW5ScUtBSUFJSEFvQWdCcVFRSnFRUUoxYXpZQ0ZDQUtJQW9vQWhnZ0ZDQUJRUUp5SUdNZ0JodEJBblJxS0FJQUlHOG9BZ0JxUVFKcVFRSjFhellDR0NBVUlBRkJBM0lnWWlBR0cwRUNkR29vQWdBZ2JpZ0NBR3BCQW1vaEJpQUtRUnhxREFJTElCUWdBVUVDZEdvaUFTQUJLQUlRSUFFb0FnQWdGQ0FHUVFWMGFpSUdLQUlBYWtFQ2FrRUNkV3MyQWhBZ0FTQUJLQUlVSUFFb0FnUWdCaWdDQkdwQkFtcEJBblZyTmdJVUlBRWdBU2dDR0NBQktBSUlJQVlvQWdocVFRSnFRUUoxYXpZQ0dDQUJLQUlNSUFZb0FneHFRUUpxSVFZZ0FVRWNhZ3dCQ3lBM0lEY29BZ0FnRkNnQ0FDQmJLQUlBYWtFQ2FrRUNkV3MyQWdBZ1JDQkVLQUlBSUNRb0FnQWdXaWdDQUdwQkFtcEJBblZyTmdJQUlFRWdRU2dDQUNBcUtBSUFJRmtvQWdCcVFRSnFRUUoxYXpZQ0FDQXBLQUlBSUZnb0FnQnFRUUpxSVFZZ093c2lBU0FCS0FJQUlBWkJBblZyTmdJQUlBZEJBV29pQnlBYlJ3MEFDd3NnSENBT0lnZE1EUVFEUUNBSFFRTjBJUUVDZnlBSFFRQklCRUFnRkNBQlFRSjBhaUlCSUFFb0FnQWdOaWdDQUVFQmRFRUJkV28yQWdBZ0FTQUJLQUlFSUJRb0FoUkJBWFJCQVhWcU5nSUVJQUVnQVNnQ0NDQVVLQUlZUVFGMFFRRjFhallDQ0NBVUtBSWNRUUYwSVFvZ0FVRU1hZ3dCQ3lBSEJFQWdGQ0FCUVFKMGFpSUdJQVlvQWdBZ1lTQUdJQWNnRWtvaU1odEJFR3NvQWdBZ0ZDQUJRUVJ5SURRZ0J5QVNTQ0lLRzBFQ2RHb29BZ0JxUVFGMWFqWUNBQ0FHSUFZb0FnUWdSQ0FhSUFFZ01odEJBblFpTW1vb0FnQWdGQ0FCUVFWeUlDNGdDaHRCQW5ScUtBSUFha0VCZFdvMkFnUWdCaUFHS0FJSUlESWdRV29vQWdBZ0ZDQUJRUVp5SUVJZ0NodEJBblJxS0FJQWFrRUJkV28yQWdnZ01pQTdhaWdDQUNBVUlBRkJCM0lnT0NBS0cwRUNkR29vQWdCcUlRb2dCa0VNYWd3QkN5QVVJQlFvQWdBZ05pZ0NBQ0FVUVFRZ05DQUhJQkpJSWdFYlFRSjBhaWdDQUdwQkFYVnFOZ0lBSUNRZ0pDZ0NBQ0FVS0FJVUlCUkJCU0F1SUFFYlFRSjBhaWdDQUdwQkFYVnFOZ0lBSUNvZ0tpZ0NBQ0FVS0FJWUlCUkJCaUJDSUFFYlFRSjBhaWdDQUdwQkFYVnFOZ0lBSUJRb0Fod2dGRUVISURnZ0FSdEJBblJxS0FJQWFpRUtJQ2tMSWdFZ0FTZ0NBQ0FLUVFGMWFqWUNBQ0FIUVFGcUlnY2dIRWNOQUFzTUJBc2dMU0VhSUNjaEVpQkdRUUZxSWtZZ0hrY05CUXdHQ3lBcklDc29BZ0FnQjBFQmRFRUNha0VDZFdzMkFnQWdMeUF2S0FJQUlDQW9BZ0JCQVhSQkFtcEJBblZyTmdJQUlDTWdJeWdDQUNBZktBSUFRUUYwUVFKcVFRSjFhellDQUNCREtBSUFJZ2NMSVFFZ1BTQTlLQUlBSUFFZ0IycEJBbXBCQW5Wck5nSUFJQlVoQmlBUUlnRWlCeUFQU0FSQUEwQWdGQ0FCUVFWMGFpSUhJQWY5QUFJQUlEWWdCa0VGZEdyOUFBSUFJQWY5QUFJUS9hNEIvUXdDQUFBQUFnQUFBQUlBQUFBQ0FBQUEvYTRCUVFMOXJBSDlzUUg5Q3dJQUlBRWlCa0VCYWlJQklBOUhEUUFMSUE4aEJ3c2dCeUFiVGcwQUEwQWdCMEVEZENFQklBY2dMRWdoQmdKQUlBZEJBRXdFUUNBMktBSUFJUW9nQjBFQVRnUkFJQlFnQVVFQ2RDSUJhaUl5SURJb0FnQWdDaUFCSURacUlFVWdCaHNvQWdCcVFRSnFRUUoxYXpZQ0FDQUJJQ1JxSWdvZ0NpZ0NBQ0FnS0FJQUlBRWdJR29nUENBR0d5Z0NBR3BCQW1wQkFuVnJOZ0lBSUFFZ0ttb2lDaUFLS0FJQUlCOG9BZ0FnQVNBZmFpQTZJQVliS0FJQWFrRUNha0VDZFdzMkFnQWdReWdDQUNBQklFTnFJQ1lnQmhzb0FnQnFRUUpxSVFZZ0FTQXBhaUVCREFJTElCUWdBVUVDZENJQmFpSUdJQVlvQWdBZ0NrRUJkRUVDYWtFQ2RXczJBZ0FnQVNBa2FpSUdJQVlvQWdBZ0ZDZ0NGRUVCZEVFQ2FrRUNkV3MyQWdBZ0FTQXFhaUlHSUFZb0FnQWdGQ2dDR0VFQmRFRUNha0VDZFdzMkFnQWdBU0FwYWlFQklCUW9BaHhCQVhSQkFtb2hCZ3dCQ3lBVUlBY2dMQ0FHRzBFRGRFRUVhMEVDZENJS2FpZ0NBQ0V5SUFaRkJFQWdGQ0FCUVFKMElnRnFJZ1lnQmlnQ0FDQXlJRVVvQWdCcVFRSnFRUUoxYXpZQ0FDQUJJQ1JxSWdZZ0JpZ0NBQ0FLSUNScUtBSUFJRHdvQWdCcVFRSnFRUUoxYXpZQ0FDQUJJQ3BxSWdZZ0JpZ0NBQ0FLSUNwcUtBSUFJRG9vQWdCcVFRSnFRUUoxYXpZQ0FDQUJJQ2xxSVFFZ0NpQXBhaWdDQUNBbUtBSUFha0VDYWlFR0RBRUxJQlFnQVVFQ2RDSUJhaUlHSUFZb0FnQWdNaUFHS0FJUWFrRUNha0VDZFdzMkFnQWdBU0FrYWlJR0lBWW9BZ0FnQ2lBa2FpZ0NBQ0FHS0FJUWFrRUNha0VDZFdzMkFnQWdBU0FxYWlJR0lBWW9BZ0FnQ2lBcWFpZ0NBQ0FHS0FJUWFrRUNha0VDZFdzMkFnQWdDaUFwYWlnQ0FDQUJJQ2xxSWdFb0FoQnFRUUpxSVFZTElBRWdBU2dDQUNBR1FRSjFhellDQUNBSFFRRnFJZ2NnRzBjTkFBc0xJQTRnSEU0TkFDQU1JQTRpQVNJSFNnUkFBMEFnRkNBQlFRVjBhaUlISUFmOUFBSWdJQWY5QUFJQS9hNEJRUUg5ckFFZ0IvMEFBaEQ5cmdIOUN3SVFJQUZCQVdvaUFTQU1SdzBBQ3lBTUlRY0xJQWNnSEU0TkFBTkFJRU1nQjBFRGRDSUJRUUowYWlJeUFuOGdCMEVBU0FSQUlCUW9BZ0FoQmlBSFFYOUhCRUFnTmlBQlFRSjBJZ0ZxSWdvZ0NpZ0NBQ0FHYWpZQ0FDQUJJQ0JxSWdZZ0JpZ0NBQ0FrS0FJQWFqWUNBQ0FCSUI5cUlnRWdBU2dDQUNBcUtBSUFhallDQUNBcEtBSUFEQUlMSURZZ0FVRUNkQ0lCYWlJS0lBb29BZ0FnVnlnQ0FDQUdha0VCZFdvMkFnQWdBU0FnYWlJR0lBWW9BZ0FnVmlnQ0FDQWtLQUlBYWtFQmRXbzJBZ0FnQVNBZmFpSUJJQUVvQWdBZ1ZTZ0NBQ0FxS0FJQWFrRUJkV28yQWdBZ1ZDZ0NBQ0FwS0FJQWFrRUJkUXdCQ3lBQklENGdCeUFTU0JzaEJpQVNJQWRCQVdvaVprd0VRQ0EySUFGQkFuUWlDbW9pQVNBQktBSUFJR3NvQWdBZ0ZDQUdRUUowYWlJQktBSUFha0VCZFdvMkFnQWdDaUFnYWlJR0lBWW9BZ0FnYWlnQ0FDQUJLQUlFYWtFQmRXbzJBZ0FnQ2lBZmFpSUdJQVlvQWdBZ2FTZ0NBQ0FCS0FJSWFrRUJkV28yQWdBZ2FDZ0NBQ0FCS0FJTWFrRUJkUXdCQ3lBMklBRkJBblFpQ21vaUFTQUJLQUlBSUJRZ1prRUZkR29pQVNnQ0FDQVVJQVpCQW5ScUlnWW9BZ0JxUVFGMWFqWUNBQ0FLSUNCcUltWWdaaWdDQUNBQktBSUVJQVlvQWdScVFRRjFhallDQUNBS0lCOXFJZ29nQ2lnQ0FDQUJLQUlJSUFZb0FnaHFRUUYxYWpZQ0FDQUJLQUlNSUFZb0FneHFRUUYxQ3lBeUtBSUFhallDQUNBSFFRRnFJZ2NnSEVjTkFBc0xJRGtnRmlCZElCZ2dTQ0JlUVFGQkJFRUFFQjhOQUFzTERBSUxJQlFRQ1VFQklRY0xJRGtnTlVFUWF5Z0NBQ0lCSUY4b0FnQWlCbXNnTlVFTWF5Z0NBQ0JnS0FJQUlncHJJRFZCQ0dzb0FnQWlDQ0FHYXlBMVFRUnJLQUlBSUFwcklBa29BalJCQVNBSUlBRnJFQmNnT1JBZERBTUxJRGtRSFNBVUVBbEJBQ0VIREFJTElEa1FIVUVBSVFjTUFRdEJBQ0VISUE0UUdpQVBFQWtMSUNWQklHb2tBQ0FIRFFFTUJRc2dBU0VJUVFBaER2ME1BQUFBQUFBQUFBQUFBQUFBQUFBQUFDR0FBU01BUVVCcUlod2tBQUpBQW44Q1FDQVpLQUpBQkVBZ0NTZ0NIQ0lWSUFrb0FoaEJtQUZzYWlJQlFaZ0JheWdDQUNFYUlBRkJrQUZyS0FJQUlSc2dGU2dDQkNFTUlCVW9BZ3doZWlBVktBSUFJUkFnRlNnQ0NDRVRRUUVoQnlBWktBSXNJaDhvQWdRaEt5QUlRUUZHRFFOQkFDRUdJQWhCQVdzaUZpRUlJQlVoQVFKQUlCWkJCRThFUUNBV1FRTnhJUWdnQVNBV1FYeHhJZ3BCbUFGc2FpRUJRUUFoQndOQUlJQUJJQlVnQjBHWUFXeHFJZ1pCNkFScUlBWkIwQU5xSUFaQnVBSnFJQWI5Q1FLZ0FmMVdBZ0FCL1ZZQ0FBTDlWZ0lBQXlBR1FlQUVhaUFHUWNnRGFpQUdRYkFDYWlBRy9Ra0NtQUg5VmdJQUFmMVdBZ0FDL1ZZQ0FBUDlzUUg5dVFFZ0JrSHNCR29nQmtIVUEyb2dCa0c4QW1vZ0J2MEpBcVFCL1ZZQ0FBSDlWZ0lBQXYxV0FnQURJQVpCNUFScUlBWkJ6QU5xSUFaQnRBSnFJQWI5Q1FLY0FmMVdBZ0FCL1ZZQ0FBTDlWZ0lBQS8yeEFmMjVBU0dBQVNBSFFRUnFJZ2NnQ2tjTkFBc2dnQUVnZ0FFZ2dBSDlEUWdKQ2dzTURRNFBBQUVDQXdBQkFnUDl1UUVpZ0FFZ2dBRWdnQUg5RFFRRkJnY0FBUUlEQUFFQ0F3QUJBZ1A5dVFIOUd3QWhCaUFLSUJaR0RRRUxBMEFnQmlBQktBS2dBU0FCS0FLWUFXc2lCeUFHSUFkTEd5SUhJQUVvQXFRQklBRW9BcHdCYXlJR0lBWWdCMGtiSVFZZ0FVR1lBV29oQVNBSVFRRnJJZ2dOQUFzTFFRQWhCeUFHUWYvLy96OUxEUU1nSENBR1FRVjBJa1lRRmlJQk5nSWdJQUZGRFFNZ0hDQUJOZ0lBSUJaRkJFQkJBU0VISUFFUUNRd0VDeUI2SUF4cklROGdFeUFRYXlFT1FRSWdLMEVCZGlJQklBRkJBazBiSVVjZ0NTZ0NKQ0lLSUJ0QkhHd2lUU0FhUVJ4c0lsOXJhaUV2SUFvZ0cwRVliQ0pnSUJwQkdHd2lVbXRxSVQwZ0NpQWJRUlJzSWxNZ0drRVViQ0pVYTJvaFBpQUtJQnRCQkhRaVZTQWFRUVIwSWxacmFpRS9JQW9nRzBFTWJDSlhJQnBCREd3aVdHdHFJVGdnR3lBYWF5SVFRUWRzSVVrZ0VFRUdiQ0ZGSUJCQkJXd2hNaUFRUVFOc0lVZ2dFRUVCZENGUUlBb2dFRUVEZENKUmFpRkNJQW9nRUVFQ2RDSkJhaUVVSUJCQkJYUWhXU0FRL1JFaGhBRURRQ0FjSUE4MkFnZ2dIQ0FPSWdFMkFpZ2dGU2dDbkFFaEpDQVZLQUtrQVNFcElCVW9BcUFCSVI0Z0ZTZ0NtQUVoSUNBY1FRQTJBamdnSENBQk5nSTBJQnhCQURZQ01DQWNJQ0JCQW04aUdEWUNMQ0FjSUI0Z0lHc2lEaUFCYXlJVE5nSThJQndnRXpZQ0pBSkFJQ3RCQWtnaVdrVWdLU0FrYXlJUFFROUxjVVVFUUVFQUlRY2dDaUVHSUE5QkNFa05BU0EvSUFZZ1V5QWVRUUowSWdGcUlGUWdJRUVDZENJSWFtdHFJanBKSUQ0Z0JpQUJJRlZxSUFnZ1ZtcHJhaUpEU1hFZ1BTQkRTU0EvSUFZZ0FTQmdhaUFJSUZKcWEyb2lQRWx4Y2lBdklFTkpJRDhnQmlBQklFMXFJQWdnWDJwcmFpSkVTWEZ5SVZzZ1BTQkVTU0F2SUR4SmNTRmNJRDRnUkVrZ0x5QTZTWEVoWFNBOElENUxJRG9nUFV0eElWNGdRaUFHSUFFZ1Yyb2dDQ0JZYW10cUlrcEpJRGdnQmlBQklGRnFJQWhyYWlKTFNYRWhZU0FVSUVwSklEZ2dCaUFiSUI1cUlCb2dJR3ByUVFKMGFpSk1TWEVoWWlBVUlFdEpJRUlnVEVseElXTWdCaUFCSUFocmFpRXFJQTVCZkhFaENDQWNLQUlnSWhNZ0RrRUZkR29pRVVFUWF5RWxJQkZCRkdzaExDQVJRUmhySVM0Z0VVRWNheUUySUJGQkJHc2hPU0FSUVFocklUc2dFVUVNYXlFMFFRQWhHQ0FUUVF4cUlpTWdIaUFnUVg5emFpSU1RUVYwSWdGcUlDTkpJQXhCLy8vL1Awc2lEQ0FUUVFScUlpRWdBV29nSVVrZ0FTQVRhaUFUU1hKeUlCTkJDR29pSWlBQmFpQWlTWEp5SUE1QnlBSkpjaUZrSUJOQkZHb2lLQ0FCYWlBb1NTQVRRUkJxSWljZ0FXb2dKMGx5SUF4eUlCTkJHR29pTUNBQmFpQXdTWElnRTBFY2FpSXRJQUZxSUMxSmNpQU9RZFFBU1hJaFpRTkFJQWNoRENBY1FTQnFJZ0VnQmlBUVFRZ1FOQ0FCRUJ3Q1FDQU9SUTBBSUJnZ1dXd2hCMEVBSVFFQ1FBSkFJR1FOQUNCaElBWWdOa2tnRXlBSElDcHFJamRKY1NBR0lBY2dTbW9pRWtrZ0tpQTRTM0VnRkNBcVNTQUdJQWNnVEdvaUprbHhJQVlnQnlCTGFpSTFTU0FxSUVKTGNYSnljaUFHSUM1SklDRWdOMGx4Y2lBR0lDeEpJQ0lnTjBseGNpQUdJQ1ZKSUNNZ04wbHhjaUJqY2lCaWNpQVRJQ1pKSUFjZ0ZHb2lOeUEyU1hGeUlDRWdKa2tnTGlBM1MzRnlJQ0lnSmtrZ0xDQTNTM0Z5SUNNZ0pra2dKU0EzUzNGeWNnMEFJQk1nTlVrZ0J5QkNhaUltSURaSmNRMEFJQ0VnTlVrZ0ppQXVTWEVOQUNBaUlEVkpJQ1lnTEVseERRQWdJeUExU1NBbElDWkxjUTBBSUFjZ09Hb2lKaUEyU1NBU0lCTkxjUTBBSUNZZ0xra2dFaUFoUzNFTkFDQW1JQ3hKSUJJZ0lrdHhEUUFnRWlBalN5QWxJQ1pMY1EwQUEwQWdCaUFCUVFKMGFpQVRJQUZCQlhScUloTDlDUUlBSUJJcUFpRDlJQUVnRWtGQWF5b0NBUDBnQWlBU0tnSmcvU0FEL1FzQ0FDQUdJQUVnRUdwQkFuUnFJQkw5Q1FJRUlCSXFBaVQ5SUFFZ0Vpb0NSUDBnQWlBU0tnSmsvU0FEL1FzQ0FDQUdJQUVnVUdwQkFuUnFJQkw5Q1FJSUlCSXFBaWo5SUFFZ0Vpb0NTUDBnQWlBU0tnSm8vU0FEL1FzQ0FDQUdJQUVnU0dwQkFuUnFJQkw5Q1FJTUlCSXFBaXo5SUFFZ0Vpb0NUUDBnQWlBU0tnSnMvU0FEL1FzQ0FDQUJRUVJxSWdFZ0NFY05BQXNnQ0NJQklBNUdEUUVMQTBBZ0JpQUJRUUowYWlBVElBRkJCWFJxSWhJcUFnQTRBZ0FnQmlBQklCQnFRUUowYWlBU0tnSUVPQUlBSUFZZ0FTQlFha0VDZEdvZ0Vpb0NDRGdDQUNBR0lBRWdTR3BCQW5ScUlCSXFBZ3c0QWdBZ0FVRUJhaUlCSUE1SERRQUxDMEVBSVFFQ1FDQmxEUUFnWENBSElENXFJaElnTkVrZ0p5QUhJRHBxSWlaSmNTQmJJQWNnUDJvaU5TQTBTU0FuSUFjZ1Eyb2lOMGx4Y2lBb0lEZEpJRFVnTzBseGNpQXdJRGRKSURVZ09VbHhjaUF0SURkSklCRWdOVXR4Y2lCZWNpQmRjbklnRWlBN1NTQW1JQ2hMY1hJZ0VpQTVTU0FtSURCTGNYSWdKaUF0U3lBUklCSkxjWEp5RFFBZ0J5QTlhaUlTSURSSklDY2dCeUE4YWlJbVNYRU5BQ0FTSUR0SklDWWdLRXR4RFFBZ0VpQTVTU0FtSURCTGNRMEFJQ1lnTFVzZ0VTQVNTM0VOQUNBSElDOXFJaElnTkVrZ0p5QUhJRVJxSWdkSmNRMEFJQklnTzBrZ0J5QW9TM0VOQUNBU0lEbEpJQWNnTUV0eERRQWdCeUF0U3lBUklCSkxjUTBBQTBBZ0JpQUJJRUZxUVFKMGFpQVRJQUZCQlhScUlnZjlDUUlRSUFjcUFqRDlJQUVnQnlvQ1VQMGdBaUFIS2dKdy9TQUQvUXNDQUNBR0lBRWdNbXBCQW5ScUlBZjlDUUlVSUFjcUFqVDlJQUVnQnlvQ1ZQMGdBaUFIS2dKMC9TQUQvUXNDQUNBR0lBRWdSV3BCQW5ScUlBZjlDUUlZSUFjcUFqajlJQUVnQnlvQ1dQMGdBaUFIS2dKNC9TQUQvUXNDQUNBR0lBRWdTV3BCQW5ScUlBZjlDUUljSUFjcUFqejlJQUVnQnlvQ1hQMGdBaUFIS2dKOC9TQUQvUXNDQUNBQlFRUnFJZ0VnQ0VjTkFBc2dDQ0lCSUE1R0RRRUxBMEFnQmlBQklFRnFRUUowYWlBVElBRkJCWFJxSWdjcUFoQTRBZ0FnQmlBQklESnFRUUowYWlBSEtnSVVPQUlBSUFZZ0FTQkZha0VDZEdvZ0J5b0NHRGdDQUNBR0lBRWdTV3BCQW5ScUlBY3FBaHc0QWdBZ0FVRUJhaUlCSUE1SERRQUxDeUFZUVFGcUlSZ2dERUVJYWlFSElBWWdVVUVDZEdvaEJpQU1RUTlxSUE5SkRRQUxEQUVMSUE4Z0QwRURkaUlISUNzZ0J5QXJTUnNpRW01QmVIRWhFU0FQUVhoeElRZEJBQ0VJSUFvaEJnTkFRVEFRRFNJTVJRMEVJQXdnUmhBV0lpTTJBZ0FnSTBVRVFDQWZFQm9nREJBSlFRQU1CZ3NnRENBR05nSW9JQXdnRURZQ0pDQU1JQTQyQWlBZ0RDQVROZ0ljSUF4QkFEWUNHQ0FNSUFFMkFoUWdERUVBTmdJUUlBd2dHRFlDRENBTUlBRTJBZ2dnRENBVE5nSUVJQXdnQnlBSUlCRnNheUFSSUFoQkFXb2lDQ0FTUmhzaUl6WUNMQ0FmUVF3Z0RCQW1JQVlnRUNBamJFRUNkR29oQmlBSUlCSkhEUUFMSUI4UUdnc0NRQ0FISUE5UERRQWdIRUVnYWlJQklBWWdFQ0FQSUFkckloZ1FOQ0FCRUJ3Z0RrVU5BQ0FjS0FJZ0lpTWdIa0VGZEVFQklCZ2dHRUVCVFJzaUVrRUNkR29nSUVFRmRHdHFRU0JySVI0Z0VrRURjU0VnSUJKQmZIRWhEQ0JCSUJKQkFXdHNJU0ZCQUNFSUEwQWdJeUFJUVFWMGFpRVRRUUFoQndKQUFrQWdHRUVFU1EwQUlCNGdCaUFJUVFKMEloRnFJZ0VnQmlBUklDRnFhaUlSSUFFZ0VVa2JTd1JBSUNNZ0FTQVJJQUVnRVVzYlFRUnFTUTBCQ3lBSS9SRWhnUUg5REFBQUFBQUJBQUFBQWdBQUFBTUFBQUFoZ0FGQkFDRUJBMEFnQmlDQUFTQ0VBZjIxQVNDQkFmMnVBU0tDQWYwYkFFRUNkR29nRXlBQlFRSjBhdjBBQWdBaWd3SDlId0E0QWdBZ0JpQ0NBZjBiQVVFQ2RHb2dnd0g5SHdFNEFnQWdCaUNDQWYwYkFrRUNkR29nZ3dIOUh3STRBZ0FnQmlDQ0FmMGJBMEVDZEdvZ2d3SDlId000QWdBZ2dBSDlEQVFBQUFBRUFBQUFCQUFBQUFRQUFBRDlyZ0VoZ0FFZ0FVRUVhaUlCSUF4SERRQUxJQXdpQnlBU1JnMEJDMEVBSVJFZ0J5RUJJQ0FFUUFOQUlBWWdBU0FRYkNBSWFrRUNkR29nRXlBQlFRSjBhaW9DQURnQ0FDQUJRUUZxSVFFZ0VVRUJhaUlSSUNCSERRQUxDeUFISUJKclFYeExEUUFEUUNBR0lBRWdFR3dnQ0dwQkFuUnFJQk1nQVVFQ2RHb3FBZ0E0QWdBZ0JpQUJRUUZxSWdjZ0VHd2dDR3BCQW5ScUlCTWdCMEVDZEdvcUFnQTRBZ0FnQmlBQlFRSnFJZ2NnRUd3Z0NHcEJBblJxSUJNZ0IwRUNkR29xQWdBNEFnQWdCaUFCUVFOcUlnY2dFR3dnQ0dwQkFuUnFJQk1nQjBFQ2RHb3FBZ0E0QWdBZ0dDQUJRUVJxSWdGSERRQUxDeUFJUVFGcUlnZ2dEa2NOQUFzTElCd2dEeUFjS0FJSUlneHJJaE0yQWdRZ0ZTZ0NuQUVoQVNBY1FRQTJBaEFnSENBTU5nSVVJQnhCQURZQ0dDQWNJQk0yQWh3Z0hDQUJRUUp2SWhnMkFnd0NRQ0JhUlNBT1FROUxjVVVFUUNBS0lRRWdEa0VJU1EwQklBOUJmbkVoSVNBUFFRRnhJU0lnRTBGK2NTRW9JQk5CQVhFaEp5QU1RWDV4SVRBZ0RFRUJjU0V0SUNrZ0pFRi9jMm9oSXlBY0tBSUFJaElnR0VFRmRDSUhhaUVnSUJJZ0IydEJJR29oSGlBTUlCQnNRUUowSVNvZ0RpRUlBMEJCQUNFR1FRQWhCd0pBQWtBQ1FDQU1EZ0lDQVFBTEEwQWdJQ0FHUVFaMGFpSVJJQUVnQmlBUWJFRUNkR29pSmYwQUFnRDlDd0lBSUJFZ0pmMEFBaEQ5Q3dJUUlDQWdCa0VCY2lJUlFRWjBhaUlsSUFFZ0VDQVJiRUVDZEdvaUVmMEFBaEQ5Q3dJUUlDVWdFZjBBQWdEOUN3SUFJQVpCQW1vaEJpQUhRUUpxSWdjZ01FY05BQXNMSUMxRkRRQWdJQ0FHUVFaMGFpSUhJQUVnQmlBUWJFRUNkR29pQnYwQUFnRDlDd0lBSUFjZ0J2MEFBaEQ5Q3dJUUN3SkFJQXdnRDBZTkFDQUJJQ3BxSVFkQkFDRUdRUUFoRVNBTUlDTkhCRUFEUUNBZUlBWkJCblJxSWlVZ0J5QUdJQkJzUVFKMGFpSXMvUUFDQVAwTEFnQWdKU0FzL1FBQ0VQMExBaEFnSGlBR1FRRnlJaVZCQm5ScUlpd2dCeUFRSUNWc1FRSjBhaUlsL1FBQ0VQMExBaEFnTENBbC9RQUNBUDBMQWdBZ0JrRUNhaUVHSUJGQkFtb2lFU0FvUncwQUN3c2dKMFVOQUNBZUlBWkJCblJxSWhFZ0J5QUdJQkJzUVFKMGFpSUgvUUFDQVAwTEFnQWdFU0FIL1FBQ0VQMExBaEFMSUJ3UUhBSkFJQTlGRFFCQkFDRUdRUUFoQnlBakJFQURRQ0FCSUFZZ0VHeEJBblJxSWhFZ0VpQUdRUVYwYWlJbC9RQUNBUDBMQWdBZ0VTQWwvUUFDRVAwTEFoQWdBU0FHUVFGeUloRWdFR3hCQW5ScUlpVWdFaUFSUVFWMGFpSVIvUUFDRVAwTEFoQWdKU0FSL1FBQ0FQMExBZ0FnQmtFQ2FpRUdJQWRCQW1vaUJ5QWhSdzBBQ3dzZ0lrVU5BQ0FCSUFZZ0VHeEJBblJxSWdjZ0VpQUdRUVYwYWlJRy9RQUNBUDBMQWdBZ0J5QUcvUUFDRVAwTEFoQUxJQUZCSUdvaEFTQUlRUWhySWdoQkIwc05BQXNNQVF0QkFTQU9RUU4ySWdFZ1J5QUJJRWRKR3lJSUlBaEJBVTBiSVJFZ0RpQUlia0Y0Y1NFU0lBNUJlSEVoSUVFQUlRY2dDaUVCQTBCQk1CQU5JZ1pGRFFRZ0JpQkdFQllpSGpZQ0FDQWVSUVJBSUI4UUdpQUdFQWxCQUF3R0N5QUdJQUUyQWlnZ0JpQVFOZ0lrSUFZZ0R6WUNJQ0FHSUJNMkFod2dCa0VBTmdJWUlBWWdERFlDRkNBR1FRQTJBaEFnQmlBWU5nSU1JQVlnRERZQ0NDQUdJQk0yQWdRZ0JpQWdJQWNnRW14cklCSWdCMEVCYWlJSElBaEdHeUllTmdJc0lCOUJEU0FHRUNZZ0FTQWVRUUowYWlFQklBY2dFVWNOQUFzZ0h4QWFDd0pBSUE1QkIzRWlFa1VOQUNBWVFRVjBJU0FnSENnQ0FDRUlBa0FnREVVTkFDQUlJQ0JxSVJFZ0VrRUNkQ0VZUVFBaEJpQU1RUUZIQkVBZ0RFRitjU0VlUVFBaEJ3TkFJQkVnQmtFR2RHb2dBU0FHSUJCc1FRSjBhaUFZRUFzYUlCRWdCa0VCY2lJalFRWjBhaUFCSUJBZ0kyeEJBblJxSUJnUUN4b2dCa0VDYWlFR0lBZEJBbW9pQnlBZVJ3MEFDd3NnREVFQmNVVU5BQ0FSSUFaQkJuUnFJQUVnQmlBUWJFRUNkR29nR0JBTEdnc0NRQ0FNSUE5R0RRQWdDQ0FnYTBFZ2FpRUhJQUVnRENBUWJFRUNkR29oRVNBU1FRSjBJUmhCQUNFR0lBd2dLU0FrUVg5emFrY0VRQ0FUUVg1eElTQkJBQ0VNQTBBZ0J5QUdRUVowYWlBUklBWWdFR3hCQW5ScUlCZ1FDeG9nQnlBR1FRRnlJaDVCQm5ScUlCRWdFQ0FlYkVFQ2RHb2dHQkFMR2lBR1FRSnFJUVlnREVFQ2FpSU1JQ0JIRFFBTEN5QVRRUUZ4UlEwQUlBY2dCa0VHZEdvZ0VTQUdJQkJzUVFKMGFpQVlFQXNhQ3lBY0VCd2dEMFVOQUNBU1FRSjBJUWRCQUNFR0lDUkJBV29nS1VjRVFDQVBRWDV4SVF4QkFDRVJBMEFnQVNBR0lCQnNRUUowYWlBSUlBWkJCWFJxSUFjUUN4b2dBU0FHUVFGeUloTWdFR3hCQW5ScUlBZ2dFMEVGZEdvZ0J4QUxHaUFHUVFKcUlRWWdFVUVDYWlJUklBeEhEUUFMQ3lBUFFRRnhSUTBBSUFFZ0JpQVFiRUVDZEdvZ0NDQUdRUVYwYWlBSEVBc2FDeUFWUVpnQmFpRVZJQlpCQVdzaUZnMEFDMEVCREFJTFFRRWhCeUFKS0FJY0lnd2dDRUdZQVd4cUlpTkJtQUZySWk4b0FnQWdJMEdRQVdzb0FnQkdEUUlnSTBHVUFXc2lQU2dDQUNBalFZd0JheWdDQUVZTkFpQU1LQUlFSVE4Z0RDZ0NEQ0VXSUF3b0FnQWhFQ0FNS0FJSUlSTWdDU2dDUkNFU0lBa29Ba0FoRVNBSktBSThJUm9nQ1NnQ09DRWZJQWtnQ0JCVkloNUZCRUJCQUNFSERBTUxJQWhCQVVZRVFDQWVJQ05CRUdzb0FnQWlBU0F2S0FJQUlnWnJJQ05CREdzb0FnQWdQU2dDQUNJS2F5QWpRUWhyS0FJQUlnZ2dCbXNnSTBFRWF5Z0NBQ0FLYXlBSktBSTBRUUVnQ0NBQmF4QVhJQjRRSFF3REMwRUFJUVlDUUFKQUlBaEJBV3NpQ2tFRVNRUkFJQW9oQnlBTUlRRU1BUXNnQ2tFRGNTRUhJQXdnQ2tGOGNTSVZRWmdCYkdvaEFRTkFJSUFCSUF3Z0RrR1lBV3hxSWdaQjZBUnFJQVpCMEFOcUlBWkJ1QUpxSUFiOUNRS2dBZjFXQWdBQi9WWUNBQUw5VmdJQUF5QUdRZUFFYWlBR1FjZ0RhaUFHUWJBQ2FpQUcvUWtDbUFIOVZnSUFBZjFXQWdBQy9WWUNBQVA5c1FIOXVRRWdCa0hzQkdvZ0JrSFVBMm9nQmtHOEFtb2dCdjBKQXFRQi9WWUNBQUg5VmdJQUF2MVdBZ0FESUFaQjVBUnFJQVpCekFOcUlBWkJ0QUpxSUFiOUNRS2NBZjFXQWdBQi9WWUNBQUw5VmdJQUEvMnhBZjI1QVNHQUFTQU9RUVJxSWc0Z0ZVY05BQXNnZ0FFZ2dBRWdnQUg5RFFnSkNnc01EUTRQQUFFQ0F3QUJBZ1A5dVFFaWdBRWdnQUVnZ0FIOURRUUZCZ2NBQVFJREFBRUNBd0FCQWdQOXVRSDlHd0FoQmlBS0lCVkdEUUVMQTBBZ0JpQUJLQUtnQVNBQktBS1lBV3NpQ2lBR0lBcExHeUlHSUFFb0FxUUJJQUVvQXB3QmF5SUtJQVlnQ2tzYklRWWdBVUdZQVdvaEFTQUhRUUZySWdjTkFBc0xBa0FnQmtHQWdJREFBRThOQUNBY0lBWkJCWFFRRmlJaE5nSWdJQ0ZGRFFBZ0hDQWhOZ0lBQWtBZ0NBUkFJQllnRDJzaENpQVRJQkJySVFZZ0lVRWdhaUUrSUFpdElZY0JJQkt0SVlvQklCR3RJWXNCSUJxdElZZ0JJQit0SVl3QklBa29BaFFpUXEwaGpRRkNBU0dHQVFOQUlCd2dDallDQ0NBY0lBWTJBaWdnRENnQ3BBRWhCeUFNS0FLZ0FTRUlJQXdvQXB3QklRRWdIQ0FNS0FLWUFTSVZRUUp2SWlJMkFpd2dIQ0FCUVFKdklqODJBZ3dnSENBSUlCVnJJaUFnQm1zaUtEWUNKQ0FjSUFjZ0FXc2lFeUFLYXlJNE5nSUVJQjhpRmlFSUlCb2lBU0VPSUJFaUJ5RVlJQklpRlNFUEFrQWdoZ0VnalFGUkRRQWdRaUNHQWFkcklSQkJBQ0VPUVFBaENDQVdCRUJDZnlBUXJTS0pBWVpDZjRVZ2pBRjhJSWtCaUtjaENBc2dHZ1JBUW44Z0VLMGlpUUdHUW4rRklJZ0JmQ0NKQVlpbklRNExRUUFoRlVFQUlRY2dFUVJBUW44Z0VLMGlpUUdHUW4rRklJc0JmQ0NKQVlpbklRY0xJQklFUUVKL0lCQ3RJb2tCaGtKL2hTQ0tBWHdnaVFHSXB5RVZDMEVBSVJoQkFDRVdRUUVnRUVFQmEzUWlHeUFmU1FSQUlCOGdHMnV0UW44Z0VLMGlpUUdHUW4rRmZDQ0pBWWluSVJZTElCRWdHMHNFUUNBUklCdHJyVUovSUJDdElva0Joa0ovaFh3Z2lRR0lweUVZQzBFQUlROUJBQ0VCSUJvZ0cwc0VRQ0FhSUJ0cnJVSi9JQkN0SW9rQmhrSi9oWHdnaVFHSXB5RUJDeUFTSUJ0TkRRQWdFaUFiYTYxQ2Z5QVFyU0tKQVlaQ2Y0VjhJSWtCaUtjaER3dEJmeUFZSUF3b0FyUUJJaEJySWh0QkFDQVlJQnRQR3lJWVFRUnFJaHNnR0NBYlN4c2lHQ0FvSUJnZ0tFa2JJaTFCZnlBSElBd29BdGdCSWhocklodEJBQ0FISUJ0UEd5SUhRUVJxSWhzZ0J5QWJTeHNpQnlBR0lBWWdCMHNiSWlzZ0lodEJBWFFpQnlBcklDMGdJaHRCQVhSQkFYSWlHeUFISUJ0TEd5SW9JQ0JKSVJRZ0ZpQVFheUlIUVFBZ0J5QVdUUnNpQjBFRWF5SVdRUUFnQnlBV1R4c2lKeUFJSUJocklnZEJBQ0FISUFoTkd5SUhRUVJySWdoQkFDQUhJQWhQR3lJd0lDSWJRUUYwSWhnZ01DQW5JQ0liUVFGMFFRRnlJaVJKSVNrZ0RpQU1LQUs0QVNJV2F5SUhRUUFnQnlBT1RSc2lCMEVFYXlJSVFRQWdCeUFJVHhzaUNDRVFJQUVnRENnQzNBRWlEbXNpQjBFQUlBRWdCMDhiSWdGQkJHc2lCMEVBSUFFZ0IwOGJJZ0VoQjBGL0lCVWdGbXNpRmtFQUlCVWdGazhiSWhWQkJHb2lGaUFWSUJaTEd5SVZJQW9nQ2lBVlN4c2lGaUVWUVg4Z0R5QU9heUlPUVFBZ0RpQVBUUnNpRGtFRWFpSVBJQTRnRDBzYklnNGdPQ0FPSURoSkd5SWJJUThnUHdSQUlBRWhFQ0FXSVE4Z0d5RVZJQWdoQndzZ0tDQWdJQlFiSVNnZ0dDQWtJQ2tiSVJnZ0hDQXROZ0k4SUJ3Z0p6WUNPQ0FjSUNzMkFqUWdIQ0F3TmdJd0FrQWdFMEVJU1FSQVFRY2hCa0VBSVE0TUFRc2dQaUFpUVFWMElnNXJJQ2RCQm5ScUlUZ2dEaUFoYWlBd1FRWjBhaUVVSUFZZ0xXb2hMU0FHSUNkcUlTY2dDaUFiYWlFa0lBRWdDbW9oS1NBaElCaEJCWFJxSVNwQkFDRU9BMEFDUUFKQUlBNGdGa2tnRGtFSGNpSUdJQWhQY1EwQUlBNGdKRWtnQmlBcFQzRU5BQ0FPUVFocUlRNE1BUXRCQ0NBVElBNXJJZ1lnQmtFSVR4c2hKVUVBSVFZRFFDQWVJREFnQmlBT2FpSWlJQ3NnSWtFQmFpSXNJQlFnQmtFQ2RDSXVha0VRUVFBUUZ5QWVJQ2NnSWlBdElDd2dMaUE0YWtFUVFRQVFGeUFHUVFGcUlnWWdKVWNOQUFzZ0hFRWdhaEFjSUI0Z0dDQU9JQ2dnRGtFSWFpSU9JQ3BCQ0VFQlFRQVFIMFVOQlFzZ0RrRUhjaUlHSUJOSkRRQUxDd0pBSUE0Z0UwOE5BQ0FPSUJaSklBWWdDRTl4UlFSQUlBNGdDaUFiYWs4TkFTQUdJQUVnQ21wSkRRRUxJQnhCSUdvaEJrRUFJU0lnRXlBT2F5SXdCRUFEUUNBZUlBWW9BaEFpTFNBT0lDSnFJaWNnQmlnQ0ZDQW5RUUZxSWlzZ0lrRUNkQ0k0SUFZb0FnQWdCaWdDREVFRmRHb2dMVUVHZEdwcVFSQkJBQkFYSUI0Z0JpZ0NHQ0l0SUFZb0FnZ2lGR29nSnlBR0tBSWNJQlJxSUNzZ0JpZ0NBQ0FHS0FJTVFRVjBheUF0UVFaMGFpQTRha0VnYWtFUVFRQVFGeUFpUVFGcUlpSWdNRWNOQUFzTElBWVFIQ0FlSUJnZ0RpQW9JQk1nSVNBWVFRVjBha0VJUVFGQkFCQWZSUTBEQ3lBY0lCczJBaHdnSENBQk5nSVlJQndnRmpZQ0ZDQWNJQWcyQWhBZ0dDQW9TUVJBSUJWQkFYUWlCaUFQUVFGMFFRRnlJaFVnQmlBVlN4c2lCaUFUSUFZZ0Uwa2JJUVlnUGlBL1FRVjBJaFZySUFGQkJuUnFJUTRnRlNBaGFpQUlRUVowYWlFVklBb2dHMm9oRHlBQklBcHFJUW9nSVNBUVFRRjBJZ0VnQjBFQmRFRUJjaUlISUFFZ0Iwa2JJZ2RCQlhScUlSQURRQ0FlSUJnZ0NFRUlJQ2dnR0dzaUFTQUJRUWhQR3lBWWFpSUJJQllnRlVFQlFSQVFGeUFlSUJnZ0NpQUJJQThnRGtFQlFSQVFGeUFjRUJ3Z0hpQVlJQWNnQVNBR0lCQkJBVUVJUVFBUUgwVU5CQ0FZUVFocUloZ2dLRWtOQUFzTElBeEJtQUZxSVF3Z0lDRUdJQk1oQ2lDR0FVSUJmQ0tHQVNDSEFWSU5BQXNMUVFFaEJ5QWVJQ05CRUdzb0FnQWlBU0F2S0FJQUlnWnJJQ05CREdzb0FnQWdQU2dDQUNJS2F5QWpRUWhyS0FJQUlnZ2dCbXNnSTBFRWF5Z0NBQ0FLYXlBSktBSTBRUUVnQ0NBQmF4QVhJQjRRSFNBaEVBa01CQXNnSGhBZElDRVFDVUVBSVFjTUF3c2dIaEFkUVFBaEJ3d0NDeUFmRUJwQkFBc2hCeUFjS0FJZ0VBa0xJQnhCUUdza0FDQUhEUUFNQkFzZ0hVRzRDR29oSFNBTlFUUnFJUTBnQ1VITUFHb2hDU0FMUVFGcUlnc2dGeWdDRUVrTkFBc2dHU2dDSUNFZElCa29BaFFvQWdBaEZ3c0NRQ0FkS0FJUUlnbEZEUUFnR1NnQ1JBMEFJQmNvQWhRaURTZ0NIQ0VCQWtBQ1FBSkFJQmtvQWtBaUJnUkFJQmNvQWhBaUMwRURTUTBDQWtBZ0RTZ0NHQ0lISUEwb0FtUkdCRUFnQnlBTktBS3dBVVlOQVFzZ00wRUJRYS9LQUVFQUVBZ01Cd3NDUUNBWktBSVlLQUlZSWdvb0FpUWlDQ0FLS0FKWVJ3MEFJQWdnQ2lnQ2pBRkhEUUFnQVNBSFFaZ0JiQ0lLYWlJQlFZd0JheWdDQUNBQlFaUUJheWdDQUdzZ0FVR1FBV3NvQWdBZ0FVR1lBV3NvQWdCcmJDSUJJQTBvQW1nZ0Ntb2lCMEdNQVdzb0FnQWdCMEdVQVdzb0FnQnJJQWRCa0FGcktBSUFJQWRCbUFGcktBSUFhMnhIRFFBZ0RTZ0N0QUVnQ21vaUIwR01BV3NvQWdBZ0IwR1VBV3NvQWdCcklBZEJrQUZyS0FJQUlBZEJtQUZyS0FJQWEyd2dBVVlOQWdzZ00wRUJRYS9LQUVFQUVBZ01CZ3NnRnlnQ0VDSUxRUU5KRFFFQ1FDQVpLQUlZS0FJWUlnY29BaVFpQ2lBSEtBSllSdzBBSUFvZ0J5Z0NqQUVpQ0VjTkFDQUJJQXBCbUFGc0lnZHFJZ0VvQXBRQklBRW9Bb3dCYXlBQktBS1FBU0FCS0FLSUFXdHNJZ0VnQnlBTktBSm9haUlIS0FLVUFTQUhLQUtNQVdzZ0J5Z0NrQUVnQnlnQ2lBRnJiRWNOQUNBTktBSzBBU0FJUVpnQmJHb2lCeWdDbEFFZ0J5Z0NqQUZySUFjb0FwQUJJQWNvQW9nQmEyd2dBVVlOQVFzZ00wRUJRYS9LQUVFQUVBZ01CUXNnQ1VFQ1JnUkFJQjBvQXVnclJRMERJQXRCQW5RUURTSUxSUTBGSUJjb0FoQWlDRVVOQWlBWktBSkFCRUJCQUNFWEFrQWdDRUVNU1FSQVFRQWhCZ3dCQ3lBTlFTUnFJUW9DUUNBTElBMGdDRUhNQUd4cVFTUnJUdzBBSUFvZ0N5QUlRUUowYWs4TkFFRUFJUVlNQVFzZ0RVR0lBbW9oRENBTlFid0JhaUVWSUExQjhBQnFJUTRnRFNBSVFYeHhJZ1pCekFCc2FpRU5RUUFoQ1FOQUlBc2dDVUVDZEdvZ0RDQUpRY3dBYkNJSGFpQUhJQlZxSUFjZ0Rtb2dCeUFLYXYwSkFnRDlWZ0lBQWYxV0FnQUMvVllDQUFQOUN3SUFJQWxCQkdvaUNTQUdSdzBBQ3lBR0lBaEdEUVFMQWtBZ0NFRURjU0lIUlFSQUlBWWhDUXdCQ3lBR0lRa0RRQ0FMSUFsQkFuUnFJQTBvQWlRMkFnQWdDVUVCYWlFSklBMUJ6QUJxSVEwZ0YwRUJhaUlYSUFkSERRQUxDeUFHSUFoclFYeExEUU1nQzBFTWFpRUdJQXRCQ0dvaENpQUxRUVJxSVF3RFFDQUxJQWxCQW5RaUIyb2dEU2dDSkRZQ0FDQUhJQXhxSUEwb0FuQTJBZ0FnQnlBS2FpQU5LQUs4QVRZQ0FDQUdJQWRxSUEwb0FvZ0NOZ0lBSUExQnNBSnFJUTBnQ1VFRWFpSUpJQWhIRFFBTERBTUxRUUFoRndKQUlBaEJERWtFUUVFQUlRWU1BUXNnRFVFMGFpRUtBa0FnQ3lBTklBaEJ6QUJzYWtFVWEwOE5BQ0FLSUFzZ0NFRUNkR3BQRFFCQkFDRUdEQUVMSUExQm1BSnFJUXdnRFVITUFXb2hGU0FOUVlBQmFpRU9JQTBnQ0VGOGNTSUdRY3dBYkdvaERVRUFJUWtEUUNBTElBbEJBblJxSUF3Z0NVSE1BR3dpQjJvZ0J5QVZhaUFISUE1cUlBY2dDbXI5Q1FJQS9WWUNBQUg5VmdJQUF2MVdBZ0FEL1FzQ0FDQUpRUVJxSWdrZ0JrY05BQXNnQmlBSVJnMERDd0pBSUFoQkEzRWlCMFVFUUNBR0lRa01BUXNnQmlFSkEwQWdDeUFKUVFKMGFpQU5LQUkwTmdJQUlBbEJBV29oQ1NBTlFjd0FhaUVOSUJkQkFXb2lGeUFIUncwQUN3c2dCaUFJYTBGOFN3MENJQXRCREdvaEJpQUxRUWhxSVFvZ0MwRUVhaUVNQTBBZ0N5QUpRUUowSWdkcUlBMG9BalEyQWdBZ0J5QU1haUFOS0FLQUFUWUNBQ0FISUFwcUlBMG9Bc3dCTmdJQUlBWWdCMm9nRFNnQ21BSTJBZ0FnRFVHd0Ftb2hEU0FKUVFScUlna2dDRWNOQUFzTUFnc2dIU2dDMENzb0FoUkJBVVlFUUNBR0JFQWdEU2dDSkNBTktBSndJQTBvQXJ3QklBRVFXQXdFQ3lBTktBSTBJQTBvQW9BQklBMG9Bc3dCSUFFUVdBd0RDeUFHQkVBZ0RTZ0NKQ0FOS0FKd0lBMG9BcndCSUFFUVZ3d0RDeUFOS0FJMElBMG9Bb0FCSUEwb0Fzd0JJQUVRVnd3Q0N5QkFJQXMyQWdBZ00wRUJRZXpLQUNCQUVBZ01BUXNnR1NnQ0dDZ0NHQ2dDSUJvQ2Z5QWRLQUxvS3lFSFFRQWhEa0VBSUFoQkEzUVFEU0lOUlEwQUdnSkFJQUZGRFFBZ0NFVU5BQ0FOSUFoQkFuUnFJUk1nQ0VGOGNTRVBJQWhCQTNFaERDQUlRUUZySVJBRFFFRUFJUmRCQUNFSklCQkJBMDhFUUFOQUlBMGdGMEVDZENJR2FpQUdJQXRxS0FJQUtnSUFPQUlBSUEwZ0JrRUVjaUlLYWlBS0lBdHFLQUlBS2dJQU9BSUFJQTBnQmtFSWNpSUthaUFLSUF0cUtBSUFLZ0lBT0FJQUlBMGdCa0VNY2lJR2FpQUdJQXRxS0FJQUtnSUFPQUlBSUJkQkJHb2hGeUFKUVFScUlna2dEMGNOQUFzTFFRQWhDaUFNQkVBRFFDQU5JQmRCQW5RaUJtb2dCaUFMYWlnQ0FDb0NBRGdDQUNBWFFRRnFJUmNnQ2tFQmFpSUtJQXhIRFFBTEMwRUFJUVlnQnlFWEEwQWdFeUFHUVFKMEloSnFJZ2xCQURZQ0FFTUFBQUFBSVk0QlFRQWhDa0VBSVJZZ0VFRUNTd1JBQTBBZ0NTQVhLZ0lBSUEwZ0NrRUNkR29pRlNvQ0FKUWdqZ0dTSW80Qk9BSUFJQWtnRnlvQ0JDQVZLZ0lFbENDT0FaSWlqZ0U0QWdBZ0NTQVhLZ0lJSUJVcUFnaVVJSTRCa2lLT0FUZ0NBQ0FKSUJjcUFnd2dGU29DREpRZ2pnR1NJbzRCT0FJQUlBcEJCR29oQ2lBWFFSQnFJUmNnRmtFRWFpSVdJQTlIRFFBTEMwRUFJUlVnREFSQUEwQWdDU0FYS2dJQUlBMGdDa0VDZEdvcUFnQ1VJSTRCa2lLT0FUZ0NBQ0FLUVFGcUlRb2dGMEVFYWlFWElCVkJBV29pRlNBTVJ3MEFDd3NnQ3lBU2FpSUtJQW9vQWdBaUNrRUVhallDQUNBS0lJNEJPQUlBSUFaQkFXb2lCaUFJUncwQUN5QU9RUUZxSWc0Z0FVY05BQXNMSUEwUUNVRUJDeUY3SUFzUUNTQjdSUTBDQ3lBWktBSVVLQUlBSWhZb0FoQkZCRUJCQVNFeERBSUxJQmtvQWlBb0F0QXJJaGRCdUFocUlSTWdGMEcwQ0dvaEVpQVpLQUpFSVJBZ0ZpZ0NGQ0VISUJrb0FoZ29BaGdoQ2tFQUlRZ0RRQUpBSUJBRVFDQVFJQWhCQW5ScUtBSUFSUTBCQ3lBSEtBSWNJZ0VnQ2lnQ0pFR1lBV3hxSVFzQ2Z5QVpLQUpBUlFSQUlBc29BcFFCSUFzb0Fvd0JheUVHSUFzb0FwQUJJQXNvQW9nQmF5RUJRUUFoREVFMERBRUxJQUVnQnlnQ0dFR1lBV3hxSWdaQmtBRnJLQUlBSUFzb0FnZ2dDeWdDQUdzaUFTQUdRWmdCYXlnQ0FHcHJJUXdnQ3lnQ0RDQUxLQUlFYXlFR1FTUUxJUWtnQ2lnQ0dDRUxBbjhnQ2lnQ0lBUkFRUUVnQzBFQmEzUWlDMEVCYXlFZFFRQWdDMnNNQVF0QmZ5QUxkRUYvY3lFZFFRQUxJUThnQVVVTkFDQUdSUTBBSUFjZ0NXb29BZ0FoQ1NBWEtBSVVRUUZHQkVBZ0V5QUlRYmdJYkNJTGFpRVJJQXNnRW1vaEdDQUJRUUZ4SVJvZ0FVRUNkQ0V6SUFGQmZIRWlEa0VDZENFYklCMzlFU0dDQVNBUC9SRWhnQUZCQUNFVklBRkJCRWtoSHdOQUFrQUNRQUpBSUI4TkFDQUpJQkZKSUJnZ0NTQXpha2x4RFFBZ0NTQWJhaUVOSUJmOUNRSzBDQ0dEQVVFQUlRc0RRQ0FKSUF0QkFuUnFJaUFnZ0FFZ2d3RWdJUDBBQWdEOXJnRWloQUVnZ2dIOXRnRWdoQUVnZ0FIOU9mMVMvUXNDQUNBTFFRUnFJZ3NnRGtjTkFBc2dEaUlMSUFGR0RRSU1BUXNnQ1NFTlFRQWhDd3NnQzBFQmNpRUpJQm9FUUNBTklBOGdGeWdDdEFnZ0RTZ0NBR29pQ3lBZElBc2dIVWdiSUFzZ0QwZ2JOZ0lBSUExQkJHb2hEU0FKSVFzTElBRWdDVVlOQUFOQUlBMGdEeUFYS0FLMENDQU5LQUlBYWlJSklCMGdDU0FkU0JzZ0NTQVBTQnMyQWdBZ0RTQVBJQmNvQXJRSUlBMG9BZ1JxSWdrZ0hTQUpJQjFJR3lBSklBOUlHellDQkNBTlFRaHFJUTBnQzBFQ2FpSUxJQUZIRFFBTEN5QU5JQXhCQW5ScUlRa2dGVUVCYWlJVklBWkhEUUFMREFFTElCMnNJWVlCSUErc0lZY0JRUUFoRlFOQVFRQWhDd05BSUFrQ2Z5QWRJQWtxQWdBaWpnRkRBQUFBVDE0TkFCb2dEeUNPQVVNQUFBRFBYUTBBR2lDSEFTQVhOQUswQ0FKL0lJNEJrQ0tPQVl0REFBQUFUMTBFUUNDT0FhZ01BUXRCZ0lDQWdIZ0xySHdpaWdFZ2hnRWdoZ0VnaWdGVkd5Q0hBU0NLQVZVYnB3czJBZ0FnQ1VFRWFpRUpJQXRCQVdvaUN5QUJSdzBBQ3lBSklBeEJBblJxSVFrZ0ZVRUJhaUlWSUFaSERRQUxDeUFIUWN3QWFpRUhJQmRCdUFocUlSY2dDa0UwYWlFS1FRRWhNU0FJUVFGcUlnZ2dGaWdDRUVrTkFBc01BUXNnQlVFQlFab1pRUUFRQ0FzZ1FFRVFhaVFBSURGRkJFQWdUeEFwSUFBZ0FDZ0NDRUdBZ0FKeU5nSUlJQVZCQVVITDFBQkJBQkFJREFFTEFrQWdBa1VOQUFKL0lBSWhCMEVBSVFZQ1FDQUFLQUxRQVNJVlFRRVFUU0lCUVg5R0RRQWdBU0FEU3cwQVFRRWdGU2dDR0NJQktBSVFSUTBCR2lBQktBSVlJUWdnRlNnQ0ZDZ0NBQ2dDRkNFWEEwQWdDQ2dDR0NJQlFRZHhJUUlnQVVFRGRpRURJQmNvQWh3aUJpQUlLQUlrUVpnQmJHb2hBUUovSUJVb0FrQUVRQ0FHSUJjb0FoaEJtQUZzYWlJR1FaQUJheWdDQUNBQktBSUlJQUVvQWdCcklnc2dCa0dZQVdzb0FnQnFheUVNSUFFb0Fnd2dBU2dDQkdzaENVRWtEQUVMSUFFb0FwUUJJQUVvQW93QmF5RUpJQUVvQXBBQklBRW9Bb2dCYXlFTFFRQWhERUUwQ3lBWGFpZ0NBQ0VCQWtBQ1FBSkFBa0FDUUVFRUlBTWdBa0VBUjJvaUFpQUNRUU5HRzBFQmF3NEVBUUlFQUFRTElBbEZEUU1nQ3lBTWFpRUdJQXRCQW5RaEFpQUpRUVJQQkVBZ0NVRjhjU0VLUVFBaEN3TkFJQWNnQVNBQ0VBc2hCeUFCSUFaQkFuUWlBMm9pRFNBRGFpSU1JQU5xSWc0Z0Eyb2hBU0FDSUFkcUlBMGdBaEFMSUFKcUlBd2dBaEFMSUFKcUlBNGdBaEFMSUFKcUlRY2dDMEVFYWlJTElBcEhEUUFMQzBFQUlRc2dDVUVEY1NJRFJRMERBMEFnQnlBQklBSVFDeUVISUFFZ0JrRUNkR29oQVNBQ0lBZHFJUWNnQzBFQmFpSUxJQU5IRFFBTERBTUxJQWxGSUF0RmNpRUNJQWdvQWlCRkRRRWdBZzBDSUF0QkFuUWhEaUFMUVh4eElnTkJBblFoRDBFQUlRMERRQUpBQWtBQ1FDQUxRUVJKRFFBZ0FTQUhJQXRxU1NBQklBNXFJQWRMY1EwQUlBTWdCMm9oZkNBQklBOXFJUVpCQUNFS0EwQWdCeUFLYWlBQklBcEJBblJxL1FBQ0FQME1BQUFBQUFBQUFBQUFBQUFBQUFBQUFQME5BQVFJREFBQUFBQUFBQUFBQUFBQUFQMWFBQUFBSUFwQkJHb2lDaUFEUncwQUN5QjhJUWNnQXlJQ0lBdEdEUUlNQVFzZ0FTRUdRUUFoQWd0QkFDRUtJQXNnQWlJQmEwRUhjU0lXQkVBRFFDQUhJQVlvQWdBNkFBQWdBVUVCYWlFQklBZEJBV29oQnlBR1FRUnFJUVlnQ2tFQmFpSUtJQlpIRFFBTEN5QUNJQXRyUVhoTERRQURRQ0FISUFZb0FnQTZBQUFnQnlBR0tBSUVPZ0FCSUFjZ0JpZ0NDRG9BQWlBSElBWW9BZ3c2QUFNZ0J5QUdLQUlRT2dBRUlBY2dCaWdDRkRvQUJTQUhJQVlvQWhnNkFBWWdCeUFHS0FJY09nQUhJQWRCQ0dvaEJ5QUdRU0JxSVFZZ0FVRUlhaUlCSUF0SERRQUxDeUFHSUF4QkFuUnFJUUVnRFVFQmFpSU5JQWxIRFFBTERBSUxJQWxGSUF0RmNpRUNJQWdvQWlBRVFDQUNEUUlnQzBFQ2RDRU9JQXRCQVhRaER5QUxRWHh4SWdOQkFuUWhGaUFEUVFGMElSQkJBQ0VOQTBBQ1FBSkFBa0FnQzBFRVNRMEFJQUVnQnlBUGFra2dBU0FPYWlBSFMzRU5BQ0FCSUJacUlRWWdCeUFRYWlGOVFRQWhDZ05BSUFjZ0NrRUJkR29nQVNBS1FRSjBhdjBBQWdEOURBQUFBQUFBQUFBQUFBQUFBQUFBQUFEOURRQUJCQVVJQ1F3TkFBRUFBUUFCQUFIOVd3RUFBQ0FLUVFScUlnb2dBMGNOQUFzZ2ZTRUhJQU1pQWlBTFJnMENEQUVMSUFFaEJrRUFJUUlMUVFBaENpQUxJQUlpQVd0QkIzRWlFd1JBQTBBZ0J5QUdLQUlBT3dFQUlBRkJBV29oQVNBSFFRSnFJUWNnQmtFRWFpRUdJQXBCQVdvaUNpQVRSdzBBQ3dzZ0FpQUxhMEY0U3cwQUEwQWdCeUFHS0FJQU93RUFJQWNnQmlnQ0JEc0JBaUFISUFZb0FnZzdBUVFnQnlBR0tBSU1Pd0VHSUFjZ0JpZ0NFRHNCQ0NBSElBWW9BaFE3QVFvZ0J5QUdLQUlZT3dFTUlBY2dCaWdDSERzQkRpQUhRUkJxSVFjZ0JrRWdhaUVHSUFGQkNHb2lBU0FMUncwQUN3c2dCaUFNUVFKMGFpRUJJQTFCQVdvaURTQUpSdzBBQ3d3Q0N5QUNEUUVnQzBFQ2RDRU9JQXRCQVhRaER5QUxRWHh4SWdOQkFuUWhGaUFEUVFGMElSQkJBQ0VOQTBBQ1FBSkFBa0FnQzBFRVNRMEFJQUVnQnlBUGFra2dBU0FPYWlBSFMzRU5BQ0FCSUJacUlRWWdCeUFRYWlGK1FRQWhDZ05BSUFjZ0NrRUJkR29nQVNBS1FRSjBhdjBBQWdEOURBQUFBQUFBQUFBQUFBQUFBQUFBQUFEOURRQUJCQVVJQ1F3TkFBRUFBUUFCQUFIOVd3RUFBQ0FLUVFScUlnb2dBMGNOQUFzZ2ZpRUhJQU1pQWlBTFJnMENEQUVMSUFFaEJrRUFJUUlMUVFBaENpQUxJQUlpQVd0QkIzRWlFd1JBQTBBZ0J5QUdLQUlBT3dFQUlBRkJBV29oQVNBSFFRSnFJUWNnQmtFRWFpRUdJQXBCQVdvaUNpQVRSdzBBQ3dzZ0FpQUxhMEY0U3cwQUEwQWdCeUFHS0FJQU93RUFJQWNnQmlnQ0JEc0JBaUFISUFZb0FnZzdBUVFnQnlBR0tBSU1Pd0VHSUFjZ0JpZ0NFRHNCQ0NBSElBWW9BaFE3QVFvZ0J5QUdLQUlZT3dFTUlBY2dCaWdDSERzQkRpQUhRUkJxSVFjZ0JrRWdhaUVHSUFGQkNHb2lBU0FMUncwQUN3c2dCaUFNUVFKMGFpRUJJQTFCQVdvaURTQUpSdzBBQ3d3QkN5QUNEUUFnQzBFQ2RDRU9JQXRCZkhFaUEwRUNkQ0VQUVFBaERRTkFBa0FDUUFKQUlBdEJCRWtOQUNBQklBY2dDMnBKSUFFZ0Rtb2dCMHR4RFFBZ0F5QUhhaUYvSUFFZ0Qyb2hCa0VBSVFvRFFDQUhJQXBxSUFFZ0NrRUNkR3I5QUFJQS9Rd0FBQUFBQUFBQUFBQUFBQUFBQUFBQS9RMEFCQWdNQUFBQUFBQUFBQUFBQUFBQS9Wb0FBQUFnQ2tFRWFpSUtJQU5IRFFBTElIOGhCeUFESWdJZ0MwWU5BZ3dCQ3lBQklRWkJBQ0VDQzBFQUlRb2dDeUFDSWdGclFRZHhJaFlFUUFOQUlBY2dCaWdDQURvQUFDQUJRUUZxSVFFZ0IwRUJhaUVISUFaQkJHb2hCaUFLUVFGcUlnb2dGa2NOQUFzTElBSWdDMnRCZUVzTkFBTkFJQWNnQmlnQ0FEb0FBQ0FISUFZb0FnUTZBQUVnQnlBR0tBSUlPZ0FDSUFjZ0JpZ0NERG9BQXlBSElBWW9BaEE2QUFRZ0J5QUdLQUlVT2dBRklBY2dCaWdDR0RvQUJpQUhJQVlvQWh3NkFBY2dCMEVJYWlFSElBWkJJR29oQmlBQlFRaHFJZ0VnQzBjTkFBc0xJQVlnREVFQ2RHb2hBU0FOUVFGcUlnMGdDVWNOQUFzTElCZEJ6QUJxSVJjZ0NFRTBhaUVJUVFFaEJpQnlRUUZxSW5JZ0ZTZ0NHQ2dDRUVrTkFBc0xJQVlMUlEwQklFOG9BdHdySWdGRkRRQWdBUkFKSUU5Q0FEY0MzQ3NMSUFBZ0FDMEFSRUgrQVhFNkFFUWdBQ0FBS0FJSVFmOStjVFlDQ0VFQklXY2dCQ2tEQ0NLR0FWQUVma0lBQlNDR0FTQUVLUU00ZlF0UUlBQW9BZ2dpQVVIQUFFWnhEUUFnQVVHQUFrWU5BQ0FFSUU1QkNtcEJBaUFGRUJKQkFrY0VRQ0FGUVFGQkFpQUFLQUs0QVJ0QmxoSkJBQkFJSUFBb0FyZ0JSU0ZuREFFTElFNUJDbW9nVGtFTWFrRUNFQW9nVGlnQ0RDSUJRWkQvQTBZTkFDQUJRZG4vQTBZRVFDQUFRWUFDTmdJSUlBQkJBRFlDekFFTUFRc2dCQ2tEQ0NLR0FWQUVma0lBQlNDR0FTQUVLUU00ZlF0UUJFQWdBRUhBQURZQ0NDQUZRUUpCclQ1QkFCQUlEQUVMUVFBaFp5QUZRUUZCN1QxQkFCQUlDeUJPUVJCcUpBQWdad3NMQUNBQUJFQWdBQkFKQ3d1MEFRRUJmeUFBS0FJTVJRUkFJQUlnQUNnQ0pDQUJFUU1BRHdzQ1FFRUlFQTBpQTBVTkFDQURJQUkyQWdRZ0F5QUJOZ0lBUVFnUURTSUJSUVJBSUFNUUNROExJQUVnQXpZQ0FDQUFJQUFvQWdSQjVBQnNJZ0kyQWlnRFFDQUFLQUlZSUFKS0RRQUxJQUVnQUNnQ0ZEWUNCQ0FBSUFFMkFoUWdBQ0FBS0FJWVFRRnFOZ0lZSUFBb0Fod2lBVVVOQUNBQktBSUFRUUEyQWdnZ0FDQUJLQUlFTmdJY0lBQWdBQ2dDSUVFQmF6WUNJQ0FCRUFrTEN5OEJBWDhnQUFSQUlBQW9BZ1FpQVFSQUlBQW9BZ0FnQVJFQ0FBc2dBQ2dDSUJBSklBQkJBRFlDSUNBQUVBa0xDeW9BSUFBRVFDQUFLQUl3SUFCQkZFRVFJQUFvQWt3YmFpZ0NBQkVDQUNBQVFRQTJBakFnQUJBSkN3djZBZ0VFZndKQUlBQkZEUUFnQUNnQ3JDZ2lBUVJBSUFBb0FxZ29JZ0lFUUVFQUlRRURRQ0FBS0FLc0tDQUJRUU4wYWlnQ0FDSURCRUFnQXhBSklBQW9BcWdvSVFJTElBRkJBV29pQVNBQ1NRMEFDeUFBS0FLc0tDRUJDeUFBUVFBMkFxZ29JQUVRQ1NBQVFRQTJBcXdvQ3lBQUtBSzBLQ0lCQkVBZ0FSQUpJQUJCQURZQ3RDZ0xJQUFvQXRBcklnRUVRQ0FCRUFrZ0FFRUFOZ0xRS3dzZ0FDZ0M3Q3NpQVFSQUlBRVFDU0FBUVFBMkF1d3JDeUFBS0FMb0t5SUJCRUFnQVJBSklBQkJBRFlDNkNzTElBQW9BdndySWdFRVFDQUJFQWtnQUVFQU5nS0VMQ0FBUWdBM0F2d3JDeUFBS0FMd0t5SUJCRUFnQUNnQzlDc2lBd1IvUVFBaEFnTkFJQUVvQWd3aUJBUkFJQVFRQ1NBQlFRQTJBZ3dnQUNnQzlDc2hBd3NnQVVFVWFpRUJJQUpCQVdvaUFpQURTUTBBQ3lBQUtBTHdLd1VnQVFzUUNTQUFRUUEyQXZBckN5QUFLQUxrS3lJQkJFQWdBUkFKSUFCQkFEWUM1Q3NMSUFBb0F0d3JJZ0ZGRFFBZ0FSQUpJQUJDQURjQzNDc0xDOGdIQWhGL0FYNGdBQ2dDRUNJSVFTQlBCRUFnQUNrRENLY1BDd0pBSUFBb0FoUWlBMEVFVGdSQUlBQW9BZ0FpQWtFRGF5Z0NBQ0VCSUFBZ0EwRUVheUlETmdJVUlBQWdBa0VFYXpZQ0FBd0JDeUFEUVFCTUJFQU1BUXNnQTBFQmNTRU5JQUFvQWdBaEFnSkFJQU5CQVVZRVFFRVlJUVFNQVFzZ0EwSCsvLy8vQjNFaENVRVlJUVFEUUNBQUlBSkJBV3NpQmpZQ0FDQUNMUUFBSVF3Z0FDQUNRUUpySWdJMkFnQWdBQ0FEUVFGck5nSVVJQVl0QUFBaEJpQUFJQU5CQW1zaUF6WUNGQ0FNSUFSMElBRnlJQVlnQkVFSWEzUnlJUUVnQkVFUWF5RUVJQVZCQW1vaUJTQUpSdzBBQ3dzZ0RRUkFJQUFnQWtFQmF6WUNBQ0FDTFFBQUlRNGdBQ0FEUVFGck5nSVVJQTRnQkhRZ0FYSWhBUXRCQUNFREN5QUFLQUlZSVFJZ0FDQUJRZjhCY1NJSlFZOEJTellDR0NBQVFRZEJDQ0FCUVlDQWdQZ0hjVUdBZ0lENEIwWWJRUWdnQWhzaUFrRUlRUWRCQ0NBQlFZQ0EvQU54UVlDQS9BTkdHeUFCUWYvLy8vOTRUUnRxSWdSQkNFRUhRUWdnQVVHQS9nRnhRWUQrQVVZYklBRkJFSFpCL3dGeElnVkJqd0ZORzJvaUJrRUlRUWRCQ0NBQlFmOEFjVUgvQUVZYklBRkJDSFpCL3dGeElnZEJqd0ZOR3lBSWFtb2lDallDRUNBQUlBQXBBd2dnQlNBQ2RDQUJRUmgyY2lBSElBUjBjaUFKSUFaMGNxMGdDSzJHaENJU053TUlJQXBCSDAwRVFBSkFJQU5CQkU0RVFDQUFLQUlBSWdKQkEyc29BZ0FoQVNBQUlBTkJCR3MyQWhRZ0FDQUNRUVJyTmdJQURBRUxJQU5CQUV3RVFFRUFJUUVNQVFzZ0EwRUJjU0VRSUFBb0FnQWhBZ0pBSUFOQkFVWUVRRUVZSVFSQkFDRUJEQUVMSUFOQi92Ly8vd2R4SVFaQkdDRUVRUUFoQVVFQUlRVURRQ0FBSUFKQkFXc2lCellDQUNBQ0xRQUFJUThnQUNBQ1FRSnJJZ0kyQWdBZ0FDQURRUUZyTmdJVUlBY3RBQUFoQnlBQUlBTkJBbXNpQXpZQ0ZDQVBJQVIwSUFGeUlBY2dCRUVJYTNSeUlRRWdCRUVRYXlFRUlBVkJBbW9pQlNBR1J3MEFDd3NnRUVVTkFDQUFJQUpCQVdzMkFnQWdBaTBBQUNFUklBQWdBMEVCYXpZQ0ZDQVJJQVIwSUFGeUlRRUxJQUFnQVVIL0FYRWlBa0dQQVVzMkFoZ2dBRUVJUVFkQkNDQUJRWUNBZ1BnSGNVR0FnSUQ0QjBZYklBbEJqd0ZOR3lJRFFRaEJCMEVJSUFGQmdJRDhBM0ZCZ0lEOEEwWWJJQUZCLy8vLy8zaE5HMm9pQkVFSVFRZEJDQ0FCUVlEK0FYRkJnUDRCUmhzZ0FVRVFka0gvQVhFaUJVR1BBVTBiYWlJSVFRaEJCMEVJSUFGQi93QnhRZjhBUmhzZ0FVRUlka0gvQVhFaUNVR1BBVTBiSUFwcWFqWUNFQ0FBSUFVZ0EzUWdBVUVZZG5JZ0NTQUVkSElnQWlBSWRIS3RJQXF0aGlBU2hDSVNOd01JQ3lBU3B3dkpGQUlkZndaN0lBQW9BZ2dpQ2lBQUtBSUVhaUVJQWtBZ0FDZ0NERVVFUUNBSVFRSklEUUVnQTBFQVRBMEJJQUFvQWdBaUJTQUlRUVJySWdaQkFYWWlERUVDZENJSklBRWdDa0VDZEdvaUJ5QURRUUowSWdScWFrRUVha2tnQlNBTVFRTjBha0VJYWlJQUlBZEJCR3BMY1NBRklBRWdCR29nQ1dwQkJHcEpJQUZCQkdvZ0FFbHhjaUVTSUFoQkJFa2lGQ0FDUVFGSGNpRVZJQUpCQVVZZ0JrRUZTM0VoRmlBSVFmei8vLzhIY1NFVElBaEJBWEVoRnlBS1FRRnFJUThnQ0VFRGNTRVJJQUVnQldzaEdDQUZJQWhCQW5ScUlSa2dCU0FJUVFGcklnQkJBblJxSVJvZ0RFRUJhaUliUVh4eEloQkJBWFFoQ3lBQ0lBcHNRUUowSVJ3Z0FFRUJkaUFDYkVFQ2RDRWRBMEFnQVNnQ0FDQUJJQnhxS0FJQUlnbEJBV3BCQVhWcklRY0NRQ0FVQkVBZ0NTRUVRUUFoQmd3QkMwRUFJUVlDUUFKL1FRQWdGa1VOQUJwQkFDQVNEUUFhSUFuOUVTRWlJQWY5RVNFaC9Rd0FBQUFBQWdBQUFBUUFBQUFHQUFBQUlTVkJBQ0VBQTBBZ0FTQUFRUUowYXYwQUFnUWhKQ0FCSUFBZ0QycEJBblJxL1FBQ0FDRWpJQVVnQUVFRGRHb2lCQ0FoL1ZvQ0FBTWdCRUVJYWlBa0lDTWdJaUFqL1EwTURRNFBFQkVTRXhRVkZoY1lHUm9iSWlUOXJnSDlEQUlBQUFBQ0FBQUFBZ0FBQUFJQUFBRDlyZ0ZCQXYyc0FmMnhBU0lpL1ZvQ0FBQWdCRUVRYWlBaS9Wb0NBQUVnQkVFWWFpQWkvVm9DQUFJZ0JTQWwvUXdCQUFBQUFRQUFBQUVBQUFBQkFBQUEvVkFpSnYwYkFFRUNkR29nSWlBaElDTDlEUXdORGc4UUVSSVRGQlVXRnhnWkdodjlyZ0ZCQWYyc0FTQWsvYTRCSWlIOVdnSUFBQ0FGSUNiOUd3RkJBblJxSUNIOVdnSUFBU0FGSUNiOUd3SkJBblJxSUNIOVdnSUFBaUFGSUNiOUd3TkJBblJxSUNIOVdnSUFBeUFsL1F3SUFBQUFDQUFBQUFnQUFBQUlBQUFBL2E0QklTVWdJaUVoSUNNaElpQUFRUVJxSWdBZ0VFY05BQXNnSXYwYkF5RUVJQ0g5R3dNaEJ5QVFJQnRHRFFFZ0N5RUdJQVFoQ1NBUUN5RUFBMEFnQVNBQVFRRnFJZ29nQW14QkFuUnFLQUlBSVI0Z0FTQUFJQTlxSUFKc1FRSjBhaWdDQUNFRUlBVWdCa0VDZEdvaURpQUhOZ0lBSUE0Z0J5QWVJQVFnQ1dwQkFtcEJBblZySWdkcVFRRjFJQWxxTmdJRUlBWkJBbW9oQmlBQUlBeEhJUjhnQkNFSklBb2hBQ0FmRFFBTERBRUxJQXNoQmdzZ0JTQUdRUUowYWlBSE5nSUFRWHdoQUNBWEJIOGdHaUFCSUIxcUtBSUFJQVJCQVdwQkFYVnJJZ0EyQWdBZ0FDQUhha0VCZFNFSFFYZ0ZRWHdMSUJscUlBUWdCMm8yQWdCQkFDRUdRUUFoQUVFQUlRUUNRQ0FWSUJnZ0RVRUNkR3BCRUVseVJRUkFBMEFnQVNBQVFRSjBJZ1JxSUFRZ0JXcjlBQUlBL1FzQ0FDQUFRUVJxSWdBZ0UwY05BQXNnRXlJRUlBaEdEUUVMSUFRaEFDQVJCRUFEUUNBQklBQWdBbXhCQW5ScUlBVWdBRUVDZEdvb0FnQTJBZ0FnQUVFQmFpRUFJQVpCQVdvaUJpQVJSdzBBQ3dzZ0JDQUlhMEY4U3cwQUEwQWdBU0FBSUFKc1FRSjBhaUFGSUFCQkFuUnFLQUlBTmdJQUlBRWdBRUVCYWlJRUlBSnNRUUowYWlBRklBUkJBblJxS0FJQU5nSUFJQUVnQUVFQ2FpSUVJQUpzUVFKMGFpQUZJQVJCQW5ScUtBSUFOZ0lBSUFFZ0FFRURhaUlFSUFKc1FRSjBhaUFGSUFSQkFuUnFLQUlBTmdJQUlBQkJCR29pQUNBSVJ3MEFDd3NnQVVFRWFpRUJJQTFCQVdvaURTQURSdzBBQ3d3QkN3SkFBa0FDUUNBSVFRRnJEZ0lBQVFJTElBTkJBRXdOQWtFQUlRSUNRQ0FEUVFSSkJFQWdBU0VBREFFTElBRWdBMEg4Ly8vL0IzRWlBa0VDZEdvaEFBTkFJQUVnQmtFQ2RHb2lCQ0FFL1FBQ0FDSWgvUnNBUVFKdC9SRWdJZjBiQVVFQ2JmMGNBU0FoL1JzQ1FRSnQvUndDSUNIOUd3TkJBbTM5SEFQOUN3SUFJQVpCQkdvaUJpQUNSdzBBQ3lBQ0lBTkdEUU1MQTBBZ0FDQUFLQUlBUVFKdE5nSUFJQUJCQkdvaEFDQUNRUUZxSWdJZ0EwY05BQXNNQWdzZ0EwRUFUQTBCSUFBb0FnQWhDU0FDSUFwc1FRSjBJUWNEUUNBSklBRW9BZ0FnQVNBSGFpSUVLQUlBUVFGcVFRRjFheUlBTmdJRUlBa2dBQ0FFS0FJQWFpSUFOZ0lBSUFFZ0FEWUNBQ0FCSUFKQkFuUnFJQWtvQWdRMkFnQWdBVUVFYWlFQklBWkJBV29pQmlBRFJ3MEFDd3dCQ3lBSVFRTklEUUFnQTBFQVRBMEFJQUFvQWdBaUJTQUlJQWhCQVhFaUZFVWlCbXRCQkdzaUNVRUJkaUlMUVFKMElnY2dBU0FEUVFKMElnQnFha2tnQlNBTFFRTjBha0VNYWlJRUlBRkJCR3BMY1NBRlFRUnFJQUFnQVNBS1FRSjBhaUlBYWlBSGFrRUlha2tnQUVFSWFpQUVTWEZ5SVJVZ0FrRUJSeUFJUVFSSmNpRVdJQUpCQVVZZ0NVRUZTM0VoRnlBSVFmei8vLzhIY1NFUUlBaEJBM0VoRVNBQklBVnJJUmdnQlNBSVFRSjBha0VFYXlFWklBVWdDRUVDYXlJQVFRSjBhaUVhSUF0QkFXb2lFa0Y4Y1NJTVFRRnlJUk1nREVFQmRFRUJjaUVMSUFJZ0NteEJBblFoR3lBQUlBWnJRUUpKSVJ3Z0NFRUJka0VCYXlBQ2JFRUNkQ0VkQTBBZ0JTQUJLQUlBSUFFZ0cyb2lEeUFDUVFKMGFpZ0NBQ0lKSUE4b0FnQWlBR3BCQW1wQkFuVnJJZ2NnQUdvMkFnQkJBU0VFQWtBZ0hBUkFJQWtoQmd3QkN3SkFBbjlCQVNBWFJRMEFHa0VCSUJVTkFCb2dDZjBSSVNFZ0IvMFJJU0pCQUNFQUEwQWdCU0FBUVFOMGFpSUhJQUVnQUVFQ2RDSUVhdjBBQWdRZ0lTQUVJQTlxL1FBQ0NDSWgvUTBNRFE0UEVCRVNFeFFWRmhjWUdSb2JJaVFnSWYydUFmME1BZ0FBQUFJQUFBQUNBQUFBQWdBQUFQMnVBVUVDL2F3Qi9iRUJJaU1nSXlBaUlDUDlEUXdORGc4UUVSSVRGQlVXRnhnWkdodjlyZ0ZCQWYyc0FTQWsvYTRCSWlUOURRUUZCZ2NZR1JvYkNBa0tDeHdkSGgvOUN3SVVJQWNnSWlBay9RME1EUTRQRUJFU0V3QUJBZ01VRlJZWElDUDlEUUFCQWdNRUJRWUhFQkVTRXd3TkRnLzlDd0lFSUNNaElpQUFRUVJxSWdBZ0RFY05BQXNnSWYwYkF5RUdJQ0w5R3dNaEJ5QU1JQkpHRFFFZ0N5RUVJQVloQ1NBVEN5RUFBMEFnQVNBQUlBSnNRUUowYWlnQ0FDRWVJQThnQUVFQmFpSUtJQUpzUVFKMGFpZ0NBQ0VHSUFVZ0JFRUNkR29pRGlBSE5nSUFJQTRnQnlBZUlBWWdDV3BCQW1wQkFuVnJJZ2RxUVFGMUlBbHFOZ0lFSUFSQkFtb2hCQ0FBSUJKSElTQWdDaUVBSUFZaENTQWdEUUFMREFFTElBc2hCQXNnR0NBTlFRSjBhaUVKSUFVZ0JFRUNkR29nQnpZQ0FBSkFJQlJGQkVBZ0dpQUJJQjFxS0FJQUlBWkJBV3BCQVhWcklnQWdCMnBCQVhVZ0JtbzJBZ0FNQVFzZ0JpQUhhaUVBQ3lBWklBQTJBZ0JCQUNFR1FRQWhBRUVBSVFRQ1FDQVdJQWxCRUVseVJRUkFBMEFnQVNBQVFRSjBJZ1JxSUFRZ0JXcjlBQUlBL1FzQ0FDQUFRUVJxSWdBZ0VFY05BQXNnRUNJRUlBaEdEUUVMSUFRaEFDQVJCRUFEUUNBQklBQWdBbXhCQW5ScUlBVWdBRUVDZEdvb0FnQTJBZ0FnQUVFQmFpRUFJQVpCQVdvaUJpQVJSdzBBQ3dzZ0JDQUlhMEY4U3cwQUEwQWdBU0FBSUFKc1FRSjBhaUFGSUFCQkFuUnFLQUlBTmdJQUlBRWdBRUVCYWlJRUlBSnNRUUowYWlBRklBUkJBblJxS0FJQU5nSUFJQUVnQUVFQ2FpSUVJQUpzUVFKMGFpQUZJQVJCQW5ScUtBSUFOZ0lBSUFFZ0FFRURhaUlFSUFKc1FRSjBhaUFGSUFSQkFuUnFLQUlBTmdJQUlBQkJCR29pQUNBSVJ3MEFDd3NnQVVFRWFpRUJJQTFCQVdvaURTQURSdzBBQ3dzTE53RUNmeU1BUVJCcklnRWtBQ0FBQkg4Z0FVRU1ha0VnSUFBUVpTRUFRUUFnQVNnQ0RDQUFHd1ZCQUFzaEFpQUJRUkJxSkFBZ0Fnc2JBUUYvSUFBRVFDQUFLQUlJSWdFRVFDQUJFQWtMSUFBUUNRc0xNUUVDZjBFQlFRd1FEQ0lBQkVBZ0FFRUtOZ0lFSUFCQkNrRUVFQXdpQVRZQ0NDQUJCRUFnQUE4TElBQVFDUXRCQUF0VEFRSi9JQUJCQURZQ01DQUFJQUFvQWlBMkFpUWdBU0FBS0FJQUlBQW9BaHdSQ1FBaEJDQUFLQUpFSVFJZ0JFVUVRQ0FBSUFKQkJISTJBa1JCQUE4TElBQWdBVGNET0NBQUlBSkJlM0UyQWtSQkFRdUdBd0lGZndwK0l3QkJJR3NpQXlRQUFrQWdBQ2dDRUNJRlJRUkFRUUVoQWd3QkN3SkFJQUEwQWdBaUIwSUFVdzBBSUFBMEFnUWlDRUlBVXcwQUlBQTBBZ2dpQ1VJQVV3MEFJQUEwQWd3aUNrSUFVdzBBSUFBb0FoZ2hBQ0FIUWdGOUlRd2dDRUlCZlNFTklBbENBWDBoQ1NBS1FnRjlJUW9EUUNBQUlBd2dBQ2dDQUNJQ3JTSUhmQ0FIZ0NJTFBnSVFJQUFnRFNBQUtBSUVJZ2F0SWdkOElBZUFJZzQrQWhSQ0FTQUFOUUlvSWdlR0lnOUNBWDBpQ0NBSklBS3NJaEI4SUJCL3hId2dCNGVuSUFnZ0M4UjhJQWVIcDJzaUFrRUFTQVJBSUFNZ0FqWUNCQ0FESUFRMkFnQWdBVUVCUWVQa0FDQURFQWhCQUNFQ0RBTUxJQUFnQWpZQ0NDQUlJQW9nQnF3aUMzd2dDMy9FZkNBSGg2Y2dEc1FnRDN4Q0FYMGdCNGVuYXlJQ1FRQklCRUFnQXlBQ05nSVVJQU1nQkRZQ0VDQUJRUUZCcU9VQUlBTkJFR29RQ0VFQUlRSU1Bd3NnQUNBQ05nSU1JQUJCTkdvaEFFRUJJUUlnQkVFQmFpSUVJQVZIRFFBTERBRUxJQUZCQVVHbk0wRUFFQWdMSUFOQklHb2tBQ0FDQzljR0FRWi9JQUFFUUFKQUlBQW9BZ0FFUUNBQUtBSU1JZ0VFUUNBQkVDa2dBQ2dDREJBSklBQkJBRFlDREFzZ0FDZ0NFQ0lCQkVBZ0FSQUpJQUJDQURjREVBc2dBQ2dDUUJBSklBQkNBRGNDUEF3QkN5QUFLQUlzSWdFRVFDQUJFQWtnQUVFQU5nSXNDeUFBS0FJZ0lnRUVRQ0FCRUFrZ0FFSUFOd01nQ3lBQUtBSTBJZ0ZGRFFBZ0FSQUpJQUJDQURjQ05Bc2dBQ2dDMEFFUVRpQUFLQUtjQVNJQkJFQWdBQ2dDYUNBQUtBSnNiQ0lEQkg4RFFDQUJFQ2tnQVVHTUxHb2hBU0FDUVFGcUlnSWdBMGNOQUFzZ0FDZ0NuQUVGSUFFTEVBa2dBRUVBTmdLY0FRc2dBQ2dDZENJQkJFQWdBQ2dDY0NJQ0JFQkJBQ0VCQTBBZ0FDZ0NkQ0FCUVFOMGFpZ0NBQ0lEQkVBZ0F4QUpJQUFvQW5BaEFnc2dBVUVCYWlJQklBSkpEUUFMSUFBb0FuUWhBUXNnQUVFQU5nSndJQUVRQ1NBQVFRQTJBblFMSUFBb0FvZ0JFQWtnQUVFQU5nSjRJQUJCQURZQ2lBRWdBQ2dDWkJBSklBQkJBRFlDWkNBQUxRQzhBVUVDY1VVRVFDQUFLQUtvQVJBSkN5QUFRZEFBYWtFQVFmQUFFQTRhSUFBb0FzQUJFQzBnQUVFQU5nTEFBU0FBS0FMRUFSQXRJQUJCQURZQ3dBRWdBQ2dDeUFFaUFRUkFJQUVvQWh3aUFnUkFJQUlRQ1NBQlFRQTJBaHdMSUFFb0FpZ2lBZ1JBSUFFb0FpUUVRQU5BSUFJZ0JVRW9iQ0lEYWlnQ0pDSUVCRUFnQkJBSklBRW9BaWdpQWlBRGFrRUFOZ0lrQ3lBQ0lBTnFLQUlRSWdRRVFDQUVFQWtnQVNnQ0tDSUNJQU5xUVFBMkFoQUxJQUlnQTJvb0FoZ2lCQVJBSUFRUUNTQUJLQUlvSWdJZ0EycEJBRFlDR0FzZ0JVRUJhaUlGSUFFb0FpUkpEUUFMQ3lBQ0VBa2dBVUVBTmdJb0N5QUJFQWtMSUFCQkFEWUN5QUVnQUNnQ1NCQVlJQUJCQURZQ1NDQUFLQUpNRUJnZ0FFRUFOZ0pNSUFBb0F0UUJJZ01FUUFKQUlBTW9BZ2hGRFFBZ0F5Z0NEQVJBSUFOQkFEWUNLQU5BSUFNb0FoaEJBRW9OQUFzTElBTkJBVFlDRUNBREtBSUFFQWtnQXlnQ0hDSUNSUTBBQTBBZ0FpZ0NCQ0VCSUFJUUNTQURJQUUyQWh3Z0FTSUNEUUFMQ3lBREtBSWtJZ0lFUUNBQ0tBSUVJZ1ZCQUVvRVFFRUFJUUVEUUNBQ0tBSUFJQUZCREd4cUlnUW9BZ2dpQmdSQUlBUW9BZ1FnQmhFQ0FDQUNLQUlFSVFVTElBRkJBV29pQVNBRlNBMEFDd3NnQWlnQ0FCQUpJQUlRQ1FzZ0F4QUpDeUFBUVFBMkF0UUJJQUFRQ1FzTDVnTUNDSDhFZmlBQUtBSVVLQUlBS0FJVUlBRkJ6QUJzYWlJSktBSU1JZ2dnQUNnQ0dDZ0NHQ0FCUVRSc2FpSUtOUUlFSWhCQ0FYMGlFaUFBTlFJOGZDQVFnS2NpQ3lBSUlBdEpHeUVNSUFrb0FnZ2lDQ0FLTlFJQUloRkNBWDBpRXlBQU5RSTRmQ0FSZ0tjaUNpQUlJQXBKR3lFS0lBa29BZ1FpQ0NBU0lBQTFBalI4SUJDQXB5SUxJQWdnQzBzYklRc2dDU2dDQUNJSUlCTWdBRFVDTUh3Z0VZQ25JZzBnQ0NBTlN4c2hEVUVBSVFnZ0FDZ0NJQ2dDMENzZ0FVRzRDR3hxS0FJVUlRNENRQ0FKS0FJVVFRQWdBbXRCZnlBQ0cyb2lBa1VFUUNBS0lRQWdEU0VJSUFzaEFRd0JDeUFEUVFGeElBSkJBV3NpRDNRaUNTQU5TUVJBSUEwZ0NXdXRRbjhnQXEwaUVJWkNmNFY4SUJDSXB5RUlDMEVBSVFCQkFDRUJJQU5CQVhZZ0QzUWlBeUFMU1FSQUlBc2dBMnV0UW44Z0FxMGlFSVpDZjRWOElCQ0lweUVCQ3lBSklBcEpCRUFnQ2lBSmE2MUNmeUFDclNJUWhrSi9oWHdnRUlpbklRQUxJQU1nREU4RVFFRUFJUXdNQVFzZ0RDQURhNjFDZnlBQ3JTSVFoa0ovaFh3Z0VJaW5JUXdMUVg4Z0FFRUNRUU1nRGtFQlJoc2lBbW9pQXlBQUlBTkxHeUFFUzBGL0lBSWdER29pQUNBQUlBeEpHeUFGUzNFZ0NDQUNheUlBUVFBZ0FDQUlUUnNnQmtseElBRWdBbXNpQUVFQUlBQWdBVTBiSUFkSmNRdWlBUUVHZnlBQUJFQWdBQ2dDQkNJQ0JFQWdBaEFKSUFCQkFEWUNCQXNnQVFSQUlBQWhBZ05BSUFJb0FzZ0JJZ01FUUVFQUlRVWdBaWdDeEFFaUJBUi9BMEFnQXlnQ0RDSUdCRUFnQmhBSklBTkJBRFlDRENBQ0tBTEVBU0VFQ3lBRFFSQnFJUU1nQlVFQmFpSUZJQVJKRFFBTElBSW9Bc2dCQlNBREN4QUpJQUpCQURZQ3lBRUxJQUpCOEFGcUlRSWdCMEVCYWlJSElBRkhEUUFMQ3lBQUVBa0xDOVVaQWhOL0Ezc2dBQ2dDQUNJS0lBQW9BZ3dpRFVFRmRDSUZhaUVHSUFvZ0JXc2hGaUFBS0FJUUlRVWdBQ2dDSENFTElBQW9BaFFoQ1NBQUtBSUlJUTRDUUFKQUFrQUNRQ0FEUVFoSkRRQWdBVUVQY1EwQUlBWkJEM0ZGRFFFTElBVWdDVThOQWdKQUFrQWdBMEVCYXc0Q0FBRURDd0pBSUFrZ0JXc2lDRUVZU1EwQUlBRWdCVUVDZEdvaEJ5QU5RUVYwSWdRZ0NpQUZRUVowYW1vZ0FTQUpRUUowYWtrRVFDQUhJQW9nQ1VFR2RHb2dCR3BCUEd0SkRRRUxJQVg5RWYwTUFBQUFBQUVBQUFBQ0FBQUFBd0FBQVAydUFTRVlJQVVnQ0VGOGNTSVBhaUVGUVFBaEJBTkFJQVlnR0VFRS9hc0JJaGY5R3dCQkFuUnFJQWNnQkVFQ2RHcjlBQUlBSWhuOUh3QTRBZ0FnQmlBWC9Sc0JRUUowYWlBWi9SOEJPQUlBSUFZZ0YvMGJBa0VDZEdvZ0dmMGZBamdDQUNBR0lCZjlHd05CQW5ScUlCbjlId000QWdBZ0dQME1CQUFBQUFRQUFBQUVBQUFBQkFBQUFQMnVBU0VZSUFSQkJHb2lCQ0FQUncwQUN5QUlJQTlHRFFRTElBVWhCQ0FKSUFWclFRTnhJZ2NFUUVFQUlRZ0RRQ0FHSUFSQkJuUnFJQUVnQkVFQ2RHb3FBZ0E0QWdBZ0JFRUJhaUVFSUFoQkFXb2lDQ0FIUncwQUN3c2dCU0FKYTBGOFN3MERBMEFnQmlBRVFRWjBhaUFCSUFSQkFuUnFLZ0lBT0FJQUlBWWdCRUVCYWlJRlFRWjBhaUFCSUFWQkFuUnFLZ0lBT0FJQUlBWWdCRUVDYWlJRlFRWjBhaUFCSUFWQkFuUnFLZ0lBT0FJQUlBWWdCRUVEYWlJRlFRWjBhaUFCSUFWQkFuUnFLZ0lBT0FJQUlBUkJCR29pQkNBSlJ3MEFDd3dEQ3lBQklBSkJBblJxSVFnQ1FDQUpJQVZySWc5QlBFa0VRQ0FGSVFRTUFRc2dDaUFGUVFaMElBMUJCWFJxYWlJRUlBa2dCVUYvYzJvaUIwRUdkQ0lRYWlBRVNRUkFJQVVoQkF3QkN5QUVRUVJxSWdRZ0VHb2dCRWtFUUNBRklRUU1BUXNnQjBILy8vOGZTd1JBSUFVaEJBd0JDeUFOUVFWMElnUWdDaUFGUVFaMGFtb2lCeUFCSUFJZ0NXcEJBblJxU1NBS0lBbEJCblJxSUFScVFUaHJJZ1FnQVNBQ0lBVnFRUUowYWt0eEJFQWdCU0VFREFFTElBY2dBU0FKUVFKMGFra2dBU0FGUVFKMGFpQUVTWEVFUUNBRklRUU1BUXNnQmYwUi9Rd0FBQUFBQVFBQUFBSUFBQUFEQUFBQS9hNEJJUmdnQlNBUFFYeHhJaEJxSVFSQkFDRUhBMEFnQmlBWVFRVDlxd0VpRi8wYkFFRUNkR29pRVNBQklBVWdCMnBCQW5RaURHcjlBQUlBSWhuOUh3QTRBZ0FnQmlBWC9Sc0JRUUowYWlJVElCbjlId0U0QWdBZ0JpQVgvUnNDUVFKMGFpSVVJQm45SHdJNEFnQWdCaUFYL1JzRFFRSjBhaUlWSUJuOUh3TTRBZ0FnRVNBSUlBeHEvUUFDQUNJWC9SOEFPQUlFSUJNZ0YvMGZBVGdDQkNBVUlCZjlId0k0QWdRZ0ZTQVgvUjhET0FJRUlCajlEQVFBQUFBRUFBQUFCQUFBQUFRQUFBRDlyZ0VoR0NBSFFRUnFJZ2NnRUVjTkFBc2dEeUFRUmcwREN5QUVRUUZxSVFVZ0NTQUVhMEVCY1FSQUlBWWdCRUVHZEdvaUJ5QUJJQVJCQW5RaUJHb3FBZ0E0QWdBZ0J5QUVJQWhxS2dJQU9BSUVJQVVoQkFzZ0JTQUpSZzBDQTBBZ0JpQUVRUVowYWlJRklBRWdCRUVDZENJSGFpb0NBRGdDQUNBRklBY2dDR29xQWdBNEFnUWdCaUFFUVFGcUlnVkJCblJxSWdjZ0FTQUZRUUowSWdWcUtnSUFPQUlBSUFjZ0JTQUlhaW9DQURnQ0JDQUVRUUpxSWdRZ0NVY05BQXNNQWdzZ0JTQUpUdzBCSUFFZ0FrRUNkR29oQ0FOQUlBWWdCVUVHZEdvaUJDQUJJQVZCQW5ScUtnSUFPQUlBSUFRZ0FTQUNJQVZxSWdkQkFuUnFLZ0lBT0FJRUlBUWdBU0FDSUFkcUlnZEJBblJxS2dJQU9BSUlJQVFnQVNBQ0lBZHFJZ2RCQW5ScUtnSUFPQUlNSUFRZ0FTQUNJQWRxSWdkQkFuUnFLZ0lBT0FJUUlBUWdBU0FDSUFkcUlnZEJBblJxS2dJQU9BSVVJQVFnQVNBQ0lBZHFRUUowSWdkcUtnSUFPQUlZSUFRZ0J5QUlhaW9DQURnQ0hDQUZRUUZxSWdVZ0NVY05BQXNNQVFzZ0FTQUNRUUowYWlFSUlBTkJBMFloQnlBRFFRUkdJUThnQTBFRlJpRVFJQU5CQjBZaEVRTkFJQVlnQlVFR2RHb2lCQ0FCSUFWQkFuUnFLZ0lBT0FJQUlBUWdBU0FDSUFWcUlneEJBblJxS2dJQU9BSUVJQVFnQVNBQ0lBeHFJZ3hCQW5ScUtnSUFPQUlJQWtBZ0J3MEFJQVFnQVNBQ0lBeHFJZ3hCQW5ScUtnSUFPQUlNSUE4TkFDQUVJQUVnQWlBTWFpSU1RUUowYWlvQ0FEZ0NFQ0FRRFFBZ0JDQUJJQUlnREdvaURFRUNkR29xQWdBNEFoUWdBMEVHUmcwQUlBUWdBU0FDSUF4cVFRSjBJZ3hxS2dJQU9BSVlJQkVOQUNBRUlBZ2dER29xQWdBNEFod0xJQVZCQVdvaUJTQUpSdzBBQ3dzZ0ZrRWdhaUVHSUFFZ0RrRUNkR29oQkNBQUtBSVlJUVVDUUFKQUFrQWdBMEVJU1EwQUlBUkJEM0VOQUNBR1FROXhSUTBCQ3lBRklBdFBEUUVDUUFKQUFrQWdBMEVCYXc0Q0FBRUNDd0pBSUFzZ0JXc2lBRUVjU1EwQUlBb2dCVUVHZEVFZ2NpQU5RUVYwSWdKcmFpQUJJQXNnRG1wQkFuUnFTUVJBSUFFZ0JTQU9ha0VDZEdvZ0MwRUdkQ0FDYXlBS2FrRWNhMGtOQVFzZ0JDQUZRUUowYWlFRElBWDlFZjBNQUFBQUFBRUFBQUFDQUFBQUF3QUFBUDJ1QVNFWUlBVWdBRUY4Y1NJQmFpRUZRUUFoQWdOQUlBWWdHRUVFL2FzQkloZjlHd0JCQW5ScUlBTWdBa0VDZEdyOUFBSUFJaG45SHdBNEFnQWdCaUFYL1JzQlFRSjBhaUFaL1I4Qk9BSUFJQVlnRi8wYkFrRUNkR29nR2YwZkFqZ0NBQ0FHSUJmOUd3TkJBblJxSUJuOUh3TTRBZ0FnR1AwTUJBQUFBQVFBQUFBRUFBQUFCQUFBQVAydUFTRVlJQUpCQkdvaUFpQUJSdzBBQ3lBQUlBRkdEUVFMSUFVaEFpQUxJQVZyUVFOeElnQUVRRUVBSVFFRFFDQUdJQUpCQm5ScUlBUWdBa0VDZEdvcUFnQTRBZ0FnQWtFQmFpRUNJQUZCQVdvaUFTQUFSdzBBQ3dzZ0JTQUxhMEY4U3cwREEwQWdCaUFDUVFaMGFpQUVJQUpCQW5ScUtnSUFPQUlBSUFZZ0FrRUJhaUlBUVFaMGFpQUVJQUJCQW5ScUtnSUFPQUlBSUFZZ0FrRUNhaUlBUVFaMGFpQUVJQUJCQW5ScUtnSUFPQUlBSUFZZ0FrRURhaUlBUVFaMGFpQUVJQUJCQW5ScUtnSUFPQUlBSUFKQkJHb2lBaUFMUncwQUN3d0RDeUFFSUFKQkFuUnFJUU1DUUNBTElBVnJJZ0JCeEFCSkJFQWdCU0VDREFFTElBb2dCVUVHZENJSlFTQnlJQTFCQlhRaUNHdHFJZ2NnQ3lBRlFYOXphaUlQUVFaMEloQnFJQWRKQkVBZ0JTRUNEQUVMSUFvZ0NVRWtjaUFJYTJvaUNTQVFhaUFKU1FSQUlBVWhBZ3dCQ3lBUFFmLy8veDlMQkVBZ0JTRUNEQUVMSUFvZ0JVRUdkRUVnY2lBTlFRVjBJZ2xyYWlJTklBRWdDeUFPYWlJSUlBSnFRUUowYWtrZ0MwRUdkQ0FKYXlBS2FrRVlheUlKSUFFZ0RrRUNkR29nQlVFQ2RHb2lDaUFDUVFKMGFrdHhCRUFnQlNFQ0RBRUxJQTBnQVNBSVFRSjBha2tnQ1NBS1MzRUVRQ0FGSVFJTUFRc2dCZjBSL1F3QUFBQUFBUUFBQUFJQUFBQURBQUFBL2E0QklSZ2dCU0FBUVh4eElnbHFJUUpCQUNFQkEwQWdCaUFZUVFUOXF3RWlGLzBiQUVFQ2RHb2lDaUFFSUFFZ0JXcEJBblFpRFdyOUFBSUFJaG45SHdBNEFnQWdCaUFYL1JzQlFRSjBhaUlPSUJuOUh3RTRBZ0FnQmlBWC9Sc0NRUUowYWlJSUlCbjlId0k0QWdBZ0JpQVgvUnNEUVFKMGFpSUhJQm45SHdNNEFnQWdDaUFESUExcS9RQUNBQ0lYL1I4QU9BSUVJQTRnRi8wZkFUZ0NCQ0FJSUJmOUh3STRBZ1FnQnlBWC9SOERPQUlFSUJqOURBUUFBQUFFQUFBQUJBQUFBQVFBQUFEOXJnRWhHQ0FCUVFScUlnRWdDVWNOQUFzZ0FDQUpSZzBEQ3lBQ1FRRnFJUUFnQ3lBQ2EwRUJjUVJBSUFZZ0FrRUdkR29pQVNBRUlBSkJBblFpQW1vcUFnQTRBZ0FnQVNBQ0lBTnFLZ0lBT0FJRUlBQWhBZ3NnQUNBTFJnMENBMEFnQmlBQ1FRWjBhaUlBSUFRZ0FrRUNkQ0lCYWlvQ0FEZ0NBQ0FBSUFFZ0Eyb3FBZ0E0QWdRZ0JpQUNRUUZxSWdCQkJuUnFJZ0VnQkNBQVFRSjBJZ0JxS2dJQU9BSUFJQUVnQUNBRGFpb0NBRGdDQkNBQ1FRSnFJZ0lnQzBjTkFBc01BZ3NnQkNBQ1FRSjBhaUVCSUFOQkEwWWhDU0FEUVFSR0lRb2dBMEVGUmlFTklBTkJCMFloRGdOQUlBWWdCVUVHZEdvaUFDQUVJQVZCQW5ScUtnSUFPQUlBSUFBZ0JDQUNJQVZxSWdoQkFuUnFLZ0lBT0FJRUlBQWdCQ0FDSUFocUlnaEJBblJxS2dJQU9BSUlBa0FnQ1EwQUlBQWdCQ0FDSUFocUlnaEJBblJxS2dJQU9BSU1JQW9OQUNBQUlBUWdBaUFJYWlJSVFRSjBhaW9DQURnQ0VDQU5EUUFnQUNBRUlBSWdDR29pQ0VFQ2RHb3FBZ0E0QWhRZ0EwRUdSZzBBSUFBZ0JDQUNJQWhxUVFKMElnaHFLZ0lBT0FJWUlBNE5BQ0FBSUFFZ0NHb3FBZ0E0QWh3TElBVkJBV29pQlNBTFJ3MEFDd3dCQ3lBRklBdFBEUUFnQkNBQ1FRSjBhaUVCQTBBZ0JpQUZRUVowYWlJQUlBUWdCVUVDZEdvcUFnQTRBZ0FnQUNBRUlBSWdCV29pQTBFQ2RHb3FBZ0E0QWdRZ0FDQUVJQUlnQTJvaUEwRUNkR29xQWdBNEFnZ2dBQ0FFSUFJZ0Eyb2lBMEVDZEdvcUFnQTRBZ3dnQUNBRUlBSWdBMm9pQTBFQ2RHb3FBZ0E0QWhBZ0FDQUVJQUlnQTJvaUEwRUNkR29xQWdBNEFoUWdBQ0FFSUFJZ0EycEJBblFpQTJvcUFnQTRBaGdnQUNBQklBTnFLZ0lBT0FJY0lBVkJBV29pQlNBTFJ3MEFDd3NMbXdNQkJIOGdBU0FBUVFScUlnUnFRUUZyUVFBZ0FXdHhJZ1VnQW1vZ0FDQUFLQUlBSWdGcVFRUnJUUVIvSUFBb0FnUWlBeUFBS0FJSUlnWTJBZ2dnQmlBRE5nSUVJQVFnQlVjRVFDQUFJQUJCQkdzb0FnQkJmbkZySWdNZ0JTQUVheUlFSUFNb0FnQnFJZ1UyQWdBZ0F5QUZRWHh4YWtFRWF5QUZOZ0lBSUFBZ0JHb2lBQ0FCSUFScklnRTJBZ0FMQW44Z0FTQUNRUmhxVHdSQUlBQWdBbXBCQ0dvaUF5QUJJQUpyUVFocklnRTJBZ0FnQXlBQlFYeHhha0VFYXlBQlFRRnlOZ0lBSUFNQ2Z5QURLQUlBUVFocklnRkIvd0JOQkVBZ0FVRURka0VCYXd3QkN5QUJaeUVFSUFGQkhTQUVhM1pCQkhNZ0JFRUNkR3RCN2dCcUlBRkIveDlORFFBYVFUOGdBVUVlSUFScmRrRUNjeUFFUVFGMGEwSEhBR29pQVNBQlFUOVBHd3NpQVVFRWRDSUVRYURHQVdvMkFnUWdBeUFFUWFqR0FXb2lCQ2dDQURZQ0NDQUVJQU0yQWdBZ0F5Z0NDQ0FETmdJRVFhak9BVUdvemdFcEF3QkNBU0FCcllhRU53TUFJQUFnQWtFSWFpSUJOZ0lBSUFBZ0FVRjhjV29NQVFzZ0FDQUJhZ3RCQkdzZ0FUWUNBQ0FBUVFScUJVRUFDd3ZDQVFFRGZ3SkFJQUVnQWlnQ0VDSURCSDhnQXdVZ0FoQTNEUUVnQWlnQ0VBc2dBaWdDRkNJRWEwc0VRQ0FDSUFBZ0FTQUNLQUlrRVFBQUR3c0NRQUpBSUFJb0FsQkJBRWdOQUNBQlJRMEFJQUVoQXdOQUlBQWdBMm9pQlVFQmF5MEFBRUVLUndSQUlBTkJBV3NpQXcwQkRBSUxDeUFDSUFBZ0F5QUNLQUlrRVFBQUlnUWdBMGtOQWlBQklBTnJJUUVnQWlnQ0ZDRUVEQUVMSUFBaEJVRUFJUU1MSUFRZ0JTQUJFQXNhSUFJZ0FpZ0NGQ0FCYWpZQ0ZDQUJJQU5xSVFRTElBUUxXUUVCZnlBQUlBQW9Ba2dpQVVFQmF5QUJjallDU0NBQUtBSUFJZ0ZCQ0hFRVFDQUFJQUZCSUhJMkFnQkJmdzhMSUFCQ0FEY0NCQ0FBSUFBb0Fpd2lBVFlDSENBQUlBRTJBaFFnQUNBQklBQW9BakJxTmdJUVFRQUx6QUlCQkg4Z0FTQUEvUUFDQVAwTEFnQWdBU2dDR0NJQ0JFQWdBU2dDRUNJREJIOUJBQ0VDQTBBZ0FTZ0NHQ0FDUVRSc2FpZ0NMQ0lFQkVBZ0JCQUpJQUVvQWhBaEF3c2dBa0VCYWlJQ0lBTkpEUUFMSUFFb0FoZ0ZJQUlMRUFrZ0FVRUFOZ0lZQ3lBQklBQW9BaEFpQWpZQ0VDQUJJQUpCTkd3UURTSUNOZ0lZSUFJRVFDQUJLQUlRQkVCQkFDRURBMEFnQWlBRFFUUnNJZ1ZxSWdJZ0FDZ0NHQ0FGYWlJRS9RQUNBUDBMQWdBZ0FpQUVLQUl3TmdJd0lBSWdCUDBBQWlEOUN3SWdJQUlnQlAwQUFoRDlDd0lRSUFFb0FoZ2lBaUFGYWtFQU5nSXNJQU5CQVdvaUF5QUJLQUlRU1EwQUN3c2dBU0FBS0FJVU5nSVVJQUVnQUNnQ0lDSUNOZ0lnSUFJRVFDQUJJQUlRRFNJQ05nSWNJQUpGQkVBZ0FVSUFOd0ljRHdzZ0FpQUFLQUljSUFBb0FpQVFDeG9QQ3lBQlFRQTJBaHdQQ3lBQlFRQTJBaEFnQVVFQU5nSVlDd1FBUVFFTHhnRUJBMzhEUUNBQVFRUjBJZ0ZCcE1ZQmFpQUJRYURHQVdvaUFqWUNBQ0FCUWFqR0FXb2dBallDQUNBQVFRRnFJZ0JCd0FCSERRQUxRVEFRWmhvakFFRVFheUlBSkFBQ1FDQUFRUXhxSUFCQkNHb1FBdzBBUWJET0FVRUlJQUFvQWd4QkFuUkJCR29RR3lJQk5nSUFJQUZGRFFCQkNDQUFLQUlJRUJzaUFRUkFRYkRPQVNnQ0FDSUNJQUFvQWd4QkFuUnFRUUEyQWdBZ0FpQUJFQUpGRFFFTFFiRE9BVUVBTmdJQUN5QUFRUkJxSkFCQnpNNEJRU28yQWdCQmxNOEJRZGpQQVRZQ0FBdVFCZ0lGZndON0l3QkJFR3NpQmlRQUFuOGdBQ2dDQ0VFUVJnUkFJQUFvQXB3QklBQW9Bc3dCUVl3c2JHb01BUXNnQUNnQ0RBc2hBQUpBSUFNb0FnQWlCVVVFUUVFQUlRSWdCRUVCUWNBVFFRQVFDQXdCQ3lBQUtBTFFLeUVKSUFNZ0JVRUJhellDQUNBQ0lBWkJER3BCQVJBS0lBa2dBVUc0Q0d4cUlnY2dCaWdDRENJQVFRVjJOZ0trQmlBSElBQkJIM0VpQVRZQ0dDQUNRUUZxSVFBZ0F3Si9BbjhDUUFKL0FrQUNRQ0FCRGdJQUF3RUxJQU1vQWdBTUFRc2dBeWdDQUVFQmRnc2lCVUhpQUU4RWZ5QUdRdUdBZ0lDUUREY0NCQ0FHSUFVMkFnQWdCRUVDUWRYNEFDQUdFQWdnQnlnQ0dBVWdBUXNFUUNBRklnRU5BVUVBREFJTElBVUVRQ0FIUVJ4cUlRRkJBQ0VDQTBBZ0FDQUdRUXhxUVFFUUNpQUNRZUFBVFFSQUlBWW9BZ3doQkNBQklBSkJBM1JxSWdoQkFEWUNCQ0FJSUFSQkEzWTJBZ0FMSUFCQkFXb2hBQ0FDUVFGcUlnSWdCVWNOQUFzTFFRQWhBaUFES0FJQUlnQWdCVWtOQXlBQUlBVnJEQUlMSUFkQkhHb2hCRUVBSVFJRFFDQUFJQVpCREdwQkFoQUtJQUpCNEFCTkJFQWdCQ0FDUVFOMGFpSUZJQVlvQWd3aUNFSC9EM0UyQWdRZ0JTQUlRUXQyTmdJQUN5QUFRUUpxSVFBZ0FrRUJhaUlDSUFGSERRQUxJQUZCQVhRTElRQkJBQ0VDSUFNb0FnQWlBU0FBU1EwQklBRWdBR3NMTmdJQVFRRWhBaUFIS0FJWVFRRkhEUUFnQjBFY2FpRUVJQWY5Q1FJY0lRd2dCeWdDSUNFRC9Rd0JBQUFBQWdBQUFBTUFBQUFFQUFBQUlRdEJBQ0VCQTBBZ0JDQUJRUU4wYWlJQVFSaHFJQXdnQy8wTS8vLy8vLy8vLy8vLy8vLy8vLy8vLy8ydUFTSUsvUnNBUVFOdS9SRWdDdjBiQVVFRGJ2MGNBU0FLL1JzQ1FRTnUvUndDSUFyOUd3TkJBMjc5SEFQOXNRSDlEQUFBQUFBQUFBQUFBQUFBQUFBQUFBRDl1QUVpQ3YxYUFnQUNJQUJCRUdvZ0N2MWFBZ0FCSUFCQkNHb2dDdjFhQWdBQUlBUWdBVUVFYWlJQlFRTjBhaUlGSUFyOVdnSUFBeUFBSUFNMkFod2dBQ0FETmdJVUlBQWdBellDRENBRklBTTJBZ1FnQy8wTUJBQUFBQVFBQUFBRUFBQUFCQUFBQVAydUFTRUxJQUZCNEFCSERRQUxDeUFHUVJCcUpBQWdBZ3VmQmdFR2Z5TUFRU0JySWdZa0FBSi9JQUFvQWdoQkVFWUVRQ0FBS0FLY0FTQUFLQUxNQVVHTUxHeHFEQUVMSUFBb0Fnd0xJUVVDUUNBREtBSUFRUVJOQkVCQkFDRUFJQVJCQVVHZEUwRUFFQWdNQVFzZ0FpQUZLQUxRS3lBQlFiZ0liR29pQlNJSlFRUnFRUUVRQ2lBRklBVW9BZ1JCQVdvaUJ6WUNCQ0FIUVNKUEJFQWdCa0VoTmdJRUlBWWdCellDQUNBRVFRRkIrVGtnQmhBSVFRQWhBQXdCQ3lBSElBQW9BcUFCSWdoTkJFQWdCaUFITmdJWUlBWWdDRFlDRkNBR0lBRTJBaEFnQkVFQlFjVDdBQ0FHUVJCcUVBZ2dBQ0FBS0FJSVFZQ0FBbkkyQWdoQkFDRUFEQUVMSUFKQkFXb2dCVUVJYWtFQkVBb2dCU0FGS0FJSVFRSnFOZ0lJSUFKQkFtb2dCVUVNYWtFQkVBb2dCU0FGS0FJTVFRSnFJZ0EyQWd3Q1FBSkFJQVVvQWdnaUFVRUtTdzBBSUFCQkNrc05BQ0FBSUFGcVFRMUpEUUVMUVFBaEFDQUVRUUZCd3lsQkFCQUlEQUVMSUFKQkEyb2dCVUVRYWtFQkVBb2dCUzBBRUVHQUFYRUVRRUVBSVFBZ0JFRUJRWXN5UVFBUUNBd0JDeUFDUVFScUlBVkJGR3BCQVJBS0lBVW9BaFJCQWs4RVFFRUFJUUFnQkVFQlFjb3hRUUFRQ0F3QkN5QURJQU1vQWdCQkJXc2lCellDQUVFQklRQWdCU2dDQkNFQklBVXRBQUJCQVhGRkJFQWdBVVVOQVNBRlFiQUhhaUVCSUFWQnJBWnFJUUpCQUNFRkEwQWdBaUFGUVFKMElnQnFRUTgyQWdBZ0FDQUJha0VQTmdJQVFRRWhBQ0FGUVFGcUlnVWdDU2dDQkVrTkFBc01BUXNnQVNBSFRRUkFBa0FnQVVVRVFFRUFJUUVNQVFzZ0FrRUZhaUFHUVJ4cVFRRVFDaUFGSUFZb0Fod2lBRUVFZGpZQ3NBY2dCU0FBUVE5eE5nS3NCaUFGS0FJRUlnRkJBazhFUUNBRlFiQUhhaUVISUFWQnJBWnFJUWdnQWtFR2FpRUFRUUVoQlFOQUlBQWdCa0VjYWtFQkVBb0NRQ0FHS0FJY0lnRkJFRThFUUNBQlFROXhJZ0lOQVF0QkFDRUFJQVJCQVVId0xVRUFFQWdNQlFzZ0NDQUZRUUowSWdwcUlBSTJBZ0FnQnlBS2FpQUJRUVIyTmdJQUlBQkJBV29oQUNBRlFRRnFJZ1VnQ1NnQ0JDSUJTUTBBQ3dzZ0F5Z0NBQ0VIQ3lBRElBY2dBV3MyQWdCQkFTRUFEQUVMUVFBaEFDQUVRUUZCblJOQkFCQUlDeUFHUVNCcUpBQWdBQXRTQUNBQklBQXRBQUE2QUFjZ0FTQUFMUUFCT2dBR0lBRWdBQzBBQWpvQUJTQUJJQUF0QUFNNkFBUWdBU0FBTFFBRU9nQURJQUVnQUMwQUJUb0FBaUFCSUFBdEFBWTZBQUVnQVNBQUxRQUhPZ0FBQzVJQkFRUi9JQUFnQVRZQ29BRUNRQ0FBS0FKSUlnTkZEUUFnQXlnQ0dDSUdSUTBBSUFBb0Fnd2lCRVVOQUNBRUtBTFFLMFVOQUNBREtBSVFJZ1JGQkVCQkFROExRUUFoQXdOQUlBRWdBQ2dDRENnQzBDc2dBMEc0Q0d4cUtBSUVUd1JBSUFKQkFVR2p4QUJCQUJBSVFRQVBDeUFHSUFOQk5HeHFJQUUyQWloQkFTRUZJQU5CQVdvaUF5QUVSdzBBQ3dzZ0JRdXNCd0lKZndoK0l3QkJFR3NpQ2lRQUFrQWdBa1VFUUNBRFFRRkJpdFlBUVFBUUNBd0JDeUFDS0FJUUlnc2dBQ2dDU0NJR0tBSVFTUVJBSUFOQkFVR1F6Z0JCQUJBSURBRUxJQVFnQUNnQ2FDSUZJQUFvQW14c0lnZFBCRUFnQ2lBRU5nSUFJQW9nQjBFQmF6WUNCQ0FEUVFGQmgvc0FJQW9RQ0VFQUlRVU1BUXNnQWlBQUtBSlVJQVFnQlNBRUlBVnVJZ2RzYXlJSUlBQW9BbHhzYWlJRk5nSUFJQUlnQlNBR0tBSUFJZ1lnQlNBR1N4c2lCallDQUNBQ0lBQW9BbFFnQUNnQ1hDQUlRUUZxYkdvaUJUWUNDQ0FDSUFVZ0FDZ0NTQ2dDQ0NJSUlBVWdDRWtiSWdnMkFnZ2dBaUFBS0FKWUlBQW9BbUFnQjJ4cUlnVTJBZ1FnQWlBRklBQW9Ba2dvQWdRaUNTQUZJQWxMR3lJSk5nSUVJQUlnQUNnQ1dDQUFLQUpnSUFkQkFXcHNhaUlGTmdJTUlBSWdCU0FBS0FKSUtBSU1JZ2NnQlNBSFNSc2lCVFlDRENBQUtBSklJZ3dvQWhBaUJ3UkFJQVdzUWdGOUlSRWdDS3hDQVgwaEVpQUpyVUlCZlNFVElBYXRRZ0Y5SVJRZ0RDZ0NHQ0VJSUFJb0FoZ2hCVUVBSVFZRFFDQUZJQWdnQmtFMGJHb29BaWdpQ1RZQ0tDQUZJQlFnQlNnQ0FDSU1yU0lPZkNBT2dDSVZQZ0lRSUFVZ0V5QUZLQUlFSWcydElnNThJQTZBSWhBK0FoUWdCVUovSUFtdElnNkdJZzhnRU1SOUlBNkhweUFQSUJFZ0Rhd2lFSHdnRUgvRWZTQU9oNmRyTmdJTUlBVWdEeUFWeEgwZ0RvZW5JQThnRWlBTXJDSVBmQ0FQZjhSOUlBNkhwMnMyQWdnZ0JVRTBhaUVGSUFaQkFXb2lCaUFIUncwQUN3c2dCeUFMU1FSQUlBSW9BaGdoQlFOQUlBVWdCMEUwYkNJR2FpZ0NMQkFKSUFJb0FoZ2lCU0FHYWtFQU5nSXNJQWRCQVdvaUJ5QUNLQUlRU1EwQUN5QUNJQUFvQWtnb0FoQTJBaEFMSUFBb0Frd2lCUVJBSUFVUUdBc2dBRUVCUVNRUURDSUhOZ0pNUVFBaEJTQUhSUTBBSUFJZ0J4QTRJQUFnQkRZQ0xDQUFLQUxBQVVFWElBTVFIa1VOQUNBQUtBTEFBU0lFS0FJQUlRWWdCQ2dDQ0NFSEFrQWdCZ1JBUVFFaEJTQUdRUUZ4SVFzZ0JrRUJSZ1IvUVFBRklBWkJmbkVoQ0VFQUlRWURRQUovUVFBZ0JVVU5BQnBCQUNBQUlBRWdBeUFIS0FJQUVRQUFSUTBBR2lBQUlBRWdBeUFIS0FJRUVRQUFRUUJIQ3lFRklBZEJDR29oQnlBR1FRSnFJZ1lnQ0VjTkFBc2dCVUVCY3dzaEJnSkFBa0FnQ3dSQUlBWU5BU0FBSUFFZ0F5QUhLQUlBRVFBQVFRQkhJUVVMSUFSQkFEWUNBQ0FGUVFGeFJRMEJEQU1MSUFSQkFEWUNBQXNnQUNnQ1NCQVlRUUFoQlNBQVFRQTJBa2dNQWdzZ0JFRUFOZ0lBQ3lBQUlBSVFRQ0VGQ3lBS1FSQnFKQUFnQlF2eUF3RUZmd0pBQWtBZ0FDZ0NQQ0lDUlFSQUlBRW9BaEFOQVVFQkR3c2dBa0UwYkJBTklnVkZEUUVnQVNnQ0VBUkFJQUVvQWhnaEFnTkFJQUlnQTBFMGJDSUVhaWdDTEJBSklBRW9BaGdpQWlBRWFrRUFOZ0lzSUFOQkFXb2lBeUFCS0FJUUlnUkpEUUFMQ3lBQklBQW9BandFZnlBQUtBSk1LQUlZSVFOQkFDRUNBMEFnQlNBQ1FUUnNhaUlFSUFNZ0FDZ0NRQ0FDUVFKMGFpZ0NBRUUwYkNJR2FpSUQvUUFDQVAwTEFnQWdCQ0FES0FJd05nSXdJQVFnQS8wQUFpRDlDd0lnSUFRZ0EvMEFBaEQ5Q3dJUUlBUWdBQ2dDVENnQ0dDSURJQVpxSWdZb0FpUTJBaVFnQkNBR0tBSXNOZ0lzSUFaQkFEWUNMQ0FDUVFGcUlnSWdBQ2dDUENJR1NRMEFDeUFCS0FJUUJTQUVDd1IvSUFBb0Frd29BaGdoQWtFQUlRTURRQ0FDSUFOQk5Hd2lCR29vQWl3UUNTQUFLQUpNS0FJWUlnSWdCR3BCQURZQ0xDQURRUUZxSWdNZ0FTZ0NFRWtOQUFzZ0FDZ0NQQVVnQmdzMkFoQWdBU2dDR0JBSklBRWdCVFlDR0VFQkR3c2dBU2dDR0NFRUlBQW9Ba3dvQWhnaEEwRUFJUUlEUUNBRUlBSkJOR3dpQldvaUJDQURJQVZxS0FJa05nSWtJQVFvQWl3UUNTQUJLQUlZSWdRZ0JXb2dBQ2dDVENnQ0dDSURJQVZxSWdVb0FpdzJBaXdnQlVFQU5nSXNJQUpCQVdvaUFpQUJLQUlRU1EwQUMwRUJEd3NnQUNnQ1NCQVlJQUJCQURZQ1NFRUFDODRFQVFoL0FrQWdBa1VOQUFKQUlBQW9BcUFCSWdWRkRRQWdBQ2dDU0NJRVJRMEFJQVFvQWhCRkRRQWdCQ2dDR0NnQ0tDQUZSdzBBSUFJb0FoQWlDRVVOQUNBQ0tBSVlJZ1lvQWlnTkFDQUdLQUlzRFFCQkFDRUVJQWhCQ0U4RVFDQUlRWGh4SVFrRFFDQUdJQVJCTkd4cUlBVTJBaWdnQmlBRVFRRnlRVFJzYWlBRk5nSW9JQVlnQkVFQ2NrRTBiR29nQlRZQ0tDQUdJQVJCQTNKQk5HeHFJQVUyQWlnZ0JpQUVRUVJ5UVRSc2FpQUZOZ0lvSUFZZ0JFRUZja0UwYkdvZ0JUWUNLQ0FHSUFSQkJuSkJOR3hxSUFVMkFpZ2dCaUFFUVFkeVFUUnNhaUFGTmdJb0lBUkJDR29oQkNBS1FRaHFJZ29nQ1VjTkFBc0xJQWhCQjNFaUNBUkFBMEFnQmlBRVFUUnNhaUFGTmdJb0lBUkJBV29oQkNBTFFRRnFJZ3NnQ0VjTkFBc0xJQUlnQXhBd0RRQkJBQThMSUFBb0Frd2lCVVVFUUNBQVFRRkJKQkFNSWdVMkFrd2dCVVVOQVFzZ0FpQUZFRGdnQUNnQ3dBRkJGaUFERUI1RkRRQWdBQ2dDd0FFaUJpZ0NBQ0VFSUFZb0FnZ2hCUUpBSUFRRVFFRUJJUWNnQkVFQmNTRUlJQVJCQVVZRWYwRUFCU0FFUVg1eElRbEJBQ0VFQTBBQ2YwRUFJQWRGRFFBYVFRQWdBQ0FCSUFNZ0JTZ0NBQkVBQUVVTkFCb2dBQ0FCSUFNZ0JTZ0NCQkVBQUVFQVJ3c2hCeUFGUVFocUlRVWdCRUVDYWlJRUlBbEhEUUFMSUFkQkFYTUxJUVFDUUFKQUlBZ0VRQ0FFRFFFZ0FDQUJJQU1nQlNnQ0FCRUFBRUVBUnlFSEN5QUdRUUEyQWdBZ0IwRUJjVVVOQVF3REN5QUdRUUEyQWdBTElBQW9Ba2dRR0NBQVFRQTJBa2hCQUE4TElBWkJBRFlDQUFzZ0FDQUNFRUFoQndzZ0J3djRCQUVHZndKQVFRRkJNQkFNSWdJRWZ5QUNJQUFvQXNnQklnSDlBQU1BL1FzREFDQUNJQUVwQXhBM0F4QWdBaUFCS0FJWUlnRTJBaGdnQWlBQlFSaHNFQTBpQVRZQ0hDQUJSUVJBSUFJUUNVRUFEd3NDUUNBQUtBTElBU2dDSENJREJFQWdBU0FESUFJb0FoaEJHR3dRQ3hvTUFRc2dBUkFKSUFKQkFEWUNIQXNnQWlBQUtBTElBU2dDSkNJQk5nSWtJQUlnQVVFb0VBd2lBVFlDS0NBQlJRUkFJQUlvQWh3UUNTQUNFQWxCQUE4TEFrQWdBQ2dDeUFFb0FpZ0VRQ0FDS0FJa1JRMEJBMEFnQVNBRlFTaHNJZ05xSUFBb0FzZ0JLQUlvSUFOcUtBSVVJZ0UyQWhRZ0FVRVliQkFOSVFFZ0FpZ0NLQ0lFSUFOcUlnWWdBVFlDR0NBQlJRUkFJQVVFZjBFQUlRRURRQ0FDS0FJb0lBRkJLR3hxS0FJWUVBa2dBVUVCYWlJQklBVkhEUUFMSUFJb0FpZ0ZJQVFMRUFrTUJRc0NRQ0FBS0FMSUFTZ0NLQ0FEYWlnQ0dDSUVCRUFnQVNBRUlBWW9BaFJCR0d3UUN4b2dBaWdDS0NFQkRBRUxJQUVRQ1NBQ0tBSW9JZ0VnQTJwQkFEWUNHQXNnQVNBRGFpQUFLQUxJQVNnQ0tDQURhaWdDQkNJQk5nSUVJQUZCR0d3UURTRUJJQUlvQWlnaUJDQURhaUlHSUFFMkFoQWdBVVVFUUNBRkJIOUJBQ0VCQTBBZ0FVRW9iQ0lBSUFJb0FpaHFLQUlZRUFrZ0FpZ0NLQ0FBYWlnQ0VCQUpJQUZCQVdvaUFTQUZSdzBBQ3lBQ0tBSW9CU0FFQ3hBSkRBVUxBa0FnQUNnQ3lBRW9BaWdnQTJvb0FoQWlCQVJBSUFFZ0JDQUdLQUlFUVJoc0VBc2FJQUlvQWlnaEFRd0JDeUFCRUFrZ0FpZ0NLQ0lCSUFOcVFRQTJBaEFMSUFFZ0EycENBRGNDSUNBRlFRRnFJZ1VnQWlnQ0pFa05BQXNNQVFzZ0FSQUpJQUpCQURZQ0tBc2dBZ1ZCQUFzUEN5QUNLQUljRUFrZ0FoQUpRUUFMb0FZQ0RuOEJleU1BUVJCcklnZ2tBQ0FBS0FKSUtBSVFJUTBnQ0VFQlFUZ1FEQ0lCTmdJTUFrQWdBVVVOQUNBQklBQW9Ba2dvQWhBaUNUWUNHQ0FCSUFEOUFBSlUvUXNDQUNBQklBQW9BbWcyQWhBZ0FDZ0NiQ0VDSUFGQkFEWUNOQ0FCSUFJMkFoUWdBU0FBS0FJTUlnd29BZ0EyQWlBZ0FTQU1LQUlFTmdJa0lBRWdEQ2dDQ0RZQ0tDQUJJQXdvQWhBMkFpd2dBU0FKUWJnSUVBd2lBRFlDTUNBQUJFQWdEUVJBQTBBZ0RrRzRDR3dpQUNBQktBSXdhaUlGSUF3b0F0QXJJQUJxSWdUOUFBSUFJZy85Q3dJRUlBVWdCQ2dDRURZQ0ZDQUZJQVFvQWhRMkFoZ2dELzBiQVNJQVFTQk5CRUFnQlVHMEIyb2dCRUd3QjJvZ0FCQUxHaUFGUWJBR2FpQUVRYXdHYWlBRUtBSUVFQXNhQ3lBRklBUW9BaGdpQURZQ0hDQUZJQVFvQXFRR05nS29Ca0VCSVFZQ1FDQUFRUUZIQkVBZ0JDZ0NCRUVEYkNJQVFRTnJRZDhBU3cwQklBQkJBbXNoQmdzZ0JVR2tBMm9oQ1NBRlFTQnFJUW9nQkVFY2FpRUxRUUFoQUFKQUlBWkJDRWtOQUNBRUlBWkJBM1JxUVJ4cUlBcExCRUFnQ3lBRklBWkJBblJxUWFRRGFra05BUXNnQmtGOGNTRUFRUUFoQWdOQUlBb2dBa0VDZENJRGFpQUxJQUpCQTNScUlnZEJIR29nQjBFVWFpQUhRUXhxSUFmOUNRSUUvVllDQUFIOVZnSUFBdjFXQWdBRC9Rc0NBQ0FESUFscUlBZEJHR29nQjBFUWFpQUhRUWhxSUFmOUNRSUEvVllDQUFIOVZnSUFBdjFXQWdBRC9Rc0NBQ0FDUVFScUlnSWdBRWNOQUFzZ0FDQUdSZzBCQ3lBQVFRRnlJUU1nQmtFQmNRUkFJQW9nQUVFQ2RDSUNhaUFMSUFCQkEzUnFJZ0FvQWdRMkFnQWdBaUFKYWlBQUtBSUFOZ0lBSUFNaEFBc2dBeUFHUmcwQUEwQWdDaUFBUVFKMElnSnFJQXNnQUVFRGRHb2lBeWdDQkRZQ0FDQUNJQWxxSUFNb0FnQTJBZ0FnQ2lBQVFRRnFJZ05CQW5RaUFtb2dDeUFEUVFOMGFpSURLQUlFTmdJQUlBSWdDV29nQXlnQ0FEWUNBQ0FBUVFKcUlnQWdCa2NOQUFzTElBVWdCQ2dDcUFZMkFxd0dJQTVCQVdvaURpQU5SdzBBQ3dzZ0FTRUREQUVMSUFoQkRHb0VRQ0FJS0FJTUlnRW9BakFpQUFSL0lBQVFDU0FJS0FJTUJTQUJDeEFKSUFoQkFEWUNEQXNMSUFoQkVHb2tBQ0FEQy9rRUFRaC9Jd0JCZ0FKcklnTWtBQ0FBQkVCQi9BeEJFU0FDRUJVZ0F5QUFLQUlBTmdMd0FTQUNRWm9SSUFOQjhBRnFFQThnQXlBQUtBSUVOZ0xnQVNBQ1FhY1JJQU5CNEFGcUVBOGdBeUFBS0FJSU5nTFFBU0FDUVlJM0lBTkIwQUZxRUE4Z0F5QUFLQUlRTmdMQUFTQUNRZjBRSUFOQndBRnFFQThnQVVFQVNnUkFBMEFnQUNnQzBDc2hCQ0FESUFjMkFyQUJJQUpCb2cwZ0EwR3dBV29RRHlBRElBUWdCMEc0Q0d4cUlnUW9BZ0EyQXFBQklBSkJtUkVnQTBHZ0FXb1FEeUFESUFRb0FnUTJBcEFCSUFKQjlEY2dBMEdRQVdvUUR5QURJQVFvQWdnMkFvQUJJQUpCb0RZZ0EwR0FBV29RRHlBRElBUW9BZ3cyQW5BZ0FrR3dOaUFEUWZBQWFoQVBJQU1nQkNnQ0VEWUNZQ0FDUVlnUklBTkI0QUJxRUE4Z0F5QUVLQUlVTmdKUUlBSkJ0amdnQTBIUUFHb1FEMEhWQzBFWElBSVFGU0FFS0FJRUJFQWdCRUd3QjJvaEJpQUVRYXdHYWlFSVFRQWhCUU5BSUFnZ0JVRUNkQ0lKYWlnQ0FDRUtJQU1nQmlBSmFpZ0NBRFlDUkNBRElBbzJBa0FnQWtHTERDQURRVUJyRUE4Z0JVRUJhaUlGSUFRb0FnUkpEUUFMQ3lBQ0VHY2dBeUFFS0FJWU5nSXdJQUpCd0RZZ0EwRXdhaEFQSUFNZ0JDZ0NwQVkyQWlBZ0FrSHhOaUFEUVNCcUVBOUJBU0VHUWUwTFFSUWdBaEFWQWtBZ0JDZ0NHRUVCUndSQUlBUW9BZ1FpQlVFQVRBMEJJQVZCQTJ4QkFtc2hCZ3NnQkVFY2FpRUlRUUFoQlFOQUlBTWdDQ0FGUVFOMGFpa0NBRUlnaVRjREVDQUNRWXNNSUFOQkVHb1FEeUFGUVFGcUlnVWdCa2NOQUFzTElBSVFaeUFESUFRb0FxZ0dOZ0lBSUFKQjREWWdBeEFQUVprTVFRVWdBaEFWSUFkQkFXb2lCeUFCUncwQUN3dEJtZ3hCQkNBQ0VCVUxJQU5CZ0FKcUpBQUw1Z29EQ1g4QmV3RitJd0JCc0FGcklnVWtBQUpBSUFGQmdBTnhCRUJCbmkxQkN5QUNFQlVNQVFzQ1FDQUJRUUZ4UlEwQUlBQW9Ba2dpQmtVTkFDTUFRZEFBYXlJREpBQkI3Z3hCRFNBQ0VCVWdBMEVBT2dCUElBTkJDVG9BVGlBRElBWXBBZ0EzQWtRZ0F5QURRYzRBYWlJRU5nSkFJQUpCaGprZ0EwRkFheEFQSUFNZ0Jpa0NDRGNDTkNBRElBUTJBakFnQWtIMU9DQURRVEJxRUE4Z0F5QUdLQUlRTmdJa0lBTWdCRFlDSUNBQ1FaTTNJQU5CSUdvUUR3SkFJQVlvQWhoRkRRQWdCaWdDRUVVTkFBTkFJQU1nQTBIT0FHb2lDallDRUNBRElBYzJBaFFnQWtHT0RTQURRUkJxRUE4Z0JpZ0NHQ0FIUVRSc2FpRUlJd0JCTUdzaUJDUUFJQVJCQ1RzQUxpQUVRUWs2QUMwZ0JDQUlLUUlBTndJa0lBUWdCRUV0YWlJSk5nSWdJQUpCenpZZ0JFRWdhaEFQSUFRZ0NDZ0NHRFlDRkNBRUlBazJBaEFnQWtIRk9DQUVRUkJxRUE4Z0JDQUlLQUlnTmdJRUlBUWdDVFlDQUNBQ1FhbzRJQVFRRHlBRVFUQnFKQUFnQXlBS05nSUFJQUpCbEF3Z0F4QVBJQWRCQVdvaUJ5QUdLQUlRU1EwQUN3dEJuQXhCQWlBQ0VCVWdBMEhRQUdva0FBc0NRQ0FCUVFKeFJRMEFJQUFvQWtoRkRRQkIrUTFCSkNBQ0VCVWdCU0FBS1FKVU53T2dBU0FDUWVjUklBVkJvQUZxRUE4Z0JTQUFLUUpjTndPUUFTQUNRY1VSSUFWQmtBRnFFQThnQlNBQUtRTm9Od09BQVNBQ1FkY1JJQVZCZ0FGcUVBOGdBQ2dDRENBQUtBSklLQUlRSUFJUVJFR2NERUVDSUFJUUZRc0NRQ0FCUVFoeFJRMEFJQUFvQWtoRkRRQWdBQ2dDYUNBQUtBSnNiQ0lFUlEwQUlBQW9BcHdCSVFNRFFDQURJQUFvQWtnb0FoQWdBaEJFSUFOQmpDeHFJUU1nQzBFQmFpSUxJQVJIRFFBTEN5QUJRUkJ4UlEwQUlBQW9Bc2dCSVFGQjB3MUJKU0FDRUJVZ0JTQUIvUUFEQVAwTEJIQWdBa0hKS3lBRlFmQUFhaEFQUWNFTlFSRWdBaEFWQWtBZ0FTZ0NIRVVOQUNBQktBSVlSUTBBUVFBaEF3TkFJQUVvQWh3Z0EwRVliR29pQUM4QkFDRUVJQUFwQXdnaERTQUZJQUFvQWhBMkFtQWdCU0FOTndOWUlBVWdCRFlDVUNBQ1FZczRJQVZCMEFCcUVBOGdBMEVCYWlJRElBRW9BaGhKRFFBTEMwR2FERUVFSUFJUUZRSkFJQUVvQWlnaUJFVU5BQ0FCS0FJa0lnZEZEUUJCQUNFRFFRQWhBQUpBSUFkQkJFOEVRQ0FIUVh4eElRQURRQ0FFSUFOQkEzSkJLR3hxUVFScUlBUWdBMEVDY2tFb2JHcEJCR29nQkNBRFFRRnlRU2hzYWtFRWFpQUVJQU5CS0d4cS9Ra0NCUDFXQWdBQi9WWUNBQUw5VmdJQUF5QU0vYTRCSVF3Z0EwRUVhaUlESUFCSERRQUxJQXdnRENBTS9RMElDUW9MREEwT0R3QUJBZ01BQVFJRC9hNEJJZ3dnRENBTS9RMEVCUVlIQUFFQ0F3QUJBZ01BQVFJRC9hNEIvUnNBSVFNZ0FDQUhSZzBCQ3dOQUlBUWdBRUVvYkdvb0FnUWdBMm9oQXlBQVFRRnFJZ0FnQjBjTkFBc0xJQU5GRFFCQnNBMUJFQ0FDRUJVZ0FTZ0NKQVJBSUFFb0FpZ2hBRUVBSVFjRFFDQUZJQUFnQjBFb2JDSUVhaWdDQkNJR05nSkVJQVVnQnpZQ1FDQUNRZEU0SUFWQlFHc1FEeUFCS0FJb0lRQUNRQ0FHUlEwQVFRQWhBeUFBSUFScUtBSVFSUTBBQTBBZ0FTZ0NLQ0FFYWlnQ0VDQURRUmhzYWlJQS9RQURBQ0VNSUFVZ0FDa0RFRGNET0NBRklBejlDd01vSUFVZ0F6WUNJQ0FDUVlEUkFDQUZRU0JxRUE4Z0EwRUJhaUlESUFaSERRQUxJQUVvQWlnaEFBc0NRQ0FBSUFScUlnWW9BaGhGRFFCQkFDRURJQVlvQWhSRkRRQURRQ0FBSUFScUtBSVlJQU5CR0d4cUlnQXZBUUFoQmlBQUtRTUlJUTBnQlNBQUtBSVFOZ0lRSUFVZ0RUY0RDQ0FGSUFZMkFnQWdBa0dMT0NBRkVBOGdBMEVCYWlJRElBRW9BaWdpQUNBRWFpZ0NGRWtOQUFzTElBZEJBV29pQnlBQktBSWtTUTBBQ3d0Qm1neEJCQ0FDRUJVTFFad01RUUlnQWhBVkN5QUZRYkFCYWlRQUM0OENBUU4vQWtCQkFVSG9BUkFNSWdFRWZ5QUJRUUUyQWdBZ0FVRUJOZ0s0QVNBQklBRXRBTHdCUVFaeU9nQzhBU0FCUVFGQmpDd1FEQ0lBTmdJTUlBQkZEUUVnQVVFQlFlZ0hFQXdpQURZQ0VDQUFSUTBCSUFGQ0FEY0RNQ0FCUVg4MkFpd2dBVUhvQnpZQ0ZBSkFRUUZCTUJBTUlnQUVRQ0FBUVFBMkFoZ2dBRUhrQURZQ0lDQUFRZVFBUVJnUURDSUNOZ0ljSUFJTkFTQUFFQWtMSUFGQkFEWUN5QUVNQWdzZ0FFRUFOZ0lvSUFFZ0FEWUN5QUVnQVJBdUlnQTJBc1FCSUFCRkRRRWdBUkF1SWdBMkFzQUJJQUJGRFFFQ1FCQ0tBVVVOQUFzZ0FVRUFFRjRpQURZQzFBRWdBRVVFUUNBQlFRQVFYaUlBTmdMVUFTQUFSUTBDQ3lBQkJVRUFDdzhMSUFFUU1VRUFDNDBKQWdsL0FYNGpBRUhRQVdzaUJ5UUFJQUFvQWtnaENRSkFBa0FDUUNBQUtBSm9RUUZIRFFBZ0FDZ0NiRUVCUncwQUlBQW9BcHdCS0FMY0t3MEJDeUFBS0FJSVFRaEdEUUFnQmtFQlFiek9BRUVBRUFnTUFRc0NRQ0FCS0FJUUlneEZEUUFnQUNnQ29BRWhDaUFCS0FJWUlRc2dERUVJVHdSQUlBeEJlSEVoRHdOQUlBc2dDRUUwYkdvZ0NqWUNLQ0FMSUFoQkFYSkJOR3hxSUFvMkFpZ2dDeUFJUVFKeVFUUnNhaUFLTmdJb0lBc2dDRUVEY2tFMGJHb2dDallDS0NBTElBaEJCSEpCTkd4cUlBbzJBaWdnQ3lBSVFRVnlRVFJzYWlBS05nSW9JQXNnQ0VFR2NrRTBiR29nQ2pZQ0tDQUxJQWhCQjNKQk5HeHFJQW8yQWlnZ0NFRUlhaUVJSUE1QkNHb2lEaUFQUncwQUN3c2dERUVIY1NJTVJRMEFBMEFnQ3lBSVFUUnNhaUFLTmdJb0lBaEJBV29oQ0NBTlFRRnFJZzBnREVjTkFBc0xJQUlnQTNJZ0JISWdCWEpGQkVBZ0JrRUVRYTh3UVFBUUNDQUFRZ0EzQWh3Z0FDQUFLUUpvTndJa0lBRWdDZjBBQWdEOUN3SUFJQUVnQmhBd0lRZ01BUXNnQWtFQVNBUkFJQWNnQWpZQ0FDQUdRUUZCMTkwQUlBY1FDRUVBSVFnTUFRc2dBaUFKS0FJSUlnaExCRUFnQnlBSU5nSVVJQWNnQWpZQ0VDQUdRUUZCcStFQUlBZEJFR29RQ0VFQUlRZ01BUXNDUUNBQ0lBa29BZ0FpQ0VrRVFDQUhJQWcyQXNRQklBY2dBallDd0FFZ0JrRUNRWXZrQUNBSFFjQUJhaEFJSUFCQkFEWUNIQ0FKS0FJQUlRSU1BUXNnQUNBQ0lBQW9BbFJySUFBb0FseHVOZ0ljQ3lBQklBSTJBZ0FnQTBFQVNBUkFJQWNnQXpZQ0lDQUdRUUZCbDkwQUlBZEJJR29RQ0VFQUlRZ01BUXNnQXlBSktBSU1JZ0pMQkVBZ0J5QUNOZ0kwSUFjZ0F6WUNNQ0FHUVFGQi90OEFJQWRCTUdvUUNFRUFJUWdNQVFzQ1FDQURJQWtvQWdRaUFra0VRQ0FISUFJMkFyUUJJQWNnQXpZQ3NBRWdCa0VDUWR6aUFDQUhRYkFCYWhBSUlBQkJBRFlDSUNBSktBSUVJUU1NQVFzZ0FDQURJQUFvQWxocklBQW9BbUJ1TmdJZ0N5QUJJQU0yQWdSQkFDRUlJQVJCQUV3RVFDQUhJQVEyQWtBZ0JrRUJRZFhjQUNBSFFVQnJFQWdNQVFzZ0JDQUpLQUlBSWdKSkJFQWdCeUFDTmdKVUlBY2dCRFlDVUNBR1FRRkJzdU1BSUFkQjBBQnFFQWdNQVFzQ1FDQUVJQWtvQWdnaUFrc0VRQ0FISUFJMkFxUUJJQWNnQkRZQ29BRWdCa0VDUWRQZ0FDQUhRYUFCYWhBSUlBQWdBQ2dDYURZQ0pDQUpLQUlJSVFRTUFRc2dBQ0FBTlFKY0loQWdCQ0FBS0FKVWE2MThRZ0Y5SUJDQVBnSWtDeUFCSUFRMkFnZ2dCVUVBVEFSQUlBY2dCVFlDWUNBR1FRRkJrdHdBSUFkQjRBQnFFQWdNQVFzZ0JTQUpLQUlFSWdKSkJFQWdCeUFDTmdKMElBY2dCVFlDY0NBR1FRRkJndUlBSUFkQjhBQnFFQWdNQVFzQ1FDQUZJQWtvQWd3aUFrc0VRQ0FISUFJMkFwUUJJQWNnQlRZQ2tBRWdCa0VDUWFYZkFDQUhRWkFCYWhBSUlBQWdBQ2dDYkRZQ0tDQUpLQUlNSVFVTUFRc2dBQ0FBTlFKZ0loQWdCU0FBS0FKWWE2MThRZ0Y5SUJDQVBnSW9DeUFCSUFVMkFnd2dBQ0FBTFFCRVFRSnlPZ0JFSUFFZ0JoQXdJZ2hGQkVCQkFDRUlEQUVMSUFjZ0FmMEFBZ0Q5Q3dTQUFTQUdRUVJCdERrZ0IwR0FBV29RQ0FzZ0IwSFFBV29rQUNBSUM1VUNBUWQvSXdCQklHc2lCU1FBQW44Z0FDZ0NTQ0lFUlFSQUlBTkJBVUhWNWdCQkFCQUlRUUFNQVF0QkFFRUVJQVFvQWhBUURDSUVSUTBBR2lBQkJFQWdBQ2dDU0NFSUEwQUNRQUpBSUFJZ0JrRUNkR29vQWdBaUJ5QUlLQUlRVHdSQUlBVWdCellDRUNBRFFRRkIrUkVnQlVFUWFoQUlEQUVMSUFRZ0IwRUNkR29pQ1NnQ0FFVU5BU0FGSUFjMkFnQWdBMEVCUVkwYUlBVVFDQXNnQkJBSlFRQU1Bd3NnQ1VFQk5nSUFJQVpCQVdvaUJpQUJSdzBBQ3dzZ0JCQUpJQUFvQWtBUUNRSkFJQUVFUUNBQUlBRkJBblFpQkJBTklnTTJBa0FnQTBVRVFDQUFRUUEyQWp4QkFBd0RDeUFESUFJZ0JCQUxHZ3dCQ3lBQVFRQTJBa0FMSUFBZ0FUWUNQRUVCQ3lFS0lBVkJJR29rQUNBS0M3d0ZBUWQvSUFGQkFVRWtFQXdpQkRZQ1NBSkFBa0FnQkVVTkFBSkFJQUVvQXNRQlFSSWdBeEFlQkVBZ0FTZ0N4QUZCRXlBREVCNE5BUXNNQWdzZ0FTZ0N4QUVpQnlnQ0FDRUdJQWNvQWdnaEJBSkFJQVlFUUVFQklRVWdCa0VCUndSQUlBWkJmbkVoQ1FOQUFuOUJBQ0FGUlEwQUdrRUFJQUVnQUNBRElBUW9BZ0FSQUFCRkRRQWFJQUVnQUNBRElBUW9BZ1FSQUFCQkFFY0xJUVVnQkVFSWFpRUVJQWhCQW1vaUNDQUpSdzBBQ3dzQ1FBSkFJQVpCQVhFRVFDQUZSUTBCSUFFZ0FDQURJQVFvQWdBUkFBQkJBRWNoQlFzZ0IwRUFOZ0lBSUFWRkRRRU1Bd3NnQjBFQU5nSUFDd3dEQ3lBSFFRQTJBZ0FMQWtBZ0FTZ0N3QUZCRkNBREVCNEVRQ0FCS0FMQUFVRVZJQU1RSGcwQkN3d0NDeUFCS0FMQUFTSUhLQUlBSVFZZ0J5Z0NDQ0VFQWtBZ0JnUkFRUUVoQlNBR1FRRnhJUWtnQmtFQlJnUi9RUUFGSUFaQmZuRWhCa0VBSVFnRFFBSi9RUUFnQlVVTkFCcEJBQ0FCSUFBZ0F5QUVLQUlBRVFBQVJRMEFHaUFCSUFBZ0F5QUVLQUlFRVFBQVFRQkhDeUVGSUFSQkNHb2hCQ0FJUVFKcUlnZ2dCa2NOQUFzZ0JVVUxJUVlDUUFKQUlBa0VRQ0FHRFFFZ0FTQUFJQU1nQkNnQ0FCRUFBRUVBUnlFRkN5QUhRUUEyQWdBZ0JVVU5BUXdEQ3lBSFFRQTJBZ0FMREFNTElBZEJBRFlDQUFzZ0FrRUJRU1FRRENJQU5nSUFJQUJGRFFBZ0FTZ0NTQ0FBRURnZ0FTZ0N5QUVnQVNnQ2JDQUJLQUpvYkNJQU5nSWtJQUJCS0JBTUlRTWdBU2dDeUFFaUFDQUROZ0lvQWtBZ0EwVU5BQ0FBS0FJa1JRUkFRUUVQQzBFQUlRUURRQ0FESUFSQktHd2lCV29pQUVFQU5nSVVJQUJCNUFBMkFoeEI1QUJCR0JBTUlRQWdCU0FCS0FMSUFTSUhLQUlvSWdOcUlBQTJBaGdnQUVVTkFVRUJJUW9nQkVFQmFpSUVJQWNvQWlSSkRRQUxEQUVMSUFJb0FnQVFHRUVBSVFvZ0FrRUFOZ0lBQ3lBS0R3c2dBU2dDU0JBWUlBRkJBRFlDU0VFQUN3SUFDd1FBUVFFTE5BQUNRQ0FBUlEwQUlBRkZEUUFnQUNBQktBSUVOZ0trQVNBQUlBRW9BZ0EyQXFBQklBQWdBU2dDdUVCQkFuRTJBdUFCQ3d1MEJRRUlmeUFBS0FJWUlnUW9BaEFpQ1VVRVFFRUFEd3NnQkNnQ0dDRUZJQUFvQWhRb0FnQW9BaFFoQkFKQUFrQWdBVVVFUUVFQUlRRURRQ0FGS0FJWUlRSWdCQ2dDSENBRUtBSVlRWmdCYkdvaUFFR01BV3NvQWdBaUJ5QUFRWlFCYXlnQ0FDSUlheUVESUFCQmtBRnJLQUlBSUFCQm1BRnJLQUlBYXlFQUFrQWdCeUFJUmcwQUlBQ3RJQU90ZmtJZ2lGQU5BQXdFQ3lBQUlBTnNJUU1DUUVFRUlBSkJBM1lnQWtFSGNVRUFSMm9pQUNBQVFRTkdHeUlDUlEwQUlBS3RJQU90ZmtJZ2lGQU5BQXdFQzBGL0lRQWdBaUFEYkNJQ0lBRkJmM05MRFFJZ0JFSE1BR29oQkNBRlFUUnFJUVVnQVNBQ2FpSUJJUUFnQmtFQmFpSUdJQWxIRFFBTERBRUxRUUFoQVNBQUtBSkFSUVJBQTBBZ0JTZ0NHQ0VDSUFRb0Fod2dCQ2dDR0VHWUFXeHFJZ0JCQkdzb0FnQWlCeUFBUVF4cktBSUFJZ2hySVFNZ0FFRUlheWdDQUNBQVFSQnJLQUlBYXlFQUFrQWdCeUFJUmcwQUlBQ3RJQU90ZmtJZ2lGQU5BQXdFQ3lBQUlBTnNJUU1DUUVFRUlBSkJBM1lnQWtFSGNVRUFSMm9pQUNBQVFRTkdHeUlDUlEwQUlBS3RJQU90ZmtJZ2lGQU5BQXdFQzBGL0lRQWdBaUFEYkNJQ0lBRkJmM05MRFFJZ0JFSE1BR29oQkNBRlFUUnFJUVVnQVNBQ2FpSUJJUUFnQmtFQmFpSUdJQWxIRFFBTERBRUxBMEFnQlNnQ0dDRUNJQVFvQWh3Z0JDZ0NHRUdZQVd4cUlnQkJqQUZyS0FJQUlnY2dBRUdVQVdzb0FnQWlDR3NoQXlBQVFaQUJheWdDQUNBQVFaZ0JheWdDQUdzaEFBSkFJQWNnQ0VZTkFDQUFyU0FEclg1Q0lJaFFEUUFNQXdzZ0FDQURiQ0VEQWtCQkJDQUNRUU4ySUFKQkIzRkJBRWRxSWdBZ0FFRURSaHNpQWtVTkFDQUNyU0FEclg1Q0lJaFFEUUFNQXd0QmZ5RUFJQUlnQTJ3aUFpQUJRWDl6U3cwQklBUkJ6QUJxSVFRZ0JVRTBhaUVGSUFFZ0Ftb2lBU0VBSUFaQkFXb2lCaUFKUncwQUN3c2dBQThMUVg4TDJnUUJDMzhnQUFSQUlBQW9BaFFpQVFSQUlBRW9BZ0FpQlFSQUlBVW9BaFFoQXlBRktBSVFCSDlCRUVFUklBQXRBQ2hCQVhFYklRZ0RRQ0FES0FJY0lnSUVRQ0FES0FJZ0lnRkJtQUZ1SVFwQkFDRUpJQUZCbUFGUEJIOERRQ0FDS0FJd0lnRUVRQ0FDS0FJMElnWkJLRzRoQjBFQUlRUWdCa0VvVHdSL0EwQWdBU2dDSUJBaUlBRkJBRFlDSUNBQktBSWtFQ0lnQVVFQU5nSWtJQUVnQ0JFQ0FDQUJRU2hxSVFFZ0JFRUJhaUlFSUFkSERRQUxJQUlvQWpBRklBRUxFQWtnQWtFQU5nSXdDeUFDS0FKVUlnRUVRQ0FDS0FKWUlnWkJLRzRoQjBFQUlRUWdCa0VvVHdSL0EwQWdBU2dDSUJBaUlBRkJBRFlDSUNBQktBSWtFQ0lnQVVFQU5nSWtJQUVnQ0JFQ0FDQUJRU2hxSVFFZ0JFRUJhaUlFSUFkSERRQUxJQUlvQWxRRklBRUxFQWtnQWtFQU5nSlVDeUFDS0FKNElnRUVRQ0FDS0FKOElnWkJLRzRoQjBFQUlRUWdCa0VvVHdSL0EwQWdBU2dDSUJBaUlBRkJBRFlDSUNBQktBSWtFQ0lnQVVFQU5nSWtJQUVnQ0JFQ0FDQUJRU2hxSVFFZ0JFRUJhaUlFSUFkSERRQUxJQUlvQW5nRklBRUxFQWtnQWtFQU5nSjRDeUFDUVpnQmFpRUNJQWxCQVdvaUNTQUtSdzBBQ3lBREtBSWNCU0FDQ3hBSklBTkJBRFlDSEFzQ1FDQURLQUlvUlEwQUlBTW9BaVFpQVVVTkFDQUJFQWtnQS8wTUFBQUFBQUFBQUFBQUFBQUFBQUFBQVAwTEFpUUxJQU1vQWpRUUNTQURRY3dBYWlFRElBdEJBV29pQ3lBRktBSVFTUTBBQ3lBRktBSVVCU0FEQ3hBSklBVkJBRFlDRkNBQUtBSVVLQUlBRUFrZ0FDZ0NGQ0lCUVFBMkFnQUxJQUVRQ1NBQVFRQTJBaFFMSUFBb0FrUVFDU0FBRUFrTEM4c1RBUlYvSXdCQklHc2lEeVFBSUE4Z0JUWUNHQ0FCSUFNb0FoeEJ6QUJzYWlnQ0hDQURLQUlnUVpnQmJHb2hFUUpBQWtBZ0F5Z0NLQTBBSUJFb0FoaEZEUUFnRVVFY2FpRUpBMEFDUUNBSktBSUlJQWtvQWdCSEJIOGdDU2dDRENBSktBSUVSZ1ZCQVFzTkFDQURLQUlrSWdFZ0NTZ0NHRUVvYms4RVFDQUlRUUZCZ2hWQkFCQUlEQVFMSUFrb0FoUWdBVUVvYkdvaUFTZ0NJQkJiSUFFb0FpUVFXeUFCS0FJVUlBRW9BaEJzSWcxRkRRQWdBU2dDR0NFQklBMUJDRThFUUNBTlFYaHhJUXRCQUNFS0EwQWdBVUlBTndMb0F5QUJRZ0EzQXFnRElBRkNBRGNDNkFJZ0FVSUFOd0tvQWlBQlFnQTNBdWdCSUFGQ0FEY0NxQUVnQVVJQU53Sm9JQUZDQURjQ0tDQUJRWUFFYWlFQklBcEJDR29pQ2lBTFJ3MEFDd3RCQUNFS0lBMUJCM0VpRFVVTkFBTkFJQUZDQURjQ0tDQUJRVUJySVFFZ0NrRUJhaUlLSUExSERRQUxDeUFKUVNScUlRa2dERUVCYWlJTUlCRW9BaGhKRFFBTEN5QUZJUTBDUUNBQ0xRQUFRUUp4UlEwQUlBZEJCVTBFUUNBSVFRSkJzUjlCQUJBSURBRUxBa0FnQlMwQUFFSC9BVVlFUUNBRkxRQUJRWkVCUmcwQkN5QUlRUUpCMng5QkFCQUlEQUVMSUE4Z0JVRUdhaUlOTmdJWUMwRVVFQTBpQzBVTkFBSi9JQUF0QUd4QkFYRUVRQ0FBUVNocUlRY2dBQ2dDS0NFTklBQkJMR29NQVFzZ0FpMEFpQ3hCQW5FRVFDQUNRYkFvYWlFSElBSW9BckFvSVEwZ0FrRzhLR29NQVFzZ0R5QUZJQWRxSUExck5nSWNJQTlCR0dvaEJ5QVBRUnhxQ3lJU0tBSUFJUUFnQzBJQU53SU1JQXNnRFRZQ0NDQUxJQTAyQWdBZ0N5QUFJQTFxTmdJRUlBdEJBUkFaUlFSQUlBc1FYUm9nQ3lnQ0NDQUxLQUlBYXlFYUlBc1FKU0FhSUExcUlRRUNRQ0FDTFFBQVFRUnhSUTBBSUFjb0FnQWdFaWdDQUNBQmEycEJBVTBFUUNBSVFRSkJtQ0ZCQUJBSURBRUxBa0FnQVMwQUFFSC9BVVlFUUNBQkxRQUJRWklCUmcwQkN5QUlRUUpCd2lGQkFCQUlEQUVMSUFGQkFtb2hBUXNnRWlBU0tBSUFJQWNvQWdBZ0FXdHFOZ0lBSUFjZ0FUWUNBQ0FFUVFBMkFnQWdCaUFQS0FJWUlBVnJOZ0lBUVFFaEZ3d0JDeUFSS0FJWUJFQWdFVUVjYWlFUUEwQWdBeWdDSkNFQUlCQW9BaFFoQVFKQUlCQW9BZ2dnRUNnQ0FFY0VmeUFRS0FJTUlCQW9BZ1JHQlVFQkN3MEFJQUVnQUVFb2JHb2lGQ2dDRkNBVUtBSVFiQ0lZUlEwQUlCUW9BaGdoQ1VFQUlSVURRQUpBQW44Z0NTZ0NLRVVFUUNBTElCUW9BaUFnRlNBREtBSW9RUUZxRUZrTUFRc2dDMEVCRUJrTFJRUkFJQWxCQURZQ0pBd0JDeUFKS0FJb1JRUkFRUUFoQVFOQUlBRWlBRUVCYWlFQklBc2dGQ2dDSkNBVklBQVFXVVVOQUFzZ0VDZ0NIQ0VCSUFsQkF6WUNJQ0FKSUFFMkFoZ2dDU0FCSUFCclFRRnFOZ0ljQ3lBSkFuOUJBU0FMUVFFUUdVVU5BQnBCQWlBTFFRRVFHVVVOQUJvZ0MwRUNFQmtpQUVFRFJ3UkFJQUJCQTJvTUFRc2dDMEVGRUJraUFFRWZSd1JBSUFCQkJtb01BUXNnQzBFSEVCbEJKV29MTmdJa1FRQWhBUU5BSUFFaUFFRUJhaUVCSUF0QkFSQVpEUUFMSUFrZ0NTZ0NJQ0FBYWpZQ0lBSkFBa0FDZnlBSktBSW9JZ0JGQkVBZ0FpZ0MwQ3NnQXlnQ0hFRzRDR3hxS0FJUUlRQWdDU2dDTUVVRVFDQUpLQUlBUWZBQkVCQWlBVVVOQkNBSklBRTJBZ0FnQVNBSktBSXdRUmhzYWtFQVFmQUJFQTRhSUFsQkNqWUNNQXNnQ1NnQ0FDSUIvUXdBQUFBQUFBQUFBQUFBQUFBQUFBQUEvUXNDQUNBQlFnQTNBaEJCQVVFS1FlMEFJQUJCQVhFYklBQkJCSEViSVFwQkFBd0JDeUFKS0FJQUlnRWdBRUVCYXlJTVFSaHNhaUlLS0FJRUlBb29BZ3hIRFFFZ0FpZ0MwQ3NnQXlnQ0hFRzRDR3hxS0FJUUlRb2dDU2dDTUNJTUlBQkJBV3BKQkg4Z0FTQU1RUXBxSWd4QkdHd1FFQ0lCUlEwRElBa2dBVFlDQUNBQklBa29BakJCR0d4cVFRQkI4QUVRRGhvZ0NTQU1OZ0l3SUFrb0FnQUZJQUVMSUFCQkdHeHFJZ0g5REFBQUFBQUFBQUFBQUFBQUFBQUFBQUQ5Q3dJQUlBRkNBRGNDRUFKL1FRRWdDa0VFY1EwQUdrSHRBQ0FLUVFGeFJRMEFHa0VDUVFKQkFTQUJRUXhyS0FJQUlncEJDa1liSUFwQkFVWWJDeUVLSUFBTElRd2dBU0FLTmdJTUN5QUpLQUlrSVFBZ0FpZ0MwQ3NnQXlnQ0hFRzRDR3hxTFFBUVFjQUFjUVJBQTBBZ0RFRVliQ0lPSUFrb0FnQnFJQUJCQVNBTUd5SVROZ0lRSUFrb0FpQWhGa0VBSVFvZ0FDRUJJQk5CQWs4RVFBTkFJQXBCQVdvaENpQUJRUU5MSVJzZ0FVRUJkaUVCSUJzTkFBc0xJQW9nRm1vaUFVRWhUd1JBSUE4Z0FUWUNFQ0FJUVFGQnpQUUFJQTlCRUdvUUNBd0RDeUFMSUFFUUdTRUtJQWtvQWdBaUFTQU9haUlPSUFvMkFoUWdBQ0FPS0FJUWF5SUFRUUJNRFFNZ0FpZ0MwQ3NnQXlnQ0hFRzRDR3hxS0FJUUlRb2dDU2dDTUNJT0lBeEJBbXBKQkVBZ0FTQU9RUXBxSWc1QkdHd1FFQ0lCUlEwRElBa2dBVFlDQUNBQklBa29BakJCR0d4cVFRQkI4QUVRRGhvZ0NTQU9OZ0l3SUFrb0FnQWhBUXNnQVNBTVFRRnFJZ3hCR0d4cUlnSDlEQUFBQUFBQUFBQUFBQUFBQUFBQUFBRDlDd0lBSUFGQ0FEY0NFQ0FCQW45QkFTQUtRUVJ4RFFBYVFlMEFJQXBCQVhGRkRRQWFRUUpCQWtFQklBRkJER3NvQWdBaUFVRUtSaHNnQVVFQlJoc0xOZ0lNREFBTEFBc0RRQ0FNUVJoc0lnNGdDU2dDQUdvaUFTQUJLQUlNSUFFb0FnUnJJZ0VnQUNBQUlBRktHeUlCTmdJUUlBa29BaUFoRTBFQUlRb2dBVUVDVHdSQUEwQWdDa0VCYWlFS0lBRkJBMHNoSENBQlFRRjJJUUVnSEEwQUN3c2dDaUFUYWlJQlFTRlBCRUFnRHlBQk5nSUFJQWhCQVVITTlBQWdEeEFJREFJTElBc2dBUkFaSVFvZ0NTZ0NBQ0lCSUE1cUlnNGdDallDRkNBQUlBNG9BaEJySWdCQkFFd05BaUFDS0FMUUt5QURLQUljUWJnSWJHb29BaEFoQ2lBSktBSXdJZzRnREVFQ2Fra0VRQ0FCSUE1QkNtb2lEa0VZYkJBUUlnRkZEUUlnQ1NBQk5nSUFJQUVnQ1NnQ01FRVliR3BCQUVId0FSQU9HaUFKSUE0MkFqQWdDU2dDQUNFQkN5QUJJQXhCQVdvaURFRVliR29pQWYwTUFBQUFBQUFBQUFBQUFBQUFBQUFBQVAwTEFnQWdBVUlBTndJUUlBRUNmMEVCSUFwQkJIRU5BQnBCN1FBZ0NrRUJjVVVOQUJwQkFrRUNRUUVnQVVFTWF5Z0NBQ0lCUVFwR0d5QUJRUUZHR3dzMkFnd01BQXNBQ3lBTEVDVU1CUXNnQ1VGQWF5RUpJQlZCQVdvaUZTQVlSdzBBQ3dzZ0VFRWthaUVRSUJsQkFXb2lHU0FSS0FJWVNRMEFDd3NnQ3hCZFJRUkFJQXNRSlF3QkN5QUxLQUlJSUFzb0FnQnJJUjBnQ3hBbElCMGdEV29oQVFKQUlBSXRBQUJCQkhGRkRRQWdCeWdDQUNBU0tBSUFJQUZyYWtFQlRRUkFJQWhCQWtHWUlVRUFFQWdNQVFzQ1FDQUJMUUFBUWY4QlJnUkFJQUV0QUFGQmtnRkdEUUVMSUFoQkFrSENJVUVBRUFnTUFRc2dBVUVDYWlFQkN5QVNJQklvQWdBZ0J5Z0NBQ0FCYTJvMkFnQWdCeUFCTmdJQVFRRWhGeUFFUVFFMkFnQWdCaUFQS0FJWUlBVnJOZ0lBQ3lBUFFTQnFKQUFnRnd1VEpBSVVmdzUrQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQUtBSlVEZ1VBQVFJREJBb0xBa0FnQUNnQ05DSUdJQUFvQXNRQklnRkpCRUFnQUNnQ1FDSUhJQUZCQVdwSkRRRUxJQUFvQXV3QlFRRkI5VDVCQUJBSURBd0xJQUFvQWl4RkJFQWdBQ2dDSkNFQ1FRQWhBUXdGQ3lBQVFRQTJBaXdnQUNnQ1JDRURRUUVoQVF3RUN3SkFJQUFvQWpRaUJpQUFLQUxFQVNJQlNRUkFJQUFvQWtBaUJ5QUJRUUZxU1EwQkN5QUFLQUxzQVVFQlFhSS9RUUFRQ0F3TEN5QUFLQUlzUlFSQUlBQW9BaVFoQkVFQUlRRU1DQXNnQUVFQU5nSXNJQUFvQWpBaEEwRUJJUUVNQndzQ1FDQUFLQUkwSWdRZ0FDZ0N4QUVpQ2trRVFDQUFLQUpBSWc0Z0NrRUJha2tOQVFzZ0FDZ0M3QUZCQVVHcHdBQkJBQkFJREFvTElBQW9BaXhGQkVBZ0FDZ0NLQ0VMREFZTElBQkNBRGNDNUFFZ0FFRUFOZ0lzSUFBb0FzZ0JJUXdEUUNBTUlBZEJCSFJxSWdVb0FnZ2lEd1JBSUFVb0Fnd2hFa0VBSVFFRFFBSkFJQThnQVVGL2Myb2lFQ0FTSUFGQkJIUnFJaEVvQWdCcUlnbEJIMHNOQUNBRktBSUFJaE5CZnlBSmRrc05BQ0FBSUFJZ0V5QUpkQ0lKSUFJZ0NVa2JJQWtnQWhzaUFqWUM1QUVMQWtBZ0VTZ0NCQ0FRYWlJSlFSOUxEUUFnQlNnQ0JDSVFRWDhnQ1haTERRQWdBQ0FESUJBZ0NYUWlDU0FESUFsSkd5QUpJQU1iSWdNMkF1Z0JDeUFCUVFGcUlnRWdEMGNOQUFzTElBZEJBV29pQnlBS1J3MEFDeUFDUlEwSElBTkZEUWNnQUMwQUFFVUVRQ0FBSUFBb0F0QUJOZ0pzSUFBZ0FDZ0N6QUUyQW1RZ0FDQUFLQUxZQVRZQ2NDQUFJQUFvQXRRQk5nSm9DeUFBS0FJd0lRVkJBU0VCREFVTEFrQWdBQ2dDTkNJRklBQW9Bc1FCSWdsSkJFQWdBQ2dDUUNJU0lBbEJBV3BKRFFFTElBQW9BdXdCUVFGQi9EOUJBQkFJREFrTElBQW9BaXhGQkVBZ0FDZ0N5QUVpRFNBQUtBSWNJZ1JCQkhScUlRc2dBQ2dDS0NFSURBUUxJQUJDQURjQzVBRWdBRUVBTmdJc0lBQW9Bc2dCSVEwRFFDQU5JQVpCQkhScUlnb29BZ2dpRGdSQUlBb29BZ3doRUVFQUlRRURRQUpBSUE0Z0FVRi9jMm9pRVNBUUlBRkJCSFJxSWhNb0FnQnFJZ3hCSDBzTkFDQUtLQUlBSWhSQmZ5QU1ka3NOQUNBQUlBSWdGQ0FNZENJTUlBSWdERWtiSUF3Z0Foc2lBallDNUFFTEFrQWdFeWdDQkNBUmFpSU1RUjlMRFFBZ0NpZ0NCQ0lSUVg4Z0RIWkxEUUFnQUNBRElCRWdESFFpRENBRElBeEpHeUFNSUFNYklnTTJBdWdCQ3lBQlFRRnFJZ0VnRGtjTkFBc0xJQVpCQVdvaUJpQUpSdzBBQ3lBQ1JRMEdJQU5GRFFZQ1FDQUFMUUFBQkVBZ0FDZ0NiQ0VHREFFTElBQWdBQ2dDMEFFaUJqWUNiQ0FBSUFBb0Fzd0JOZ0prSUFBZ0FDZ0MyQUUyQW5BZ0FDQUFLQUxVQVRZQ2FBdEJBU0VCREFNTEFrQWdBQ2dDTkNJR0lBQW9Bc1FCSWdGSkJFQWdBQ2dDUUNJUElBRkJBV3BKRFFFTElBQW9BdXdCUVFGQnp6OUJBQkFJREFZTElBQW9BaXhGQkVBZ0FDZ0N5QUVnQUNnQ0hDSUdRUVIwYWlFRklBQW9BaWdoQjBFQUlRRU1BZ3NnQUNBR05nSWNJQUJCQURZQ0xFRUJJUUVNQVFzRFFBSi9Ba0FnQVVVRVFDQUNRUUZxSVFJTUFRc2dBQ0FETmdJb0lBQW9BamdnQTAwTkNTQUFLQUl3SVFSQkFBd0JDMEVCQ3lFQkEwQUNRQUpBQWtBQ1FDQUJSUVJBSUFBZ0JEWUNJQ0FFSUFBb0FqeFBEUUVnQUNBR05nSWNJQVloQVVFQUlRVU1CQXNnQUNBQ05nSWtJQUFvQWt3Z0FrMEVRQ0FBS0FJY0lRRkJBU0VGREFRTElBQW9BaEFnQUNnQ0lHd2dBQ2dDRENBQUtBSW9iR29nQUNnQ0ZDQUFLQUljYkdvZ0FDZ0NHQ0FDYkdvaUFTQUFLQUlJVHdSQURBd0xJQUFvQWdRZ0FVRUJkR29pQVM4QkFBMEJEQTBMSUFBb0FpaEJBV29oQXd3QkMwRUFJUUVNQXd0QkFTRUJEQUlMQTBBQ1FBSkFBa0FnQlVVRVFDQUJJQWRQRFFFZ0FDZ0NJQ0lGSUFBb0FzZ0JJQUZCQkhScUlnMG9BZ2hQRFFNZ0FDMEFBRVVFUUNBQUlBMG9BZ3dnQlVFRWRHb2lBU2dDRENBQktBSUliRFlDVEFzZ0FDZ0NTQ0VDUVFFaEFRd0ZDeUFBSUFGQkFXb2lBVFlDSEF3QkN5QUFLQUlnUVFGcUlRUkJBQ0VCREFNTFFRQWhCUXdCQzBFQklRVU1BQXNBQ3dBTEFBc0RRQUovQWtBZ0FVVUVRQ0FBSUFkQkFXb2lCellDS0F3QkN5QUdJQTlQRFFnZ0FFSUFOd0xrQVNBQUtBTElBU0FHUVFSMGFpSUZLQUlJSWd0RkRRZ2dCU2dDRENFS1FRQWhBa0VBSVFSQkFDRUJBMEFDUUNBTElBRkJmM05xSWdrZ0NpQUJRUVIwYWlJT0tBSUFhaUlJUVI5TERRQWdCU2dDQUNJTVFYOGdDSFpMRFFBZ0FDQUVJQXdnQ0hRaUNDQUVJQWhKR3lBSUlBUWJJZ1EyQXVRQkN3SkFJQTRvQWdRZ0NXb2lDRUVmU3cwQUlBVW9BZ1FpQ1VGL0lBaDJTdzBBSUFBZ0FpQUpJQWgwSWdnZ0FpQUlTUnNnQ0NBQ0d5SUNOZ0xvQVFzZ0FVRUJhaUlCSUF0SERRQUxJQVJGRFFZZ0FrVU5CZ0pBSUFBdEFBQUVRQ0FBS0FKc0lRSU1BUXNnQUNBQUtBTFFBU0lDTmdKc0lBQWdBQ2dDekFFMkFtUWdBQ0FBS0FMWUFUWUNjQ0FBSUFBb0F0UUJOZ0pvQzBFQURBRUxRUUVMSVFFRFFBSkFBa0FDUUFKQUlBRkZCRUFnQUNBQ05nTGdBU0FDSUFBb0FuQlBEUUVnQUNnQ1pDRU5RUUFoQVF3RUN5QUFLQUk0SUFkTkJFQWdBQ2dDSUNFRFFRRWhBUXdFQ3lBQUtBSVFJQUFvQWlCc0lBQW9BZ3dnQjJ4cUlBQW9BaFFnQm14cUlBQW9BaGdnQUNnQ0pHeHFJZ0VnQUNnQ0NFOEVRQXdMQ3lBQUtBSUVJQUZCQVhScUlnRXZBUUFOQVF3TUN5QUFJQVpCQVdvaUJqWUNIQXdCQzBFQUlRRU1Bd3RCQVNFQkRBSUxBMEFDUUFKQUFrQWdBQUovSUFGRkJFQWdBQ0FOTmdMY0FTQU5JQUFvQW1oUERRSWdBQ2dDTUF3QkN5QURRUUZxQ3lJRE5nSWdJQUFvQWp3aUFTQUZLQUlJSWdRZ0FTQUVTUnNnQTBzRVFDQUZLQUlBSWdFZ0FhMGlIaUFFSUFOQmYzTnFJZ2l0SWhhR0loY2dGb2luUncwRElBVW9BZ1FpQkVKL0lCYUlwM0VnQkVjTkF5QUVyU0lWSUJhR0loaENBWDBpR1NBQU5RTFlBWHdnR0lBaEh5QVpJQUFvQXRBQklnbXRmQ0FZZ0NFYUlCZENBWDBpR3lBQU5RTFVBWHdnRjRBaElDQWJJQUFvQXN3QklnNnRmQ0FYZ0NFY0lBRkNmeUFGS0FJTUlBTkJCSFJxSWdzb0FnQWlDaUFJYXEwaUhZaW5jU0FCUncwRElBUWdGU0FMS0FJRUlnRWdDR3F0SWhXR0lpRWdGWWluUncwRElBQW9BdUFCSWdTdElpSWdJWUpDQUZJRVFDQUVJQWxIRFFSQ2Z5QVZoa0ovaFNBYVF2Ly8vLzhQZ3lBV2hvTlFEUVFMSUFBb0F0d0JJZ1N0SWhVZ0hpQWRob0pDQUZJRVFDQUVJQTVIRFFSQ2Z5QWRoa0ovaFNBY1F2Ly8vLzhQZ3lBV2hvTlFEUVFMSUFzb0FnZ2lCRVVOQXlBTEtBSU1SUTBESUJ5bklnc2dJS2RHRFFNZ0dxY2lDQ0FmcDBZTkF5QUFJQUFvQWtRaUJ6WUNLQ0FBSUJVZ0czd2dGNENuSUFwMklBc2dDblpySUJrZ0lud2dHSUNuSUFGMklBZ2dBWFpySUFSc2FqWUNKRUVCSVFFTUJRc2dBQ2dDM0FFaUFTQUFLQUxrQVNJRWFpQUJJQVJ3YXlFTkRBRUxJQUFvQXVBQklnRWdBQ2dDNkFFaUJHb2dBU0FFY0dzaEFrRUFJUUVNQXd0QkFDRUJEQUVMUVFFaEFRd0FDd0FMQUFzQUN3TkFBbjhDUUNBQlJRUkFJQUFnQ0VFQmFpSUlOZ0lvREFFTElBQWdCallDNEFFZ0FDZ0NjQ0FHVFEwSElBQW9BbVFoRDBFQURBRUxRUUVMSVFFRFFBSkFBa0FDUUFKQUlBRkZCRUFnQUNBUE5nTGNBU0FQSUFBb0FtaFBEUUVnQUNBRk5nSWNJQVVoQkVFQUlRRU1CQXNnQUNnQ09DQUlUUVJBSUFBb0FpQWhCMEVCSVFFTUJBc2dBQ2dDRUNBQUtBSWdiQ0FBS0FJTUlBaHNhaUFBS0FJVUlBUnNhaUFBS0FJWUlBQW9BaVJzYWlJQklBQW9BZ2hQQkVBTUNnc2dBQ2dDQkNBQlFRRjBhaUlCTHdFQURRRU1Dd3NnQUNnQzRBRWlBU0FBS0FMb0FTSUdhaUFCSUFad2F5RUdEQUVMUVFBaEFRd0RDMEVCSVFFTUFnc0RRQUpBQWtBQ1FBSkFJQUZGQkVBZ0JDQVNUdzBDSUFBZ0FDZ0NNQ0lITmdJZ0lBMGdCRUVFZEdvaEN3d0JDeUFBSUFkQkFXb2lCellDSUFzZ0FDZ0NQQ0lCSUFzb0FnZ2lBaUFCSUFKSkd5QUhTd1JBSUFzb0FnQWlBU0FCclNJZUlBSWdCMEYvYzJvaUNxMGlGb1lpRnlBV2lLZEhEUU1nQ3lnQ0JDSUNRbjhnRm9pbmNTQUNSdzBESUFLdEloVWdGb1lpR0VJQmZTSVpJQUExQXRnQmZDQVlnQ0VmSUJrZ0FDZ0MwQUVpRHExOElCaUFJUm9nRjBJQmZTSWJJQUExQXRRQmZDQVhnQ0VnSUJzZ0FDZ0N6QUVpREsxOElCZUFJUndnQVVKL0lBc29BZ3dnQjBFRWRHb2lBeWdDQUNJSklBcHFyU0lkaUtkeElBRkhEUU1nQWlBVklBTW9BZ1FpQVNBS2FxMGlGWVlpSVNBVmlLZEhEUU1nQUNnQzRBRWlBcTBpSWlBaGdrSUFVZ1JBSUFJZ0RrY05CRUovSUJXR1FuK0ZJQnBDLy8vLy93K0RJQmFHZzFBTkJBc2dBQ2dDM0FFaUFxMGlGU0FlSUIyR2drSUFVZ1JBSUFJZ0RFY05CRUovSUIyR1FuK0ZJQnhDLy8vLy93K0RJQmFHZzFBTkJBc2dBeWdDQ0NJQ1JRMERJQU1vQWd4RkRRTWdIS2NpQXlBZ3AwWU5BeUFhcHlJS0lCK25SZzBESUFBZ0FDZ0NSQ0lJTmdJb0lBQWdGU0FiZkNBWGdLY2dDWFlnQXlBSmRtc2dHU0FpZkNBWWdLY2dBWFlnQ2lBQmRtc2dBbXhxTmdJa1FRRWhBUXdGQ3lBQUlBUkJBV29pQkRZQ0hBd0JDeUFBS0FMY0FTSUJJQUFvQXVRQklnSnFJQUVnQW5CcklROUJBQ0VCREFNTFFRQWhBUXdCQzBFQklRRU1BQXNBQ3dBTEFBc0RRQUovQWtBZ0FVVUVRQ0FBSUF0QkFXb2lDellDS0F3QkN5QUFJQVUyQWlBZ0FDZ0NQQ0FGVFEwR0lBQW9BbXdoQ0VFQURBRUxRUUVMSVFFRFFBSkFBa0FDUUFKQUlBRkZCRUFnQUNBSU5nTGdBU0FJSUFBb0FuQlBEUUVnQUNnQ1pDRU5RUUFoQVF3RUN5QUFLQUk0SUF0TkJFQWdBQ2dDSENFR1FRRWhBUXdFQ3lBQUtBSVFJQUFvQWlCc0lBQW9BZ3dnQzJ4cUlBQW9BaFFnQUNnQ0hHeHFJQUFvQWhnZ0FDZ0NKR3hxSWdFZ0FDZ0NDRThFUUF3SkN5QUFLQUlFSUFGQkFYUnFJZ0V2QVFBTkFRd0tDeUFBS0FJZ1FRRnFJUVVNQVF0QkFDRUJEQU1MUVFFaEFRd0NDd05BQWtBQ1FBSkFBa0FnQVVVRVFDQUFJQTAyQXR3QklBMGdBQ2dDYUU4TkFpQUFJQVEyQWh3Z0JDRUdEQUVMSUFBZ0JrRUJhaUlHTmdJY0N5QUdJQTVKQkVBZ0FDZ0NJQ0lISUFBb0FzZ0JJQVpCQkhScUlnRW9BZ2dpQTA4TkF5QUJLQUlBSWdJZ0FxMGlIaUFESUFkQmYzTnFJZ3F0SWhhR0loY2dGb2luUncwRElBRW9BZ1FpQTBKL0lCYUlwM0VnQTBjTkF5QURyU0lWSUJhR0loaENBWDBpR1NBQU5RTFlBWHdnR0lBaEh5QVpJQUFvQXRBQklnK3RmQ0FZZ0NFYUlCZENBWDBpR3lBQU5RTFVBWHdnRjRBaElDQWJJQUFvQXN3QklnbXRmQ0FYZ0NFY0lBSkNmeUFCS0FJTUlBZEJCSFJxSWdFb0FnQWlCeUFLYXEwaUhZaW5jU0FDUncwRElBTWdGU0FCS0FJRUlnSWdDbXF0SWhXR0lpRWdGWWluUncwRElBQW9BdUFCSWdPdElpSWdJWUpDQUZJRVFDQURJQTlIRFFSQ2Z5QVZoa0ovaFNBYVF2Ly8vLzhQZ3lBV2hvTlFEUVFMSUFBb0F0d0JJZ090SWhVZ0hpQWRob0pDQUZJRVFDQURJQWxIRFFSQ2Z5QWRoa0ovaFNBY1F2Ly8vLzhQZ3lBV2hvTlFEUVFMSUFFb0FnZ2lBMFVOQXlBQktBSU1SUTBESUJ5bklnRWdJS2RHRFFNZ0dxY2lDaUFmcDBZTkF5QUFJQUFvQWtRaUN6WUNLQ0FBSUJVZ0czd2dGNENuSUFkMklBRWdCM1pySUJrZ0lud2dHSUNuSUFKMklBb2dBblpySUFOc2FqWUNKRUVCSVFFTUJRc2dBQ2dDM0FFaUFTQUFLQUxrQVNJQ2FpQUJJQUp3YXlFTkRBRUxJQUFvQXVBQklnRWdBQ2dDNkFFaUFtb2dBU0FDY0dzaENFRUFJUUVNQXd0QkFDRUJEQUVMUVFFaEFRd0FDd0FMQUFzQUN3TkFBbjhDUUNBQlJRUkFJQVJCQVdvaEJBd0JDeUFBSUFNMkFpQWdBQ2dDUENBRFRRMEZJQUFvQWtRaEFrRUFEQUVMUVFFTElRRURRQUpBQWtBQ1FBSkFJQUZGQkVBZ0FDQUNOZ0lvSUFJZ0FDZ0NPRThOQVNBQUlBWTJBaHdnQmlFQlFRQWhCUXdFQ3lBQUlBUTJBaVFnQUNnQ1RDQUVUUVJBSUFBb0Fod2hBVUVCSVFVTUJBc2dBQ2dDRUNBQUtBSWdiQ0FBS0FJTUlBQW9BaWhzYWlBQUtBSVVJQUFvQWh4c2FpQUFLQUlZSUFSc2FpSUJJQUFvQWdoUEJFQU1DQXNnQUNnQ0JDQUJRUUYwYWlJQkx3RUFEUUVNQ1FzZ0FDZ0NJRUVCYWlFRERBRUxRUUFoQVF3REMwRUJJUUVNQWdzRFFBSkFBa0FDUUNBRlJRUkFJQUVnQjA4TkFTQUFLQUlnSWdVZ0FDZ0N5QUVnQVVFRWRHb2lEU2dDQ0U4TkF5QUFMUUFBUlFSQUlBQWdEU2dDRENBRlFRUjBhaUlCS0FJTUlBRW9BZ2hzTmdKTUN5QUFLQUpJSVFSQkFTRUJEQVVMSUFBZ0FVRUJhaUlCTmdJY0RBRUxJQUFvQWloQkFXb2hBa0VBSVFFTUF3dEJBQ0VGREFFTFFRRWhCUXdBQ3dBTEFBc0FDMEVBRHdzZ0FDZ0M3QUZCQVVHL0NrRUFFQWdMUVFBUEN5QUJRUUU3QVFCQkFRdVJDd0VLZndKQUlBRW9BZ0FnQkVFRGJDSU1kaUlHUVpDQWdBRnhEUUFnQUNBQVFSeHFJZzRnQUNnQ2JDQUdRZThEY1dvdEFBQkJBblJxSWdvMkFtZ2dBQ0FBS0FJRUlBb29BZ0FpQ1NnQ0FDSUlheUlHTmdJRUFrQWdDQ0FBS0FJQUlnZEJFSFpMQkVBZ0NTZ0NCQ0VMSUFBZ0NEWUNCQ0FLSUFsQkNFRU1JQVlnQ0VraUJodHFLQUlBTmdJQUlBc2dDMFVnQmhzaENTQUFLQUlJSVFZRFFBSkFJQVlOQUNBQUtBSVFJZ1pCQVdvaEN5QUdMUUFCSVFvZ0JpMEFBRUgvQVVZRVFDQUtRWkFCVHdSQUlBQWdBQ2dDREVFQmFqWUNEQ0FIUVlEK0Eyb2hCMEVJSVFZTUFnc2dBQ0FMTmdJUUlBY2dDa0VKZEdvaEIwRUhJUVlNQVFzZ0FDQUxOZ0lRUVFnaEJpQUhJQXBCQ0hScUlRY0xJQUFnQmtFQmF5SUdOZ0lJSUFBZ0IwRUJkQ0lITmdJQUlBQWdDRUVCZENJSU5nSUVJQWhCZ0lBQ1NRMEFDeUFJSVFZTUFRc2dBQ0FISUFoQkVIUnJJZ2MyQWdBZ0JrR0FnQUp4UlFSQUlBa29BZ1FoQ3lBS0lBbEJERUVJSUFZZ0NFa2lDQnRxS0FJQU5nSUFJQXRGSUFzZ0NCc2hDU0FBS0FJSUlRZ0RRQUpBSUFnTkFDQUFLQUlRSWdoQkFXb2hDeUFJTFFBQklRb2dDQzBBQUVIL0FVWUVRQ0FLUVpBQlR3UkFJQUFnQUNnQ0RFRUJhallDRENBSFFZRCtBMm9oQjBFSUlRZ01BZ3NnQUNBTE5nSVFJQWNnQ2tFSmRHb2hCMEVISVFnTUFRc2dBQ0FMTmdJUVFRZ2hDQ0FISUFwQkNIUnFJUWNMSUFBZ0NFRUJheUlJTmdJSUlBQWdCMEVCZENJSE5nSUFJQUFnQmtFQmRDSUdOZ0lFSUFaQmdJQUNTUTBBQ3d3QkN5QUpLQUlFSVFrTElBbEZEUUFnQUNBT0lBRW9BZ1FnREVFUmFuWkJCSEVnQVVFRWF5SU5LQUlBSUF4QkUycDJRUUZ4SUFFb0FnQWlDQ0FNUVJCcWRrSEFBSEVnQ0NBTWRrR3FBWEZ5SUFnZ0RFRU1ha0VPSUFRYmRrRVFjWEp5Y2lJUFFlQzVBV290QUFCQkFuUnFJZ3MyQW1nZ0FDQUdJQXNvQWdBaUNpZ0NBQ0lJYXlJR05nSUVBa0FnQ0NBSFFSQjJTd1JBSUFvb0FnUWhDU0FBSUFnMkFnUWdDeUFLUVFoQkRDQUdJQWhKSWdZYmFpZ0NBRFlDQUNBSklBbEZJQVliSVFvZ0FDZ0NDQ0VHQTBBQ1FDQUdEUUFnQUNnQ0VDSUdRUUZxSVFzZ0JpMEFBU0VKSUFZdEFBQkIvd0ZHQkVBZ0NVR1FBVThFUUNBQUlBQW9BZ3hCQVdvMkFnd2dCMEdBL2dOcUlRZEJDQ0VHREFJTElBQWdDellDRUNBSElBbEJDWFJxSVFkQkJ5RUdEQUVMSUFBZ0N6WUNFRUVJSVFZZ0J5QUpRUWgwYWlFSEN5QUFJQVpCQVdzaUJqWUNDQ0FBSUFkQkFYUWlCellDQUNBQUlBaEJBWFFpQ0RZQ0JDQUlRWUNBQWtrTkFBc01BUXNnQUNBSElBaEJFSFJySWdrMkFnQWdCa0dBZ0FKeFJRUkFJQW9vQWdRaEJ5QUxJQXBCREVFSUlBWWdDRWtpQ0J0cUtBSUFOZ0lBSUFkRklBY2dDQnNoQ2lBQUtBSUlJUWNEUUFKQUlBY05BQ0FBS0FJUUlnZEJBV29oQ3lBSExRQUJJUWdnQnkwQUFFSC9BVVlFUUNBSVFaQUJUd1JBSUFBZ0FDZ0NERUVCYWpZQ0RDQUpRWUQrQTJvaENVRUlJUWNNQWdzZ0FDQUxOZ0lRSUFrZ0NFRUpkR29oQ1VFSElRY01BUXNnQUNBTE5nSVFRUWdoQnlBSklBaEJDSFJxSVFrTElBQWdCMEVCYXlJSE5nSUlJQUFnQ1VFQmRDSUpOZ0lBSUFBZ0JrRUJkQ0lHTmdJRUlBWkJnSUFDU1EwQUN3d0JDeUFLS0FJRUlRb0xJQUpCQUNBRGF5QURJQW9nRDBIZ3V3RnFMUUFBY3lJREd6WUNBQ0FOSUEwb0FnQkJJQ0FNZEhJMkFnQWdBU0FCS0FJQUlBTkJFM1JCRUhJZ0RIUnlOZ0lBSUFFZ0FTZ0NCRUVJSUF4MGNqWUNCQ0FFSUFWeVJRUkFJQUZCZmlBQUtBSjhhMEVDZEdvaUFpQUNLQUlFUVlDQUFuSTJBZ1FnQWlBQ0tBSUFJQU5CSDNSeVFZQ0FCSEkyQWdBZ0FrRUVheUlDSUFJb0FnQkJnSUFJY2pZQ0FBc2dCRUVEUncwQUlBRWdBQ2dDZkVFQ2RHb2lBRUVFYWlBQUtBSUVRUVJ5TmdJQUlBQWdBQ2dDREVFQmNqWUNEQ0FBSUFBb0FnZ2dBMEVTZEhKQkFuSTJBZ2dMQzZzTEFRbC9Ba0FnQVNnQ0FDQUVRUU5zSWcxMklnZEJrSUNBQVhFTkFDQUhRZThEY1NJSFJRMEFJQUFnQUVFY2FpSU9JQUFvQW13Z0Iyb3RBQUJCQW5ScUlnczJBbWdnQUNBQUtBSUVJQXNvQWdBaUNpZ0NBQ0lKYXlJSE5nSUVBa0FnQ1NBQUtBSUFJZ2hCRUhaTEJFQWdDaWdDQkNFTUlBQWdDVFlDQkNBTElBcEJDRUVNSUFjZ0NVa2lCeHRxS0FJQU5nSUFJQXdnREVVZ0J4c2hDaUFBS0FJSUlRY0RRQUpBSUFjTkFDQUFLQUlRSWdkQkFXb2hEQ0FITFFBQklRc2dCeTBBQUVIL0FVWUVRQ0FMUVpBQlR3UkFJQUFnQUNnQ0RFRUJhallDRENBSVFZRCtBMm9oQ0VFSUlRY01BZ3NnQUNBTU5nSVFJQWdnQzBFSmRHb2hDRUVISVFjTUFRc2dBQ0FNTmdJUVFRZ2hCeUFJSUF0QkNIUnFJUWdMSUFBZ0IwRUJheUlITmdJSUlBQWdDRUVCZENJSU5nSUFJQUFnQ1VFQmRDSUpOZ0lFSUFsQmdJQUNTUTBBQ3lBSklRY01BUXNnQUNBSUlBbEJFSFJySWdnMkFnQWdCMEdBZ0FKeFJRUkFJQW9vQWdRaERDQUxJQXBCREVFSUlBY2dDVWtpQ1J0cUtBSUFOZ0lBSUF4RklBd2dDUnNoQ2lBQUtBSUlJUWtEUUFKQUlBa05BQ0FBS0FJUUlnbEJBV29oRENBSkxRQUJJUXNnQ1MwQUFFSC9BVVlFUUNBTFFaQUJUd1JBSUFBZ0FDZ0NERUVCYWpZQ0RDQUlRWUQrQTJvaENFRUlJUWtNQWdzZ0FDQU1OZ0lRSUFnZ0MwRUpkR29oQ0VFSElRa01BUXNnQUNBTU5nSVFRUWdoQ1NBSUlBdEJDSFJxSVFnTElBQWdDVUVCYXlJSk5nSUlJQUFnQ0VFQmRDSUlOZ0lBSUFBZ0IwRUJkQ0lITmdJRUlBZEJnSUFDU1EwQUN3d0JDeUFLS0FJRUlRb0xBa0FnQ2tVTkFDQUFJQTRnQVNnQ0JDQU5RUkZxZGtFRWNTQUJRUVJySWc4b0FnQWdEVUVUYW5aQkFYRWdBU2dDQUNJSklBMUJFR3AyUWNBQWNTQUpJQTEyUWFvQmNYSWdDU0FOUVF4cVFRNGdCQnQyUVJCeGNuSnlJZ3BCNExrQmFpMEFBRUVDZEdvaUREWUNhQ0FBSUFjZ0RDZ0NBQ0lMS0FJQUlnbHJJZ2MyQWdRZ0NrSGd1d0ZxTFFBQUlRNENRQ0FKSUFoQkVIWkxCRUFnQ3lnQ0JDRUtJQUFnQ1RZQ0JDQU1JQXRCQ0VFTUlBY2dDVWtpQnh0cUtBSUFOZ0lBSUFvZ0NrVWdCeHNoQ3lBQUtBSUlJUWNEUUFKQUlBY05BQ0FBS0FJUUlnZEJBV29oRENBSExRQUJJUW9nQnkwQUFFSC9BVVlFUUNBS1FaQUJUd1JBSUFBZ0FDZ0NERUVCYWpZQ0RDQUlRWUQrQTJvaENFRUlJUWNNQWdzZ0FDQU1OZ0lRSUFnZ0NrRUpkR29oQ0VFSElRY01BUXNnQUNBTU5nSVFRUWdoQnlBSUlBcEJDSFJxSVFnTElBQWdCMEVCYXlJSE5nSUlJQUFnQ0VFQmRDSUlOZ0lBSUFBZ0NVRUJkQ0lKTmdJRUlBbEJnSUFDU1EwQUN3d0JDeUFBSUFnZ0NVRVFkR3NpQ2pZQ0FDQUhRWUNBQW5GRkJFQWdDeWdDQkNFSUlBd2dDMEVNUVFnZ0J5QUpTU0lKRzJvb0FnQTJBZ0FnQ0VVZ0NDQUpHeUVMSUFBb0FnZ2hDQU5BQWtBZ0NBMEFJQUFvQWhBaUNFRUJhaUVNSUFndEFBRWhDU0FJTFFBQVFmOEJSZ1JBSUFsQmtBRlBCRUFnQUNBQUtBSU1RUUZxTmdJTUlBcEJnUDREYWlFS1FRZ2hDQXdDQ3lBQUlBdzJBaEFnQ2lBSlFRbDBhaUVLUVFjaENBd0JDeUFBSUF3MkFoQkJDQ0VJSUFvZ0NVRUlkR29oQ2dzZ0FDQUlRUUZySWdnMkFnZ2dBQ0FLUVFGMElnbzJBZ0FnQUNBSFFRRjBJZ2MyQWdRZ0IwR0FnQUpKRFFBTERBRUxJQXNvQWdRaEN3c2dBa0VBSUFOcklBTWdDeUFPY3lJQ0d6WUNBQ0FQSUE4b0FnQkJJQ0FOZEhJMkFnQWdBU0FCS0FJQUlBSkJFM1JCRUhJZ0RYUnlOZ0lBSUFFZ0FTZ0NCRUVJSUExMGNqWUNCQ0FFSUFaeVJRUkFJQUVnQlVFQ2RHc2lBQ0FBS0FJRVFZQ0FBbkkyQWdRZ0FDQUFLQUlBSUFKQkgzUnlRWUNBQkhJMkFnQWdBRUVFYXlJQUlBQW9BZ0JCZ0lBSWNqWUNBQXNnQkVFRFJ3MEFJQUVnQlVFQ2RHb2lBQ0FBS0FJRVFRRnlOZ0lFSUFBZ0FDZ0NBQ0FDUVJKMGNrRUNjallDQUNBQVFRUnJJZ0FnQUNnQ0FFRUVjallDQUFzZ0FTQUJLQUlBUVlDQWdBRWdEWFJ5TmdJQUN3dXRBUUFnQUVHQW5nRTJBbVFnQUVHQW5nRTJBbUFnQUVHQW5nRTJBbHdnQUVHQW5nRTJBbGdnQUVHQW5nRTJBbFFnQUVHQW5nRTJBbEFnQUVHQW5nRTJBa3dnQUVHQW5nRTJBa2dnQUVHQW5nRTJBa1FnQUVHQW5nRTJBa0FnQUVHQW5nRTJBandnQUVHQW5nRTJBamdnQUVHQW5nRTJBalFnQUVHQW5nRTJBakFnQUVHQW5nRTJBaXdnQUVHQW5nRTJBaWdnQUVHQW5nRTJBaVFnQUVHQW5nRTJBaUFnQUVHQW5nRTJBaHdMa2dZQ0NYOEVmaUFBSUFFMkFnQWdBUDBNQUFBQUFBQUFBQUFBQUFBQUFBQUFBUDBMQXdnZ0FDQUROZ0ljSUFBZ0FrRUJheUlGTmdJWUlBRkJBM0VoQ2dKL0lBSkJBRXdFUUNBQklRUWdBd3dCQ3lBQUlBRkJBV29pQkRZQ0FDQUJMUUFBQ3lFQlFRZ2hCeUFBUVFnMkFoQWdBQ0FCclNJTk53TUlJQUFnRFVML0FZTWlEa0wvQVZFaUNUWUNGQUpBSUFwQkEwWU5BQ0FBSUFKQkFtc2lDRFlDR0FKL0lBSkJBa2dFUUNBRUlRRWdBd3dCQ3lBQUlBUkJBV29pQVRZQ0FDQUVMUUFBQ3lFRUlBQkJEMEVRSUE1Qy93RlJHeUlITmdJUUlBQWdCSzBpRGtML0FZTWlEMEwvQVZFaUNUWUNGQ0FBSUE1Q0NJWWdEWVFpRFRjRENDQUtRUUpHQkVBZ0FTRUVJQVVoQWlBSUlRVU1BUXNnQUNBQ1FRTnJJZ3MyQWhnZ0FBSi9JQUpCQTBnRVFDQUJJUVlnQXd3QkN5QUFJQUZCQVdvaUJqWUNBQ0FCTFFBQUM2MGlEa0wvQVlNaUVFTC9BVkVpQ1RZQ0ZDQUFRUWRCQ0NBUFF2OEJVUnNnQjJvaUFUWUNFQ0FBSUE0Z0I2MkdJQTJFSWcwM0F3Z2dDa0VCUmdSQUlBWWhCQ0FCSVFjZ0NDRUNJQXNoQlF3QkN5QUFJQUpCQkdzaUJUWUNHQ0FBQW44Z0FrRUVTQVJBSUFZaEJDQUREQUVMSUFBZ0JrRUJhaUlFTmdJQUlBWXRBQUFMclNJT1F2OEJnMEwvQVZFaUNUWUNGQ0FBUVFkQkNDQVFRdjhCVVJzZ0FXb2lCellDRUNBQUlBNGdBYTJHSUEyRUlnMDNBd2dnQ3lFQ0N3SkFJQUpCQlU0RVFDQUVLQUlBSVFNZ0FDQUNRUVZyTmdJWUlBQWdCRUVFYWpZQ0FBd0JDMEVBSVFGQmYwRUFJQU1iSVFNZ0FrRUNTQTBBQTBBZ0FDQUVRUUZxSWdJMkFnQWdCQzBBQUNFRUlBQWdCVUVCYXlJR05nSVlJQU5CL3dFZ0FYUkJmM054SUFRZ0FYUnlJUU1nQVVFSWFpRUJJQVZCQVVzaERDQUNJUVFnQmlFRklBd05BQXNMSUFBZ0EwRVlkaUlCUWY4QlJqWUNGQ0FBUVFkQkNDQUpHeUlDUVFkQkNDQURRZjhCY1NJRVFmOEJSaHRxSWdWQkIwRUlJQU5CQ0haQi93RnhJZ1pCL3dGR0cyb2lDRUVIUVFnZ0EwRVFka0gvQVhFaUEwSC9BVVliSUFkcWFqWUNFQ0FBSUFZZ0FuUWdBeUFGZEhJZ0FTQUlkSElnQkhLdElBZXRoaUFOaERjRENBdTJCUUlTZndKK0FuOGdBQ2dDSENBQlFaZ0JiR29pQWtHUUFXc29BZ0FnQWtHWUFXc29BZ0JySWdNaEJTQUNRWXdCYXlnQ0FDQUNRWlFCYXlnQ0FHc2lBaUVHUWNBQUlBTWdBMEhBQUU4YklRTkJ3QUFnQWlBQ1FjQUFUeHNoQkFKQUlBVkZEUUFnQmtVTkFDQURSUTBBSUFSRkRRQkJmeUFFYmtFQ2RpQURTUTBBUVFGQkhCQU1JZ0lnQkRZQ0RDQUNJQU0yQWdnZ0FpQUdOZ0lFSUFJZ0JUWUNBQ0FDSUFTdEloUWdCcTE4UWdGOUlCU0FJaFNuSWdRMkFoUWdBaUFEclNJVklBV3RmRUlCZlNBVmdDSVZweUlETmdJUUFrQWdGRUwvLy8vL0Q0TWdGVUwvLy8vL0Q0TitRaUNJcHcwQUlBSkJCQ0FESUFSc0VBd2lBellDR0NBRFJRMEFJQUlNQWdzZ0FoQUpDMEVBQ3lJSlJRUkFRUUFQQ3dKQUlBRUVRQU5BSUE1Qm1BRnNJZzhnQUNnQ0hHb2lCU2dDR0NJQ0JFQWdCVUVjYWlFUUlBVW9BaFFoQXlBRktBSVFJUVJCQUNFS0EwQWdBeUFFYkFSQUlCQWdDa0VrYkdvaEJrRUFJUXNEUUNBR0tBSVVJQXRCS0d4cUlnZ29BaFFpQWlBSUtBSVFJZ2RzQkVCQkFDRUVBMEFnQ0NnQ0dDQUVRUVowYWlJREtBSThJaEVFUUNBREtBSU1JUWNnQXlnQ0ZDRVNJQU1vQWhBaERDQURLQUlJSWhNZ0JpZ0NBR3NoQXlBR0tBSVFJZzFCQVhFRVFDQUFLQUljSUE5cUlnSkJrQUZyS0FJQUlBTnFJQUpCbUFGcktBSUFheUVEQ3lBSElBWW9BZ1JySVFJZ0RVRUNjUVJBSUFJZ0FDZ0NIQ0FQYWlJTlFZd0JheWdDQUdvZ0RVR1VBV3NvQWdCcklRSUxJQWtnQXlBQ0lBTWdEQ0FUYXlJTWFpQVNJQWRySUFKcUlCRkJBU0FNUVFBUUgwVU5DU0FJS0FJUUlRY2dDQ2dDRkNFQ0N5QUVRUUZxSWdRZ0FpQUhiRWtOQUFzZ0JTZ0NFQ0VFSUFVb0FoUWhBd3NnQzBFQmFpSUxJQU1nQkd4SkRRQUxJQVVvQWhnaEFnc2dDa0VCYWlJS0lBSkpEUUFMQ3lBT1FRRnFJZzRnQVVjTkFBc0xJQWtQQ3lBSkVCMUJBQXZRREFJUWZ3WjdJQUFvQWdnaUN5QUFLQUlFYWlFSEFrQWdBQ2dDREVVRVFDQUhRUUpJRFFFZ0FTZ0NBQ0FCSUF0QkFuUnFJZzBvQWdBaUJFRUJha0VCZFdzaEF5QUFLQUlBSVFZQ1FDQUhRUVJKQkVBZ0JDRUNEQUVMSUFkQkJHc2lBRUVCZGlJSlFRRnFJUXdDUUNBQVFSWkpCRUJCQVNFQURBRUxJQVlnQVNBTFFRSjBhaUlGSUFsQkFuUWlBbXBCQ0dwSklBWWdDVUVEZEdwQkNHb2lBQ0FGUVFScVMzRUVRRUVCSVFBTUFRc2dCaUFCSUFKcVFRaHFTU0FCUVFScUlBQkpjUVJBUVFFaEFBd0JDeUFNUWZ6Ly8vOEhjU0lGUVFGeUlRQWdCVUVCZENFSUlBVDlFU0VTSUFQOUVTRVQvUXdBQUFBQUFnQUFBQVFBQUFBR0FBQUFJUlpCQUNFQ0EwQWdBU0FDUVFKMFFRUnlJZ05xL1FBQ0FDRVZJQU1nRFdyOUFBSUFJUlFnQmlBQ1FRTjBhaUlESUJQOVdnSUFBeUFEUVFocUlCVWdGQ0FTSUJUOURRd05EZzhRRVJJVEZCVVdGeGdaR2hzaUZmMnVBZjBNQWdBQUFBSUFBQUFDQUFBQUFnQUFBUDJ1QVVFQy9hd0IvYkVCSWhMOVdnSUFBQ0FEUVJCcUlCTDlXZ0lBQVNBRFFSaHFJQkw5V2dJQUFpQUdJQmI5REFFQUFBQUJBQUFBQVFBQUFBRUFBQUQ5VUNJWC9Sc0FRUUowYWlBU0lCTWdFdjBOREEwT0R4QVJFaE1VRlJZWEdCa2FHLzJ1QVVFQi9hd0JJQlg5cmdFaUUvMWFBZ0FBSUFZZ0YvMGJBVUVDZEdvZ0UvMWFBZ0FCSUFZZ0YvMGJBa0VDZEdvZ0UvMWFBZ0FDSUFZZ0YvMGJBMEVDZEdvZ0UvMWFBZ0FESUJiOURBZ0FBQUFJQUFBQUNBQUFBQWdBQUFEOXJnRWhGaUFTSVJNZ0ZDRVNJQUpCQkdvaUFpQUZSdzBBQ3lBUy9Sc0RJUUlnRS8wYkF5RURJQVVnREVZTkFTQUNJUVFMQTBBZ0FTQUFRUUowSWdKcUtBSUFJUWtnQWlBTmFpZ0NBQ0VDSUFZZ0NFRUNkR29pQlNBRE5nSUFJQVVnQXlBSklBSWdCR3BCQW1wQkFuVnJJZ05xUVFGMUlBUnFOZ0lFSUFoQkFtb2hDQ0FBSUF4SElSQWdBaUVFSUFCQkFXb2hBQ0FRRFFBTEN5QUdJQWhCQW5ScUlBTTJBZ0JCZkNFQUlBZEJBWEVFZnlBR0lBZEJBV3NpQUVFQ2RHb2dBU0FBUVFGMGFpZ0NBQ0FDUVFGcVFRRjFheUlBTmdJQUlBQWdBMnBCQVhVaEEwRjRCVUY4Q3lBR0lBZEJBblFpQUdwcUlBSWdBMm8yQWdBZ0FTQUdJQUFRQ3hvUEN3SkFBa0FDUUNBSFFRRnJEZ0lBQVFJTElBRWdBU2dDQUVFQ2JUWUNBQThMSUFBb0FnQWlCQ0FCS0FJQUlBRWdDMEVDZEdvaUF5Z0NBRUVCYWtFQmRXc2lBRFlDQkNBRUlBQWdBeWdDQUdvMkFnQWdBU0FFS1FJQU53SUFEd3NnQjBFRFNBMEFJQUFvQWdBaUNpQUJLQUlBSUFFZ0MwRUNkR29pRGlnQ0JDSUVJQTRvQWdBaUFHcEJBbXBCQW5WcklnTWdBR28yQWdCQkFTRUlBa0FnQjBFQ2F5SUdJQWRCQVhFaURFVWlBR3RCQWtrRVFDQUVJUUlNQVFzZ0J5QUFhMEVFYXlJQVFRRjJJZ0pCQVdvaER3SkFBa0FnQUVFV1NRMEFJQXBCQkdvaUJTQUJJQUpCQW5RaUFHcEJDR3BKSUFvZ0FrRURkR3BCREdvaUFpQUJRUVJxUzNFTkFDQUZJQUFnQVNBTFFRSjBhaUlBYWtFTWFra2dBRUVJYWlBQ1NYRU5BQ0FQUVh4eElnVkJBWEloQUNBRlFRRjBRUUZ5SVFnZ0JQMFJJUk1nQS8wUklSSkJBQ0VDQTBBZ0NpQUNRUU4wYWlJRUlBRWdBa0VDZENJRGF2MEFBZ1FnRXlBRElBNXEvUUFDQ0NJVC9RME1EUTRQRUJFU0V4UVZGaGNZR1JvYkloVWdFLzJ1QWYwTUFnQUFBQUlBQUFBQ0FBQUFBZ0FBQVAydUFVRUMvYXdCL2JFQkloUWdGQ0FTSUJUOURRd05EZzhRRVJJVEZCVVdGeGdaR2h2OXJnRkJBZjJzQVNBVi9hNEJJaFg5RFFRRkJnY1lHUm9iQ0FrS0N4d2RIaC85Q3dJVUlBUWdFaUFWL1EwTURRNFBFQkVTRXdBQkFnTVVGUllYSUJUOURRQUJBZ01FQlFZSEVCRVNFd3dORGcvOUN3SUVJQlFoRWlBQ1FRUnFJZ0lnQlVjTkFBc2dFLzBiQXlFQ0lCTDlHd01oQXlBRklBOUdEUUlnQWlFRURBRUxRUUVoQUFzRFFDQUJJQUJCQW5ScUtBSUFJUTBnRGlBQVFRRnFJZ1ZCQW5ScUtBSUFJUUlnQ2lBSVFRSjBhaUlKSUFNMkFnQWdDU0FESUEwZ0FpQUVha0VDYWtFQ2RXc2lBMnBCQVhVZ0JHbzJBZ1FnQ0VFQ2FpRUlJQUFnRDBjaEVTQUNJUVFnQlNFQUlCRU5BQXNMSUFvZ0NFRUNkR29nQXpZQ0FBSkFJQXhGQkVBZ0NpQUdRUUowYWlBQklBZEJBWFJxUVFScktBSUFJQUpCQVdwQkFYVnJJZ0FnQTJwQkFYVWdBbW8yQWdBTUFRc2dBaUFEYWlFQUN5QUtJQWRCQW5RaUEycEJCR3NnQURZQ0FDQUJJQW9nQXhBTEdnc0xvQWNEQTMwRGV3Si9JQU5CQ0U4RVFDQURRUU4ySVFzRFFDQUIvUUFFQUNFSElBQWdBUDBBQkFBaUNDQUMvUUFFQUNJSi9ReThkTE0vdkhTelA3eDBzeis4ZExNLy9lWUIvZVFCL1FzRUFDQUJJQWdnQi8wTXp6R3dQczh4c0Q3UE1iQSt6ekd3UHYzbUFmM2xBU0FKL1F6aDBUWS80ZEUyUCtIUk5qL2gwVFkvL2VZQi9lVUIvUXNFQUNBQ0lBZ2dCLzBNNWREaVArWFE0ai9sME9JLzVkRGlQLzNtQWYza0FmMExCQUFnQWYwQUJCQWhCeUFBSUFEOUFBUVFJZ2dnQXYwQUJCQWlDZjBNdkhTelA3eDBzeis4ZExNL3ZIU3pQLzNtQWYza0FmMExCQkFnQVNBSUlBZjlETTh4c0Q3UE1iQSt6ekd3UHM4eHNENzk1Z0g5NVFFZ0NmME00ZEUyUCtIUk5qL2gwVFkvNGRFMlAvM21BZjNsQWYwTEJCQWdBaUFJSUFmOURPWFE0ai9sME9JLzVkRGlQK1hRNGovOTVnSDk1QUg5Q3dRUUlBSkJJR29oQWlBQlFTQnFJUUVnQUVFZ2FpRUFJQXBCQVdvaUNpQUxSdzBBQ3dzQ1FDQURRUWR4SWdORkRRQWdBU29DQUNFRUlBQWdBaW9DQUNJR1E3eDBzeitVSUFBcUFnQWlCWkk0QWdBZ0FTQUZJQVJEenpHd3ZwU1NJQVpENGRFMnY1U1NPQUlBSUFJZ0JTQUVRK1hRNGorVWtqZ0NBQ0FEUVFGR0RRQWdBU29DQkNFRUlBQWdBaW9DQkNJR1E3eDBzeitVSUFBcUFnUWlCWkk0QWdRZ0FTQUZJQVJEenpHd3ZwU1NJQVpENGRFMnY1U1NPQUlFSUFJZ0JTQUVRK1hRNGorVWtqZ0NCQ0FEUVFKR0RRQWdBU29DQ0NFRUlBQWdBaW9DQ0NJR1E3eDBzeitVSUFBcUFnZ2lCWkk0QWdnZ0FTQUZJQVJEenpHd3ZwU1NJQVpENGRFMnY1U1NPQUlJSUFJZ0JTQUVRK1hRNGorVWtqZ0NDQ0FEUVFOR0RRQWdBU29DRENFRUlBQWdBaW9DRENJR1E3eDBzeitVSUFBcUFnd2lCWkk0QWd3Z0FTQUZJQVJEenpHd3ZwU1NJQVpENGRFMnY1U1NPQUlNSUFJZ0JTQUVRK1hRNGorVWtqZ0NEQ0FEUVFSR0RRQWdBU29DRUNFRUlBQWdBaW9DRUNJR1E3eDBzeitVSUFBcUFoQWlCWkk0QWhBZ0FTQUZJQVJEenpHd3ZwU1NJQVpENGRFMnY1U1NPQUlRSUFJZ0JTQUVRK1hRNGorVWtqZ0NFQ0FEUVFWR0RRQWdBU29DRkNFRUlBQWdBaW9DRkNJR1E3eDBzeitVSUFBcUFoUWlCWkk0QWhRZ0FTQUZJQVJEenpHd3ZwU1NJQVpENGRFMnY1U1NPQUlVSUFJZ0JTQUVRK1hRNGorVWtqZ0NGQ0FEUVFaR0RRQWdBU29DR0NFRUlBQWdBaW9DR0NJR1E3eDBzeitVSUFBcUFoZ2lCWkk0QWhnZ0FTQUZJQVJEenpHd3ZwU1NJQVpENGRFMnY1U1NPQUlZSUFJZ0JTQUVRK1hRNGorVWtqZ0NHQXNMNEFFQ0JuOERld0pBSUFORkRRQWdBMEVFVHdSQUlBTkJmSEVoQmdOQUlBQWdCRUVDZENJRmFpSUhJQWY5QUFJQUlBSWdCV29pQi8wQUFnQWlDeUFCSUFWcUlnWDlBQUlBSWd6OXJnRkJBdjJzQWYyeEFTSUtJQXY5cmdIOUN3SUFJQVVnQ3YwTEFnQWdCeUFLSUF6OXJnSDlDd0lBSUFSQkJHb2lCQ0FHUncwQUN5QURJQVpHRFFFTEEwQWdBQ0FHUVFKMElnUnFJZ1VnQlNnQ0FDQUNJQVJxSWdVb0FnQWlCeUFCSUFScUlnZ29BZ0FpQ1dwQkFuVnJJZ1FnQjJvMkFnQWdDQ0FFTmdJQUlBVWdCQ0FKYWpZQ0FDQUdRUUZxSWdZZ0EwY05BQXNMQzkwQkFRUi9Jd0JCZ0FGcklnWWtBQ0FHSVFVQ1FDQUJLQUlNSUFKQkJIUnFJZ0lvQWdBaUJFVUVRQ0FDSVFFTUFRc0RRQ0FGSUFJMkFnQWdCVUVFYWlFRklBUWlBU0lDS0FJQUlnUU5BQXNMUVFBaEJBTkFJQUVvQWdnaUFpQUVTQVJBSUFFZ0JEWUNDQ0FFSVFJTEFrQWdBaUFEVGcwQUEwQWdBaUFCS0FJRVRnMEJBa0FnQUVFQkVCa0VRQ0FCSUFJMkFnUU1BUXNnQWtFQmFpRUNDeUFDSUFOSURRQUxDeUFCSUFJMkFnZ2dCU0FHUndSQUlBVkJCR3NpQlNnQ0FDRUJJQUloQkF3QkN3c2dBU2dDQkNFSElBWkJnQUZxSkFBZ0J5QURTQXY5QmdFTGZ5TUFRWUFDYXlJS0pBQUNRQ0FBUlFSQVFRQWhBQXdCQ3dKQUlBRWdBQ2dDQUVZRVFDQUFLQUlFSUFKR0RRRUxJQUFnQWpZQ0JDQUFJQUUyQWdBZ0NpQUNOZ0lBSUFvZ0FUWUNnQUVnQWlFRUlBRWhCUU5BSUFvZ0J5SU1RUUZxSWdkQkFuUWlDR29nQkVFQmFrRUNiU0lKTmdJQUlBcEJnQUZxSUFocUlBVkJBV3BCQW0waUNEWUNBQ0FHSUFRZ0JXd2lDMm9oQmlBSklRUWdDQ0VGSUF0QkFVc05BQXNnQUNBR05nSUlBa0FDUUFKQUFrQWdCa1VFUUNBQUtBSU1JZ1JGRFFJZ0FFRU1haUVGREFFTElBWkJCSFFpQkNBQUtBSVFUUTBESUFBb0Fnd2dCQkFRSWdFTkFpQURRUUZCbWpGQkFCQUlJQUJCREdvaUJTZ0NBQ0lFUlEwQkN5QUVFQWtnQlVFQU5nSUFDeUFBRUFsQkFDRUFEQU1MSUFBZ0FUWUNEQ0FCSUFBb0FoQWlBbXBCQUNBRUlBSnJFQTRhSUFBZ0JEWUNFQ0FBS0FJRUlRSWdBQ2dDQUNFQkN5QUFLQUlNSVFVZ0RBUkFRUUFoQXlBRklBRWdBbXhCQkhScUlnUWhCZ05BQWtBZ0NpQURRUUowSWdGcUtBSUFJZ2hCQUV3TkFDQUlRUUZySVF0QkFDRUpBa0FDUUNBS1FZQUJhaUFCYWlnQ0FDSUNRUUJNQkVBZ0NFRUJjU0VOUVFBaEJ5QUlRUUZIRFFFZ0JpRUJEQUlMQTBBZ0JpRUJJQUloQmdOQUFrQWdCU0FFTmdJQUlBWkJBVVlFUUNBRlFSQnFJUVVnQkVFUWFpRUVEQUVMSUFVZ0JEWUNFQ0FFUVJCcUlRUWdCVUVnYWlFRklBWkJBa29oRGlBR1FRSnJJUVlnRGcwQkN3c2dCQ0FCSUFKQkJIUnFJQWtnQ1NBTFJuSkJBWEVpQnhzaEJpQUVJQUVnQnhzaEJDQUpRUUZxSWdrZ0NFY05BQXNNQWdzZ0NFSCsvLy8vQjNFaENBTkFJQWNnQzBZaEFTQUhRUUpxSVFjZ0JDQUdJQUViSWdRaEJpQUVJUUVnQ1VFQ2FpSUpJQWhIRFFBTEN5QU5SUVJBSUFRaEJnd0JDeUFFSUFFZ0FrRUVkR29nQnlBSElBdEdja0VCY1NJQ0d5RUdJQVFnQVNBQ0d5RUVDeUFEUVFGcUlnTWdERWNOQUFzTElBVkJBRFlDQUFzZ0FDZ0NDQ0lCUlEwQUlBQW9BZ3doQkNBQlFRUlBCRUFnQVVGOGNTRUNRUUFoQlFOQUlBUkJBRFlDUENBRVF1Y0hOd0kwSUFSQkFEWUNMQ0FFUXVjSE53SWtJQVJCQURZQ0hDQUVRdWNITndJVUlBUkJBRFlDRENBRVF1Y0hOd0lFSUFSQlFHc2hCQ0FGUVFScUlnVWdBa2NOQUFzTElBRkJBM0VpQVVVTkFFRUFJUVVEUUNBRVFRQTJBZ3dnQkVMbkJ6Y0NCQ0FFUVJCcUlRUWdCVUVCYWlJRklBRkhEUUFMQ3lBS1FZQUNhaVFBSUFBTHNRRUJBMzhDUUNBQVJRMEFJQUFvQWdnaUFVVU5BQ0FBS0FJTUlRQWdBVUVFVHdSQUlBRkJmSEVoQXdOQUlBQkJBRFlDUENBQVF1Y0hOd0kwSUFCQkFEWUNMQ0FBUXVjSE53SWtJQUJCQURZQ0hDQUFRdWNITndJVUlBQkJBRFlDRENBQVF1Y0hOd0lFSUFCQlFHc2hBQ0FDUVFScUlnSWdBMGNOQUFzTElBRkJBM0VpQVVVTkFFRUFJUUlEUUNBQVFRQTJBZ3dnQUVMbkJ6Y0NCQ0FBUVJCcUlRQWdBa0VCYWlJQ0lBRkhEUUFMQ3d2N0JRRVFmeU1BUVlBQ2F5SUlKQUFDZjBFQlFSUVFEQ0lHUlFSQUlBSkJBVUgwTUVFQUVBaEJBQXdCQ3lBR0lBRTJBZ1FnQmlBQU5nSUFJQWdnQVRZQ0FDQUlJQUEyQW9BQkEwQWdDQ0FGSWcxQkFXb2lCVUVDZENJSGFpQUJRUUZxUVFKdElnTTJBZ0FnQ0VHQUFXb2dCMm9nQUVFQmFrRUNiU0lITmdJQUlBUWdBQ0FCYkNJSmFpRUVJQU1oQVNBSElRQWdDVUVCU3cwQUN5QUdJQVEyQWdnZ0JFVUVRQ0FHRUFsQkFBd0JDeUFHSUFSQkVCQU1JZ00yQWd3Z0EwVUVRQ0FDUVFGQjJocEJBQkFJSUFZUUNVRUFEQUVMSUFZZ0JpZ0NDQ0lMUVFSME5nSVFJQU1oQUNBTkJFQWdBeUFHS0FJRUlBWW9BZ0JzUVFSMGFpSUVJUUVEUUFKQUlBZ2dEa0VDZENJQ2FpZ0NBQ0lKUVFCTURRQWdDVUVCYXlFTVFRQWhCd0pBSUFoQmdBRnFJQUpxS0FJQUlnSkJBRXdFUUVFQUlRVWdDVUVCUndSQUlBbEIvdi8vL3dkeElRb0RRQ0FGSUF4R0lROGdCVUVDYWlFRklBRWdCQ0FQR3lJRUlRRWdCMEVDYWlJSElBcEhEUUFMQ3lBSlFRRnhEUUVnQkNFQkRBSUxBMEFnQkNFRklBSWhCQU5BQWtBZ0FDQUJOZ0lBSUFSQkFVWUVRQ0FBUVJCcUlRQWdBVUVRYWlFQkRBRUxJQUFnQVRZQ0VDQUJRUkJxSVFFZ0FFRWdhaUVBSUFSQkFrb2hFQ0FFUVFKcklRUWdFQTBCQ3dzZ0FTQUZJQUpCQkhScUlBY2dCeUFNUm5KQkFYRWlDaHNoQkNBQklBVWdDaHNoQVNBSFFRRnFJZ2NnQ1VjTkFBc01BUXNnQVNBRUlBSkJCSFJxSUFVZ0JTQU1SbkpCQVhFaUJSc2hFU0FCSUFRZ0JSc2hBU0FSSVFRTElBNUJBV29pRGlBTlJ3MEFDd3NnQUVFQU5nSUFBa0FnQzBVTkFDQUxRUVJQQkVBZ0MwRjhjU0VBUVFBaEFRTkFJQU5CQURZQ1BDQURRdWNITndJMElBTkJBRFlDTENBRFF1Y0hOd0lrSUFOQkFEWUNIQ0FEUXVjSE53SVVJQU5CQURZQ0RDQURRdWNITndJRUlBTkJRR3NoQXlBQlFRUnFJZ0VnQUVjTkFBc0xJQXRCQTNFaUFFVU5BRUVBSVFFRFFDQURRUUEyQWd3Z0EwTG5CemNDQkNBRFFSQnFJUU1nQVVFQmFpSUJJQUJIRFFBTEN5QUdDeUVTSUFoQmdBSnFKQUFnRWd0VEFRRi9BbjhnQUMwQURFSC9BVVlFUUNBQVFvRCtnNER3QURjQ0RFRUFJQUFvQWdnaUFTQUFLQUlFVHcwQkdpQUFJQUZCQVdvMkFnZ2dBQ0FCTFFBQVFZRCtBM0kyQWd3TElBQkJBRFlDRUVFQkN3dEpBUUYvQWtCQkFVRXNFQXdpQVFSQUlBRkJBRFlDRUFKQUlBQkJBRXdFUUNBQlFRRkJDQkFNSWdBMkFpUWdBRVVOQVF3REN5QUJRUUEyQWd3TElBRVFDUXRCQUNFQkN5QUJDMzRDQVg4QmZpQUF2U0lEUWpTSXAwSC9EM0VpQWtIL0QwY0VmQ0FDUlFSQUlBRWdBRVFBQUFBQUFBQUFBR0VFZjBFQUJTQUFSQUFBQUFBQUFQQkRvaUFCRUY4aEFDQUJLQUlBUVVCcUN6WUNBQ0FBRHdzZ0FTQUNRZjRIYXpZQ0FDQURRdi8vLy8vLy8vK0hnSCtEUW9DQWdJQ0FnSUR3UDRTL0JTQUFDd3VSQWdBZ0FFVUVRRUVBRHdzQ2Z3SkFJQUZCL3dCTkRRQUNRRUdVendFb0FnQW9BZ0JGQkVBZ0FVR0FmM0ZCZ0w4RFJnMENEQUVMSUFGQi93OU5CRUFnQUNBQlFUOXhRWUFCY2pvQUFTQUFJQUZCQm5aQndBRnlPZ0FBUVFJTUF3c2dBVUdBUUhGQmdNQURSeUFCUVlDd0EwOXhSUVJBSUFBZ0FVRS9jVUdBQVhJNkFBSWdBQ0FCUVF4MlFlQUJjam9BQUNBQUlBRkJCblpCUDNGQmdBRnlPZ0FCUVFNTUF3c2dBVUdBZ0FSclFmLy9QMDBFUUNBQUlBRkJQM0ZCZ0FGeU9nQURJQUFnQVVFU2RrSHdBWEk2QUFBZ0FDQUJRUVoyUVQ5eFFZQUJjam9BQWlBQUlBRkJESFpCUDNGQmdBRnlPZ0FCUVFRTUF3c0xRWlRHQVVFWk5nSUFRWDhNQVFzZ0FDQUJPZ0FBUVFFTEM3d0NBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FVRUphdzRTQUFnSkNnZ0pBUUlEQkFvSkNnb0lDUVVHQndzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQktBSUFOZ0lBRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk1nRUFOd01BRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk13RUFOd01BRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk1BQUFOd01BRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk1RQUFOd01BRHdzZ0FpQUNLQUlBUVFkcVFYaHhJZ0ZCQ0dvMkFnQWdBQ0FCS3dNQU9RTUFEd3NnQUNBQ0lBTVJBd0FMRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk5BSUFOd01BRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk5RSUFOd01BRHdzZ0FpQUNLQUlBUVFkcVFYaHhJZ0ZCQ0dvMkFnQWdBQ0FCS1FNQU53TUFDM01CQm44Z0FDZ0NBQ0lETEFBQVFUQnJJZ0ZCQ1VzRVFFRUFEd3NEUUVGL0lRUWdBa0hNbWJQbUFFMEVRRUYvSUFFZ0FrRUtiQ0lGYWlBQklBVkIvLy8vL3dkelN4c2hCQXNnQUNBRFFRRnFJZ1UyQWdBZ0F5d0FBU0VHSUFRaEFpQUZJUU1nQmtFd2F5SUJRUXBKRFFBTElBSUx0QlFDRlg4QmZpTUFRVUJxSWdna0FDQUlJQUUyQWp3Z0NFRW5haUVXSUFoQktHb2hFUUpBQWtBQ1FBSkFBMEJCQUNFSEEwQWdBU0VOSUFjZ0RrSC8vLy8vQjNOS0RRSWdCeUFPYWlFT0FrQUNRQUpBQWtBZ0FTSUhMUUFBSWdzRVFBTkFBa0FDUUNBTFFmOEJjU0lCUlFSQUlBY2hBUXdCQ3lBQlFTVkhEUUVnQnlFTEEwQWdDeTBBQVVFbFJ3UkFJQXNoQVF3Q0N5QUhRUUZxSVFjZ0N5MEFBaUVaSUF0QkFtb2lBU0VMSUJsQkpVWU5BQXNMSUFjZ0RXc2lCeUFPUWYvLy8vOEhjeUlYU2cwSklBQUVRQ0FBSUEwZ0J4QVJDeUFIRFFjZ0NDQUJOZ0k4SUFGQkFXb2hCMEYvSVJBQ1FDQUJMQUFCUVRCcklnbEJDVXNOQUNBQkxRQUNRU1JIRFFBZ0FVRURhaUVIUVFFaEVpQUpJUkFMSUFnZ0J6WUNQRUVBSVF3Q1FDQUhMQUFBSWd0QklHc2lBVUVmU3dSQUlBY2hDUXdCQ3lBSElRbEJBU0FCZENJQlFZblJCSEZGRFFBRFFDQUlJQWRCQVdvaUNUWUNQQ0FCSUF4eUlRd2dCeXdBQVNJTFFTQnJJZ0ZCSUU4TkFTQUpJUWRCQVNBQmRDSUJRWW5SQkhFTkFBc0xBa0FnQzBFcVJnUkFBbjhDUUNBSkxBQUJRVEJySWdGQkNVc05BQ0FKTFFBQ1FTUkhEUUFDZnlBQVJRUkFJQVFnQVVFQ2RHcEJDallDQUVFQURBRUxJQU1nQVVFRGRHb29BZ0FMSVE4Z0NVRURhaUVCUVFFTUFRc2dFZzBHSUFsQkFXb2hBU0FBUlFSQUlBZ2dBVFlDUEVFQUlSSkJBQ0VQREFNTElBSWdBaWdDQUNJSFFRUnFOZ0lBSUFjb0FnQWhEMEVBQ3lFU0lBZ2dBVFlDUENBUFFRQk9EUUZCQUNBUGF5RVBJQXhCZ01BQWNpRU1EQUVMSUFoQlBHb1FZaUlQUVFCSURRb2dDQ2dDUENFQkMwRUFJUWRCZnlFS0FuOUJBQ0FCTFFBQVFTNUhEUUFhSUFFdEFBRkJLa1lFUUFKL0FrQWdBU3dBQWtFd2F5SUpRUWxMRFFBZ0FTMEFBMEVrUncwQUlBRkJCR29oQVFKL0lBQkZCRUFnQkNBSlFRSjBha0VLTmdJQVFRQU1BUXNnQXlBSlFRTjBhaWdDQUFzTUFRc2dFZzBHSUFGQkFtb2hBVUVBSUFCRkRRQWFJQUlnQWlnQ0FDSUpRUVJxTmdJQUlBa29BZ0FMSVFvZ0NDQUJOZ0k4SUFwQkFFNE1BUXNnQ0NBQlFRRnFOZ0k4SUFoQlBHb1FZaUVLSUFnb0Fqd2hBVUVCQ3lFVEEwQWdCeUVVUVJ3aENTQUJJaGdzQUFBaUIwSDdBR3RCUmtrTkN5QUJRUUZxSVFFZ0J5QVVRVHBzYWtIUHdBRnFMUUFBSWdkQkFXdEJDRWtOQUFzZ0NDQUJOZ0k4QWtBZ0IwRWJSd1JBSUFkRkRRd2dFRUVBVGdSQUlBQkZCRUFnQkNBUVFRSjBhaUFITmdJQURBd0xJQWdnQXlBUVFRTjBhaWtEQURjRE1Bd0NDeUFBUlEwSUlBaEJNR29nQnlBQ0lBWVFZUXdCQ3lBUVFRQk9EUXRCQUNFSElBQkZEUWdMSUFBdEFBQkJJSEVOQ3lBTVFmLy9lM0VpQ3lBTUlBeEJnTUFBY1JzaERFRUFJUkJCc0FnaEZTQVJJUWtDUUFKQUFuOENRQUpBQWtBQ1FBSkFBa0FDZndKQUFrQUNRQUpBQWtBQ1FBSkFJQmdzQUFBaUIwRlRjU0FISUFkQkQzRkJBMFliSUFjZ0ZCc2lCMEhZQUdzT0lRUVdGaFlXRmhZV0ZoQVdDUVlRRUJBV0JoWVdGaFlDQlFNV0Znb1dBUllXQkFBTEFrQWdCMEhCQUdzT0J4QVdDeFlRRUJBQUN5QUhRZE1BUmcwTERCVUxJQWdwQXpBaEhFR3dDQXdGQzBFQUlRY0NRQUpBQWtBQ1FBSkFBa0FDUUNBVVFmOEJjUTRJQUFFQ0F3UWNCUVljQ3lBSUtBSXdJQTQyQWdBTUd3c2dDQ2dDTUNBT05nSUFEQm9MSUFnb0FqQWdEcXczQXdBTUdRc2dDQ2dDTUNBT093RUFEQmdMSUFnb0FqQWdEam9BQUF3WEN5QUlLQUl3SUE0MkFnQU1GZ3NnQ0NnQ01DQU9yRGNEQUF3VkMwRUlJQW9nQ2tFSVRSc2hDaUFNUVFoeUlReEIrQUFoQndzZ0VTRUJJQWdwQXpBaUhFSUFVZ1JBSUFkQklIRWhEUU5BSUFGQkFXc2lBU0FjcDBFUGNVSGd4QUZxTFFBQUlBMXlPZ0FBSUJ4Q0QxWWhHaUFjUWdTSUlSd2dHZzBBQ3dzZ0FTRU5JQWdwQXpCUURRTWdERUVJY1VVTkF5QUhRUVIyUWJBSWFpRVZRUUloRUF3REN5QVJJUUVnQ0NrRE1DSWNRZ0JTQkVBRFFDQUJRUUZySWdFZ0hLZEJCM0ZCTUhJNkFBQWdIRUlIVmlFYklCeENBNGdoSENBYkRRQUxDeUFCSVEwZ0RFRUljVVVOQWlBS0lCRWdBV3NpQVVFQmFpQUJJQXBJR3lFS0RBSUxJQWdwQXpBaUhFSUFVd1JBSUFoQ0FDQWNmU0ljTndNd1FRRWhFRUd3Q0F3QkN5QU1RWUFRY1FSQVFRRWhFRUd4Q0F3QkMwR3lDRUd3Q0NBTVFRRnhJaEFiQ3lFVklCd2dFUkFqSVEwTElCTWdDa0VBU0hFTkVTQU1RZi8vZTNFZ0RDQVRHeUVNQWtBZ0NDa0RNQ0ljUWdCU0RRQWdDZzBBSUJFaERVRUFJUW9NRGdzZ0NpQWNVQ0FSSUExcmFpSUJJQUVnQ2tnYklRb01EUXNnQ0NrRE1DRWNEQXNMQW45Qi8vLy8vd2NnQ2lBS1FmLy8vLzhIVHhzaURDSUhRUUJISVFrQ1FBSkFBa0FnQ0NnQ01DSUJRWVFNSUFFYklnMGlBVUVEY1VVTkFDQUhSUTBBQTBBZ0FTMEFBRVVOQWlBSFFRRnJJZ2RCQUVjaENTQUJRUUZxSWdGQkEzRkZEUUVnQncwQUN3c2dDVVVOQVFKQUlBRXRBQUJGRFFBZ0IwRUVTUTBBQTBCQmdJS0VDQ0FCS0FJQUlnbHJJQWx5UVlDQmdvUjRjVUdBZ1lLRWVFY05BaUFCUVFScUlRRWdCMEVFYXlJSFFRTkxEUUFMQ3lBSFJRMEJDd05BSUFFZ0FTMEFBRVVOQWhvZ0FVRUJhaUVCSUFkQkFXc2lCdzBBQ3d0QkFBc2lBU0FOYXlBTUlBRWJJZ0VnRFdvaENTQUtRUUJPQkVBZ0N5RU1JQUVoQ2d3TUN5QUxJUXdnQVNFS0lBa3RBQUFORHd3TEN5QUlLUU13SWh4Q0FGSU5BVUlBSVJ3TUNRc2dDZ1JBSUFnb0FqQU1BZ3RCQUNFSElBQkJJQ0FQUVFBZ0RCQVVEQUlMSUFoQkFEWUNEQ0FJSUJ3K0FnZ2dDQ0FJUVFocUlnYzJBakJCZnlFS0lBY0xJUXRCQUNFSEEwQUNRQ0FMS0FJQUlnMUZEUUFnQ0VFRWFpQU5FR0FpRFVFQVNBMFBJQTBnQ2lBSGEwc05BQ0FMUVFScUlRc2dCeUFOYWlJSElBcEpEUUVMQzBFOUlRa2dCMEVBU0EwTUlBQkJJQ0FQSUFjZ0RCQVVJQWRGQkVCQkFDRUhEQUVMUVFBaENTQUlLQUl3SVFzRFFDQUxLQUlBSWcxRkRRRWdDRUVFYWlJS0lBMFFZQ0lOSUFscUlna2dCMHNOQVNBQUlBb2dEUkFSSUF0QkJHb2hDeUFISUFsTERRQUxDeUFBUVNBZ0R5QUhJQXhCZ01BQWN4QVVJQThnQnlBSElBOUlHeUVIREFnTElCTWdDa0VBU0hFTkNVRTlJUWtnQUNBSUt3TXdJQThnQ2lBTUlBY2dCUkVUQUNJSFFRQk9EUWNNQ2dzZ0J5MEFBU0VMSUFkQkFXb2hCd3dBQ3dBTElBQU5DU0FTUlEwRFFRRWhCd05BSUFRZ0IwRUNkR29vQWdBaUFBUkFJQU1nQjBFRGRHb2dBQ0FDSUFZUVlVRUJJUTRnQjBFQmFpSUhRUXBIRFFFTUN3c0xRUUVoRGlBSFFRcFBEUWtEUUNBRUlBZEJBblJxS0FJQURRRWdCMEVCYWlJSFFRcEhEUUFMREFrTFFSd2hDUXdHQ3lBSUlCdzhBQ2RCQVNFS0lCWWhEU0FMSVF3TElBb2dDU0FOYXlJTElBb2dDMG9iSWdvZ0VFSC8vLy8vQjNOS0RRTkJQU0VKSUE4Z0NpQVFhaUlCSUFFZ0QwZ2JJZ2NnRjBvTkJDQUFRU0FnQnlBQklBd1FGQ0FBSUJVZ0VCQVJJQUJCTUNBSElBRWdERUdBZ0FSekVCUWdBRUV3SUFvZ0MwRUFFQlFnQUNBTklBc1FFU0FBUVNBZ0J5QUJJQXhCZ01BQWN4QVVJQWdvQWp3aEFRd0JDd3NMUVFBaERnd0RDMEU5SVFrTFFaVEdBU0FKTmdJQUMwRi9JUTRMSUFoQlFHc2tBQ0FPQzZnQ0FRUi9Jd0JCMEFGcklnVWtBQ0FGSUFJMkFzd0JJQVZCb0FGcUlnSkJBRUVvRUE0YUlBVWdCU2dDekFFMkFzZ0JBa0JCQUNBQklBVkJ5QUZxSUFWQjBBQnFJQUlnQXlBRUVHTkJBRWdOQUNBQUtBSk1RUUJJSVFnZ0FDQUFLQUlBSWdkQlgzRTJBZ0FDZndKQUFrQWdBQ2dDTUVVRVFDQUFRZEFBTmdJd0lBQkJBRFlDSENBQVFnQTNBeEFnQUNnQ0xDRUdJQUFnQlRZQ0xBd0JDeUFBS0FJUURRRUxRWDhnQUJBM0RRRWFDeUFBSUFFZ0JVSElBV29nQlVIUUFHb2dCVUdnQVdvZ0F5QUVFR01MSVFFZ0JnUi9JQUJCQUVFQUlBQW9BaVFSQUFBYUlBQkJBRFlDTUNBQUlBWTJBaXdnQUVFQU5nSWNJQUFvQWhRYUlBQkNBRGNERUVFQUJTQUJDeG9nQUNBQUtBSUFJQWRCSUhGeU5nSUFJQWdOQUFzZ0JVSFFBV29rQUFzbkFRRi9RUndoQXlBQlFRTnhCSDlCSEFVZ0FDQUJJQUlRR3lJQU5nSUFRUUJCTUNBQUd3c0wvUU1CQlg4Q2YwSHd4QUVvQWdBaUFpQUFRUWRxUVhoeElnRkJCMnBCZUhFaUEyb2hBQUpBSUFOQkFDQUFJQUpORzBVRVFDQUFQd0JCRUhSTkRRRWdBQkFCRFFFTFFaVEdBVUV3TmdJQVFYOE1BUXRCOE1RQklBQTJBZ0FnQWdzaUFrRi9Sd1JBSUFFZ0Ftb2lBRUVFYTBFUU5nSUFJQUJCRUdzaUEwRVFOZ0lBQWtBQ2YwR2d6Z0VvQWdBaUFRUi9JQUVvQWdnRlFRQUxJQUpHQkVBZ0FpQUNRUVJyS0FJQVFYNXhheUlFUVFScktBSUFJUVVnQVNBQU5nSUlJQVFnQlVGK2NXc2lBQ0FBS0FJQWFrRUVheTBBQUVFQmNRUkFJQUFvQWdRaUFTQUFLQUlJSWdRMkFnZ2dCQ0FCTmdJRUlBQWdBeUFBYXlJQk5nSUFEQU1MSUFKQkVHc01BUXNnQWtFUU5nSUFJQUlnQURZQ0NDQUNJQUUyQWdRZ0FrRVFOZ0lNUWFET0FTQUNOZ0lBSUFKQkVHb0xJZ0FnQXlBQWF5SUJOZ0lBQ3lBQUlBRkJmSEZxUVFScklBRkJBWEkyQWdBZ0FBSi9JQUFvQWdCQkNHc2lBVUgvQUUwRVFDQUJRUU4yUVFGckRBRUxJQUZCSFNBQlp5SURhM1pCQkhNZ0EwRUNkR3RCN2dCcUlBRkIveDlORFFBYVFUOGdBVUVlSUFOcmRrRUNjeUFEUVFGMGEwSEhBR29pQVNBQlFUOVBHd3NpQVVFRWRDSURRYURHQVdvMkFnUWdBQ0FEUWFqR0FXb2lBeWdDQURZQ0NDQURJQUEyQWdBZ0FDZ0NDQ0FBTmdJRVFhak9BVUdvemdFcEF3QkNBU0FCcllhRU53TUFDeUFDUVg5SEM3MEJBUUovQWtBZ0FDZ0NUQ0lCUVFCT0JFQWdBVVVOQVVITXpnRW9BZ0FnQVVILy8vLy9BM0ZIRFFFTEFrQWdBQ2dDVUVFS1JnMEFJQUFvQWhRaUFTQUFLQUlRUmcwQUlBQWdBVUVCYWpZQ0ZDQUJRUW82QUFBUEN5QUFFR2dQQ3lBQVFjd0FhaUlCSUFFb0FnQWlBa0gvLy8vL0F5QUNHellDQUFKQUFrQWdBQ2dDVUVFS1JnMEFJQUFvQWhRaUFpQUFLQUlRUmcwQUlBQWdBa0VCYWpZQ0ZDQUNRUW82QUFBTUFRc2dBQkJvQ3lBQktBSUFHaUFCUVFBMkFnQUxmQUVDZnlNQVFSQnJJZ0VrQUNBQlFRbzZBQThDUUFKQUlBQW9BaEFpQWdSL0lBSUZJQUFRTncwQ0lBQW9BaEFMSUFBb0FoUWlBa1lOQUNBQUtBSlFRUXBHRFFBZ0FDQUNRUUZxTmdJVUlBSkJDam9BQUF3QkN5QUFJQUZCRDJwQkFTQUFLQUlrRVFBQVFRRkhEUUFnQVMwQUR4b0xJQUZCRUdva0FBdXdBZ0VDZnlBQUJFQWdBQ2dDQUJBeElBQkJBRFlDQUNBQUtBSklJZ0VFUUNBQkVBa2dBRUVBTmdKSUN5QUFLQUpFSWdFRVFDQUJFQWtnQUVFQU5nSkVDeUFBS0FKc0lnRUVRQ0FCRUFrZ0FFRUFOZ0pzQ3lBQUtBSjBJZ0VFUUNBQktBSUFJZ0lFUUNBQ0VBa2dBQ2dDZENJQlFRQTJBZ0FMSUFFUUNTQUFRUUEyQW5RTElBQW9BbmdpQVFSQUlBRW9BZ3dpQWdSQUlBSVFDU0FBS0FKNElnRkJBRFlDREFzZ0FTZ0NCQ0lDQkVBZ0FoQUpJQUFvQW5naUFVRUFOZ0lFQ3lBQktBSUlJZ0lFUUNBQ0VBa2dBQ2dDZUNJQlFRQTJBZ2dMSUFFb0FnQWlBZ1JBSUFJUUNTQUFLQUo0SWdGQkFEWUNBQXNnQVJBSklBQkJBRFlDZUFzZ0FDZ0NCQ0lCQkVBZ0FSQXRJQUJCQURZQ0JBc2dBQ2dDQ0NJQkJFQWdBUkF0SUFCQkFEWUNDQXNnQUJBSkN3dUdHd0llZndWN0l3QkI4QUZySWdra0FFRUJJUTRDUUNBQUtBSUFLQUk4RFFBZ0FDZ0NnQUVOQUFKQUFrQWdBQ2dDZENJSVJRUkFJQUFvQW5naEJBd0JDeUFCS0FJUUlRTWdDQzhCQkNFR0FrQWdBQ2dDZUNJRVJRMEFJQVFvQWd4RkRRQWdCQzBBRWlFREN3SkFJQVlFUUNBSUtBSUFJUWdEUUNBSUlBVkJCbXhxSWdvdkFRQWlCeUFEVHdSQUlBa2dBellDdEFFZ0NTQUhOZ0t3QVNBQ1FRRkJzT1lBSUFsQnNBRnFFQWhCQUNFT0RBWUxBa0FnQ2k4QkJDSUtSUTBBSUFwQi8vOERSZzBBSUFwQkFXc2lDaUFEU1EwQUlBa2dBellDcEFFZ0NTQUtOZ0tnQVNBQ1FRRkJzT1lBSUFsQm9BRnFFQWhCQUNFT0RBWUxJQVZCQVdvaUJTQUdSdzBBQ3d3QkN5QUREUUlNQVFzRFFDQURRUUZySVFOQkFDRUZBMEFnQ0NBRlFRWnNhaThCQUNBRFJ3UkFJQVZCQVdvaUJTQUdSdzBCREFRTEN5QUREUUFMQ3dKQUlBUkZEUUFnQkNnQ0RDSUtSUTBBQWtBQ1FDQUVMUUFTSWdnRVFFRUFJUVZCQVNFSEEwQWdBU2dDRUNJRElBb2dCVUVDZEdvdkFRQWlCRTBFUUNBSklBTTJBcFFCSUFrZ0JEWUNrQUVnQWtFQlFiRG1BQ0FKUVpBQmFoQUlRUUFoQndzZ0JVRUJhaUlGSUFoSERRQUxJQWhCQkJBTUlnTkZEUUZCQUNFRkEwQUNRQ0FLSUFWQkFuUnFJZ1F0QUFJaUJrRUNUd1JBSUFrZ0JqWUNSQ0FKSUFVMkFrQWdBa0VCUWR2WkFDQUpRVUJyRUFoQkFDRUhEQUVMSUFnZ0JDMEFBeUlFVFFSQUlBa2dCRFlDZ0FFZ0FrRUJRYVBaQUNBSlFZQUJhaEFJUVFBaEJ3d0JDeUFESUFSQkFuUnFJUXNDUUNBR1FRRkhJZ3dOQUNBTEtBSUFSUTBBSUFrZ0JEWUNVQ0FDUVFGQmw5VUFJQWxCMEFCcUVBaEJBQ0VIREFFTEFrQWdCZzBBSUFSRkRRQWdDU0FFTmdKa0lBa2dCVFlDWUNBQ1FRRkJtdGdBSUFsQjRBQnFFQWhCQUNFSERBRUxBa0FnREEwQUlBUWdCVVlOQUNBSklBUTJBbmdnQ1NBRk5nSjBJQWtnQlRZQ2NDQUNRUUZCdnRnQUlBbEI4QUJxRUFoQkFDRUhEQUVMSUF0QkFUWUNBQXNnQlVFQmFpSUZJQWhIRFFBTFFRQWhCUU5BQWtBQ1FDQURJQVZCQW5RaUJHb29BZ0JGQkVBZ0JDQUthaTBBQWcwQkN5QUZRUUZxSWdVZ0NFY05BaUFIUlEwQklBRW9BaEJCQVVjTkJVRUFJUVVEUUNBRElBVkJBblJxS0FJQUJFQWdDQ0FGUVFGcUlnVkhEUUVNQndzTFFRQWhCeUFDUVFKQjc4UUFRUUFRQ0NBSVFSQlBCRUFnQ0VId0FYRWhCMEVBSVFRRFFDQUtJQVJCQW5ScUlnWkJBVG9BQWlBR0lBUTZBQU1nQmtFQk9nQStJQVpCQVRvQU9pQUdRUUU2QURZZ0JrRUJPZ0F5SUFaQkFUb0FMaUFHUVFFNkFDb2dCa0VCT2dBbUlBWkJBVG9BSWlBR1FRRTZBQjRnQmtFQk9nQWFJQVpCQVRvQUZpQUdRUUU2QUJJZ0JrRUJPZ0FPSUFaQkFUb0FDaUFHUVFFNkFBWWdCaUFFUVFGeU9nQUhJQVlnQkVFUGNqb0FQeUFHSUFSQkRuSTZBRHNnQmlBRVFRMXlPZ0EzSUFZZ0JFRU1jam9BTXlBR0lBUkJDM0k2QUM4Z0JpQUVRUXB5T2dBcklBWWdCRUVKY2pvQUp5QUdJQVJCQ0hJNkFDTWdCaUFFUVFkeU9nQWZJQVlnQkVFR2Nqb0FHeUFHSUFSQkJYSTZBQmNnQmlBRVFRUnlPZ0FUSUFZZ0JFRURjam9BRHlBR0lBUkJBbkk2QUFzZ0JFRVFhaUlFSUFkSERRQUxJQWNnQ0VZTkJnc0RRQ0FLSUFkQkFuUnFJZ1FnQnpvQUF5QUVRUUU2QUFJZ0IwRUJhaUlISUFoSERRQUxEQVVMSUFrZ0JUWUNNQ0FDUVFGQm85SUFJQWxCTUdvUUNFRUFJUWNnQlVFQmFpSUZJQWhIRFFFTEN5QURFQWxCQUNFT0RBVUxJQWhCQkJBTUlnTU5BUXRCQUNFT0lBSkJBVUdhMndCQkFCQUlEQU1MSUFNUUNRc0NRQ0FBS0FKNElnTkZEUUFnQXlnQ0RDSVBSUVJBSUFNb0FnUVFDU0FBS0FKNEtBSUlFQWtnQUNnQ2VDZ0NBQkFKSUFBb0FuZ2lBeWdDRENJRUJIOGdCQkFKSUFBb0FuZ0ZJQU1MRUFrZ0FFRUFOZ0o0REFFTElBRW9BaGdoRFFKQUFrQWdBeTBBRWlJS0JFQWdBeWdDQUNFVUlBTW9BZ1FoQmlBREtBSUlJUWhCQUNFRkFrQURRQ0FOSUE4Z0JVRUNkR292QVFCQk5HeHFLQUlzQkVBZ0NpQUZRUUZxSWdWSERRRU1BZ3NMSUFrZ0JUWUNJQ0FDUVFGQjB1Y0FJQWxCSUdvUUNFRUFJUTRNQmdzZ0NrRTBiQkFOSWd0RkRRRkJBQ0VGQTBBZ0R5QUZRUUowYWlJREx3RUFJUWNnQ3lBRExRQUNCSDhnQXkwQUF3VWdCUXRCTkd4cUlnUWdEU0FIUVRSc2FpSUQvUUFDQVAwTEFnQWdCQ0FES0FJd05nSXdJQVFnQS8wQUFpRDlDd0lnSUFRZ0EvMEFBaEQ5Q3dJUUlBc2dCVUUwYkdvaUJDQURLQUlJSUFNb0FneHNRUUowRUJZaUF6WUNMQ0FEUlFSQUlBVkIvLzhEY1NJQUJFQURRQ0FMSUFCQkFXc2lBRUUwYkdvb0Fpd1FDU0FBRFFBTEN5QUxFQWxCQUNFT0lBSkJBVUdlNXdCQkFCQUlEQWNMSUFRZ0JTQUlhaTBBQURZQ0dDQUVJQVVnQm1vdEFBQTJBaUFnQlVFQmFpSUZJQXBIRFFBTElBQW9Bbmd2QVJBaUVFRUJheUVTQTBBZ0N5QVRRVFJzYWlJREtBSU1JQU1vQWdoc0lRWWdEU0FQSUJOQkFuUnFJZ1F2QVFCQk5HeHFLQUlzSVFnQ1FDQUVMUUFDUlFSQUlBWkZEUUVnQXlnQ0xDRUZRUUFoQjBFQUlRUUNRQ0FHUVFSSkRRQWdCU0FJYTBFUVNRMEFJQVpCZkhFaEJFRUFJUU1EUUNBRklBTkJBblFpREdvZ0NDQU1hdjBBQWdEOUN3SUFJQU5CQkdvaUF5QUVSdzBBQ3lBRUlBWkdEUUlMSUFRaEF5QUdRUU54SWd3RVFBTkFJQVVnQTBFQ2RDSVJhaUFJSUJGcUtBSUFOZ0lBSUFOQkFXb2hBeUFIUVFGcUlnY2dERWNOQUFzTElBUWdCbXRCZkVzTkFRTkFJQVVnQTBFQ2RDSUVhaUFFSUFocUtBSUFOZ0lBSUFVZ0JFRUVhaUlIYWlBSElBaHFLQUlBTmdJQUlBVWdCRUVJYWlJSGFpQUhJQWhxS0FJQU5nSUFJQVVnQkVFTWFpSUVhaUFFSUFocUtBSUFOZ0lBSUFOQkJHb2lBeUFHUncwQUN3d0JDeUFHUlEwQUlCUWdCQzBBQXlJRFFRSjBhaUVFSUFzZ0EwRTBiR29vQWl3aEJVRUFJUU1nQmtFQlJ3UkFJQVpCZm5FaEZVRUFJUXdEUUNBRklBTkJBblFpQjJvZ0JDQUhJQWhxS0FJQUloRWdFaUFRSUJGS0cwRUFJQkZCQUU0YklBcHNRUUowYWlnQ0FEWUNBQ0FGSUFkQkJISWlCMm9nQkNBSElBaHFLQUlBSWdjZ0VpQUhJQkJJRzBFQUlBZEJBRTRiSUFwc1FRSjBhaWdDQURZQ0FDQURRUUpxSVFNZ0RFRUNhaUlNSUJWSERRQUxDeUFHUVFGeFJRMEFJQVVnQTBFQ2RDSURhaUFFSUFNZ0NHb29BZ0FpQXlBU0lBTWdFRWdiUVFBZ0EwRUFUaHNnQ214QkFuUnFLQUlBTmdJQUN5QVRRUUZxSWhNZ0NrY05BQXNNQWdzZ0NrRTBiQkFOSWdzTkFRdEJBQ0VPSUFKQkFVR2U1d0JCQUJBSURBTUxJQUVvQWhBaUF3UkFRUUFoQlFOQUlBMGdCVUUwYkdvb0Fpd2lCQVJBSUFRUUNRc2dCVUVCYWlJRklBTkhEUUFMQ3lBTkVBa2dBU0FLTmdJUUlBRWdDellDR0FzZ0FDZ0NkQ0lGUlEwQklBVW9BZ0FoQnlBRkx3RUVJZ3NFUUNBSFFTcHFJUklnQjBFa2FpRVRJQWRCSG1vaEVTQUhRUmhxSVJRZ0IwRVNhaUVWSUFkQkRHb2hGaUFIUVFacUlSY2dDMEVDYXlFWVFRQWhCVUVCSVFRRFFBSkFJQUVvQWhBaUF5QUhJQVZCQm14cUlnMHZBUUFpQmswRVFDQUpJQU0yQWhRZ0NTQUdOZ0lRSUFKQkFrSE1OeUFKUVJCcUVBZ01BUXNnRFM4QkJDSUlRUUZxUWYvL0EzRkJBVTBFUUNBQktBSVlJQVpCTkd4cUlBMHZBUUk3QVRBTUFRc2dDRUVCYXlJS1FmLy9BM0VpRHlBRFR3UkFJQWtnQXpZQ0JDQUpJQTgyQWdBZ0FrRUNRYU0zSUFrUUNBd0JDd0pBSUFZZ0QwWU5BQ0FOTHdFQ0RRQWdDU0FCS0FJWUlnZ2dCa0UwYkdvaUF5Z0NNRFlDNkFFZ0NTQUQvUUFDSVAwTEE5Z0JJQWtnQS8wQUFoRDlDd1BJQVNBSklBUDlBQUlBL1FzRHVBRWdBeUFJSUE5Qk5Hd2lER29pQ0NrQ0NEY0NDQ0FESUFncEFoQTNBaEFnQXlBSUtRSVlOd0lZSUFNZ0NDa0NJRGNDSUNBRElBZ3BBaWczQWlnZ0F5QUlLQUl3TmdJd0lBTWdDQ2tDQURjQ0FDQUJLQUlZSUF4cUlnTWdDZjBBQTdnQi9Rc0NBQ0FESUFuOUFBUFlBZjBMQWlBZ0F5QUovUUFEeUFIOUN3SVFJQU1nQ1NnQzZBRTJBakFnQlVFQmFpQUxUdzBBSUFRaENDQVlJQVZyUWYvL0EzRWlBMEVIVHdSQUlBUWdBMEVCYWlJWlFmai9CM0VpRUdvaENDQUsvUkFoSkNBRy9SQWhJMEVBSVF3RFFDQWpJQ1FnRWlBRUlBeHFRUVpzSWdOcUlob2dBeUFUYWlJYklBTWdFV29pSENBRElCUnFJaDBnQXlBVmFpSWVJQU1nRm1vaUh5QURJQmRxSWlBZ0F5QUhhaUlEL1FnQkFQMVZBUUFCL1ZVQkFBTDlWUUVBQS8xVkFRQUUvVlVCQUFYOVZRRUFCdjFWQVFBSElpRWdJLzB1SUNFZ0pQMHRJaVg5VHYxU0lTSWdJU0FqL1MwZ0pmMVFJaUg5R1FCQkFYRUVRQ0FESUNMOVdRRUFBQXNnSWYwWkFVRUJjUVJBSUNBZ0l2MVpBUUFCQ3lBaC9Sa0NRUUZ4QkVBZ0h5QWkvVmtCQUFJTElDSDlHUU5CQVhFRVFDQWVJQ0w5V1FFQUF3c2dJZjBaQkVFQmNRUkFJQjBnSXYxWkFRQUVDeUFoL1JrRlFRRnhCRUFnSENBaS9Wa0JBQVVMSUNIOUdRWkJBWEVFUUNBYklDTDlXUUVBQmdzZ0lmMFpCMEVCY1FSQUlCb2dJdjFaQVFBSEN5QU1RUWhxSWd3Z0VFY05BQXNnRUNBWlJnMEJDd05BSUFvaEF3SkFJQVlnQnlBSVFRWnNhaUlNTHdFQUloQkhCRUFnQmlFRElBOGdFRWNOQVFzZ0RDQURPd0VBQ3lBTElBaEJBV29pQ0VILy93TnhSdzBBQ3dzZ0FTZ0NHQ0FHUVRSc2FpQU5Md0VDT3dFd0N5QUVRUUZxSVFRZ0JVRUJhaUlGSUF0SERRQUxJQUFvQW5RaUJTZ0NBQ0VIQ3lBSEJIOGdCeEFKSUFBb0FuUUZJQVVMRUFrZ0FFRUFOZ0owREFFTFFRQWhEaUFDUVFGQm9zVUFRUUFRQ0FzZ0NVSHdBV29rQUNBT0Mra0JBUVovSXdCQklHc2lCQ1FBQW44Q1FDQUFLQUk4SWdNRVFFRUJJUVVEUUNBQUtBSk1LQUlZSUFBb0FrQWdBa0VDZEdvb0FnQWlCa0UwYkdvb0FpeEZCRUFnQkNBR05nSVFJQUZCQWtIYU9TQUVRUkJxRUFoQkFDRUZJQUFvQWp3aEF3c2dBa0VCYWlJQ0lBTkpEUUFMREFFTFFRRWhCVUVCSUFBb0Frd2lBeWdDRUVVTkFSb0RRQ0FES0FJWUlBSkJOR3hxS0FJc1JRUkFJQVFnQWpZQ0FDQUJRUUpCMmprZ0JCQUlRUUFoQlNBQUtBSk1JUU1MSUFKQkFXb2lBaUFES0FJUVNRMEFDd3RCQVNBRkRRQWFJQUZCQVVHL0ZVRUFFQWhCQUFzaEJ5QUVRU0JxSkFBZ0J3c0VBRUYvQzRZSEFoWi9BbjRnQUNnQ0dDSVFLQUlRUlFSQVFRRVBDeUFRS0FJWUlRMGdBQ2dDRkNnQ0FDZ0NGQ0VMQTBBZ0FTQU5LQUlrSWdJMkFpUWdDeWdDSENJR0lBSkJtQUZzYWlFREFrQUNRQUovSUFBb0FrQWlFUVJBSUFZZ0N5Z0NHRUdZQVd4cUlnSkJrQUZyS0FJQUlBSkJtQUZyS0FJQWF5RU1JQU5CREdvaEJpQURRUVJxSVFRZ0F5Z0NDQ0VDSUFNb0FnQWhCVUVrREFFTElBTkJsQUZxSVFZZ0EwR01BV29oQkNBREtBS1FBU0lDSUFNb0FvZ0JJZ1ZySVF4Qk5Bc2dDMm9vQWdBaUVrVU5BQ0FFS0FJQUlRY2dCaWdDQUNFSklBSWdCV3NoQmlBQktBSUlJZ05DZnlBQk5RSW9JaGlHUW4rRkloa2dBVFVDRUh3Z0dJaW5JZ2hxSVFRQ2Z5QUZJQWhMQkVBZ0JTQUlheUVPUVFBaENFRUFJQUlnQkUwTkFSb2dCaUFFSUFWcklnWnJEQUVMSUFnZ0JXc2hDQ0FDSUFSTkJFQWdCaUFJYXlFR1FRQWhEa0VBREFFTFFRQWhEaUFESVFZZ0FpQUVhd3NoRlNBSklBZHJJUUlnQVNnQ0RDSUVJQmtnQVRVQ0ZId2dHSWluSWdwcUlRVUNmeUFISUFwTEJFQWdCeUFLYXlFUFFRQWhDa0VBSUFVZ0NVOE5BUm9nQWlBRklBZHJJZ0pyREFFTElBb2dCMnNoQ2lBRklBbFBCRUFnQWlBS2F5RUNRUUFoRDBFQURBRUxRUUFoRHlBRUlRSWdDU0FGYXdzaEIwRUFJUVVnQ0VFQVNBMEJJQXBCQUVnTkFTQVZRUUJJRFFFZ0IwRUFTQTBCSUFaQkFFZ05BU0FDUVFCSURRRWdBeUFQYkNBT2FpRUhJQW9nREd3Z0NHb2hDUUpBQWtBQ1FDQUJLQUlzSWdnTkFDQUpEUUFnQncwQUlBTWdERWNOQUNBRElBWkhEUUFnQWlBRVJ3MEJJQUVnQzBFa1FUUWdFUnRxSWdJb0FnQTJBaXdnQWtFQU5nSUFEQU1MSUFnTkFRc2dCRVVOQWlBRXJTQURyWDVDSUlpbkRRSWdBeUFFYkNJRFFmLy8vLzhEU3cwQ0lBRWdBMEVDZEJBV0lnTTJBaXdnQTBVTkFpQUdJQUVvQWdnaUJFWWdBU2dDRENJRklBSkdjUTBBSUFOQkFDQUVJQVZzUVFKMEVBNGFDeUFDUlEwQUlBSkJBWEVoRnlBR1FRSjBJUVlnQVNnQ0xDQUhRUUowYWlFRUlCSWdDVUVDZEdvaEJTQUNRUUZIQkVBZ0FrSCsvLy8vQjNFaEIwRUFJUUlEUUNBRUlBVWdCaEFMSVJZZ0JTQU1RUUowSWdscUlnZ2dDV29oQlNBV0lBRW9BZ2hCQW5ScUlBZ2dCaEFMSUFFb0FnaEJBblJxSVFRZ0FrRUNhaUlDSUFkSERRQUxDeUFYUlEwQUlBUWdCU0FHRUFzYUN5QUxRY3dBYWlFTElBMUJOR29oRFNBQlFUUnFJUUZCQVNFRklCUkJBV29pRkNBUUtBSVFTUTBCQ3dzZ0JRdlZFZ0lKZnd4K0l3QkJvQUZySWdVa0FBSkFJQUpCSTAwRVFFRUFJUUlnQTBFQlFiWXVRUUFRQ0F3QkN5QUNRU1JySWdJZ0FrRURiaUlKUVFOc1J3UkFRUUFoQWlBRFFRRkJ0aTVCQUJBSURBRUxJQUFvQWtnaEJpQUJJQVZCbkFGcUlnSkJBaEFLSUFBZ0JTZ0NuQUU3QVZBZ0FVRUNhaUFHUVFocVFRUVFDaUFCUVFacUlBWkJER3BCQkJBS0lBRkJDbW9nQmtFRUVBb2dBVUVPYWlBR1FRUnFRUVFRQ2lBQlFSSnFJQUJCM0FCcVFRUVFDaUFCUVJacUlBQkI0QUJxUVFRUUNpQUJRUnBxSUFCQjFBQnFRUVFRQ2lBQlFSNXFJQUJCMkFCcVFRUVFDaUFCUVNKcUlBSkJBaEFLQWtBQ1FBSkFJQVVvQXB3QklnSkJnSUFCVFFSQUlBWWdBallDRUNBQ0lBbEhCRUFnQlNBSk5nS0VBU0FGSUFJMkFvQUJJQU5CQVVHaDhBQWdCVUdBQVdvUUNFRUFJUUlNQlFzZ0JpZ0NCQ0lDSUFZb0Fnd2lDRWtnQmlnQ0NDSUxJQVlvQWdBaUJFdHhSUVJBSUFVZ0NLMGdBcTE5TndONElBVWdDNjBnQksxOU53TndJQU5CQVVIcjdBQWdCVUh3QUdvUUNFRUFJUUlNQlFzZ0FDZ0NYQ0lIUVFBZ0FDZ0NZQ0lLRzBVRVFDQUZJQW8yQWdRZ0JTQUhOZ0lBSUFOQkFVR1Q4UUFnQlJBSVFRQWhBZ3dGQ3dKQUFrQWdBQ2dDVkNJTUlBUkxEUUJCZnlBSElBeHFJZ2NnQnlBTVNSc2dCRTBOQUNBQUtBSllJZ2NnQWtzTkFFRi9JQWNnQ21vaUNpQUhJQXBMR3lBQ1N3MEJDMEVBSVFJZ0EwRUJRZFlVUVFBUUNBd0ZDd0pBSUFBb0F1QUJEUUFnQUNnQzJBRWlCMFVOQUNBQUtBTGNBU0lLUlEwQUlBc2dCR3NpQkNBSFJpQUlJQUpySWdJZ0NrWnhEUUFnQlNBQ05nSnNJQVVnQkRZQ2FDQUZJQW8yQW1RZ0JTQUhOZ0pnSUFOQkFVSFQ2QUFnQlVIZ0FHb1FDRUVBSVFJTUJRc2dCaUFKUVRRUURDSUVOZ0lZSUFSRkRRRUNRQ0FHS0FJUVJRMEFJQUZCSkdvZ0JVR1lBV29pQWtFQkVBb2dCQ0FGS0FLWUFTSUpRUWQySWdvMkFpQWdCQ0FKUWY4QWNVRUJhaUlNTmdJWUlBQW9BdUFCSVFzZ0FVRWxhaUFDUVFFUUNpQUVJQVVvQXBnQk5nSUFJQUZCSm1vZ0FrRUJFQW9nQkNBRktBS1lBU0lJTmdJRVFRQWhBaUFFS0FJQUlnZEJnQUpyUVlGK1NRUkFRUUFoQ1F3RkMwRUFJUWtnQ0VHQUFtdEJnWDVKRFFRZ0JDZ0NHQ0lJUVI5TERRTWdCRUVBTmdJa0lBUWdBQ2dDb0FFMkFpaEJBU0VKSUFZb0FoQkJBVTBOQUVFQUlBb2dDeHNoQ2tFQUlBd2dDeHNoQ3lBQlFTZHFJUUVEUUNBQklBVkJtQUZxUVFFUUNpQUVJQVVvQXBnQklnZEJCM1lpQ0RZQ1ZDQUVJQWRCL3dCeFFRRnFJZ2MyQWt3Q1FDQUFLQUxnQVEwQUlBQXRBTHdCUVFSeERRQWdCeUFMUmlBSUlBcEdjUTBBSUFVZ0NEWUNWQ0FGSUFjMkFsQWdCU0FKTmdKTUlBVWdDallDU0NBRklBczJBa1FnQlNBSk5nSkFJQU5CQWtIWDdnQWdCVUZBYXhBSUN5QUJRUUZxSUFWQm1BRnFJZ2hCQVJBS0lBUWdCU2dDbUFFMkFqUWdBVUVDYWlBSVFRRVFDaUFFSUFVb0FwZ0JJZ2cyQWpnZ0JDZ0NOQ0lIUVlBQ2EwR0Jma2tOQlNBSVFZQUNhMEdBZmswTkJTQUVLQUpNSWdoQklFOE5CQ0FCUVFOcUlRRWdCRUVBTmdKWUlBUWdBQ2dDb0FFMkFsd2dCRUUwYWlFRUlBbEJBV29pQ1NBR0tBSVFTUTBBQ3d0QkFDRUNJQUFvQWx3aUNFVU5CQ0FBS0FKZ0lndEZEUVFnQUNBSXJTSU5RZ0Y5SWc4Z0JpZ0NDQ0FBS0FKVUlnZHJyWHdnRFlDbklnRTJBbWdnQUNBTHJTSU9RZ0Y5SWhBZ0JpZ0NEQ0FBS0FKWUlncHJyWHdnRG9DbklnUTJBbXdDUUFKQUlBRkZEUUFnQkVVTkFFSC8vd01nQkc0Z0FVOE5BUXNnQlNBRU5nSVVJQVVnQVRZQ0VDQURRUUZCeGVrQUlBVkJFR29RQ0F3RkN5QUJJQVJzSVFrQ1FDQUFMUUJFUVFKeEJFQWdBQ0FBS0FJY0lBZHJJQWh1TmdJY0lBQWdBQ2dDSUNBS2F5QUxiallDSUNBQUlBOGdBQ2dDSkNBSGE2MThJQTJBUGdJa0lBQWdFQ0FBS0FJb0lBcHJyWHdnRG9BK0FpZ01BUXNnQUNBRU5nSW9JQUFnQVRZQ0pDQUFRZ0EzQWh3TElBQWdDVUdNTEJBTUlnRTJBcHdCSUFGRkJFQWdBMEVCUWMwZFFRQVFDQXdGQ3lBR0tBSVFRYmdJRUF3aEFTQUFLQUlNSUFFMkF0QXJJQUFvQWd3b0F0QXJSUVJBSUFOQkFVSE5IVUVBRUFnTUJRdEJDa0VVRUF3aEFTQUFLQUlNSUFFMkF2QXJJQUFvQWd3aUFTZ0M4Q3RGQkVBZ0EwRUJRYzBkUVFBUUNBd0ZDeUFCUVFvMkF2Z3JRUXBCRkJBTUlRRWdBQ2dDRENBQk5nTDhLeUFBS0FJTUlnRW9BdndyUlFSQUlBTkJBVUhOSFVFQUVBZ01CUXNnQVVFS05nS0VMQUpBSUFZb0FoQWlCRVVOQUNBR0tBSVlJUWhCQUNFQklBUkJBVWNFUUNBRVFYNXhJUXNEUUNBSUlBRkJOR3hxSWdjb0FpQkZCRUFnQUNnQ0RDZ0MwQ3NnQVVHNENHeHFRUUVnQnlnQ0dFRUJhM1EyQXJRSUN5QUlJQUZCQVhJaUIwRTBiR29pQ2lnQ0lFVUVRQ0FBS0FJTUtBTFFLeUFIUWJnSWJHcEJBU0FLS0FJWVFRRnJkRFlDdEFnTElBRkJBbW9oQVNBQ1FRSnFJZ0lnQzBjTkFBc0xJQVJCQVhGRkRRQWdDQ0FCUVRSc2FpSUNLQUlnRFFBZ0FDZ0NEQ2dDMENzZ0FVRzRDR3hxUVFFZ0FpZ0NHRUVCYTNRMkFyUUlDeUFKQkVBZ0FDZ0NuQUVoQVVFQUlRSURRQ0FCSUFZb0FoQkJ1QWdRRENJRU5nTFFLeUFFUlFSQVFRQWhBaUFEUVFGQnpSMUJBQkFJREFjTElBRkJqQ3hxSVFFZ0FrRUJhaUlDSUFsSkRRQUxDeUFBUVFRMkFnZ2dCaWdDRUNJREJFQkJmeUFBS0FKWUlnRWdBQ2dDWUNJQ0lBQW9BbXhCQVd0c2FpSUVJQUpxSWdJZ0FpQUVTUnNpQWlBR0tBSU1JZ1FnQWlBRVNSdXRJUkJCZnlBQUtBSlVJZ0lnQUNnQ1hDSUVJQUFvQW1oQkFXdHNhaUlBSUFScUlnUWdBQ0FFU3hzaUFDQUdLQUlJSWdRZ0FDQUVTUnV0SVJFZ0FTQUdLQUlFSWdBZ0FDQUJTUnV0SVJJZ0FpQUdLQUlBSWdBZ0FDQUNTUnV0SVJNZ0JpZ0NHQ0VBUVFBaEFRTkFJQUFnQURVQ0JDSU5RZ0Y5SWhRZ0Vud2dEWUFpRlQ0Q0ZDQUFJQUExQWdBaURrSUJmU0lXSUJOOElBNkFJaGMrQWhBZ0FFSi9JQUExQWlnaUQ0WkNmNFVpR0NBUUlCUjhJQTJBSUJWOVF2Ly8vLzhQZzN3Z0Q0ZytBZ3dnQUNBUklCWjhJQTZBSUJkOVF2Ly8vLzhQZ3lBWWZDQVBpRDRDQ0NBQVFUUnFJUUFnQVVFQmFpSUJJQU5IRFFBTEMwRUJJUUlNQkFzZ0JTQUNOZ0tRQVNBRFFRRkI5anNnQlVHUUFXb1FDRUVBSVFJTUF3dEJBQ0VDSUFaQkFEWUNFQ0FEUVFGQnpSMUJBQkFJREFJTElBVWdDRFlDTkNBRklBazJBakFnQTBFQlFjZnpBQ0FGUVRCcUVBZ01BUXNnQlNBSU5nSW9JQVVnQnpZQ0pDQUZJQWsyQWlBZ0EwRUJRYUhyQUNBRlFTQnFFQWdMSUFWQm9BRnFKQUFnQWd1ZUF3RUhmeU1BUVJCcklnWWtBQUovSUFJZ0FrRUJRUUlnQUNnQ1NDZ0NFQ0lJUVlFQ1NSc2lCMEVCZEVFRmFpSUViaUlGSUFSc1JpQUNJQVJQY1VVRVFDQURRUUZCaWlOQkFCQUlRUUFNQVFzQ2Z5QUFLQUlJUVJCR0JFQWdBQ2dDbkFFZ0FDZ0N6QUZCakN4c2Fnd0JDeUFBS0FJTUN5RUVRUUFoQUNBRUxRQ0lMQ0lDUVFSeEJFQWdCQ2dDcEFOQkFXb2hBQXNnQUNBRmFpSUZRU0JQQkVBZ0JpQUZOZ0lBSUFOQkFVR0xPeUFHRUFoQkFBd0JDeUFFSUFKQkJISTZBSWdzSUFBZ0JVa0VRQ0FFSUFCQmxBRnNha0dvQTJvaEFnTkFJQUVnQWtFQkVBb2dBVUVCYWlJQklBSkJCR29nQnhBS0lBRWdCMm9pQVNBQ1FRaHFRUUlRQ2lBQ0lBSW9BZ2dpQXlBRUtBSUlJZ2tnQXlBSlNSczJBZ2dnQVVFQ2FpQUNRUXhxUVFFUUNpQUJRUU5xSWdFZ0FrRVFhaUFIRUFvZ0FTQUhhaUlCSUFaQkRHcEJBUkFLSUFJZ0JpZ0NERFlDSkNBQ0lBSW9BaEFpQXlBSUlBTWdDRWtiTmdJUUlBSkJsQUZxSVFJZ0FVRUJhaUVCSUFCQkFXb2lBQ0FGUncwQUN3c2dCQ0FGUVFGck5nS2tBMEVCQ3lFS0lBWkJFR29rQUNBS0Mrd0JBUVIvSXdCQkVHc2lCQ1FBQW44Q1FDQUJJQVJCQ0dvQ2Z5QUFLQUpJS0FJUVFZQUNUUVJBSUFJRVFFRi9JUVZCQVF3Q0N5QURRUUZCdmlOQkFCQUlRUUFNQXdzZ0FrRUJUUTBCUVg0aEJVRUNDeUlHRUFvZ0JDQUNJQVZxTmdJTUlBUW9BZ2dpQWlBQUtBSklLQUlRSWdWUEJFQWdCQ0FGTmdJRUlBUWdBallDQUNBRFFRRkJ4am9nQkJBSVFRQU1BZ3NnQUNBQ0lBRWdCbW9nQkVFTWFpQURFRHRGQkVBZ0EwRUJRYjRqUVFBUUNFRUFEQUlMUVFFZ0JDZ0NERVVOQVJvZ0EwRUJRYjRqUVFBUUNFRUFEQUVMSUFOQkFVRytJMEVBRUFoQkFBc2hCeUFFUVJCcUpBQWdCd3ZaQVFFRWZ5TUFRUkJySWdRa0FDQUVJQUkyQWd3Q1FBSkFJQUJCQUNBQklBUkJER29nQXhBN1JRMEFJQVFvQWd3TkFBSi9JQUFvQWdoQkVFWUVRQ0FBS0FLY0FTQUFLQUxNQVVHTUxHeHFEQUVMSUFBb0Fnd0xJUWRCQVNFRklBQW9Ba2dvQWhCQkFra05BU0FIS0FMUUt5SUNRUnhxSVFaQkFTRUJJQUloQXdOQUlBTWdBaWdDR0RZQzBBZ2dBeUFDS0FLa0JqWUMzQTRnQTBIVUNHb2dCa0dJQmhBTEdpQURRYmdJYWlFRElBRkJBV29pQVNBQUtBSklLQUlRU1EwQUN3d0JDeUFEUVFGQjFpSkJBQkFJQ3lBRVFSQnFKQUFnQlF2V0FRRURmeU1BUVJCcklnUWtBQUpBSUFKQkFVRUNJQUFvQWtnb0FoQWlCa0dCQWtrYklnVkJBbXBIQkVCQkFDRUFJQU5CQVVHS0lFRUFFQWdNQVFzQ2Z5QUFLQUlJUVJCR0JFQWdBQ2dDbkFFZ0FDZ0N6QUZCakN4c2Fnd0JDeUFBS0FJTUN5RUNJQUVnQkVFTWFpQUZFQXBCQVNFQUlBRWdCV29pQlNBRVFRaHFRUUVRQ2lBR0lBUW9BZ3dpQVUwRVFDQUVJQVkyQWdRZ0JDQUJOZ0lBSUFOQkFVSG83d0FnQkJBSVFRQWhBQXdCQ3lBRlFRRnFJQUlvQXRBcklBRkJ1QWhzYWtHb0JtcEJBUkFLQ3lBRVFSQnFKQUFnQUF1RUFnRUZmeU1BUVJCcklnUWtBQUovSUFBb0FnaEJFRVlFUUNBQUtBS2NBU0FBS0FMTUFVR01MR3hxREFFTElBQW9BZ3dMSVFZQ1FDQUNRUUZCQWlBQUtBSklJZ2NvQWhCQmdRSkpHeUlGVFFSQVFRQWhBaUFEUVFGQnBDTkJBQkFJREFFTElBUWdCVUYvY3lBQ2FqWUNEQ0FCSUFSQkNHb2dCUkFLSUFRb0FnZ2lDQ0FIS0FJUVR3UkFRUUFoQWlBRFFRRkJrT2tBUVFBUUNBd0JDMEVCSVFJZ0FTQUZhaUlCSUFZb0F0QXJJQWhCdUFoc2FrRUJFQW9nQUNBRUtBSUlJQUZCQVdvZ0JFRU1haUFERUR4RkJFQkJBQ0VDSUFOQkFVR2tJMEVBRUFnTUFRc2dCQ2dDREVVTkFFRUFJUUlnQTBFQlFhUWpRUUFRQ0FzZ0JFRVFhaVFBSUFJTHJBWUJCMzhqQUVFUWF5SUdKQUFnQmlBQ05nSU1JQUFvQWtnaENRSi9JQUFvQWdoQkVFWUVRQ0FBS0FLY0FTQUFLQUxNQVVHTUxHeHFEQUVMSUFBb0Fnd0xJZ1FnQkMwQWlDeEJBWEk2QUlnc0FrQWdBa0VFVFFSQUlBTkJBVUc4SWtFQUVBZ01BUXNnQVNBRVFRRVFDaUFFS0FJQVFRaFBCRUFnQTBFQlFab2lRUUFRQ0F3QkN5QUJRUUZxSUFaQkNHcEJBUkFLSUFRZ0JpZ0NDQ0lDTmdJRUlBSkJCVTRFUUNBRFFRRkI4U0ZCQUJBSUlBUkJmellDQkFzZ0FVRUNhaUFFUVFocVFRSVFDaUFFS0FJSUlnZEJnSUFFYTBHQWdIeE5CRUFnQmlBSE5nSUFJQU5CQVVHcFBTQUdFQWdNQVFzZ0JDQUFLQUtrQVNJQ0lBY2dBaHMyQWd3Z0FVRUVhaUFFUVJCcVFRRVFDaUFFS0FJUVFRSlBCRUFnQTBFQlFZY3FRUUFRQ0F3QkN5QUJRUVZxSVFJZ0JpQUdLQUlNUVFWck5nSU1Ba0FnQ1NnQ0VDSUhSUTBBSUFRb0FnQkJBWEVoQ0NBRUtBTFFLeUVFUVFBaENTQUhRUWhQQkVBZ0IwRjRjU0VCQTBBZ0JDQUZRYmdJYkdvZ0NEWUNBQ0FFSUFWQkFYSkJ1QWhzYWlBSU5nSUFJQVFnQlVFQ2NrRzRDR3hxSUFnMkFnQWdCQ0FGUVFOeVFiZ0liR29nQ0RZQ0FDQUVJQVZCQkhKQnVBaHNhaUFJTmdJQUlBUWdCVUVGY2tHNENHeHFJQWcyQWdBZ0JDQUZRUVp5UWJnSWJHb2dDRFlDQUNBRUlBVkJCM0pCdUFoc2FpQUlOZ0lBSUFWQkNHb2hCU0FLUVFocUlnb2dBVWNOQUFzTElBZEJCM0VpQVVVTkFBTkFJQVFnQlVHNENHeHFJQWcyQWdBZ0JVRUJhaUVGSUFsQkFXb2lDU0FCUncwQUN3dEJBQ0VGSUFCQkFDQUNJQVpCREdvZ0F4QThSUVJBSUFOQkFVRzhJa0VBRUFnTUFRc2dCaWdDREFSQUlBTkJBVUc4SWtFQUVBZ01BUXNDZnlBQUtBSUlRUkJHQkVBZ0FDZ0NuQUVnQUNnQ3pBRkJqQ3hzYWd3QkN5QUFLQUlNQ3lFQklBQW9Ba2dvQWhCQkFrOEVRQ0FCS0FMUUt5SUJLQUlFUVFKMElRY2dBVUd3QjJvaENpQUJRYXdHYWlFRFFRRWhDU0FCSVFJRFFDQUNJQUg5QUFJRS9Rc0N2QWdnQWlBQktBSVVOZ0xNQ0NBQ1FlUU9haUFESUFjUUN4b2dBa0hvRDJvZ0NpQUhFQXNhSUFKQnVBaHFJUUlnQ1VFQmFpSUpJQUFvQWtnb0FoQkpEUUFMQzBFQklRVUxJQVpCRUdva0FDQUZDK3dKQVFaL0l3QkI4QUJySWdRa0FDQUVRUUEyQW1nQ1FDQUNRUWhIQkVBZ0EwRUJRYjBlUVFBUUNDQURRUUZCdlI1QkFCQUlEQUVMSUFFZ0FFSE1BV3BCQWhBS0lBRkJBbW9nQkVIc0FHcEJCQkFLSUFGQkJtb2dCRUhrQUdwQkFSQUtJQUZCQjJvZ0JFSG9BR3BCQVJBS0lBQW9Bc3dCSWdJZ0FDZ0NhQ0lJSUFBb0FteHNUd1JBSUFRZ0FqWUNZQ0FEUVFGQm5Uc2dCRUhnQUdvUUNBd0JDeUFBS0FLY0FTQUNRWXdzYkdvaEJTQUNJQWh1SVFjZ0JDZ0NaQ0VCQWtBZ0FDZ0NMQ0lHUVFCT0lBSWdCa2R4RFFBZ0JTZ0MxQ3RCQVdvaUJpQUJSZzBBSUFRZ0JqWUNXQ0FFSUFFMkFsUWdCQ0FDTmdKUUlBTkJBVUcxT3lBRVFkQUFhaEFJUVFBaEJRd0JDeUFGSUFFMkF0UXJBa0FDUUNBRUtBSnNJZ0ZCQVd0QkRFMEVmeUFCUVF4SERRRWdCRUVNTmdJd0lBTkJBa0gxMXdBZ0JFRXdhaEFJSUFRb0Ftd0ZJQUVMUlFSQUlBTkJCRUdOendCQkFCQUlJQUJCQVRZQ09Bc0NRQUpBQWtBQ1FDQUZLQUxZS3lJQkJFQWdCQ2dDWkNJR0lBRkpEUUVnQkNBQk5nSWtJQVFnQmpZQ0lDQURRUUZCaFNjZ0JFRWdhaEFJSUFCQkFUWUNPRUVBSVFVTUJ3c2dCQ2dDYUNJR0RRRU1Bd3NnQkNnQ2FDSUdSUTBCQ3lBRUlBWWdBQzBBUkVFRWRrRUJjV29pQVRZQ2FDQUVLQUprSWdZZ0JTZ0MyQ3NpQ1VFQmEwc0VRQ0FFSUFrMkFnUWdCQ0FHTmdJQUlBTkJBVUdpSmlBRUVBZ2dBRUVCTmdJNFFRQWhCUXdGQ3lBQklBWk5CRUFnQkNBQk5nSVVJQVFnQmpZQ0VDQURRUUZCNlNjZ0JFRVFhaEFJSUFCQkFUWUNPRUVBSVFVTUJRc2dCU0FCTmdMWUt3c2dBU0FFS0FKa1FRRnFSdzBBSUFBZ0FDMEFSRUVCY2pvQVJBc2dCQ2dDYkNFQklBQkJFRFlDQ0NBQVFRQWdBVUVNYXlBQUtBSTRHellDR0FKQUlBQW9BaXdpQVVGL1JnUkFRUVFoQlNBQ0lBY2dDR3hySWdFZ0FDZ0NIRWtOQVNBQklBQW9BaVJQRFFFZ0J5QUFLQUlnU1EwQklBY2dBQ2dDS0U5QkFuUWhCUXdCQ3lBQUtBTE1BU0FCUjBFQ2RDRUZDeUFBSUFBdEFFUkIrd0Z4SUFWeU9nQkVRUUVoQlNBQUtBTElBU0lCUlEwQ0lBRW9BaWdpQmlBQUtBTE1BU0lDUVNoc2FpSUhJQUkyQWdBZ0J5QUVLQUprSWdnMkFnd2dCQ2dDYUNJQkJFQWdCeUFCTmdJRUlBY2dCQ2dDYUNJQk5nSUlJQWNvQWhBaUFrVUVRQ0FCUVJnUURDRUJJQUFvQXNnQktBSW9JQUFvQXN3QlFTaHNhaUFCTmdJUUlBRU5CRUVBSVFVZ0EwRUJRY2swUVFBUUNBd0VDeUFDSUFGQkdHd1FFQ0VCSUFBb0FzZ0JLQUlvSUFBb0Fzd0JRU2hzYWlFQ0lBRkZCRUFnQWlnQ0VCQUpRUUFoQlNBQUtBTElBU2dDS0NBQUtBTE1BVUVvYkdwQkFEWUNFQ0FEUVFGQnlUUkJBQkFJREFRTElBSWdBVFlDRUF3REN5QUhLQUlRSWdGRkJFQWdCMEVLTmdJSVFRcEJHQkFNSVFFZ0FDZ0N5QUVvQWlnaUJpQUFLQUxNQVNJQ1FTaHNhaUlISUFFMkFoQWdBVVVOQWlBRUtBSmtJUWdMSUFnZ0JpQUNRU2hzYWlJQ0tBSUlTUTBDSUFJZ0NFRUJhaUlDTmdJSUlBRWdBa0VZYkJBUUlRRWdBQ2dDeUFFb0FpZ2dBQ2dDekFGQktHeHFJUUlnQVVVRVFDQUNLQUlRRUFsQkFDRUZJQUFvQXNnQktBSW9JQUFvQXN3QlFTaHNhaUlBUVFBMkFnZ2dBRUVBTmdJUUlBTkJBVUhKTkVFQUVBZ01Bd3NnQWlBQk5nSVFEQUlMSUFRZ0FUWUNRQ0FEUVFGQmd0b0FJQVJCUUdzUUNFRUFJUVVNQVF0QkFDRUZJQWRCQURZQ0NDQURRUUZCeVRSQkFCQUlDeUFFUWZBQWFpUUFJQVVMcXdjQkNIOGpBRUhRQUdzaUJDUUFJQVJCQVRZQ1RBSkFBa0FnQUNnQ3lBRWlCU2dDS0NJRERRQWdCU0FBS0FKc0lBQW9BbWhzSWdNMkFpUWdBMEVvRUF3aEF5QUFLQUxJQVNJRklBTTJBaWdnQTBVRVFFRUFJUVVNQWdzZ0JTZ0NKRVVOQUFOQVFRQWhCU0FESUFaQktHd2lCMm9pQTBFQU5nSVVJQU5CNUFBMkFoeEI1QUJCR0JBTUlRa2dCeUFBS0FMSUFTSUlLQUlvSWdOcUlBazJBaGdnQ1VVTkFpQUdRUUZxSWdZZ0NDZ0NKRWtOQUFzTElBQW9BaXdoQ1FKQUlBTW9BaEJGRFFBQ1FDQURJQWxCS0d4cUlnTW9BZ1JGQkVBZ0FTQUFLUU13UWdKOElBSVFMdzBCUVFBaEJTQUNRUUZCcHlsQkFCQUlEQU1MSUFFZ0F5Z0NFQ2tEQUVJQ2ZDQUNFQzhOQUVFQUlRVWdBa0VCUWFjcFFRQVFDQXdDQ3lBQUtBSUlRWUFDUncwQUlBQkJDRFlDQ0FzQ1FDQUFLQUpzSUFBb0FtaHNJZ2RGRFFBZ0FDZ0NuQUVoQlVFQUlRTWdCMEVJVHdSQUlBZEJlSEVoQ0VFQUlRWURRQ0FGSUFOQmpDeHNha0YvTmdMVUt5QUZJQU5CQVhKQmpDeHNha0YvTmdMVUt5QUZJQU5CQW5KQmpDeHNha0YvTmdMVUt5QUZJQU5CQTNKQmpDeHNha0YvTmdMVUt5QUZJQU5CQkhKQmpDeHNha0YvTmdMVUt5QUZJQU5CQlhKQmpDeHNha0YvTmdMVUt5QUZJQU5CQm5KQmpDeHNha0YvTmdMVUt5QUZJQU5CQjNKQmpDeHNha0YvTmdMVUt5QURRUWhxSVFNZ0JrRUlhaUlHSUFoSERRQUxDeUFIUVFkeElnWkZEUUFEUUNBRklBTkJqQ3hzYWtGL05nTFVLeUFEUVFGcUlRTWdDa0VCYWlJS0lBWkhEUUFMQzBFQUlRVWdBQ0FFUWNnQWFrRUFJQVJCeEFCcUlBUkJRR3NnQkVFOGFpQUVRVGhxSUFSQk5Hb2dCRUhNQUdvZ0FTQUNFQ0JGRFFBZ0NVRUJhaUVIQTBBQ1FDQUVLQUpNUlEwQUlBQWdCQ2dDU0NJRFFRQkJBQ0FCSUFJUUpFVU5BaUFBS0FKb0lRZ2dBQ2dDYkNFS0lBUWdBMEVCYWlJR05nSWdJQVFnQ0NBS2JEWUNKQ0FDUVFSQnNOY0FJQVJCSUdvUUNDQUFLQUxRQVNBQUtBSk1LQUlZRUcxRkRRSWdBQ2dDbkFFZ0EwR01MR3hxSWdVb0F0d3JJZ2dFUUNBSUVBa2dCVUlBTndMY0t3c2dCQ0FHTmdJUUlBSkJCRUgyL0FBZ0JFRVFhaEFJSUFNZ0NVWUVRQ0FCSUFBb0FzZ0JLUU1JUWdKOElBSVFMdzBCUVFBaEJTQUNRUUZCcHlsQkFCQUlEQU1MSUFRZ0J6WUNCQ0FFSUFZMkFnQWdBa0VDUWUzbEFDQUVFQWhCQUNFRklBQWdCRUhJQUdwQkFDQUVRY1FBYWlBRVFVQnJJQVJCUEdvZ0JFRTRhaUFFUVRScUlBUkJ6QUJxSUFFZ0FoQWdEUUVNQWdzTElBQWdBaEJySVFVTElBUkIwQUJxSkFBZ0JRdklCZ0lIZndGK0l3QkIwQUJySWdNa0FDQURRUUUyQWt3Q1FBSkFJQUFvQW1naUJFRUJSdzBBSUFBb0FteEJBVWNOQUNBQUtBSlVEUUFnQUNnQ1dBMEFJQUFvQWt3aUJTZ0NBQTBBSUFVb0FnUU5BQ0FGS0FJSUlBQW9BbHhIRFFBZ0JTZ0NEQ0FBS0FKZ1J3MEFRUUFoQkNBQUlBTkJ5QUJxUVFBZ0EwSEVBR29nQTBGQWF5QURRVHhxSUFOQk9Hb2dBMEUwYWlBRFFjd0FhaUFCSUFJUUlFVU5BUUpBSUFBZ0F5Z0NTRUVBUVFBZ0FTQUNFQ1FFUUNBQUtBSk1JZ0VvQWhBTkFVRUJJUVFNQXdzZ0FrRUJRWkxCQUVFQUVBZ01BZ3NnQVNnQ0dDRUJRUUFoQWdOQUlBRWdBa0UwYkNJRWFpZ0NMQkFKSUFBb0Frd2lCU2dDR0NJQklBUnFJZ1lnQUNnQzBBRWlCeWdDRkNnQ0FDZ0NGQ0FDUWN3QWJHb2lDQ2dDSkRZQ0xDQUdJQWNvQWhnb0FoZ2dCR29vQWlRMkFpUWdDRUVBTmdJa1FRRWhCQ0FDUVFGcUlnSWdCU2dDRUVrTkFBc01BUXNEUUFKQUFuOENRQ0FFUVFGSERRQWdBQ2dDYkVFQlJ3MEFJQUFvQXB3QktBTGNLMFVOQUNBRFFRQTJBa2dnQUVFQU5nTE1BU0FBSUFBb0FnaEJnQUZ5TmdJSVFRQU1BUXRCQUNFRUlBQWdBMEhJQUdwQkFDQURRY1FBYWlBRFFVQnJJQU5CUEdvZ0EwRTRhaUFEUVRScUlBTkJ6QUJxSUFFZ0FoQWdSUTBESUFNb0FreEZEUUVnQXlnQ1NBc2lCMEVCYWlFRUlBQWdCMEVBUVFBZ0FTQUNFQ1FoQ1NBQUtBSm9JQUFvQW14c0lRVWdDVVVFUUNBRElBVTJBZ1FnQXlBRU5nSUFJQUpCQVVHWE9TQURFQWhCQUNFRURBTUxJQU1nQlRZQ0pDQURJQVEyQWlBZ0FrRUVRYkRYQUNBRFFTQnFFQWdnQUNnQzBBRWdBQ2dDVENnQ0dCQnRSUVJBUVFBaEJBd0RDd0pBQWtBZ0FDZ0NhRUVCUncwQUlBQW9BbXhCQVVjTkFDQUFLQUpNSWdVb0FnQWdBQ2dDU0NJR0tBSUFSdzBCSUFVb0FnUWdCaWdDQkVjTkFTQUZLQUlJSUFZb0FnaEhEUUVnQlNnQ0RDQUdLQUlNUncwQkN5QUFLQUtjQVNBSFFZd3NiR29pQlNnQzNDc2lCa1VOQUNBR0VBa2dCVUlBTndMY0t3c2dBeUFFTmdJUUlBSkJCRUgyL0FBZ0EwRVFhaEFJSUFFcEF3Z2lDbEFFZmtJQUJTQUtJQUVwQXpoOUMxQUVRQ0FBS0FJSVFjQUFSZzBCQ3lBSVFRRnFJZ2dnQUNnQ2FDSUVJQUFvQW14c1J3MEJDd3NnQUNBQ0VHc2hCQXNnQTBIUUFHb2tBQ0FFQzdVR0FReC9JQUFvQWtnaENRSkFJQUFvQW1nZ0FDZ0NiR3dpREFSQUlBa29BaEFpQVVHNENHd2hEU0FCSUFGc1FRSjBJUW9nQUNnQ0RDRUVJQUFvQXB3QklRTURRQ0FES0FMUUt5RUxJQU1nQkVHTUxCQUxJZ0ZCQURZQzZDc2dBVUYvTmdMVUt5QUJRUUEyQXJBb0lBRkJBRFlDaEN3Z0FVRUFOZ0x3S3lBQlFnQTNBdmdySUFFZ0N6WUMwQ3NnQVNBQkxRQ0lMRUg4QVhFNkFJZ3NJQVFvQXVnckJFQWdBU0FLRUEwaUF6WUM2Q3NnQTBVRVFFRUFEd3NnQXlBRUtBTG9LeUFLRUFzYUN5QUJJQVFvQXZnclFSUnNJZ1VRRFNJRE5nTHdLMEVBSVFnZ0EwVU5BaUFESUFRb0F2QXJJQVVRQ3hvZ0JDZ0M5Q3NpQmdSQUlBUW9BdkFySVFNZ0FTZ0M4Q3NoQlVFQUlRY0RRQ0FES0FJTUJFQWdCU0FES0FJUUVBMGlCallDRENBR1JRUkFRUUFQQ3lBR0lBTW9BZ3dnQXlnQ0VCQUxHaUFFS0FMMEt5RUdDeUFCSUFFb0F2Z3JRUUZxTmdMNEt5QUZRUlJxSVFVZ0EwRVVhaUVESUFkQkFXb2lCeUFHU1EwQUN3c2dBU0FFS0FLRUxFRVViQ0lGRUEwaUF6WUMvQ3NnQTBVTkFpQURJQVFvQXZ3cklBVVFDeG9nQVNBRUtBS0VMQ0lJTmdLRUxDQUlCRUFnQkNnQy9Dc2hBeUFCS0FMOEt5RUZRUUFoQndOQUlBTW9BZ2dpQmdSQUlBVWdBU2dDOENzZ0JpQUVLQUx3SzJ0cU5nSUlDeUFES0FJTUlnWUVRQ0FGSUFFb0F2QXJJQVlnQkNnQzhDdHJhallDREFzZ0JVRVVhaUVGSUFOQkZHb2hBeUFIUVFGcUlnY2dDRWNOQUFzTElBc2dCQ2dDMENzZ0RSQUxHaUFCUVl3c2FpRURJQTVCQVdvaURpQU1SdzBBQ3d0QkFTRUlJQUFDZjBFQVFRRkJ5QUFRRENJQlJRMEFHaUFCSUFFdEFDaEIvZ0Z4UVFGeU9nQW9JQUZCQVVFRUVBd2lCRFlDRkNBQklBUU5BQm9nQVJBSlFRQUxJZ0UyQXRBQklBRkZCRUJCQUE4TElBQW9BdFFCSVFWQkFDRUVJQUVnQUVIUUFHbzJBaHdnQVNBSk5nSVlRUUZCMEFZUURDRURJQUVvQWhRZ0F6WUNBQUpBSUFORkRRQWdDU2dDRUVITUFCQU1JUU1nQVNnQ0ZDZ0NBQ0lISUFNMkFoUWdBMFVOQUNBSElBa29BaEEyQWhBZ0FDZ0NwQUVoQkNBQklBVTJBaXdnQVNBRU5nSUFRUUVoQkFzZ0JBMEFJQUFvQXRBQkVFNUJBQ0VJSUFCQkFEWUMwQUVnQWtFQlFjSWJRUUFRQ0FzZ0NBdlZFZ01NZndGOUFYNGpBRUV3YXlJSUpBQWdBRUVCTmdJSUFuOENRQUpBSUFFZ0NFRW9haUlGUVFJZ0FoQVNRUUpIRFFBZ0JTQUlRU3hxUVFJUUNpQUlLQUlzUWMvK0EwY05BQ0FBUVFJMkFnZ2dBQ2dDeUFFZ0FTa0RPRUlDZlNJUU53TUFJQWdnRURjREVDQUNRUVJCL3Q0QUlBaEJFR29RQ0NBQUtBTElBU0lES1FNQUlSQWdBeWdDR0NJSFFRRnFJZ1VnQXlnQ0lDSUVUUVJBSUFNb0Fod2hCQXdDQ3lBREFuOGdCTE5EQUFESVFwSWlEME1BQUlCUFhTQVBRd0FBQUFCZ2NRUkFJQStwREFFTFFRQUxJZ1UyQWlBZ0F5Z0NIQ0FGUVJoc0VCQWlCQVJBSUFNZ0JEWUNIQ0FES0FJWUlnZEJBV29oQlF3Q0N5QURLQUljRUFrZ0EwRUFOZ0lnSUFOQ0FEY0RHQ0FDUVFGQnFSMUJBQkFJQ3lBQ1FRRkJ4ZlVBUVFBUUNFRUFEQUVMSUFRZ0IwRVliR29pQkVFQ05nSVFJQVFnRU1RM0F3Z2dCRUhQL2dNN0FRQWdBeUFGTmdJWUlBRWdBQ2dDRUVFQ0lBSVFFa0VDUndSQUlBSkJBVUdXRWtFQUVBaEJBQXdCQ3lBQUtBSVFJQWhCS0dwQkFoQUtBa0FDUUNBSUtBSW9JZ1JCa1A4RFJ3UkFBMEJCOEwwQklRY2dCRUgvL1FOTkJFQWdDQ0FFTmdJQUlBSkJBVUhLRUNBSUVBaEJBQXdGQ3dOQUlBY2lCU2dDQUNJREJFQWdCVUVNYWlFSElBTWdCRWNOQVFzTEFrQUNRQ0FERFFCQkFpRUdJQUpCQWtIMUhFRUFFQWhCbGhJaEJ3SkFBa0FnQVNBQUtBSVFRUUlnQWhBU1FRSkhEUUFEUUNBQUtBSVFJQWhCTEdwQkFoQUtRZkM5QVNFRElBZ29BaXdpQkVHQS9nTlBCRUFEUUNBRElnVW9BZ0FpREFSQUlBTkJER29oQXlBRUlBeEhEUUVMQ3lBRktBSUVJQUFvQWdoeFJRUkFRZndvSVFjTUF3c2dEQVJBSUF4QmtQOERSZ1JBSUFoQmtQOEROZ0lvREFjTElBRXBBemdoRUNBQUtBTElBU0lES0FJWUlnVkJBV29pQkNBREtBSWdJZ2ROQkVBZ0F5Z0NIQ0VIREFVTElBTUNmeUFIczBNQUFNaENraUlQUXdBQWdFOWRJQTlEQUFBQUFHQnhCRUFnRDZrTUFRdEJBQXNpQlRZQ0lDQURLQUljSUFWQkdHd1FFQ0lIQkVBZ0F5QUhOZ0ljSUFNb0FoZ2lCVUVCYWlFRURBVUxJQU1vQWh3UUNTQURRUUEyQWlBZ0EwSUFOd01ZUWFrZElRY01Bd3NnQmtFQ2FpRUdDeUFCSUFBb0FoQkJBaUFDRUJKQkFrWU5BQXNMSUFKQkFTQUhRUUFRQ0NBQ1FRRkIvc2NBUVFBUUNFRUFEQWNMSUFjZ0JVRVliR29pQlNBR05nSVFJQVVnRUtjZ0JtdXNOd01JSUFWQkFEc0JBQ0FESUFRMkFoZ2dDQ0FNTmdJb1FmQzlBU0VFQTBBZ0JDSUZLQUlBSWdORkRRRWdCRUVNYWlFRUlBTWdERWNOQUFzTElBVW9BZ1FnQUNnQ0NIRkZCRUFnQWtFQlFmd29RUUFRQ0VFQURBWUxJQUVnQUNnQ0VFRUNJQUlRRWtFQ1J3UkFJQUpCQVVHV0VrRUFFQWhCQUF3R0N5QUFLQUlRSUFoQkpHcEJBaEFLSUFnb0FpUWlCRUVCVFFSQUlBSkJBVUdoTGtFQUVBaEJBQXdHQ3lBSUlBUkJBbXNpQnpZQ0pDQUFLQUlRSVFRZ0FDZ0NGQ0FIU1FSQUlBUWdCeEFRSWdSRkJFQWdBQ2dDRUJBSklBQkNBRGNERUNBQ1FRRkIxQ1ZCQUJBSVFRQU1Cd3NnQUNBRU5nSVFJQUFnQ0NnQ0pDSUhOZ0lVQ3lBQklBUWdCeUFDRUJJaUJDQUlLQUlrUndSQUlBSkJBVUdXRWtFQUVBaEJBQXdHQ3lBQUlBQW9BaEFnQkNBQ0lBVW9BZ2dSQVFCRkJFQWdBa0VCUWFnU1FRQVFDRUVBREFZTElBRXBBemdoRUNBSUtBSWtJUXdDUUNBQUtBTElBU0lGS0FJWUlnWkJBV29pQnlBRktBSWdJZ1JOQkVBZ0JTZ0NIQ0VFREFFTElBVUNmeUFFczBNQUFNaENraUlQUXdBQWdFOWRJQTlEQUFBQUFHQnhCRUFnRDZrTUFRdEJBQXNpQkRZQ0lDQUZLQUljSUFSQkdHd1FFQ0lFUlEwRklBVWdCRFlDSENBRktBSVlJZ1pCQVdvaEJ3c2dCQ0FHUVJoc2FpSUVJQXhCQkdvMkFoQWdCQ0FRcHlBTWEwRUVhNnczQXdnZ0JDQURPd0VBSUFVZ0J6WUNHQ0FCSUFBb0FoQkJBaUFDRUJKQkFrY0VRQ0FDUVFGQmxoSkJBQkFJUVFBTUJndEJBU0FLSUFOQjNQNERSaHNoQ2tFQklBc2dBMEhTL2dOR0d5RUxRUUVnRFNBRFFkSCtBMFliSVEwZ0FDZ0NFQ0FJUVNocVFRSVFDaUFJS0FJb0lnUkJrUDhEUncwQkN3c2dEUTBCQ3lBQ1FRRkJtQ1JCQUJBSVFRQU1BZ3NnQzBVRVFDQUNRUUZCeGlSQkFCQUlRUUFNQWdzZ0NrVUVRQ0FDUVFGQjlDUkJBQkFJUVFBTUFndEJBQ0VEUVFBaERTTUFRUkJySWdRa0FFRUJJUWNDUUNBQUxRQzhBVUVCY1VVTkFBSkFJQUFvQW5BaUMwVU5BQUpBQTBBZ0FDZ0NkQ0FOUVFOMGFpSUZLQUlBSWdvRVFDQURJQVVvQWdRaUJtc2lCVUVBSUFNZ0JVOGJJUVVnQXlBR1NRUkFJQVlnQTJzaEN5QURJQXBxSVFvRFFDQUxRUVJKQkVCQmppc2hBd3dGQ3lBS0lBUkJER3BCQkJBS0lBUW9BZ3dpQTBGL2N5QUpTUVJBUWZRcUlRTU1CUXNnQXlBTFFRUnJJZ1pySUFVZ0F5QUdTeUlNR3lFRklBTWdDV29oQ1NBR0lBTnJJUXNnQ2tFQUlBTWdEQnRxUVFScUlRb2dBeUFHU1EwQUN5QUFLQUp3SVFzTElBVWhBd3NnRFVFQmFpSU5JQXRKRFFBTElBTkZEUUZCQUNFSElBSkJBVUhwRmtFQUVBZ01BZ3RCQUNFSElBSkJBU0FEUVFBUUNBd0JDeUFBSUFrUURTSUROZ0tJQVNBRFJRUkFRUUFoQnlBQ1FRRkJ2aUJCQUJBSURBRUxJQUFnQ1RZQ2ZDQUFLQUowSVFZQ1FDQUFLQUp3SWdvRVFFRUFJUWxCQUNFRFFRQWhCUU5BSUFZZ0JVRURkQ0lOYWlJTUtBSUFJZ3NFUUNBQUtBS0lBU0FEYWlFS0FuOGdEQ2dDQkNJR0lBbE5CRUFnQ2lBTElBWVFDeG9nQXlBR2FpRURJQWtnQm1zTUFRc2dDaUFMSUFrUUN4b2dBeUFKYWlFRElBWWdDV3NpQmdSQUlBa2dDMm9oQ1FOQUlBWkJCRWtOQmlBSklBUkJDR3BCQkJBS0lBbEJCR29oQ1NBQUtBS0lBU0FEYWlFS0lBWkJCR3NpQmlBRUtBSUlJZ3RKQkVBZ0NpQUpJQVlRQ3hvZ0F5QUdhaUVESUFRb0FnZ2dCbXNNQXdzZ0NpQUpJQXNRQ3hvZ0JDZ0NDQ0lLSUFOcUlRTWdDU0FLYWlFSklBWWdDbXNpQmcwQUN3dEJBQXNoQ1NBQUtBSjBJQTFxS0FJQUVBa2dBQ2dDZENJR0lBMXFRZ0EzQWdBZ0FDZ0NjQ0VLQ3lBRlFRRnFJZ1VnQ2trTkFBc2dBQ2dDZkNFSklBQW9Bb2dCSVFNTElBQWdDVFlDa0FFZ0FDQUROZ0o0SUFCQkFEWUNjQ0FHRUFrZ0FFRUFOZ0owREFFTFFRQWhCeUFDUVFGQmppdEJBQkFJQ3lBRVFSQnFKQUFnQjBVRVFDQUNRUUZCanoxQkFCQUlRUUFNQWdzZ0FrRUVRWWZYQUVFQUVBZ2dBQ2dDeUFFZ0FTa0RPRUwrLy8vL0QzeEMvLy8vL3crRE53TUlJQUJCQ0RZQ0NFRUJEQUVMSUFVb0Fod1FDU0FGUVFBMkFpQWdCVUlBTndNWUlBSkJBVUdwSFVFQUVBaEJBQXNoRGlBSVFUQnFKQUFnRGdzY0FDQUFLQUlJUlNBQUtBTEFBVUVBUnlBQUtBTEVBVUVBUjNGeEN3UUFRUUFMRHdBZ0FBUkFJQUFnQVRZQ3VBRUxDNDhCQVFSL0lBQW9BaGdpQVFSQUlBQW9BaHdpQTBFMGJpRUVJQU5CTkU4RWYwRUFJUU1EUUNBQktBSUFJZ0lFUUNBQ1FRRnJFQWtnQVVFQU5nSUFDeUFCS0FJRUlnSUVRQ0FDRUFrZ0FVRUFOZ0lFQ3lBQktBSUlJZ0lFUUNBQ0VBa2dBVUVBTmdJSUN5QUJRVFJxSVFFZ0EwRUJhaUlESUFSSERRQUxJQUFvQWhnRklBRUxFQWtnQUVFQU5nSVlDd3VHQVFFRWZ5QUFLQUlZSWdFRVFDQUFLQUljSWdKQndBQlBCSDhnQWtFR2RpRUVRUUFoQWdOQUlBRW9BZ0FpQXdSQUlBTVFDU0FCUVFBMkFnQUxJQUVvQWdRaUF3UkFJQU1RQ1NBQlFRQTJBZ1FMSUFFb0Fqd1FDU0FCUVFBMkFqd2dBVUZBYXlFQklBSkJBV29pQWlBRVJ3MEFDeUFBS0FJWUJTQUJDeEFKSUFCQkFEWUNHQXNMUHdFQmZ5QUFCRUFnQUNnQ2RDSUJCRUFnQVJBSklBQkJBRFlDZEFzZ0FDZ0NlQ0lCQkVBZ0FSQUpJQUJCQURZQ2VBc2dBQ2dDbEFFUUNTQUFFQWtMQzhHbUJRUmNmd0o3Qm40QmZTTUFRZUFBYXlJakpBQWdBQ2dDQ0NFYUFrQUNRQUpBQWtBZ0FDZ0NBRVVFUUNBYUlCb29BaEFnR2lnQ0NHc2dHaWdDRkNBYUtBSU1hMnhCQW5RaUJoQVdJZ00yQWp3Z0EwVUVRQ0FBS0FJa0dpQUFLQUlnUVFGQjBUeEJBQkFJSUFBb0FpUWFJQUJCSEdvaEVBd0RDeUFEUVFBZ0JoQU9HZ3dCQ3lBYUtBSThJZ05GRFFBZ0F4QUpJQnBCQURZQ1BBc2dBQ2dDRUNJeUtBSWNJRElvQWhoQm1BRnNhaUlEUVpnQmF5Z0NBQ0UxSUFOQmtBRnJLQUlBSVRZZ0FDZ0NGQ0V2SUFBb0Fnd2hNQ0FBS0FJRUlUY2dBQ2dDSENnQ0FFVU5BaUFBUVJ4cUlSQUNRQUovUVFBZ0FTZ0NCQ0lEUVFCTURRQWFJQUVvQWdBaEJnSkFBMEFnQmlBSFFReHNhaUlFS0FJQVJRMEJJQWRCQVdvaUJ5QURSdzBBQzBFQURBRUxJQVFvQWdRTElnUU5BRUVCUVp3QkVBd2lCRVVFUUNBQUtBSWdRUUZCa0RCQkFCQUlEQUlMSUFSQkFEWUNqQUVnQVNnQ0JDSURRZi8vLy84SFJ3Ui9BbjhnQVNnQ0FDRUdJQU5CQUVvRVFBTkFJQVlnQ1VFTWJHb2lCeWdDQUVVRVFDQUhLQUlJSWdNRWZ5QUhLQUlFSUFNUkFnQWdBU2dDQUFVZ0Jnc2dDVUVNYkdvaUFVRVBOZ0lJSUFFZ0JEWUNCRUVCREFNTElBbEJBV29pQ1NBRFJ3MEFDd3RCQUNBR0lBTkJER3hCREdvUUVDSURSUTBBR2lBQklBTTJBZ0FnQXlBQktBSUVJZ1pCREd4cUlnTkJEellDQ0NBRElBUTJBZ1FnQTBFQU5nSUFJQUVnQmtFQmFqWUNCRUVCQ3dWQkFBc05BQ0FBS0FJZ1FRRkJqVDVCQUJBSUlBUW9BblFpQVFSQUlBRVFDU0FFUVFBMkFuUUxJQVFvQW5naUFRUkFJQUVRQ1NBRVFRQTJBbmdMSUFRb0FwUUJFQWtnQkJBSkRBRUxJQVFnQUNnQ0dEWUNrQUVnQUNnQ0tDRXJJQUFvQWlRaElTQUFLQUlnSVIwZ0x5Z0NxQVloRVNBd0tBSVFJUUVDUUFKQUlDOG9BaEFpRmtIQUFIRUVRQ0FXSVFvakFFR3dBbXNpRHlRQUFrQWdFUVJBSUNFRVFFRUFJUWNnSFVFQlFZRVlRUUFRQ0F3Q0MwRUFJUWNnSFVFQlFZRVlRUUFRQ0F3QkN5QUVLQUowSVFjQ1FBSkFJQm9vQWhRZ0dpZ0NER3NpQXlBYUtBSVFJQm9vQWdocklnWnNJZ0VnQkNnQ2hBRkxCRUFnQnhBSklBUWdBVUVDZENJUkVCWWlCellDZENBSFJRUkFRUUFoQnd3RUN5QUVJQUUyQW9RQkRBRUxJQWRGRFFFZ0FVRUNkQ0VSQ3lBSFFRQWdFUkFPR2dzZ0JDZ0NlQ0VIQWtBZ0JDZ0NpQUZCenhSTERRQWdCeEFKSUFSQndOSUFFQllpQnpZQ2VDQUhEUUJCQUNFSERBRUxJQVJCMEJRMkFvZ0JJQWRCQUVIQTBnQVFEaG9nQkNBRE5nS0FBU0FFSUFZMkFud2dHaWdDR0NJQ1JRUkFRUUVoQnd3QkN5QWFLQUljSVExQkFTRUhBa0FDUUFKQUFrQUNRQ0FhS0FJMElnTUVRQ0FhS0FJRUlRbEJBQ0VIUVFBaEFRSkFJQU5CQkU4RVFDQURRWHh4SVFFRFFDQUpJQWhCQTNScUlnWkJIR29nQmtFVWFpQUdRUXhxSUFiOUNRSUUvVllDQUFIOVZnSUFBdjFXQWdBRElGNzlyZ0VoWGlBSVFRUnFJZ2dnQVVjTkFBc2dYaUJlSUY3OURRZ0pDZ3NNRFE0UEFBRUNBd0FCQWdQOXJnRWlYaUJlSUY3OURRUUZCZ2NBQVFJREFBRUNBd0FCQWdQOXJnSDlHd0FoQnlBQklBTkdEUUVMQTBBZ0NTQUJRUU4wYWlnQ0JDQUhhaUVISUFGQkFXb2lBU0FEUncwQUN3c2dBMEVCUmdSQUlBUW9BcEFCUlEwRkN5QUhJQVFvQXBnQlRRMEJJQVFvQXBRQklBY1FFQ0lSRFFKQkFDRUhEQVlMSUFRb0FwQUJSUTBGQ3lBRUtBS1VBU0lSRFFGQkFDRUhEQVFMSUFRZ0J6WUNtQUVnQkNBUk5nS1VBUXNnR2lnQ05FVUVRRUVBSVFjTUFnc2dHaWdDQkNFSVFRQWhCMEVBSVFFRFFDQUhJQkZxSUFnZ0FVRURkQ0lEYWlJR0tBSUFJQVlvQWdRUUN4b2dHaWdDQkNJSUlBTnFLQUlFSUFkcUlRY2dBVUVCYWlJQklCb29BalJKRFFBTERBRUxJQm9vQWdRb0FnQWhFUXRCQUNFQlFRQWhDQUovUVFBZ0dpZ0NLQ0lEUlEwQUdpQWFLQUlBSWdZb0FnZ2hDRUVBSUFOQkFVWU5BQm9nQmlnQ0lBc2hBeUFDSUExcklVVUNRQ0FESUFocUlnaEZCRUJCQUNFSkRBRUxRUUVoQVNBYUtBSUFJZ01vQWdBaEJVRUFJUWtnQ0VFQlJnUkFRUUFoQVF3QkN5QURLQUlZSVFrTElFVkJBV29oRmlBRUtBSjBJUTRnQkNnQ2VDRVVJQm9vQWd3aEVpQWFLQUlVSVJnZ0dpZ0NDQ0VrSUJvb0FoQWhLd0pBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FCUlEwQUlBa05BQ0FoUlEwQklCMUJBa0g4endCQkFCQUlRUUVoQ0F3Q0N5QUlRUVJKRFFFZ0lRUkFJQThnQ0RZQ2NDQWRRUUZCL2NVQUlBOUI4QUJxRUFnTUNBc2dEeUFJTmdKZ0lCMUJBVUg5eFFBZ0QwSGdBR29RQ0VFQUlRY01DQXNnSFVFQ1FmelBBRUVBRUFnZ0dpZ0NHQ0lCUVI1TERRRkJBU0VNSUFFZ0ZrOE5Bd3dGQ3lBYUtBSVlJZ0ZCSGswTkFTQWhSUTBBSUE4Z0FUWUNJQ0FkUVFGQnE5c0FJQTlCSUdvUUNBd0ZDeUFQSUFFMkFnQWdIVUVCUWF2YkFDQVBFQWhCQUNFSERBVUxJQUVnRmtrTkFTQUlRUUpKQkVBZ0NDRU1EQUVMSUFFZ0ZrY0VRQ0FJSVF3TUFRdEJBU0VNUVpER0FTMEFBQTBBSUNGRkJFQkJrTVlCUVFFNkFBQWdEeUFJTmdKQUlCMUJBa0dCekFBZ0QwRkFheEFJREFFTFFaREdBUzBBQUVVRVFFR1F4Z0ZCQVRvQUFDQVBJQWcyQWxBZ0hVRUNRWUhNQUNBUFFkQUFhaEFJQ3dzQ1FBSkFJQVZCQWtrTkFDQUZJQWRMRFFBZ0JTQUphaUFIVFEwQkN5QWhCRUJCQUNFSElCMUJBVUhEeFFCQkFCQUlEQVVMUVFBaEJ5QWRRUUZCdzhVQVFRQVFDQXdFQ3dKQUFrQWdCU0FSYWlJVFFRRnJMUUFBUVFSMElCTkJBbXN0QUFCQkQzRnlJZ1pCQWtrTkFDQUZJQVpJRFFBZ0JrSHdIMGtOQVFzZ0lRUkFRUUFoQnlBZFFRRkI1dklBUVFBUUNBd0ZDMEVBSVFjZ0hVRUJRZWJ5QUVFQUVBZ01CQXNnR2lnQ0hDRW1JQTlCQURZQ2tBSWdEMEVBTmdLWUFpQVBRZ0EzQTRnQ0lBOUNBRGNEcUFJZ0QwSUFOd0tjQWlBUElBWkJBV3NpQnpZQ2xBSWdEeUFGSUJGcUlBWnJJZ0UyQW9BQ1F2OEJJV0FnQmtFQ1R3UkFJQUV4QUFBaFlBdEJDQ0VESUE5QkNEWUNrQUlnRHlBR1FRSnJJZ2cyQXBRQ0lBOGdZRUlQaENCZ0lBZEJBVVliSW1BM0E0Z0NJQThnQVNBR1FRRkthaUlITmdLQUFpQVBJR0JDL3dGUklnMDJBcGdDQW44Q1FDQUJRUU54SWdKQkEwWU5BRUwvQVNGaElBMEVRRUVBSUFjdEFBQkJqd0ZMRFFJYUN5QUdRUU5PQkVBZ0J6RUFBQ0ZoQ3lBUElBWkJBMnNpRFRZQ2xBSWdEMEVQUVJBZ1lFTC9BVkVpQ3hzaUF6WUNrQUlnRHlBSElBWkJBa3BxSWdFMkFvQUNJQThnWVVJUGhDQmhJQWhCQVVZYkltRkMvd0ZSTmdLWUFpQVBJR0JDQjBJSUlBc2JoaUJoaENKZ053T0lBaUFDUVFKR0RRQWdZVUwvQVZFRVFFRUFJQUV0QUFCQmp3RkxEUUlhQzBML0FTRmlJQVpCQkU0RVFDQUJNUUFBSVdJTElBOGdCa0VFYXlJSE5nS1VBaUFQSUFFZ0JrRURTbW9pQVRZQ2dBSWdEeUJpUWcrRUlHSWdEVUVCUmhzaVlrTC9BVkUyQXBnQ0lBOGdBMEVIUVFnZ1lVTC9BVkVpQ0J0cUlnTTJBcEFDSUE4Z1lFSUhRZ2dnQ0J1R0lHS0VJbUEzQTRnQ0lBSkJBVVlOQUVML0FTRmhJR0pDL3dGUkJFQkJBQ0FCTFFBQVFZOEJTdzBDR2dzZ0JrRUZUZ1JBSUFFeEFBQWhZUXNnRHlBR1FRVnJOZ0tVQWlBUElBRWdCa0VFU21vMkFvQUNJQThnWVVJUGhDQmhJQWRCQVVZYkltRkMvd0ZSTmdLWUFpQVBJQU5CQjBFSUlHSkMvd0ZSSWdFYmFpSUROZ0tRQWlBUElHQkNCMElJSUFFYmhpQmhoQ0pnTndPSUFnc2dEeUJnUWNBQUlBTnJyWVkzQTRnQ1FRRUxSUVJBSUNFRVFFRUFJUWNnSFVFQlFkN1VBRUVBRUFnTUJRdEJBQ0VISUIxQkFVSGUxQUJCQUJBSURBUUxJQ3NnSkdzaEZTQVBJQVpCQW1zaUN6WUM5QUVnRHlBRklCRnFJZ0pCQTJzaUF6WUM0QUVnRHlBQ1FRSnJMUUFBSWhsQmp3RkxJZzAyQXZnQklBOGdHVUVFZHEwaVlEY0Q2QUVnRDBFRFFRUWdZRUlIZzBJSFVSc2lBVFlDOEFFZ0EwRURjVUVCYWlJSElBc2dCeUFMU0JzaENBSkFBa0FnQmtFQ1RBUkFJQThnQ3lBSWF5SUNOZ0wwQVF3QkN5QVBJQUpCQkdzaUJ6WUM0QUVnRHlBRExRQUFJaGRCandGTElnMDJBdmdCSUE4Z0Y2MGlZU0FCcllZZ1lJUWlZRGNENkFFZ0QwRUlRUWRCQ0NCaFF2OEFnMEwvQUZFYklCbEJqd0ZOR3lBQmFpSUJOZ0x3QVFKQUlBaEJBVVlFUUNBSElRTU1BUXNnRHlBQ1FRVnJJZ00yQXVBQklBOGdCeTBBQUNJWlFZOEJTeUlOTmdMNEFTQVBJQm10SW1FZ0FhMkdJR0NFSW1BM0ErZ0JJQTlCQ0VFSFFRZ2dZVUwvQUlOQy93QlJHeUFYUVk4QlRSc2dBV29pQVRZQzhBRWdDRUVDUmcwQUlBOGdBa0VHYXlJSE5nTGdBU0FQSUFNdEFBQWlGMEdQQVVzaURUWUMrQUVnRHlBWHJTSmhJQUd0aGlCZ2hDSmdOd1BvQVNBUFFRaEJCMEVJSUdGQy93Q0RRdjhBVVJzZ0dVR1BBVTBiSUFGcUlnRTJBdkFCSUFoQkEwWUVRQ0FISVFNTUFRc2dEeUFDUVFkcklnTTJBdUFCSUE4Z0J6RUFBQ0poUW84QlZpSU5OZ0w0QVNBUElHRWdBYTJHSUdDRUltQTNBK2dCSUE5QkNFRUhRUWdnWVVML0FJTkMvd0JSR3lBWFFZOEJUUnNnQVdvaUFUWUM4QUVMSUE4Z0N5QUlheUlDTmdMMEFTQUJRU0JMRFFFTEFrQWdBa0VFVGdSQUlBTkJBMnNvQWdBaEJ5QVBJQUpCQkdzMkF2UUJJQThnQTBFRWF6WUM0QUVNQVFzZ0FrRUFUQVJBUVFBaEJ3d0JDeUFDUVFGeElVY0NRQ0FDUVFGR0JFQkJHQ0VJUVFBaEJ3d0JDeUFDUWY3Ly8vOEhjU0VYUVJnaENFRUFJUWRCQUNFTEEwQWdEeUFEUVFGckloODJBdUFCSUFNdEFBQWhSaUFQSUFOQkFtc2lBellDNEFFZ0R5QUNRUUZyTmdMMEFTQWZMUUFBSVI4Z0R5QUNRUUpySWdJMkF2UUJJRVlnQ0hRZ0IzSWdIeUFJUVFocmRISWhCeUFJUVJCcklRZ2dDMEVDYWlJTElCZEhEUUFMQ3lCSFJRMEFJQThnQTBFQmF6WUM0QUVnQXkwQUFDRklJQThnQWtFQmF6WUM5QUVnU0NBSWRDQUhjaUVIQ3lBUElBZEIvd0Z4SWdOQmp3RkxOZ0w0QVNBUFFRZEJDQ0FIUVlDQWdQZ0hjVUdBZ0lENEIwWWJRUWdnRFJzaUFrRUlRUWRCQ0NBSFFZQ0EvQU54UVlDQS9BTkdHeUFIUWYvLy8vOTRUUnRxSWdoQkNFRUhRUWdnQjBHQS9nRnhRWUQrQVVZYklBZEJFSFpCL3dGeElnMUJqd0ZORzJvaUMwRUlRUWRCQ0NBSFFmOEFjVUgvQUVZYklBZEJDSFpCL3dGeElobEJqd0ZOR3lBQmFtbzJBdkFCSUE4Z0RTQUNkQ0FIUVJoMmNpQVpJQWgwY2lBRElBdDBjcTBnQWEyR0lHQ0VOd1BvQVFzZ0QwSEFBV29nRVNBRklBWnJRZjhCRUZRQ2YwRUFJQXhCQWtrTkFCb2dEMEdnQVdvZ0V5QUpRUUFRVkVFQUlBeEJBa1lOQUJwQ0FDRmdRZ0FoWWlBUFFRRTJBcGdCSUE5QkFEWUNrQUVnRDBJQU53T0lBU0FQSUFsQkFXc2lCallDbEFFZ0R5QUZJQkZxSUFscUlnTkJBV3NpQVRZQ2dBRWdBVUVEY1NFRkFrQWdDVUVBVEFSQUlBRWhBd3dCQ3lBUElBTkJBbXNpQXpZQ2dBRWdBVEVBQUNGZ0N5QVBJR0EzQTRnQklBOGdZRUtQQVZZaUVUWUNtQUVnRDBFSFFRZ2dZRUwvQUlOQy93QlJHeUlOTmdLUUFRSkFJQVZGRFFBZ0R5QUpRUUpySWdJMkFwUUJBa0FnQ1VFQ1NBUkFJQU1oQnd3QkN5QVBJQU5CQVdzaUJ6WUNnQUVnQXpFQUFDRmlDeUFQSUdKQ2p3RldJaEUyQXBnQklBOGdZaUFOcllZZ1lJUWlZVGNEaUFFZ0QwRUlRUWRCQ0NCaVF2OEFnMEwvQUZFYklHQkNqd0ZZR3lBTmFpSU5OZ0tRQVNBRlFRRkdCRUFnQnlFRElHRWhZQ0FHSVFrZ0FpRUdEQUVMSUE4Z0NVRURheUlJTmdLVUFRSkFJQWxCQTBnRVFDQUhJUUVNQVFzZ0R5QUhRUUZySWdFMkFvQUJJQWN4QUFBaFl3c2dEeUJqUW84QlZpSVJOZ0tZQVNBUElHTWdEYTJHSUdHRUltQTNBNGdCSUE5QkNFRUhRUWdnWTBML0FJTkMvd0JSR3lCaVFvOEJXQnNnRFdvaURUWUNrQUVnQlVFQ1JnUkFJQUVoQXlBQ0lRa2dDQ0VHREFFTElBOGdDVUVFYXlJR05nS1VBVUlBSVdJQ1FDQUpRUVJJQkVBZ0FTRUREQUVMSUE4Z0FVRUJheUlETmdLQUFTQUJNUUFBSVdJTElBOGdZa0tQQVZZaUVUWUNtQUVnRHlCaUlBMnRoaUJnaENKZ053T0lBU0FQUVFoQkIwRUlJR0pDL3dDRFF2OEFVUnNnWTBLUEFWZ2JJQTFxSWcwMkFwQUJJQWdoQ1FzZ0RVRWdUUVJBQWtBZ0NVRUZUZ1JBSUFOQkEyc29BZ0FoQnlBUElBbEJCV3MyQXBRQklBOGdBMEVFYXpZQ2dBRU1BUXRCQUNFSElBbEJBa2dOQUVFWUlRa0RRQ0FQSUFOQkFXc2lBVFlDZ0FFZ0F5MEFBQ0ZKSUE4Z0JrRUJheUlDTmdLVUFTQkpJQWwwSUFkeUlRY2dCa0VCU3lGS0lBRWhBeUFKUVFocklRa2dBaUVHSUVvTkFBc0xJQThnQjBIL0FYRWlBVUdQQVVzMkFwZ0JJQTlCQjBFSUlBZEJnSUNBK0FkeFFZQ0FnUGdIUmh0QkNDQVJHeUlEUVFoQkIwRUlJQWRCZ0lEOEEzRkJnSUQ4QTBZYklBZEIvLy8vLzNoTkcyb2lCa0VJUVFkQkNDQUhRWUQrQVhGQmdQNEJSaHNnQjBFUWRrSC9BWEVpQ1VHUEFVMGJhaUlDUVFoQkIwRUlJQWRCL3dCeFFmOEFSaHNnQjBFSWRrSC9BWEVpQ0VHUEFVMGJJQTFxYWpZQ2tBRWdEeUFKSUFOMElBZEJHSFp5SUFnZ0JuUnlJQUVnQW5SeXJTQU5yWVlnWUlRM0E0Z0JDMEVCQ3lFeElCZ2dFbXNoSHlBV1FRRnFJU3dnRkVFQU9nREFFQ0FVUWNBUWFpRUxJQTlCZ0FKcUVDRWhBaUFWUVFCS0JFQWdKa0VCYXlFVElCUWhBeUFMSVFoQkFDRVJJQTRoQmtFQUlRMERRQ0FOSVFVZ0VVRUlkQ0FQUWVBQmFoQXFRZjhBY1VFQmRISkJzUDBBYWk4QkFDRUJBa0FnRVEwQUlBRkJBQ0FDUVFKcklnZEJmMFliSVFFZ0FrRUJTZ1JBSUFjaEFnd0JDeUFQUVlBQ2FoQWhJUUlMSUE4cEErZ0JJV1FnRHlnQzhBRWhTeUFESUFNb0FnQWdBVUVFZGlJWVFRTnhJQUZCQW5aQk1IRnlJQ0owY2lJV05nSUFJQUZCQlhaQkIzRWdBVUVRY1NJZVFRUjJjaUVSSUVzZ0FVRUhjU0lIYXlFTklHUWdCNjJJSW1DbklRbEJBQ0VISUJVZ0JVRUNja29FUUNBUlFRaDBJQWxCL3dCeFFRRjBja0d3L1FCcUx3RUFJUWNDUUNBUkRRQWdCMEVBSUFKQkFtc2lDVUYvUmhzaEJ5QUNRUUZLQkVBZ0NTRUNEQUVMSUE5QmdBSnFFQ0VoQWdzZ0IwRUVka0VCY1NBSFFRVjJRUWR4Y2lFUklBMGdCMEVIY1NJSmF5RU5JR0FnQ2EySUltQ25JUWtMSUFNZ0IwRUNkRUdBQm5FZ0IwRXdjWElnSWtFRWFuUWdGbkkyQWdBQ1FDQUhRUUoyUVFKeElBRkJBM1pCQVhGeUloZEJBMGNOQUVFRVFRTWdBa0VDYXlJV1FYOUdHeUVYSUFKQkFVb0VRQ0FXSVFJTUFRc2dEMEdBQW1vUUlTRUNDd0ovSUJkRkJFQWdEMEtCZ0lDQUVEY0NlRUVBREFFTElCZEJBazBFUUNBUFFRRWdDVUVIY1VIa25RRnFMUUFBSWhaQkJYWkJmeUFXUVFKMlFRZHhJaGwwUVg5eklBa2dGa0VEY1NJSmRuRnFRUUZxSWhZZ0YwRUJSaUlYR3pZQ2ZDQVBJQlpCQVNBWEd6WUNlQ0FKSUJscURBRUxJQWtnQ1VFSGNVSGtuUUZxTFFBQUloWkJBM0VpR1hZaENTQVhRUU5HQkVBZ0ZrRUZka0VCYWlFWElCbEJBMFlFUUNBUElBbEJBWEZCQW5JMkFud2dEeUFYUVg4Z0ZrRUNka0VIY1NJV2RFRi9jeUFKUVFGMmNXbzJBbmdnRmtFRWFnd0NDeUFQSUJjZ0NTQUpRUWR4UWVTZEFXb3RBQUFpQ1VFRGNTSVNkaUlnUVg4Z0ZrRUNka0VIY1NJV2RFRi9jM0ZxTmdKNElBOUJmeUFKUVFKMlFRZHhJaGQwUVg5eklDQWdGblp4SUFsQkJYWnFRUUZxTmdKOElCWWdHV29nRW1vZ0Yyb01BUXNnRHlBSklBbEJCM0ZCNUowQmFpMEFBQ0lKUVFOeEloSjJJaUJCZnlBV1FRSjJRUWR4SWhkMFFYOXpjU0FXUVFWMmFrRURhallDZUNBUFFYOGdDVUVDZGtFSGNTSVdkRUYvY3lBZ0lCZDJjU0FKUVFWMmFrRURhallDZkNBU0lCbHFJQmRxSUJacUN5RUpBa0FnTENBUEtBSjRJaGxQQkVBZ0R5Z0NmQ0lTSUN4TkRRRUxJQ0VFUUVFQUlRY2dIVUVCUWFuMkFFRUFFQWdNQnd0QkFDRUhJQjFCQVVHcDlnQkJBQkFJREFZTElBOGdEU0FKYXpZQzhBRWdEeUJnSUFtdGlEY0Q2QUVnQjBId0FYRWdHRUVQY1hKQi93RkIvd0VnQlVFRWFpSU5JQlZyUVFGMGRpQU5JQlZNR3lJSklBbEIxUUJ4SUI5QkFVb2JJZ2xCZjNOeEJFQWdJUVJBUVFBaEJ5QWRRUUZCdjlvQVFRQVFDQXdIQzBFQUlRY2dIVUVCUWIvYUFFRUFFQWdNQmdzQ1FBSkFJQjRFUUNBUFFjQUJhaEFUSVJjZ0R5QVBLQUxRQVNBWklBRkJFM1JCSDNWcUloWnJOZ0xRQVNBUElBOHBBOGdCSUJhdGlEY0R5QUVnRjBGL0lCWjBRWDl6Y1NBQlFRaDJRUUZ4SUJaMGNrRUJja0VDYWlBVGRDQVhRUjkwY2lFV0RBRUxRUUFoRmlBSlFRRnhSUTBCQ3lBR0lCWTJBZ0FMQWtBZ0FVRWdjUVJBSUE5QndBRnFFQk1oRnlBUElBOG9BdEFCSUJrZ0FVRVNkRUVmZFdvaUZtczJBdEFCSUE4Z0R5a0R5QUVnRnEySU53UElBU0FHSUJWQkFuUnFJQmRCZnlBV2RFRi9jM0VnQVVFSmRrRUJjU0FXZEhKQkFYSWlGa0VDYWlBVGRDQVhRUjkwY2pZQ0FDQUlRU0FnRm1kckloWWdDQzBBQUVIL0FIRWlGeUFXSUJkTEcwR0FBWEk2QUFBTUFRc2dDVUVDY1VVTkFDQUdJQlZCQW5ScVFRQTJBZ0FMSUFaQkJHb2hGd0pBQWtBZ0FVSEFBSEVFUUNBUFFjQUJhaEFUSVJnZ0R5QVBLQUxRQVNBWklBRkJFWFJCSDNWcUloWnJOZ0xRQVNBUElBOHBBOGdCSUJhdGlEY0R5QUVnR0VGL0lCWjBRWDl6Y1NBQlFRcDJRUUZ4SUJaMGNrRUJja0VDYWlBVGRDQVlRUjkwY2lFV0RBRUxRUUFoRmlBSlFRUnhSUTBCQ3lBWElCWTJBZ0FMSUFoQkFEb0FBUUpBSUFGQmdBRnhCRUFnRDBIQUFXb1FFeUVZSUE4Z0R5Z0MwQUVnR1NBQlFSQjBRUjkxYWlJV2F6WUMwQUVnRHlBUEtRUElBU0FXcllnM0E4Z0JJQmNnRlVFQ2RHb2dHRUYvSUJaMFFYOXpjU0FCUVF0MlFRRnhJQlowY2tFQmNpSUJRUUpxSUJOMElCaEJIM1J5TmdJQUlBaEJvSDhnQVdkck9nQUJEQUVMSUFsQkNIRkZEUUFnRnlBVlFRSjBha0VBTmdJQUN5QUdRUWhxSVFFQ1FBSkFJQWRCRUhFRVFDQVBRY0FCYWhBVElSa2dEeUFQS0FMUUFTQVNJQWRCRTNSQkgzVnFJaFpyTmdMUUFTQVBJQThwQThnQklCYXRpRGNEeUFFZ0dVRi9JQlowUVg5emNTQUhRUWgyUVFGeElCWjBja0VCY2tFQ2FpQVRkQ0FaUVI5MGNpRVhEQUVMUVFBaEZ5QUpRUkJ4UlEwQkN5QUJJQmMyQWdBTEFrQWdCMEVnY1FSQUlBOUJ3QUZxRUJNaEdTQVBJQThvQXRBQklCSWdCMEVTZEVFZmRXb2lGbXMyQXRBQklBOGdEeWtEeUFFZ0ZxMklOd1BJQVNBQklCVkJBblJxSUJsQmZ5QVdkRUYvYzNFZ0IwRUpka0VCY1NBV2RISkJBWElpQVVFQ2FpQVRkQ0FaUVI5MGNqWUNBQ0FJUVNBZ0FXZHJJZ0VnQ0MwQUFVSC9BSEVpRmlBQklCWkxHMEdBQVhJNkFBRU1BUXNnQ1VFZ2NVVU5BQ0FCSUJWQkFuUnFRUUEyQWdBTElBWkJER29oQVFKQUFrQWdCMEhBQUhFRVFDQVBRY0FCYWhBVElSa2dEeUFQS0FMUUFTQVNJQWRCRVhSQkgzVnFJaFpyTmdMUUFTQVBJQThwQThnQklCYXRpRGNEeUFFZ0dVRi9JQlowUVg5emNTQUhRUXAyUVFGeElCWjBja0VCY2tFQ2FpQVRkQ0FaUVI5MGNpRVhEQUVMUVFBaEZ5QUpRY0FBY1VVTkFRc2dBU0FYTmdJQUN5QUlRUUpxSWdoQkFEb0FBQUpBSUFkQmdBRnhCRUFnRDBIQUFXb1FFeUVXSUE4Z0R5Z0MwQUVnRWlBSFFSQjBRUjkxYWlJSmF6WUMwQUVnRHlBUEtRUElBU0FKcllnM0E4Z0JJQUVnRlVFQ2RHb2dGa0YvSUFsMFFYOXpjU0FIUVF0MlFRRnhJQWwwY2tFQmNpSUJRUUpxSUJOMElCWkJIM1J5TmdJQUlBaEJvSDhnQVdkck9nQUFEQUVMSUFsQmdBRkpEUUFnQVNBVlFRSjBha0VBTmdJQUN5QWlRUkJ6SVNJZ0F5QUZRUVJ4YWlFRElBWkJFR29oQmlBTklCVklEUUFMQ3lBS1FRaHhJVGdnRkVHd0RHb2hLQ0FVUWFBSWFpRXBJQlJCa0FScUlTVWdIMEVEVGdSQUlCVkJBMndoT1NBVlFRRjBJVG9nSmtFQmF5RWdRUU1nSmtFQ2F5SUJkQ0V0UVFFZ0FYUWhMaUFWUVFkcVFRRjJRZnovLy84SGNVRUVhaUU5SUNzZ0pFRi9jMm9pQVVFRGRpSURRUUowSWo1QkJHb2hPeUFEUVFGcUlqOUIvUC8vL3dOeEloeEJBblFoUENBY1FRTjBJUklnQVVFWVNTRkFRUUloR1FOQUlCa2hFeUFMTFFBQUlSWWdDMEVBT2dBQUlDSkJiM0ZCQW5NaElnSkFJQlZCQUV3RVFDQVRRUUpxSVJrTUFRc2dKU0FVSUJOQkJIRWJJUkVnRTBFQ2FpRVpJQTRnRXlBVmJFRUNkR29oQ0VFQUlRb2dDeUVHUVFBaERRTkFJQTBoQlNBR0xRQUJRUVYyUVFSeElBb2dGa0VIZG5KeUlnTkJDSFFnRDBIZ0FXb1FLa0gvQUhGQkFYUnlRYkNOQVdvdkFRQWhBUUpBSUFNTkFDQUJRUUFnQWtFQ2F5SURRWDlHR3lFQklBSkJBVW9FUUNBRElRSU1BUXNnRDBHQUFtb1FJU0VDQ3lBUEtRUG9BU0ZsSUE4b0F2QUJJVXdnRVNBUktBSUFJQUZCQkhaQkEzRWdBVUVDZGtFd2NYSWdJblJ5SWdrMkFnQWdBVUhBQUhFaUtrRUZkaUFCUVlBQmNTSW5RUVoyY2lFS0lFd2dBVUVIY1NJRGF5RVhJR1VnQTYySUltQ25JUTFCQUNFWUFrQWdGU0FGUVFKeVRBUkFRUUFoQnd3QkN5QUtJQVl0QUFKQkJYWkJCSEVnQmkwQUFVRUhkbkp5SWdOQkNIUWdEVUgvQUhGQkFYUnlRYkNOQVdvdkFRQWhCd0pBSUFNTkFDQUhRUUFnQWtFQ2F5SURRWDlHR3lFSElBSkJBVW9FUUNBRElRSU1BUXNnRDBHQUFtb1FJU0VDQ3lBSFFRVjJJQWRCQm5aeVFRSnhJUW9nRnlBSFFRZHhJZ05ySVJjZ1lDQURyWWdpWUtjaERRc2dFU0FIUVFKMFFZQUdjU0FIUVRCeGNpQWlRUVJxZENBSmNqWUNBRUVCSVFsQkFTRURBa0FnQjBFQ2RrRUNjU0FCUVFOMlFRRnhjaUllUlEwQUlBMGdEVUVIY1VIa25RRnFMUUFBSWdOQkEzRWlEWFloQ1NBZVFRTkhCRUJCQVNBSlFYOGdBMEVDZGtFSGNTSVlkRUYvYzNFZ0EwRUZkbXBCQVdvaUF5QWVRUUZHSWg0YklRa2dBMEVCSUI0YklRTWdEU0FZYWlFWURBRUxJQWxCQjNGQjVKMEJhaTBBQUNJZVFRTnhJak1nRFNBRFFRSjJRUWR4SWh0cWFpQWVRUUoyUVFkeElnMXFJUmdnQ1NBemRpSUpRWDhnRzNSQmYzTnhJQU5CQlhacVFRRnFJUU5CZnlBTmRFRi9jeUFKSUJ0MmNTQWVRUVYyYWtFQmFpRUpDeUFQSUJjZ0dHczJBdkFCSUE4Z1lDQVlyWWczQStnQklBRkI4QUZ4SWcwZ0RVRUJhM0VFUUNBRElCWkIvd0J4SWhZZ0JpMEFBVUgvQUhFaUZ5QVdJQmRMR3lJV1FRSnJJaGRCQUNBV0lCZFBHMm9oQXdzZ0IwSHdBWEVpRnlBWFFRRnJjUVJBSUFrZ0JpMEFBVUgvQUhFaUZpQUdMUUFDUWY4QWNTSVlJQllnR0VzYkloWkJBbXRCQUNBV1FRSkxHMm9oQ1FzZ0F5QXNUU0FKSUN4TmNVVUVRQ0FoQkVCQkFDRUhJQjFCQVVHTjl3QkJBQkFJREFrTFFRQWhCeUFkUVFGQmpmY0FRUUFRQ0F3SUN5QUdMUUFDSVJZZ0JrRUFPd0FCSUJjZ0RVRUVkbkpCL3dGQi93RWdCVUVFYWlJTklCVnJRUUYwZGlBTklCVk1HeUlYUWRVQWNTQVhJQmtnSDBvYkloaEJmM054QkVBZ0lRUkFRUUFoQnlBZFFRRkJ2OW9BUVFBUUNBd0pDMEVBSVFjZ0hVRUJRYi9hQUVFQUVBZ01DQXNDUUFKQUlBRkJFSEVFUUNBUFFjQUJhaEFUSVI0Z0R5QVBLQUxRQVNBRElBRkJFM1JCSDNWcUloZHJOZ0xRQVNBUElBOHBBOGdCSUJldGlEY0R5QUVnSGtGL0lCZDBRWDl6Y1NBQlFRaDJRUUZ4SUJkMGNrRUJja0VDYWlBZ2RDQWVRUjkwY2lFWERBRUxRUUFoRnlBWVFRRnhSUTBCQ3lBSUlCYzJBZ0FMQWtBZ0FVRWdjUVJBSUE5QndBRnFFQk1oSGlBUElBOG9BdEFCSUFNZ0FVRVNkRUVmZFdvaUYyczJBdEFCSUE4Z0R5a0R5QUVnRjYySU53UElBU0FJSUJWQkFuUnFJQjVCZnlBWGRFRi9jM0VnQVVFSmRrRUJjU0FYZEhKQkFYSWlGMEVDYWlBZ2RDQWVRUjkwY2pZQ0FDQUdRU0FnRjJkckloY2dCaTBBQUVIL0FIRWlIaUFYSUI1TEcwR0FBWEk2QUFBTUFRc2dHRUVDY1VVTkFDQUlJQlZCQW5ScVFRQTJBZ0FMSUFoQkJHb2hIZ0pBQWtBZ0tnUkFJQTlCd0FGcUVCTWhHeUFQSUE4b0F0QUJJQU1nQVVFUmRFRWZkV29pRjJzMkF0QUJJQThnRHlrRHlBRWdGNjJJTndQSUFTQWJRWDhnRjNSQmYzTnhJQUZCQ25aQkFYRWdGM1J5UVFGeVFRSnFJQ0IwSUJ0QkgzUnlJUmNNQVF0QkFDRVhJQmhCQkhGRkRRRUxJQjRnRnpZQ0FBc0NRQ0FuQkVBZ0QwSEFBV29RRXlFWElBOGdEeWdDMEFFZ0F5QUJRUkIwUVI5MWFpSURhellDMEFFZ0R5QVBLUVBJQVNBRHJZZzNBOGdCSUI0Z0ZVRUNkR29nRjBGL0lBTjBRWDl6Y1NBQlFRdDJRUUZ4SUFOMGNrRUJjaUlCUVFKcUlDQjBJQmRCSDNSeU5nSUFJQVpCb0g4Z0FXZHJPZ0FCREFFTElCaEJDSEZGRFFBZ0hpQVZRUUowYWtFQU5nSUFDeUFJUVFocUlRRUNRQUpBSUFkQkVIRUVRQ0FQUWNBQmFoQVRJUmNnRHlBUEtBTFFBU0FKSUFkQkUzUkJIM1ZxSWdOck5nTFFBU0FQSUE4cEE4Z0JJQU90aURjRHlBRWdGMEYvSUFOMFFYOXpjU0FIUVFoMlFRRnhJQU4wY2tFQmNrRUNhaUFnZENBWFFSOTBjaUVEREFFTFFRQWhBeUFZUVJCeFJRMEJDeUFCSUFNMkFnQUxBa0FnQjBFZ2NRUkFJQTlCd0FGcUVCTWhGeUFQSUE4b0F0QUJJQWtnQjBFU2RFRWZkV29pQTJzMkF0QUJJQThnRHlrRHlBRWdBNjJJTndQSUFTQUJJQlZCQW5ScUlCZEJmeUFEZEVGL2MzRWdCMEVKZGtFQmNTQURkSEpCQVhJaUFVRUNhaUFnZENBWFFSOTBjallDQUNBR1FTQWdBV2RySWdFZ0JpMEFBVUgvQUhFaUF5QUJJQU5MRzBHQUFYSTZBQUVNQVFzZ0dFRWdjVVVOQUNBQklCVkJBblJxUVFBMkFnQUxJQWhCREdvaEFRSkFBa0FnQjBIQUFIRUVRQ0FQUWNBQmFoQVRJUmNnRHlBUEtBTFFBU0FKSUFkQkVYUkJIM1ZxSWdOck5nTFFBU0FQSUE4cEE4Z0JJQU90aURjRHlBRWdGMEYvSUFOMFFYOXpjU0FIUVFwMlFRRnhJQU4wY2tFQmNrRUNhaUFnZENBWFFSOTBjaUVEREFFTFFRQWhBeUFZUWNBQWNVVU5BUXNnQVNBRE5nSUFDeUFHUVFKcUlRWUNRQ0FIUVlBQmNRUkFJQTlCd0FGcUVCTWhGeUFQSUE4b0F0QUJJQWtnQjBFUWRFRWZkV29pQTJzMkF0QUJJQThnRHlrRHlBRWdBNjJJTndQSUFTQUJJQlZCQW5ScUlCZEJmeUFEZEVGL2MzRWdCMEVMZGtFQmNTQURkSEpCQVhJaUFVRUNhaUFnZENBWFFSOTBjallDQUNBR1FhQi9JQUZuYXpvQUFBd0JDeUFZUVlBQlNRMEFJQUVnRlVFQ2RHcEJBRFlDQUFzZ0lrRVFjeUVpSUJFZ0JVRUVjV29oRVNBSVFSQnFJUWdnRFNBVlNBMEFDd3NDUUNBTVFRSkpEUUFnRTBFQ2NVVU5BQ0FaUVFSeElRTUNRQUovQWtBQ1FDQXhCRUFnRkNBbElBTWJJUlpCQUNFWUlCVkJBRXdOQVNBT0lCTkJBbXNnRld4QkFuUnFJUkVEUUNBUFFZQUJhaEFxSVFkQkFDRUJJQllvQWdBaUNBUkFJQkVnR0VFQ2RHb2hBVUVBSVFsQkR5RUdBMEFDUUNBR0lBaHhSUTBBSUFaQmthTEVpQUZ4SWcwZ0NIRUVRQ0FCSUFFb0FnQWdCMEYvYzBFQmNTQWdkSE1nTG5JMkFnQWdCMEVCZGlFSEN5QU5RUUYwSUFoeEJFQWdBU0FWUVFKMGFpSUZJQVVvQWdBZ0IwRi9jMEVCY1NBZ2RITWdMbkkyQWdBZ0IwRUJkaUVIQ3lBTlFRSjBJQWh4QkVBZ0FTQTZRUUowYWlJRklBVW9BZ0FnQjBGL2MwRUJjU0FnZEhNZ0xuSTJBZ0FnQjBFQmRpRUhDeUFOUVFOMElBaHhSUTBBSUFFZ09VRUNkR29pRFNBTktBSUFJQWRCZjNOQkFYRWdJSFJ6SUM1eU5nSUFJQWRCQVhZaEJ3c2dBVUVFYWlFQklBWkJCSFFoQmlBSlFRRnFJZ2xCQ0VjTkFBc2dDR2toQVFzZ0ZrRUVhaUVXSUE4Z0R5Z0NrQUVnQVdzMkFwQUJJQThnRHlrRGlBRWdBYTJJTndPSUFTQVlRUWhxSWhnZ0ZVZ05BQXNMSUNrZ0tDQURHeUVGSUJRZ0pTQURHeUVXSUFORklSZ2dGVUVBVEEwRFFRQWhBeUJBRFFFZ0JTQVdJRHRxU1NBV0lBVWdPMm9pQjBseERRRkJBQ0FGSWdFZ0ZpSUdJRDVxUVFocVNTQUdRUVJxSUFkSmNRMENHaUFHSUR4cUlRWWdBU0E4YWlFQi9Rd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUlWNUJBQ0VIQTBBZ0JTQUhRUUowSWdOcUlna2dBeUFXYWlJRC9RQUNBQ0pmUVFUOXJRRWdYMEVFL2FzQklGNGdYLzBOREEwT0R4QVJFaE1VRlJZWEdCa2FHMEVjL2EwQi9WRDlVQ0JmL1ZBaVh2MExBZ0FnQ1NCZUlBUDlBQUlFUVJ6OXF3SDlVQ0plUVFIOXJRSDlESGQzZDNkM2QzZDNkM2QzZDNkM2QzZjlUaUJlUVFIOXF3SDlETzd1N3U3dTd1N3U3dTd1N3U3dTd1NzlUdjFRSUY3OVVDQmYvVS85Q3dJQUlGOGhYaUFIUVFScUlnY2dIRWNOQUFzZ0hDQS9SZzBESUJJaEF5QmUvUnNEREFJTElBTkZJUmdnS1NBb0lBTWJJUVVNQWdzZ0JTRUJJQlloQmtFQUN5RUhBMEFnQjBFY2RpRUpJQUVnQmlnQ0FDSUhRUVIySUFrZ0IwRUVkSEp5SUFkeUlnazJBZ0FnQVNBSklBWW9BZ1JCSEhSeUlnbEJBWFpCOSs3ZHV3ZHhJQWxCQVhSQjd0Mjc5MzV4Y2lBSmNpQUhRWDl6Y1RZQ0FDQUJRUVJxSVFFZ0JrRUVhaUVHSUFOQkNHb2lBeUFWU0EwQUN3c2dFMEVHU1EwQVFRQWhDVUVBSVJFZ0ZpRUJJQ2tnS0NBWUd5SWJJUWNnRkNBbElCZ2JJaGNoQmdKQUlCVkJBRXdpRFEwQUEwQWdBVUVFYWlFRElBY29BZ0FoQ0NBQktBSUFJUUVnQnlBNEJIOGdDQVVnQVVFRWRDQVJRUngyY2lBQlFRUjJjaUFES0FJQVFSeDBjaUFCY2tFRGRFR0lrYUxFZUhFZ0NISUxJQVlvQWdCQmYzTnhOZ0lBSUFaQkJHb2hCaUFIUVFScUlRY2dBU0VSSUFNaEFTQUpRUWhxSWdrZ0ZVZ05BQXNnRFEwQUlBNGdFMEVHYXlBVmJFRUNkR29oUVVFQUlSNGdGeUVSQTBCQkFDRURJQnNvQWdBaUFRUkFJQlVnSG1zaFFrRUFJUWRCQUNFS0EwQWdCeUZOSUE5Qm9BRnFFQk1oQndKQUlBb2dDa0VFYWlJR0lFSWdCaUFlYWlBVlNCc2lNMDRpUXdSQVFRQWhCZ3dCQ3lBUktBSUFRWDl6SVNvZ1FTQUtJQjV5UVFKMGFpRVlRUUFoQmtFUElBb2lDVUVDZENKRWRDSU5JUWdEUUFKQUlBRWdDSEZGRFFBZ0NFR1Jvc1NJQVhFaUp5QUJjUVJBSUFkQkFYRUVRQ0FESUNkeUlRTkJNaUFKUVFKMGRDQXFjU0FCY2lFQkN5QUhRUUYySVFjZ0JrRUJhaUVHQ3lBQklDZEJBWFFpTkhFRVFDQUhRUUZ4QkVBZ0F5QTBjaUVESUFGQjlBQWdDVUVDZEhRZ0tuRnlJUUVMSUFkQkFYWWhCeUFHUVFGcUlRWUxJQUVnSjBFQ2RDSTBjUVJBSUFkQkFYRUVRQ0FESURSeUlRTWdBVUhvQVNBSlFRSjBkQ0FxY1hJaEFRc2dCMEVCZGlFSElBWkJBV29oQmdzZ0FTQW5RUU4wSWlkeFJRMEFJQWRCQVhFRVFDQURJQ2R5SVFNZ0FVSEFBU0FKUVFKMGRDQXFjWEloQVFzZ0JrRUJhaUVHSUFkQkFYWWhCd3NnQ0VFRWRDRUlJQWxCQVdvaUNTQXpTQTBBQ3lBRElFUjJRZi8vQTNGRkRRQWdRdzBBQTBBQ1FDQURJQTF4UlEwQUlBMUJrYUxFaUFGeElna2dBM0VFUUNBWUlCZ29BZ0FnQjBFZmRISWdMWEkyQWdBZ0IwRUJkaUVISUFaQkFXb2hCZ3NnQ1VFQmRDQURjUVJBSUJnZ0ZVRUNkR29pQ0NBSUtBSUFJQWRCSDNSeUlDMXlOZ0lBSUFkQkFYWWhCeUFHUVFGcUlRWUxJQWxCQW5RZ0EzRUVRQ0FZSURwQkFuUnFJZ2dnQ0NnQ0FDQUhRUjkwY2lBdGNqWUNBQ0FIUVFGMklRY2dCa0VCYWlFR0N5QUpRUU4wSUFOeFJRMEFJQmdnT1VFQ2RHb2lDU0FKS0FJQUlBZEJIM1J5SUMxeU5nSUFJQVpCQVdvaEJpQUhRUUYySVFjTElBMUJCSFFoRFNBWVFRUnFJUmdnQ2tFQmFpSUtJRE5JRFFBTEN5QVBJQThvQXJBQklBWnJOZ0t3QVNBUElBOHBBNmdCSUFhdGlEY0RxQUZCQVNFSFFRUWhDaUJOUVFGeFJRMEFDeUFiSUJzb0FnUWdBMEViZGtFT2NTQURRUjEyY2lBRFFSeDJjaUFSS0FJRVFYOXpjWEkyQWdRTElCRW9BZ0FnQTNJaUEwRURka0dSb3NTSUFYRWlBVUVFZGlBQlFRUjBjaUFCY2lFR0lCNEVRQ0FGUVFScklnY2dCeWdDQUNBV1FRUnJLQUlBUVg5eklBRkJISFJ4Y2pZQ0FBc2dCU0FGS0FJQUlBWWdGaWdDQUVGL2MzRnlOZ0lBSUFVZ0JTZ0NCQ0FXS0FJRVFYOXpJQU5CSDNaeGNqWUNCQ0FiUVFScUlSc2dFVUVFYWlFUklBVkJCR29oQlNBV1FRUnFJUllnSGtFSWFpSWVJQlZJRFFBTEN5QVhRUUFnUFJBT0dnc2dHU0FmU0EwQUN3c0NRQ0FNUVFKSkRRQUNRQ0FmUVFOeFFRRnJJaFpCQWtrZ01YRUVRQ0FWUVFCTURRRkJBU0FtUVFKcmRDRUNJQTRnSDBIOC8vOEhjU0FWYkVFQ2RHb2hFU0FsSUJRZ0gwRUVjUnNoQlNBbVFRRnJJUWhCQUNFS0lCVkJER3doRENBVlFRTjBJUXNEUUNBUFFZQUJhaEFxSVFkQkFDRUJJQVVvQWdBaUF3UkFJQkVnQ2tFQ2RHb2hBVUVQSVFaQkFDRUpBMEFDUUNBRElBWnhSUTBBSUFaQmthTEVpQUZ4SWcwZ0EzRUVRQ0FCSUFFb0FnQWdCMEYvYzBFQmNTQUlkSE1nQW5JMkFnQWdCMEVCZGlFSEN5QU5RUUYwSUFOeEJFQWdBU0FWUVFKMGFpSWRJQjBvQWdBZ0IwRi9jMEVCY1NBSWRITWdBbkkyQWdBZ0IwRUJkaUVIQ3lBTlFRSjBJQU54QkVBZ0FTQUxhaUlkSUIwb0FnQWdCMEYvYzBFQmNTQUlkSE1nQW5JMkFnQWdCMEVCZGlFSEN5QU5RUU4wSUFOeFJRMEFJQUVnREdvaURTQU5LQUlBSUFkQmYzTkJBWEVnQ0hSeklBSnlOZ0lBSUFkQkFYWWhCd3NnQVVFRWFpRUJJQVpCQkhRaEJpQUpRUUZxSWdsQkNFY05BQXNnQTJraEFRc2dCVUVFYWlFRklBOGdEeWdDa0FFZ0FXczJBcEFCSUE4Z0R5a0RpQUVnQWEySU53T0lBU0FLUVFocUlnb2dGVWdOQUFzTElCWkJBVXNOQUNBVlFRQk1EUUFnSlNBVUlCOUJCSEVpQVJzaENTQW9JQ2tnQVJzaEFrRUFJUU1DZndKQUlDc2dKRUYvYzJvaUFVRTRTUTBBSUFJZ0NTQUJRUUYyUWZ6Ly8vOEhjU0lHUVFScUlnZHFTU0FKSUFJZ0Iyb2lCMGx4RFFBZ0FpQUdJQWxxUVFocVNTQUpRUVJxSUFkSmNRMEFJQUZCQTNaQkFXb2lEVUg4Ly8vL0EzRWlDRUVEZENFRElBa2dDRUVDZENJQmFpRUdJQUVnQW1vaEFmME1BQUFBQUFBQUFBQUFBQUFBQUFBQUFDRmVRUUFoQndOQUlBSWdCMEVDZENJV2FpSVJJQWtnRm1vaUZ2MEFBZ0FpWDBFRS9hMEJJRjlCQlAyckFTQmVJRi85RFF3TkRnOFFFUklURkJVV0Z4Z1pHaHRCSFAydEFmMVEvVkFnWC8xUUlsNzlDd0lBSUJFZ1hpQVcvUUFDQkVFYy9hc0IvVkFpWGtFQi9hMEIvUXgzZDNkM2QzZDNkM2QzZDNkM2QzZDMvVTRnWGtFQi9hc0IvUXp1N3U3dTd1N3U3dTd1N3U3dTd1N3UvVTc5VUNCZS9WQWdYLzFQL1FzQ0FDQmZJVjRnQjBFRWFpSUhJQWhIRFFBTElBZ2dEVVlOQWlCZS9Sc0REQUVMSUFJaEFTQUpJUVpCQUFzaEJ3TkFJQWRCSEhZaENTQUJJQVlvQWdBaUIwRUVkaUFKSUFkQkJIUnljaUFIY2lJSk5nSUFJQUVnQ1NBR0tBSUVRUngwY2lJSlFRRjJRZmZ1M2JzSGNTQUpRUUYwUWU3ZHUvZCtjWElnQ1hJZ0IwRi9jM0UyQWdBZ0FVRUVhaUVCSUFaQkJHb2hCaUFEUVFocUlnTWdGVWdOQUFzTElCOGdIMEVCYWtFRGNXdEJBMnRCQUNBZlFRWktHeUlSSUI5T0RRQkJBeUFtUVFKcmRDRVpJQ3NnSkVGL2Myb2lBVUVEZGlJRFFRSjBJaXRCQkdvaEhTQURRUUZxSWdOQi9QLy8vd054SWhKQkFuUWhJU0FTUVFOMElSWWdGVUVNYkNFc0lCVkJBM1FoTFNBQlFSaEpJU1lnQXlBU1JpRWJBMEFDUUFKQUFrQUNRQUovQWtBZ0h5QVJheUlCUVFGcklnTkJBMDhFUUVGL0lSY2dBVUVGU0EwRklCVkJBRXdOQmlBbElCUWdFVUVFY1NJQkd5RUNJQ2dnS1NBQkd5RUpJRGdFUUVFQUlRWWdKZzBFSUFJZ0NTQWRha2tnQWlBZGFpQUpTM0VOQkNBQ0lDRnFJUUVnQ1NBaGFpRUhBMEFnQ1NBR1FRSjBJZ05xSWdnZ0NQMEFBZ0FnQWlBRGF2MEFBZ0Q5VC8wTEFnQWdCa0VFYWlJR0lCSkhEUUFMSUJZaEJpQWJEUVlNQlFzZ0ZDQWxJQUViSVExQkFDRURJQ1lOQVNBSklBMGdIV3BKSUEwZ0NTQWRhaUlCU1hFTkFTQUpJQTBnSzJwQkNHcEpJQTFCQkdvZ0FVbHhEUUVnQ1NBQ0lCMXFTU0FCSUFKTGNRMEJJQUlnSVdvaENDQUpJQ0ZxSVFFZ0RTQWhhaUVIL1F3QUFBQUFBQUFBQUFBQUFBQUFBQUFBSVY1QkFDRUdBMEFnQ1NBR1FRSjBJZ05xSWdVZ0F5QU5haUlNL1FBQ0FDSmZRUVQ5clFFZ1gwRUUvYXNCSUY0Z1gvME5EQTBPRHhBUkVoTVVGUllYR0JrYUcwRWMvYTBCL1ZEOVVDQU0vUUFDQkVFYy9hc0IvVkFnWC8xUVFRUDlxd0g5RElpSWlJaUlpSWlJaUlpSWlJaUlpSWo5VGlBRi9RQUNBUDFRSUFJZ0EycjlBQUlBL1UvOUN3SUFJRjhoWGlBR1FRUnFJZ1lnRWtjTkFBc2dHdzBGSUJZaEF5QmUvUnNEREFJTElBTkJBblJCN0owQmFpZ0NBQ0VYREFRTElBMGhCeUFKSVFFZ0FpRUlRUUFMSVFZRFFDQUdRUngySVFrZ0FTQUJLQUlBSUFjb0FnQWlCa0VFZGlBSklBWkJCSFJ5Y2lBSEtBSUVRUngwY2lBR2NrRURkRUdJa2FMRWVIRnlJQWdvQWdCQmYzTnhOZ0lBSUFoQkJHb2hDQ0FCUVFScUlRRWdCMEVFYWlFSElBTkJDR29pQXlBVlNBMEFDd3dDQ3lBSklRY2dBaUVCQ3dOQUlBY2dCeWdDQUNBQktBSUFRWDl6Y1RZQ0FDQUJRUVJxSVFFZ0IwRUVhaUVISUFaQkNHb2lCaUFWU0EwQUN3c2dGVUVBVEEwQUlDVWdGQ0FSUVFSeElnRWJJUW9nS0NBcElBRWJJUUlnRkNBbElBRWJJUk1nS1NBb0lBRWJJUjRnRGlBUklCVnNRUUowYWlFdVFRQWhCUU5BUVFBaEF5QUNLQUlBSUJkeElnRUVRQ0FWSUFWcklTcEJBQ0VIUVFBaERRTkFJQWNoVGlBUFFhQUJhaEFUSVFjQ1FDQU5JQTFCQkdvaUJpQXFJQVVnQm1vZ0ZVZ2JJaVJPSWljRVFFRUFJUVlNQVFzZ0Z5QUtLQUlBUVg5emNTRVlJQzRnQlNBTmNrRUNkR29oQzBFQUlRWkJEeUFOSWdsQkFuUWlISFFpSUNFSUEwQUNRQ0FCSUFoeFJRMEFJQWhCa2FMRWlBRnhJaUlnQVhFRVFDQUhRUUZ4QkVBZ0F5QWljaUVEUVRJZ0NVRUNkSFFnR0hFZ0FYSWhBUXNnQjBFQmRpRUhJQVpCQVdvaEJnc2dBU0FpUVFGMElqRnhCRUFnQjBFQmNRUkFJQU1nTVhJaEF5QUJRZlFBSUFsQkFuUjBJQmh4Y2lFQkN5QUhRUUYySVFjZ0JrRUJhaUVHQ3lBQklDSkJBblFpTVhFRVFDQUhRUUZ4QkVBZ0F5QXhjaUVESUFGQjZBRWdDVUVDZEhRZ0dIRnlJUUVMSUFkQkFYWWhCeUFHUVFGcUlRWUxJQUVnSWtFRGRDSWljVVVOQUNBSFFRRnhCRUFnQXlBaWNpRURJQUZCd0FFZ0NVRUNkSFFnR0hGeUlRRUxJQVpCQVdvaEJpQUhRUUYySVFjTElBaEJCSFFoQ0NBSlFRRnFJZ2tnSkVnTkFBc2dBeUFjZGtILy93TnhSUTBBSUNjTkFBTkFBa0FnQXlBZ2NVVU5BQ0FnUVpHaXhJZ0JjU0lKSUFOeEJFQWdDeUFMS0FJQUlBZEJIM1J5SUJseU5nSUFJQWRCQVhZaEJ5QUdRUUZxSVFZTElBbEJBWFFnQTNFRVFDQUxJQlZCQW5ScUlnZ2dDQ2dDQUNBSFFSOTBjaUFaY2pZQ0FDQUhRUUYySVFjZ0JrRUJhaUVHQ3lBSlFRSjBJQU54QkVBZ0N5QXRhaUlJSUFnb0FnQWdCMEVmZEhJZ0dYSTJBZ0FnQjBFQmRpRUhJQVpCQVdvaEJnc2dDVUVEZENBRGNVVU5BQ0FMSUN4cUlna2dDU2dDQUNBSFFSOTBjaUFaY2pZQ0FDQUdRUUZxSVFZZ0IwRUJkaUVIQ3lBZ1FRUjBJU0FnQzBFRWFpRUxJQTFCQVdvaURTQWtTQTBBQ3dzZ0R5QVBLQUt3QVNBR2F6WUNzQUVnRHlBUEtRT29BU0FHcllnM0E2Z0JRUUVoQjBFRUlRMGdUa0VCY1VVTkFBc2dBaUFDS0FJRUlBTkJHM1pCRG5FZ0EwRWRkbklnQTBFY2RuSWdDaWdDQkVGL2MzRnlOZ0lFQ3lBS0tBSUFJQU55SWdOQkEzWkJrYUxFaUFGeElnRkJCSFlnQVVFRWRISWdBWEloQmlBRkJFQWdIa0VFYXlJSElBY29BZ0FnRTBFRWF5Z0NBRUYvY3lBQlFSeDBjWEkyQWdBTElCNGdIaWdDQUNBR0lCTW9BZ0JCZjNOeGNqWUNBQ0FlSUI0b0FnUWdFeWdDQkVGL2N5QURRUjkyY1hJMkFnUWdBa0VFYWlFQ0lBcEJCR29oQ2lBZVFRUnFJUjRnRTBFRWFpRVRJQVZCQ0dvaUJTQVZTQTBBQ3dzZ0VVRUVhaUlSSUI5SURRQUxDMEVCSVFjZ0gwRUFUQTBESUJWQkFFd05BeUFWUWZ6Ly8vOEhjU0lHUVFKMElRSWdGVUVFU1NFSVFRQWhDUU5BSUE0Z0NTQVZiRUVDZEdvaEF3SkFBa0FnQ0FSQUlBTWhCMEVBSVFFTUFRc2dBaUFEYWlFSFFRQWhBUU5BSUFNZ0FVRUNkR29pRFNBTi9RQUNBQ0plL1F6Ly8vOS8vLy8vZi8vLy8zLy8vLzkvL1U0aVgvMmhBU0JmSUY3OURBQUFBQUFBQUFBQUFBQUFBQUFBQUFEOU9mMVMvUXNDQUNBQlFRUnFJZ0VnQmtjTkFBc2dCaUlCSUJWR0RRRUxBMEFnQjBFQUlBY29BZ0FpQTBILy8vLy9CM0VpRFdzZ0RTQURRUUJJR3pZQ0FDQUhRUVJxSVFjZ0FVRUJhaUlCSUJWSERRQUxDMEVCSVFjZ0NVRUJhaUlKSUI5SERRQUxEQU1MSUNGRkRRQWdEeUFhS0FJWU5nSTBJQThnRmpZQ01DQWRRUUZCM2NZQUlBOUJNR29RQ0F3QkN5QVBJQUUyQWhRZ0R5QVdOZ0lRSUIxQkFVSGR4Z0FnRDBFUWFoQUlRUUFoQnd3QkMwRUFJUWNMSUE5QnNBSnFKQUFnQncwQkRBTUxJQVFnQVVFSmRFSGdxUUZxTmdKc0FuOGdCQ2dDZENFQkFrQUNRQ0FhS0FJUUlCb29BZ2hySWdVZ0dpZ0NGQ0FhS0FJTWF5SUpiQ0lESUFRb0FvUUJTd1JBSUFFUUNTQUVJQU5CQW5RUUZpSUJOZ0owUVFBZ0FVVU5BeG9nQkNBRE5nS0VBUXdCQ3lBQlJRMEJDeUFCUVFBZ0EwRUNkQkFPR2dzZ0JDZ0NlQ0VCQWtBZ0JVRUNhaUlHSUFsQkEycEJBbllpREVFQ2Ftd2lBeUFFS0FLSUFVMEVRQ0FEUVFKMElRZ01BUXNnQVJBSklBUWdBMEVDZENJSUVCWWlBVFlDZUNBQkRRQkJBQXdCQ3lBRUlBTTJBb2dCSUFGQkFDQUlFQTRhQWtBZ0JrVU5BQ0FFS0FKNElnY2hBUUpBSUFaQkJFOEVRQ0FISUFaQmZIRWlEVUVDZEdvaEFVRUFJUWdEUUNBSElBaEJBblJxL1F3QUFDQkpBQUFnU1FBQUlFa0FBQ0JKL1FzQ0FDQUlRUVJxSWdnZ0RVY05BQXNnQmlBTlJnMEJDd05BSUFGQmdJQ0F5UVEyQWdBZ0FVRUVhaUVCSUExQkFXb2lEU0FHUncwQUN3c2dCeUFNUVFGcUlBWnNRUUowYWlFRFFRQWhEUUpBQWtBZ0JrRUVTUVJBSUFNaEFRd0JDeUFESUFaQmZIRWlEVUVDZEdvaEFVRUFJUWdEUUNBRElBaEJBblJxL1F3QUFDQkpBQUFnU1FBQUlFa0FBQ0JKL1FzQ0FDQUlRUVJxSWdnZ0RVY05BQXNnQmlBTlJnMEJDd05BSUFGQmdJQ0F5UVEyQWdBZ0FVRUVhaUVCSUExQkFXb2lEU0FHUncwQUN3c2dDVUVEY1NJQlJRMEFJQVpGRFFCQmdJQ0F5QVJCZ0lDQXdBUkJnSUNBZ0FRZ0FVRUNSaHNnQVVFQlJoc2hDeUFISUFZZ0RHeEJBblJxSVFOQkFDRU5Ba0FnQmtFRVNRUkFJQU1oQVF3QkN5QURJQVpCZkhFaURVRUNkR29oQVNBTC9SRWhYMEVBSVFnRFFDQURJQWhCQW5ScUlGLzlDd0lBSUFoQkJHb2lDQ0FOUncwQUN5QUdJQTFHRFFFTEEwQWdBU0FMTmdJQUlBRkJCR29oQVNBTlFRRnFJZzBnQmtjTkFBc0xJQVFnQ1RZQ2dBRWdCQ0FGTmdKOFFRRUxSUTBDSUJvb0Fod2dFV29pR1VFZlRnUkFJQ0ZGRFFJZ0l5QVpOZ0lRSUIxQkFrSFd3QUFnSTBFUWFoQUlEQU1MSUFRUVUwRUFJUUVnQkVIQXFRRTJBbVFnQkVIZ25nRTJBbUFnQkVHQW53RTJBaHdDUUFKQUFrQUNRQ0FhS0FJMElnZEJBVXNOQUNBRUtBS1FBVVVOQWlBSERRQU1BUXNnR2lnQ0JDRURJQWRCQkU4RVFDQUhRWHh4SVFKQkFDRUdBMEFnQXlBR1FRTjBhaUlCUVJ4cUlBRkJGR29nQVVFTWFpQUIvUWtDQlAxV0FnQUIvVllDQUFMOVZnSUFBeUJlL2E0QklWNGdCa0VFYWlJR0lBSkhEUUFMSUY0Z1hpQmUvUTBJQ1FvTERBME9Ed0FCQWdNQUFRSUQvYTRCSWw0Z1hpQmUvUTBFQlFZSEFBRUNBd0FCQWdNQUFRSUQvYTRCL1JzQUlRRWdBaUFIUmcwQkN3TkFJQU1nQWtFRGRHb29BZ1FnQVdvaEFTQUNRUUZxSWdJZ0IwY05BQXNMSUFGQkFtb2lBeUFFS0FLWUFVc0VRQ0FFS0FLVUFTQURFQkFpQmtVTkJTQUVJQVkyQXBRQklBRWdCbXBCQURzQUFDQUVJQU0yQXBnQklCb29BalFoQndzZ0JDZ0NsQUVoSGlBSFJRMEJJQm9vQWdRaEJrRUFJUUpCQUNFQkEwQWdBaUFlYWlBR0lBRkJBM1FpQTJvaUJpZ0NBQ0FHS0FJRUVBc2FJQm9vQWdRaUJpQURhaWdDQkNBQ2FpRUNJQUZCQVdvaUFTQWFLQUkwU1EwQUN3d0JDeUFIUVFGSERRRWdHaWdDQkNnQ0FDRWVDeUFhS0FJOElnRUVRQ0FFS0FKMElTd2dCQ0FCTmdKMEN5QWFLQUlzQkVBZ0ZrRUljU0VsSUFSQkhHb2hEeUFXUVFGeElTMGdGa0VDY1VVaExrRUNJUjhEUUNBZUlDaHFJUUVnR2lnQ0FDQXBRUmhzYWlJZ0tBSUFJUU1DUUNBdElCOUJBa2tnR1NBYUtBSWNRUVJyVEhGeElpSUVRQ0FFSUFFMkFoUWdCQ0FCSUFOcUlnTTJBaGdnQkNBREx3QUFPd0Z3SUFOQi93RTZBQUFnQkNnQ0dFSC9BVG9BQVNBRVFRQTJBZ2dnQkVFQU5nSUFJQVFnQVRZQ0VBd0JDeUFFSUFFMkFoUWdCQ0FCSUFOcUlnWTJBaGdnQkNBR0x3QUFPd0Z3SUFaQi93RTZBQUFnQkNnQ0dFSC9BVG9BQVNBRUlBUkJIR28yQW1nZ0JDQUJOZ0lRSUFSQkFEWUNEQ0FFSUFNRWZ5QUJMUUFBUVJCMEJVR0FnUHdIQ3lJRE5nSUFRUUVoQmlBQlFRRnFJUWtnQVMwQUFTRUhBbjhnQVMwQUFFSC9BVVlFUUNBSFFaQUJUd1JBSUFSQkFUWUNEQ0FEUVlEK0EzSU1BZ3NnQkNBSk5nSVFRUUFoQmlBSFFRbDBJQU5xREFFTElBUWdDVFlDRUNBSFFRaDBJQU55Q3lFQklBUWdCallDQ0NBRVFZQ0FBallDQkNBRUlBRkJCM1EyQWdBTElDQW9BZ0FoS2dKQUlCbEJBRXdOQUNBZ0tBSUlSUTBBSUNJZ0xuSWhKMEVBSVNZRFFBSkFBa0FDUUFKQUFrQWdIMEVCYXc0Q0FRSUFDeUFpQkVCQkFTQVpkQ0lCUVFGMklBRnlJUkVnQkNnQ2ZDSUZRUUowSWcwZ0JDZ0NlR3BCREdvaEFTQUVLQUowSVFaQkFDRUlJQVFvQW9BQklnTkJCRThFUUNBRlJRMEZJQVZCQTJ3aEFpQUZRUUYwSVF4QkFDQVJheUVKQTBBZ0RFRUNkQ0VMUVFBaEF3TkFBa0FnQVNJSEtBSUFJZ0ZGRFFBQ1FDQUJRWkNBZ0FGeERRQWdBVUh2QTNGRkRRQWdCQ2dDQUNFQkFrQWdCQ2dDQ0NJUURRQWdBVUgvQVVZaENpQUVLQUlRSWhBdEFBQWhBUUpBSUFwRkJFQWdCQ0FCTmdJQUlBUWdFRUVCYWpZQ0VBd0JDeUFCUVk4QlRRUkFJQVFnQVRZQ0FDQUVJQkJCQVdvMkFoQkJCeUVRREFJTFFmOEJJUUVnQkVIL0FUWUNBQXRCQ0NFUUN5QUVJQkJCQVdzaUVEWUNDQUpBSUFFZ0VIWkJBWEZGRFFBQ1FDQVFEUUFnQVVIL0FVWWhDaUFFS0FJUUloQXRBQUFoQVFKQUlBcEZCRUFnQkNBQk5nSUFJQVFnRUVFQmFqWUNFQXdCQ3lBQlFZOEJUUVJBSUFRZ0FUWUNBQ0FFSUJCQkFXbzJBaEJCQnlFUURBSUxRZjhCSVFFZ0JFSC9BVFlDQUF0QkNDRVFDeUFFSUJCQkFXc2lFRFlDQ0NBR0lBa2dFU0FCSUJCMlFRRnhJaEFiTmdJQUlBUW9BbndoQVNBSFFRUnJJZ29nQ2lnQ0FFRWdjallDQUNBSElBY29BZ1JCQ0hJMkFnUWdCeUFIS0FJQUlCQkJFM1J5UVJCeU5nSUFJQ1VOQUNBSFFYNGdBV3RCQW5ScUlnRWdBU2dDQkVHQWdBSnlOZ0lFSUFFZ0FTZ0NBQ0FRUVI5MGNrR0FnQVJ5TmdJQUlBRkJCR3NpQVNBQktBSUFRWUNBQ0hJMkFnQUxJQWNnQnlnQ0FFR0FnSUFCY2lJQk5nSUFDd0pBSUFGQmdJR0FDSEVOQUNBQlFmZ2VjVVVOQUNBRUtBSUFJUUVDUUNBRUtBSUlJaEFOQUNBQlFmOEJSaUVLSUFRb0FoQWlFQzBBQUNFQkFrQWdDa1VFUUNBRUlBRTJBZ0FnQkNBUVFRRnFOZ0lRREFFTElBRkJqd0ZOQkVBZ0JDQUJOZ0lBSUFRZ0VFRUJhallDRUVFSElSQU1BZ3RCL3dFaEFTQUVRZjhCTmdJQUMwRUlJUkFMSUFRZ0VFRUJheUlRTmdJSUlBY0NmeUFCSUJCMlFRRnhSUVJBSUFjb0FnQU1BUXNDUUNBUURRQWdBVUgvQVVZaENpQUVLQUlRSWhBdEFBQWhBUUpBSUFwRkJFQWdCQ0FCTmdJQUlBUWdFRUVCYWpZQ0VBd0JDeUFCUVk4QlRRUkFJQVFnQVRZQ0FDQUVJQkJCQVdvMkFoQkJCeUVRREFJTFFmOEJJUUVnQkVIL0FUWUNBQXRCQ0NFUUN5QUVJQkJCQVdzaUVEWUNDQ0FHSUExcUlBa2dFU0FCSUJCMlFRRnhJZ0ViTmdJQUlBZEJCR3NpRUNBUUtBSUFRWUFDY2pZQ0FDQUhJQWNvQWdSQndBQnlOZ0lFSUFjb0FnQWdBVUVXZEhKQmdBRnlDMEdBZ0lBSWNpSUJOZ0lBQ3dKQUlBRkJnSWlBd0FCeERRQWdBVUhBOXdGeFJRMEFJQVFvQWdBaEFRSkFJQVFvQWdnaUVBMEFJQUZCL3dGR0lRb2dCQ2dDRUNJUUxRQUFJUUVDUUNBS1JRUkFJQVFnQVRZQ0FDQUVJQkJCQVdvMkFoQU1BUXNnQVVHUEFVMEVRQ0FFSUFFMkFnQWdCQ0FRUVFGcU5nSVFRUWNoRUF3Q0MwSC9BU0VCSUFSQi93RTJBZ0FMUVFnaEVBc2dCQ0FRUVFGckloQTJBZ2dnQndKL0lBRWdFSFpCQVhGRkJFQWdCeWdDQUF3QkN3SkFJQkFOQUNBQlFmOEJSaUVLSUFRb0FoQWlFQzBBQUNFQkFrQWdDa1VFUUNBRUlBRTJBZ0FnQkNBUVFRRnFOZ0lRREFFTElBRkJqd0ZOQkVBZ0JDQUJOZ0lBSUFRZ0VFRUJhallDRUVFSElSQU1BZ3RCL3dFaEFTQUVRZjhCTmdJQUMwRUlJUkFMSUFRZ0VFRUJheUlRTmdJSUlBWWdDMm9nQ1NBUklBRWdFSFpCQVhFaUFSczJBZ0FnQjBFRWF5SVFJQkFvQWdCQmdCQnlOZ0lBSUFjZ0J5Z0NCRUdBQkhJMkFnUWdCeWdDQUNBQlFSbDBja0dBQ0hJTFFZQ0FnTUFBY2lJQk5nSUFDeUFCUVlEQWdJQUVjUTBBSUFGQmdMd1BjVVVOQUNBRUtBSUFJUUVDUUNBRUtBSUlJaEFOQUNBQlFmOEJSaUVLSUFRb0FoQWlFQzBBQUNFQkFrQWdDa1VFUUNBRUlBRTJBZ0FnQkNBUVFRRnFOZ0lRREFFTElBRkJqd0ZOQkVBZ0JDQUJOZ0lBSUFRZ0VFRUJhallDRUVFSElSQU1BZ3RCL3dFaEFTQUVRZjhCTmdJQUMwRUlJUkFMSUFRZ0VFRUJheUlRTmdJSUlBRWdFSFpCQVhFRVFDQUdJQUpCQW5ScUlVOENRQ0FRRFFBZ0FVSC9BVVloRkNBRUtBSVFJaEF0QUFBaEFRSkFJQlJGQkVBZ0JDQUJOZ0lBSUFRZ0VFRUJhallDRUF3QkN5QUJRWThCVFFSQUlBUWdBVFlDQUNBRUlCQkJBV28yQWhCQkJ5RVFEQUlMUWY4QklRRWdCRUgvQVRZQ0FBdEJDQ0VRQ3lBRUlCQkJBV3NpRURZQ0NDQlBJQWtnRVNBQklCQjJRUUZ4SWhBYk5nSUFJQVFvQW53aEFTQUhRUVJySWdvZ0NpZ0NBRUdBZ0FGeU5nSUFJQWNnQnlnQ0JFR0FJSEkyQWdRZ0J5QUhLQUlBSUJCQkhIUnlRWURBQUhJMkFnQWdCeUFCUVFKMGFpSUJJQUVvQWdSQkJISTJBZ1FnQVNBQktBSU1RUUZ5TmdJTUlBRWdBU2dDQ0NBUVFSSjBja0VDY2pZQ0NBc2dCeUFIS0FJQVFZQ0FnSUFFY2pZQ0FBc2dCa0VFYWlFR0lBZEJCR29oQVNBRFFRRnFJZ01nQlVjTkFBc2dCMEVNYWlFQklBWWdBa0VDZEdvaEJpQUlRUVJxSWdnZ0JDZ0NnQUVpQTBGOGNVa05BQXNMSUFNZ0NFME5BeUFGUlEwRFFRQWhFMEVBSUJGcklRc2dBeUVRQTBBQ1FDQUlJQkJHQkVBZ0NDRVFEQUVMSUFGQkJHc2hEQ0FCS0FJQUlRMUJBQ0VDQTBBQ1FDQU5JQUpCQTJ3aUIzWWlDVUdRZ0lBQmNRMEFJQWxCN3dOeFJRMEFJQVFvQWdBaEF3SkFJQVFvQWdnaUNRMEFJQU5CL3dGSElSQWdCQ2dDRUNJSkxRQUFJUU1DUUNBUVJRUkFJQU5Ca0FGUEJFQkIvd0VoQXlBRVFmOEJOZ0lBREFJTElBUWdBellDQUNBRUlBbEJBV28yQWhCQkJ5RUpEQUlMSUFRZ0F6WUNBQ0FFSUFsQkFXbzJBaEFMUVFnaENRc2dCQ0FKUVFGcklnazJBZ2dDUUNBRElBbDJRUUZ4UlEwQUlBWWdBaUFGYkVFQ2RHb2hVQUpBSUFrTkFDQURRZjhCUnlFTklBUW9BaEFpQ1MwQUFDRURBa0FnRFVVRVFDQURRWkFCVHdSQVFmOEJJUU1nQkVIL0FUWUNBQXdDQ3lBRUlBTTJBZ0FnQkNBSlFRRnFOZ0lRUVFjaENRd0NDeUFFSUFNMkFnQWdCQ0FKUVFGcU5nSVFDMEVJSVFrTElBUWdDVUVCYXlJSk5nSUlJRkFnQ3lBUklBTWdDWFpCQVhFaUNSczJBZ0FnQkNnQ2ZDRVFJQXdnRENnQ0FFRWdJQWQwY2pZQ0FDQUJJQUVvQWdBZ0NVRVRkRUVRY2lBSGRISTJBZ0FnQVNBQktBSUVRUWdnQjNSeU5nSUVJQUlnSlhKRkJFQWdBVUYrSUJCclFRSjBhaUlESUFNb0FnUkJnSUFDY2pZQ0JDQURJQU1vQWdBZ0NVRWZkSEpCZ0lBRWNqWUNBQ0FEUVFScklnTWdBeWdDQUVHQWdBaHlOZ0lBQ3lBQ1FRTkhEUUFnQVNBUVFRSjBhaUlESUFNb0FnUkJCSEkyQWdRZ0F5QURLQUlNUVFGeU5nSU1JQU1nQXlnQ0NDQUpRUkowY2tFQ2NqWUNDQXNnQVNBQktBSUFRWUNBZ0FFZ0IzUnlJZzAyQWdBZ0JDZ0NnQUVoQXdzZ0F5RVFJQUpCQVdvaUFpQURJQWhyU1EwQUN3c2dCa0VFYWlFR0lBRkJCR29oQVNBVFFRRnFJaE1nQlVjTkFBc01Bd3RCQUNFSFFRQWhEVUVBSVJjQ1FBSkFBa0FDUUNBRUtBSjhJaEJCd0FCSERRQWdCQ2dDZ0FGQndBQkhEUUJCQUVFQklCbDBJZ0ZCQVhZZ0FYSWlFV3NoQlNBRVFSeHFJUkFnQkNnQ2VFR01BbW9oQmlBRUtBSUlJUWdnQkNnQ0JDRURJQVFvQWdBaEFpQUVLQUpvSVF3Z0JDZ0NkQ0VCSUJaQkNIRU5BUU5BUVFBaEZ3TkFJQUVoQ1NBR0lnY29BZ0FpQmdSQUFrQWdCa0dRZ0lBQmNRMEFJQVpCN3dOeElnRkZEUUFnQXlBUUlBUW9BbXdnQVdvdEFBQkJBblJxSWd3b0FnQWlDeWdDQUNJQmF5RURBbjhnQVNBQ1FSQjJTd1JBSUFzb0FnUWhDaUFNSUF0QkNFRU1JQUVnQTBzaUZCdHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRc2dDQzBBQVNFRElBZ3RBQUJCL3dGR0JFQWdBMEdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSURBSUxJQVFnQ3pZQ0VDQURRUWwwSUFKcUlRSkJCeUVJREFFTElBUWdDellDRUVFSUlRZ2dBMEVJZENBQ2FpRUNDeUFJUVFGcklRZ2dBa0VCZENFQ0lBRkJBWFFpQVVHQWdBSkpEUUFMSUFFaEF5QUtJQXBGSUJRYkRBRUxJQUlnQVVFUWRHc2hBaUFEUVlDQUFuRkZCRUFnQ3lnQ0JDRUtJQXdnQzBFTVFRZ2dBU0FEU3lJVUcyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaEN5QUlMUUFCSVFFZ0NDMEFBRUgvQVVZRVFDQUJRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFnTUFnc2dCQ0FMTmdJUUlBRkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUxOZ0lRUVFnaENDQUJRUWgwSUFKcUlRSUxJQWhCQVdzaENDQUNRUUYwSVFJZ0EwRUJkQ0lEUVlDQUFra05BQXNnQ2tVZ0NpQVVHd3dCQ3lBTEtBSUVDd1IvSUFNZ0VDQUhLQUlFUVJGMlFRUnhJQWRCQkdzaUNpZ0NBRUVUZGtFQmNTQUdRUTUyUVJCeElBWkJFSFpCd0FCeElBWkJxZ0Z4Y25KeWNpSVVRZUM1QVdvdEFBQkJBblJxSWd3b0FnQWlDeWdDQUNJQmF5RURJQlJCNExzQmFpMEFBQ0VUSUFrZ0JTQVJBbjhnQVNBQ1FSQjJTd1JBSUFzb0FnUWhGQ0FNSUF0QkNFRU1JQUVnQTBzaURodHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRc2dDQzBBQVNFRElBZ3RBQUJCL3dGR0JFQWdBMEdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSURBSUxJQVFnQ3pZQ0VDQURRUWwwSUFKcUlRSkJCeUVJREFFTElBUWdDellDRUVFSUlRZ2dBMEVJZENBQ2FpRUNDeUFJUVFGcklRZ2dBa0VCZENFQ0lBRkJBWFFpQVVHQWdBSkpEUUFMSUFFaEF5QVVJQlJGSUE0YkRBRUxJQUlnQVVFUWRHc2hBaUFEUVlDQUFuRkZCRUFnQ3lnQ0JDRVVJQXdnQzBFTVFRZ2dBU0FEU3lJT0cyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaEN5QUlMUUFCSVFFZ0NDMEFBRUgvQVVZRVFDQUJRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFnTUFnc2dCQ0FMTmdJUUlBRkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUxOZ0lRUVFnaENDQUJRUWgwSUFKcUlRSUxJQWhCQVdzaENDQUNRUUYwSVFJZ0EwRUJkQ0lEUVlDQUFra05BQXNnRkVVZ0ZDQU9Hd3dCQ3lBTEtBSUVDeUFUY3lJQkd6WUNBQ0FLSUFvb0FnQkJJSEkyQWdBZ0J5QUhLQUlFUVFoeU5nSUVJQWRCakFKcklnc2dDeWdDQUVHQWdBaHlOZ0lBSUFkQmhBSnJJZ3NnQ3lnQ0FFR0FnQUp5TmdJQUlBZEJpQUpySWdzZ0N5Z0NBQ0FCUVI5MGNrR0FnQVJ5TmdJQUlBWWdBVUVUZEhKQkVISUZJQVlMUVlDQWdBRnlJUVlMQWtBZ0JrR0FnWUFJY1EwQUlBWkIrQjV4UlEwQUlBTWdFQ0FFS0FKc0lBWkJBM1lpRkVIdkEzRnFMUUFBUVFKMGFpSU1LQUlBSWdzb0FnQWlBV3NoQXdKL0lBRWdBa0VRZGtzRVFDQUxLQUlFSVFvZ0RDQUxRUWhCRENBQklBTkxJaE1iYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVMSUFndEFBRWhBeUFJTFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hDQXdDQ3lBRUlBczJBaEFnQTBFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFzMkFoQkJDQ0VJSUFOQkNIUWdBbW9oQWdzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nQ2lBS1JTQVRHd3dCQ3lBQ0lBRkJFSFJySVFJZ0EwR0FnQUp4UlFSQUlBc29BZ1FoQ2lBTUlBdEJERUVJSUFFZ0Ewc2lFeHRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUXNnQ0MwQUFTRUJJQWd0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlEQUlMSUFRZ0N6WUNFQ0FCUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQ3pZQ0VFRUlJUWdnQVVFSWRDQUNhaUVDQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElBcEZJQW9nRXhzTUFRc2dDeWdDQkFzRWZ5QURJQkFnQnlnQ0JFRVVka0VFY1NBSFFRUnJJZ29vQWdCQkZuWkJBWEVnQmtFUGRrRVFjU0FHUVJOMlFjQUFjU0FVUWFvQmNYSnljbklpRkVIZ3VRRnFMUUFBUVFKMGFpSU1LQUlBSWdzb0FnQWlBV3NoQXlBVVFlQzdBV290QUFBaEV5QUpJQVVnRVFKL0lBRWdBa0VRZGtzRVFDQUxLQUlFSVJRZ0RDQUxRUWhCRENBQklBTkxJZzRiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVMSUFndEFBRWhBeUFJTFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hDQXdDQ3lBRUlBczJBaEFnQTBFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFzMkFoQkJDQ0VJSUFOQkNIUWdBbW9oQWdzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nRkNBVVJTQU9Hd3dCQ3lBQ0lBRkJFSFJySVFJZ0EwR0FnQUp4UlFSQUlBc29BZ1FoRkNBTUlBdEJERUVJSUFFZ0Ewc2lEaHRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUXNnQ0MwQUFTRUJJQWd0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlEQUlMSUFRZ0N6WUNFQ0FCUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQ3pZQ0VFRUlJUWdnQVVFSWRDQUNhaUVDQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElCUkZJQlFnRGhzTUFRc2dDeWdDQkFzZ0UzTWlBUnMyQW9BQ0lBb2dDaWdDQUVHQUFuSTJBZ0FnQnlBSEtBSUVRY0FBY2pZQ0JDQUdJQUZCRm5SeVFZQUJjZ1VnQmd0QmdJQ0FDSEloQmdzQ1FDQUdRWUNJZ01BQWNRMEFJQVpCd1BjQmNVVU5BQ0FESUJBZ0JDZ0NiQ0FHUVFaMkloUkI3d054YWkwQUFFRUNkR29pRENnQ0FDSUxLQUlBSWdGcklRTUNmeUFCSUFKQkVIWkxCRUFnQ3lnQ0JDRUtJQXdnQzBFSVFRd2dBU0FEU3lJVEcyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaEN5QUlMUUFCSVFNZ0NDMEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFnTUFnc2dCQ0FMTmdJUUlBTkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUxOZ0lRUVFnaENDQURRUWgwSUFKcUlRSUxJQWhCQVdzaENDQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQVNFRElBb2dDa1VnRXhzTUFRc2dBaUFCUVJCMGF5RUNJQU5CZ0lBQ2NVVUVRQ0FMS0FJRUlRb2dEQ0FMUVF4QkNDQUJJQU5MSWhNYmFpZ0NBRFlDQUFOQUFrQWdDQTBBSUFRb0FoQWlDRUVCYWlFTElBZ3RBQUVoQVNBSUxRQUFRZjhCUmdSQUlBRkJrQUZQQkVBZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0F3Q0N5QUVJQXMyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hDQXdCQ3lBRUlBczJBaEJCQ0NFSUlBRkJDSFFnQW1vaEFnc2dDRUVCYXlFSUlBSkJBWFFoQWlBRFFRRjBJZ05CZ0lBQ1NRMEFDeUFLUlNBS0lCTWJEQUVMSUFzb0FnUUxCSDhnQXlBUUlBY29BZ1JCRjNaQkJIRWdCMEVFYXlJS0tBSUFRUmwyUVFGeElBWkJFblpCRUhFZ0JrRVdka0hBQUhFZ0ZFR3FBWEZ5Y25KeUloUkI0TGtCYWkwQUFFRUNkR29pRENnQ0FDSUxLQUlBSWdGcklRTWdGRUhndXdGcUxRQUFJUk1nQ1NBRklCRUNmeUFCSUFKQkVIWkxCRUFnQ3lnQ0JDRVVJQXdnQzBFSVFRd2dBU0FEU3lJT0cyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaEN5QUlMUUFCSVFNZ0NDMEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFnTUFnc2dCQ0FMTmdJUUlBTkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUxOZ0lRUVFnaENDQURRUWgwSUFKcUlRSUxJQWhCQVdzaENDQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQVNFRElCUWdGRVVnRGhzTUFRc2dBaUFCUVJCMGF5RUNJQU5CZ0lBQ2NVVUVRQ0FMS0FJRUlSUWdEQ0FMUVF4QkNDQUJJQU5MSWc0YmFpZ0NBRFlDQUFOQUFrQWdDQTBBSUFRb0FoQWlDRUVCYWlFTElBZ3RBQUVoQVNBSUxRQUFRZjhCUmdSQUlBRkJrQUZQQkVBZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0F3Q0N5QUVJQXMyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hDQXdCQ3lBRUlBczJBaEJCQ0NFSUlBRkJDSFFnQW1vaEFnc2dDRUVCYXlFSUlBSkJBWFFoQWlBRFFRRjBJZ05CZ0lBQ1NRMEFDeUFVUlNBVUlBNGJEQUVMSUFzb0FnUUxJQk56SWdFYk5nS0FCQ0FLSUFvb0FnQkJnQkJ5TmdJQUlBY2dCeWdDQkVHQUJISTJBZ1FnQmlBQlFSbDBja0dBQ0hJRklBWUxRWUNBZ01BQWNpRUdDd0pBSUFaQmdNQ0FnQVJ4RFFBZ0JrR0F2QTl4UlEwQUlBTWdFQ0FFS0FKc0lBWkJDWFlpRkVIdkEzRnFMUUFBUVFKMGFpSU1LQUlBSWdzb0FnQWlBV3NoQXdKL0lBRWdBa0VRZGtzRVFDQUxLQUlFSVFvZ0RDQUxRUWhCRENBQklBTkxJaE1iYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVMSUFndEFBRWhBeUFJTFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hDQXdDQ3lBRUlBczJBaEFnQTBFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFzMkFoQkJDQ0VJSUFOQkNIUWdBbW9oQWdzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nQ2lBS1JTQVRHd3dCQ3lBQ0lBRkJFSFJySVFJZ0EwR0FnQUp4UlFSQUlBc29BZ1FoQ2lBTUlBdEJERUVJSUFFZ0Ewc2lFeHRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUXNnQ0MwQUFTRUJJQWd0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlEQUlMSUFRZ0N6WUNFQ0FCUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQ3pZQ0VFRUlJUWdnQVVFSWRDQUNhaUVDQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElBcEZJQW9nRXhzTUFRc2dDeWdDQkFzRWZ5QURJQkFnQnlnQ0JFRWFka0VFY1NBSFFRUnJJZ29vQWdCQkhIWkJBWEVnQmtFVmRrRVFjU0FHUVJsMlFjQUFjU0FVUWFvQmNYSnljbklpRkVIZ3VRRnFMUUFBUVFKMGFpSU1LQUlBSWdzb0FnQWlBV3NoQXlBVVFlQzdBV290QUFBaEV5QUpJQVVnRVFKL0lBRWdBa0VRZGtzRVFDQUxLQUlFSVJRZ0RDQUxRUWhCRENBQklBTkxJZzRiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVMSUFndEFBRWhBeUFJTFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hDQXdDQ3lBRUlBczJBaEFnQTBFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFzMkFoQkJDQ0VJSUFOQkNIUWdBbW9oQWdzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nRkNBVVJTQU9Hd3dCQ3lBQ0lBRkJFSFJySVFJZ0EwR0FnQUp4UlFSQUlBc29BZ1FoRkNBTUlBdEJERUVJSUFFZ0Ewc2lEaHRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUXNnQ0MwQUFTRUJJQWd0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlEQUlMSUFRZ0N6WUNFQ0FCUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQ3pZQ0VFRUlJUWdnQVVFSWRDQUNhaUVDQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElCUkZJQlFnRGhzTUFRc2dDeWdDQkFzZ0UzTWlBUnMyQW9BR0lBb2dDaWdDQUVHQWdBRnlOZ0lBSUFjZ0J5Z0NCRUdBSUhJMkFnUWdCeUFIS0FLRUFrRUVjallDaEFJZ0J5QUhLQUtNQWtFQmNqWUNqQUlnQnlBSEtBS0lBaUFCUVJKMGNrRUNjallDaUFJZ0JpQUJRUngwY2tHQXdBQnlCU0FHQzBHQWdJQ0FCSEloQmdzZ0J5QUdOZ0lBQ3lBSFFRUnFJUVlnQ1VFRWFpRUJJQmRCQVdvaUYwSEFBRWNOQUFzZ0IwRU1haUVHSUFsQmhBWnFJUUVnRFVFOFNTRlJJQTFCQkdvaERTQlJEUUFMREFJTFFRRWdHWFFpQVVFQmRpQUJjaUVOSUFRb0FuZ2lDU0FRUVFKMGFrRU1haUVHSUFRb0FvQUJJUUVnQkNnQ0NDRUlJQVFvQWdRaEF5QUVLQUlBSVFJZ0JDZ0NhQ0VNSUFRb0FuUWhFUUpBSUJaQkNIRUVRQUpBSUFGQkJFa05BQ0FRQkVCQkFDQU5heUVVSUFSQkhHb2hCU0FRUVF4c0lSTWdFRUVEZENFVkEwQkJBQ0VMQTBBZ0JpSUpLQUlBSWdZRVFBSkFJQVpCa0lDQUFYRU5BQ0FHUWU4RGNTSUJSUTBBSUFNZ0JTQUVLQUpzSUFGcUxRQUFRUUowYWlJTUtBSUFJZ29vQWdBaUFXc2hBd0ovSUFFZ0FrRVFkazBFUUNBQ0lBRkJFSFJySVFJZ0EwR0FnQUp4QkVBZ0NpZ0NCQXdDQ3lBS0tBSUVJUTRnRENBS1FReEJDQ0FCSUFOTEloSWJhaWdDQURZQ0FBTkFBa0FnQ0EwQUlBUW9BaEFpQ0VFQmFpRUtJQWd0QUFFaEFTQUlMUUFBUWY4QlJ3UkFJQVFnQ2pZQ0VFRUlJUWdnQVVFSWRDQUNhaUVDREFFTElBRkJqd0ZOQkVBZ0JDQUtOZ0lRSUFGQkNYUWdBbW9oQWtFSElRZ01BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hDQXNnQ0VFQmF5RUlJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBT1JTQU9JQkliREFFTElBb29BZ1FoRGlBTUlBcEJDRUVNSUFFZ0Ewc2lFaHRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUW9nQ0MwQUFTRURJQWd0QUFCQi93RkhCRUFnQkNBS05nSVFRUWdoQ0NBRFFRaDBJQUpxSVFJTUFRc2dBMEdQQVUwRVFDQUVJQW8yQWhBZ0EwRUpkQ0FDYWlFQ1FRY2hDQXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VJQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBRWhBeUFPSUE1RklCSWJDd1IvSUFNZ0JTQUpLQUlFUVJGMlFRUnhJQWxCQkdzaURpZ0NBRUVUZGtFQmNTQUdRUTUyUVJCeElBWkJFSFpCd0FCeElBWkJxZ0Z4Y25KeWNpSVNRZUM1QVdvdEFBQkJBblJxSWd3b0FnQWlDaWdDQUNJQmF5RURJQkpCNExzQmFpMEFBQ0VZSUJFZ0ZDQU5BbjhnQVNBQ1FSQjJUUVJBSUFJZ0FVRVFkR3NoQWlBRFFZQ0FBbkVFUUNBS0tBSUVEQUlMSUFvb0FnUWhFaUFNSUFwQkRFRUlJQUVnQTBzaUd4dHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRb2dDQzBBQVNFQklBZ3RBQUJCL3dGSEJFQWdCQ0FLTmdJUVFRZ2hDQ0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBbzJBaEFnQVVFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlDeUFJUVFGcklRZ2dBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUJKRklCSWdHeHNNQVFzZ0NpZ0NCQ0VTSUF3Z0NrRUlRUXdnQVNBRFN5SWJHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRTWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFOQkNIUWdBbW9oQWd3QkN5QURRWThCVFFSQUlBUWdDallDRUNBRFFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0FTRURJQklnRWtVZ0d4c0xJQmh6SWdFYk5nSUFJQTRnRGlnQ0FFRWdjallDQUNBSklBa29BZ1JCQ0hJMkFnUWdCaUFCUVJOMGNrRVFjZ1VnQmd0QmdJQ0FBWEloQmdzQ1FDQUdRWUNCZ0FoeERRQWdCa0g0SG5GRkRRQWdBeUFGSUFRb0Ftd2dCa0VEZGlJU1FlOERjV290QUFCQkFuUnFJZ3dvQWdBaUNpZ0NBQ0lCYXlFREFuOGdBU0FDUVJCMlRRUkFJQUlnQVVFUWRHc2hBaUFEUVlDQUFuRUVRQ0FLS0FJRURBSUxJQW9vQWdRaERpQU1JQXBCREVFSUlBRWdBMHNpR0J0cUtBSUFOZ0lBQTBBQ1FDQUlEUUFnQkNnQ0VDSUlRUUZxSVFvZ0NDMEFBU0VCSUFndEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaENDQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFvMkFoQWdBVUVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSUN5QUlRUUZySVFnZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQTVGSUE0Z0dCc01BUXNnQ2lnQ0JDRU9JQXdnQ2tFSVFRd2dBU0FEU3lJWUcyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaENpQUlMUUFCSVFNZ0NDMEFBRUgvQVVjRVFDQUVJQW8yQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3dCQ3lBRFFZOEJUUVJBSUFRZ0NqWUNFQ0FEUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRZ0xJQWhCQVdzaENDQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQVNFRElBNGdEa1VnR0JzTEJIOGdBeUFGSUFrb0FnUkJGSFpCQkhFZ0NVRUVheUlPS0FJQVFSWjJRUUZ4SUFaQkQzWkJFSEVnQmtFVGRrSEFBSEVnRWtHcUFYRnljbkp5SWhKQjRMa0JhaTBBQUVFQ2RHb2lEQ2dDQUNJS0tBSUFJZ0ZySVFNZ0VrSGd1d0ZxTFFBQUlSZ2dFU0FRUVFKMGFpQVVJQTBDZnlBQklBSkJFSFpOQkVBZ0FpQUJRUkIwYXlFQ0lBTkJnSUFDY1FSQUlBb29BZ1FNQWdzZ0NpZ0NCQ0VTSUF3Z0NrRU1RUWdnQVNBRFN5SWJHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRRWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFGQkNIUWdBbW9oQWd3QkN5QUJRWThCVFFSQUlBUWdDallDRUNBQlFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0VrVWdFaUFiR3d3QkN5QUtLQUlFSVJJZ0RDQUtRUWhCRENBQklBTkxJaHNiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVLSUFndEFBRWhBeUFJTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFnZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FLTmdJUUlBTkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0FzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nRWlBU1JTQWJHd3NnR0hNaUFSczJBZ0FnRGlBT0tBSUFRWUFDY2pZQ0FDQUpJQWtvQWdSQndBQnlOZ0lFSUFZZ0FVRVdkSEpCZ0FGeUJTQUdDMEdBZ0lBSWNpRUdDd0pBSUFaQmdJaUF3QUJ4RFFBZ0JrSEE5d0Z4UlEwQUlBTWdCU0FFS0FKc0lBWkJCbllpRWtIdkEzRnFMUUFBUVFKMGFpSU1LQUlBSWdvb0FnQWlBV3NoQXdKL0lBRWdBa0VRZGswRVFDQUNJQUZCRUhScklRSWdBMEdBZ0FKeEJFQWdDaWdDQkF3Q0N5QUtLQUlFSVE0Z0RDQUtRUXhCQ0NBQklBTkxJaGdiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVLSUFndEFBRWhBU0FJTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFnZ0FVRUlkQ0FDYWlFQ0RBRUxJQUZCandGTkJFQWdCQ0FLTmdJUUlBRkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0FzZ0NFRUJheUVJSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QU9SU0FPSUJnYkRBRUxJQW9vQWdRaERpQU1JQXBCQ0VFTUlBRWdBMHNpR0J0cUtBSUFOZ0lBQTBBQ1FDQUlEUUFnQkNnQ0VDSUlRUUZxSVFvZ0NDMEFBU0VESUFndEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaENDQURRUWgwSUFKcUlRSU1BUXNnQTBHUEFVMEVRQ0FFSUFvMkFoQWdBMEVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSUN5QUlRUUZySVFnZ0FrRUJkQ0VDSUFGQkFYUWlBVUdBZ0FKSkRRQUxJQUVoQXlBT0lBNUZJQmdiQ3dSL0lBTWdCU0FKS0FJRVFSZDJRUVJ4SUFsQkJHc2lEaWdDQUVFWmRrRUJjU0FHUVJKMlFSQnhJQVpCRm5aQndBQnhJQkpCcWdGeGNuSnljaUlTUWVDNUFXb3RBQUJCQW5ScUlnd29BZ0FpQ2lnQ0FDSUJheUVESUJKQjRMc0JhaTBBQUNFWUlCRWdGV29nRkNBTkFuOGdBU0FDUVJCMlRRUkFJQUlnQVVFUWRHc2hBaUFEUVlDQUFuRUVRQ0FLS0FJRURBSUxJQW9vQWdRaEVpQU1JQXBCREVFSUlBRWdBMHNpR3h0cUtBSUFOZ0lBQTBBQ1FDQUlEUUFnQkNnQ0VDSUlRUUZxSVFvZ0NDMEFBU0VCSUFndEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaENDQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFvMkFoQWdBVUVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSUN5QUlRUUZySVFnZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQkpGSUJJZ0d4c01BUXNnQ2lnQ0JDRVNJQXdnQ2tFSVFRd2dBU0FEU3lJYkcyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaENpQUlMUUFCSVFNZ0NDMEFBRUgvQVVjRVFDQUVJQW8yQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3dCQ3lBRFFZOEJUUVJBSUFRZ0NqWUNFQ0FEUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRZ0xJQWhCQVdzaENDQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQVNFRElCSWdFa1VnR3hzTElCaHpJZ0ViTmdJQUlBNGdEaWdDQUVHQUVISTJBZ0FnQ1NBSktBSUVRWUFFY2pZQ0JDQUdJQUZCR1hSeVFZQUljZ1VnQmd0QmdJQ0F3QUJ5SVFZTEFrQWdCa0dBd0lDQUJIRU5BQ0FHUVlDOEQzRkZEUUFnQXlBRklBUW9BbXdnQmtFSmRpSVNRZThEY1dvdEFBQkJBblJxSWd3b0FnQWlDaWdDQUNJQmF5RURBbjhnQVNBQ1FSQjJUUVJBSUFJZ0FVRVFkR3NoQWlBRFFZQ0FBbkVFUUNBS0tBSUVEQUlMSUFvb0FnUWhEaUFNSUFwQkRFRUlJQUVnQTBzaUdCdHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRb2dDQzBBQVNFQklBZ3RBQUJCL3dGSEJFQWdCQ0FLTmdJUVFRZ2hDQ0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBbzJBaEFnQVVFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlDeUFJUVFGcklRZ2dBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUE1RklBNGdHQnNNQVFzZ0NpZ0NCQ0VPSUF3Z0NrRUlRUXdnQVNBRFN5SVlHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRTWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFOQkNIUWdBbW9oQWd3QkN5QURRWThCVFFSQUlBUWdDallDRUNBRFFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0FTRURJQTRnRGtVZ0dCc0xCSDhnQXlBRklBa29BZ1JCR25aQkJIRWdDVUVFYXlJT0tBSUFRUngyUVFGeElBWkJGWFpCRUhFZ0JrRVpka0hBQUhFZ0VrR3FBWEZ5Y25KeUloSkI0TGtCYWkwQUFFRUNkR29pRENnQ0FDSUtLQUlBSWdGcklRTWdFa0hndXdGcUxRQUFJUmdnRVNBVGFpQVVJQTBDZnlBQklBSkJFSFpOQkVBZ0FpQUJRUkIwYXlFQ0lBTkJnSUFDY1FSQUlBb29BZ1FNQWdzZ0NpZ0NCQ0VTSUF3Z0NrRU1RUWdnQVNBRFN5SWJHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRRWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFGQkNIUWdBbW9oQWd3QkN5QUJRWThCVFFSQUlBUWdDallDRUNBQlFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0VrVWdFaUFiR3d3QkN5QUtLQUlFSVJJZ0RDQUtRUWhCRENBQklBTkxJaHNiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVLSUFndEFBRWhBeUFJTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFnZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FLTmdJUUlBTkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0FzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nRWlBU1JTQWJHd3NnR0hNaUNoczJBZ0FnRGlBT0tBSUFRWUNBQVhJMkFnQWdDU0FKS0FJRVFZQWdjallDQkNBRUtBSjhRUUowSUFscUlnRWdBU2dDQkVFRWNqWUNCQ0FCSUFFb0FneEJBWEkyQWd3Z0FTQUJLQUlJSUFwQkVuUnlRUUp5TmdJSUlBWWdDa0VjZEhKQmdNQUFjZ1VnQmd0QmdJQ0FnQVJ5SVFZTElBa2dCallDQUFzZ0NVRUVhaUVHSUJGQkJHb2hFU0FMUVFGcUlnc2dFRWNOQUFzZ0NVRU1haUVHSUJFZ0Uyb2hFU0FIUVFScUlnY2dCQ2dDZ0FFaUFVRjhjVWtOQUFzTUFRdEJCQ0FCUVh4eElnWWdCa0VFVFJ0QkFXc2lCa0Y4Y1VFRWFpRUhJQWtnQmtFQmRFRjRjV3BCRkdvaEJnc2dCQ0FJTmdJSUlBUWdBellDQkNBRUlBSTJBZ0FnQkNBTU5nSm9JQkJGRFFFZ0FTQUhUUTBCQTBBZ0FTQUhSaUZTUVFBaENDQUhJUUVnVWtVRVFBTkFJQVFnQmlBUklBZ2dFR3hCQW5ScUlBMGdDQ0FFS0FKOFFRSnFRUUVRVWlBSVFRRnFJZ2dnQkNnQ2dBRWlBU0FIYTBrTkFBc0xJQVpCQkdvaEJpQVJRUVJxSVJFZ0YwRUJhaUlYSUJCSERRQUxEQUVMQWtBZ0FVRUVTUTBBSUJBRVFFRUFJQTFySVJRZ0JFRWNhaUVGSUJCQkRHd2hFeUFRUVFOMElSVURRRUVBSVFzRFFDQUdJZ2tvQWdBaUJnUkFBa0FnQmtHUWdJQUJjUTBBSUFaQjd3TnhJZ0ZGRFFBZ0F5QUZJQVFvQW13Z0FXb3RBQUJCQW5ScUlnd29BZ0FpQ2lnQ0FDSUJheUVEQW44Z0FTQUNRUkIyVFFSQUlBSWdBVUVRZEdzaEFpQURRWUNBQW5FRVFDQUtLQUlFREFJTElBb29BZ1FoRGlBTUlBcEJERUVJSUFFZ0Ewc2lFaHRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUW9nQ0MwQUFTRUJJQWd0QUFCQi93RkhCRUFnQkNBS05nSVFRUWdoQ0NBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQW8yQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hDQXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VJQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElBNUZJQTRnRWhzTUFRc2dDaWdDQkNFT0lBd2dDa0VJUVF3Z0FTQURTeUlTRzJvb0FnQTJBZ0FEUUFKQUlBZ05BQ0FFS0FJUUlnaEJBV29oQ2lBSUxRQUJJUU1nQ0MwQUFFSC9BVWNFUUNBRUlBbzJBaEJCQ0NFSUlBTkJDSFFnQW1vaEFnd0JDeUFEUVk4QlRRUkFJQVFnQ2pZQ0VDQURRUWwwSUFKcUlRSkJCeUVJREFFTElBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFnTElBaEJBV3NoQ0NBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dBU0VESUE0Z0RrVWdFaHNMQkg4Z0F5QUZJQWtvQWdSQkVYWkJCSEVnQ1VFRWF5SU9LQUlBUVJOMlFRRnhJQVpCRG5aQkVIRWdCa0VRZGtIQUFIRWdCa0dxQVhGeWNuSnlJaEpCNExrQmFpMEFBRUVDZEdvaURDZ0NBQ0lLS0FJQUlnRnJJUU1nRWtIZ3V3RnFMUUFBSVJnZ0VTQVVJQTBDZnlBQklBSkJFSFpOQkVBZ0FpQUJRUkIwYXlFQ0lBTkJnSUFDY1FSQUlBb29BZ1FNQWdzZ0NpZ0NCQ0VTSUF3Z0NrRU1RUWdnQVNBRFN5SWJHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRRWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFGQkNIUWdBbW9oQWd3QkN5QUJRWThCVFFSQUlBUWdDallDRUNBQlFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0VrVWdFaUFiR3d3QkN5QUtLQUlFSVJJZ0RDQUtRUWhCRENBQklBTkxJaHNiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVLSUFndEFBRWhBeUFJTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFnZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FLTmdJUUlBTkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0FzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nRWlBU1JTQWJHd3NnR0hNaUNoczJBZ0FnRGlBT0tBSUFRU0J5TmdJQUlBa2dDU2dDQkVFSWNqWUNCQ0FKUVg0Z0JDZ0NmR3RCQW5ScUlnRWdBU2dDQkVHQWdBSnlOZ0lFSUFFZ0FTZ0NBQ0FLUVI5MGNrR0FnQVJ5TmdJQUlBRkJCR3NpQVNBQktBSUFRWUNBQ0hJMkFnQWdCaUFLUVJOMGNrRVFjZ1VnQmd0QmdJQ0FBWEloQmdzQ1FDQUdRWUNCZ0FoeERRQWdCa0g0SG5GRkRRQWdBeUFGSUFRb0Ftd2dCa0VEZGlJU1FlOERjV290QUFCQkFuUnFJZ3dvQWdBaUNpZ0NBQ0lCYXlFREFuOGdBU0FDUVJCMlRRUkFJQUlnQVVFUWRHc2hBaUFEUVlDQUFuRUVRQ0FLS0FJRURBSUxJQW9vQWdRaERpQU1JQXBCREVFSUlBRWdBMHNpR0J0cUtBSUFOZ0lBQTBBQ1FDQUlEUUFnQkNnQ0VDSUlRUUZxSVFvZ0NDMEFBU0VCSUFndEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaENDQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFvMkFoQWdBVUVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSUN5QUlRUUZySVFnZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQTVGSUE0Z0dCc01BUXNnQ2lnQ0JDRU9JQXdnQ2tFSVFRd2dBU0FEU3lJWUcyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaENpQUlMUUFCSVFNZ0NDMEFBRUgvQVVjRVFDQUVJQW8yQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3dCQ3lBRFFZOEJUUVJBSUFRZ0NqWUNFQ0FEUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRZ0xJQWhCQVdzaENDQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQVNFRElBNGdEa1VnR0JzTEJIOGdBeUFGSUFrb0FnUkJGSFpCQkhFZ0NVRUVheUlPS0FJQVFSWjJRUUZ4SUFaQkQzWkJFSEVnQmtFVGRrSEFBSEVnRWtHcUFYRnljbkp5SWhKQjRMa0JhaTBBQUVFQ2RHb2lEQ2dDQUNJS0tBSUFJZ0ZySVFNZ0VrSGd1d0ZxTFFBQUlSZ2dFU0FRUVFKMGFpQVVJQTBDZnlBQklBSkJFSFpOQkVBZ0FpQUJRUkIwYXlFQ0lBTkJnSUFDY1FSQUlBb29BZ1FNQWdzZ0NpZ0NCQ0VTSUF3Z0NrRU1RUWdnQVNBRFN5SWJHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRRWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFGQkNIUWdBbW9oQWd3QkN5QUJRWThCVFFSQUlBUWdDallDRUNBQlFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0VrVWdFaUFiR3d3QkN5QUtLQUlFSVJJZ0RDQUtRUWhCRENBQklBTkxJaHNiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVLSUFndEFBRWhBeUFJTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFnZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FLTmdJUUlBTkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0FzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nRWlBU1JTQWJHd3NnR0hNaUFSczJBZ0FnRGlBT0tBSUFRWUFDY2pZQ0FDQUpJQWtvQWdSQndBQnlOZ0lFSUFZZ0FVRVdkSEpCZ0FGeUJTQUdDMEdBZ0lBSWNpRUdDd0pBSUFaQmdJaUF3QUJ4RFFBZ0JrSEE5d0Z4UlEwQUlBTWdCU0FFS0FKc0lBWkJCbllpRWtIdkEzRnFMUUFBUVFKMGFpSU1LQUlBSWdvb0FnQWlBV3NoQXdKL0lBRWdBa0VRZGswRVFDQUNJQUZCRUhScklRSWdBMEdBZ0FKeEJFQWdDaWdDQkF3Q0N5QUtLQUlFSVE0Z0RDQUtRUXhCQ0NBQklBTkxJaGdiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVLSUFndEFBRWhBU0FJTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFnZ0FVRUlkQ0FDYWlFQ0RBRUxJQUZCandGTkJFQWdCQ0FLTmdJUUlBRkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0FzZ0NFRUJheUVJSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QU9SU0FPSUJnYkRBRUxJQW9vQWdRaERpQU1JQXBCQ0VFTUlBRWdBMHNpR0J0cUtBSUFOZ0lBQTBBQ1FDQUlEUUFnQkNnQ0VDSUlRUUZxSVFvZ0NDMEFBU0VESUFndEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaENDQURRUWgwSUFKcUlRSU1BUXNnQTBHUEFVMEVRQ0FFSUFvMkFoQWdBMEVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSUN5QUlRUUZySVFnZ0FrRUJkQ0VDSUFGQkFYUWlBVUdBZ0FKSkRRQUxJQUVoQXlBT0lBNUZJQmdiQ3dSL0lBTWdCU0FKS0FJRVFSZDJRUVJ4SUFsQkJHc2lEaWdDQUVFWmRrRUJjU0FHUVJKMlFSQnhJQVpCRm5aQndBQnhJQkpCcWdGeGNuSnljaUlTUWVDNUFXb3RBQUJCQW5ScUlnd29BZ0FpQ2lnQ0FDSUJheUVESUJKQjRMc0JhaTBBQUNFWUlCRWdGV29nRkNBTkFuOGdBU0FDUVJCMlRRUkFJQUlnQVVFUWRHc2hBaUFEUVlDQUFuRUVRQ0FLS0FJRURBSUxJQW9vQWdRaEVpQU1JQXBCREVFSUlBRWdBMHNpR3h0cUtBSUFOZ0lBQTBBQ1FDQUlEUUFnQkNnQ0VDSUlRUUZxSVFvZ0NDMEFBU0VCSUFndEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaENDQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFvMkFoQWdBVUVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSUN5QUlRUUZySVFnZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQkpGSUJJZ0d4c01BUXNnQ2lnQ0JDRVNJQXdnQ2tFSVFRd2dBU0FEU3lJYkcyb29BZ0EyQWdBRFFBSkFJQWdOQUNBRUtBSVFJZ2hCQVdvaENpQUlMUUFCSVFNZ0NDMEFBRUgvQVVjRVFDQUVJQW8yQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3dCQ3lBRFFZOEJUUVJBSUFRZ0NqWUNFQ0FEUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRZ0xJQWhCQVdzaENDQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQVNFRElCSWdFa1VnR3hzTElCaHpJZ0ViTmdJQUlBNGdEaWdDQUVHQUVISTJBZ0FnQ1NBSktBSUVRWUFFY2pZQ0JDQUdJQUZCR1hSeVFZQUljZ1VnQmd0QmdJQ0F3QUJ5SVFZTEFrQWdCa0dBd0lDQUJIRU5BQ0FHUVlDOEQzRkZEUUFnQXlBRklBUW9BbXdnQmtFSmRpSVNRZThEY1dvdEFBQkJBblJxSWd3b0FnQWlDaWdDQUNJQmF5RURBbjhnQVNBQ1FSQjJUUVJBSUFJZ0FVRVFkR3NoQWlBRFFZQ0FBbkVFUUNBS0tBSUVEQUlMSUFvb0FnUWhEaUFNSUFwQkRFRUlJQUVnQTBzaUdCdHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRb2dDQzBBQVNFQklBZ3RBQUJCL3dGSEJFQWdCQ0FLTmdJUVFRZ2hDQ0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBbzJBaEFnQVVFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlDeUFJUVFGcklRZ2dBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUE1RklBNGdHQnNNQVFzZ0NpZ0NCQ0VPSUF3Z0NrRUlRUXdnQVNBRFN5SVlHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRTWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFOQkNIUWdBbW9oQWd3QkN5QURRWThCVFFSQUlBUWdDallDRUNBRFFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0FTRURJQTRnRGtVZ0dCc0xCSDhnQXlBRklBa29BZ1JCR25aQkJIRWdDVUVFYXlJT0tBSUFRUngyUVFGeElBWkJGWFpCRUhFZ0JrRVpka0hBQUhFZ0VrR3FBWEZ5Y25KeUloSkI0TGtCYWkwQUFFRUNkR29pRENnQ0FDSUtLQUlBSWdGcklRTWdFa0hndXdGcUxRQUFJUmdnRVNBVGFpQVVJQTBDZnlBQklBSkJFSFpOQkVBZ0FpQUJRUkIwYXlFQ0lBTkJnSUFDY1FSQUlBb29BZ1FNQWdzZ0NpZ0NCQ0VTSUF3Z0NrRU1RUWdnQVNBRFN5SWJHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDaUFJTFFBQklRRWdDQzBBQUVIL0FVY0VRQ0FFSUFvMkFoQkJDQ0VJSUFGQkNIUWdBbW9oQWd3QkN5QUJRWThCVFFSQUlBUWdDallDRUNBQlFRbDBJQUpxSVFKQkJ5RUlEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdMSUFoQkFXc2hDQ0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0VrVWdFaUFiR3d3QkN5QUtLQUlFSVJJZ0RDQUtRUWhCRENBQklBTkxJaHNiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVLSUFndEFBRWhBeUFJTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFnZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FLTmdJUUlBTkJDWFFnQW1vaEFrRUhJUWdNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQ0FzZ0NFRUJheUVJSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUJJUU1nRWlBU1JTQWJHd3NnR0hNaUNoczJBZ0FnRGlBT0tBSUFRWUNBQVhJMkFnQWdDU0FKS0FJRVFZQWdjallDQkNBRUtBSjhRUUowSUFscUlnRWdBU2dDQkVFRWNqWUNCQ0FCSUFFb0FneEJBWEkyQWd3Z0FTQUJLQUlJSUFwQkVuUnlRUUp5TmdJSUlBWWdDa0VjZEhKQmdNQUFjZ1VnQmd0QmdJQ0FnQVJ5SVFZTElBa2dCallDQUFzZ0NVRUVhaUVHSUJGQkJHb2hFU0FMUVFGcUlnc2dFRWNOQUFzZ0NVRU1haUVHSUJFZ0Uyb2hFU0FIUVFScUlnY2dCQ2dDZ0FFaUFVRjhjVWtOQUFzTUFRdEJCQ0FCUVh4eElnWWdCa0VFVFJ0QkFXc2lCa0Y4Y1VFRWFpRUhJQWtnQmtFQmRFRjRjV3BCRkdvaEJnc2dCQ0FJTmdJSUlBUWdBellDQkNBRUlBSTJBZ0FnQkNBTU5nSm9JQkJGRFFBZ0FTQUhUUTBBQTBBZ0FTQUhSaUZUUVFBaENDQUhJUUVnVTBVRVFBTkFJQVFnQmlBUklBZ2dFR3hCQW5ScUlBMGdDQ0FFS0FKOFFRSnFRUUFRVWlBSVFRRnFJZ2dnQkNnQ2dBRWlBU0FIYTBrTkFBc0xJQVpCQkdvaEJpQVJRUVJxSVJFZ0YwRUJhaUlYSUJCSERRQUxDd3dDQ3dOQVFRQWhGd05BSUFFaENTQUdJZ2NvQWdBaUJnUkFBa0FnQmtHUWdJQUJjUTBBSUFaQjd3TnhJZ0ZGRFFBZ0F5QVFJQVFvQW13Z0FXb3RBQUJCQW5ScUlnd29BZ0FpQ3lnQ0FDSUJheUVEQW44Z0FTQUNRUkIyU3dSQUlBc29BZ1FoQ2lBTUlBdEJDRUVNSUFFZ0Ewc2lGQnRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUXNnQ0MwQUFTRURJQWd0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlEQUlMSUFRZ0N6WUNFQ0FEUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQ3pZQ0VFRUlJUWdnQTBFSWRDQUNhaUVDQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBRWhBeUFLSUFwRklCUWJEQUVMSUFJZ0FVRVFkR3NoQWlBRFFZQ0FBbkZGQkVBZ0N5Z0NCQ0VLSUF3Z0MwRU1RUWdnQVNBRFN5SVVHMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDeUFJTFFBQklRRWdDQzBBQUVIL0FVWUVRQ0FCUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRZ01BZ3NnQkNBTE5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFnTUFRc2dCQ0FMTmdJUVFRZ2hDQ0FCUVFoMElBSnFJUUlMSUFoQkFXc2hDQ0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0NrVWdDaUFVR3d3QkN5QUxLQUlFQ3dSL0lBTWdFQ0FIS0FJRVFSRjJRUVJ4SUFkQkJHc2lDaWdDQUVFVGRrRUJjU0FHUVE1MlFSQnhJQVpCRUhaQndBQnhJQVpCcWdGeGNuSnljaUlVUWVDNUFXb3RBQUJCQW5ScUlnd29BZ0FpQ3lnQ0FDSUJheUVESUJSQjRMc0JhaTBBQUNFVElBa2dCU0FSQW44Z0FTQUNRUkIyU3dSQUlBc29BZ1FoRkNBTUlBdEJDRUVNSUFFZ0Ewc2lEaHRxS0FJQU5nSUFBMEFDUUNBSURRQWdCQ2dDRUNJSVFRRnFJUXNnQ0MwQUFTRURJQWd0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUlEQUlMSUFRZ0N6WUNFQ0FEUVFsMElBSnFJUUpCQnlFSURBRUxJQVFnQ3pZQ0VFRUlJUWdnQTBFSWRDQUNhaUVDQ3lBSVFRRnJJUWdnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBRWhBeUFVSUJSRklBNGJEQUVMSUFJZ0FVRVFkR3NoQWlBRFFZQ0FBbkZGQkVBZ0N5Z0NCQ0VVSUF3Z0MwRU1RUWdnQVNBRFN5SU9HMm9vQWdBMkFnQURRQUpBSUFnTkFDQUVLQUlRSWdoQkFXb2hDeUFJTFFBQklRRWdDQzBBQUVIL0FVWUVRQ0FCUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRZ01BZ3NnQkNBTE5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFnTUFRc2dCQ0FMTmdJUVFRZ2hDQ0FCUVFoMElBSnFJUUlMSUFoQkFXc2hDQ0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0ZFVWdGQ0FPR3d3QkN5QUxLQUlFQ3lBVGN5SUJHellDQUNBS0lBb29BZ0JCSUhJMkFnQWdCeUFIS0FJRVFRaHlOZ0lFSUFZZ0FVRVRkSEpCRUhJRklBWUxRWUNBZ0FGeUlRWUxBa0FnQmtHQWdZQUljUTBBSUFaQitCNXhSUTBBSUFNZ0VDQUVLQUpzSUFaQkEzWWlGRUh2QTNGcUxRQUFRUUowYWlJTUtBSUFJZ3NvQWdBaUFXc2hBd0ovSUFFZ0FrRVFka3NFUUNBTEtBSUVJUW9nRENBTFFRaEJEQ0FCSUFOTEloTWJhaWdDQURZQ0FBTkFBa0FnQ0EwQUlBUW9BaEFpQ0VFQmFpRUxJQWd0QUFFaEF5QUlMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaENBd0NDeUFFSUFzMkFoQWdBMEVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQXMyQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3NnQ0VFQmF5RUlJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBQklRTWdDaUFLUlNBVEd3d0JDeUFDSUFGQkVIUnJJUUlnQTBHQWdBSnhSUVJBSUFzb0FnUWhDaUFNSUF0QkRFRUlJQUVnQTBzaUV4dHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRc2dDQzBBQVNFQklBZ3RBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSURBSUxJQVFnQ3pZQ0VDQUJRUWwwSUFKcUlRSkJCeUVJREFFTElBUWdDellDRUVFSUlRZ2dBVUVJZENBQ2FpRUNDeUFJUVFGcklRZ2dBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFwRklBb2dFeHNNQVFzZ0N5Z0NCQXNFZnlBRElCQWdCeWdDQkVFVWRrRUVjU0FIUVFScklnb29BZ0JCRm5aQkFYRWdCa0VQZGtFUWNTQUdRUk4yUWNBQWNTQVVRYW9CY1hKeWNuSWlGRUhndVFGcUxRQUFRUUowYWlJTUtBSUFJZ3NvQWdBaUFXc2hBeUFVUWVDN0FXb3RBQUFoRXlBSklBVWdFUUovSUFFZ0FrRVFka3NFUUNBTEtBSUVJUlFnRENBTFFRaEJEQ0FCSUFOTElnNGJhaWdDQURZQ0FBTkFBa0FnQ0EwQUlBUW9BaEFpQ0VFQmFpRUxJQWd0QUFFaEF5QUlMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaENBd0NDeUFFSUFzMkFoQWdBMEVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQXMyQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3NnQ0VFQmF5RUlJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBQklRTWdGQ0FVUlNBT0d3d0JDeUFDSUFGQkVIUnJJUUlnQTBHQWdBSnhSUVJBSUFzb0FnUWhGQ0FNSUF0QkRFRUlJQUVnQTBzaURodHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRc2dDQzBBQVNFQklBZ3RBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSURBSUxJQVFnQ3pZQ0VDQUJRUWwwSUFKcUlRSkJCeUVJREFFTElBUWdDellDRUVFSUlRZ2dBVUVJZENBQ2FpRUNDeUFJUVFGcklRZ2dBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUJSRklCUWdEaHNNQVFzZ0N5Z0NCQXNnRTNNaUFSczJBb0FDSUFvZ0NpZ0NBRUdBQW5JMkFnQWdCeUFIS0FJRVFjQUFjallDQkNBR0lBRkJGblJ5UVlBQmNnVWdCZ3RCZ0lDQUNISWhCZ3NDUUNBR1FZQ0lnTUFBY1EwQUlBWkJ3UGNCY1VVTkFDQURJQkFnQkNnQ2JDQUdRUVoySWhSQjd3TnhhaTBBQUVFQ2RHb2lEQ2dDQUNJTEtBSUFJZ0ZySVFNQ2Z5QUJJQUpCRUhaTEJFQWdDeWdDQkNFS0lBd2dDMEVJUVF3Z0FTQURTeUlURzJvb0FnQTJBZ0FEUUFKQUlBZ05BQ0FFS0FJUUlnaEJBV29oQ3lBSUxRQUJJUU1nQ0MwQUFFSC9BVVlFUUNBRFFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdNQWdzZ0JDQUxOZ0lRSUFOQkNYUWdBbW9oQWtFSElRZ01BUXNnQkNBTE5nSVFRUWdoQ0NBRFFRaDBJQUpxSVFJTElBaEJBV3NoQ0NBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dBU0VESUFvZ0NrVWdFeHNNQVFzZ0FpQUJRUkIwYXlFQ0lBTkJnSUFDY1VVRVFDQUxLQUlFSVFvZ0RDQUxRUXhCQ0NBQklBTkxJaE1iYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVMSUFndEFBRWhBU0FJTFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hDQXdDQ3lBRUlBczJBaEFnQVVFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFzMkFoQkJDQ0VJSUFGQkNIUWdBbW9oQWdzZ0NFRUJheUVJSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QUtSU0FLSUJNYkRBRUxJQXNvQWdRTEJIOGdBeUFRSUFjb0FnUkJGM1pCQkhFZ0IwRUVheUlLS0FJQVFSbDJRUUZ4SUFaQkVuWkJFSEVnQmtFV2RrSEFBSEVnRkVHcUFYRnljbkp5SWhSQjRMa0JhaTBBQUVFQ2RHb2lEQ2dDQUNJTEtBSUFJZ0ZySVFNZ0ZFSGd1d0ZxTFFBQUlSTWdDU0FGSUJFQ2Z5QUJJQUpCRUhaTEJFQWdDeWdDQkNFVUlBd2dDMEVJUVF3Z0FTQURTeUlPRzJvb0FnQTJBZ0FEUUFKQUlBZ05BQ0FFS0FJUUlnaEJBV29oQ3lBSUxRQUJJUU1nQ0MwQUFFSC9BVVlFUUNBRFFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUWdNQWdzZ0JDQUxOZ0lRSUFOQkNYUWdBbW9oQWtFSElRZ01BUXNnQkNBTE5nSVFRUWdoQ0NBRFFRaDBJQUpxSVFJTElBaEJBV3NoQ0NBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dBU0VESUJRZ0ZFVWdEaHNNQVFzZ0FpQUJRUkIwYXlFQ0lBTkJnSUFDY1VVRVFDQUxLQUlFSVJRZ0RDQUxRUXhCQ0NBQklBTkxJZzRiYWlnQ0FEWUNBQU5BQWtBZ0NBMEFJQVFvQWhBaUNFRUJhaUVMSUFndEFBRWhBU0FJTFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hDQXdDQ3lBRUlBczJBaEFnQVVFSmRDQUNhaUVDUVFjaENBd0JDeUFFSUFzMkFoQkJDQ0VJSUFGQkNIUWdBbW9oQWdzZ0NFRUJheUVJSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QVVSU0FVSUE0YkRBRUxJQXNvQWdRTElCTnpJZ0ViTmdLQUJDQUtJQW9vQWdCQmdCQnlOZ0lBSUFjZ0J5Z0NCRUdBQkhJMkFnUWdCaUFCUVJsMGNrR0FDSElGSUFZTFFZQ0FnTUFBY2lFR0N3SkFJQVpCZ01DQWdBUnhEUUFnQmtHQXZBOXhSUTBBSUFNZ0VDQUVLQUpzSUFaQkNYWWlGRUh2QTNGcUxRQUFRUUowYWlJTUtBSUFJZ3NvQWdBaUFXc2hBd0ovSUFFZ0FrRVFka3NFUUNBTEtBSUVJUW9nRENBTFFRaEJEQ0FCSUFOTEloTWJhaWdDQURZQ0FBTkFBa0FnQ0EwQUlBUW9BaEFpQ0VFQmFpRUxJQWd0QUFFaEF5QUlMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaENBd0NDeUFFSUFzMkFoQWdBMEVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQXMyQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3NnQ0VFQmF5RUlJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBQklRTWdDaUFLUlNBVEd3d0JDeUFDSUFGQkVIUnJJUUlnQTBHQWdBSnhSUVJBSUFzb0FnUWhDaUFNSUF0QkRFRUlJQUVnQTBzaUV4dHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRc2dDQzBBQVNFQklBZ3RBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSURBSUxJQVFnQ3pZQ0VDQUJRUWwwSUFKcUlRSkJCeUVJREFFTElBUWdDellDRUVFSUlRZ2dBVUVJZENBQ2FpRUNDeUFJUVFGcklRZ2dBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFwRklBb2dFeHNNQVFzZ0N5Z0NCQXNFZnlBRElCQWdCeWdDQkVFYWRrRUVjU0FIUVFScklnb29BZ0JCSEhaQkFYRWdCa0VWZGtFUWNTQUdRUmwyUWNBQWNTQVVRYW9CY1hKeWNuSWlGRUhndVFGcUxRQUFRUUowYWlJTUtBSUFJZ3NvQWdBaUFXc2hBeUFVUWVDN0FXb3RBQUFoRXlBSklBVWdFUUovSUFFZ0FrRVFka3NFUUNBTEtBSUVJUlFnRENBTFFRaEJEQ0FCSUFOTElnNGJhaWdDQURZQ0FBTkFBa0FnQ0EwQUlBUW9BaEFpQ0VFQmFpRUxJQWd0QUFFaEF5QUlMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaENBd0NDeUFFSUFzMkFoQWdBMEVKZENBQ2FpRUNRUWNoQ0F3QkN5QUVJQXMyQWhCQkNDRUlJQU5CQ0hRZ0Ftb2hBZ3NnQ0VFQmF5RUlJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBQklRTWdGQ0FVUlNBT0d3d0JDeUFDSUFGQkVIUnJJUUlnQTBHQWdBSnhSUVJBSUFzb0FnUWhGQ0FNSUF0QkRFRUlJQUVnQTBzaURodHFLQUlBTmdJQUEwQUNRQ0FJRFFBZ0JDZ0NFQ0lJUVFGcUlRc2dDQzBBQVNFQklBZ3RBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFSURBSUxJQVFnQ3pZQ0VDQUJRUWwwSUFKcUlRSkJCeUVJREFFTElBUWdDellDRUVFSUlRZ2dBVUVJZENBQ2FpRUNDeUFJUVFGcklRZ2dBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUJSRklCUWdEaHNNQVFzZ0N5Z0NCQXNnRTNNaUFSczJBb0FHSUFvZ0NpZ0NBRUdBZ0FGeU5nSUFJQWNnQnlnQ0JFR0FJSEkyQWdRZ0J5QUhLQUtFQWtFRWNqWUNoQUlnQnlBSEtBS01Ba0VCY2pZQ2pBSWdCeUFIS0FLSUFpQUJRUkowY2tFQ2NqWUNpQUlnQmlBQlFSeDBja0dBd0FCeUJTQUdDMEdBZ0lDQUJISWhCZ3NnQnlBR05nSUFDeUFIUVFScUlRWWdDVUVFYWlFQklCZEJBV29pRjBIQUFFY05BQXNnQjBFTWFpRUdJQWxCaEFacUlRRWdEVUU4U1NGVUlBMUJCR29oRFNCVURRQUxDeUFFSUFnMkFnZ2dCQ0FETmdJRUlBUWdBallDQUNBRUlBdzJBbWdMREFJTElDSUVRRUVCSUJsMFFRRjJJUWtnQkNnQ2ZDSVJRUUowSWd3Z0JDZ0NlR3BCREdvaEFTQUVLQUowSVFaQkFDRU5JQVFvQW9BQklnTkJCRThFUUNBUlJRMEVJQkZCQTJ3aEJTQVJRUUYwSVF0QkFDQUpheUVDQTBBZ0MwRUNkQ0VLUVFBaEF3TkFBa0FnQVNJSEtBSUFJZ0ZGRFFBZ0FVR1FnSUFCY1VFUVJnUkFJQVFvQWdBaEFRSkFJQVFvQWdnaUVBMEFJQUZCL3dGR0lSQWdCQ2dDRUNJSUxRQUFJUUVDUUNBUVJRUkFJQVFnQVRZQ0FDQUVJQWhCQVdvMkFoQU1BUXNnQVVHUEFVMEVRQ0FFSUFFMkFnQWdCQ0FJUVFGcU5nSVFRUWNoRUF3Q0MwSC9BU0VCSUFSQi93RTJBZ0FMUVFnaEVBc2dCQ0FRUVFGcklnZzJBZ2dnQmlBQ0lBa2dBU0FJZGtFQmNTQUdLQUlBSWdGQkgzWkdHeUFCYWpZQ0FDQUhJQWNvQWdCQmdJREFBSElpQVRZQ0FBc2dBVUdBZ1lBSWNVR0FBVVlFUUNBRUtBSUFJUUVDUUNBRUtBSUlJaEFOQUNBQlFmOEJSaUVRSUFRb0FoQWlDQzBBQUNFQkFrQWdFRVVFUUNBRUlBRTJBZ0FnQkNBSVFRRnFOZ0lRREFFTElBRkJqd0ZOQkVBZ0JDQUJOZ0lBSUFRZ0NFRUJhallDRUVFSElSQU1BZ3RCL3dFaEFTQUVRZjhCTmdJQUMwRUlJUkFMSUFRZ0VFRUJheUlJTmdJSUlBWWdER29pRUNBQ0lBa2dBU0FJZGtFQmNTQVFLQUlBSWdGQkgzWkdHeUFCYWpZQ0FDQUhJQWNvQWdCQmdJQ0FCSElpQVRZQ0FBc2dBVUdBaUlEQUFIRkJnQWhHQkVBZ0JDZ0NBQ0VCQWtBZ0JDZ0NDQ0lRRFFBZ0FVSC9BVVloRUNBRUtBSVFJZ2d0QUFBaEFRSkFJQkJGQkVBZ0JDQUJOZ0lBSUFRZ0NFRUJhallDRUF3QkN5QUJRWThCVFFSQUlBUWdBVFlDQUNBRUlBaEJBV28yQWhCQkJ5RVFEQUlMUWY4QklRRWdCRUgvQVRZQ0FBdEJDQ0VRQ3lBRUlCQkJBV3NpQ0RZQ0NDQUdJQXBxSWhBZ0FpQUpJQUVnQ0haQkFYRWdFQ2dDQUNJQlFSOTJSaHNnQVdvMkFnQWdCeUFIS0FJQVFZQ0FnQ0J5SWdFMkFnQUxJQUZCZ01DQWdBUnhRWURBQUVjTkFDQUdJQVZCQW5ScUlSQWdCQ2dDQUNFQkFrQWdCQ2dDQ0NJSURRQWdBVUgvQVVZaEZDQUVLQUlRSWdndEFBQWhBUUpBSUJSRkJFQWdCQ0FCTmdJQUlBUWdDRUVCYWpZQ0VBd0JDeUFCUVk4QlRRUkFJQVFnQVRZQ0FDQUVJQWhCQVdvMkFoQkJCeUVJREFJTFFmOEJJUUVnQkVIL0FUWUNBQXRCQ0NFSUN5QUVJQWhCQVdzaUNEWUNDQ0FRSUFJZ0NTQUJJQWgyUVFGeElCQW9BZ0FpQVVFZmRrWWJJQUZxTmdJQUlBY2dCeWdDQUVHQWdJQ0FBbkkyQWdBTElBWkJCR29oQmlBSFFRUnFJUUVnQTBFQmFpSURJQkZIRFFBTElBZEJER29oQVNBR0lBVkJBblJxSVFZZ0RVRUVhaUlOSUFRb0FvQUJJZ05CZkhGSkRRQUxDeUFESUExTkRRSWdFVVVOQWtFQUlSTkJBQ0FKYXlFRklBTWhCd05BQWtBZ0J5QU5SZ1JBSUEwaEJ3d0JDeUFCS0FJQUlSQkJBQ0VDQTBCQmtJQ0FBU0FDUVFOc0lnZDBJQkJ4UVJBZ0IzUkdCRUFnQmlBQ0lCRnNRUUowYWlFUUlBUW9BZ0FoQXdKQUlBUW9BZ2dpQ0EwQUlBTkIvd0ZISVF3Z0JDZ0NFQ0lJTFFBQUlRTUNRQ0FNUlFSQUlBTkJrQUZQQkVCQi93RWhBeUFFUWY4Qk5nSUFEQUlMSUFRZ0F6WUNBQ0FFSUFoQkFXbzJBaEJCQnlFSURBSUxJQVFnQXpZQ0FDQUVJQWhCQVdvMkFoQUxRUWdoQ0FzZ0JDQUlRUUZySWdnMkFnZ2dFQ0FGSUFrZ0F5QUlka0VCY1NBUUtBSUFJZ05CSDNaR0d5QURhallDQUNBQklBRW9BZ0JCZ0lEQUFDQUhkSElpRURZQ0FDQUVLQUtBQVNFREN5QURJUWNnQWtFQmFpSUNJQU1nRFd0SkRRQUxDeUFHUVFScUlRWWdBVUVFYWlFQklCTkJBV29pRXlBUlJ3MEFDd3dDQ3lBRUtBSjRJUWdnQkNnQ2RDRUhJQVFvQW9BQklRTUNRQ0FFS0FKOElneEJ3QUJIRFFBZ0EwSEFBRWNOQUNBSVFZd0NhaUVEUVFBaEUwRUFRUUVnR1hSQkFYWWlCV3NoRENBRUtBSUlJUUlnQkNnQ0JDRUdJQVFvQWdBaEFTQUVLQUpvSVEwRFFFRUFJUWdEUUNBSElRa2dBeUlRS0FJQUlnY0VRQ0FESVZVZ0IwR1FnSUFCY1VFUVJnUkFJQVlnRDBFUVFROUJEaUFIUWU4RGNSc2dCMEdBZ01BQWNSdEJBblJxSWcwb0FnQWlFU2dDQUNJRGF5RUdBbjhnQXlBQlFSQjJTd1JBSUJFb0FnUWhDeUFOSUJGQkNFRU1JQU1nQmtzaUNodHFLQUlBTmdJQUEwQUNRQ0FDRFFBZ0JDZ0NFQ0lDUVFGcUlSRWdBaTBBQVNFR0lBSXRBQUJCL3dGR0JFQWdCa0dRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQVVHQS9nTnFJUUZCQ0NFQ0RBSUxJQVFnRVRZQ0VDQUdRUWwwSUFGcUlRRkJCeUVDREFFTElBUWdFVFlDRUVFSUlRSWdCa0VJZENBQmFpRUJDeUFDUVFGcklRSWdBVUVCZENFQklBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEJpQUxJQXRGSUFvYkRBRUxJQUVnQTBFUWRHc2hBU0FHUVlDQUFuRkZCRUFnRVNnQ0JDRUxJQTBnRVVFTVFRZ2dBeUFHU3lJS0cyb29BZ0EyQWdBRFFBSkFJQUlOQUNBRUtBSVFJZ0pCQVdvaEVTQUNMUUFCSVFNZ0FpMEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FCUVlEK0Eyb2hBVUVJSVFJTUFnc2dCQ0FSTmdJUUlBTkJDWFFnQVdvaEFVRUhJUUlNQVFzZ0JDQVJOZ0lRUVFnaEFpQURRUWgwSUFGcUlRRUxJQUpCQVdzaEFpQUJRUUYwSVFFZ0JrRUJkQ0lHUVlDQUFra05BQXNnQzBVZ0N5QUtHd3dCQ3lBUktBSUVDeUVESUFrZ0RDQUZJQU1nQ1NnQ0FDSVJRUjkyUmhzZ0VXbzJBZ0FnQjBHQWdNQUFjaUVIQ3lBSFFZQ0JnQWh4UVlBQlJnUkFJQVlnRDBFUVFROUJEaUFIUWZnZWNSc2dCMEdBZ0lBRWNSdEJBblJxSWcwb0FnQWlFU2dDQUNJRGF5RUdBbjhnQXlBQlFSQjJTd1JBSUJFb0FnUWhDeUFOSUJGQkNFRU1JQU1nQmtzaUNodHFLQUlBTmdJQUEwQUNRQ0FDRFFBZ0JDZ0NFQ0lDUVFGcUlSRWdBaTBBQVNFR0lBSXRBQUJCL3dGR0JFQWdCa0dRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQVVHQS9nTnFJUUZCQ0NFQ0RBSUxJQVFnRVRZQ0VDQUdRUWwwSUFGcUlRRkJCeUVDREFFTElBUWdFVFlDRUVFSUlRSWdCa0VJZENBQmFpRUJDeUFDUVFGcklRSWdBVUVCZENFQklBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEJpQUxJQXRGSUFvYkRBRUxJQUVnQTBFUWRHc2hBU0FHUVlDQUFuRkZCRUFnRVNnQ0JDRUxJQTBnRVVFTVFRZ2dBeUFHU3lJS0cyb29BZ0EyQWdBRFFBSkFJQUlOQUNBRUtBSVFJZ0pCQVdvaEVTQUNMUUFCSVFNZ0FpMEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FCUVlEK0Eyb2hBVUVJSVFJTUFnc2dCQ0FSTmdJUUlBTkJDWFFnQVdvaEFVRUhJUUlNQVFzZ0JDQVJOZ0lRUVFnaEFpQURRUWgwSUFGcUlRRUxJQUpCQVdzaEFpQUJRUUYwSVFFZ0JrRUJkQ0lHUVlDQUFra05BQXNnQzBVZ0N5QUtHd3dCQ3lBUktBSUVDeUVESUFrZ0RDQUZJQU1nQ1NnQ2dBSWlFVUVmZGtZYklCRnFOZ0tBQWlBSFFZQ0FnQVJ5SVFjTElBZEJnSWlBd0FCeFFZQUlSZ1JBSUFZZ0QwRVFRUTlCRGlBSFFjRDNBWEViSUFkQmdJQ0FJSEViUVFKMGFpSU5LQUlBSWhFb0FnQWlBMnNoQmdKL0lBTWdBVUVRZGtzRVFDQVJLQUlFSVFzZ0RTQVJRUWhCRENBRElBWkxJZ29iYWlnQ0FEWUNBQU5BQWtBZ0FnMEFJQVFvQWhBaUFrRUJhaUVSSUFJdEFBRWhCaUFDTFFBQVFmOEJSZ1JBSUFaQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBRkJnUDREYWlFQlFRZ2hBZ3dDQ3lBRUlCRTJBaEFnQmtFSmRDQUJhaUVCUVFjaEFnd0JDeUFFSUJFMkFoQkJDQ0VDSUFaQkNIUWdBV29oQVFzZ0FrRUJheUVDSUFGQkFYUWhBU0FEUVFGMElnTkJnSUFDU1EwQUN5QURJUVlnQ3lBTFJTQUtHd3dCQ3lBQklBTkJFSFJySVFFZ0JrR0FnQUp4UlFSQUlCRW9BZ1FoQ3lBTklCRkJERUVJSUFNZ0Jrc2lDaHRxS0FJQU5nSUFBMEFDUUNBQ0RRQWdCQ2dDRUNJQ1FRRnFJUkVnQWkwQUFTRURJQUl0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FVR0EvZ05xSVFGQkNDRUNEQUlMSUFRZ0VUWUNFQ0FEUVFsMElBRnFJUUZCQnlFQ0RBRUxJQVFnRVRZQ0VFRUlJUUlnQTBFSWRDQUJhaUVCQ3lBQ1FRRnJJUUlnQVVFQmRDRUJJQVpCQVhRaUJrR0FnQUpKRFFBTElBdEZJQXNnQ2hzTUFRc2dFU2dDQkFzaEF5QUpJQXdnQlNBRElBa29Bb0FFSWhGQkgzWkdHeUFSYWpZQ2dBUWdCMEdBZ0lBZ2NpRUhDeUJWSUFkQmdNQ0FnQVJ4UVlEQUFFWUVmeUFHSUE5QkVFRVBRUTRnQjBHQXZBOXhHeUFIUVlDQWdJQUNjUnRCQW5ScUlnMG9BZ0FpRVNnQ0FDSURheUVHQW44Z0F5QUJRUkIyU3dSQUlCRW9BZ1FoQ3lBTklCRkJDRUVNSUFNZ0Jrc2lDaHRxS0FJQU5nSUFBMEFDUUNBQ0RRQWdCQ2dDRUNJQ1FRRnFJUkVnQWkwQUFTRUdJQUl0QUFCQi93RkdCRUFnQmtHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FVR0EvZ05xSVFGQkNDRUNEQUlMSUFRZ0VUWUNFQ0FHUVFsMElBRnFJUUZCQnlFQ0RBRUxJQVFnRVRZQ0VFRUlJUUlnQmtFSWRDQUJhaUVCQ3lBQ1FRRnJJUUlnQVVFQmRDRUJJQU5CQVhRaUEwR0FnQUpKRFFBTElBTWhCaUFMSUF0RklBb2JEQUVMSUFFZ0EwRVFkR3NoQVNBR1FZQ0FBbkZGQkVBZ0VTZ0NCQ0VMSUEwZ0VVRU1RUWdnQXlBR1N5SUtHMm9vQWdBMkFnQURRQUpBSUFJTkFDQUVLQUlRSWdKQkFXb2hFU0FDTFFBQklRTWdBaTBBQUVIL0FVWUVRQ0FEUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQlFZRCtBMm9oQVVFSUlRSU1BZ3NnQkNBUk5nSVFJQU5CQ1hRZ0FXb2hBVUVISVFJTUFRc2dCQ0FSTmdJUVFRZ2hBaUFEUVFoMElBRnFJUUVMSUFKQkFXc2hBaUFCUVFGMElRRWdCa0VCZENJR1FZQ0FBa2tOQUFzZ0MwVWdDeUFLR3d3QkN5QVJLQUlFQ3lFRElBa2dEQ0FGSUFNZ0NTZ0NnQVlpRVVFZmRrWWJJQkZxTmdLQUJpQUhRWUNBZ0lBQ2NnVWdCd3MyQWdBTElCQkJCR29oQXlBSlFRUnFJUWNnQ0VFQmFpSUlRY0FBUncwQUN5QVFRUXhxSVFNZ0NVR0VCbW9oQnlBVFFUeEpJVllnRTBFRWFpRVRJRllOQUFzZ0JDQUNOZ0lJSUFRZ0JqWUNCQ0FFSUFFMkFnQWdCQ0FOTmdKb0RBSUxRUUVnR1hSQkFYWWhDeUFJSUF4QkFuUWlEbXBCREdvaENTQUVLQUlJSVFJZ0JDZ0NCQ0VHSUFRb0FnQWhBU0FFS0FKb0lRMUJBQ0VSQWtBZ0EwRUVTUTBBSUF3RVFDQU1RUU5zSVJRZ0RFRUJkQ0VYUVFBZ0Myc2hDZ05BSUJkQkFuUWhFa0VBSVFnRFFDQUpJZ1VvQWdBaUVBUkFJQkJCa0lDQUFYRkJFRVlFUUNBR0lBOUJFRUVQUVE0Z0VFSHZBM0ViSUJCQmdJREFBSEViUVFKMGFpSU5LQUlBSWdrb0FnQWlBMnNoQmdKL0lBTWdBVUVRZGswRVFDQUJJQU5CRUhScklRRWdCa0dBZ0FKeEJFQWdDU2dDQkF3Q0N5QUpLQUlFSVJNZ0RTQUpRUXhCQ0NBRElBWkxJaFViYWlnQ0FEWUNBQU5BQWtBZ0FnMEFJQVFvQWhBaUNVRUJhaUVDSUFrdEFBRWhBeUFKTFFBQVFmOEJSd1JBSUFRZ0FqWUNFRUVJSVFJZ0EwRUlkQ0FCYWlFQkRBRUxJQU5CandGTkJFQWdCQ0FDTmdJUUlBTkJDWFFnQVdvaEFVRUhJUUlNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUZCZ1A0RGFpRUJRUWdoQWdzZ0FrRUJheUVDSUFGQkFYUWhBU0FHUVFGMElnWkJnSUFDU1EwQUN5QVRSU0FUSUJVYkRBRUxJQWtvQWdRaEV5QU5JQWxCQ0VFTUlBTWdCa3NpRlJ0cUtBSUFOZ0lBQTBBQ1FDQUNEUUFnQkNnQ0VDSUpRUUZxSVFJZ0NTMEFBU0VHSUFrdEFBQkIvd0ZIQkVBZ0JDQUNOZ0lRUVFnaEFpQUdRUWgwSUFGcUlRRU1BUXNnQmtHUEFVMEVRQ0FFSUFJMkFoQWdCa0VKZENBQmFpRUJRUWNoQWd3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQVVHQS9nTnFJUUZCQ0NFQ0N5QUNRUUZySVFJZ0FVRUJkQ0VCSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQU1oQmlBVElCTkZJQlViQ3lFRElBY2dDaUFMSUFNZ0J5Z0NBQ0lKUVI5MlJoc2dDV28yQWdBZ0VFR0FnTUFBY2lFUUN5QVFRWUNCZ0FoeFFZQUJSZ1JBSUFZZ0QwRVFRUTlCRGlBUVFmZ2VjUnNnRUVHQWdJQUVjUnRCQW5ScUlnMG9BZ0FpQ1NnQ0FDSURheUVHQW44Z0F5QUJRUkIyVFFSQUlBRWdBMEVRZEdzaEFTQUdRWUNBQW5FRVFDQUpLQUlFREFJTElBa29BZ1FoRXlBTklBbEJERUVJSUFNZ0Jrc2lGUnRxS0FJQU5nSUFBMEFDUUNBQ0RRQWdCQ2dDRUNJSlFRRnFJUUlnQ1MwQUFTRURJQWt0QUFCQi93RkhCRUFnQkNBQ05nSVFRUWdoQWlBRFFRaDBJQUZxSVFFTUFRc2dBMEdQQVUwRVFDQUVJQUkyQWhBZ0EwRUpkQ0FCYWlFQlFRY2hBZ3dCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBVUdBL2dOcUlRRkJDQ0VDQ3lBQ1FRRnJJUUlnQVVFQmRDRUJJQVpCQVhRaUJrR0FnQUpKRFFBTElCTkZJQk1nRlJzTUFRc2dDU2dDQkNFVElBMGdDVUVJUVF3Z0F5QUdTeUlWRzJvb0FnQTJBZ0FEUUFKQUlBSU5BQ0FFS0FJUUlnbEJBV29oQWlBSkxRQUJJUVlnQ1MwQUFFSC9BVWNFUUNBRUlBSTJBaEJCQ0NFQ0lBWkJDSFFnQVdvaEFRd0JDeUFHUVk4QlRRUkFJQVFnQWpZQ0VDQUdRUWwwSUFGcUlRRkJCeUVDREFFTElBUWdCQ2dDREVFQmFqWUNEQ0FCUVlEK0Eyb2hBVUVJSVFJTElBSkJBV3NoQWlBQlFRRjBJUUVnQTBFQmRDSURRWUNBQWtrTkFBc2dBeUVHSUJNZ0UwVWdGUnNMSVFNZ0J5QU9haUlKSUFvZ0N5QURJQWtvQWdBaUNVRWZka1liSUFscU5nSUFJQkJCZ0lDQUJISWhFQXNnRUVHQWlJREFBSEZCZ0FoR0JFQWdCaUFQUVJCQkQwRU9JQkJCd1BjQmNSc2dFRUdBZ0lBZ2NSdEJBblJxSWcwb0FnQWlDU2dDQUNJRGF5RUdBbjhnQXlBQlFSQjJUUVJBSUFFZ0EwRVFkR3NoQVNBR1FZQ0FBbkVFUUNBSktBSUVEQUlMSUFrb0FnUWhFeUFOSUFsQkRFRUlJQU1nQmtzaUZSdHFLQUlBTmdJQUEwQUNRQ0FDRFFBZ0JDZ0NFQ0lKUVFGcUlRSWdDUzBBQVNFRElBa3RBQUJCL3dGSEJFQWdCQ0FDTmdJUVFRZ2hBaUFEUVFoMElBRnFJUUVNQVFzZ0EwR1BBVTBFUUNBRUlBSTJBaEFnQTBFSmRDQUJhaUVCUVFjaEFnd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FVR0EvZ05xSVFGQkNDRUNDeUFDUVFGcklRSWdBVUVCZENFQklBWkJBWFFpQmtHQWdBSkpEUUFMSUJORklCTWdGUnNNQVFzZ0NTZ0NCQ0VUSUEwZ0NVRUlRUXdnQXlBR1N5SVZHMm9vQWdBMkFnQURRQUpBSUFJTkFDQUVLQUlRSWdsQkFXb2hBaUFKTFFBQklRWWdDUzBBQUVIL0FVY0VRQ0FFSUFJMkFoQkJDQ0VDSUFaQkNIUWdBV29oQVF3QkN5QUdRWThCVFFSQUlBUWdBallDRUNBR1FRbDBJQUZxSVFGQkJ5RUNEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUJRWUQrQTJvaEFVRUlJUUlMSUFKQkFXc2hBaUFCUVFGMElRRWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0F5RUdJQk1nRTBVZ0ZSc0xJUU1nQnlBU2FpSUpJQW9nQ3lBRElBa29BZ0FpQ1VFZmRrWWJJQWxxTmdJQUlCQkJnSUNBSUhJaEVBc2dCU0FRUVlEQWdJQUVjVUdBd0FCR0JIOGdCaUFQUVJCQkQwRU9JQkJCZ0x3UGNSc2dFRUdBZ0lDQUFuRWJRUUowYWlJTktBSUFJZ2tvQWdBaUEyc2hCZ0ovSUFNZ0FVRVFkazBFUUNBQklBTkJFSFJySVFFZ0JrR0FnQUp4QkVBZ0NTZ0NCQXdDQ3lBSktBSUVJUk1nRFNBSlFReEJDQ0FESUFaTEloVWJhaWdDQURZQ0FBTkFBa0FnQWcwQUlBUW9BaEFpQ1VFQmFpRUNJQWt0QUFFaEF5QUpMUUFBUWY4QlJ3UkFJQVFnQWpZQ0VFRUlJUUlnQTBFSWRDQUJhaUVCREFFTElBTkJqd0ZOQkVBZ0JDQUNOZ0lRSUFOQkNYUWdBV29oQVVFSElRSU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBRkJnUDREYWlFQlFRZ2hBZ3NnQWtFQmF5RUNJQUZCQVhRaEFTQUdRUUYwSWdaQmdJQUNTUTBBQ3lBVFJTQVRJQlViREFFTElBa29BZ1FoRXlBTklBbEJDRUVNSUFNZ0Jrc2lGUnRxS0FJQU5nSUFBMEFDUUNBQ0RRQWdCQ2dDRUNJSlFRRnFJUUlnQ1MwQUFTRUdJQWt0QUFCQi93RkhCRUFnQkNBQ05nSVFRUWdoQWlBR1FRaDBJQUZxSVFFTUFRc2dCa0dQQVUwRVFDQUVJQUkyQWhBZ0JrRUpkQ0FCYWlFQlFRY2hBZ3dCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBVUdBL2dOcUlRRkJDQ0VDQ3lBQ1FRRnJJUUlnQVVFQmRDRUJJQU5CQVhRaUEwR0FnQUpKRFFBTElBTWhCaUFUSUJORklCVWJDeUVESUFjZ0ZFRUNkR29pQ1NBS0lBc2dBeUFKS0FJQUlnbEJIM1pHR3lBSmFqWUNBQ0FRUVlDQWdJQUNjZ1VnRUFzMkFnQUxJQVZCQkdvaENTQUhRUVJxSVFjZ0NFRUJhaUlJSUF4SERRQUxJQVZCREdvaENTQUhJQlJCQW5ScUlRY2dFVUVFYWlJUklBUW9Bb0FCSWdOQmZIRkpEUUFMREFFTFFRUWdBMEY4Y1NJSklBbEJCRTBiUVFGcklnbEJmSEZCQkdvaEVTQUlJQWxCQVhSQmVIRnFRUlJxSVFrTElBUWdBallDQ0NBRUlBWTJBZ1FnQkNBQk5nSUFJQVFnRFRZQ2FDQU1SUTBCSUFNZ0VVME5BVUVBSVJOQkFDQUxheUVVSUFNaEFRTkFBa0FnQVNBUlJnUkFJQkVoQVF3QkN5QUpLQUlBSVFKQkFDRVFBMEJCa0lDQUFTQVFRUU5zSWdoMElBSnhRUkFnQ0hSR0JFQWdCeUFNSUJCc1FRSjBhaUVGSUFRZ0QwRVFRUTlCRGlBQ0lBaDJJZ0ZCN3dOeEd5QUJRWUNBd0FCeEcwRUNkR29pRFRZQ2FDQUVJQVFvQWdRZ0RTZ0NBQ0lDS0FJQUlnRnJJZ00yQWdRQ2Z5QUJJQVFvQWdBaUJrRVFka3NFUUNBQ0tBSUVJUW9nQkNBQk5nSUVJQTBnQWtFSVFRd2dBU0FEU3lJT0cyb29BZ0EyQWdBZ0JDZ0NDQ0VDQTBBQ1FDQUNEUUFnQkNnQ0VDSUNRUUZxSVEwZ0FpMEFBU0VESUFJdEFBQkIvd0ZHQkVBZ0EwR1FBVThFUUNBRUlBUW9BZ3hCQVdvMkFnd2dCa0dBL2dOcUlRWkJDQ0VDREFJTElBUWdEVFlDRUNBRFFRbDBJQVpxSVFaQkJ5RUNEQUVMSUFRZ0RUWUNFRUVJSVFJZ0EwRUlkQ0FHYWlFR0N5QUVJQUpCQVdzaUFqWUNDQ0FFSUFaQkFYUWlCallDQUNBRUlBRkJBWFFpQVRZQ0JDQUJRWUNBQWtrTkFBc2dDaUFLUlNBT0d3d0JDeUFFSUFZZ0FVRVFkR3NpQmpZQ0FDQURRWUNBQW5GRkJFQWdBaWdDQkNFS0lBMGdBa0VNUVFnZ0FTQURTeUlPRzJvb0FnQTJBZ0FnQkNnQ0NDRUNBMEFDUUNBQ0RRQWdCQ2dDRUNJQ1FRRnFJUTBnQWkwQUFTRUJJQUl0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0JrR0EvZ05xSVFaQkNDRUNEQUlMSUFRZ0RUWUNFQ0FCUVFsMElBWnFJUVpCQnlFQ0RBRUxJQVFnRFRZQ0VFRUlJUUlnQVVFSWRDQUdhaUVHQ3lBRUlBSkJBV3NpQWpZQ0NDQUVJQVpCQVhRaUJqWUNBQ0FFSUFOQkFYUWlBellDQkNBRFFZQ0FBa2tOQUFzZ0NrVWdDaUFPR3d3QkN5QUNLQUlFQ3lFQklBVWdGQ0FMSUFFZ0JTZ0NBQ0lEUVI5MlJoc2dBMm8yQWdBZ0NTQUpLQUlBUVlDQXdBQWdDSFJ5SWdJMkFnQWdCQ2dDZ0FFaEF3c2dFRUVCYWlJUUlBTWlBU0FSYTBrTkFBc0xJQWxCQkdvaENTQUhRUVJxSVFjZ0UwRUJhaUlUSUF4SERRQUxEQUVMUVFBaEVVRUFJUmNDUUFKQUFrQUNRQ0FFS0FKOEloUkJ3QUJIRFFBZ0JDZ0NnQUZCd0FCSERRQkJBRUVCSUJsMElnRkJBWFlnQVhJaUZHc2hFeUFFUWVRQWFpRUlJQVJCNEFCcUlSQWdCRUVjYWlFTElBUW9BbmhCakFKcUlRWWdCQ2dDQ0NFRklBUW9BZ1FoQVNBRUtBSUFJUUlnQkNnQ2FDRUpJQVFvQW5RaEF5QVdRUWh4RFFFRFFFRUFJUXdEUUNBRElSRUNRQUpBQW44Q1FBSkFJQVlpRFNnQ0FDSUdSUVJBSUFFZ0VDZ0NBQ0lES0FJQUlnWnJJUUVDZnlBR0lBSkJFSFpMQkVBZ0F5Z0NCQ0VISUJBZ0EwRUlRUXdnQVNBR1NTSUtHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdOQkFXb2hDU0FETFFBQklRRWdBeTBBQUVIL0FVWUVRQ0FCUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBSk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FKTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdCa0VCZENJR1FZQ0FBa2tOQUFzZ0JpRUJJQWNnQjBVZ0Noc01BUXNnQWlBR1FSQjBheUVDSUFGQmdJQUNjVVVFUUNBREtBSUVJUWNnRUNBRFFReEJDQ0FCSUFaSklnb2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQmtFQmFpRUpJQVl0QUFFaEF5QUdMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFrMkFoQWdBMEVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQWsyQWhCQkNDRUZJQU5CQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBSFJTQUhJQW9iREFFTElBTW9BZ1FMUlFSQUlCQWhDUXdHQ3lBQklBZ29BZ0FpQXlnQ0FDSUdheUVCQW44Z0JpQUNRUkIyU3dSQUlBTW9BZ1FoQnlBSUlBTkJDRUVNSUFFZ0Jra2lDaHRxS0FJQUlnTTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnbEJBV29oQlNBSkxRQUJJUUVnQ1MwQUFFSC9BVVlFUUNBQlFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVNQWdzZ0JDQUZOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTElBVkJBV3NoQlNBQ1FRRjBJUUlnQmtFQmRDSUdRWUNBQWtrTkFBc2dCaUVCSUFjZ0IwVWdDaHNNQVFzZ0FpQUdRUkIwYXlFQ0lBRkJnSUFDY1VVRVFDQURLQUlFSVFjZ0NDQURRUXhCQ0NBQklBWkpJZ29iYWlnQ0FDSUROZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUpRUUZxSVFVZ0NTMEFBU0VHSUFrdEFBQkIvd0ZHQkVBZ0JrR1FBVThFUUNBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGREFJTElBUWdCVFlDRUNBR1FRbDBJQUpxSVFKQkJ5RUZEQUVMSUFRZ0JUWUNFRUVJSVFVZ0JrRUlkQ0FDYWlFQ0N5QUZRUUZySVFVZ0FrRUJkQ0VDSUFGQkFYUWlBVUdBZ0FKSkRRQUxJQWRGSUFjZ0Noc01BUXNnQXlnQ0JBc2hDaUFCSUFNb0FnQWlCbXNoQVFKL0lBWWdBa0VRZGtzRVFDQURLQUlFSVFjZ0NDQURRUWhCRENBQklBWkpJZzRiYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUEwRUJhaUVKSUFNdEFBRWhBU0FETFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBazJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFrMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFHUVFGMElnWkJnSUFDU1EwQUN5QUdJUUVnQnlBSFJTQU9Hd3dCQ3lBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4UlFSQUlBTW9BZ1FoQnlBSUlBTkJERUVJSUFFZ0Jra2lEaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJR1FRRnFJUWtnQmkwQUFTRURJQVl0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0NUWUNFQ0FEUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQ1RZQ0VFRUlJUVVnQTBFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBZEZJQWNnRGhzTUFRc2dBeWdDQkFzaEEwRUFJUVlnQ0NFSkFrQUNRQUpBQW44Q1FBSkFJQU1nQ2tFQmRISU9CQUFCQXdVS0N5QUJJQXNnRFNnQ0JFRVJka0VFY1NBTlFRUnJJZ2NvQWdCQkUzWkJBWEZ5SWc1QjRMa0JhaTBBQUVFQ2RHb2lDU2dDQUNJREtBSUFJZ1pySVFFQ2Z5QUdJQUpCRUhaTEJFQWdBeWdDQkNFS0lBa2dBMEVJUVF3Z0FTQUdTU0lTRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnTkJBV29oQ1NBRExRQUJJUUVnQXkwQUFFSC9BVVlFUUNBQlFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVNQWdzZ0JDQUpOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBSk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTElBVkJBV3NoQlNBQ1FRRjBJUUlnQmtFQmRDSUdRWUNBQWtrTkFBc2dCaUVCSUFvZ0NrVWdFaHNNQVFzZ0FpQUdRUkIwYXlFQ0lBRkJnSUFDY1VVRVFDQURLQUlFSVFvZ0NTQURRUXhCQ0NBQklBWkpJaEliYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUJrRUJhaUVKSUFZdEFBRWhBeUFHTFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBazJBaEFnQTBFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFrMkFoQkJDQ0VGSUFOQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUtSU0FLSUJJYkRBRUxJQU1vQWdRTElRTWdFU0FUSUJRZ0F5QU9RZUM3QVdvdEFBQnpJZ01iTmdJQUlBY2dCeWdDQUVFZ2NqWUNBQ0FOSUEwb0FnUkJDSEkyQWdRZ0RVR01BbXNpQmlBR0tBSUFRWUNBQ0hJMkFnQWdEVUdFQW1zaUJpQUdLQUlBUVlDQUFuSTJBZ0FnRFVHSUFtc2lCaUFHS0FJQUlBTkJIM1J5UVlDQUJISTJBZ0FnQTBFVGRDRlhJQUVnQ3lBRUtBSnNMUUFDUVFKMGFpSUhLQUlBSWdNb0FnQWlCbXNoQVFKL0lBWWdBa0VRZGtzRVFDQURLQUlFSVFrZ0J5QURRUWhCRENBQklBWkpJZzRiYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUEwRUJhaUVISUFNdEFBRWhBU0FETFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBYzJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFjMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFHUVFGMElnWkJnSUFDU1EwQUN5QUdJUUVnQ1NBSlJTQU9Hd3dCQ3lBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4UlFSQUlBTW9BZ1FoQ1NBSElBTkJERUVJSUFFZ0Jra2lEaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJR1FRRnFJUWNnQmkwQUFTRURJQVl0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0J6WUNFQ0FEUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQnpZQ0VFRUlJUVVnQTBFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBbEZJQWtnRGhzTUFRc2dBeWdDQkFzaEF5QlhRUkJ5SWdZZ0EwVU5BUm9MSUFFZ0N5QU5LQUlFUVJSMlFRUnhJQTFCQkdzaUNTZ0NBRUVXZGtFQmNTQUdRUTkyUVJCeElBWkJFM1pCd0FCeElBWkJBM1pCcWdGeGNuSnljaUlTUWVDNUFXb3RBQUJCQW5ScUlnb29BZ0FpQnlnQ0FDSURheUVCQW44Z0F5QUNRUkIyU3dSQUlBY29BZ1FoRGlBS0lBZEJDRUVNSUFFZ0Ewa2lDaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElBTWhBU0FPSUE1RklBb2JEQUVMSUFJZ0EwRVFkR3NoQWlBQlFZQ0FBbkZGQkVBZ0J5Z0NCQ0VPSUFvZ0IwRU1RUWdnQVNBRFNTSUtHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdkQkFXb2hCU0FITFFBQklRTWdCeTBBQUVIL0FVWUVRQ0FEUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBRk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FGTmdJUVFRZ2hCU0FEUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0RrVWdEaUFLR3d3QkN5QUhLQUlFQ3lFRElCRWdFeUFVSUFNZ0VrSGd1d0ZxTFFBQWN5SURHellDZ0FJZ0NTQUpLQUlBUVlBQ2NqWUNBQ0FOSUEwb0FnUkJ3QUJ5TmdJRUlBWWdBMEVXZEhKQmdBRnlDeUVHSUFFZ0N5QUVLQUpzSUFaQkJuWkI3d054YWkwQUFFRUNkR29pQ1NnQ0FDSUhLQUlBSWdOcklRRUNmeUFESUFKQkVIWkxCRUFnQnlnQ0JDRUtJQWtnQjBFSVFRd2dBU0FEU1NJT0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ2RCQVdvaENTQUhMUUFCSVFFZ0J5MEFBRUgvQVVZRVFDQUJRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTUFnc2dCQ0FKTmdJUUlBRkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUpOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0EwRUJkQ0lEUVlDQUFra05BQXNnQXlFQklBb2dDa1VnRGhzTUFRc2dBaUFEUVJCMGF5RUNJQUZCZ0lBQ2NVVUVRQ0FIS0FJRUlRb2dDU0FIUVF4QkNDQUJJQU5KSWc0YmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFSklBY3RBQUVoQXlBSExRQUFRZjhCUmdSQUlBTkJrQUZQQkVBZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlF3Q0N5QUVJQWsyQWhBZ0EwRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBazJBaEJCQ0NFRklBTkJDSFFnQW1vaEFnc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFLUlNBS0lBNGJEQUVMSUFjb0FnUUxSUTBCQ3lBQklBc2dEU2dDQkVFWGRrRUVjU0FOUVFScklna29BZ0JCR1haQkFYRWdCa0VTZGtFUWNTQUdRUloyUWNBQWNTQUdRUVoyUWFvQmNYSnljbklpRWtIZ3VRRnFMUUFBUVFKMGFpSUtLQUlBSWdjb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGtzRVFDQUhLQUlFSVE0Z0NpQUhRUWhCRENBQklBTkpJZ29iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBU0FITFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QURJUUVnRGlBT1JTQUtHd3dCQ3lBQ0lBTkJFSFJySVFJZ0FVR0FnQUp4UlFSQUlBY29BZ1FoRGlBS0lBZEJERUVJSUFFZ0Ewa2lDaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRURJQWN0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FEUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQTBFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBNUZJQTRnQ2hzTUFRc2dCeWdDQkFzaEF5QVJJQk1nRkNBRElCSkI0THNCYWkwQUFITWlBeHMyQW9BRUlBa2dDU2dDQUVHQUVISTJBZ0FnRFNBTktBSUVRWUFFY2pZQ0JDQUdJQU5CR1hSeVFZQUljaUVHQ3lBQklBc2dCQ2dDYkNBR1FRbDJRZThEY1dvdEFBQkJBblJxSWdrb0FnQWlCeWdDQUNJRGF5RUJBbjhnQXlBQ1FSQjJTd1JBSUFjb0FnUWhDaUFKSUFkQkNFRU1JQUVnQTBraURodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFQklBY3RBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQlRZQ0VDQUJRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEFTQUtJQXBGSUE0YkRBRUxJQUlnQTBFUWRHc2hBaUFCUVlDQUFuRkZCRUFnQnlnQ0JDRUtJQWtnQjBFTVFRZ2dBU0FEU1NJT0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ2RCQVdvaEJTQUhMUUFCSVFNZ0J5MEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTUFnc2dCQ0FGTmdJUUlBTkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUZOZ0lRUVFnaEJTQURRUWgwSUFKcUlRSUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQ2tVZ0NpQU9Hd3dCQ3lBSEtBSUVDMFVOQlFzZ0FTQUxJQTBvQWdSQkduWkJCSEVnRFVFRWF5SU9LQUlBUVJ4MlFRRnhJQVpCRlhaQkVIRWdCa0VaZGtIQUFIRWdCa0VKZGtHcUFYRnljbkp5SWdwQjRMa0JhaTBBQUVFQ2RHb2lDU2dDQUNJSEtBSUFJZ05ySVFFZ0F5QUNRUkIyU3dSQUlBY29BZ1FoRWlBSklBZEJDRUVNSUFFZ0Ewa2lGUnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElBTWhBU0FTSUJKRklCVWJEQVFMSUFJZ0EwRVFkR3NoQWlBQlFZQ0FBbkVOQVNBSEtBSUVJUklnQ1NBSFFReEJDQ0FCSUFOSkloVWJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEF5QUhMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBMEVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQU5CQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBU1JTQVNJQlViREFNTEFrQWdCa0dRZ0lBQmNRMEFJQUVnQ3lBRUtBSnNJQVpCN3dOeGFpMEFBRUVDZEdvaUNTZ0NBQ0lIS0FJQUlnTnJJUUVDZnlBRElBSkJFSFpMQkVBZ0J5Z0NCQ0VLSUFrZ0IwRUlRUXdnQVNBRFNTSU9HMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdkQkFXb2hCU0FITFFBQklRRWdCeTBBQUVIL0FVWUVRQ0FCUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBRk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FGTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0F5RUJJQW9nQ2tVZ0Roc01BUXNnQWlBRFFSQjBheUVDSUFGQmdJQUNjVVVFUUNBSEtBSUVJUW9nQ1NBSFFReEJDQ0FCSUFOSklnNGJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEF5QUhMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBMEVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQU5CQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBS1JTQUtJQTRiREFFTElBY29BZ1FMUlEwQUlBRWdDeUFOS0FJRVFSRjJRUVJ4SUExQkJHc2lDaWdDQUVFVGRrRUJjU0FHUVE1MlFSQnhJQVpCRUhaQndBQnhJQVpCcWdGeGNuSnljaUlTUWVDNUFXb3RBQUJCQW5ScUlna29BZ0FpQnlnQ0FDSURheUVCQW44Z0F5QUNRUkIyU3dSQUlBY29BZ1FoRGlBSklBZEJDRUVNSUFFZ0Ewa2lGUnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElBTWhBU0FPSUE1RklCVWJEQUVMSUFJZ0EwRVFkR3NoQWlBQlFZQ0FBbkZGQkVBZ0J5Z0NCQ0VPSUFrZ0IwRU1RUWdnQVNBRFNTSVZHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdkQkFXb2hCU0FITFFBQklRTWdCeTBBQUVIL0FVWUVRQ0FEUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBRk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FGTmdJUVFRZ2hCU0FEUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0RrVWdEaUFWR3d3QkN5QUhLQUlFQ3lFRElCRWdFeUFVSUFNZ0VrSGd1d0ZxTFFBQWN5SURHellDQUNBS0lBb29BZ0JCSUhJMkFnQWdEU0FOS0FJRVFRaHlOZ0lFSUExQmpBSnJJZ2NnQnlnQ0FFR0FnQWh5TmdJQUlBMUJoQUpySWdjZ0J5Z0NBRUdBZ0FKeU5nSUFJQTFCaUFKcklnY2dCeWdDQUNBRFFSOTBja0dBZ0FSeU5nSUFJQVlnQTBFVGRISkJFSEloQmdzQ1FDQUdRWUNCZ0FoeERRQWdBU0FMSUFRb0Ftd2dCa0VEZGlJT1FlOERjV290QUFCQkFuUnFJZ2tvQWdBaUJ5Z0NBQ0lEYXlFQkFuOGdBeUFDUVJCMlN3UkFJQWNvQWdRaENpQUpJQWRCQ0VFTUlBRWdBMGtpRWh0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VCSUFjdEFBQkIvd0ZHQkVBZ0FVR1FBVThFUUNBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGREFJTElBUWdCVFlDRUNBQlFRbDBJQUpxSVFKQkJ5RUZEQUVMSUFRZ0JUWUNFRUVJSVFVZ0FVRUlkQ0FDYWlFQ0N5QUZRUUZySVFVZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQU1oQVNBS0lBcEZJQkliREFFTElBSWdBMEVRZEdzaEFpQUJRWUNBQW5GRkJFQWdCeWdDQkNFS0lBa2dCMEVNUVFnZ0FTQURTU0lTRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUU1nQnkwQUFFSC9BVVlFUUNBRFFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVNQWdzZ0JDQUZOZ0lRSUFOQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRk5nSVFRUWdoQlNBRFFRaDBJQUpxSVFJTElBVkJBV3NoQlNBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dDa1VnQ2lBU0d3d0JDeUFIS0FJRUMwVU5BQ0FCSUFzZ0RTZ0NCRUVVZGtFRWNTQU5RUVJySWdvb0FnQkJGblpCQVhFZ0JrRVBka0VRY1NBR1FSTjJRY0FBY1NBT1Fhb0JjWEp5Y25JaUVrSGd1UUZxTFFBQVFRSjBhaUlKS0FJQUlnY29BZ0FpQTJzaEFRSi9JQU1nQWtFUWRrc0VRQ0FIS0FJRUlRNGdDU0FIUVFoQkRDQUJJQU5KSWhVYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQVNBSExRQUFRZjhCUmdSQUlBRkJrQUZQQkVBZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlF3Q0N5QUVJQVUyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBVTJBaEJCQ0NFRklBRkJDSFFnQW1vaEFnc2dCVUVCYXlFRklBSkJBWFFoQWlBRFFRRjBJZ05CZ0lBQ1NRMEFDeUFESVFFZ0RpQU9SU0FWR3d3QkN5QUNJQU5CRUhScklRSWdBVUdBZ0FKeFJRUkFJQWNvQWdRaERpQUpJQWRCREVFSUlBRWdBMGtpRlJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VESUFjdEFBQkIvd0ZHQkVBZ0EwR1FBVThFUUNBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGREFJTElBUWdCVFlDRUNBRFFRbDBJQUpxSVFKQkJ5RUZEQUVMSUFRZ0JUWUNFRUVJSVFVZ0EwRUlkQ0FDYWlFQ0N5QUZRUUZySVFVZ0FrRUJkQ0VDSUFGQkFYUWlBVUdBZ0FKSkRRQUxJQTVGSUE0Z0ZSc01BUXNnQnlnQ0JBc2hBeUFSSUJNZ0ZDQURJQkpCNExzQmFpMEFBSE1pQXhzMkFvQUNJQW9nQ2lnQ0FFR0FBbkkyQWdBZ0RTQU5LQUlFUWNBQWNqWUNCQ0FHSUFOQkZuUnlRWUFCY2lFR0N3SkFJQVpCZ0lpQXdBQnhEUUFnQVNBTElBUW9BbXdnQmtFR2RpSU9RZThEY1dvdEFBQkJBblJxSWdrb0FnQWlCeWdDQUNJRGF5RUJBbjhnQXlBQ1FSQjJTd1JBSUFjb0FnUWhDaUFKSUFkQkNFRU1JQUVnQTBraUVodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFQklBY3RBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQlRZQ0VDQUJRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEFTQUtJQXBGSUJJYkRBRUxJQUlnQTBFUWRHc2hBaUFCUVlDQUFuRkZCRUFnQnlnQ0JDRUtJQWtnQjBFTVFRZ2dBU0FEU1NJU0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ2RCQVdvaEJTQUhMUUFCSVFNZ0J5MEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTUFnc2dCQ0FGTmdJUUlBTkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUZOZ0lRUVFnaEJTQURRUWgwSUFKcUlRSUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQ2tVZ0NpQVNHd3dCQ3lBSEtBSUVDMFVOQUNBQklBc2dEU2dDQkVFWGRrRUVjU0FOUVFScklnb29BZ0JCR1haQkFYRWdCa0VTZGtFUWNTQUdRUloyUWNBQWNTQU9RYW9CY1hKeWNuSWlFa0hndVFGcUxRQUFRUUowYWlJSktBSUFJZ2NvQWdBaUEyc2hBUUovSUFNZ0FrRVFka3NFUUNBSEtBSUVJUTRnQ1NBSFFRaEJEQ0FCSUFOSkloVWJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEFTQUhMUUFBUWY4QlJnUkFJQUZCa0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBRElRRWdEaUFPUlNBVkd3d0JDeUFDSUFOQkVIUnJJUUlnQVVHQWdBSnhSUVJBSUFjb0FnUWhEaUFKSUFkQkRFRUlJQUVnQTBraUZSdHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFRElBY3RBQUJCL3dGR0JFQWdBMEdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQlRZQ0VDQURRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCVFlDRUVFSUlRVWdBMEVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBRkJBWFFpQVVHQWdBSkpEUUFMSUE1RklBNGdGUnNNQVFzZ0J5Z0NCQXNoQXlBUklCTWdGQ0FESUJKQjRMc0JhaTBBQUhNaUF4czJBb0FFSUFvZ0NpZ0NBRUdBRUhJMkFnQWdEU0FOS0FJRVFZQUVjallDQkNBR0lBTkJHWFJ5UVlBSWNpRUdDeUFHUVlEQWdJQUVjUTBESUFFZ0N5QUVLQUpzSUFaQkNYWWlFa0h2QTNGcUxRQUFRUUowYWlJSktBSUFJZ0VvQWdBaUEyc2hCd0ovSUFNZ0FrRVFka3NFUUNBQktBSUVJUW9nQ1NBQlFRaEJEQ0FESUFkTElnNGJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEFTQUhMUUFBUWY4QlJnUkFJQUZCa0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBRElRY2dDaUFLUlNBT0d3d0JDeUFDSUFOQkVIUnJJUUlnQjBHQWdBSnhSUVJBSUFFb0FnUWhDaUFKSUFGQkRFRUlJQU1nQjBzaURodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lEUVFGcUlRVWdBeTBBQVNFQklBTXRBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQlRZQ0VDQUJRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBZEJBWFFpQjBHQWdBSkpEUUFMSUFwRklBb2dEaHNNQVFzZ0FTZ0NCQXRGQkVBZ0J5RUJEQVFMSUFjZ0N5QU5LQUlFUVJwMlFRUnhJQTFCQkdzaURpZ0NBRUVjZGtFQmNTQUdRUlYyUVJCeElBWkJHWFpCd0FCeElCSkJxZ0Z4Y25KeWNpSUtRZUM1QVdvdEFBQkJBblJxSWdrb0FnQWlCeWdDQUNJQmF5RURJQUVnQWtFUWRrc0VRQ0FIS0FJRUlSSWdDU0FIUVFoQkRDQUJJQU5MSWhVYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQXlBSExRQUFRZjhCUmdSQUlBTkJrQUZQQkVBZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlF3Q0N5QUVJQVUyQWhBZ0EwRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBVTJBaEJCQ0NFRklBTkJDSFFnQW1vaEFnc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFTSUJKRklCVWJEQU1MSUFJZ0FVRVFkR3NoQWlBRFFZQ0FBbkZGRFFFZ0F5RUJDeUFIS0FJRURBRUxJQWNvQWdRaEVpQUpJQWRCREVFSUlBRWdBMHNpRlJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VCSUFjdEFBQkIvd0ZHQkVBZ0FVR1FBVThFUUNBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGREFJTElBUWdCVFlDRUNBQlFRbDBJQUpxSVFKQkJ5RUZEQUVMSUFRZ0JUWUNFRUVJSVFVZ0FVRUlkQ0FDYWlFQ0N5QUZRUUZySVFVZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQU1oQVNBU1JTQVNJQlViQ3lFRElCRWdFeUFVSUFNZ0NrSGd1d0ZxTFFBQWN5SURHellDZ0FZZ0RpQU9LQUlBUVlDQUFYSTJBZ0FnRFNBTktBSUVRWUFnY2pZQ0JDQU5JQTBvQW9RQ1FRUnlOZ0tFQWlBTklBMG9Bb3dDUVFGeU5nS01BaUFOSUEwb0FvZ0NJQU5CRW5SeVFRSnlOZ0tJQWlBR0lBTkJISFJ5UVlEQUFISWhCZ3NnRFNBR1FmLy8vN1o3Y1RZQ0FBc2dEVUVFYWlFR0lCRkJCR29oQXlBTVFRRnFJZ3hCd0FCSERRQUxJQTFCREdvaEJpQVJRWVFHYWlFRElCZEJQRWtoV0NBWFFRUnFJUmNnV0EwQUN3d0NDMEVCSUJsMElnRkJBWFlnQVhJaERpQUVLQUo0SWdjZ0ZFRUNkR3BCREdvaEF5QUVLQUtBQVNFR0lBUW9BZ2doQlNBRUtBSUVJUUVnQkNnQ0FDRUNJQVFvQW1naENTQUVLQUowSVFzQ1FBSkFJQlpCQ0hFRVFDQUdRUVJKRFFJZ0ZFVU5BU0FFUWVRQWFpRVFJQVJCNEFCcUlRMGdGRUVEYkNFYklCUkJBWFFoSkVFQUlBNXJJUlVnQkVFY2FpRVNBMEJCQUNFWUEwQUNRQUpBQW44Q1FDQURJZ2dvQWdBaUF3UkFBa0FnQTBHUWdJQUJjUTBBSUFFZ0VpQUVLQUpzSUFOQjd3TnhhaTBBQUVFQ2RHb2lDU2dDQUNJSEtBSUFJZ1pySVFFQ2Z5QUdJQUpCRUhaTkJFQWdBaUFHUVJCMGF5RUNJQUZCZ0lBQ2NRUkFJQWNvQWdRTUFnc2dCeWdDQkNFTUlBa2dCMEVNUVFnZ0FTQUdTU0lLRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUVlnQnkwQUFFSC9BVWNFUUNBRUlBVTJBaEJCQ0NFRklBWkJDSFFnQW1vaEFnd0JDeUFHUVk4QlRRUkFJQVFnQlRZQ0VDQUdRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTElBVkJBV3NoQlNBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dERVVnRENBS0d3d0JDeUFIS0FJRUlRd2dDU0FIUVFoQkRDQUJJQVpKSWdvYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQVNBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNEQUVMSUFGQmp3Rk5CRUFnQkNBRk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBR1FRRjBJZ1pCZ0lBQ1NRMEFDeUFHSVFFZ0RDQU1SU0FLR3d0RkRRQWdBU0FTSUFnb0FnUkJFWFpCQkhFZ0NFRUVheUlNS0FJQVFSTjJRUUZ4SUFOQkRuWkJFSEVnQTBFUWRrSEFBSEVnQTBHcUFYRnljbkp5SWhOQjRMa0JhaTBBQUVFQ2RHb2lDU2dDQUNJSEtBSUFJZ1pySVFFQ2Z5QUdJQUpCRUhaTkJFQWdBaUFHUVJCMGF5RUNJQUZCZ0lBQ2NRUkFJQWNvQWdRTUFnc2dCeWdDQkNFS0lBa2dCMEVNUVFnZ0FTQUdTU0ljRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUVlnQnkwQUFFSC9BVWNFUUNBRUlBVTJBaEJCQ0NFRklBWkJDSFFnQW1vaEFnd0JDeUFHUVk4QlRRUkFJQVFnQlRZQ0VDQUdRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTElBVkJBV3NoQlNBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dDa1VnQ2lBY0d3d0JDeUFIS0FJRUlRb2dDU0FIUVFoQkRDQUJJQVpKSWh3YmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQVNBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNEQUVMSUFGQmp3Rk5CRUFnQkNBRk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBR1FRRjBJZ1pCZ0lBQ1NRMEFDeUFHSVFFZ0NpQUtSU0FjR3dzaEJpQUxJQlVnRGlBR0lCTkI0THNCYWkwQUFITWlCaHMyQWdBZ0RDQU1LQUlBUVNCeU5nSUFJQWdnQ0NnQ0JFRUljallDQkNBRElBWkJFM1J5UVJCeUlRTUxBa0FnQTBHQWdZQUljUTBBSUFFZ0VpQUVLQUpzSUFOQkEzWWlDa0h2QTNGcUxRQUFRUUowYWlJSktBSUFJZ2NvQWdBaUJtc2hBUUovSUFZZ0FrRVFkazBFUUNBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4QkVBZ0J5Z0NCQXdDQ3lBSEtBSUVJUXdnQ1NBSFFReEJDQ0FCSUFaSkloTWJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEJpQUhMUUFBUWY4QlJ3UkFJQVFnQlRZQ0VFRUlJUVVnQmtFSWRDQUNhaUVDREFFTElBWkJqd0ZOQkVBZ0JDQUZOZ0lRSUFaQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBTVJTQU1JQk1iREFFTElBY29BZ1FoRENBSklBZEJDRUVNSUFFZ0Jra2lFeHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkhCRUFnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQVUyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FNSUF4RklCTWJDMFVOQUNBQklCSWdDQ2dDQkVFVWRrRUVjU0FJUVFScklnd29BZ0JCRm5aQkFYRWdBMEVQZGtFUWNTQURRUk4yUWNBQWNTQUtRYW9CY1hKeWNuSWlFMEhndVFGcUxRQUFRUUowYWlJSktBSUFJZ2NvQWdBaUJtc2hBUUovSUFZZ0FrRVFkazBFUUNBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4QkVBZ0J5Z0NCQXdDQ3lBSEtBSUVJUW9nQ1NBSFFReEJDQ0FCSUFaSklod2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEJpQUhMUUFBUWY4QlJ3UkFJQVFnQlRZQ0VFRUlJUVVnQmtFSWRDQUNhaUVDREFFTElBWkJqd0ZOQkVBZ0JDQUZOZ0lRSUFaQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBS1JTQUtJQndiREFFTElBY29BZ1FoQ2lBSklBZEJDRUVNSUFFZ0Jra2lIQnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkhCRUFnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQVUyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FLSUFwRklCd2JDeUVHSUFzZ0ZFRUNkR29nRlNBT0lBWWdFMEhndXdGcUxRQUFjeUlHR3pZQ0FDQU1JQXdvQWdCQmdBSnlOZ0lBSUFnZ0NDZ0NCRUhBQUhJMkFnUWdBeUFHUVJaMGNrR0FBWEloQXdzQ1FDQURRWUNJZ01BQWNRMEFJQUVnRWlBRUtBSnNJQU5CQm5ZaUNrSHZBM0ZxTFFBQVFRSjBhaUlKS0FJQUlnY29BZ0FpQm1zaEFRSi9JQVlnQWtFUWRrMEVRQ0FDSUFaQkVIUnJJUUlnQVVHQWdBSnhCRUFnQnlnQ0JBd0NDeUFIS0FJRUlRd2dDU0FIUVF4QkNDQUJJQVpKSWhNYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQmlBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdCa0VJZENBQ2FpRUNEQUVMSUFaQmp3Rk5CRUFnQkNBRk5nSVFJQVpCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFNUlNBTUlCTWJEQUVMSUFjb0FnUWhEQ0FKSUFkQkNFRU1JQUVnQmtraUV4dHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFQklBY3RBQUJCL3dGSEJFQWdCQ0FGTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBWkJBWFFpQmtHQWdBSkpEUUFMSUFZaEFTQU1JQXhGSUJNYkMwVU5BQ0FCSUJJZ0NDZ0NCRUVYZGtFRWNTQUlRUVJySWd3b0FnQkJHWFpCQVhFZ0EwRVNka0VRY1NBRFFSWjJRY0FBY1NBS1Fhb0JjWEp5Y25JaUUwSGd1UUZxTFFBQVFRSjBhaUlKS0FJQUlnY29BZ0FpQm1zaEFRSi9JQVlnQWtFUWRrMEVRQ0FDSUFaQkVIUnJJUUlnQVVHQWdBSnhCRUFnQnlnQ0JBd0NDeUFIS0FJRUlRb2dDU0FIUVF4QkNDQUJJQVpKSWh3YmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQmlBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdCa0VJZENBQ2FpRUNEQUVMSUFaQmp3Rk5CRUFnQkNBRk5nSVFJQVpCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFLUlNBS0lCd2JEQUVMSUFjb0FnUWhDaUFKSUFkQkNFRU1JQUVnQmtraUhCdHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFQklBY3RBQUJCL3dGSEJFQWdCQ0FGTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBWkJBWFFpQmtHQWdBSkpEUUFMSUFZaEFTQUtJQXBGSUJ3YkN5RUdJQXNnSkVFQ2RHb2dGU0FPSUFZZ0UwSGd1d0ZxTFFBQWN5SUdHellDQUNBTUlBd29BZ0JCZ0JCeU5nSUFJQWdnQ0NnQ0JFR0FCSEkyQWdRZ0F5QUdRUmwwY2tHQUNISWhBd3NnQTBHQXdJQ0FCSEVOQXlBQklCSWdCQ2dDYkNBRFFRbDJJZ3BCN3dOeGFpMEFBRUVDZEdvaUNTZ0NBQ0lCS0FJQUlnWnJJUWNDZnlBR0lBSkJFSFpOQkVBZ0FpQUdRUkIwYXlFQ0lBZEJnSUFDY1FSQUlBRW9BZ1FNQWdzZ0FTZ0NCQ0VNSUFrZ0FVRU1RUWdnQmlBSFN5SVRHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdaQkFXb2hCU0FHTFFBQklRRWdCaTBBQUVIL0FVY0VRQ0FFSUFVMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWd3QkN5QUJRWThCVFFSQUlBUWdCVFlDRUNBQlFRbDBJQUpxSVFKQkJ5RUZEQUVMSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVMSUFWQkFXc2hCU0FDUVFGMElRSWdCMEVCZENJSFFZQ0FBa2tOQUFzZ0RFVWdEQ0FUR3d3QkN5QUJLQUlFSVF3Z0NTQUJRUWhCRENBR0lBZExJaE1iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBU0FITFFBQVFmOEJSd1JBSUFRZ0JUWUNFRUVJSVFVZ0FVRUlkQ0FDYWlFQ0RBRUxJQUZCandGTkJFQWdCQ0FGTmdJUUlBRkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFHUVFGMElnWkJnSUFDU1EwQUN5QUdJUWNnRENBTVJTQVRHd3RGQkVBZ0J5RUJEQVFMSUFjZ0VpQUlLQUlFUVJwMlFRUnhJQWhCQkdzaURDZ0NBRUVjZGtFQmNTQURRUlYyUVJCeElBTkJHWFpCd0FCeElBcEJxZ0Z4Y25KeWNpSVRRZUM1QVdvdEFBQkJBblJxSWdrb0FnQWlDaWdDQUNJQmF5RUdJQUVnQWtFUWRrMEVRQ0FDSUFGQkVIUnJJUUlnQmtHQWdBSnhCRUFnQmlFQkRBTUxJQW9vQWdRaEJ5QUpJQXBCREVFSUlBRWdCa3NpSEJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUZRUUZxSVFvZ0JTMEFBU0VCSUFVdEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFvMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFaQkFYUWlCa0dBZ0FKSkRRQUxJQVloQVNBSFJTQUhJQndiREFNTElBb29BZ1FoQnlBSklBcEJDRUVNSUFFZ0Jrc2lIQnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJRlFRRnFJUW9nQlMwQUFTRUdJQVV0QUFCQi93RkhCRUFnQkNBS05nSVFRUWdoQlNBR1FRaDBJQUpxSVFJTUFRc2dCa0dQQVUwRVFDQUVJQW8yQWhBZ0JrRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBY2dCMFVnSEJzTUFnc2dBU0FOS0FJQUlnWW9BZ0FpQTJzaEFRSi9JQU1nQWtFUWRrMEVRQ0FDSUFOQkVIUnJJUUlnQVVHQWdBSnhCRUFnQmlnQ0JBd0NDeUFHS0FJRUlRY2dEU0FHUVF4QkNDQUJJQU5KSWd3YmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCa0VCYWlFSklBWXRBQUVoQXlBR0xRQUFRZjhCUndSQUlBUWdDVFlDRUVFSUlRVWdBMEVJZENBQ2FpRUNEQUVMSUFOQmp3Rk5CRUFnQkNBSk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFIUlNBSElBd2JEQUVMSUFZb0FnUWhCeUFOSUFaQkNFRU1JQUVnQTBraURCdHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lHUVFGcUlRa2dCaTBBQVNFQklBWXRBQUJCL3dGSEJFQWdCQ0FKTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBazJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEFTQUhJQWRGSUF3YkMwVUVRQ0FOSVFrTUJBc2dBU0FRS0FJQUlnWW9BZ0FpQTJzaEFRSi9JQU1nQWtFUWRrMEVRQ0FDSUFOQkVIUnJJUUlnQVVHQWdBSnhCRUFnQmlnQ0JBd0NDeUFHS0FJRUlRY2dFQ0FHUVF4QkNDQUJJQU5KSWd3YmFpZ0NBQ0lHTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lKUVFGcUlRVWdDUzBBQVNFRElBa3RBQUJCL3dGSEJFQWdCQ0FGTmdJUVFRZ2hCU0FEUVFoMElBSnFJUUlNQVFzZ0EwR1BBVTBFUUNBRUlBVTJBaEFnQTBFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBRkJBWFFpQVVHQWdBSkpEUUFMSUFkRklBY2dEQnNNQVFzZ0JpZ0NCQ0VISUJBZ0JrRUlRUXdnQVNBRFNTSU1HMm9vQWdBaUJqWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUNVRUJhaUVGSUFrdEFBRWhBU0FKTFFBQVFmOEJSd1JBSUFRZ0JUWUNFRUVJSVFVZ0FVRUlkQ0FDYWlFQ0RBRUxJQUZCandGTkJFQWdCQ0FGTmdJUUlBRkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QURJUUVnQnlBSFJTQU1Hd3NoRENBQklBWW9BZ0FpQTJzaEFRSi9JQU1nQWtFUWRrMEVRQ0FDSUFOQkVIUnJJUUlnQVVHQWdBSnhCRUFnQmlnQ0JBd0NDeUFHS0FJRUlRY2dFQ0FHUVF4QkNDQUJJQU5KSWdvYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCa0VCYWlFSklBWXRBQUVoQXlBR0xRQUFRZjhCUndSQUlBUWdDVFlDRUVFSUlRVWdBMEVJZENBQ2FpRUNEQUVMSUFOQmp3Rk5CRUFnQkNBSk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFIUlNBSElBb2JEQUVMSUFZb0FnUWhCeUFRSUFaQkNFRU1JQUVnQTBraUNodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lHUVFGcUlRa2dCaTBBQVNFQklBWXRBQUJCL3dGSEJFQWdCQ0FKTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBazJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEFTQUhJQWRGSUFvYkN5RUdRUUFoQXlBUUlRa0NRQUpBQWtBQ2Z3SkFBa0FnQmlBTVFRRjBjZzRFQUFFREJRZ0xJQUVnRWlBSUtBSUVRUkYyUVFSeElBaEJCR3NpQnlnQ0FFRVRka0VCY1hJaUNrSGd1UUZxTFFBQVFRSjBhaUlKS0FJQUlnWW9BZ0FpQTJzaEFRSi9JQU1nQWtFUWRrMEVRQ0FDSUFOQkVIUnJJUUlnQVVHQWdBSnhCRUFnQmlnQ0JBd0NDeUFHS0FJRUlRd2dDU0FHUVF4QkNDQUJJQU5KSWhNYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCa0VCYWlFSklBWXRBQUVoQXlBR0xRQUFRZjhCUndSQUlBUWdDVFlDRUVFSUlRVWdBMEVJZENBQ2FpRUNEQUVMSUFOQmp3Rk5CRUFnQkNBSk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFNUlNBTUlCTWJEQUVMSUFZb0FnUWhEQ0FKSUFaQkNFRU1JQUVnQTBraUV4dHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lHUVFGcUlRa2dCaTBBQVNFQklBWXRBQUJCL3dGSEJFQWdCQ0FKTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBazJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEFTQU1JQXhGSUJNYkN5RURJQXNnRlNBT0lBTWdDa0hndXdGcUxRQUFjeUlER3pZQ0FDQUhJQWNvQWdCQklISTJBZ0FnQ0NBSUtBSUVRUWh5TmdJRUlBTkJFM1FoV1NBQklCSWdCQ2dDYkMwQUFrRUNkR29pQnlnQ0FDSUdLQUlBSWdOcklRRUNmeUFESUFKQkVIWk5CRUFnQWlBRFFSQjBheUVDSUFGQmdJQUNjUVJBSUFZb0FnUU1BZ3NnQmlnQ0JDRUpJQWNnQmtFTVFRZ2dBU0FEU1NJS0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ1pCQVdvaEJ5QUdMUUFCSVFNZ0JpMEFBRUgvQVVjRVFDQUVJQWMyQWhCQkNDRUZJQU5CQ0hRZ0Ftb2hBZ3dCQ3lBRFFZOEJUUVJBSUFRZ0J6WUNFQ0FEUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQ1VVZ0NTQUtHd3dCQ3lBR0tBSUVJUWtnQnlBR1FRaEJEQ0FCSUFOSklnb2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQmtFQmFpRUhJQVl0QUFFaEFTQUdMUUFBUWY4QlJ3UkFJQVFnQnpZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDREFFTElBRkJqd0ZOQkVBZ0JDQUhOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBRElRRWdDU0FKUlNBS0d3c2hCaUJaUVJCeUlnTWdCa1VOQVJvTElBRWdFaUFJS0FJRVFSUjJRUVJ4SUFoQkJHc2lDU2dDQUVFV2RrRUJjU0FEUVE5MlFSQnhJQU5CRTNaQndBQnhJQU5CQTNaQnFnRnhjbkp5Y2lJVFFlQzVBV290QUFCQkFuUnFJZ3dvQWdBaUJ5Z0NBQ0lHYXlFQkFuOGdCaUFDUVJCMlRRUkFJQUlnQmtFUWRHc2hBaUFCUVlDQUFuRUVRQ0FIS0FJRURBSUxJQWNvQWdRaENpQU1JQWRCREVFSUlBRWdCa2tpREJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VHSUFjdEFBQkIvd0ZIQkVBZ0JDQUZOZ0lRUVFnaEJTQUdRUWgwSUFKcUlRSU1BUXNnQmtHUEFVMEVRQ0FFSUFVMkFoQWdCa0VKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFGQkFYUWlBVUdBZ0FKSkRRQUxJQXBGSUFvZ0RCc01BUXNnQnlnQ0JDRUtJQXdnQjBFSVFRd2dBU0FHU1NJTUcyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ2RCQVdvaEJTQUhMUUFCSVFFZ0J5MEFBRUgvQVVjRVFDQUVJQVUyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3dCQ3lBQlFZOEJUUVJBSUFRZ0JUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0JrRUJkQ0lHUVlDQUFra05BQXNnQmlFQklBb2dDa1VnREJzTElRWWdDeUFVUVFKMGFpQVZJQTRnQmlBVFFlQzdBV290QUFCeklnWWJOZ0lBSUFrZ0NTZ0NBRUdBQW5JMkFnQWdDQ0FJS0FJRVFjQUFjallDQkNBRElBWkJGblJ5UVlBQmNnc2hBeUFCSUJJZ0JDZ0NiQ0FEUVFaMlFlOERjV290QUFCQkFuUnFJZ2tvQWdBaUJ5Z0NBQ0lHYXlFQkFuOGdCaUFDUVJCMlRRUkFJQUlnQmtFUWRHc2hBaUFCUVlDQUFuRUVRQ0FIS0FJRURBSUxJQWNvQWdRaERDQUpJQWRCREVFSUlBRWdCa2tpQ2h0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFrZ0J5MEFBU0VHSUFjdEFBQkIvd0ZIQkVBZ0JDQUpOZ0lRUVFnaEJTQUdRUWgwSUFKcUlRSU1BUXNnQmtHUEFVMEVRQ0FFSUFrMkFoQWdCa0VKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFGQkFYUWlBVUdBZ0FKSkRRQUxJQXhGSUF3Z0Noc01BUXNnQnlnQ0JDRU1JQWtnQjBFSVFRd2dBU0FHU1NJS0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ2RCQVdvaENTQUhMUUFCSVFFZ0J5MEFBRUgvQVVjRVFDQUVJQWsyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3dCQ3lBQlFZOEJUUVJBSUFRZ0NUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0JrRUJkQ0lHUVlDQUFra05BQXNnQmlFQklBd2dERVVnQ2hzTFJRMEJDeUFCSUJJZ0NDZ0NCRUVYZGtFRWNTQUlRUVJySWdrb0FnQkJHWFpCQVhFZ0EwRVNka0VRY1NBRFFSWjJRY0FBY1NBRFFRWjJRYW9CY1hKeWNuSWlFMEhndVFGcUxRQUFRUUowYWlJTUtBSUFJZ2NvQWdBaUJtc2hBUUovSUFZZ0FrRVFkazBFUUNBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4QkVBZ0J5Z0NCQXdDQ3lBSEtBSUVJUW9nRENBSFFReEJDQ0FCSUFaSklnd2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEJpQUhMUUFBUWY4QlJ3UkFJQVFnQlRZQ0VFRUlJUVVnQmtFSWRDQUNhaUVDREFFTElBWkJqd0ZOQkVBZ0JDQUZOZ0lRSUFaQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBS1JTQUtJQXdiREFFTElBY29BZ1FoQ2lBTUlBZEJDRUVNSUFFZ0Jra2lEQnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkhCRUFnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQVUyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FLSUFwRklBd2JDeUVHSUFzZ0pFRUNkR29nRlNBT0lBWWdFMEhndXdGcUxRQUFjeUlHR3pZQ0FDQUpJQWtvQWdCQmdCQnlOZ0lBSUFnZ0NDZ0NCRUdBQkhJMkFnUWdBeUFHUVJsMGNrR0FDSEloQXdzZ0FTQVNJQVFvQW13Z0EwRUpka0h2QTNGcUxRQUFRUUowYWlJSktBSUFJZ2NvQWdBaUJtc2hBUUovSUFZZ0FrRVFkazBFUUNBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4QkVBZ0J5Z0NCQXdDQ3lBSEtBSUVJUXdnQ1NBSFFReEJDQ0FCSUFaSklnb2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEJpQUhMUUFBUWY4QlJ3UkFJQVFnQlRZQ0VFRUlJUVVnQmtFSWRDQUNhaUVDREFFTElBWkJqd0ZOQkVBZ0JDQUZOZ0lRSUFaQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBTVJTQU1JQW9iREFFTElBY29BZ1FoRENBSklBZEJDRUVNSUFFZ0Jra2lDaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkhCRUFnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQVUyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FNSUF4RklBb2JDMFVOQXdzZ0FTQVNJQWdvQWdSQkduWkJCSEVnQ0VFRWF5SU1LQUlBUVJ4MlFRRnhJQU5CRlhaQkVIRWdBMEVaZGtIQUFIRWdBMEVKZGtHcUFYRnljbkp5SWhOQjRMa0JhaTBBQUVFQ2RHb2lDU2dDQUNJS0tBSUFJZ1pySVFFZ0JpQUNRUkIyVFFSQUlBSWdCa0VRZEdzaEFpQUJRWUNBQW5FTkFTQUtLQUlFSVFjZ0NTQUtRUXhCQ0NBQklBWkpJaHdiYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUJVRUJhaUVLSUFVdEFBRWhCaUFGTFFBQVFmOEJSd1JBSUFRZ0NqWUNFRUVJSVFVZ0JrRUlkQ0FDYWlFQ0RBRUxJQVpCandGTkJFQWdCQ0FLTmdJUUlBWkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUhSU0FISUJ3YkRBSUxJQW9vQWdRaEJ5QUpJQXBCQ0VFTUlBRWdCa2tpSEJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUZRUUZxSVFvZ0JTMEFBU0VCSUFVdEFBQkIvd0ZIQkVBZ0JDQUtOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFvMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFaQkFYUWlCa0dBZ0FKSkRRQUxJQVloQVNBSElBZEZJQndiREFFTElBb29BZ1FMSVFZZ0N5QWJRUUowYWlBVklBNGdCaUFUUWVDN0FXb3RBQUJ6SWdjYk5nSUFJQXdnRENnQ0FFR0FnQUZ5TmdJQUlBZ2dDQ2dDQkVHQUlISTJBZ1FnQkNnQ2ZFRUNkQ0FJYWlJR0lBWW9BZ1JCQkhJMkFnUWdCaUFHS0FJTVFRRnlOZ0lNSUFZZ0JpZ0NDQ0FIUVJKMGNrRUNjallDQ0NBRElBZEJISFJ5UVlEQUFISWhBd3NnQ0NBRFFmLy8vN1o3Y1RZQ0FBc2dDRUVFYWlFRElBdEJCR29oQ3lBWVFRRnFJaGdnRkVjTkFBc2dDRUVNYWlFRElBc2dHMEVDZEdvaEN5QVJRUVJxSWhFZ0JDZ0NnQUVpQmtGOGNVa05BQXNNQWdzQ1FDQUdRUVJKRFFBZ0ZBUkFJQVJCNUFCcUlSQWdCRUhnQUdvaERTQVVRUU5zSVJzZ0ZFRUJkQ0VrUVFBZ0Rtc2hGU0FFUVJ4cUlSSURRRUVBSVJnRFFBSkFBa0FDZndKQUlBTWlDQ2dDQUNJREJFQUNRQ0FEUVpDQWdBRnhEUUFnQVNBU0lBUW9BbXdnQTBIdkEzRnFMUUFBUVFKMGFpSUpLQUlBSWdjb0FnQWlCbXNoQVFKL0lBWWdBa0VRZGswRVFDQUNJQVpCRUhScklRSWdBVUdBZ0FKeEJFQWdCeWdDQkF3Q0N5QUhLQUlFSVF3Z0NTQUhRUXhCQ0NBQklBWkpJZ29iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhCaUFITFFBQVFmOEJSd1JBSUFRZ0JUWUNFRUVJSVFVZ0JrRUlkQ0FDYWlFQ0RBRUxJQVpCandGTkJFQWdCQ0FGTmdJUUlBWkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QU1SU0FNSUFvYkRBRUxJQWNvQWdRaERDQUpJQWRCQ0VFTUlBRWdCa2tpQ2h0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VCSUFjdEFBQkIvd0ZIQkVBZ0JDQUZOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFaQkFYUWlCa0dBZ0FKSkRRQUxJQVloQVNBTUlBeEZJQW9iQzBVTkFDQUJJQklnQ0NnQ0JFRVJka0VFY1NBSVFRUnJJZ3dvQWdCQkUzWkJBWEVnQTBFT2RrRVFjU0FEUVJCMlFjQUFjU0FEUWFvQmNYSnljbklpRTBIZ3VRRnFMUUFBUVFKMGFpSUpLQUlBSWdjb0FnQWlCbXNoQVFKL0lBWWdBa0VRZGswRVFDQUNJQVpCRUhScklRSWdBVUdBZ0FKeEJFQWdCeWdDQkF3Q0N5QUhLQUlFSVFvZ0NTQUhRUXhCQ0NBQklBWkpJaHdiYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhCaUFITFFBQVFmOEJSd1JBSUFRZ0JUWUNFRUVJSVFVZ0JrRUlkQ0FDYWlFQ0RBRUxJQVpCandGTkJFQWdCQ0FGTmdJUUlBWkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUtSU0FLSUJ3YkRBRUxJQWNvQWdRaENpQUpJQWRCQ0VFTUlBRWdCa2tpSEJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VCSUFjdEFBQkIvd0ZIQkVBZ0JDQUZOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFaQkFYUWlCa0dBZ0FKSkRRQUxJQVloQVNBS0lBcEZJQndiQ3lFR0lBc2dGU0FPSUFZZ0UwSGd1d0ZxTFFBQWN5SUhHellDQUNBTUlBd29BZ0JCSUhJMkFnQWdDQ0FJS0FJRVFRaHlOZ0lFSUFoQmZpQUVLQUo4YTBFQ2RHb2lCaUFHS0FJRVFZQ0FBbkkyQWdRZ0JpQUdLQUlBSUFkQkgzUnlRWUNBQkhJMkFnQWdCa0VFYXlJR0lBWW9BZ0JCZ0lBSWNqWUNBQ0FESUFkQkUzUnlRUkJ5SVFNTEFrQWdBMEdBZ1lBSWNRMEFJQUVnRWlBRUtBSnNJQU5CQTNZaUNrSHZBM0ZxTFFBQVFRSjBhaUlKS0FJQUlnY29BZ0FpQm1zaEFRSi9JQVlnQWtFUWRrMEVRQ0FDSUFaQkVIUnJJUUlnQVVHQWdBSnhCRUFnQnlnQ0JBd0NDeUFIS0FJRUlRd2dDU0FIUVF4QkNDQUJJQVpKSWhNYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQmlBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdCa0VJZENBQ2FpRUNEQUVMSUFaQmp3Rk5CRUFnQkNBRk5nSVFJQVpCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFNUlNBTUlCTWJEQUVMSUFjb0FnUWhEQ0FKSUFkQkNFRU1JQUVnQmtraUV4dHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFQklBY3RBQUJCL3dGSEJFQWdCQ0FGTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBWkJBWFFpQmtHQWdBSkpEUUFMSUFZaEFTQU1JQXhGSUJNYkMwVU5BQ0FCSUJJZ0NDZ0NCRUVVZGtFRWNTQUlRUVJySWd3b0FnQkJGblpCQVhFZ0EwRVBka0VRY1NBRFFSTjJRY0FBY1NBS1Fhb0JjWEp5Y25JaUUwSGd1UUZxTFFBQVFRSjBhaUlKS0FJQUlnY29BZ0FpQm1zaEFRSi9JQVlnQWtFUWRrMEVRQ0FDSUFaQkVIUnJJUUlnQVVHQWdBSnhCRUFnQnlnQ0JBd0NDeUFIS0FJRUlRb2dDU0FIUVF4QkNDQUJJQVpKSWh3YmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQmlBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdCa0VJZENBQ2FpRUNEQUVMSUFaQmp3Rk5CRUFnQkNBRk5nSVFJQVpCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBQlFRRjBJZ0ZCZ0lBQ1NRMEFDeUFLUlNBS0lCd2JEQUVMSUFjb0FnUWhDaUFKSUFkQkNFRU1JQUVnQmtraUhCdHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFQklBY3RBQUJCL3dGSEJFQWdCQ0FGTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlNQVFzZ0FVR1BBVTBFUUNBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBWkJBWFFpQmtHQWdBSkpEUUFMSUFZaEFTQUtJQXBGSUJ3YkN5RUdJQXNnRkVFQ2RHb2dGU0FPSUFZZ0UwSGd1d0ZxTFFBQWN5SUdHellDQUNBTUlBd29BZ0JCZ0FKeU5nSUFJQWdnQ0NnQ0JFSEFBSEkyQWdRZ0F5QUdRUlowY2tHQUFYSWhBd3NDUUNBRFFZQ0lnTUFBY1EwQUlBRWdFaUFFS0FKc0lBTkJCbllpQ2tIdkEzRnFMUUFBUVFKMGFpSUpLQUlBSWdjb0FnQWlCbXNoQVFKL0lBWWdBa0VRZGswRVFDQUNJQVpCRUhScklRSWdBVUdBZ0FKeEJFQWdCeWdDQkF3Q0N5QUhLQUlFSVF3Z0NTQUhRUXhCQ0NBQklBWkpJaE1iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhCaUFITFFBQVFmOEJSd1JBSUFRZ0JUWUNFRUVJSVFVZ0JrRUlkQ0FDYWlFQ0RBRUxJQVpCandGTkJFQWdCQ0FGTmdJUUlBWkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QU1SU0FNSUJNYkRBRUxJQWNvQWdRaERDQUpJQWRCQ0VFTUlBRWdCa2tpRXh0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VCSUFjdEFBQkIvd0ZIQkVBZ0JDQUZOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFaQkFYUWlCa0dBZ0FKSkRRQUxJQVloQVNBTUlBeEZJQk1iQzBVTkFDQUJJQklnQ0NnQ0JFRVhka0VFY1NBSVFRUnJJZ3dvQWdCQkdYWkJBWEVnQTBFU2RrRVFjU0FEUVJaMlFjQUFjU0FLUWFvQmNYSnljbklpRTBIZ3VRRnFMUUFBUVFKMGFpSUpLQUlBSWdjb0FnQWlCbXNoQVFKL0lBWWdBa0VRZGswRVFDQUNJQVpCRUhScklRSWdBVUdBZ0FKeEJFQWdCeWdDQkF3Q0N5QUhLQUlFSVFvZ0NTQUhRUXhCQ0NBQklBWkpJaHdiYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhCaUFITFFBQVFmOEJSd1JBSUFRZ0JUWUNFRUVJSVFVZ0JrRUlkQ0FDYWlFQ0RBRUxJQVpCandGTkJFQWdCQ0FGTmdJUUlBWkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUtSU0FLSUJ3YkRBRUxJQWNvQWdRaENpQUpJQWRCQ0VFTUlBRWdCa2tpSEJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUhRUUZxSVFVZ0J5MEFBU0VCSUFjdEFBQkIvd0ZIQkVBZ0JDQUZOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFaQkFYUWlCa0dBZ0FKSkRRQUxJQVloQVNBS0lBcEZJQndiQ3lFR0lBc2dKRUVDZEdvZ0ZTQU9JQVlnRTBIZ3V3RnFMUUFBY3lJR0d6WUNBQ0FNSUF3b0FnQkJnQkJ5TmdJQUlBZ2dDQ2dDQkVHQUJISTJBZ1FnQXlBR1FSbDBja0dBQ0hJaEF3c2dBMEdBd0lDQUJIRU5BeUFCSUJJZ0JDZ0NiQ0FEUVFsMklncEI3d054YWkwQUFFRUNkR29pQ1NnQ0FDSUJLQUlBSWdacklRY0NmeUFHSUFKQkVIWk5CRUFnQWlBR1FSQjBheUVDSUFkQmdJQUNjUVJBSUFFb0FnUU1BZ3NnQVNnQ0JDRU1JQWtnQVVFTVFRZ2dCaUFIU3lJVEcyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ1pCQVdvaEJTQUdMUUFCSVFFZ0JpMEFBRUgvQVVjRVFDQUVJQVUyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3dCQ3lBQlFZOEJUUVJBSUFRZ0JUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0IwRUJkQ0lIUVlDQUFra05BQXNnREVVZ0RDQVRHd3dCQ3lBQktBSUVJUXdnQ1NBQlFRaEJEQ0FHSUFkTEloTWJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEFTQUhMUUFBUWY4QlJ3UkFJQVFnQlRZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDREFFTElBRkJqd0ZOQkVBZ0JDQUZOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUdRUUYwSWdaQmdJQUNTUTBBQ3lBR0lRY2dEQ0FNUlNBVEd3dEZCRUFnQnlFQkRBUUxJQWNnRWlBSUtBSUVRUnAyUVFSeElBaEJCR3NpRENnQ0FFRWNka0VCY1NBRFFSVjJRUkJ4SUFOQkdYWkJ3QUJ4SUFwQnFnRnhjbkp5Y2lJVFFlQzVBV290QUFCQkFuUnFJZ2tvQWdBaUNpZ0NBQ0lCYXlFR0lBRWdBa0VRZGswRVFDQUNJQUZCRUhScklRSWdCa0dBZ0FKeEJFQWdCaUVCREFNTElBb29BZ1FoQnlBSklBcEJERUVJSUFFZ0Jrc2lIQnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJRlFRRnFJUW9nQlMwQUFTRUJJQVV0QUFCQi93RkhCRUFnQkNBS05nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQW8yQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FIUlNBSElCd2JEQU1MSUFvb0FnUWhCeUFKSUFwQkNFRU1JQUVnQmtzaUhCdHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lGUVFGcUlRb2dCUzBBQVNFR0lBVXRBQUJCL3dGSEJFQWdCQ0FLTmdJUVFRZ2hCU0FHUVFoMElBSnFJUUlNQVFzZ0JrR1BBVTBFUUNBRUlBbzJBaEFnQmtFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZDeUFGUVFGcklRVWdBa0VCZENFQ0lBRkJBWFFpQVVHQWdBSkpEUUFMSUFjZ0IwVWdIQnNNQWdzZ0FTQU5LQUlBSWdZb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGswRVFDQUNJQU5CRUhScklRSWdBVUdBZ0FKeEJFQWdCaWdDQkF3Q0N5QUdLQUlFSVFjZ0RTQUdRUXhCQ0NBQklBTkpJZ3diYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUJrRUJhaUVKSUFZdEFBRWhBeUFHTFFBQVFmOEJSd1JBSUFRZ0NUWUNFRUVJSVFVZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FKTmdJUUlBTkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUhSU0FISUF3YkRBRUxJQVlvQWdRaEJ5QU5JQVpCQ0VFTUlBRWdBMGtpREJ0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUdRUUZxSVFrZ0JpMEFBU0VCSUFZdEFBQkIvd0ZIQkVBZ0JDQUpOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFrMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQU1oQVNBSElBZEZJQXdiQzBVRVFDQU5JUWtNQkFzZ0FTQVFLQUlBSWdZb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGswRVFDQUNJQU5CRUhScklRSWdBVUdBZ0FKeEJFQWdCaWdDQkF3Q0N5QUdLQUlFSVFjZ0VDQUdRUXhCQ0NBQklBTkpJZ3diYWlnQ0FDSUdOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUpRUUZxSVFVZ0NTMEFBU0VESUFrdEFBQkIvd0ZIQkVBZ0JDQUZOZ0lRUVFnaEJTQURRUWgwSUFKcUlRSU1BUXNnQTBHUEFVMEVRQ0FFSUFVMkFoQWdBMEVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFGQkFYUWlBVUdBZ0FKSkRRQUxJQWRGSUFjZ0RCc01BUXNnQmlnQ0JDRUhJQkFnQmtFSVFRd2dBU0FEU1NJTUcyb29BZ0FpQmpZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQ1VFQmFpRUZJQWt0QUFFaEFTQUpMUUFBUWY4QlJ3UkFJQVFnQlRZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDREFFTElBRkJqd0ZOQkVBZ0JDQUZOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBRElRRWdCeUFIUlNBTUd3c2hEQ0FCSUFZb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGswRVFDQUNJQU5CRUhScklRSWdBVUdBZ0FKeEJFQWdCaWdDQkF3Q0N5QUdLQUlFSVFjZ0VDQUdRUXhCQ0NBQklBTkpJZ29iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUJrRUJhaUVKSUFZdEFBRWhBeUFHTFFBQVFmOEJSd1JBSUFRZ0NUWUNFRUVJSVFVZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FKTmdJUUlBTkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUhSU0FISUFvYkRBRUxJQVlvQWdRaEJ5QVFJQVpCQ0VFTUlBRWdBMGtpQ2h0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUdRUUZxSVFrZ0JpMEFBU0VCSUFZdEFBQkIvd0ZIQkVBZ0JDQUpOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFrMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQU1oQVNBSElBZEZJQW9iQ3lFR1FRQWhBeUFRSVFrQ1FBSkFBa0FDZndKQUFrQWdCaUFNUVFGMGNnNEVBQUVEQlFnTElBRWdFaUFJS0FJRVFSRjJRUVJ4SUFoQkJHc2lCeWdDQUVFVGRrRUJjWElpQ2tIZ3VRRnFMUUFBUVFKMGFpSUpLQUlBSWdZb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGswRVFDQUNJQU5CRUhScklRSWdBVUdBZ0FKeEJFQWdCaWdDQkF3Q0N5QUdLQUlFSVF3Z0NTQUdRUXhCQ0NBQklBTkpJaE1iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUJrRUJhaUVKSUFZdEFBRWhBeUFHTFFBQVFmOEJSd1JBSUFRZ0NUWUNFRUVJSVFVZ0EwRUlkQ0FDYWlFQ0RBRUxJQU5CandGTkJFQWdCQ0FKTmdJUUlBTkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUVLQUlNUVFGcU5nSU1JQUpCZ1A0RGFpRUNRUWdoQlFzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QU1SU0FNSUJNYkRBRUxJQVlvQWdRaERDQUpJQVpCQ0VFTUlBRWdBMGtpRXh0cUtBSUFOZ0lBQTBBQ1FDQUZEUUFnQkNnQ0VDSUdRUUZxSVFrZ0JpMEFBU0VCSUFZdEFBQkIvd0ZIQkVBZ0JDQUpOZ0lRUVFnaEJTQUJRUWgwSUFKcUlRSU1BUXNnQVVHUEFVMEVRQ0FFSUFrMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkN5QUZRUUZySVFVZ0FrRUJkQ0VDSUFOQkFYUWlBMEdBZ0FKSkRRQUxJQU1oQVNBTUlBeEZJQk1iQ3lFRElBc2dGU0FPSUFNZ0NrSGd1d0ZxTFFBQWN5SUdHellDQUNBSElBY29BZ0JCSUhJMkFnQWdDQ0FJS0FJRVFRaHlOZ0lFSUFoQmZpQUVLQUo4YTBFQ2RHb2lBeUFES0FJRVFZQ0FBbkkyQWdRZ0F5QURLQUlBSUFaQkgzUnlRWUNBQkhJMkFnQWdBMEVFYXlJRElBTW9BZ0JCZ0lBSWNqWUNBQ0FHUVJOMElWb2dBU0FTSUFRb0Ftd3RBQUpCQW5ScUlnY29BZ0FpQmlnQ0FDSURheUVCQW44Z0F5QUNRUkIyVFFSQUlBSWdBMEVRZEdzaEFpQUJRWUNBQW5FRVFDQUdLQUlFREFJTElBWW9BZ1FoQ1NBSElBWkJERUVJSUFFZ0Ewa2lDaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJR1FRRnFJUWNnQmkwQUFTRURJQVl0QUFCQi93RkhCRUFnQkNBSE5nSVFRUWdoQlNBRFFRaDBJQUpxSVFJTUFRc2dBMEdQQVUwRVFDQUVJQWMyQWhBZ0EwRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBbEZJQWtnQ2hzTUFRc2dCaWdDQkNFSklBY2dCa0VJUVF3Z0FTQURTU0lLRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnWkJBV29oQnlBR0xRQUJJUUVnQmkwQUFFSC9BVWNFUUNBRUlBYzJBaEJCQ0NFRklBRkJDSFFnQW1vaEFnd0JDeUFCUVk4QlRRUkFJQVFnQnpZQ0VDQUJRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTElBVkJBV3NoQlNBQ1FRRjBJUUlnQTBFQmRDSURRWUNBQWtrTkFBc2dBeUVCSUFrZ0NVVWdDaHNMSVFZZ1drRVFjaUlESUFaRkRRRWFDeUFCSUJJZ0NDZ0NCRUVVZGtFRWNTQUlRUVJySWdrb0FnQkJGblpCQVhFZ0EwRVBka0VRY1NBRFFSTjJRY0FBY1NBRFFRTjJRYW9CY1hKeWNuSWlFMEhndVFGcUxRQUFRUUowYWlJTUtBSUFJZ2NvQWdBaUJtc2hBUUovSUFZZ0FrRVFkazBFUUNBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4QkVBZ0J5Z0NCQXdDQ3lBSEtBSUVJUW9nRENBSFFReEJDQ0FCSUFaSklnd2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEJpQUhMUUFBUWY4QlJ3UkFJQVFnQlRZQ0VFRUlJUVVnQmtFSWRDQUNhaUVDREFFTElBWkJqd0ZOQkVBZ0JDQUZOZ0lRSUFaQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBS1JTQUtJQXdiREFFTElBY29BZ1FoQ2lBTUlBZEJDRUVNSUFFZ0Jra2lEQnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkhCRUFnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQVUyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FLSUFwRklBd2JDeUVHSUFzZ0ZFRUNkR29nRlNBT0lBWWdFMEhndXdGcUxRQUFjeUlHR3pZQ0FDQUpJQWtvQWdCQmdBSnlOZ0lBSUFnZ0NDZ0NCRUhBQUhJMkFnUWdBeUFHUVJaMGNrR0FBWElMSVFNZ0FTQVNJQVFvQW13Z0EwRUdka0h2QTNGcUxRQUFRUUowYWlJSktBSUFJZ2NvQWdBaUJtc2hBUUovSUFZZ0FrRVFkazBFUUNBQ0lBWkJFSFJySVFJZ0FVR0FnQUp4QkVBZ0J5Z0NCQXdDQ3lBSEtBSUVJUXdnQ1NBSFFReEJDQ0FCSUFaSklnb2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUpJQWN0QUFFaEJpQUhMUUFBUWY4QlJ3UkFJQVFnQ1RZQ0VFRUlJUVVnQmtFSWRDQUNhaUVDREFFTElBWkJqd0ZOQkVBZ0JDQUpOZ0lRSUFaQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBTVJTQU1JQW9iREFFTElBY29BZ1FoRENBSklBZEJDRUVNSUFFZ0Jra2lDaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUWtnQnkwQUFTRUJJQWN0QUFCQi93RkhCRUFnQkNBSk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTUFRc2dBVUdQQVUwRVFDQUVJQWsyQWhBZ0FVRUpkQ0FDYWlFQ1FRY2hCUXdCQ3lBRUlBUW9BZ3hCQVdvMkFnd2dBa0dBL2dOcUlRSkJDQ0VGQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FNSUF4RklBb2JDMFVOQVFzZ0FTQVNJQWdvQWdSQkYzWkJCSEVnQ0VFRWF5SUpLQUlBUVJsMlFRRnhJQU5CRW5aQkVIRWdBMEVXZGtIQUFIRWdBMEVHZGtHcUFYRnljbkp5SWhOQjRMa0JhaTBBQUVFQ2RHb2lEQ2dDQUNJSEtBSUFJZ1pySVFFQ2Z5QUdJQUpCRUhaTkJFQWdBaUFHUVJCMGF5RUNJQUZCZ0lBQ2NRUkFJQWNvQWdRTUFnc2dCeWdDQkNFS0lBd2dCMEVNUVFnZ0FTQUdTU0lNRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUVlnQnkwQUFFSC9BVWNFUUNBRUlBVTJBaEJCQ0NFRklBWkJDSFFnQW1vaEFnd0JDeUFHUVk4QlRRUkFJQVFnQlRZQ0VDQUdRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTElBVkJBV3NoQlNBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dDa1VnQ2lBTUd3d0JDeUFIS0FJRUlRb2dEQ0FIUVFoQkRDQUJJQVpKSWd3YmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQVNBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNEQUVMSUFGQmp3Rk5CRUFnQkNBRk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBR1FRRjBJZ1pCZ0lBQ1NRMEFDeUFHSVFFZ0NpQUtSU0FNR3dzaEJpQUxJQ1JCQW5ScUlCVWdEaUFHSUJOQjRMc0JhaTBBQUhNaUJoczJBZ0FnQ1NBSktBSUFRWUFRY2pZQ0FDQUlJQWdvQWdSQmdBUnlOZ0lFSUFNZ0JrRVpkSEpCZ0FoeUlRTUxJQUVnRWlBRUtBSnNJQU5CQ1haQjd3TnhhaTBBQUVFQ2RHb2lDU2dDQUNJSEtBSUFJZ1pySVFFQ2Z5QUdJQUpCRUhaTkJFQWdBaUFHUVJCMGF5RUNJQUZCZ0lBQ2NRUkFJQWNvQWdRTUFnc2dCeWdDQkNFTUlBa2dCMEVNUVFnZ0FTQUdTU0lLRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUVlnQnkwQUFFSC9BVWNFUUNBRUlBVTJBaEJCQ0NFRklBWkJDSFFnQW1vaEFnd0JDeUFHUVk4QlRRUkFJQVFnQlRZQ0VDQUdRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTElBVkJBV3NoQlNBQ1FRRjBJUUlnQVVFQmRDSUJRWUNBQWtrTkFBc2dERVVnRENBS0d3d0JDeUFIS0FJRUlRd2dDU0FIUVFoQkRDQUJJQVpKSWdvYmFpZ0NBRFlDQUFOQUFrQWdCUTBBSUFRb0FoQWlCMEVCYWlFRklBY3RBQUVoQVNBSExRQUFRZjhCUndSQUlBUWdCVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNEQUVMSUFGQmp3Rk5CRUFnQkNBRk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRc2dCVUVCYXlFRklBSkJBWFFoQWlBR1FRRjBJZ1pCZ0lBQ1NRMEFDeUFHSVFFZ0RDQU1SU0FLR3d0RkRRTUxJQUVnRWlBSUtBSUVRUnAyUVFSeElBaEJCR3NpRENnQ0FFRWNka0VCY1NBRFFSVjJRUkJ4SUFOQkdYWkJ3QUJ4SUFOQkNYWkJxZ0Z4Y25KeWNpSVRRZUM1QVdvdEFBQkJBblJxSWdrb0FnQWlDaWdDQUNJR2F5RUJJQVlnQWtFUWRrMEVRQ0FDSUFaQkVIUnJJUUlnQVVHQWdBSnhEUUVnQ2lnQ0JDRUhJQWtnQ2tFTVFRZ2dBU0FHU1NJY0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ1ZCQVdvaENpQUZMUUFCSVFZZ0JTMEFBRUgvQVVjRVFDQUVJQW8yQWhCQkNDRUZJQVpCQ0hRZ0Ftb2hBZ3dCQ3lBR1FZOEJUUVJBSUFRZ0NqWUNFQ0FHUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQjBVZ0J5QWNHd3dDQ3lBS0tBSUVJUWNnQ1NBS1FRaEJEQ0FCSUFaSklod2JhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQlVFQmFpRUtJQVV0QUFFaEFTQUZMUUFBUWY4QlJ3UkFJQVFnQ2pZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDREFFTElBRkJqd0ZOQkVBZ0JDQUtOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXNnQlVFQmF5RUZJQUpCQVhRaEFpQUdRUUYwSWdaQmdJQUNTUTBBQ3lBR0lRRWdCeUFIUlNBY0d3d0JDeUFLS0FJRUN5RUdJQXNnRzBFQ2RHb2dGU0FPSUFZZ0UwSGd1d0ZxTFFBQWN5SUhHellDQUNBTUlBd29BZ0JCZ0lBQmNqWUNBQ0FJSUFnb0FnUkJnQ0J5TmdJRUlBUW9BbnhCQW5RZ0NHb2lCaUFHS0FJRVFRUnlOZ0lFSUFZZ0JpZ0NERUVCY2pZQ0RDQUdJQVlvQWdnZ0IwRVNkSEpCQW5JMkFnZ2dBeUFIUVJ4MGNrR0F3QUJ5SVFNTElBZ2dBMEgvLy8rMmUzRTJBZ0FMSUFoQkJHb2hBeUFMUVFScUlRc2dHRUVCYWlJWUlCUkhEUUFMSUFoQkRHb2hBeUFMSUJ0QkFuUnFJUXNnRVVFRWFpSVJJQVFvQW9BQklnWkJmSEZKRFFBTERBRUxRUVFnQmtGOGNTSURJQU5CQkUwYlFRRnJJZ05CZkhGQkJHb2hFU0FISUFOQkFYUkJlSEZxUVJScUlRTUxJQVFnQlRZQ0NDQUVJQUUyQWdRZ0JDQUNOZ0lBSUFRZ0NUWUNhQ0FVUlEwRUlBWWdFVTBOQkFOQVFRQWhCU0FSSUFRb0FvQUJSd1JBQTBBZ0JDQURJQXNnQlNBVWJFRUNkR29nRGlBRlFRQVFVU0FGUVFGcUlnVWdCQ2dDZ0FFZ0VXdEpEUUFMQ3lBRElBTW9BZ0JCLy8vL3RudHhOZ0lBSUF0QkJHb2hDeUFEUVFScUlRTWdGMEVCYWlJWElCUkhEUUFMREFRTFFRUWdCa0Y4Y1NJRElBTkJCRTBiUVFGcklnTkJmSEZCQkdvaEVTQUhJQU5CQVhSQmVIRnFRUlJxSVFNTElBUWdCVFlDQ0NBRUlBRTJBZ1FnQkNBQ05nSUFJQVFnQ1RZQ2FDQVVSUTBDSUFZZ0VVME5BZ05BUVFBaEJTQVJJQVFvQW9BQlJ3UkFBMEFnQkNBRElBc2dCU0FVYkVFQ2RHb2dEaUFGUVFFUVVTQUZRUUZxSWdVZ0JDZ0NnQUVnRVd0SkRRQUxDeUFESUFNb0FnQkIvLy8vdG50eE5nSUFJQXRCQkdvaEN5QURRUVJxSVFNZ0YwRUJhaUlYSUJSSERRQUxEQUlMQTBCQkFDRU1BMEFnQXlFUkFrQUNRQUovQWtBQ1FDQUdJZzBvQWdBaUJrVUVRQ0FCSUJBb0FnQWlBeWdDQUNJR2F5RUJBbjhnQmlBQ1FSQjJTd1JBSUFNb0FnUWhCeUFRSUFOQkNFRU1JQUVnQmtraUNodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lEUVFGcUlRa2dBeTBBQVNFQklBTXRBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQ1RZQ0VDQUJRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdDVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBWkJBWFFpQmtHQWdBSkpEUUFMSUFZaEFTQUhJQWRGSUFvYkRBRUxJQUlnQmtFUWRHc2hBaUFCUVlDQUFuRkZCRUFnQXlnQ0JDRUhJQkFnQTBFTVFRZ2dBU0FHU1NJS0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ1pCQVdvaENTQUdMUUFCSVFNZ0JpMEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTUFnc2dCQ0FKTmdJUUlBTkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUpOZ0lRUVFnaEJTQURRUWgwSUFKcUlRSUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQjBVZ0J5QUtHd3dCQ3lBREtBSUVDMFVFUUNBUUlRa01CZ3NnQVNBSUtBSUFJZ01vQWdBaUJtc2hBUUovSUFZZ0FrRVFka3NFUUNBREtBSUVJUWNnQ0NBRFFRaEJEQ0FCSUFaSklnb2JhaWdDQUNJRE5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSlFRRnFJUVVnQ1MwQUFTRUJJQWt0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FISUFkRklBb2JEQUVMSUFJZ0JrRVFkR3NoQWlBQlFZQ0FBbkZGQkVBZ0F5Z0NCQ0VISUFnZ0EwRU1RUWdnQVNBR1NTSUtHMm9vQWdBaUF6WUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUNVRUJhaUVGSUFrdEFBRWhCaUFKTFFBQVFmOEJSZ1JBSUFaQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQmtFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFaQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUhSU0FISUFvYkRBRUxJQU1vQWdRTElRb2dBU0FES0FJQUlnWnJJUUVDZnlBR0lBSkJFSFpMQkVBZ0F5Z0NCQ0VISUFnZ0EwRUlRUXdnQVNBR1NTSU9HMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdOQkFXb2hDU0FETFFBQklRRWdBeTBBQUVIL0FVWUVRQ0FCUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBSk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FKTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdCa0VCZENJR1FZQ0FBa2tOQUFzZ0JpRUJJQWNnQjBVZ0Roc01BUXNnQWlBR1FSQjBheUVDSUFGQmdJQUNjVVVFUUNBREtBSUVJUWNnQ0NBRFFReEJDQ0FCSUFaSklnNGJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQmtFQmFpRUpJQVl0QUFFaEF5QUdMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFrMkFoQWdBMEVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQWsyQWhCQkNDRUZJQU5CQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBSFJTQUhJQTRiREFFTElBTW9BZ1FMSVFOQkFDRUdJQWdoQ1FKQUFrQUNRQUovQWtBQ1FDQURJQXBCQVhSeURnUUFBUU1GQ2dzZ0FTQUxJQTBvQWdSQkVYWkJCSEVnRFVFRWF5SUhLQUlBUVJOMlFRRnhjaUlPUWVDNUFXb3RBQUJCQW5ScUlna29BZ0FpQXlnQ0FDSUdheUVCQW44Z0JpQUNRUkIyU3dSQUlBTW9BZ1FoQ2lBSklBTkJDRUVNSUFFZ0Jra2lFaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJRFFRRnFJUWtnQXkwQUFTRUJJQU10QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0NUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQ1RZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQVpCQVhRaUJrR0FnQUpKRFFBTElBWWhBU0FLSUFwRklCSWJEQUVMSUFJZ0JrRVFkR3NoQWlBQlFZQ0FBbkZGQkVBZ0F5Z0NCQ0VLSUFrZ0EwRU1RUWdnQVNBR1NTSVNHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdaQkFXb2hDU0FHTFFBQklRTWdCaTBBQUVIL0FVWUVRQ0FEUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBSk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FKTmdJUVFRZ2hCU0FEUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0NrVWdDaUFTR3d3QkN5QURLQUlFQ3lFRElCRWdFeUFVSUFNZ0RrSGd1d0ZxTFFBQWN5SURHellDQUNBSElBY29BZ0JCSUhJMkFnQWdEU0FOS0FJRVFRaHlOZ0lFSUFOQkUzUWhXeUFCSUFzZ0JDZ0NiQzBBQWtFQ2RHb2lCeWdDQUNJREtBSUFJZ1pySVFFQ2Z5QUdJQUpCRUhaTEJFQWdBeWdDQkNFSklBY2dBMEVJUVF3Z0FTQUdTU0lPRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnTkJBV29oQnlBRExRQUJJUUVnQXkwQUFFSC9BVVlFUUNBQlFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVNQWdzZ0JDQUhOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBSE5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTElBVkJBV3NoQlNBQ1FRRjBJUUlnQmtFQmRDSUdRWUNBQWtrTkFBc2dCaUVCSUFrZ0NVVWdEaHNNQVFzZ0FpQUdRUkIwYXlFQ0lBRkJnSUFDY1VVRVFDQURLQUlFSVFrZ0J5QURRUXhCQ0NBQklBWkpJZzRiYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUJrRUJhaUVISUFZdEFBRWhBeUFHTFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBYzJBaEFnQTBFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFjMkFoQkJDQ0VGSUFOQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QUpSU0FKSUE0YkRBRUxJQU1vQWdRTElRTWdXMEVRY2lJR0lBTkZEUUVhQ3lBQklBc2dEU2dDQkVFVWRrRUVjU0FOUVFScklna29BZ0JCRm5aQkFYRWdCa0VQZGtFUWNTQUdRUk4yUWNBQWNTQUdRUU4yUWFvQmNYSnljbklpRWtIZ3VRRnFMUUFBUVFKMGFpSUtLQUlBSWdjb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGtzRVFDQUhLQUlFSVE0Z0NpQUhRUWhCRENBQklBTkpJZ29iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBU0FITFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QURJUUVnRGlBT1JTQUtHd3dCQ3lBQ0lBTkJFSFJySVFJZ0FVR0FnQUp4UlFSQUlBY29BZ1FoRGlBS0lBZEJERUVJSUFFZ0Ewa2lDaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRURJQWN0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FEUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQTBFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBNUZJQTRnQ2hzTUFRc2dCeWdDQkFzaEF5QVJJQk1nRkNBRElCSkI0THNCYWkwQUFITWlBeHMyQW9BQ0lBa2dDU2dDQUVHQUFuSTJBZ0FnRFNBTktBSUVRY0FBY2pZQ0JDQUdJQU5CRm5SeVFZQUJjZ3NoQmlBQklBc2dCQ2dDYkNBR1FRWjJRZThEY1dvdEFBQkJBblJxSWdrb0FnQWlCeWdDQUNJRGF5RUJBbjhnQXlBQ1FSQjJTd1JBSUFjb0FnUWhDaUFKSUFkQkNFRU1JQUVnQTBraURodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRa2dCeTBBQVNFQklBY3RBQUJCL3dGR0JFQWdBVUdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQ1RZQ0VDQUJRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdDVFlDRUVFSUlRVWdBVUVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBTkJBWFFpQTBHQWdBSkpEUUFMSUFNaEFTQUtJQXBGSUE0YkRBRUxJQUlnQTBFUWRHc2hBaUFCUVlDQUFuRkZCRUFnQnlnQ0JDRUtJQWtnQjBFTVFRZ2dBU0FEU1NJT0cyb29BZ0EyQWdBRFFBSkFJQVVOQUNBRUtBSVFJZ2RCQVdvaENTQUhMUUFCSVFNZ0J5MEFBRUgvQVVZRVFDQURRWkFCVHdSQUlBUWdCQ2dDREVFQmFqWUNEQ0FDUVlEK0Eyb2hBa0VJSVFVTUFnc2dCQ0FKTmdJUUlBTkJDWFFnQW1vaEFrRUhJUVVNQVFzZ0JDQUpOZ0lRUVFnaEJTQURRUWgwSUFKcUlRSUxJQVZCQVdzaEJTQUNRUUYwSVFJZ0FVRUJkQ0lCUVlDQUFra05BQXNnQ2tVZ0NpQU9Hd3dCQ3lBSEtBSUVDMFVOQVFzZ0FTQUxJQTBvQWdSQkYzWkJCSEVnRFVFRWF5SUpLQUlBUVJsMlFRRnhJQVpCRW5aQkVIRWdCa0VXZGtIQUFIRWdCa0VHZGtHcUFYRnljbkp5SWhKQjRMa0JhaTBBQUVFQ2RHb2lDaWdDQUNJSEtBSUFJZ05ySVFFQ2Z5QURJQUpCRUhaTEJFQWdCeWdDQkNFT0lBb2dCMEVJUVF3Z0FTQURTU0lLRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUUVnQnkwQUFFSC9BVVlFUUNBQlFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVNQWdzZ0JDQUZOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTElBVkJBV3NoQlNBQ1FRRjBJUUlnQTBFQmRDSURRWUNBQWtrTkFBc2dBeUVCSUE0Z0RrVWdDaHNNQVFzZ0FpQURRUkIwYXlFQ0lBRkJnSUFDY1VVRVFDQUhLQUlFSVE0Z0NpQUhRUXhCQ0NBQklBTkpJZ29iYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBeUFITFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQTBFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFOQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QU9SU0FPSUFvYkRBRUxJQWNvQWdRTElRTWdFU0FUSUJRZ0F5QVNRZUM3QVdvdEFBQnpJZ01iTmdLQUJDQUpJQWtvQWdCQmdCQnlOZ0lBSUEwZ0RTZ0NCRUdBQkhJMkFnUWdCaUFEUVJsMGNrR0FDSEloQmdzZ0FTQUxJQVFvQW13Z0JrRUpka0h2QTNGcUxRQUFRUUowYWlJSktBSUFJZ2NvQWdBaUEyc2hBUUovSUFNZ0FrRVFka3NFUUNBSEtBSUVJUW9nQ1NBSFFRaEJEQ0FCSUFOSklnNGJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEFTQUhMUUFBUWY4QlJnUkFJQUZCa0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBRElRRWdDaUFLUlNBT0d3d0JDeUFDSUFOQkVIUnJJUUlnQVVHQWdBSnhSUVJBSUFjb0FnUWhDaUFKSUFkQkRFRUlJQUVnQTBraURodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFRElBY3RBQUJCL3dGR0JFQWdBMEdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQlRZQ0VDQURRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCVFlDRUVFSUlRVWdBMEVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBRkJBWFFpQVVHQWdBSkpEUUFMSUFwRklBb2dEaHNNQVFzZ0J5Z0NCQXRGRFFVTElBRWdDeUFOS0FJRVFScDJRUVJ4SUExQkJHc2lEaWdDQUVFY2RrRUJjU0FHUVJWMlFSQnhJQVpCR1haQndBQnhJQVpCQ1haQnFnRnhjbkp5Y2lJS1FlQzVBV290QUFCQkFuUnFJZ2tvQWdBaUJ5Z0NBQ0lEYXlFQklBTWdBa0VRZGtzRVFDQUhLQUlFSVJJZ0NTQUhRUWhCRENBQklBTkpJaFViYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBU0FITFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QURJUUVnRWlBU1JTQVZHd3dFQ3lBQ0lBTkJFSFJySVFJZ0FVR0FnQUp4RFFFZ0J5Z0NCQ0VTSUFrZ0IwRU1RUWdnQVNBRFNTSVZHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdkQkFXb2hCU0FITFFBQklRTWdCeTBBQUVIL0FVWUVRQ0FEUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBRk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FGTmdJUVFRZ2hCU0FEUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0VrVWdFaUFWR3d3REN3SkFJQVpCa0lDQUFYRU5BQ0FCSUFzZ0JDZ0NiQ0FHUWU4RGNXb3RBQUJCQW5ScUlna29BZ0FpQnlnQ0FDSURheUVCQW44Z0F5QUNRUkIyU3dSQUlBY29BZ1FoQ2lBSklBZEJDRUVNSUFFZ0Ewa2lEaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRUJJQWN0QUFCQi93RkdCRUFnQVVHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FCUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQVVFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQU5CQVhRaUEwR0FnQUpKRFFBTElBTWhBU0FLSUFwRklBNGJEQUVMSUFJZ0EwRVFkR3NoQWlBQlFZQ0FBbkZGQkVBZ0J5Z0NCQ0VLSUFrZ0IwRU1RUWdnQVNBRFNTSU9HMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdkQkFXb2hCU0FITFFBQklRTWdCeTBBQUVIL0FVWUVRQ0FEUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBRk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FGTmdJUVFRZ2hCU0FEUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0NrVWdDaUFPR3d3QkN5QUhLQUlFQzBVTkFDQUJJQXNnRFNnQ0JFRVJka0VFY1NBTlFRUnJJZ29vQWdCQkUzWkJBWEVnQmtFT2RrRVFjU0FHUVJCMlFjQUFjU0FHUWFvQmNYSnljbklpRWtIZ3VRRnFMUUFBUVFKMGFpSUpLQUlBSWdjb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGtzRVFDQUhLQUlFSVE0Z0NTQUhRUWhCRENBQklBTkpJaFViYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBU0FITFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QURJUUVnRGlBT1JTQVZHd3dCQ3lBQ0lBTkJFSFJySVFJZ0FVR0FnQUp4UlFSQUlBY29BZ1FoRGlBSklBZEJERUVJSUFFZ0Ewa2lGUnRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRURJQWN0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FEUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQTBFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBNUZJQTRnRlJzTUFRc2dCeWdDQkFzaEF5QVJJQk1nRkNBRElCSkI0THNCYWkwQUFITWlBeHMyQWdBZ0NpQUtLQUlBUVNCeU5nSUFJQTBnRFNnQ0JFRUljallDQkNBR0lBTkJFM1J5UVJCeUlRWUxBa0FnQmtHQWdZQUljUTBBSUFFZ0N5QUVLQUpzSUFaQkEzWWlEa0h2QTNGcUxRQUFRUUowYWlJSktBSUFJZ2NvQWdBaUEyc2hBUUovSUFNZ0FrRVFka3NFUUNBSEtBSUVJUW9nQ1NBSFFRaEJEQ0FCSUFOSkloSWJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEFTQUhMUUFBUWY4QlJnUkFJQUZCa0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBRElRRWdDaUFLUlNBU0d3d0JDeUFDSUFOQkVIUnJJUUlnQVVHQWdBSnhSUVJBSUFjb0FnUWhDaUFKSUFkQkRFRUlJQUVnQTBraUVodHFLQUlBTmdJQUEwQUNRQ0FGRFFBZ0JDZ0NFQ0lIUVFGcUlRVWdCeTBBQVNFRElBY3RBQUJCL3dGR0JFQWdBMEdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQWtHQS9nTnFJUUpCQ0NFRkRBSUxJQVFnQlRZQ0VDQURRUWwwSUFKcUlRSkJCeUVGREFFTElBUWdCVFlDRUVFSUlRVWdBMEVJZENBQ2FpRUNDeUFGUVFGcklRVWdBa0VCZENFQ0lBRkJBWFFpQVVHQWdBSkpEUUFMSUFwRklBb2dFaHNNQVFzZ0J5Z0NCQXRGRFFBZ0FTQUxJQTBvQWdSQkZIWkJCSEVnRFVFRWF5SUtLQUlBUVJaMlFRRnhJQVpCRDNaQkVIRWdCa0VUZGtIQUFIRWdEa0dxQVhGeWNuSnlJaEpCNExrQmFpMEFBRUVDZEdvaUNTZ0NBQ0lIS0FJQUlnTnJJUUVDZnlBRElBSkJFSFpMQkVBZ0J5Z0NCQ0VPSUFrZ0IwRUlRUXdnQVNBRFNTSVZHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdkQkFXb2hCU0FITFFBQklRRWdCeTBBQUVIL0FVWUVRQ0FCUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBRk5nSVFJQUZCQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FGTmdJUVFRZ2hCU0FCUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBMEVCZENJRFFZQ0FBa2tOQUFzZ0F5RUJJQTRnRGtVZ0ZSc01BUXNnQWlBRFFSQjBheUVDSUFGQmdJQUNjVVVFUUNBSEtBSUVJUTRnQ1NBSFFReEJDQ0FCSUFOSkloVWJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEF5QUhMUUFBUWY4QlJnUkFJQU5Ca0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBMEVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQU5CQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQUJRUUYwSWdGQmdJQUNTUTBBQ3lBT1JTQU9JQlViREFFTElBY29BZ1FMSVFNZ0VTQVRJQlFnQXlBU1FlQzdBV290QUFCeklnTWJOZ0tBQWlBS0lBb29BZ0JCZ0FKeU5nSUFJQTBnRFNnQ0JFSEFBSEkyQWdRZ0JpQURRUlowY2tHQUFYSWhCZ3NDUUNBR1FZQ0lnTUFBY1EwQUlBRWdDeUFFS0FKc0lBWkJCbllpRGtIdkEzRnFMUUFBUVFKMGFpSUpLQUlBSWdjb0FnQWlBMnNoQVFKL0lBTWdBa0VRZGtzRVFDQUhLQUlFSVFvZ0NTQUhRUWhCRENBQklBTkpJaEliYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBU0FITFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFEUVFGMElnTkJnSUFDU1EwQUN5QURJUUVnQ2lBS1JTQVNHd3dCQ3lBQ0lBTkJFSFJySVFJZ0FVR0FnQUp4UlFSQUlBY29BZ1FoQ2lBSklBZEJERUVJSUFFZ0Ewa2lFaHRxS0FJQU5nSUFBMEFDUUNBRkRRQWdCQ2dDRUNJSFFRRnFJUVVnQnkwQUFTRURJQWN0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0FrR0EvZ05xSVFKQkNDRUZEQUlMSUFRZ0JUWUNFQ0FEUVFsMElBSnFJUUpCQnlFRkRBRUxJQVFnQlRZQ0VFRUlJUVVnQTBFSWRDQUNhaUVDQ3lBRlFRRnJJUVVnQWtFQmRDRUNJQUZCQVhRaUFVR0FnQUpKRFFBTElBcEZJQW9nRWhzTUFRc2dCeWdDQkF0RkRRQWdBU0FMSUEwb0FnUkJGM1pCQkhFZ0RVRUVheUlLS0FJQVFSbDJRUUZ4SUFaQkVuWkJFSEVnQmtFV2RrSEFBSEVnRGtHcUFYRnljbkp5SWhKQjRMa0JhaTBBQUVFQ2RHb2lDU2dDQUNJSEtBSUFJZ05ySVFFQ2Z5QURJQUpCRUhaTEJFQWdCeWdDQkNFT0lBa2dCMEVJUVF3Z0FTQURTU0lWRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUUVnQnkwQUFFSC9BVVlFUUNBQlFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVNQWdzZ0JDQUZOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTElBVkJBV3NoQlNBQ1FRRjBJUUlnQTBFQmRDSURRWUNBQWtrTkFBc2dBeUVCSUE0Z0RrVWdGUnNNQVFzZ0FpQURRUkIwYXlFQ0lBRkJnSUFDY1VVRVFDQUhLQUlFSVE0Z0NTQUhRUXhCQ0NBQklBTkpJaFViYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUIwRUJhaUVGSUFjdEFBRWhBeUFITFFBQVFmOEJSZ1JBSUFOQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQTBFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFOQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFCUVFGMElnRkJnSUFDU1EwQUN5QU9SU0FPSUJVYkRBRUxJQWNvQWdRTElRTWdFU0FUSUJRZ0F5QVNRZUM3QVdvdEFBQnpJZ01iTmdLQUJDQUtJQW9vQWdCQmdCQnlOZ0lBSUEwZ0RTZ0NCRUdBQkhJMkFnUWdCaUFEUVJsMGNrR0FDSEloQmdzZ0JrR0F3SUNBQkhFTkF5QUJJQXNnQkNnQ2JDQUdRUWwySWhKQjd3TnhhaTBBQUVFQ2RHb2lDU2dDQUNJQktBSUFJZ05ySVFjQ2Z5QURJQUpCRUhaTEJFQWdBU2dDQkNFS0lBa2dBVUVJUVF3Z0F5QUhTeUlPRzJvb0FnQTJBZ0FEUUFKQUlBVU5BQ0FFS0FJUUlnZEJBV29oQlNBSExRQUJJUUVnQnkwQUFFSC9BVVlFUUNBQlFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUNRWUQrQTJvaEFrRUlJUVVNQWdzZ0JDQUZOZ0lRSUFGQkNYUWdBbW9oQWtFSElRVU1BUXNnQkNBRk5nSVFRUWdoQlNBQlFRaDBJQUpxSVFJTElBVkJBV3NoQlNBQ1FRRjBJUUlnQTBFQmRDSURRWUNBQWtrTkFBc2dBeUVISUFvZ0NrVWdEaHNNQVFzZ0FpQURRUkIwYXlFQ0lBZEJnSUFDY1VVRVFDQUJLQUlFSVFvZ0NTQUJRUXhCQ0NBRElBZExJZzRiYWlnQ0FEWUNBQU5BQWtBZ0JRMEFJQVFvQWhBaUEwRUJhaUVGSUFNdEFBRWhBU0FETFFBQVFmOEJSZ1JBSUFGQmtBRlBCRUFnQkNBRUtBSU1RUUZxTmdJTUlBSkJnUDREYWlFQ1FRZ2hCUXdDQ3lBRUlBVTJBaEFnQVVFSmRDQUNhaUVDUVFjaEJRd0JDeUFFSUFVMkFoQkJDQ0VGSUFGQkNIUWdBbW9oQWdzZ0JVRUJheUVGSUFKQkFYUWhBaUFIUVFGMElnZEJnSUFDU1EwQUN5QUtSU0FLSUE0YkRBRUxJQUVvQWdRTFJRUkFJQWNoQVF3RUN5QUhJQXNnRFNnQ0JFRWFka0VFY1NBTlFRUnJJZzRvQWdCQkhIWkJBWEVnQmtFVmRrRVFjU0FHUVJsMlFjQUFjU0FTUWFvQmNYSnljbklpQ2tIZ3VRRnFMUUFBUVFKMGFpSUpLQUlBSWdjb0FnQWlBV3NoQXlBQklBSkJFSFpMQkVBZ0J5Z0NCQ0VTSUFrZ0IwRUlRUXdnQVNBRFN5SVZHMm9vQWdBMkFnQURRQUpBSUFVTkFDQUVLQUlRSWdkQkFXb2hCU0FITFFBQklRTWdCeTBBQUVIL0FVWUVRQ0FEUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBQ1FZRCtBMm9oQWtFSUlRVU1BZ3NnQkNBRk5nSVFJQU5CQ1hRZ0Ftb2hBa0VISVFVTUFRc2dCQ0FGTmdJUVFRZ2hCU0FEUVFoMElBSnFJUUlMSUFWQkFXc2hCU0FDUVFGMElRSWdBVUVCZENJQlFZQ0FBa2tOQUFzZ0VpQVNSU0FWR3d3REN5QUNJQUZCRUhScklRSWdBMEdBZ0FKeFJRMEJJQU1oQVFzZ0J5Z0NCQXdCQ3lBSEtBSUVJUklnQ1NBSFFReEJDQ0FCSUFOTEloVWJhaWdDQURZQ0FBTkFBa0FnQlEwQUlBUW9BaEFpQjBFQmFpRUZJQWN0QUFFaEFTQUhMUUFBUWY4QlJnUkFJQUZCa0FGUEJFQWdCQ0FFS0FJTVFRRnFOZ0lNSUFKQmdQNERhaUVDUVFnaEJRd0NDeUFFSUFVMkFoQWdBVUVKZENBQ2FpRUNRUWNoQlF3QkN5QUVJQVUyQWhCQkNDRUZJQUZCQ0hRZ0Ftb2hBZ3NnQlVFQmF5RUZJQUpCQVhRaEFpQURRUUYwSWdOQmdJQUNTUTBBQ3lBRElRRWdFa1VnRWlBVkd3c2hBeUFSSUJNZ0ZDQURJQXBCNExzQmFpMEFBSE1pQXhzMkFvQUdJQTRnRGlnQ0FFR0FnQUZ5TmdJQUlBMGdEU2dDQkVHQUlISTJBZ1FnRFNBTktBS0VBa0VFY2pZQ2hBSWdEU0FOS0FLTUFrRUJjallDakFJZ0RTQU5LQUtJQWlBRFFSSjBja0VDY2pZQ2lBSWdCaUFEUVJ4MGNrR0F3QUJ5SVFZTElBMGdCa0gvLy8rMmUzRTJBZ0FMSUExQkJHb2hCaUFSUVFScUlRTWdERUVCYWlJTVFjQUFSdzBBQ3lBTlFReHFJUVlnRVVHRUJtb2hBeUFYUVR4SklWd2dGMEVFYWlFWElGd05BQXNMSUFRZ0JUWUNDQ0FFSUFFMkFnUWdCQ0FDTmdJQUlBUWdDVFlDYUFzQ1FDQVdRU0J4UlEwQUlBUWdCRUhrQUdvMkFtZ2dCQ0FFS0FJRUlBUW9BbVFpQmlnQ0FDSUJheUlDTmdJRUFrQWdBU0FFS0FJQUlnVkJFSFpMQkVBZ0JDQUJOZ0lFSUFRZ0JrRUlRUXdnQVNBQ1N4dHFLQUlBSWdZMkFtUWdCQ2dDQ0NFQ0EwQUNRQ0FDRFFBZ0JDZ0NFQ0lIUVFGcUlRa2dCeTBBQVNFRElBY3RBQUJCL3dGR0JFQWdBMEdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQlVHQS9nTnFJUVZCQ0NFQ0RBSUxJQVFnQ1RZQ0VDQURRUWwwSUFWcUlRVkJCeUVDREFFTElBUWdDVFlDRUVFSUlRSWdBMEVJZENBRmFpRUZDeUFFSUFKQkFXc2lBallDQ0NBRUlBVkJBWFFpQlRZQ0FDQUVJQUZCQVhRaUFUWUNCQ0FCUVlDQUFra05BQXNnQVNFQ0RBRUxJQVFnQlNBQlFSQjBheUlGTmdJQUlBSkJnSUFDY1EwQUlBUWdCa0VNUVFnZ0FTQUNTeHRxS0FJQUlnWTJBbVFnQkNnQ0NDRUJBMEFDUUNBQkRRQWdCQ2dDRUNJQlFRRnFJUWNnQVMwQUFTRURJQUV0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0JVR0EvZ05xSVFWQkNDRUJEQUlMSUFRZ0J6WUNFQ0FEUVFsMElBVnFJUVZCQnlFQkRBRUxJQVFnQnpZQ0VFRUlJUUVnQTBFSWRDQUZhaUVGQ3lBRUlBRkJBV3NpQVRZQ0NDQUVJQVZCQVhRaUJUWUNBQ0FFSUFKQkFYUWlBallDQkNBQ1FZQ0FBa2tOQUFzTElBUWdBaUFHS0FJQUlnRnJJZ0kyQWdRQ1FDQUJJQVZCRUhaTEJFQWdCQ0FCTmdJRUlBUWdCa0VJUVF3Z0FTQUNTeHRxS0FJQUlnWTJBbVFnQkNnQ0NDRUNBMEFDUUNBQ0RRQWdCQ2dDRUNJSFFRRnFJUWtnQnkwQUFTRURJQWN0QUFCQi93RkdCRUFnQTBHUUFVOEVRQ0FFSUFRb0FneEJBV28yQWd3Z0JVR0EvZ05xSVFWQkNDRUNEQUlMSUFRZ0NUWUNFQ0FEUVFsMElBVnFJUVZCQnlFQ0RBRUxJQVFnQ1RZQ0VFRUlJUUlnQTBFSWRDQUZhaUVGQ3lBRUlBSkJBV3NpQWpZQ0NDQUVJQVZCQVhRaUJUWUNBQ0FFSUFGQkFYUWlBVFlDQkNBQlFZQ0FBa2tOQUFzZ0FTRUNEQUVMSUFRZ0JTQUJRUkIwYXlJRk5nSUFJQUpCZ0lBQ2NRMEFJQVFnQmtFTVFRZ2dBU0FDU3h0cUtBSUFJZ1kyQW1RZ0JDZ0NDQ0VCQTBBQ1FDQUJEUUFnQkNnQ0VDSUJRUUZxSVFjZ0FTMEFBU0VESUFFdEFBQkIvd0ZHQkVBZ0EwR1FBVThFUUNBRUlBUW9BZ3hCQVdvMkFnd2dCVUdBL2dOcUlRVkJDQ0VCREFJTElBUWdCellDRUNBRFFRbDBJQVZxSVFWQkJ5RUJEQUVMSUFRZ0J6WUNFRUVJSVFFZ0EwRUlkQ0FGYWlFRkN5QUVJQUZCQVdzaUFUWUNDQ0FFSUFWQkFYUWlCVFlDQUNBRUlBSkJBWFFpQWpZQ0JDQUNRWUNBQWtrTkFBc0xJQVFnQWlBR0tBSUFJZ0ZySWdJMkFnUUNRQ0FCSUFWQkVIWkxCRUFnQkNBQk5nSUVJQVFnQmtFSVFRd2dBU0FDU3h0cUtBSUFJZ1kyQW1RZ0JDZ0NDQ0VDQTBBQ1FDQUNEUUFnQkNnQ0VDSUhRUUZxSVFrZ0J5MEFBU0VESUFjdEFBQkIvd0ZHQkVBZ0EwR1FBVThFUUNBRUlBUW9BZ3hCQVdvMkFnd2dCVUdBL2dOcUlRVkJDQ0VDREFJTElBUWdDVFlDRUNBRFFRbDBJQVZxSVFWQkJ5RUNEQUVMSUFRZ0NUWUNFRUVJSVFJZ0EwRUlkQ0FGYWlFRkN5QUVJQUpCQVdzaUFqWUNDQ0FFSUFWQkFYUWlCVFlDQUNBRUlBRkJBWFFpQVRZQ0JDQUJRWUNBQWtrTkFBc2dBU0VDREFFTElBUWdCU0FCUVJCMGF5SUZOZ0lBSUFKQmdJQUNjUTBBSUFRZ0JrRU1RUWdnQVNBQ1N4dHFLQUlBSWdZMkFtUWdCQ2dDQ0NFQkEwQUNRQ0FCRFFBZ0JDZ0NFQ0lCUVFGcUlRY2dBUzBBQVNFRElBRXRBQUJCL3dGR0JFQWdBMEdRQVU4RVFDQUVJQVFvQWd4QkFXbzJBZ3dnQlVHQS9nTnFJUVZCQ0NFQkRBSUxJQVFnQnpZQ0VDQURRUWwwSUFWcUlRVkJCeUVCREFFTElBUWdCellDRUVFSUlRRWdBMEVJZENBRmFpRUZDeUFFSUFGQkFXc2lBVFlDQ0NBRUlBVkJBWFFpQlRZQ0FDQUVJQUpCQVhRaUFqWUNCQ0FDUVlDQUFra05BQXNMSUFRZ0FpQUdLQUlBSWdGcklnSTJBZ1FnQVNBRlFSQjJTd1JBSUFRZ0FUWUNCQ0FFSUFaQkNFRU1JQUVnQWtzYmFpZ0NBRFlDWkNBRUtBSUlJUUlEUUFKQUlBSU5BQ0FFS0FJUUlnWkJBV29oQnlBR0xRQUJJUU1nQmkwQUFFSC9BVVlFUUNBRFFaQUJUd1JBSUFRZ0JDZ0NERUVCYWpZQ0RDQUZRWUQrQTJvaEJVRUlJUUlNQWdzZ0JDQUhOZ0lRSUFOQkNYUWdCV29oQlVFSElRSU1BUXNnQkNBSE5nSVFRUWdoQWlBRFFRaDBJQVZxSVFVTElBUWdBa0VCYXlJQ05nSUlJQVFnQlVFQmRDSUZOZ0lBSUFRZ0FVRUJkQ0lCTmdJRUlBRkJnSUFDU1EwQUN3d0JDeUFFSUFVZ0FVRVFkR3NpQnpZQ0FDQUNRWUNBQW5FTkFDQUVJQVpCREVFSUlBRWdBa3NiYWlnQ0FEWUNaQ0FFS0FJSUlRVURRQUpBSUFVTkFDQUVLQUlRSWdOQkFXb2hCaUFETFFBQklRRWdBeTBBQUVIL0FVWUVRQ0FCUVpBQlR3UkFJQVFnQkNnQ0RFRUJhallDRENBSFFZRCtBMm9oQjBFSUlRVU1BZ3NnQkNBR05nSVFJQUZCQ1hRZ0Iyb2hCMEVISVFVTUFRc2dCQ0FHTmdJUVFRZ2hCU0FCUVFoMElBZHFJUWNMSUFRZ0JVRUJheUlGTmdJSUlBUWdCMEVCZENJSE5nSUFJQVFnQWtFQmRDSUNOZ0lFSUFKQmdJQUNTUTBBQ3dzTElDY05BQ0FFRUZNZ0JFSEFxUUUyQW1RZ0JFSGduZ0UyQW1BZ0JFR0Fud0UyQWh3TFFRQWdIMEVCYWlJQklBRkJBMFlpQVJzaEh5QVpJQUZySVJrZ0prRUJhaUltSUNBb0FnaFBEUUVnR1VFQVNnMEFDd3NnS0NBcWFpRW9JQVFvQWhnZ0JDOEJjRHNBQUNBcFFRRnFJaWtnR2lnQ0xFa05BQXNMQWtBZ0swVU5BQUpBSUFRb0FoZ2lBU0FFS0FJUUlnTkJBbXBMQkVBZ0lVVU5BU0FqSUFFZ0JDZ0NGQ0lHYXpZQ09DQWpJQU1nQm1zMkFqUWdJeUFCSUFOclFRSnJOZ0l3SUIxQkFrR2c4Z0FnSTBFd2FoQUlEQUlMSUFRb0Fnd2lBVUVEU1EwQklDRUVRQ0FqSUFFMkFsQWdIVUVDUWVrMUlDTkIwQUJxRUFnTUFnc2dJeUFCTmdKQUlCMUJBa0hwTlNBalFVQnJFQWdNQVFzZ0l5QUJJQVFvQWhRaUJtczJBaWdnSXlBRElBWnJOZ0lrSUNNZ0FTQURhMEVDYXpZQ0lDQWRRUUpCb1BJQUlDTkJJR29RQ0FzZ0dpZ0NQRVVOQUNBRUlDdzJBblFMSURBb0FnUWhBU0FhS0FJTUlWMGdHaWdDQ0NBd0tBSUFheUVJSURBb0FoQWlCa0VCY1FSQUlESW9BaHdnTjBHWUFXeHFJZ2RCa0FGcktBSUFJQWhxSUFkQm1BRnJLQUlBYXlFSUN5QmRJQUZySVFNZ0JrRUNjUVJBSURJb0Fod2dOMEdZQVd4cUlnRkJqQUZyS0FJQUlBTnFJQUZCbEFGcktBSUFheUVEQ3lBYUtBSThJZ1loQWlBR1JRUkFJQVFvQW5RaEFnc2dCQ2dDZ0FFaEZpQUVLQUo4SVEwQ1FDQXZLQUtvQmlJSFJRMEFJQlpGSUExRmNpRUJJQWRCSGt3RVFDQUJEUUZCQUNFUUEwQWdEU0FRYkNFRVFRQWhBUU5BSUFJZ0FTQUVha0VDZEdvaUVTZ0NBQ0lKSUFsQkgzVWlCWE1nQldzaUJTQUhkZ1JBSUJGQkFDQUZJQzhvQXFnR2RpSVJheUFSSUFsQkFFZ2JOZ0lBQ3lBQlFRRnFJZ0VnRFVjTkFBc2dFRUVCYWlJUUlCWkhEUUFMREFFTElBRU5BQ0FDUVFBZ0RTQVdiRUVDZEJBT0dnc2dCZ1JBSUEwZ0Ztd2hCaUF2S0FJVVFRRkdCRUFnQmtVTkJVRUFJUUVnQmtFRVR3UkFJQVpCZkhFaEFVRUFJUVFEUUNBQ0lBUkJBblJxSWdNZ0EvMEFBZ0FpWHYwYkFFRUNiZjBSSUY3OUd3RkJBbTM5SEFFZ1h2MGJBa0VDYmYwY0FpQmUvUnNEUVFKdC9Sd0QvUXNDQUNBRVFRUnFJZ1FnQVVjTkFBc2dBU0FHUmcwR0N3TkFJQUlnQVVFQ2RHb2lBeUFES0FJQVFRSnROZ0lBSUFGQkFXb2lBU0FHUncwQUN3d0ZDeUFHUlEwRUlEQXFBaUJEQUFBQVA1UWhaa0VBSVFRQ1FDQUdRUVJKQkVBZ0FpRUJEQUVMSUFJZ0JrRjhjU0lFUVFKMGFpRUJJR2I5RXlGZVFRQWhBd05BSUFJZ0EwRUNkR29pQnlCZUlBZjlBQUlBL2ZvQi9lWUIvUXNDQUNBRFFRUnFJZ01nQkVjTkFBc2dCQ0FHUmcwRkN3TkFJQUVnWmlBQktBSUFzcFE0QWdBZ0FVRUVhaUVCSUFSQkFXb2lCQ0FHUncwQUN3d0VDeUEySURWcklSRWdMeWdDRkVFQlJ3MENJQlpGRFFNZ01pZ0NKQ0lHSUFNZ0VXd2lBMEVDZEdvZ0NFRUNkR29oQ1NBTlFYeHhJZ3hCQVdzaUFVRUVjU0VMSURZZ0RTQTFhbXRCQW5RaEdpQUJRUUoyUVFGcVFmNy8vLzhIY1NFZElBTWdDR3BCQW5RZ0Jtb2dBbXNoQ2tFQUlRZ2dBVUVEUnlFVUEwQkJBQ0VCQWtBZ0RFVU5BQ0FJSUExc0lRTWdDU0FJSUJGc1FRSjBhaUVHUVFBaEJ5QVVCRUFEUUNBR0lBRkJBblJxSUFJZ0FTQURha0VDZEdyOUFBSUFJbDc5R3dCQkFtMzlFU0JlL1JzQlFRSnQvUndCSUY3OUd3SkJBbTM5SEFJZ1h2MGJBMEVDYmYwY0EvMExBZ0FnQmlBQlFRUnlJZ1JCQW5ScUlBSWdBeUFFYWtFQ2RHcjlBQUlBSWw3OUd3QkJBbTM5RVNCZS9Sc0JRUUp0L1J3QklGNzlHd0pCQW0zOUhBSWdYdjBiQTBFQ2JmMGNBLzBMQWdBZ0FVRUlhaUVCSUFkQkFtb2lCeUFkUncwQUN3c2dDdzBBSUFZZ0FVRUNkR29nQWlBQklBTnFRUUowYXYwQUFnQWlYdjBiQUVFQ2JmMFJJRjc5R3dGQkFtMzlIQUVnWHYwYkFrRUNiZjBjQWlCZS9Sc0RRUUp0L1J3RC9Rc0NBQ0FCUVFScUlRRUxBa0FnQVNBTlR3MEFJQWdnRFd3aEF5QUpJQWdnRVd4QkFuUnFJUWNDUUNBTklBRnJJaEJCQkVrRVFDQUJJUVFNQVFzZ0NpQUlJQnBzYWtFUVNRUkFJQUVoQkF3QkN5QUJJQkJCZkhFaUJXb2hCRUVBSVFZRFFDQUhJQUVnQm1vaUlVRUNkR29nQWlBRElDRnFRUUowYXYwQUFnQWlYdjBiQUVFQ2JmMFJJRjc5R3dGQkFtMzlIQUVnWHYwYkFrRUNiZjBjQWlCZS9Sc0RRUUp0L1J3RC9Rc0NBQ0FHUVFScUlnWWdCVWNOQUFzZ0JTQVFSZzBCQ3lBRVFRRnFJUUVnRFNBRWEwRUJjUVJBSUFjZ0JFRUNkR29nQWlBRElBUnFRUUowYWlnQ0FFRUNiVFlDQUNBQklRUUxJQUVnRFVZTkFBTkFJQWNnQkVFQ2RHb2dBaUFESUFScVFRSjBhaWdDQUVFQ2JUWUNBQ0FISUFSQkFXb2lBVUVDZEdvZ0FpQUJJQU5xUVFKMGFpZ0NBRUVDYlRZQ0FDQUVRUUpxSWdRZ0RVY05BQXNMSUFoQkFXb2lDQ0FXUncwQUN3d0RDeUFqSUJrMkFnQWdIVUVDUWRiQUFDQWpFQWdMSUJBb0FnQkJBRFlDQUF3QkN5QVdSUTBBSUExRkRRQWdNaWdDSkNBRElCRnNRUUowYWlBSVFRSjBhaUVISUExQmZIRWlBMEVDZENFR0lEQXFBaUJEQUFBQVA1UWladjBUSVY1QkFDRVFJQTFCQkVraENBTkFBa0FDUUNBSUJFQWdBaUVKSUFjaEFVRUFJUVFNQVFzZ0JpQUhhaUVCSUFJZ0Jtb2hDVUVBSVFRRFFDQUhJQVJCQW5RaUJXb2dYaUFDSUFWcS9RQUNBUDM2QWYzbUFmMExBZ0FnQkVFRWFpSUVJQU5IRFFBTElBa2hBaUFESWdRZ0RVWU5BUXNnQ1NFQ0EwQWdBU0JtSUFJb0FnQ3lsRGdDQUNBQlFRUnFJUUVnQWtFRWFpRUNJQVJCQVdvaUJDQU5SdzBBQ3dzZ0J5QVJRUUowYWlFSElCQkJBV29pRUNBV1J3MEFDd3NnQUJBSklDTkI0QUJxSkFBTDFnUUJDWDhnQUNnQ0xFRUlUd1JBSUFBb0FpZ2hCVUVJSVFvRFFDQUFLQUlNUVFWMElRZ2dBQ2dDQUNFRUlBQW9BaVFoQXdKQUlBQW9BaFFpQmlBQUtBSVFJZ0ZORFFBZ0JDQUlhaUVISUFGQkFXb2hBaUFHSUFGclFRRnhCRUFnQnlBQlFRWjBhaUlKSUFVZ0FTQURiRUVDZEdvaUFmMEFBZ0Q5Q3dJQUlBa2dBZjBBQWhEOUN3SVFJQUloQVFzZ0FpQUdSZzBBQTBBZ0J5QUJRUVowYWlJQ0lBVWdBU0FEYkVFQ2RHb2lDZjBBQWdEOUN3SUFJQUlnQ2YwQUFoRDlDd0lRSUFjZ0FVRUJhaUlDUVFaMGFpSUpJQVVnQWlBRGJFRUNkR29pQXYwQUFoRDlDd0lRSUFrZ0F2MEFBZ0Q5Q3dJQUlBRkJBbW9pQVNBR1J3MEFDd3NDUUNBQUtBSWNJZ1lnQUNnQ0dDSUJUUTBBSUFRZ0NHdEJJR29oQnlBRklBQW9BZ2dnQTJ4QkFuUnFJUWdnQVVFQmFpRUNJQVlnQVd0QkFYRUVRQ0FISUFGQkJuUnFJZ1FnQ0NBQklBTnNRUUowYWlJQi9RQUNBUDBMQWdBZ0JDQUIvUUFDRVAwTEFoQWdBaUVCQ3lBQ0lBWkdEUUFEUUNBSElBRkJCblJxSWdJZ0NDQUJJQU5zUVFKMGFpSUUvUUFDQVAwTEFnQWdBaUFFL1FBQ0VQMExBaEFnQnlBQlFRRnFJZ0pCQm5ScUlnUWdDQ0FDSUFOc1FRSjBhaUlDL1FBQ0VQMExBaEFnQkNBQy9RQUNBUDBMQWdBZ0FVRUNhaUlCSUFaSERRQUxDeUFBRUJ4QkFDRUJJQUFvQWlBRVFBTkFJQVVnQUNnQ0pDQUJiRUVDZEdvaUFpQUFLQUlBSUFGQkJYUnFJZ1A5QUFJQS9Rc0NBQ0FDSUFQOUFBSVEvUXNDRUNBQlFRRnFJZ0VnQUNnQ0lFa05BQXNMSUFWQklHb2hCU0FLUVFocUlnb2dBQ2dDTEUwTkFBc0xJQUFvQWdBUUNTQUFFQWtMOXcwQkpYOGdBQ2dDTEVFSVR3UkFJQUFvQWlRaUNrRUZkQ0VlSUFwQkIyd2hGaUFLUVFac0lSY2dDa0VGYkNFWUlBcEJBMndoR1NBS1FRRjBJUm9nQUNnQ0tDSUJJQXBCSEd4cUlSOGdBU0FLUVJoc2FpRWdJQUVnQ2tFVWJHb2hJU0FCSUFwQkJIUnFJU0lnQVNBS1FReHNhaUVqSUFFZ0NrRURkQ0lrYWlFbElBRWdDa0VDZENJYmFpRW1RUWdoSEFOQUlBQWdBU0FBS0FJa1FRZ1FOQ0FBRUJ3Q1FDQUFLQUlnSWd0RkRRQWdIU0FlYkNFSUlBQW9BZ0FoQmtFQUlRUUNRQUpBSUF0QjZBSkpEUUFnQmtFTWFpSU9JQXRCQVdzaUFrRUZkQ0lEYWlBT1NRMEFJQVpCQ0dvaUR5QURhaUFQU1EwQUlBTWdCbW9nQmtrTkFDQUdRUVJxSWhBZ0Eyb2dFRWtOQUNBQ1FmLy8vejlMRFFBZ0FTQUlJQ1pxSWdNZ0MwRUNkQ0lGYWlJTVNTQURJQUVnQldvaUIwbHhEUUFnQVNBSUlDVnFJZ0lnQldvaURVa2dBaUFIU1hFTkFDQUJJQVVnQ0NBamFpSUphaUlGU1NBSElBbExjUTBBSUFZZ0Iwa2dBU0FHSUF0QkJYUnFJaEZCSEdzaUVrbHhEUUFnQVNBUlFSaHJJaE5KSUFjZ0VFdHhEUUFnQVNBUlFSUnJJaFJKSUFjZ0QwdHhEUUFnQnlBT1N5QUJJQkZCRUdzaUIwbHhEUUFnQXlBTlNTQUNJQXhKY1EwQUlBTWdCVWtnQ1NBTVNYRU5BQ0FESUJKSklBWWdERWx4RFFBZ0F5QVRTU0FNSUJCTGNRMEFJQU1nRkVrZ0RDQVBTM0VOQUNBRElBZEpJQXdnRGt0eERRQWdBaUFGU1NBSklBMUpjUTBBSUFJZ0Vra2dCaUFOU1hFTkFDQUNJQk5KSUEwZ0VFdHhEUUFnQWlBVVNTQU5JQTlMY1EwQUlBSWdCMGtnRFNBT1MzRU5BQ0FKSUJKSklBVWdCa3R4RFFBZ0NTQVRTU0FGSUJCTGNRMEFJQWtnRkVrZ0JTQVBTM0VOQUNBSElBbExJQVVnRGt0eERRQWdDMEg4Ly8vL0FIRWhCRUVBSVFNRFFDQUJJQU5CQW5ScUlBWWdBMEVGZEdvaUF2MEpBZ0FnQWlvQ0lQMGdBU0FDUVVCcktnSUEvU0FDSUFJcUFtRDlJQVA5Q3dJQUlBRWdBeUFLYWtFQ2RHb2dBdjBKQWdRZ0Fpb0NKUDBnQVNBQ0tnSkUvU0FDSUFJcUFtVDlJQVA5Q3dJQUlBRWdBeUFhYWtFQ2RHb2dBdjBKQWdnZ0Fpb0NLUDBnQVNBQ0tnSkkvU0FDSUFJcUFtajlJQVA5Q3dJQUlBRWdBeUFaYWtFQ2RHb2dBdjBKQWd3Z0Fpb0NMUDBnQVNBQ0tnSk0vU0FDSUFJcUFtejlJQVA5Q3dJQUlBTkJCR29pQXlBRVJ3MEFDeUFFSUF0R0RRRUxBMEFnQVNBRVFRSjBhaUFHSUFSQkJYUnFJZ01xQWdBNEFnQWdBU0FFSUFwcVFRSjBhaUFES2dJRU9BSUFJQUVnQkNBYWFrRUNkR29nQXlvQ0NEZ0NBQ0FCSUFRZ0dXcEJBblJxSUFNcUFndzRBZ0FnQkVFQmFpSUVJQXRIRFFBTEN5QUFLQUlBSVFaQkFDRUVBa0FnQzBIY0FFa05BQ0FHUVJ4cUlnOGdDMEVCYXlJQ1FRVjBJZ05xSUE5SkRRQWdCa0VZYWlJUUlBTnFJQkJKRFFBZ0JrRVFhaUlSSUFOcUlCRkpEUUFnQmtFVWFpSVNJQU5xSUJKSkRRQWdBa0gvLy84L1N3MEFJQWdnSW1vaUF5QUlJQ0ZxSWdJZ0MwRUNkQ0lGYWlJTVNTQUNJQU1nQldvaUIwbHhEUUFnQXlBSUlDQnFJZ2tnQldvaURVa2dCeUFKUzNFTkFDQURJQWdnSDJvaUNDQUZhaUlGU1NBSElBaExjUTBBSUFNZ0JpQUxRUVYwYWlJT1FReHJJaE5KSUFjZ0VVdHhEUUFnQXlBT1FRaHJJaFJKSUFjZ0VrdHhEUUFnQXlBT1FRUnJJaFZKSUFjZ0VFdHhEUUFnQXlBT1NTQUhJQTlMY1EwQUlBSWdEVWtnQ1NBTVNYRU5BQ0FDSUFWSklBZ2dERWx4RFFBZ0FpQVRTU0FNSUJGTGNRMEFJQUlnRkVrZ0RDQVNTM0VOQUNBQ0lCVkpJQXdnRUV0eERRQWdBaUFPU1NBTUlBOUxjUTBBSUFnZ0RVa2dCU0FKUzNFTkFDQUpJQk5KSUEwZ0VVdHhEUUFnQ1NBVVNTQU5JQkpMY1EwQUlBa2dGVWtnRFNBUVMzRU5BQ0FKSUE1SklBMGdEMHR4RFFBZ0NDQVRTU0FGSUJGTGNRMEFJQWdnRkVrZ0JTQVNTM0VOQUNBSUlCVkpJQVVnRUV0eERRQWdDQ0FPU1NBRklBOUxjUTBBSUF0Qi9QLy8vd0J4SVFSQkFDRURBMEFnQVNBRElCdHFRUUowYWlBR0lBTkJCWFJxSWdMOUNRSVFJQUlxQWpEOUlBRWdBaW9DVVAwZ0FpQUNLZ0p3L1NBRC9Rc0NBQ0FCSUFNZ0dHcEJBblJxSUFMOUNRSVVJQUlxQWpUOUlBRWdBaW9DVlAwZ0FpQUNLZ0owL1NBRC9Rc0NBQ0FCSUFNZ0YycEJBblJxSUFMOUNRSVlJQUlxQWpqOUlBRWdBaW9DV1AwZ0FpQUNLZ0o0L1NBRC9Rc0NBQ0FCSUFNZ0ZtcEJBblJxSUFMOUNRSWNJQUlxQWp6OUlBRWdBaW9DWFAwZ0FpQUNLZ0o4L1NBRC9Rc0NBQ0FEUVFScUlnTWdCRWNOQUFzZ0JDQUxSZzBCQ3dOQUlBRWdCQ0FiYWtFQ2RHb2dCaUFFUVFWMGFpSURLZ0lRT0FJQUlBRWdCQ0FZYWtFQ2RHb2dBeW9DRkRnQ0FDQUJJQVFnRjJwQkFuUnFJQU1xQWhnNEFnQWdBU0FFSUJacVFRSjBhaUFES2dJY09BSUFJQVJCQVdvaUJDQUxSdzBBQ3dzZ0hVRUJhaUVkSUFFZ0pFRUNkR29oQVNBY1FRaHFJaHdnQUNnQ0xFME5BQXNMSUFBb0FnQVFDU0FBRUFrTGN3RUNmeUFBS0FJY0lnRkJDR29pQXlBQUtBSWdJZ0pOQkVBRFFDQUFJQUFvQWhnZ0FVRUNkR29nQUNnQ0ZFRUlFQ3NnQXlJQlFRaHFJZ01nQUNnQ0lDSUNUUTBBQ3dzZ0FTQUNTUVJBSUFBZ0FDZ0NHQ0FCUVFKMGFpQUFLQUlVSUFJZ0FXc1FLd3NnQUNnQ0FCQUpJQUFRQ1F0RUFDQUFLQUljSWdFZ0FDZ0NJRWtFUUFOQUlBQWdBQ2dDR0NBQUtBSVVJQUZzUVFKMGFoQldJQUZCQVdvaUFTQUFLQUlnU1EwQUN3c2dBQ2dDQUJBSklBQVFDUXVvQVFFRmZ5QUFLQUpVSWdNb0FnQWhCU0FES0FJRUlnUWdBQ2dDRkNBQUtBSWNJZ2RySWdZZ0JDQUdTUnNpQmdSQUlBVWdCeUFHRUFzYUlBTWdBeWdDQUNBR2FpSUZOZ0lBSUFNZ0F5Z0NCQ0FHYXlJRU5nSUVDeUFFSUFJZ0FpQUVTeHNpQkFSQUlBVWdBU0FFRUFzYUlBTWdBeWdDQUNBRWFpSUZOZ0lBSUFNZ0F5Z0NCQ0FFYXpZQ0JBc2dCVUVBT2dBQUlBQWdBQ2dDTENJQk5nSWNJQUFnQVRZQ0ZDQUNDNTRGQWdaK0JIOGdBU0FCS0FJQVFRZHFRWGh4SWdGQkVHbzJBZ0FnQUNFTElBRXBBd0FoQXlBQktRTUlJUWNqQUVFZ2F5SUlKQUFnQjBMLy8vLy8vLzgvZ3lFRUFuNGdCMEl3aUVMLy93R0RJZ1duSWdwQmdmZ0FhMEg5RDAwRVFDQUVRZ1NHSUFOQ1BJaUVJUUlnQ2tHQStBQnJyU0VGQWtBZ0EwTC8vLy8vLy8vLy93K0RJZ05DZ1lDQWdJQ0FnSUFJV2dSQUlBSkNBWHdoQWd3QkN5QURRb0NBZ0lDQWdJQ0FDRklOQUNBQ1FnR0RJQUo4SVFJTFFnQWdBaUFDUXYvLy8vLy8vLzhIVmlJQUd5RUNJQUN0SUFWOERBRUxBa0FnQXlBRWhGQU5BQ0FGUXYvL0FWSU5BQ0FFUWdTR0lBTkNQSWlFUW9DQWdJQ0FnSUFFaENFQ1F2OFBEQUVMUXY4UElBcEIvb2NCU3cwQUdrSUFRWUQ0QUVHQitBQWdCVkFpQVJzaUFDQUtheUlKUWZBQVNnMEFHaUFESVFJZ0JDQUVRb0NBZ0lDQWdNQUFoQ0FCR3lJR0lRUUNRRUdBQVNBSmF5SUJRY0FBY1FSQUlBTWdBVUZBYXEyR0lRUkNBQ0VDREFFTElBRkZEUUFnQkNBQnJTSUZoaUFDUWNBQUlBRnJyWWlFSVFRZ0FpQUZoaUVDQ3lBSUlBSTNBeEFnQ0NBRU53TVlBa0FnQ1VIQUFIRUVRQ0FHSUFsQlFHcXRpQ0VEUWdBaEJnd0JDeUFKUlEwQUlBWkJ3QUFnQ1d1dGhpQURJQW10SWdLSWhDRURJQVlnQW9naEJnc2dDQ0FETndNQUlBZ2dCamNEQ0NBSUtRTUlRZ1NHSUFncEF3QWlBa0k4aUlRaEF3SkFJQUFnQ2tjZ0NDa0RFQ0FJS1FNWWhFSUFVbkd0SUFKQy8vLy8vLy8vLy84UGc0UWlBa0tCZ0lDQWdJQ0FnQWhhQkVBZ0EwSUJmQ0VEREFFTElBSkNnSUNBZ0lDQWdJQUlVZzBBSUFOQ0FZTWdBM3doQXdzZ0EwS0FnSUNBZ0lDQUNJVWdBeUFEUXYvLy8vLy8vLzhIVmlJQUd5RUNJQUN0Q3lFRElBaEJJR29rQUNBTElBZENnSUNBZ0lDQWdJQ0FmNE1nQTBJMGhvUWdBb1MvT1FNQUM0TVlBeE4vQVh3RGZpTUFRYkFFYXlJTUpBQWdERUVBTmdJc0FrQWdBYjBpR2tJQVV3UkFRUUVoRVVHNkNDRVRJQUdhSWdHOUlSb01BUXNnQkVHQUVIRUVRRUVCSVJGQnZRZ2hFd3dCQzBIQUNFRzdDQ0FFUVFGeEloRWJJUk1nRVVVaEZRc0NRQ0FhUW9DQWdJQ0FnSUQ0L3dDRFFvQ0FnSUNBZ0lENC93QlJCRUFnQUVFZ0lBSWdFVUVEYWlJRElBUkIvLzk3Y1JBVUlBQWdFeUFSRUJFZ0FFRzNDVUgyQ2lBRlFTQnhJZ1ViUWFBS1Fmb0tJQVViSUFFZ0FXSWJRUU1RRVNBQVFTQWdBaUFESUFSQmdNQUFjeEFVSUFNZ0FpQUNJQU5JR3lFS0RBRUxJQXhCRUdvaEVnSkFBbjhDUUNBQklBeEJMR29RWHlJQklBR2dJZ0ZFQUFBQUFBQUFBQUJpQkVBZ0RDQU1LQUlzSWdaQkFXczJBaXdnQlVFZ2NpSU9RZUVBUncwQkRBTUxJQVZCSUhJaURrSGhBRVlOQWlBTUtBSXNJUWxCQmlBRElBTkJBRWdiREFFTElBd2dCa0VkYXlJSk5nSXNJQUZFQUFBQUFBQUFzRUdpSVFGQkJpQURJQU5CQUVnYkN5RUxJQXhCTUdwQm9BSkJBQ0FKUVFCT0cyb2lEU0VIQTBBZ0J3Si9JQUZFQUFBQUFBQUE4RUZqSUFGRUFBQUFBQUFBQUFCbWNRUkFJQUdyREFFTFFRQUxJZ00yQWdBZ0IwRUVhaUVISUFFZ0E3aWhSQUFBQUFCbHpjMUJvaUlCUkFBQUFBQUFBQUFBWWcwQUN3SkFJQWxCQUV3RVFDQUpJUU1nQnlFR0lBMGhDQXdCQ3lBTklRZ2dDU0VEQTBCQkhTQURJQU5CSFU4YklRTUNRQ0FIUVFScklnWWdDRWtOQUNBRHJTRWJRZ0FoR2dOQUlBWWdHa0wvLy8vL0Q0TWdCalVDQUNBYmhud2lIRUtBbE92Y0E0QWlHa0tBN0pTakRINGdISHcrQWdBZ0JrRUVheUlHSUFoUERRQUxJQnFuSWdaRkRRQWdDRUVFYXlJSUlBWTJBZ0FMQTBBZ0NDQUhJZ1pKQkVBZ0JrRUVheUlIS0FJQVJRMEJDd3NnRENBTUtBSXNJQU5ySWdNMkFpd2dCaUVISUFOQkFFb05BQXNMSUFOQkFFZ0VRQ0FMUVJscVFRbHVRUUZxSVE4Z0RrSG1BRVloRUFOQVFRbEJBQ0FEYXlJRElBTkJDVThiSVFvQ1FDQUdJQWhOQkVBZ0NDZ0NBRVZCQW5RaEJ3d0JDMEdBbE92Y0F5QUtkaUVVUVg4Z0NuUkJmM01oRmtFQUlRTWdDQ0VIQTBBZ0J5QURJQWNvQWdBaUZ5QUtkbW8yQWdBZ0ZpQVhjU0FVYkNFRElBZEJCR29pQnlBR1NRMEFDeUFJS0FJQVJVRUNkQ0VISUFORkRRQWdCaUFETmdJQUlBWkJCR29oQmdzZ0RDQU1LQUlzSUFwcUlnTTJBaXdnRFNBSElBaHFJZ2dnRUJzaUJ5QVBRUUowYWlBR0lBWWdCMnRCQW5VZ0Qwb2JJUVlnQTBFQVNBMEFDd3RCQUNFREFrQWdCaUFJVFEwQUlBMGdDR3RCQW5WQkNXd2hBMEVLSVFjZ0NDZ0NBQ0lLUVFwSkRRQURRQ0FEUVFGcUlRTWdDaUFIUVFwc0lnZFBEUUFMQ3lBTElBTkJBQ0FPUWVZQVJ4dHJJQTVCNXdCR0lBdEJBRWR4YXlJSElBWWdEV3RCQW5WQkNXeEJDV3RJQkVBZ0RFRXdha0dFWUVHa1lpQUpRUUJJRzJvZ0IwR0F5QUJxSWdwQkNXMGlEMEVDZEdvaENVRUtJUWNnRDBGM2JDQUthaUlLUVFkTUJFQURRQ0FIUVFwc0lRY2dDa0VCYWlJS1FRaEhEUUFMQ3dKQUlBa29BZ0FpRUNBUUlBZHVJZzhnQjJ3aUNrWWdDVUVFYWlJVUlBWkdjUTBBSUJBZ0Ntc2hFQUpBSUE5QkFYRkZCRUJFQUFBQUFBQUFRRU1oQVNBSFFZQ1U2OXdEUncwQklBZ2dDVThOQVNBSlFRUnJMUUFBUVFGeFJRMEJDMFFCQUFBQUFBQkFReUVCQzBRQUFBQUFBQURnUDBRQUFBQUFBQUR3UDBRQUFBQUFBQUQ0UHlBR0lCUkdHMFFBQUFBQUFBRDRQeUFRSUFkQkFYWWlGRVliSUJBZ0ZFa2JJUmtDUUNBVkRRQWdFeTBBQUVFdFJ3MEFJQm1hSVJrZ0Fab2hBUXNnQ1NBS05nSUFJQUVnR2FBZ0FXRU5BQ0FKSUFjZ0Ntb2lBellDQUNBRFFZQ1U2OXdEVHdSQUEwQWdDVUVBTmdJQUlBZ2dDVUVFYXlJSlN3UkFJQWhCQkdzaUNFRUFOZ0lBQ3lBSklBa29BZ0JCQVdvaUF6WUNBQ0FEUWYrVDY5d0RTdzBBQ3dzZ0RTQUlhMEVDZFVFSmJDRURRUW9oQnlBSUtBSUFJZ3BCQ2trTkFBTkFJQU5CQVdvaEF5QUtJQWRCQ213aUIwOE5BQXNMSUFsQkJHb2lCeUFHSUFZZ0Iwc2JJUVlMQTBBZ0JpSUhJQWhOSWdwRkJFQWdCa0VFYXlJR0tBSUFSUTBCQ3dzQ1FDQU9RZWNBUndSQUlBUkJDSEVoQ1F3QkN5QURRWDl6UVg4Z0MwRUJJQXNiSWdZZ0Ewb2dBMEY3U25FaUNSc2dCbW9oQzBGL1FYNGdDUnNnQldvaEJTQUVRUWh4SWdrTkFFRjNJUVlDUUNBS0RRQWdCMEVFYXlnQ0FDSU9SUTBBUVFvaENrRUFJUVlnRGtFS2NBMEFBMEFnQmlJSlFRRnFJUVlnRGlBS1FRcHNJZ3B3UlEwQUN5QUpRWDl6SVFZTElBY2dEV3RCQW5WQkNXd2hDaUFGUVY5eFFjWUFSZ1JBUVFBaENTQUxJQVlnQ21wQkNXc2lCa0VBSUFaQkFFb2JJZ1lnQmlBTFNoc2hDd3dCQzBFQUlRa2dDeUFESUFwcUlBWnFRUWxySWdaQkFDQUdRUUJLR3lJR0lBWWdDMG9iSVFzTFFYOGhDaUFMUWYzLy8vOEhRZjcvLy84SElBa2dDM0lpRUJ0S0RRRWdDeUFRUVFCSGFrRUJhaUVPQWtBZ0JVRmZjU0lWUWNZQVJnUkFJQU1nRGtILy8vLy9CM05LRFFNZ0EwRUFJQU5CQUVvYklRWU1BUXNnRWlBRElBTkJIM1VpQm5NZ0JtdXRJQklRSXlJR2EwRUJUQVJBQTBBZ0JrRUJheUlHUVRBNkFBQWdFaUFHYTBFQ1NBMEFDd3NnQmtFQ2F5SVBJQVU2QUFBZ0JrRUJhMEV0UVNzZ0EwRUFTQnM2QUFBZ0VpQVBheUlHSUE1Qi8vLy8vd2R6U2cwQ0N5QUdJQTVxSWdNZ0VVSC8vLy8vQjNOS0RRRWdBRUVnSUFJZ0F5QVJhaUlESUFRUUZDQUFJQk1nRVJBUklBQkJNQ0FDSUFNZ0JFR0FnQVJ6RUJRQ1FBSkFBa0FnRlVIR0FFWUVRQ0FNUVJCcVFRbHlJUVVnRFNBSUlBZ2dEVXNiSWdraENBTkFJQWcxQWdBZ0JSQWpJUVlDUUNBSUlBbEhCRUFnQmlBTVFSQnFUUTBCQTBBZ0JrRUJheUlHUVRBNkFBQWdCaUFNUVJCcVN3MEFDd3dCQ3lBRklBWkhEUUFnQmtFQmF5SUdRVEE2QUFBTElBQWdCaUFGSUFackVCRWdDRUVFYWlJSUlBMU5EUUFMSUJBRVFDQUFRWUlNUVFFUUVRc2dCeUFJVFEwQklBdEJBRXdOQVFOQUlBZzFBZ0FnQlJBaklnWWdERUVRYWtzRVFBTkFJQVpCQVdzaUJrRXdPZ0FBSUFZZ0RFRVFha3NOQUFzTElBQWdCa0VKSUFzZ0MwRUpUaHNRRVNBTFFRbHJJUVlnQ0VFRWFpSUlJQWRQRFFNZ0MwRUpTaUVZSUFZaEN5QVlEUUFMREFJTEFrQWdDMEVBU0EwQUlBY2dDRUVFYWlBSElBaExHeUVOSUF4QkVHcEJDWEloQlNBSUlRY0RRQ0FGSUFjMUFnQWdCUkFqSWdaR0JFQWdCa0VCYXlJR1FUQTZBQUFMQWtBZ0J5QUlSd1JBSUFZZ0RFRVFhazBOQVFOQUlBWkJBV3NpQmtFd09nQUFJQVlnREVFUWFrc05BQXNNQVFzZ0FDQUdRUUVRRVNBR1FRRnFJUVlnQ1NBTGNrVU5BQ0FBUVlJTVFRRVFFUXNnQUNBR0lBVWdCbXNpQmlBTElBWWdDMGdiRUJFZ0N5QUdheUVMSUFkQkJHb2lCeUFOVHcwQklBdEJBRTROQUFzTElBQkJNQ0FMUVJKcVFSSkJBQkFVSUFBZ0R5QVNJQTlyRUJFTUFnc2dDeUVHQ3lBQVFUQWdCa0VKYWtFSlFRQVFGQXNnQUVFZ0lBSWdBeUFFUVlEQUFITVFGQ0FESUFJZ0FpQURTQnNoQ2d3QkN5QVRJQVZCR25SQkgzVkJDWEZxSVFnQ1FDQURRUXRMRFFCQkRDQURheUVHUkFBQUFBQUFBREJBSVJrRFFDQVpSQUFBQUFBQUFEQkFvaUVaSUFaQkFXc2lCZzBBQ3lBSUxRQUFRUzFHQkVBZ0dTQUJtaUFab2FDYUlRRU1BUXNnQVNBWm9DQVpvU0VCQ3lBU0lBd29BaXdpQnlBSFFSOTFJZ1p6SUFacnJTQVNFQ01pQmtZRVFDQUdRUUZySWdaQk1Eb0FBQXNnRVVFQ2NpRUxJQVZCSUhFaERTQUdRUUpySWdrZ0JVRVBham9BQUNBR1FRRnJRUzFCS3lBSFFRQklHem9BQUNBRVFRaHhJUVlnREVFUWFpRUhBMEFnQnlJRkFuOGdBWmxFQUFBQUFBQUE0RUZqQkVBZ0Fhb01BUXRCZ0lDQWdIZ0xJZ2RCNE1RQmFpMEFBQ0FOY2pvQUFDQUJJQWUzb1VRQUFBQUFBQUF3UUtJaEFRSkFJQVZCQVdvaUJ5QU1RUkJxYTBFQlJ3MEFBa0FnQmcwQUlBTkJBRW9OQUNBQlJBQUFBQUFBQUFBQVlRMEJDeUFGUVM0NkFBRWdCVUVDYWlFSEN5QUJSQUFBQUFBQUFBQUFZZzBBQzBGL0lRcEIvZi8vL3djZ0N5QVNJQWxySWdacUlnMXJJQU5JRFFBZ0FFRWdJQUlnRFNBRFFRSnFJQWNnREVFUWFpSUhheUlGSUFWQkFtc2dBMGdiSUFVZ0F4c2lDbW9pQXlBRUVCUWdBQ0FJSUFzUUVTQUFRVEFnQWlBRElBUkJnSUFFY3hBVUlBQWdCeUFGRUJFZ0FFRXdJQW9nQld0QkFFRUFFQlFnQUNBSklBWVFFU0FBUVNBZ0FpQURJQVJCZ01BQWN4QVVJQU1nQWlBQ0lBTklHeUVLQ3lBTVFiQUVhaVFBSUFvTEJBQkNBQXNFQUVFQUM1OERBUWwvUWVZS0lRQUNRQU5BSUFBdEFBQWlBVVVOQVNBQlFUMUdEUUVnQUVFQmFpSUFRUU54RFFBTEFrQUNRRUdBZ29RSUlBQW9BZ0FpQW1zZ0FuSkJnSUdDaEhoeFFZQ0Jnb1I0UncwQUEwQkJnSUtFQ0NBQ1FiMzY5T2tEY3lJQmF5QUJja0dBZ1lLRWVIRkJnSUdDaEhoSERRRWdBQ2dDQkNFQ0lBQkJCR29pQVNFQUlBSkJnSUtFQ0NBQ2EzSkJnSUdDaEhoeFFZQ0Jnb1I0UmcwQUN3d0JDeUFBSVFFTEEwQWdBU0lBTFFBQUlnSkZEUUVnQUVFQmFpRUJJQUpCUFVjTkFBc0xJQUFpQVVIbUNrWUVRRUVBRHdzQ1FDQUJRZVlLYXlJQVFlWUthaTBBQUEwQVFiRE9BU2dDQUNJRVJRMEFJQVFvQWdBaUJVVU5BQU5BQWtBQ2Z5QUZJUUpCNWdvaEJrRUFJQUFpQVVVTkFCcEI1Z290QUFBaUF3Ui9Ba0FEUUNBRElBSXRBQUFpQjBjTkFTQUhSUTBCSUFGQkFXc2lBVVVOQVNBQ1FRRnFJUUlnQmkwQUFTRURJQVpCQVdvaEJpQUREUUFMUVFBaEF3c2dBd1ZCQUFzZ0FpMEFBR3NMUlFSQUlBQWdCV29pQVMwQUFFRTlSZzBCQ3lBRUtBSUVJUVVnQkVFRWFpRUVJQVVOQVF3Q0N3c2dBVUVCYWlFSUN5QUlDODRDQVFoL0l3QkJJR3NpQXlRQUlBTWdBQ2dDSENJRU5nSVFJQUFvQWhRaEJTQURJQUkyQWh3Z0F5QUJOZ0lZSUFNZ0JTQUVheUlCTmdJVUlBRWdBbW9oQlVFQ0lRWWdBMEVRYWlFQkFuOERRQUpBQWtBQ1FDQUFLQUk4SUFFZ0JpQURRUXhxRUFRaUJBUi9RWlRHQVNBRU5nSUFRWDhGUVFBTFJRUkFJQVVnQXlnQ0RDSUhSZzBCSUFkQkFFNE5BZ3dEQ3lBRlFYOUhEUUlMSUFBZ0FDZ0NMQ0lCTmdJY0lBQWdBVFlDRkNBQUlBRWdBQ2dDTUdvMkFoQWdBZ3dEQ3lBQklBY2dBU2dDQkNJSVN5SUpRUU4wYWlJRUlBY2dDRUVBSUFrYmF5SUlJQVFvQWdCcU5nSUFJQUZCREVFRUlBa2JhaUlCSUFFb0FnQWdDR3MyQWdBZ0JTQUhheUVGSUFZZ0NXc2hCaUFFSVFFTUFRc0xJQUJCQURZQ0hDQUFRZ0EzQXhBZ0FDQUFLQUlBUVNCeU5nSUFRUUFnQmtFQ1JnMEFHaUFDSUFFb0FnUnJDeUVLSUFOQklHb2tBQ0FLQ3dZQUlBQVFBQXNHQUNBQUVBWUx6eDBERFg4RWV3TitJd0JCME1BQWF5SUpKQUFnQ1VFQU5nSVFRUUloQkFKQUFrQWdBQ2dDQUNJRFFZMlVuTlFBUmcwQUlBTkIvNS85andWSEJFQUNRQ0FEUVlDQWdPQUFSdzBBSUFBb0FnUkI2cUNCZ1FKSERRQWdBQ2dDQ0VHTmxKelVBRVlOQWd0QnpRZ1FBRUVCSVFBTUFndEJBQ0VFQ3dKL1FRQkJBVUhnQUJBTUlnTkZEUUFhSUFOQkFUWUNUQUpBQWtBQ1FBSkFJQVFPQXdBREFRTUxJQU5Cd3dBMkFsZ2dBMEhFQURZQ1ZDQURRY1VBTmdKUUlBTkJ4Z0EyQWhBZ0EwSEhBRFlDQkNBRFFjZ0FOZ0ljSUFOQnlRQTJBaGdnQTBIS0FEWUNGQ0FEUWNzQU5nSUFJQU5CekFBMkFsd2dBMEhOQURZQ0xDQURRYzRBTmdJb0lBTkJ6d0EyQWlRZ0EwSFFBRFlDSUNBRFFkRUFOZ0lNSUFOQjBnQTJBZ2dnQXhCR0lnUTJBakFnQkEwQkRBSUxJQU5CMHdBMkFsZ2dBMEhVQURZQ1ZDQURRZFVBTmdKUUlBTkIxZ0EyQWhBZ0EwSFhBRFlDQkNBRFFkZ0FOZ0pjSUFOQjJRQTJBaXdnQTBIYUFEWUNLQ0FEUWRzQU5nSWtJQU5CM0FBMkFpQWdBMEhkQURZQ0hDQURRZDRBTmdJWUlBTkIzd0EyQWhRZ0EwSGdBRFlDRENBRFFlRUFOZ0lJSUFOQjRnQTJBZ0FnQXdKL1FRRkJpQUVRRENJRUJFQWdCQkJHSWdVMkFnQUNRQ0FGUlEwQUlBVDlEQUFBQUFBQUFBQUFBQUFBQUFBQUFBRDlDd0pzSUFSQkFEb0FmQ0FFRUM0aUJUWUNCQ0FGUlEwQUlBUVFMaUlGTmdJSUlBVkZEUUFnQkF3Q0N5QUVFR2tMUVFBTElnUTJBakFnQkVVTkFRc2dBMEVCTmdKSUlBTkJBVFlDUUNBRFFRQTJBandnQTBJQU53STBJQU5CQVRZQ1JDQUREQUVMSUFNUUNVRUFDeUlFQkVBZ0JFRUFOZ0k4SUFSQjR3QTJBa2dMSUFRRVFDQUVRUUEyQWpnZ0JFSGtBRFlDUkFzZ0JBUkFJQVJCQURZQ05DQUVRZVVBTmdKQUN5QUpRUlJxSWdVaUF3UkFJQU5CQUVHNHdBQVFEaUlEUVFBMkFyaEFJQU5DZnpjQ2lFQUxJQWtnQVRZQ0RDQUpJQUEyQWdnZ0NTQUFOZ0lFUVFFaEFFRUFJUU1DUUNBSlFRUnFJZ3BGRFFCQkFVSElBQkFNSWdFRWZ3Si9JQUZCZ0lEQUFEWUNRQ0FCUVlDQXdBQVFEU0lJTmdJZ0lBaEZCRUFnQVJBSlFRQU1BUXNnQVNBSU5nSWtJQUZCQWpZQ0hDQUJRUU0yQWhnZ0FVRUVOZ0lVSUFGQkJUWUNFQ0FCUVFZMkFpd2dBVUVJTmdJb0lBRWdBU2dDUkVFQ2NqWUNSQ0FCQ3dWQkFBc2lBVVVOQUNBQkJFQWdBVUVBTmdJRUlBRWdDallDQUFzZ0NqVUNDQ0VVSUFFRVFDQUJJQlEzQXdnTEFrQWdBVVVOQUNBQkxRQkVRUUp4UlEwQUlBRkJQellDRUFzZ0FRUkFJQUZCd1FBMkFoZ0xJQUVFUUNBQlFjSUFOZ0ljQ3lBQklRTUxBbjhDUUNBRVJRMEFJQVZGRFFBZ0JDZ0NURVVFUUNBRVFUUnFRUUZCajhrQVFRQVFDRUVBREFJTElBUW9BakFnQlNBRUtBSVlFUU1BUVFFaEJ3c2dCd3RGQkVCQmdRa1FBQ0FERUNjZ0JCQW9EQUVMQW44Z0NVRVFhaUVGUVFBaEFRSkFJQU5GRFFBZ0JFVU5BQ0FFS0FKTVJRUkFJQVJCTkdwQkFVSGd5UUJCQUJBSVFRQU1BZ3NnQXlBRUtBSXdJQVVnQkVFMGFpQUVLQUlBRVFFQUlRRUxJQUVMUlFSQVFaMEpFQUFnQXhBbklBUVFLQ0FKS0FJUUVCZ01BUXNnQ1NnQ0VDRUFJQUlFUUVFSUlBQW9BaEFpQVVFQ2RCQWJJUVVDUUNBQlJRMEFRUUFoQUNBQlFRTkxCRUFnQVVGOGNTRUEvUXdBQUFBQUFRQUFBQUlBQUFBREFBQUFJUkFEUUNBRklBWkJBblJxSUJEOUN3SUFJQkQ5REFRQUFBQUVBQUFBQkFBQUFBUUFBQUQ5cmdFaEVDQUdRUVJxSWdZZ0FFY05BQXNnQUNBQlJnMEJDd05BSUFVZ0FFRUNkR29nQURZQ0FDQUFRUUZxSWdBZ0FVY05BQXNMQW45QkFDQUVSUTBBR2lBRUtBSk1SUVJBSUFSQk5HcEJBVUcxeUFCQkFCQUlRUUFNQVFzZ0JDZ0NNQ0FCSUFVZ0JFRTBhaUFFS0FJc0VRRUFDMFVFUUVIY0NCQUFJQU1RSnlBRUVDZ2dDU2dDRUJBWUlBVVFDVUVCSVFBTUFnc2dCUkFKSUFrb0FoQWhBQXRCQUNFQkFrQWdCRVVOQUNBRFJRMEFJQVFvQWt4RkRRQWdCQ2dDTUNBRElBQWdCRUUwYWlBRUtBSUVFUUVBSVFFTEFrQWdBUVJBUVFBaEFBSkFJQVJGRFFBZ0EwVU5BQ0FFS0FKTVJRMEFJQVFvQWpBZ0F5QUVRVFJxSUFRb0FoQVJBQUFoQUFzZ0FBMEJDMEdrQ2hBQUlBUVFLQ0FERUNjZ0NTZ0NFQkFZUVFFaEFBd0JDeUFERUNjZ0JCQW9RUWdnQ1NnQ0VDSUtLQUlNSUFvb0FnaHNJZ1VnQ2lnQ0VDSUhiQ0lORUJzaEF3SkFJQUlOQUNBSFJRMEFJQW9vQWhnaERnTkFJQTRnQzBFMGJHb2lCaWdDR0NJQVFRaEhCRUFDUUNBQVFRZE5CRUFnQmlnQ0RDQUdLQUlJYkNFQklBWW9BaXdoQWlBR0tBSWdCRUFnQVVVTkFrRUJJQUJCQVd0MHJTRVVRUUFoQUNBQlFRUlBCRUFnQVVGOGNTRUFJQlQ5RWlFUVFRQWhCQU5BSUFJZ0JFRUNkR29pQ0NBSS9RQUNBQ0lTL2NjQlFRZjl5d0VpRWYwZEFDQVEvUjBBSWhWLy9SSWdFZjBkQVNBUS9SMEJJaFovL1I0QklCSWdFUDBOQ0FrS0N3d05EZzhBQVFJREFBRUNBLzNIQVVFSC9jc0JJaEw5SFFBZ0ZYLzlFaUFTL1IwQklCWi8vUjRCL1EwQUFRSURDQWtLQ3hBUkVoTVlHUm9iL1FzQ0FDQUVRUVJxSWdRZ0FFY05BQXNnQUNBQlJnMERDd05BSUFJZ0FFRUNkR29pQkNBRU5BSUFRZ2VHSUJSL1BnSUFJQUJCQVdvaUFDQUJSdzBBQ3d3Q0N5QUJSUTBCUVg4Z0FIUkJmM090SVJSQkFDRUFJQUZCQkU4RVFDQUJRWHh4SVFBZ0ZQMFNJUkJCQUNFRUEwQWdBaUFFUVFKMGFpSUlJQWo5QUFJQUloTDl5UUg5RFA4QUFBQUFBQUFBL3dBQUFBQUFBQUQ5MVFFaUVmMGRBQ0FRL1IwQUloV0EvUklnRWYwZEFTQVEvUjBCSWhhQS9SNEJJQklnRVAwTkNBa0tDd3dORGc4QUFRSURBQUVDQS8zSkFmME0vd0FBQUFBQUFBRC9BQUFBQUFBQUFQM1ZBU0lTL1IwQUlCV0EvUklnRXYwZEFTQVdnUDBlQWYwTkFBRUNBd2dKQ2dzUUVSSVRHQmthRy8wTEFnQWdCRUVFYWlJRUlBQkhEUUFMSUFBZ0FVWU5BZ3NEUUNBQ0lBQkJBblJxSWdRZ0JEVUNBRUwvQVg0Z0ZJQStBZ0FnQUVFQmFpSUFJQUZIRFFBTERBRUxJQUJCQ0dzaEJDQUdLQUlNSUFZb0FnaHNJUUlnQmlnQ0xDRUlJQVlvQWlBRVFDQUNSUTBCUVFBaEFDQUNRUVJQQkVBZ0FrRjhjU0VBUVFBaEFRTkFJQWdnQVVFQ2RHb2lEQ0FNL1FBQ0FDQUUvYXdCL1FzQ0FDQUJRUVJxSWdFZ0FFY05BQXNnQUNBQ1JnMENDd05BSUFnZ0FFRUNkR29pQVNBQktBSUFJQVIxTmdJQUlBQkJBV29pQUNBQ1J3MEFDd3dCQ3lBQ1JRMEFRUUFoQUNBQ1FRUlBCRUFnQWtGOGNTRUFRUUFoQVFOQUlBZ2dBVUVDZEdvaURDQU0vUUFDQUNBRS9hMEIvUXNDQUNBQlFRUnFJZ0VnQUVjTkFBc2dBQ0FDUmcwQkN3TkFJQWdnQUVFQ2RHb2lBU0FCS0FJQUlBUjJOZ0lBSUFCQkFXb2lBQ0FDUncwQUN3c2dCa0VJTmdJWUN5QUxRUUZxSWdzZ0IwY05BQXNMQWtBQ1FBSkFBa0FnQjBFQmF3NEVBQU1CQWdNTElBVkZEUUlnQ2lnQ0dDZ0NMQ0VDUVFBaEJFRUFJUUVDUUNBRlFReEpEUUFnQWlBRElBVnFTU0FDSUFWQkFuUnFJQU5MY1EwQUlBVkJmSEVoQVVFQUlRQURRQ0FBSUFOcUlBSWdBRUVDZEdyOUFBSUFJQkQ5RFFBRUNBd0FBQUFBQUFBQUFBQUFBQUQ5V2dBQUFDQUFRUVJxSWdBZ0FVY05BQXNnQVNBRlJnMERDeUFCSVFBZ0JVRURjU0lHQkVBRFFDQUFJQU5xSUFJZ0FFRUNkR29vQWdBNkFBQWdBRUVCYWlFQUlBUkJBV29pQkNBR1J3MEFDd3NnQVNBRmEwRjhTdzBDQTBBZ0FDQURhaUFDSUFCQkFuUnFLQUlBT2dBQUlBTWdBRUVCYWlJQmFpQUNJQUZCQW5ScUtBSUFPZ0FBSUFNZ0FFRUNhaUlCYWlBQ0lBRkJBblJxS0FJQU9nQUFJQU1nQUVFRGFpSUJhaUFDSUFGQkFuUnFLQUlBT2dBQUlBQkJCR29pQUNBRlJ3MEFDd3dDQ3lBRlJRMEJJQW9vQWhnaUFDZ0NsQUVoQVNBQUtBSmdJUUlnQUNnQ0xDRUVRUUFoQUNBRlFRRkhCRUFnQlVFQmNTRVBJQVZCZm5FaEJ3TkFJQU1nQUVFRGJHb2lCU0FFSUFCQkFuUWlCbW9vQWdBNkFBQWdCU0FDSUFacUtBSUFPZ0FCSUFVZ0FTQUdhaWdDQURvQUFpQURJQUJCQVhJaUJrRURiR29pQlNBRUlBWkJBblFpQm1vb0FnQTZBQUFnQlNBQ0lBWnFLQUlBT2dBQklBVWdBU0FHYWlnQ0FEb0FBaUFBUVFKcUlnQWdCMGNOQUFzZ0QwVU5BZ3NnQXlBQVFRTnNhaUlGSUFRZ0FFRUNkQ0lBYWlnQ0FEb0FBQ0FGSUFBZ0Ftb29BZ0E2QUFFZ0JTQUFJQUZxS0FJQU9nQUNEQUVMSUFWRkRRQWdDaWdDR0NJRUtBTElBU0VBSUFRb0FwUUJJUUVnQkNnQ1lDRUNJQVFvQWl3aENFRUFJUVFDUUNBRlFkUUFTUTBBSUFNZ0JVRUJheUlIUVFKMElnWnFJQU5KRFFBZ0EwRUJhaUlMSUFacUlBdEpEUUFnQTBFQ2FpSUxJQVpxSUF0SkRRQWdCaUFEUVFOcUlndHFJQXRKRFFBZ0IwSC8vLy8vQTBzTkFDQURJQWdnQlVFQ2RDSUdha2tnQ0NBRElBWnFJZ2RKY1EwQUlBSWdCMGtnQXlBQ0lBWnFTWEVOQUNBQklBZEpJQU1nQVNBR2FrbHhEUUFnQUNBSFNTQURJQUFnQm1wSmNRMEFJQVZCL1AvLy93ZHhJUVQ5REFBQUFBQUJBQUFBQWdBQUFBTUFBQUFoRWtFQUlRWURRQ0FESUJKQkF2MnJBU0lRL1JzQWFpQUlJQVpCQW5RaUIycjlBQUlBSWhIOUd3QTZBQUFnQXlBUS9Sc0JhaUFSL1JzQk9nQUFJQU1nRVAwYkFtb2dFZjBiQWpvQUFDQURJQkQ5R3dOcUlCSDlHd002QUFBZ0F5QVEvUXdCQUFBQUFRQUFBQUVBQUFBQkFBQUEvVkFpRWYwYkFHb2dBaUFIYXYwQUFnQWlFLzBiQURvQUFDQURJQkg5R3dGcUlCUDlHd0U2QUFBZ0F5QVIvUnNDYWlBVC9Sc0NPZ0FBSUFNZ0VmMGJBMm9nRS8wYkF6b0FBQ0FESUJEOURBSUFBQUFDQUFBQUFnQUFBQUlBQUFEOVVDSVIvUnNBYWlBQklBZHEvUUFDQUNJVC9Sc0FPZ0FBSUFNZ0VmMGJBV29nRS8wYkFUb0FBQ0FESUJIOUd3SnFJQlA5R3dJNkFBQWdBeUFSL1JzRGFpQVQvUnNET2dBQUlBTWdFUDBNQXdBQUFBTUFBQUFEQUFBQUF3QUFBUDFRSWhEOUd3QnFJQUFnQjJyOUFBSUFJaEg5R3dBNkFBQWdBeUFRL1JzQmFpQVIvUnNCT2dBQUlBTWdFUDBiQW1vZ0VmMGJBam9BQUNBRElCRDlHd05xSUJIOUd3TTZBQUFnRXYwTUJBQUFBQVFBQUFBRUFBQUFCQUFBQVAydUFTRVNJQVpCQkdvaUJpQUVSdzBBQ3lBRUlBVkdEUUVMQTBBZ0F5QUVRUUowSWdacUlnY2dCaUFJYWlnQ0FEb0FBQ0FISUFJZ0Jtb29BZ0E2QUFFZ0J5QUJJQVpxS0FJQU9nQUNJQWNnQUNBR2FpZ0NBRG9BQXlBRVFRRnFJZ1FnQlVjTkFBc0xJQW9RR0NBRElBMFFCeUFERUFsQkFDRUFDeUFKUWREQUFHb2tBQ0FBQ3dnQVFRZ2dBQkFiQzZzQ0FnSitBbjlDZnlFRElBQXRBRVJCQ0hGRkJFQWdBQ0FBS0FJZ0lnWTJBaVFDUUFKQUFrQWdBQ0FBS0FJd0lnVUVmd05BSUFZZ0JTQUFLQUlBSUFBb0FoUVJBQUFpQlVGL1JnMENJQUFnQUNnQ0pDQUZhaUlHTmdJa0lBQWdBQ2dDTUNBRmF5SUZOZ0l3SUFVTkFBc2dBQ2dDSUFVZ0JnczJBaVFnQVVJQVZRMEJRZ0FoQXd3Q0N5QUFJQUFvQWtSQkNISTJBa1FnQWtFRVFaSDFBRUVBRUFnZ0FFRUFOZ0l3SUFBZ0FDZ0NSRUVJY2pZQ1JFSi9Ed3RDQUNFREEwQWdBU0FBS0FJQUlBQW9BaGdSQ3dBaUJFSi9VUVJBSUFKQkJFR0M5UUJCQUJBSUlBQWdBQ2dDUkVFSWNqWUNSQ0FBSUFBcEF6Z2dBM3czQXpoQ2Z5QURJQU5RR3c4TElBTWdCSHdoQXlBQklBUjlJZ0ZDQUZVTkFBc0xJQUFnQUNrRE9DQURmRGNET0FzZ0F3c2pBUUYvSUFFZ0FTZ0NBQ0FCS0FJSUlnRWdBS2NpQWlBQklBSkpHMm8yQWdSQkFRczhBZ0ovQVg0Z0FTZ0NBQ0FCS0FJSWFpSURJQUVvQWdRaUFrWUVRRUovRHdzZ0FTQUNJQUNuYWpZQ0JDQURJQUpyckNJRUlBQWdBQ0FFVlJzTG1BTUNBbjRDZnlBQUtBSXdJZ1VnQWFjaUJrOEVRQ0FBSUFVZ0JtczJBakFnQUNBQUtBSWtJQVpxTmdJa0lBQWdBQ2tET0NBQmZEY0RPQ0FCRHdzZ0FDMEFSRUVFY1FSQUlBQkJBRFlDTUNBQUlBQW9BaVFnQldvMkFpUWdBQ0FGclNJQklBQXBBemg4TndNNElBRkNmeUFGR3c4TEFrQWdCVVVFUUF3QkN5QUFRUUEyQWpBZ0FDQUFLQUlnTmdJa0lBRWdCYTBpQTMwaEFRc2dBVUlBVlFSQUEwQWdBQ2tEQ0NBQUtRTTRJQUVnQTN4OFZBUkFJQUpCQkVHcjlRQkJBQkFJSUFCQkFEWUNNQ0FBSUFBb0FpQTJBaVFnQUNBQUtRTTRJQU44SWdNM0F6Z2dBQ2tEQ0NJQklBTjlJUVFnQVNBQUtBSUFJQUFvQWh3UkNRQWhCU0FBS0FKRUlRSWdBQ0FGQkg4Z0FDQUJOd000SUFKQmUzRUZJQUlMUVFSeU5nSkVRbjhnQkNBQklBTlJHdzhMSUFFZ0FDZ0NBQ0FBS0FJWUVRc0FJZ1JDZjFFRVFDQUNRUVJCcS9VQVFRQVFDQ0FBSUFBb0FrUkJCSEkyQWtRZ0FDQUFLUU00SUFOOE53TTRRbjhnQXlBRFVCc1BDeUFESUFSOElRTWdBU0FFZlNJQlFnQlZEUUFMQ3lBQUlBQXBBemdnQTN3M0F6Z2dBd3ViQVFFRmYwRUJJQUlvQWdnaUJ5QUhRUUZOR3lFRUlBSW9BZ1FpQXlBQ0tBSUFheUVHQTBBZ0JDSUZRUUYwSVFRZ0JTQUdheUFCU1EwQUN5QUZJQWRIQkVBZ0JSQU5JZ05GQkVCQmZ3OExJQUlvQWdBaUJBUkFJQU1nQkNBR0VBc2FJQUlvQWdBUUNRc2dBaUFGTmdJSUlBSWdBellDQUNBQ0lBTWdCbW9pQXpZQ0JBc2dBeUFBSUFFUUN4b2dBaUFDS0FJRUlBRnFOZ0lFSUFFTFJnRUNmeUFDS0FJQUlBSW9BZ2hxSWdRZ0FpZ0NCQ0lEUmdSQVFYOFBDeUFBSUFNZ0JDQURheUlBSUFFZ0FDQUJTUnNpQUJBTEdpQUNJQUlvQWdRZ0FHbzJBZ1FnQUF1cUFnRUVmeU1BUVJCcklnUWtBQUpBSUFBb0FuUU5BQ0FDUVFGTkJFQWdBMEVCUWZ6QkFFRUFFQWdNQVFzZ0FTQUVRUXhxUVFJUUNpQUVLQUlNSWdaQi8vOERjU0lIUlFSQUlBTkJBVUdkd2dCQkFCQUlEQUVMSUFJZ0IwRUdiRUVDYWtrRVFDQURRUUZCL01FQVFRQVFDQXdCQ3lBR1FRWnNFQTBpQTBVTkFDQUFRUWdRRFNJQ05nSjBJQUpGQkVBZ0F4QUpEQUVMSUFJZ0F6WUNBQ0FDSUFRdkFRd2lBanNCQkNBQ1JRUkFRUUVoQlF3QkMwRUFJUUlEUUNBQlFRSnFJQVJCREdvaUJVRUNFQW9nQXlBQ1FRWnNhaUlHSUFRb0FndzdBUUFnQVVFRWFpQUZRUUlRQ2lBR0lBUW9BZ3c3QVFJZ0FVRUdhaUlCSUFWQkFoQUtJQVlnQkNnQ0REc0JCRUVCSVFVZ0FrRUJhaUlDSUFBb0FuUXZBUVJKRFFBTEN5QUVRUkJxSkFBZ0JRdndBUUVGZnlNQVFSQnJJZ1FrQUFKL0lBQW9BbmdpQlVVRVFDQURRUUZCenNFQVFRQVFDRUVBREFFTElBVW9BZ3dFUUNBRFFRRkJ0dFVBUVFBUUNFRUFEQUVMSUFJZ0JTMEFFaUlGUVFKMElnWkpCRUFnQTBFQlFhM0JBRUVBRUFoQkFBd0JDMEVBSUFZUURTSUNSUTBBR2lBRkJFQkJBQ0VEQTBBZ0FTQUVRUXhxSWdkQkFoQUtJQUlnQTBFQ2RHb2lCaUFFS0FJTU93RUFJQUZCQW1vZ0IwRUJFQW9nQmlBRUtBSU1PZ0FDSUFGQkEyb2dCMEVCRUFvZ0JpQUVLQUlNT2dBRElBRkJCR29oQVNBRFFRRnFJZ01nQlVjTkFBc0xJQUFvQW5nZ0FqWUNERUVCQ3lFSUlBUkJFR29rQUNBSUMvQURBUWwvSXdCQkVHc2lCU1FBQWtBZ0FrRURTUTBBSUFBb0FuZ05BQ0FCSUFWQkRHcEJBaEFLSUFVdkFRd2lDVUdCQ0d0Qi8zZE5CRUFnQlNBSk5nSUFJQU5CQVVHMEdpQUZFQWdNQVFzZ0FVRUNhaUFGUVF4cVFRRVFDaUFGTHdFTUlnaEZCRUFnQTBFQlFkUVhRUUFRQ0F3QkN5QUlRUU5xSUFKTERRQWdDQ0FKYkVFQ2RCQU5JZ2RGRFFBZ0NCQU5JZ3BGQkVBZ0J4QUpEQUVMSUFnUURTSUxSUVJBSUFjUUNTQUtFQWtNQVF0QkZCQU5JZ1pGQkVBZ0J4QUpJQW9RQ1NBTEVBa01BUXNnQVVFRGFpRURJQVlnQ2pZQ0NDQUdJQXMyQWdRZ0JpQUpPd0VRSUFZZ0J6WUNBQ0FGS0FJTUlRd2dCa0VBTmdJTUlBWWdERG9BRWlBQUlBWTJBbmdEUUNBRElBVkJER3BCQVJBS0lBUWdDbW9nQlMwQURFSC9BSEZCQVdvNkFBQWdCQ0FMYWlBRktBSU1RWUFCY1VFSGRqb0FBQ0FEUVFGcUlRTWdCRUVCYWlJRUlBaEhEUUFMSUFsRkJFQkJBU0VFREFFTFFRQWhCZ05BUVFBaEJFRUFJUUFEUUNBQ1FRUWdCQ0FLYWkwQUFFRUhha0VEZGlJRUlBUkJCRThiSWdRZ0F5QUJhMnBJQkVCQkFDRUVEQU1MSUFNZ0JVRU1haUFFRUFvZ0J5QUZLQUlNTmdJQUlBZEJCR29oQnlBRElBUnFJUU1nQUVFQmFpSUFRZi8vQTNFaUJDQUlTUTBBQzBFQklRUWdCa0VCYWlJR1FmLy9BM0VnQ1VrTkFBc0xJQVZCRUdva0FDQUVDNWdCQVFKL0l3QkJFR3NpQlNRQUlBQW9BaGdpQkVIL0FVY0VRQ0FGSUFRMkFnQWdBMEVDUWVRVElBVVFDQXNDUUFKQUlBSWdBQ2dDRkVZRVFDQUNEUUZCQVNFRURBSUxRUUFoQkNBRFFRRkJ5K3dBUVFBUUNBd0JDMEVBSVFJRFFFRUJJUVFnQVNBQUtBSklJQUpCREd4cVFRaHFRUUVRQ2lBQlFRRnFJUUVnQWtFQmFpSUNJQUFvQWhSSkRRQUxDeUFGUVJCcUpBQWdCQXVPQmdFR2Z5TUFRZEFBYXlJRUpBQUNRQ0FDUVFKTkJFQWdBMEVCUWF2c0FFRUFFQWdNQVFzZ0FDMEFmQVJBSUFOQkJFSEowZ0JCQUJBSVFRRWhCZ3dCQzBFQklRWWdBU0FBUVNocVFRRVFDaUFCUVFGcUlBQkJOR3BCQVJBS0lBRkJBbW9nQUVFc2FrRUJFQW9nQVVFRGFpRUZBa0FDUUFKQUFrQUNRQ0FBS0FJb0lnZEJBV3NPQWdBQkFnc2dBa0VHVFFSQUlBUWdBallDRUNBRFFRRkIwUEVBSUFSQkVHb1FDRUVBSVFZTUJRc0NRQ0FDUVFkR0RRQWdBQ2dDTUVFT1JnMEFJQVFnQWpZQ01DQURRUUpCMFBFQUlBUkJNR29RQ0FzZ0JTQUFRVEJxUVFRUUNpQUFLQUl3UVE1SERRTkJKQkFOSWdWRkJFQkJBQ0VHSUFOQkFVR3pQRUVBRUFnTUJRc2dCVUVPTmdJQUlBUkJBRFlDUUNBRVFRQTJBamdnQkVFQU5nSklJQVJCQURZQ1BDQUVRUUEyQWtRZ0JFRUFOZ0pNUWJEcWtBSWhCaUFFUWJEcWtBSTJBalFnQlVHQWpKV2lCRFlDQkFKL0lBSkJCMGNFUUNBQ1FTTkdCRUFnQVVFSGFpQUVRY3dBYWtFRUVBb2dBVUVMYWlBRVFjZ0Fha0VFRUFvZ0FVRVBhaUFFUWNRQWFrRUVFQW9nQVVFVGFpQUVRVUJyUVFRUUNpQUJRUmRxSUFSQlBHcEJCQkFLSUFGQkcyb2dCRUU0YWtFRUVBb2dBVUVmYWlBRVFUUnFRUVFRQ2lBRlFRQTJBZ1FnQkNnQ05DRUdJQVFvQWpnaEFpQUVLQUpBSVFNZ0JDZ0NQQ0VISUFRb0FrUWhDQ0FFS0FKTUlRa2dCQ2dDU0F3Q0N5QUVJQUkyQWlBZ0EwRUNRZlR4QUNBRVFTQnFFQWdMUVFBaEFrRUFJUU5CQUNFSFFRQUxJUUVnQlNBSE5nSVlJQVVnQ0RZQ0VDQUZJQWsyQWdnZ0JTQUdOZ0lnSUFVZ0FqWUNIQ0FGSUFNMkFoUWdCU0FCTmdJTUlBQkJBRFlDY0NBQUlBVTJBbXdNQXdzZ0FDQUNRUU5ySWdFMkFuQWdBRUVCSUFFUURDSUROZ0pzSUFORkRRRWdBa0VEVEEwQ1FRQWhBZ05BSUFVZ0JFSE1BR3BCQVJBS0lBQW9BbXdnQW1vZ0JDZ0NURG9BQUNBRlFRRnFJUVVnQWtFQmFpSUNJQUZIRFFBTERBSUxJQWRCQTBrTkFpQUVJQWMyQWdBZ0EwRUVRZXYzQUNBRUVBZ01BZ3RCQUNFR0lBQkJBRFlDY0F3QkMwRUJJUVlnQUVFQk9nQjhDeUFFUWRBQWFpUUFJQVlMdEFNQkEzOGpBRUVnYXlJRUpBQUNRQ0FBS0FKSUJFQWdBMEVDUVkwMVFRQVFDRUVCSVFJTUFRc2dBa0VPUndSQVFRQWhBaUFEUVFGQml1d0FRUUFRQ0F3QkN5QUJJQUJCRUdwQkJCQUtJQUZCQkdvZ0FFRU1ha0VFRUFvZ0FVRUlhaUFBUVJScVFRSVFDaUFBS0FJTUlRVUNRQ0FFQW44Z0FDZ0NFQ0lHUlFSQUlBQW9BaFFNQVFzZ0FDZ0NGQ0lDSUFWRkRRQWFJQUlOQVVFQUN6WUNDQ0FFSUFZMkFnUWdCQ0FGTmdJQUlBTkJBVUh1NmdBZ0JCQUlRUUFoQWd3QkN5QUNRWUdBQVd0Qi8vOStUUVJBUVFBaEFpQURRUUZCbU9vQVFRQVFDQXdCQ3lBQUlBSkJEQkFNSWdJMkFrZ2dBa1VFUUVFQUlRSWdBMEVCUWIzcUFFRUFFQWdNQVF0QkFTRUNJQUZCQ21vZ0FFRVlha0VCRUFvZ0FVRUxhaUFBUVJ4cVFRRVFDaUFBS0FJY0lnVkJCMGNFUUNBRUlBVTJBaEFnQTBFRVFhMzZBQ0FFUVJCcUVBZ0xJQUZCREdvZ0FFRWdha0VCRUFvZ0FVRU5haUFBUVNScVFRRVFDaUFBS0FJQUlnRWdBUzBBdkFGQit3RnhJQUFvQWhoQi93RkdRUUowY2pvQXZBRWdBQ2dDQUNJQklBQW9BZ3cyQXRnQklBRWdBQ2dDRURZQzNBRWdBRUVCT2dDRkFRc2dCRUVnYWlRQUlBSUx1Z1FCQm44akFFRVFheUlHSkFBQ2Z5QUFMUUJrUVFKeFJRUkFJQU5CQVVIczB3QkJBQkFJUVFBTUFRc2dBRUVBTmdKb0FrQUNRQUpBSUFJRVFBTkFJQUpCQjAwRVFDQURRUUZCdVJsQkFCQUlEQVVMSUFFZ0JrRU1haUlGUVFRUUNpQUdLQUlNSVFRZ0FVRUVhaUFGUVFRUUNrRUlJUWNnQmlnQ0RDRUZBa0FDUUFKQUFrQWdCQTRDQVFBREN5QUNRUkJKQkVCQjRSa2hCQXdIQ3lBQlFRaHFJQVpCQ0dwQkJCQUtJQVlvQWdnRVFFSExQaUVFREFjTElBRkJER29nQmtFTWFrRUVFQW9nQmlnQ0RDSUVEUUZCc2hnaEJBd0dDeUFEUVFGQnNoaEJBQkFJREFZTFFSQWhCd3NnQkNBSFNRUkFJQU5CQVVHR3hBQkJBQkFJREFVTElBSWdCRWtFUUNBRFFRRkJ2c01BUVFBUUNFRUFEQVlMQWtBQ1FDQUFJQUVnQjJvZ0JDQUhheUFEQW44Q1FBSkFBa0FnQlVIeDJMMmJCa3dFUUNBRlFlUEd3Wk1HUmcwQklBVkI1c3FSbXdaR0RRTWdCVUh3d3JXYkJrY05CVUh3d0FFTUJBc2dCVUh5MkkyREIwWU5BVUhRd0FFZ0JVSHl5S0hMQmtZTkF4b2dCVUh5MkwyYkJrY05CRUhZd0FFTUF3dEI0TUFCREFJTFFlakFBUXdCQzBINHdBRUxLQUlFRVFFQURRRkJBQXdIQ3lBQUlBQW9BbWhCLy8vLy93ZHlOZ0pvQzBFQklBZ2dCVUh5eUtITEJrWWJJUWdnQVNBRWFpRUJJQUlnQkdzaUFnMEFDeUFJRFFFTElBTkJBVUhhd2dCQkFCQUlRUUFNQXdzZ0FFRUJPZ0NFQVNBQUlBQW9BbVJCQkhJMkFtUkJBUXdDQ3lBRFFRRWdCRUVBRUFnTElBTkJBVUdlRGtFQUVBaEJBQXNoQ1NBR1FSQnFKQUFnQ1F2aUFRRUJmeUFBS0FKa1FRRkhCRUFnQTBFQlFablVBRUVBRUFoQkFBOExBa0FnQWtFSFRRUkFEQUVMSUFFZ0FFRTRha0VFRUFvZ0FVRUVhaUFBUVR4cVFRUVFDaUFDUVFOeEJFQU1BUXNnQUNBQ1FRaHJJZ0pCQW5ZaUJEWUNRQUpBSUFKRkRRQWdBQ0FFUVFRUURDSUNOZ0pFSUFKRkJFQWdBMEVCUWFrUVFRQVFDRUVBRHdzZ0FDZ0NRRVVOQUNBQlFRaHFJUU5CQUNFQ0EwQWdBeUFBS0FKRUlBSkJBblJxUVFRUUNpQURRUVJxSVFNZ0FrRUJhaUlDSUFBb0FrQkpEUUFMQ3lBQUlBQW9BbVJCQW5JMkFtUkJBUThMSUFOQkFVR3FMVUVBRUFoQkFBdkVBUUVDZnlBQUlBQW9BaUFpQkRZQ0pBSkFJQUFvQWpBaUF3UkFBMEFnQkNBRElBQW9BZ0FnQUNnQ0ZCRUFBQ0lEUVg5R0RRSWdBQ0FBS0FJa0lBTnFJZ1EyQWlRZ0FDQUFLQUl3SUFOcklnTTJBakFnQXcwQUN5QUFLQUlnSVFRTElBQkJBRFlDTUNBQUlBUTJBaVFnQVNBQUtBSUFJQUFvQWh3UkNRQkZCRUFnQUNBQUtBSkVRUWh5TmdKRVFRQVBDeUFBSUFFM0F6aEJBUThMSUFBZ0FDZ0NSRUVJY2pZQ1JDQUNRUVJCa2ZVQVFRQVFDQ0FBSUFBb0FrUkJDSEkyQWtSQkFBdUNBUUVDZnlNQVFSQnJJZ1FrQUFKL0lBQW9BbVFFUUNBRFFRRkJ0dE1BUVFBUUNFRUFEQUVMSUFKQkJFY0VRQ0FEUVFGQnppMUJBQkFJUVFBTUFRc2dBU0FFUVF4cVFRUVFDaUFFS0FJTVFZcU9xdWdBUndSQUlBTkJBVUgySlVFQUVBaEJBQXdCQ3lBQUlBQW9BbVJCQVhJMkFtUkJBUXNoQlNBRVFSQnFKQUFnQlFzTkFDQUFLQUlBSUFFZ0FoQStDd2tBSUFBb0FnQVFRd3NKQUNBQUtBSUFFRUlMRFFBZ0FDZ0NBQ0FCSUFJUVJRdEJBUUYvSUFJRWZ5QURRUUpCdHNzQVFRQVFDQ0FBS0FJQUlBRWdBaUFESUFRUVAwVUVRQ0FEUVFGQnFTOUJBQkFJUVFBUEN5QUFJQUlnQXhCcUJVRUFDd3NWQUNBQUtBSUFJQUVnQWlBRElBUWdCU0FHRUVjTER3QWdBQ2dDQUNBQklBSWdBeEJJQ3hNQUlBQW9BZ0FnQVNBQ0lBTWdCQ0FGRUNRTEhRQWdBQ2dDQUNBQklBSWdBeUFFSUFVZ0JpQUhJQWdnQ1NBS0VDQUw2Z1FCQjM4Q1FDQUJLQUlJUVRVZ0F4QWVSUTBBSUFFb0FnUWlCeWdDQUNFRklBY29BZ2doQkFKQUlBVUVRRUVCSVFZZ0JVRUJSd1JBSUFWQmZuRWhDZ05BQW45QkFDQUdSUTBBR2tFQUlBRWdBQ0FESUFRb0FnQVJBQUJGRFFBYUlBRWdBQ0FESUFRb0FnUVJBQUJCQUVjTElRWWdCRUVJYWlFRUlBbEJBbW9pQ1NBS1J3MEFDd3NDUUNBRlFRRnhCRUFnQmtVTkFTQUJJQUFnQXlBRUtBSUFFUUFBUVFCSElRWUxJQWRCQURZQ0FDQUdSUTBEREFJTElBZEJBRFlDQUVFQUR3c2dCMEVBTmdJQUN5QUJLQUlJSWdjb0FnQWhCU0FIS0FJSUlRUUNRQUpBQW44Q1FDQUZCRUJCQVNFR0lBVkJBWEVoQ0NBRlFRRkhEUUZCQUF3Q0N5QUhRUUEyQWdBTUFnc2dCVUYrY1NFRlFRQWhDUU5BQW45QkFDQUdSUTBBR2tFQUlBRWdBQ0FESUFRb0FnQVJBQUJGRFFBYUlBRWdBQ0FESUFRb0FnUVJBQUJCQUVjTElRWWdCRUVJYWlFRUlBbEJBbW9pQ1NBRlJ3MEFDeUFHUlFzaEJTQUlCRUFnQlEwQ0lBRWdBQ0FESUFRb0FnQVJBQUJCQUVjaEJnc2dCMEVBTmdJQVFRQWhDQ0FHUlEwQ0N5QUJMUUNFQVVVRVFDQURRUUZCemRZQVFRQVFDRUVBRHdzZ0FTMEFoUUZGQkVBZ0EwRUJRYkRXQUVFQUVBaEJBQThMSUFBZ0FTZ0NBQ0FDSUFNUVNTRUlJQUpGRFFFZ0FpZ0NBQ0lBUlEwQlFRRWhCQUpBQWtBQ1FBSkFBa0FDUUNBQktBSXdRUXhyRGcwREJBUUVCUUFCQkFRRUJBUUNCQXRCQWlFRURBUUxRUU1oQkF3REMwRUVJUVFNQWd0QkJTRUVEQUVMUVg4aEJBc2dBQ0FFTmdJVUlBRW9BbXdpQTBVTkFTQUFJQU0yQWh3Z0FpZ0NBQ0FCS0FKd05nSWdJQUZCQURZQ2JDQUlEd3NnQjBFQU5nSUFRUUFoQ0FzZ0NBdmtDUUlLZndGK0l3QkI4QUJySWdNa0FFR0FDQ0VJQW44Q1FFRUJRWUFJRUF3aUJnUkFJQU5CM0FCcUlRc2dBMEhzQUdvaENRTkFBa0FDUUFKQUlBRWdBMEhvQUdvaUJFRUlJQUlRRWtFSVJ3MEFJQVFnQTBIWUFHcEJCQkFLSUFrZ0MwRUVFQXBCQ0NFRkFrQUNRQUpBQWtBQ1FDQURLQUpZRGdJQUFRUUxJQUVwQXdnaURWQUVma0lBQlNBTklBRXBBemg5Q3lJTlF2ai8vLzhQVXcwQklBSkJBVUhMUGtFQUVBZ01CQXNnQVNBRFFlZ0FhaUlFUVFnZ0FoQVNRUWhIRFFNZ0JDQURRZVFBYWtFRUVBb2dBeWdDWkVVTkFTQUNRUUZCeXo1QkFCQUlEQU1MSUFNZ0RhZEJDR28yQWxnTUFRc2dDU0FEUWRnQWFrRUVFQXBCRUNFRkN5QURLQUpjSWdSQjQrVEEwd1pHQkVBZ0FDZ0NaQ0lCUVFSeEJFQWdBQ0FCUVFoeU5nSmtEQUlMSUFKQkFVR3RLMEVBRUFnZ0JoQUpRUUFNQndzZ0F5Z0NXQ0lIUlFSQUlBSkJBVUd5R0VFQUVBZ2dCaEFKUVFBTUJ3c2dCU0FIU3dSQUlBTWdCRFlDQkNBRElBYzJBZ0FnQWtFQlFZcm9BQ0FERUFnTUJnc0NRQUovQW44Q1FBSi9Ba0FDUUFKQUFrQUNRQ0FFUWZIWXZac0dUQVJBSUFSQjQ4YkJrd1pHRFFJZ0JFSG15cEdiQmtZTkJDQUVRZkRDdFpzR1J3MEJRZkRBQVF3R0N5QUVRWi9Bd05JR1RBUkFJQVJCOHRpOW13WkdEUVZCME1BQklBUkI4c2loeXdaR0RRWWFJQVJCOFBMUnN3WkhEUUZCdU1BQkRBZ0xJQVJCOHRpTmd3ZEdEUUlnQkVHZ3dNRFNCa1lOQmtIQXdBRWdCRUhvNU1EVEJrWU5CeG9MSUFBb0FtUWlCRUVCY1EwSUlBSkJBVUg4RGtFQUVBZ2dCaEFKUVFBTUR3dEI0TUFCREFNTFFlakFBUXdDQzBINHdBRU1BUXRCMk1BQkN5RUtJQU1nQkVIL0FYRTJBa3dnQXlBRVFSaDJOZ0pBSUFNZ0JFRUlka0gvQVhFMkFrZ2dBeUFFUVJCMlFmOEJjVFlDUkNBQ1FRSkJ5UTRnQTBGQWF4QUlJQWNnQldzaUJTQUFMUUJrUVFSeERRSWFJQU1nQXlnQ1hDSUVRUmgyTmdJd0lBTWdCRUgvQVhFMkFqd2dBeUFFUVJCMlFmOEJjVFlDTkNBRElBUkJDSFpCL3dGeE5nSTRJQUpCQWtIYU15QURRVEJxRUFnZ0FDQUFLQUprUWYvLy8vOEhjallDWkNBQklBV3RJZzBnQWlBQktBSW9FUWdBSUExUkRRY2dBa0VCUVpJY1FRQVFDQ0FHRUFsQkFBd0tDMEd3d0FFTElRb2dCeUFGYXdzaEJTQUJLUU1JSWcxUUJINUNBQVVnRFNBQktRTTRmUXNnQmExVEJFQWdBeWdDV0NFRUlBTW9BbHdoQUNBRElBRXBBd2dpRFZBRWZrSUFCU0FOSUFFcEF6aDlDejRDS0NBRElBVTJBaVFnQXlBQVFmOEJjVFlDSUNBRElBQkJHSFkyQWhRZ0F5QUVOZ0lRSUFNZ0FFRUlka0gvQVhFMkFod2dBeUFBUVJCMlFmOEJjVFlDR0NBQ1FRRkIzZlVBSUFOQkVHb1FDQXdIQ3lBRklBaE5CRUFnQmlFRURBUUxJQVVoQ0NBR0lBVVFFQ0lFRFFNZ0JoQUpJQUpCQVVIL0QwRUFFQWhCQUF3SEN5QUVRUUp4UlFSQUlBSkJBVUhDRDBFQUVBZ2dCaEFKUVFBTUJ3c2dBQ0FFUWYvLy8vOEhjallDWkNBQklBY2dCV3V0SWcwZ0FpQUJLQUlvRVFnQUlBMVJEUU1nQUMwQVpFRUljVVVOQVNBQ1FRSkJraHhCQUJBSUN5QUdFQWxCQVF3RkN5QUNRUUZCa2h4QkFCQUlJQVlRQ1VFQURBUUxJQUVnQkNBRklBSVFFaUFGUndSQUlBSkJBVUhFSEVFQUVBZ2dCQkFKUVFBTUJBc2dBQ0FFSWdZZ0JTQUNJQW9vQWdRUkFRQU5BQXNnQkJBSlFRQU1BZ3NnQWtFQlFhSWxRUUFRQ0VFQURBRUxJQVlRQ1VFQUN5RU1JQU5COEFCcUpBQWdEQXZtQVFFR2Z5QUFLQUlJUVRVZ0FoQWVCRUFDUUNBQUtBSUlJZ1lvQWdBaEF5QUdLQUlJSVFVQ1FBSkFBbjhDUUNBREJFQkJBU0VFSUFOQkFYRWhCeUFEUVFGSERRRkJBQXdDQ3lBR1FRQTJBZ0FNQWdzZ0EwRitjU0VEQTBBQ2YwRUFJQVJGRFFBYVFRQWdBQ0FCSUFJZ0JTZ0NBQkVBQUVVTkFCb2dBQ0FCSUFJZ0JTZ0NCQkVBQUVFQVJ3c2hCQ0FGUVFocUlRVWdDRUVDYWlJSUlBTkhEUUFMSUFSRkN5RURJQWNFUUNBRERRSWdBQ0FCSUFJZ0JTZ0NBQkVBQUVFQVJ5RUVDeUFHUVFBMkFnQWdCRVVOQWdzZ0FDZ0NBQnBCQVE4TElBWkJBRFlDQUFzTFFRQUxDZ0FnQUNnQ0FCcEJBQXNVQUNBQUtBSUFJZ0FFUUNBQUlBRTJBcmdCQ3dzaEFDQUFLQUlBSUFFUVRDQUFRUUE2QUh3Z0FDQUJLQUs0UUVFQmNUWUNnQUVMTWdBZ0FrVUVRRUVBRHdzZ0FDZ0NBQ0FCSUFJZ0F4QkJSUVJBSUFOQkFVR3BMMEVBRUFoQkFBOExJQUFnQWlBREVHb0xhUUlDZndGOEl3QkJFR3NpQXlRQUlBSUVRQU5BSUFBZ0EwRUlhaEE5SUFFQ2Z5QURLd01JSWdXWlJBQUFBQUFBQU9CQll3UkFJQVdxREFFTFFZQ0FnSUI0Q3pZQ0FDQUJRUVJxSVFFZ0FFRUlhaUVBSUFSQkFXb2lCQ0FDUncwQUN3c2dBMEVRYWlRQUM0UUJBZ0ovQVgwakFFRVFheUlESkFBZ0FnUkFBMEFnQXlBQUxRQUFPZ0FQSUFNZ0FDMEFBVG9BRGlBRElBQXRBQUk2QUEwZ0F5QUFMUUFET2dBTUlBRUNmeUFES2dJTUlnV0xRd0FBQUU5ZEJFQWdCYWdNQVF0QmdJQ0FnSGdMTmdJQUlBRkJCR29oQVNBQVFRUnFJUUFnQkVFQmFpSUVJQUpIRFFBTEN5QURRUkJxSkFBTFN3RUNmeU1BUVJCcklnTWtBQ0FDQkVBRFFDQUFJQU5CREdwQkJCQUtJQUVnQXlnQ0REWUNBQ0FCUVFScUlRRWdBRUVFYWlFQUlBUkJBV29pQkNBQ1J3MEFDd3NnQTBFUWFpUUFDMHNCQW44akFFRVFheUlESkFBZ0FnUkFBMEFnQUNBRFFReHFRUUlRQ2lBQklBTW9BZ3cyQWdBZ0FVRUVhaUVCSUFCQkFtb2hBQ0FFUVFGcUlnUWdBa2NOQUFzTElBTkJFR29rQUF0S0FRSi9Jd0JCRUdzaUF5UUFJQUlFUUFOQUlBQWdBMEVJYWhBOUlBRWdBeXNEQ0xZNEFnQWdBVUVFYWlFQklBQkJDR29oQUNBRVFRRnFJZ1FnQWtjTkFBc0xJQU5CRUdva0FBdG9BUUovSXdCQkVHc2lBeVFBSUFJRVFBTkFJQU1nQUMwQUFEb0FEeUFESUFBdEFBRTZBQTRnQXlBQUxRQUNPZ0FOSUFNZ0FDMEFBem9BRENBQklBTXFBZ3c0QWdBZ0FVRUVhaUVCSUFCQkJHb2hBQ0FFUVFGcUlnUWdBa2NOQUFzTElBTkJFR29rQUF0TUFRSi9Jd0JCRUdzaUF5UUFJQUlFUUFOQUlBQWdBMEVNYWtFRUVBb2dBU0FES0FJTXN6Z0NBQ0FCUVFScUlRRWdBRUVFYWlFQUlBUkJBV29pQkNBQ1J3MEFDd3NnQTBFUWFpUUFDMHdCQW44akFFRVFheUlESkFBZ0FnUkFBMEFnQUNBRFFReHFRUUlRQ2lBQklBTW9BZ3l6T0FJQUlBRkJCR29oQVNBQVFRSnFJUUFnQkVFQmFpSUVJQUpIRFFBTEN5QURRUkJxSkFBTHFnZ0NEWDhCZXlNQVFSQnJJZ2drQUFKL0lBQW9BZ2hCRUVZRVFDQUFLQUtjQVNBQUtBTE1BVUdNTEd4cURBRUxJQUFvQWd3TElRa0NRQ0FDUlFSQUlBTkJBVUh3SDBFQUVBZ01BUXNnQUNnQ1NDRUdRUUVoQkNBQklBaEJDR3BCQVJBS0lBZ29BZ2dpQlVFQ1R3UkFJQU5CQWtISHh3QkJBQkFJREFFTElBSWdCVUVCYWtjRVFFRUFJUVFnQTBFQ1FmQWZRUUFRQ0F3QkN3SkFJQVlvQWhBaUEwVU5BQ0FKS0FMUUt5RUVJQU5CQ0U4RVFDQURRWGh4SVFaQkFDRUNBMEFnQkVFQU5nSzhReUFFUVFBMkFvUTdJQVJCQURZQ3pESWdCRUVBTmdLVUtpQUVRUUEyQXR3aElBUkJBRFlDcEJrZ0JFRUFOZ0xzRUNBRVFRQTJBclFJSUFSQndNTUFhaUVFSUFKQkNHb2lBaUFHUncwQUN3c2dBMEVIY1NJRFJRMEFRUUFoQWdOQUlBUkJBRFlDdEFnZ0JFRzRDR29oQkNBQ1FRRnFJZ0lnQTBjTkFBc0xJQWtvQXVncklnSUVmeUFDRUFrZ0NVRUFOZ0xvS3lBSUtBSUlCU0FGQzBVRVFFRUJJUVFNQVFzRFFDQUJRUUZxSWdFZ0NFRU1ha0VCRUFvQ1FDQUpLQUtBTEVVTkFDQUpLQUw4S3lJREtBSUFJQWdvQWd4SERRQWdBeWdDQkNJRklBQW9Ba2dpQmlnQ0VFY05BQ0FES0FJSUlnSUVRRUVBSVFRZ0FpZ0NFQ0FGSUFWc0lnVWdBaWdDQUVFQ2RFSGd2UUZxS0FJQWJFY05BeUFKSUFWQkFuUVFEU0lITmdMb0t5QUhSUTBESUFJb0Fnd2dCeUFGSUFJb0FnQkJBblJCa01BQmFpZ0NBQkVGQUFzZ0F5Z0NEQ0lDUlEwQVFRQWhCQ0FDS0FJUUlBWW9BaEFpQXlBQ0tBSUFRUUowUWVDOUFXb29BZ0JzUncwQ0lBTkJBblFRRFNJRlJRMENJQUlvQWd3Z0JTQURJQUlvQWdCQkFuUkJvTUFCYWlnQ0FCRUZBQUpBSUFZb0FoQWlCMFVOQUNBSktBTFFLeUVFUVFBaEN3SkFBa0FnQjBFRVNRMEFJQVJCdEFocUlnd2dCU0FIUVFKMGFra0VRQ0FGSUFRZ0IwRzRDR3hxU1EwQkN5QUVRZHdoYWlFTklBUkJwQmxxSVE0Z0JFSHNFR29oRHlBRklBZEJmSEVpQmtFQ2RHb2hBaUFFSUFaQnVBaHNhaUVFUVFBaEF3TkFJQXdnQTBHNENHd2lDbW9nQlNBRFFRSjBhdjBBQWdBaUVmMWFBZ0FBSUFvZ0Qyb2dFZjFhQWdBQklBb2dEbW9nRWYxYUFnQUNJQW9nRFdvZ0VmMWFBZ0FESUFOQkJHb2lBeUFHUncwQUN5QUdJQWRHRFFJTUFRc2dCU0VDUVFBaEJnc2dCeUFHSWdOclFRZHhJZ29FUUFOQUlBUWdBaWdDQURZQ3RBZ2dBMEVCYWlFRElBUkJ1QWhxSVFRZ0FrRUVhaUVDSUF0QkFXb2lDeUFLUncwQUN3c2dCaUFIYTBGNFN3MEFBMEFnQkNBQ0tBSUFOZ0swQ0NBRUlBSW9BZ1EyQXV3UUlBUWdBaWdDQ0RZQ3BCa2dCQ0FDS0FJTU5nTGNJU0FFSUFJb0FoQTJBcFFxSUFRZ0FpZ0NGRFlDekRJZ0JDQUNLQUlZTmdLRU95QUVJQUlvQWh3MkFyeERJQVJCd01NQWFpRUVJQUpCSUdvaEFpQURRUWhxSWdNZ0IwY05BQXNMSUFVUUNRdEJBU0VFSUJCQkFXb2lFQ0FJS0FJSVNRMEFDd3NnQ0VFUWFpUUFJQVFMQkFCQ2Z3dS9DUUVMZnlNQVFSQnJJZ1VrQUFKL0lBQW9BZ2hCRUVZRVFDQUFLQUtjQVNBQUtBTE1BVUdNTEd4cURBRUxJQUFvQWd3TElRY0NmeUFDUVFGTkJFQWdBMEVCUWRnalFRQVFDRUVBREFFTElBRWdCVUVNYWtFQ0VBb2dCU2dDREFSQUlBTkJBa0h3TEVFQUVBaEJBUXdCQ3lBQ1FRWk5CRUFnQTBFQlFkZ2pRUUFRQ0VFQURBRUxJQUZCQW1vZ0JVRUlha0VCRUFvZ0J5Z0MvQ3NpQ1NFQUFrQUNRQUpBSUFjb0FvQXNJZ1pGRFFBZ0JTZ0NDQ0VJQTBBZ0FDZ0NBQ0FJUmcwQklBQkJGR29oQUNBRVFRRnFJZ1FnQmtjTkFBc01BUXNnQkNBR1J3MEJDeUFIS0FLRUxDQUdSZ1IvSUFjZ0JrRUthaUlBTmdLRUxDQUpJQUJCRkd3UUVDSUFSUVJBSUFjb0F2d3JFQWtnQjBFQU5nS0VMQ0FIUWdBM0F2d3JJQU5CQVVIeUkwRUFFQWhCQUF3REN5QUhJQUEyQXZ3cklBQWdCeWdDZ0N3aUJFRVViR3BCQUNBSEtBS0VMQ0FFYTBFVWJCQU9HaUFIS0FMOEt5RUpJQWNvQW9Bc0JTQUdDMEVVYkNBSmFpRUFRUUVoQ3dzZ0FDQUZLQUlJTmdJQUlBRkJBMm9nQlVFTWFrRUNFQW9nQlNnQ0RBUkFJQU5CQWtId0xFRUFFQWhCQVF3QkN5QUJRUVZxSUFWQkJHcEJBaEFLSUFVb0FnUWlCRUVDVHdSQUlBTkJBa0dvRjBFQUVBaEJBUXdCQ3lBQ1FRZHJJUVlnQkFSQUlBRkJCMm9oQWtFQUlRa0RRQ0FHUVFKTkJFQWdBMEVCUWRnalFRQVFDRUVBREFNTElBSWdCVUVNYWtFQkVBb2dCU2dDREVFQlJ3UkFJQU5CQWtHeUtrRUFFQWhCQVF3REN5QUNRUUZxSUFWQkFoQUtJQUFnQlNnQ0FDSUVRZi8vQVhFaUFUWUNCQ0FHUVFOcklnZ2dCRUVQZGtFQmFpSUdJQUZzUVFKcUlncEpCRUFnQTBFQlFkZ2pRUUFRQ0VFQURBTUxJQUpCQTJvaEFrRUFJUVFnQVFSQUEwQWdBaUFGUVF4cUlBWVFDaUFFSUFVb0FneEhCRUFnQTBFQ1Fkb3ZRUUFRQ0VFQkRBVUxJQUlnQm1vaEFpQUVRUUZxSWdRZ0FDZ0NCRWtOQUFzTElBSWdCVUVDRUFvZ0JTQUZLQUlBSWdSQi8vOEJjU0lCTmdJQUlBQW9BZ1FnQVVjRVFDQURRUUpCMkJoQkFCQUlRUUVNQXdzZ0NDQUtheUlLSUFSQkQzWkJBV29pQmlBQmJFRURhaUlNU1FSQUlBTkJBVUhZSTBFQUVBaEJBQXdEQ3lBQ1FRSnFJUUpCQUNFRUlBRUVRQU5BSUFJZ0JVRU1haUFHRUFvZ0JDQUZLQUlNUndSQUlBTkJBa0hhTDBFQUVBaEJBUXdGQ3lBQ0lBWnFJUUlnQkVFQmFpSUVJQUFvQWdSSkRRQUxDeUFDSUFWQkRHcEJBeEFLSUFVb0Fnd2hCaUFBUWdBM0FnZ2dBQ0FHUVlDQUJIRkZJQUF0QUJCQi9nRnhjam9BRUNBRklBWkIvd0Z4SWdnMkFnZ0NRQ0FJUlEwQUlBY29BdlFySWcwRVFDQUhLQUx3S3lFRVFRQWhBUU5BSUFnZ0JDZ0NDRVlFUUNBQUlBUTJBZ2dNQXdzZ0JFRVVhaUVFSUFGQkFXb2lBU0FOUncwQUN3c2dBMEVCUWRnalFRQVFDRUVBREFNTElBVWdCa0VJZGtIL0FYRWlCallDQ0FKQUlBWkZEUUFnQnlnQzlDc2lDQVJBSUFjb0F2QXJJUVJCQUNFQkEwQWdCaUFFS0FJSVJnUkFJQUFnQkRZQ0RBd0RDeUFFUVJScUlRUWdBVUVCYWlJQklBaEhEUUFMQ3lBRFFRRkIyQ05CQUJBSVFRQU1Bd3NnQ2lBTWF5RUdJQUpCQTJvaEFpQUpRUUZxSWdrZ0JTZ0NCRWtOQUFzTElBWUVRQ0FEUVFGQjJDTkJBQkFJUVFBTUFRdEJBU0FMUlEwQUdpQUhJQWNvQW9Bc1FRRnFOZ0tBTEVFQkN5RU9JQVZCRUdva0FDQU9DL1VCQVFWL0l3QkJFR3NpQkNRQUFrQWdBaUFBS0FKSUtBSVFJZ1pCQW1wSEJFQWdBMEVCUWZBaVFRQVFDQXdCQ3lBQklBUkJER3BCQWhBS0lBWWdCQ2dDREVjRVFDQURRUUZCOENKQkFCQUlEQUVMSUFaRkJFQkJBU0VGREFFTElBRkJBbW9oQWlBQUtBSklLQUlZSVFCQkFDRUJBMEFnQWlBRVFRaHFRUUVRQ2lBQUlBUW9BZ2dpQlVIL0FIRWlCMEVCYWlJSU5nSVlJQUFnQlVFSGRrRUJjVFlDSUNBSFFSOVBCRUFnQkNBSU5nSUVJQVFnQVRZQ0FDQURRUUZCeC9NQUlBUVFDRUVBSVFVTUFnc2dBRUUwYWlFQVFRRWhCU0FDUVFGcUlRSWdBVUVCYWlJQklBWkhEUUFMQ3lBRVFSQnFKQUFnQlF1WUJRRUtmeU1BUVJCcklnY2tBQUovSUFBb0FnaEJFRVlFUUNBQUtBS2NBU0FBS0FMTUFVR01MR3hxREFFTElBQW9BZ3dMSVFVQ2Z5QUNRUUZOQkVBZ0EwRUJRZkVlUVFBUUNFRUFEQUVMSUFFZ0IwRU1ha0VDRUFvQ1FDQUhLQUlNQkVBZ0EwRUNRWVliUVFBUUNBd0JDeUFDUVFaTkJFQWdBMEVCUWZFZVFRQVFDRUVBREFJTElBRkJBbW9nQjBFTWFrRUNFQW9nQlNnQzhDc2hCQ0FITFFBTUlRb0NRQUpBQWtBZ0JTZ0M5Q3NpQmtVRVFDQUVJUUFNQVFzZ0JDRUFBMEFnQUNnQ0NDQUtSZzBCSUFCQkZHb2hBQ0FJUVFGcUlnZ2dCa2NOQUFzTUFRc2dCaUFJUncwQkN5QUZLQUw0S3lBR1JnUkFJQVVnQmtFS2FpSUFOZ0w0S3lBRUlBQkJGR3dRRUNFQUlBVW9BdkFySVFRZ0FFVUVRQ0FFRUFrZ0JVRUFOZ0w0S3lBRlFnQTNBdkFySUFOQkFVR0xIMEVBRUFoQkFBd0VDd0pBSUFBZ0JFWU5BQ0FGS0FLQUxDSUxSUTBBSUFVb0F2d3JJUXhCQUNFSUEwQWdEQ0FJUVJSc2FpSUdLQUlJSWdrRVFDQUdJQUFnQ1NBRWEybzJBZ2dMSUFZb0Fnd2lDUVJBSUFZZ0FDQUpJQVJyYWpZQ0RBc2dDRUVCYWlJSUlBdEhEUUFMQ3lBRklBQTJBdkFySUFBZ0JTZ0M5Q3NpQkVFVWJHcEJBQ0FGS0FMNEt5QUVhMEVVYkJBT0dpQUZLQUwwS3lFR0lBVW9BdkFySVFRTElBVWdCa0VCYWpZQzlDc2dCQ0FHUVJSc2FpRUFDeUFBS0FJTUlnUUVRQ0FFRUFrZ0FFSUFOd0lNQ3lBQUlBbzJBZ2dnQUNBSEtBSU1JZ1JCQ25aQkEzRTJBZ0FnQUNBRVFRaDJRUU54TmdJRUlBRkJCR29nQjBFTWFrRUNFQW9nQnlnQ0RBUkFJQU5CQWtHOUZrRUFFQWdNQVFzZ0FDQUNRUVpySWdJUURTSUVOZ0lNSUFSRkJFQWdBMEVCUWZFZVFRQVFDRUVBREFJTElBUWdBVUVHYWlBQ0VBc2FJQUFnQWpZQ0VBdEJBUXNoRFNBSFFSQnFKQUFnRFFzbkFFRUJJUUVnQWlBQUtBSklLQUlRUVFKMFJ3Ui9JQU5CQVVIWElVRUFFQWhCQUFWQkFRc0xxd01CQlg4akFFRVFheUlHSkFBQ2Z5QUNRUUZOQkVBZ0EwRUJRZjBkUVFBUUNFRUFEQUVMSUFBdEFMd0JRUUZ4QkVBZ0EwRUJRWm5lQUVFQUVBaEJBQXdCQ3lBQUtBS2NBU0FBS0FMTUFVR01MR3hxSWdBZ0FDMEFpQ3hCQW5JNkFJZ3NJQUVnQmtFTWFrRUJFQW9DUUNBQUtBS3NLQ0lFUlFSQUlBQWdCaWdDREVFQmFpSUZRUWdRRENJRU5nS3NLQ0FFUlFSQUlBTkJBVUdYSGtFQUVBaEJBQXdEQ3lBQUlBVTJBcWdvREFFTElBWW9BZ3dpQlNBQUtBS29LRWtOQUNBRUlBVkJBV29pQkVFRGRCQVFJZ1ZGQkVBZ0EwRUJRWmNlUVFBUUNFRUFEQUlMSUFBZ0JUWUNyQ2dnQlNBQUtBS29LQ0lIUVFOMGFrRUFJQVFnQjJ0QkEzUVFEaG9nQUNBRU5nS29LQ0FBS0FLc0tDRUVDeUFFSUFZb0Fnd2lCVUVEZEdvb0FnQUVRQ0FHSUFVMkFnQWdBMEVCUWIwMUlBWVFDRUVBREFFTElBSkJBV3NpQWhBTklRUWdBQ2dDckNnaUFDQUdLQUlNSWdWQkEzUnFJQVEyQWdBZ0JFVUVRQ0FEUVFGQmx4NUJBQkFJUVFBTUFRc2dBQ0FGUVFOMGFpQUNOZ0lFSUFBZ0JpZ0NERUVEZEdvb0FnQWdBVUVCYWlBQ0VBc2FRUUVMSVFnZ0JrRVFhaVFBSUFnTDlRSUJCWDhqQUVFUWF5SUdKQUFDZnlBQ1FRRk5CRUFnQTBFQlFhUWdRUUFRQ0VFQURBRUxJQUFnQUMwQXZBRkJBWEk2QUx3QklBRWdCa0VNYWtFQkVBb0NRQ0FBS0FKMElnUkZCRUFnQUNBR0tBSU1RUUZxSWdWQkNCQU1JZ1EyQW5RZ0JFVUVRQ0FEUVFGQnZpQkJBQkFJUVFBTUF3c2dBQ0FGTmdKd0RBRUxJQVlvQWd3aUJTQUFLQUp3U1EwQUlBUWdCVUVCYWlJRVFRTjBFQkFpQlVVRVFDQURRUUZCdmlCQkFCQUlRUUFNQWdzZ0FDQUZOZ0owSUFVZ0FDZ0NjQ0lIUVFOMGFrRUFJQVFnQjJ0QkEzUVFEaG9nQUNBRU5nSndJQUFvQW5RaEJBc2dCQ0FHS0FJTUlnVkJBM1JxS0FJQUJFQWdCaUFGTmdJQUlBTkJBVUhUTlNBR0VBaEJBQXdCQ3lBQ1FRRnJJZ0lRRFNFRUlBQW9BblFpQUNBR0tBSU1JZ1ZCQTNScUlBUTJBZ0FnQkVVRVFDQURRUUZCdmlCQkFCQUlRUUFNQVFzZ0FDQUZRUU4wYWlBQ05nSUVJQUFnQmlnQ0RFRURkR29vQWdBZ0FVRUJhaUFDRUFzYVFRRUxJUWdnQmtFUWFpUUFJQWdMb0FFQkJIOGpBRUVRYXlJRUpBQUNmeUFDUlFSQUlBTkJBVUhYSGtFQUVBaEJBQXdCQ3lBQklBUkJER3BCQVJBS1FRRWdBa0VCYXlJRlJRMEFHa0VBSVFCQkFDRUNBMEFnQVVFQmFpSUJJQVJCQ0dwQkFSQUtJQVFvQWdnaUJrRVlkRUVmZFNBR1FmOEFjU0FDY2tFSGRIRWhBaUFBUVFGcUlnQWdCVWNOQUF0QkFTQUNSUTBBR2lBRFFRRkIxeDVCQUJBSVFRQUxJUWNnQkVFUWFpUUFJQWNMR3dCQkFTRUFJQUlFZjBFQkJTQURRUUZCL2lCQkFCQUlRUUFMQzRBQkFRRi9Jd0JCRUdzaUFDUUFRUUVoQkFKQUlBSkJBVTBFUUVFQUlRUWdBMEVCUWVRZ1FRQVFDQXdCQ3lBQklBQkJER3BCQVJBS0lBRkJBV29nQUVFSWFrRUJFQW9nQWtFQ2F5QUFLQUlJSWdGQkJYWkJBbkVnQVVFRWRrRURjV3BCQW1wd1JRMEFRUUFoQkNBRFFRRkI1Q0JCQUJBSUN5QUFRUkJxSkFBZ0JBc0VBRUVBQ3d2NXV3RWNBRUdBQ0F1aGRXTmhibTV2ZENCaGJHeHZZMkYwWlNCdmNHcGZkR05rWDNObFoxOWtZWFJoWDJOb2RXNXJYM1FxSUdGeWNtRjVBQzBySUNBZ01GZ3dlQUF0TUZnck1GZ2dNRmd0TUhnck1IZ2dNSGdBVlc1cmJtOTNiaUJtYjNKdFlYUUFSbUZwYkdWa0lIUnZJSE5sZENCMGFHVWdaR1ZqYjJSbFpDQmpiMjF3YjI1bGJuUnpBRVpoYVd4bFpDQjBieUJ6WlhSMWNDQjBhR1VnWkdWamIyUmxjZ0JHWVdsc1pXUWdkRzhnY21WaFpDQjBhR1VnYUdWaFpHVnlBRzVoYmdBcWJGOTBhV3hsWDJ4bGJpQStJRlZKVGxSZlRVRllJQzBnVDFCS1gwTlBUVTFQVGw5RFFreExYMFJCVkVGZlJWaFVVa0VnTFNCd1gyb3lheTArYlY5emNHVmphV1pwWTE5d1lYSmhiUzV0WDJSbFkyOWtaWEl1YlY5emIzUmZiR1Z1WjNSb0FHbHVaZ0JHWVdsc1pXUWdkRzhnWkdWamIyUmxJSFJvWlNCcGJXRm5aUUJKYm5aaGJHbGtJR0ZqWTJWemN5QjBieUJ3YVMwK2FXNWpiSFZrWlFCQlRFeGZRMUJWVXdCUFVFcGZUbFZOWDFSSVVrVkJSRk1BVGtGT0FFbE9SZ0J3WDJveWF5MCtiVjl6Y0dWamFXWnBZMTl3WVhKaGJTNXRYMlJsWTI5a1pYSXViVjl6YjNSZmJHVnVaM1JvSUQ0Z1ZVbE9WRjlOUVZnZ0xTQlBVRXBmUTA5TlRVOU9YME5DVEV0ZlJFRlVRVjlGV0ZSU1FRQUpDUWtnY0hKbFkyTnBiblJ6YVhwbElDaDNMR2dwUFFBSkNRa2djM1JsY0hOcGVtVnpJQ2h0TEdVcFBRQXVBQ2h1ZFd4c0tRQW9KV1FzSldRcElBQWxjMzBLQUFrSklIMEtBRnRFUlZaZElFUjFiWEFnWVc0Z2FXMWhaMlZmWTI5dGNGOW9aV0ZrWlhJZ2MzUnlkV04wSUhzS0FGdEVSVlpkSUVSMWJYQWdZVzRnYVcxaFoyVmZhR1ZoWkdWeUlITjBjblZqZENCN0NnQkpiV0ZuWlNCcGJtWnZJSHNLQUFrZ1pHVm1ZWFZzZENCMGFXeGxJSHNLQUNWekNTQmpiMjF3YjI1bGJuUWdKV1FnZXdvQUNRa2dZMjl0Y0NBbFpDQjdDZ0FKSUZScGJHVWdhVzVrWlhnNklIc0tBQWtnVFdGeWEyVnlJR3hwYzNRNklIc0tBRU52WkdWemRISmxZVzBnYVc1a1pYZ2dabkp2YlNCdFlXbHVJR2hsWVdSbGNqb2dld29BUTI5a1pYTjBjbVZoYlNCcGJtWnZJR1p5YjIwZ2JXRnBiaUJvWldGa1pYSTZJSHNLQUZOMGNtVmhiU0JsY25KdmNpQjNhR2xzWlNCeVpXRmthVzVuSUVwUU1pQklaV0ZrWlhJZ1ltOTRDZ0JHYjNWdVpDQmhJRzFwYzNCc1lXTmxaQ0FuSldNbFl5VmpKV01uSUdKdmVDQnZkWFJ6YVdSbElHcHdNbWdnWW05NENnQk5ZV3htYjNKdFpXUWdTbEF5SUdacGJHVWdabTl5YldGME9pQm1hWEp6ZENCaWIzZ2diWFZ6ZENCaVpTQktVRVZISURJd01EQWdjMmxuYm1GMGRYSmxJR0p2ZUFvQVRXRnNabTl5YldWa0lFcFFNaUJtYVd4bElHWnZjbTFoZERvZ2MyVmpiMjVrSUdKdmVDQnRkWE4wSUdKbElHWnBiR1VnZEhsd1pTQmliM2dLQUU1dmRDQmxibTkxWjJnZ2JXVnRiM0o1SUhSdklHaGhibVJzWlNCcWNHVm5NakF3TUNCaWIzZ0tBRTV2ZENCbGJtOTFaMmdnYldWdGIzSjVJSGRwZEdnZ1JsUlpVQ0JDYjNnS0FFRWdiV0Z5YTJWeUlFbEVJSGRoY3lCbGVIQmxZM1JsWkNBb01IaG1aaTB0S1NCcGJuTjBaV0ZrSUc5bUlDVXVPSGdLQUFrSklHMWpkRDBsZUFvQUNRa0pJR05pYkd0emRIazlKU040Q2dBSkNRa2dZM04wZVQwbEkzZ0tBQWtKSUhCeVp6MGxJM2dLQUVsdWRHVm5aWElnYjNabGNtWnNiM2NLQUFrZ2RHUjRQU1YxTENCMFpIazlKWFVLQUFrZ2RIYzlKWFVzSUhSb1BTVjFDZ0FKSUhSNE1EMGxkU3dnZEhrd1BTVjFDZ0JKYm5aaGJHbGtJR052YlhCdmJtVnVkQ0JwYm1SbGVEb2dKWFVLQUZOMGNtVmhiU0IwYjI4Z2MyaHZjblFLQUUxaGNtdGxjaUJvWVc1a2JHVnlJR1oxYm1OMGFXOXVJR1poYVd4bFpDQjBieUJ5WldGa0lIUm9aU0J0WVhKclpYSWdjMlZuYldWdWRBb0FUbTkwSUdWdWIzVm5hQ0J0WlcxdmNua2dabTl5SUdOMWNuSmxiblFnY0hKbFkybHVZM1FnWTI5a1pXSnNiMk5ySUdWc1pXMWxiblFLQUVWeWNtOXlJSEpsWVdScGJtY2dVMUJEYjJRZ1UxQkRiMk1nWld4bGJXVnVkQW9BUlhKeWIzSWdjbVZoWkdsdVp5QlRVV05rSUc5eUlGTlJZMk1nWld4bGJXVnVkQW9BUVNCQ1VFTkRJR2hsWVdSbGNpQmliM2dnYVhNZ1lYWmhhV3hoWW14bElHRnNkR2h2ZFdkb0lFSlFReUJuYVhabGJpQmllU0IwYUdVZ1NVaEVVaUJpYjNnZ0tDVmtLU0JwYm1ScFkyRjBaU0JqYjIxd2IyNWxiblJ6SUdKcGRDQmtaWEIwYUNCcGN5QmpiMjV6ZEdGdWRBb0FSWEp5YjNJZ2QybDBhQ0JUU1ZvZ2JXRnlhMlZ5T2lCcGJHeGxaMkZzSUhScGJHVWdiMlptYzJWMENnQkpiblpoYkdsa0lIQnlaV05wYm1OMENnQk9iM1FnWlc1dmRXZG9JRzFsYlc5eWVTQjBieUJvWVc1a2JHVWdZbUZ1WkNCd2NtVmphVzUwY3dvQVJtRnBiR1ZrSUhSdklHUmxZMjlrWlNCaGJHd2dkWE5sWkNCamIyMXdiMjVsYm5SekNnQlRhWHBsSUc5bUlHTnZaR1VnWW14dlkyc2daR0YwWVNCbGVHTmxaV1J6SUhONWMzUmxiU0JzYVcxcGRITUtBRk5wZW1VZ2IyWWdkR2xzWlNCa1lYUmhJR1Y0WTJWbFpITWdjM2x6ZEdWdElHeHBiV2wwY3dvQVEyRnVibTkwSUhSaGEyVWdhVzRnWTJoaGNtZGxJRzExYkhScGNHeGxJRTFEVkNCdFlYSnJaWEp6Q2dCRGIzSnlkWEIwWldRZ1VGQk5JRzFoY210bGNuTUtBRTV2ZENCbGJtOTFaMmdnYldWdGIzSjVJR1p2Y2lCMGFXeGxJSEpsYzI5c2RYUnBiMjV6Q2dCRFlXNXViM1FnZEdGclpTQnBiaUJqYUdGeVoyVWdiWFZzZEdsd2JHVWdZMjlzYkdWamRHbHZibk1LQUVsdWRtRnNhV1FnVUVOTVVpQmliM2d1SUZKbGNHOXlkSE1nTUNCd1lXeGxkSFJsSUdOdmJIVnRibk1LQUZkbElHUnZJRzV2ZENCemRYQndiM0owSUZKUFNTQnBiaUJrWldOdlpHbHVaeUJJVkNCamIyUmxZbXh2WTJ0ekNnQkRZVzV1YjNRZ2FHRnVaR3hsSUdKdmVDQnZaaUIxYm1SbFptbHVaV1FnYzJsNlpYTUtBRU5oYm01dmRDQjBZV3RsSUdsdUlHTm9ZWEpuWlNCamIyeHNaV04wYVc5dWN5QjNhWFJvYjNWMElITmhiV1VnYm5WdFltVnlJRzltSUdsdVpHbDRaWE1LQUVsdWRtRnNhV1FnZEdsc1pXTXRQbmRwYmw5NGVIZ2dkbUZzZFdWekNnQkRZVzV1YjNRZ2FHRnVaR3hsSUdKdmVDQnZaaUJzWlhOeklIUm9ZVzRnT0NCaWVYUmxjd29BUTJGdWJtOTBJR2hoYm1Sc1pTQllUQ0JpYjNnZ2IyWWdiR1Z6Y3lCMGFHRnVJREUySUdKNWRHVnpDZ0JEYjIxd2IyNWxiblFnYVc1a1pYZ2dKWFVnZFhObFpDQnpaWFpsY21Gc0lIUnBiV1Z6Q2dCSmJuWmhiR2xrSUZCRFRGSWdZbTk0TGlCU1pYQnZjblJ6SUNWa0lHVnVkSEpwWlhNS0FFNXZkQ0JsYm05MVoyZ2diV1Z0YjNKNUlIUnZJR055WldGMFpTQlVZV2N0ZEhKbFpTQnViMlJsY3dvQVEyRnVibTkwSUhSaGEyVWdhVzRnWTJoaGNtZGxJRzFqZENCa1lYUmhJSGRwZEdocGJpQnRkV3gwYVhCc1pTQk5RMVFnY21WamIzSmtjd29BUTJGdWJtOTBJR1JsWTI5a1pTQjBhV3hsTENCdFpXMXZjbmtnWlhKeWIzSUtBRzl3YWw5cU1tdGZZWEJ3YkhsZmJtSmZkR2xzWlY5d1lYSjBjMTlqYjNKeVpXTjBhVzl1SUdWeWNtOXlDZ0JRY205aWJHVnRJSGRwZEdnZ2MydHBjSEJwYm1jZ1NsQkZSekl3TURBZ1ltOTRMQ0J6ZEhKbFlXMGdaWEp5YjNJS0FGQnliMkpzWlcwZ2QybDBhQ0J5WldGa2FXNW5JRXBRUlVjeU1EQXdJR0p2ZUN3Z2MzUnlaV0Z0SUdWeWNtOXlDZ0JWYm10dWIzZHVJRzFoY210bGNnb0FUbTkwSUdWdWIzVm5hQ0J0WlcxdmNua2dkRzhnWVdSa0lIUnNJRzFoY210bGNnb0FUbTkwSUdWdWIzVm5hQ0J0WlcxdmNua2dkRzhnWVdSa0lHMW9JRzFoY210bGNnb0FUbTkwSUdWdWIzVm5hQ0J0WlcxdmNua2dkRzhnZEdGclpTQnBiaUJqYUdGeVoyVWdVMGxhSUcxaGNtdGxjZ29BUlhKeWIzSWdjbVZoWkdsdVp5QlFVRlFnYldGeWEyVnlDZ0JPYjNRZ1pXNXZkV2RvSUcxbGJXOXllU0IwYnlCeVpXRmtJRkJRVkNCdFlYSnJaWElLQUVWeWNtOXlJSEpsWVdScGJtY2dVMDlVSUcxaGNtdGxjZ29BUlhKeWIzSWdjbVZoWkdsdVp5QlFURlFnYldGeWEyVnlDZ0JGY25KdmNpQnlaV0ZrYVc1bklFMURWQ0J0WVhKclpYSUtBRTV2ZENCbGJtOTFaMmdnYldWdGIzSjVJSFJ2SUhKbFlXUWdUVU5VSUcxaGNtdGxjZ29BVG05MElHVnViM1ZuYUNCemNHRmpaU0JtYjNJZ1pYaHdaV04wWldRZ1UwOVFJRzFoY210bGNnb0FSWGh3WldOMFpXUWdVMDlRSUcxaGNtdGxjZ29BUlhKeWIzSWdjbVZoWkdsdVp5Qk5RMDhnYldGeWEyVnlDZ0JGY25KdmNpQnlaV0ZrYVc1bklGSkhUaUJ0WVhKclpYSUtBRVZ5Y205eUlISmxZV1JwYm1jZ1VGQk5JRzFoY210bGNnb0FUbTkwSUdWdWIzVm5hQ0J0WlcxdmNua2dkRzhnY21WaFpDQlFVRTBnYldGeWEyVnlDZ0JGY25KdmNpQnlaV0ZrYVc1bklGUk1UU0J0WVhKclpYSUtBRVZ5Y205eUlISmxZV1JwYm1jZ1VFeE5JRzFoY210bGNnb0FUbTkwSUdWdWIzVm5hQ0J6Y0dGalpTQm1iM0lnWlhod1pXTjBaV1FnUlZCSUlHMWhjbXRsY2dvQVJYaHdaV04wWldRZ1JWQklJRzFoY210bGNnb0FSWEp5YjNJZ2NtVmhaR2x1WnlCRFVrY2diV0Z5YTJWeUNnQlZibXR1YjNkdUlIQnliMmR5WlhOemFXOXVJRzl5WkdWeUlHbHVJRU5QUkNCdFlYSnJaWElLQUZWdWEyNXZkMjRnVTJOdlpDQjJZV3gxWlNCcGJpQkRUMFFnYldGeWEyVnlDZ0JGY25KdmNpQnlaV0ZrYVc1bklFTlBSQ0J0WVhKclpYSUtBRVZ5Y205eUlISmxZV1JwYm1jZ1VVTkVJRzFoY210bGNnb0FRM0p5YjNJZ2NtVmhaR2x1WnlCRFFrUWdiV0Z5YTJWeUNnQkZjbkp2Y2lCeVpXRmthVzVuSUZCUFF5QnRZWEpyWlhJS0FFVnljbTl5SUhKbFlXUnBibWNnUTA5RElHMWhjbXRsY2dvQVJYSnliM0lnY21WaFpHbHVaeUJSUTBNZ2JXRnlhMlZ5Q2dCRmNuSnZjaUJ5WldGa2FXNW5JRTFEUXlCdFlYSnJaWElLQUU1dmRDQmxibTkxWjJnZ2JXVnRiM0o1SUhSdklISmxZV1FnVFVORElHMWhjbXRsY2dvQWNtVnhkV2x5WldRZ1UwbGFJRzFoY210bGNpQnViM1FnWm05MWJtUWdhVzRnYldGcGJpQm9aV0ZrWlhJS0FISmxjWFZwY21Wa0lFTlBSQ0J0WVhKclpYSWdibTkwSUdadmRXNWtJR2x1SUcxaGFXNGdhR1ZoWkdWeUNnQnlaWEYxYVhKbFpDQlJRMFFnYldGeWEyVnlJRzV2ZENCbWIzVnVaQ0JwYmlCdFlXbHVJR2hsWVdSbGNnb0FUbTkwSUdWdWIzVm5hQ0J0WlcxdmNua2dkRzhnYUdGdVpHeGxJR3B3WldjeU1EQXdJR1pwYkdVZ2FHVmhaR1Z5Q2dCT2IzUWdaVzV2ZFdkb0lHMWxiVzl5ZVNCMGJ5QnlaV0ZrSUdobFlXUmxjZ29BUlhKeWIzSWdkMmwwYUNCS1VDQlRhV2R1WVhSMWNtVWdPaUJpWVdRZ2JXRm5hV01nYm5WdFltVnlDZ0JKYmlCVFQxUWdiV0Z5YTJWeUxDQlVVRk52ZENBb0pXUXBJR2x6SUc1dmRDQjJZV3hwWkNCeVpXZGhjbVJ6SUhSdklIUm9aU0JqZFhKeVpXNTBJRzUxYldKbGNpQnZaaUIwYVd4bExYQmhjblFnS0NWa0tTd2daMmwyYVc1bklIVndDZ0JKYmlCVFQxUWdiV0Z5YTJWeUxDQlVVRk52ZENBb0pXUXBJR2x6SUc1dmRDQjJZV3hwWkNCeVpXZGhjbVJ6SUhSdklIUm9aU0J3Y21WMmFXOTFjeUJ1ZFcxaVpYSWdiMllnZEdsc1pTMXdZWEowSUNnbFpDa3NJR2RwZG1sdVp5QjFjQW9BU1c0Z1UwOVVJRzFoY210bGNpd2dWRkJUYjNRZ0tDVmtLU0JwY3lCdWIzUWdkbUZzYVdRZ2NtVm5ZWEprY3lCMGJ5QjBhR1VnWTNWeWNtVnVkQ0J1ZFcxaVpYSWdiMllnZEdsc1pTMXdZWEowSUNob1pXRmtaWElwSUNnbFpDa3NJR2RwZG1sdVp5QjFjQW9BZEdsc1pYTWdjbVZ4ZFdseVpTQmhkQ0JzWldGemRDQnZibVVnY21WemIyeDFkR2x2YmdvQVRXRnlhMlZ5SUdseklHNXZkQ0JqYjIxd2JHbGhiblFnZDJsMGFDQnBkSE1nY0c5emFYUnBiMjRLQUZCeWIySnNaVzBnZDJsMGFDQnpaV1ZySUdaMWJtTjBhVzl1Q2dCRmNuSnZjaUJ5WldGa2FXNW5JRk5RUTI5a0lGTlFRMjlqSUdWc1pXMWxiblFzSUVsdWRtRnNhV1FnWTJKc2EzY3ZZMkpzYTJnZ1kyOXRZbWx1WVhScGIyNEtBRWx1ZG1Gc2FXUWdiWFZzZEdsd2JHVWdZMjl0Y0c5dVpXNTBJSFJ5WVc1elptOXliV0YwYVc5dUNnQkRZVzV1YjNRZ2RHRnJaU0JwYmlCamFHRnlaMlVnWTI5c2JHVmpkR2x2Ym5NZ2IzUm9aWElnZEdoaGJpQmhjbkpoZVNCa1pXTnZjbkpsYkdGMGFXOXVDZ0JVYjI4Z2JHRnlaMlVnZG1Gc2RXVWdabTl5SUU1d2NHMEtBRTV2ZENCbGJtOTFaMmdnWW5sMFpYTWdkRzhnY21WaFpDQk9jSEJ0Q2dCaVlXUWdjR3hoWTJWa0lHcHdaV2NnWTI5a1pYTjBjbVZoYlFvQUNTQk5ZV2x1SUdobFlXUmxjaUJ6ZEdGeWRDQndiM05wZEdsdmJqMGxiR3hwQ2drZ1RXRnBiaUJvWldGa1pYSWdaVzVrSUhCdmMybDBhVzl1UFNWc2JHa0tBRTFoY210bGNpQnphWHBsSUdsdVkyOXVjMmx6ZEdWdWRDQjNhWFJvSUhOMGNtVmhiU0JzWlc1bmRHZ0tBRlJwYkdVZ2NHRnlkQ0JzWlc1bmRHZ2djMmw2WlNCcGJtTnZibk5wYzNSbGJuUWdkMmwwYUNCemRISmxZVzBnYkdWdVozUm9DZ0JEWVc1dWIzUWdkR0ZyWlNCcGJpQmphR0Z5WjJVZ2JYVnNkR2x3YkdVZ1pHRjBZU0J6Y0dGdWJtbHVad29BVjNKdmJtY2dabXhoWndvQVJYSnliM0lnZDJsMGFDQkdWRmxRSUhOcFoyNWhkSFZ5WlNCQ2IzZ2djMmw2WlFvQVJYSnliM0lnZDJsMGFDQktVQ0J6YVdkdVlYUjFjbVVnUW05NElITnBlbVVLQUVsdWRtRnNhV1FnY0hKbFkybHVZM1FnYzJsNlpRb0FTVzVqYjI1emFYTjBaVzUwSUcxaGNtdGxjaUJ6YVhwbENnQkpiblpoYkdsa0lHMWhjbXRsY2lCemFYcGxDZ0JGY25KdmNpQjNhWFJvSUZOSldpQnRZWEpyWlhJZ2MybDZaUW9BVG05MElHVnViM1ZuYUNCdFpXMXZjbmtnZEc4Z1lXUmtJR0VnYm1WM0lIWmhiR2xrWVhScGIyNGdjSEp2WTJWa2RYSmxDZ0JPYjNRZ1pXNXZkV2RvSUcxbGJXOXllU0IwYnlCa1pXTnZaR1VnZEdsc1pRb0FSbUZwYkdWa0lIUnZJR1JsWTI5a1pTQjBhR1VnWTI5a1pYTjBjbVZoYlNCcGJpQjBhR1VnU2xBeUlHWnBiR1VLQUVOaGJtNXZkQ0IwWVd0bElHbHVJR05vWVhKblpTQmpiMnhzWldOMGFXOXVjeUIzYVhSb0lHbHVaR2w0SUhOb2RXWm1iR1VLQUVOaGJtNXZkQ0JoYkd4dlkyRjBaU0JVYVdWeUlERWdhR0Z1Wkd4bENnQk9ieUJrWldOdlpHVmtJR0Z5WldFZ2NHRnlZVzFsZEdWeWN5d2djMlYwSUhSb1pTQmtaV052WkdWa0lHRnlaV0VnZEc4Z2RHaGxJSGRvYjJ4bElHbHRZV2RsQ2dCT2IzUWdaVzV2ZFdkb0lHMWxiVzl5ZVNCMGJ5QmpjbVZoZEdVZ1ZHRm5MWFJ5WldVS0FFNXZkQ0JsYm05MVoyZ2diV1Z0YjNKNUlIUnZJSEpsYVc1cGRHbGhiR2w2WlNCMGFHVWdkR0ZuSUhSeVpXVUtBRVZ5Y205eUlISmxZV1JwYm1jZ1UxQkRiMlFnVTFCRGIyTWdaV3hsYldWdWRDd2dTVzUyWVd4cFpDQjBjbUZ1YzJadmNtMWhkR2x2YmlCbWIzVnVaQW9BUlhKeWIzSWdjbVZoWkdsdVp5QlRVRU52WkNCVFVFTnZZeUJsYkdWdFpXNTBMaUJWYm5OMWNIQnZjblJsWkNCTmFYaGxaQ0JJVkNCamIyUmxMV0pzYjJOcklITjBlV3hsSUdadmRXNWtDZ0JVYVd4bElGa2dZMjl2Y21ScGJtRjBaWE1nWVhKbElHNXZkQ0J6ZFhCd2IzSjBaV1FLQUZScGJHVWdXQ0JqYjI5eVpHbHVZWFJsY3lCaGNtVWdibTkwSUhOMWNIQnZjblJsWkFvQVNXMWhaMlVnWTI5dmNtUnBibUYwWlhNZ1lXSnZkbVVnU1U1VVgwMUJXQ0JoY21VZ2JtOTBJSE4xY0hCdmNuUmxaQW9BU2xCRlJ6SXdNREFnU0dWaFpHVnlJR0p2ZUNCdWIzUWdjbVZoWkNCNVpYUXNJQ2NsWXlWakpXTWxZeWNnWW05NElIZHBiR3dnWW1VZ2FXZHViM0psWkFvQWIzQnFYMm95YTE5dFpYSm5aVjl3Y0hRb0tTQm9ZWE1nWVd4eVpXRmtlU0JpWldWdUlHTmhiR3hsWkFvQVRtOTBJR1Z1YjNWbmFDQnRaVzF2Y25rZ2RHOGdjbVZoWkNCVFQxUWdiV0Z5YTJWeUxpQlVhV3hsSUdsdVpHVjRJR0ZzYkc5allYUnBiMjRnWm1GcGJHVmtDZ0JKWjI1dmNtbHVaeUJwYUdSeUlHSnZlQzRnUm1seWMzUWdhV2hrY2lCaWIzZ2dZV3h5WldGa2VTQnlaV0ZrQ2dCYWNIQjBJQ1YxSUdGc2NtVmhaSGtnY21WaFpBb0FXbkJ3YlNBbGRTQmhiSEpsWVdSNUlISmxZV1FLQUZCVVJWSk5JR05vWldOcklHWmhhV3gxY21VNklDVmtJSE41Ym5Sb1pYUnBlbVZrSURCNFJrWWdiV0Z5YTJWeWN5QnlaV0ZrQ2dBSkNRa2dZMkpzYTNjOU1sNGxaQW9BQ1FrSklHTmliR3RvUFRKZUpXUUtBQWtKQ1NCeGJuUnpkSGs5SldRS0FDVnpJR1I0UFNWa0xDQmtlVDBsWkFvQUNRa0pJSEp2YVhOb2FXWjBQU1ZrQ2dBSkNRa2diblZ0WjJKcGRITTlKV1FLQUFrSklHNTFiV3hoZVdWeWN6MGxaQW9BSlhNZ2JuVnRZMjl0Y0hNOUpXUUtBRzl3YWw5cWNESmZZWEJ3YkhsZlkyUmxaam9nWVdOdVBTVmtMQ0J1ZFcxamIyMXdjejBsWkFvQWIzQnFYMnB3TWw5aGNIQnNlVjlqWkdWbU9pQmpiajBsWkN3Z2JuVnRZMjl0Y0hNOUpXUUtBQWtKQ1NCdWRXMXlaWE52YkhWMGFXOXVjejBsWkFvQUNRa2dkSGx3WlQwbEkzZ3NJSEJ2Y3owbGJHeHBMQ0JzWlc0OUpXUUtBQ1Z6SUhObmJtUTlKV1FLQUFrSkNTQnhiV1ppYVdROUpXUUtBQ1Z6SUhCeVpXTTlKV1FLQUFrSklHNWlJRzltSUhScGJHVXRjR0Z5ZENCcGJpQjBhV3hsSUZzbFpGMDlKV1FLQUNWeklIZ3hQU1ZrTENCNU1UMGxaQW9BSlhNZ2VEQTlKV1FzSUhrd1BTVmtDZ0JHWVdsc1pXUWdkRzhnWkdWamIyUmxJSFJwYkdVZ0pXUXZKV1FLQUZObGRIUnBibWNnWkdWamIyUnBibWNnWVhKbFlTQjBieUFsWkN3bFpDd2xaQ3dsWkFvQVJtRnBiR1ZrSUhSdklHUmxZMjlrWlNCamIyMXdiMjVsYm5RZ0pXUUtBRWx1ZG1Gc2FXUWdkbUZzZFdVZ1ptOXlJRzUxYlhKbGMyOXNkWFJwYjI1eklEb2dKV1FzSUcxaGVDQjJZV3gxWlNCcGN5QnpaWFFnYVc0Z2IzQmxibXB3WldjdWFDQmhkQ0FsWkFvQVNXNTJZV3hwWkNCamIyMXdiMjVsYm5RZ2JuVnRZbVZ5T2lBbFpDd2djbVZuWVhKa2FXNW5JSFJvWlNCdWRXMWlaWElnYjJZZ1kyOXRjRzl1Wlc1MGN5QWxaQW9BVkc5dklHMWhibmtnVUU5RGN5QWxaQW9BU1c1MllXeHBaQ0IwYVd4bElHNTFiV0psY2lBbFpBb0FTVzUyWVd4cFpDQjBhV3hsSUhCaGNuUWdhVzVrWlhnZ1ptOXlJSFJwYkdVZ2JuVnRZbVZ5SUNWa0xpQkhiM1FnSldRc0lHVjRjR1ZqZEdWa0lDVmtDZ0JGY25KdmNpQjNhWFJvSUZOSldpQnRZWEpyWlhJNklHNTFiV0psY2lCdlppQmpiMjF3YjI1bGJuUWdhWE1nYVd4c1pXZGhiQ0F0UGlBbFpBb0FUbTkwSUdWdWIzVm5hQ0J0WlcxdmNua2dabTl5SUdOcFpXeGhZZ29BUTJGdWJtOTBJR0ZzYkc5allYUmxJR05pYkdzdFBtUmxZMjlrWldSZlpHRjBZUW9BUm1GcGJHVmtJSFJ2SUcxbGNtZGxJRkJRVkNCa1lYUmhDZ0JHWVdsc1pXUWdkRzhnYldWeVoyVWdVRkJOSUdSaGRHRUtBRWx1ZG1Gc2FXUWdiblZ0WW1WeUlHOW1JR3hoZVdWeWN5QnBiaUJEVDBRZ2JXRnlhMlZ5SURvZ0pXUWdibTkwSUdsdUlISmhibWRsSUZzeExUWTFOVE0xWFFvQVUzUnlaV0Z0SUhSdmJ5QnphRzl5ZEN3Z1pYaHdaV04wWldRZ1UwOVVDZ0JWYm1GaWJHVWdkRzhnYzJWMElIUXhJR2hoYm1Sc1pTQmhjeUJVVEZNS0FGTjBjbVZoYlNCa2IyVnpJRzV2ZENCbGJtUWdkMmwwYUNCRlQwTUtBRU5oYm01dmRDQm9ZVzVrYkdVZ1ltOTRJSE5wZW1WeklHaHBaMmhsY2lCMGFHRnVJREplTXpJS0FHOXdhbDl3YVY5dVpYaDBYMnh5WTNBb0tUb2dhVzUyWVd4cFpDQmpiMjF3Ym04d0wyTnZiWEJ1YnpFS0FHOXdhbDl3YVY5dVpYaDBYM0pzWTNBb0tUb2dhVzUyWVd4cFpDQmpiMjF3Ym04d0wyTnZiWEJ1YnpFS0FHOXdhbDl3YVY5dVpYaDBYMk53Y213b0tUb2dhVzUyWVd4cFpDQmpiMjF3Ym04d0wyTnZiWEJ1YnpFS0FHOXdhbDl3YVY5dVpYaDBYM0JqY213b0tUb2dhVzUyWVd4cFpDQmpiMjF3Ym04d0wyTnZiWEJ1YnpFS0FHOXdhbDl3YVY5dVpYaDBYM0p3WTJ3b0tUb2dhVzUyWVd4cFpDQmpiMjF3Ym04d0wyTnZiWEJ1YnpFS0FHOXdhbDkwTVY5a1pXTnZaR1ZmWTJKc2F5Z3BPaUIxYm5OMWNIQnZjblJsWkNCaWNHNXZYM0JzZFhOZmIyNWxJRDBnSldRZ1BqMGdNekVLQUVaaGFXeGxaQ0IwYnlCa1pXTnZaR1VnZEdsc1pTQXhMekVLQUVsdWMzVm1abWxqYVdWdWRDQmtZWFJoSUdadmNpQkRUVUZRSUdKdmVDNEtBRTVsWldRZ2RHOGdjbVZoWkNCaElGQkRURklnWW05NElHSmxabTl5WlNCMGFHVWdRMDFCVUNCaWIzZ3VDZ0JKYm5OMVptWnBZMmxsYm5RZ1pHRjBZU0JtYjNJZ1EwUkZSaUJpYjNndUNnQk9kVzFpWlhJZ2IyWWdZMmhoYm01bGJDQmtaWE5qY21sd2RHbHZiaUJwY3lCbGNYVmhiQ0IwYnlCNlpYSnZJR2x1SUVORVJVWWdZbTk0TGdvQVUzUnlaV0Z0SUdWeWNtOXlJSGRvYVd4bElISmxZV1JwYm1jZ1NsQXlJRWhsWVdSbGNpQmliM2c2SUc1dklDZHBhR1J5SnlCaWIzZ3VDZ0JPYjI0Z1kyOXVabTl5YldGdWRDQmpiMlJsYzNSeVpXRnRJRlJRYzI5MFBUMVVUbk52ZEM0S0FGTjBjbVZoYlNCbGNuSnZjaUIzYUdsc1pTQnlaV0ZrYVc1bklFcFFNaUJJWldGa1pYSWdZbTk0T2lCaWIzZ2diR1Z1WjNSb0lHbHpJR2x1WTI5dWMybHpkR1Z1ZEM0S0FFSnZlQ0JzWlc1bmRHZ2dhWE1nYVc1amIyNXphWE4wWlc1MExnb0FVbVZ6YjJ4MWRHbHZiaUJtWVdOMGIzSWdhWE1nWjNKbFlYUmxjaUIwYUdGdUlIUm9aU0J0WVhocGJYVnRJSEpsYzI5c2RYUnBiMjRnYVc0Z2RHaGxJR052YlhCdmJtVnVkQzRLQUVOdmJYQnZibVZ1ZENCdFlYQndhVzVuSUhObFpXMXpJSGR5YjI1bkxpQlVjbmxwYm1jZ2RHOGdZMjl5Y21WamRDNEtBRWx1WTI5dGNHeGxkR1VnWTJoaGJtNWxiQ0JrWldacGJtbDBhVzl1Y3k0S0FFMWhiR1p2Y20xbFpDQklWQ0JqYjJSbFlteHZZMnN1SUVsdWRtRnNhV1FnWTI5a1pXSnNiMk5ySUd4bGJtZDBhQ0IyWVd4MVpYTXVDZ0JYWlNCa2J5QnViM1FnYzNWd2NHOXlkQ0J0YjNKbElIUm9ZVzRnTXlCamIyUnBibWNnY0dGemMyVnpJR2x1SUdGdUlFaFVJR052WkdWaWJHOWphenNnVkdocGN5QmpiMlJsWW14dlkydHpJR2hoY3lBbFpDQndZWE56WlhNdUNnQk5ZV3htYjNKdFpXUWdTRlFnWTI5a1pXSnNiMk5yTGlCRVpXTnZaR2x1WnlCMGFHbHpJR052WkdWaWJHOWpheUJwY3lCemRHOXdjR1ZrTGlCVWFHVnlaU0JoY21VZ0pXUWdlbVZ5YnlCaWFYUndiR0Z1WlhNZ2FXNGdKV1FnWW1sMGNHeGhibVZ6TGdvQVEyRnVibTkwSUhSaGEyVWdhVzRnWTJoaGNtZGxJRzExYkhScGNHeGxJSFJ5WVc1elptOXliV0YwYVc5dUlITjBZV2RsY3k0S0FGVnVhMjV2ZDI0Z2JXRnlhMlZ5SUdoaGN5QmlaV1Z1SUdSbGRHVmpkR1ZrSUdGdVpDQm5aVzVsY21GMFpXUWdaWEp5YjNJdUNnQkRiMlJsWXlCd2NtOTJhV1JsWkNCMGJ5QjBhR1VnYjNCcVgzTmxkRjlrWldOdlpHVmtYMk52YlhCdmJtVnVkSE1nWm5WdVkzUnBiMjRnYVhNZ2JtOTBJR0VnWkdWamIyMXdjbVZ6YzI5eUlHaGhibVJzWlhJdUNnQkRiMlJsWXlCd2NtOTJhV1JsWkNCMGJ5QjBhR1VnYjNCcVgzTmxkSFZ3WDJSbFkyOWtaWElnWm5WdVkzUnBiMjRnYVhNZ2JtOTBJR0VnWkdWamIyMXdjbVZ6YzI5eUlHaGhibVJzWlhJdUNnQkRiMlJsWXlCd2NtOTJhV1JsWkNCMGJ5QjBhR1VnYjNCcVgzSmxZV1JmYUdWaFpHVnlJR1oxYm1OMGFXOXVJR2x6SUc1dmRDQmhJR1JsWTI5dGNISmxjM052Y2lCb1lXNWtiR1Z5TGdvQVZHbHNaWE1nWkc5dUozUWdZV3hzSUdoaGRtVWdkR2hsSUhOaGJXVWdaR2x0Wlc1emFXOXVMaUJUYTJsd0lIUm9aU0JOUTFRZ2MzUmxjQzRLQUU1MWJXSmxjaUJ2WmlCamIyMXdiMjVsYm5SeklDZ2xaQ2tnYVhNZ2FXNWpiMjV6YVhOMFpXNTBJSGRwZEdnZ1lTQk5RMVF1SUZOcmFYQWdkR2hsSUUxRFZDQnpkR1Z3TGdvQVNsQXlJR0p2ZUNCM2FHbGphQ0JoY21VZ1lXWjBaWElnZEdobElHTnZaR1Z6ZEhKbFlXMGdkMmxzYkNCdWIzUWdZbVVnY21WaFpDQmllU0IwYUdseklHWjFibU4wYVc5dUxnb0FUV0ZzWm05eWJXVmtJRWhVSUdOdlpHVmliRzlqYXk0Z1YyaGxiaUIwYUdVZ2JuVnRZbVZ5SUc5bUlIcGxjbThnY0d4aGJtVnpJR0pwZEhCc1lXNWxjeUJwY3lCbGNYVmhiQ0IwYnlCMGFHVWdiblZ0WW1WeUlHOW1JR0pwZEhCc1lXNWxjeXdnYjI1c2VTQjBhR1VnWTJ4bFlXNTFjQ0J3WVhOeklHMWhhMlZ6SUhObGJuTmxMQ0JpZFhRZ2QyVWdhR0YyWlNBbFpDQndZWE56WlhNZ2FXNGdkR2hwY3lCamIyUmxZbXh2WTJzdUlGUm9aWEpsWm05eVpTd2diMjVzZVNCMGFHVWdZMnhsWVc1MWNDQndZWE56SUhkcGJHd2dZbVVnWkdWamIyUmxaQzRnVkdocGN5QnRaWE56WVdkbElIZHBiR3dnYm05MElHSmxJR1JwYzNCc1lYbGxaQ0JoWjJGcGJpNEtBRWx0WVdkbElHaGhjeUJzWlhOeklHTnZiWEJ2Ym1WdWRITWdkR2hoYmlCamIyUmxjM1J5WldGdExnb0FUbVZsWkNCMGJ5QmtaV052WkdVZ2RHaGxJRzFoYVc0Z2FHVmhaR1Z5SUdKbFptOXlaU0JpWldkcGJpQjBieUJrWldOdlpHVWdkR2hsSUhKbGJXRnBibWx1WnlCamIyUmxjM1J5WldGdExnb0FVSE52ZENCMllXeDFaU0J2WmlCMGFHVWdZM1Z5Y21WdWRDQjBhV3hsTFhCaGNuUWdhWE1nWlhGMVlXd2dkRzhnZW1WeWJ5d2dkMlVnWVhOemRXMXBibWNnYVhRZ2FYTWdkR2hsSUd4aGMzUWdkR2xzWlMxd1lYSjBJRzltSUhSb1pTQmpiMlJsYzNSeVpXRnRMZ29BUVNCdFlXeG1iM0p0WldRZ1kyOWtaV0pzYjJOcklIUm9ZWFFnYUdGeklHMXZjbVVnZEdoaGJpQnZibVVnWTI5a2FXNW5JSEJoYzNNc0lHSjFkQ0I2WlhKdklHeGxibWQwYUNCbWIzSWdNbTVrSUdGdVpDQndiM1JsYm5ScFlXeHNlU0IwYUdVZ00zSmtJSEJoYzNNZ2FXNGdZVzRnU0ZRZ1kyOWtaV0pzYjJOckxnb0FDUWtKSUhScGJHVXRjR0Z5ZEZzbFpGMDZJSE4wWVhKZmNHOXpQU1ZzYkdrc0lHVnVaRjlvWldGa1pYSTlKV3hzYVN3Z1pXNWtYM0J2Y3owbGJHeHBMZ29BVkdsc1pTQWxkU0JvWVhNZ1ZGQnpiM1FnUFQwZ01DQmhibVFnVkU1emIzUWdQVDBnTUN3Z1luVjBJRzV2SUc5MGFHVnlJSFJwYkdVdGNHRnlkSE1nZDJWeVpTQm1iM1Z1WkM0Z1JVOURJR2x6SUdGc2MyOGdiV2x6YzJsdVp5NEtBRU52YlhCdmJtVnVkQ0FsWkNCa2IyVnpiaWQwSUdoaGRtVWdZU0J0WVhCd2FXNW5MZ29BUVNCamIyNW1iM0p0YVc1bklFcFFNaUJ5WldGa1pYSWdjMmhoYkd3Z2FXZHViM0psSUdGc2JDQkRiMnh2ZFhJZ1UzQmxZMmxtYVdOaGRHbHZiaUJpYjNobGN5QmhablJsY2lCMGFHVWdabWx5YzNRc0lITnZJSGRsSUdsbmJtOXlaU0IwYUdseklHOXVaUzRLQUZSb1pTQnphV2R1WVhSMWNtVWdZbTk0SUcxMWMzUWdZbVVnZEdobElHWnBjbk4wSUdKdmVDQnBiaUIwYUdVZ1ptbHNaUzRLQUZSb1pTQWdZbTk0SUcxMWMzUWdZbVVnZEdobElHWnBjbk4wSUdKdmVDQnBiaUIwYUdVZ1ptbHNaUzRLQUZSb1pTQm1kSGx3SUdKdmVDQnRkWE4wSUdKbElIUm9aU0J6WldOdmJtUWdZbTk0SUdsdUlIUm9aU0JtYVd4bExnb0FSbUZwYkdWa0lIUnZJR1JsWTI5a1pTNEtBRTFoYkdadmNtMWxaQ0JJVkNCamIyUmxZbXh2WTJzdUlFbHVZMjl5Y21WamRDQk5SVXdnYzJWbmJXVnVkQ0J6WlhGMVpXNWpaUzRLQUVOdmJYQnZibVZ1ZENBbFpDQnBjeUJ0WVhCd1pXUWdkSGRwWTJVdUNnQlBibXg1SUc5dVpTQkRUVUZRSUdKdmVDQnBjeUJoYkd4dmQyVmtMZ29BWVhCd2JIbGZZMjlzYjNKZmRISmhibk5tYjNKdGN5QTlJRTlRU2w5VVVsVkZJR2x6SUc1dmRDQnpkWEJ3YjNKMFpXUXVDZ0JYWlNCdVpXVmtJR0Z1SUdsdFlXZGxJSEJ5WlhacGIzVnpiSGtnWTNKbFlYUmxaQzRLQUVsSVJGSWdZbTk0WDIxcGMzTnBibWN1SUZKbGNYVnBjbVZrTGdvQVNsQXlTQ0JpYjNnZ2JXbHpjMmx1Wnk0Z1VtVnhkV2x5WldRdUNnQk9iM1FnYzNWeVpTQm9iM2NnZEdoaGRDQm9ZWEJ3Wlc1bFpDNEtBRTFoYVc0Z2FHVmhaR1Z5SUdoaGN5QmlaV1Z1SUdOdmNuSmxZM1JzZVNCa1pXTnZaR1ZrTGdvQVZHbHNaU0FsWkM4bFpDQm9ZWE1nWW1WbGJpQmtaV052WkdWa0xnb0FTR1ZoWkdWeUlHOW1JSFJwYkdVZ0pXUWdMeUFsWkNCb1lYTWdZbVZsYmlCeVpXRmtMZ29BUlcxd2RIa2dVMDlVSUcxaGNtdGxjaUJrWlhSbFkzUmxaRG9nVUhOdmREMGxaQzRLQUVScGNtVmpkQ0IxYzJVZ1lYUWdJeVZrSUdodmQyVjJaWElnY0dOdmJEMGxaQzRLQUVsdGNHeGxiV1Z1ZEdGMGFXOXVJR3hwYldsMFlYUnBiMjQ2SUdadmNpQndZV3hsZEhSbElHMWhjSEJwYm1jc0lIQmpiMnhiSldSZElITm9iM1ZzWkNCaVpTQmxjWFZoYkNCMGJ5QWxaQ3dnWW5WMElHbHpJR1Z4ZFdGc0lIUnZJQ1ZrTGdvQVNXNTJZV3hwWkNCamIyMXdiMjVsYm5RdmNHRnNaWFIwWlNCcGJtUmxlQ0JtYjNJZ1pHbHlaV04wSUcxaGNIQnBibWNnSldRdUNnQkpiblpoYkdsa0lIWmhiSFZsSUdadmNpQmpiV0Z3V3lWa1hTNXRkSGx3SUQwZ0pXUXVDZ0JRYzI5MElIWmhiSFZsSUdseklHNXZkQ0JqYjNKeVpXTjBJSEpsWjJGeVpITWdkRzhnZEdobElFcFFSVWN5TURBd0lHNXZjbTA2SUNWa0xnb0FUV0ZzWm05eWJXVmtJRWhVSUdOdlpHVmliRzlqYXk0Z1ZreERJR052WkdVZ2NISnZaSFZqWlhNZ2MybG5ibWxtYVdOaGJuUWdjMkZ0Y0d4bGN5QnZkWFJ6YVdSbElIUm9aU0JqYjJSbFlteHZZMnNnWVhKbFlTNEtBRlZ1Wlhod1pXTjBaV1FnVDA5Tkxnb0FNeklnWW1sMGN5QmhjbVVnYm05MElHVnViM1ZuYUNCMGJ5QmtaV052WkdVZ2RHaHBjeUJqYjJSbFlteHZZMnNzSUhOcGJtTmxJSFJvWlNCdWRXMWlaWElnYjJZZ1ltbDBjR3hoYm1Vc0lDVmtMQ0JwY3lCc1lYSm5aWElnZEdoaGJpQXpNQzRLQUVKdmRIUnZiU0J3YjNOcGRHbHZiaUJ2WmlCMGFHVWdaR1ZqYjJSbFpDQmhjbVZoSUNoeVpXZHBiMjVmZVRFOUpXUXBJSE5vYjNWc1pDQmlaU0ErSURBdUNnQlNhV2RvZENCd2IzTnBkR2x2YmlCdlppQjBhR1VnWkdWamIyUmxaQ0JoY21WaElDaHlaV2RwYjI1ZmVERTlKV1FwSUhOb2IzVnNaQ0JpWlNBK0lEQXVDZ0JWY0NCd2IzTnBkR2x2YmlCdlppQjBhR1VnWkdWamIyUmxaQ0JoY21WaElDaHlaV2RwYjI1ZmVUQTlKV1FwSUhOb2IzVnNaQ0JpWlNBK1BTQXdMZ29BVEdWbWRDQndiM05wZEdsdmJpQnZaaUIwYUdVZ1pHVmpiMlJsWkNCaGNtVmhJQ2h5WldkcGIyNWZlREE5SldRcElITm9iM1ZzWkNCaVpTQStQU0F3TGdvQVJYSnliM0lnY21WaFpHbHVaeUJRVUZRZ2JXRnlhMlZ5T2lCd1lXTnJaWFFnYUdWaFpHVnlJR2hoZG1VZ1ltVmxiaUJ3Y21WMmFXOTFjMng1SUdadmRXNWtJR2x1SUhSb1pTQnRZV2x1SUdobFlXUmxjaUFvVUZCTklHMWhjbXRsY2lrdUNnQlRkR0Z5ZENCMGJ5QnlaV0ZrSUdveWF5QnRZV2x1SUdobFlXUmxjaUFvSld4c1pDa3VDZ0JDYjNSMGIyMGdjRzl6YVhScGIyNGdiMllnZEdobElHUmxZMjlrWldRZ1lYSmxZU0FvY21WbmFXOXVYM2t4UFNWa0tTQnBjeUJ2ZFhSemFXUmxJSFJvWlNCcGJXRm5aU0JoY21WaElDaFpjMmw2UFNWa0tTNEtBRlZ3SUhCdmMybDBhVzl1SUc5bUlIUm9aU0JrWldOdlpHVmtJR0Z5WldFZ0tISmxaMmx2Ymw5NU1EMGxaQ2tnYVhNZ2IzVjBjMmxrWlNCMGFHVWdhVzFoWjJVZ1lYSmxZU0FvV1hOcGVqMGxaQ2t1Q2dCU2FXZG9kQ0J3YjNOcGRHbHZiaUJ2WmlCMGFHVWdaR1ZqYjJSbFpDQmhjbVZoSUNoeVpXZHBiMjVmZURFOUpXUXBJR2x6SUc5MWRITnBaR1VnZEdobElHbHRZV2RsSUdGeVpXRWdLRmh6YVhvOUpXUXBMZ29BVEdWbWRDQndiM05wZEdsdmJpQnZaaUIwYUdVZ1pHVmpiMlJsWkNCaGNtVmhJQ2h5WldkcGIyNWZlREE5SldRcElHbHpJRzkxZEhOcFpHVWdkR2hsSUdsdFlXZGxJR0Z5WldFZ0tGaHphWG85SldRcExnb0FRbTkwZEc5dElIQnZjMmwwYVc5dUlHOW1JSFJvWlNCa1pXTnZaR1ZrSUdGeVpXRWdLSEpsWjJsdmJsOTVNVDBsWkNrZ2FYTWdiM1YwYzJsa1pTQjBhR1VnYVcxaFoyVWdZWEpsWVNBb1dVOXphWG85SldRcExnb0FWWEFnY0c5emFYUnBiMjRnYjJZZ2RHaGxJR1JsWTI5a1pXUWdZWEpsWVNBb2NtVm5hVzl1WDNrd1BTVmtLU0JwY3lCdmRYUnphV1JsSUhSb1pTQnBiV0ZuWlNCaGNtVmhJQ2haVDNOcGVqMGxaQ2t1Q2dCU2FXZG9kQ0J3YjNOcGRHbHZiaUJ2WmlCMGFHVWdaR1ZqYjJSbFpDQmhjbVZoSUNoeVpXZHBiMjVmZURFOUpXUXBJR2x6SUc5MWRITnBaR1VnZEdobElHbHRZV2RsSUdGeVpXRWdLRmhQYzJsNlBTVmtLUzRLQUV4bFpuUWdjRzl6YVhScGIyNGdiMllnZEdobElHUmxZMjlrWldRZ1lYSmxZU0FvY21WbmFXOXVYM2d3UFNWa0tTQnBjeUJ2ZFhSemFXUmxJSFJvWlNCcGJXRm5aU0JoY21WaElDaFlUM05wZWowbFpDa3VDZ0JUYVhwbElIZ2diMllnZEdobElHUmxZMjlrWldRZ1kyOXRjRzl1Wlc1MElHbHRZV2RsSUdseklHbHVZMjl5Y21WamRDQW9ZMjl0Y0ZzbFpGMHVkejBsWkNrdUNnQlRhWHBsSUhrZ2IyWWdkR2hsSUdSbFkyOWtaV1FnWTI5dGNHOXVaVzUwSUdsdFlXZGxJR2x6SUdsdVkyOXljbVZqZENBb1kyOXRjRnNsWkYwdWFEMGxaQ2t1Q2dCVWFXeGxJSEpsWVdRc0lHUmxZMjlrWldRZ1lXNWtJSFZ3WkdGMFpXUWdhWE1nYm05MElIUm9aU0JrWlhOcGNtVmtJRzl1WlNBb0pXUWdkbk1nSldRcExnb0FTVzUyWVd4cFpDQmpiMjF3YjI1bGJuUWdhVzVrWlhnZ0pXUWdLRDQ5SUNWa0tTNEtBRzl3YWw5eVpXRmtYMmhsWVdSbGNpZ3BJSE5vYjNWc1pDQmlaU0JqWVd4c1pXUWdZbVZtYjNKbElHOXdhbDl6WlhSZlpHVmpiMlJsWkY5amIyMXdiMjVsYm5SektDa3VDZ0JOWlcxdmNua2dZV3hzYjJOaGRHbHZiaUJtWVdsc2RYSmxJR2x1SUc5d2FsOXFjREpmWVhCd2JIbGZjR05zY2lncExnb0FhVzFoWjJVdFBtTnZiWEJ6V3lWa1hTNWtZWFJoSUQwOUlFNVZURXdnYVc0Z2IzQnFYMnB3TWw5aGNIQnNlVjl3WTJ4eUtDa3VDZ0JwYm5aaGJHbGtJR0p2ZUNCemFYcGxJQ1ZrSUNnbGVDa0tBRVpoYVd3Z2RHOGdjbVZoWkNCMGFHVWdZM1Z5Y21WdWRDQnRZWEpyWlhJZ2MyVm5iV1Z1ZENBb0pTTjRLUW9BUlhKeWIzSWdkMmwwYUNCVFNWb2diV0Z5YTJWeU9pQkpTRVJTSUhjb0pYVXBJR2dvSlhVcElIWnpMaUJUU1ZvZ2R5Z2xkU2tnYUNnbGRTa0tBRVZ5Y205eUlISmxZV1JwYm1jZ1EwOURJRzFoY210bGNpQW9ZbUZrSUc1MWJXSmxjaUJ2WmlCamIyMXdiMjVsYm5SektRb0FTVzUyWVd4cFpDQnVkVzFpWlhJZ2IyWWdkR2xzWlhNZ09pQWxkU0I0SUNWMUlDaHRZWGhwYlhWdElHWnBlR1ZrSUdKNUlHcHdaV2N5TURBd0lHNXZjbTBnYVhNZ05qVTFNelVnZEdsc1pYTXBDZ0JKYm5aaGJHbGtJRzUxYldKbGNpQnZaaUJqYjIxd2IyNWxiblJ6SUNocGFHUnlLUW9BVG05MElHVnViM1ZuYUNCdFpXMXZjbmtnZEc4Z2FHRnVaR3hsSUdsdFlXZGxJR2hsWVdSbGNpQW9hV2hrY2lrS0FGZHliMjVuSUhaaGJIVmxjeUJtYjNJNklIY29KV1FwSUdnb0pXUXBJRzUxYldOdmJYQnpLQ1ZrS1NBb2FXaGtjaWtLQUVsdWRtRnNhV1FnZG1Gc2RXVnpJR1p2Y2lCamIyMXdJRDBnSldRZ09pQmtlRDBsZFNCa2VUMGxkU0FvYzJodmRXeGtJR0psSUdKbGRIZGxaVzRnTVNCaGJtUWdNalUxSUdGalkyOXlaR2x1WnlCMGJ5QjBhR1VnU2xCRlJ6SXdNREFnYm05eWJTa0tBRUpoWkNCcGJXRm5aU0JvWldGa1pYSWdZbTk0SUNoaVlXUWdjMmw2WlNrS0FFSmhaQ0JEVDB4U0lHaGxZV1JsY2lCaWIzZ2dLR0poWkNCemFYcGxLUW9BUW1Ga0lFSlFRME1nYUdWaFpHVnlJR0p2ZUNBb1ltRmtJSE5wZW1VcENnQkZjbkp2Y2lCM2FYUm9JRk5KV2lCdFlYSnJaWEk2SUc1bFoyRjBhWFpsSUc5eUlIcGxjbThnYVcxaFoyVWdjMmw2WlNBb0pXeHNaQ0I0SUNWc2JHUXBDZ0J6YTJsd09pQnpaV2R0Wlc1MElIUnZieUJzYjI1bklDZ2xaQ2tnZDJsMGFDQnRZWGdnS0NWa0tTQm1iM0lnWTI5a1pXSnNiMk5ySUNWa0lDaHdQU1ZrTENCaVBTVmtMQ0J5UFNWa0xDQmpQU1ZrS1FvQWNtVmhaRG9nYzJWbmJXVnVkQ0IwYjI4Z2JHOXVaeUFvSldRcElIZHBkR2dnYldGNElDZ2xaQ2tnWm05eUlHTnZaR1ZpYkc5amF5QWxaQ0FvY0QwbFpDd2dZajBsWkN3Z2NqMGxaQ3dnWXowbFpDa0tBRVJsYzNCcGRHVWdTbEF5SUVKUVF5RTlNalUxTENCd2NtVmphWE5wYjI0Z1lXNWtMMjl5SUhObmJtUWdkbUZzZFdWeklHWnZjaUJqYjIxd1d5VmtYU0JwY3lCa2FXWm1aWEpsYm5RZ2RHaGhiaUJqYjIxd1d6QmRPZ29nSUNBZ0lDQWdJRnN3WFNCd2NtVmpLQ1ZrS1NCeloyNWtLQ1ZrS1NCYkpXUmRJSEJ5WldNb0pXUXBJSE5uYm1Rb0pXUXBDZ0JpWVdRZ1kyOXRjRzl1Wlc1MElHNTFiV0psY2lCcGJpQlNSMDRnS0NWa0lIZG9aVzRnZEdobGNtVWdZWEpsSUc5dWJIa2dKV1FwQ2dCRmNuSnZjaUIzYVhSb0lGTkpXaUJ0WVhKclpYSTZJRzUxYldKbGNpQnZaaUJqYjIxd2IyNWxiblFnYVhNZ2JtOTBJR052YlhCaGRHbGliR1VnZDJsMGFDQjBhR1VnY21WdFlXbHVhVzVuSUc1MWJXSmxjaUJ2WmlCd1lYSmhiV1YwWlhKeklDZ2dKV1FnZG5NZ0pXUXBDZ0JGY25KdmNpQjNhWFJvSUZOSldpQnRZWEpyWlhJNklHbHVkbUZzYVdRZ2RHbHNaU0J6YVhwbElDaDBaSGc2SUNWa0xDQjBaSGs2SUNWa0tRb0FRbUZrSUVOUFRGSWdhR1ZoWkdWeUlHSnZlQ0FvWW1Ga0lITnBlbVU2SUNWa0tRb0FRbUZrSUVOUFRGSWdhR1ZoWkdWeUlHSnZlQ0FvUTBsRlRHRmlMQ0JpWVdRZ2MybDZaVG9nSldRcENnQlFWRVZTVFNCamFHVmpheUJtWVdsc2RYSmxPaUFsWkNCeVpXMWhhVzVwYm1jZ1lubDBaWE1nYVc0Z1kyOWtaU0JpYkc5amF5QW9KV1FnZFhObFpDQXZJQ1ZrS1FvQVRXRnNabTl5YldWa0lFaFVJR052WkdWaWJHOWpheTRnVDI1bElHOW1JSFJvWlNCbWIyeHNiM2RwYm1jZ1kyOXVaR2wwYVc5dUlHbHpJRzV2ZENCdFpYUTZJRElnUEQwZ1UyTjFjQ0E4UFNCdGFXNG9UR04xY0N3Z05EQTNPU2tLQUVsdWRtRnNhV1FnZG1Gc2RXVnpJR1p2Y2lCamIyMXdJRDBnSldRZ09pQndjbVZqUFNWMUlDaHphRzkxYkdRZ1ltVWdZbVYwZDJWbGJpQXhJR0Z1WkNBek9DQmhZMk52Y21ScGJtY2dkRzhnZEdobElFcFFSVWN5TURBd0lHNXZjbTB1SUU5d1pXNUtjR1ZuSUc5dWJIa2djM1Z3Y0c5eWRITWdkWEFnZEc4Z016RXBDZ0JKYm5aaGJHbGtJR0pwZENCdWRXMWlaWElnSldRZ2FXNGdiM0JxWDNReVgzSmxZV1JmY0dGamEyVjBYMmhsWVdSbGNpZ3BDZ0JUZEhKbFlXMGdaWEp5YjNJaENnQkZjbkp2Y2lCdmJpQjNjbWwwYVc1bklITjBjbVZoYlNFS0FGTjBjbVZoYlNCeVpXRmphR1ZrSUdsMGN5QmxibVFnSVFvQVJYaHdaV04wWldRZ1lTQlRUME1nYldGeWEyVnlJQW9BU1c1MllXeHBaQ0JpYjNnZ2MybDZaU0FsWkNCbWIzSWdZbTk0SUNjbFl5VmpKV01sWXljdUlFNWxaV1FnSldRZ1lubDBaWE1zSUNWa0lHSjVkR1Z6SUhKbGJXRnBibWx1WnlBS0FFMWhiR1p2Y20xbFpDQklWQ0JqYjJSbFlteHZZMnN1SUVSbFkyOWthVzVuSUhSb2FYTWdZMjlrWldKc2IyTnJJR2x6SUhOMGIzQndaV1F1SUZWZmNTQnBjeUJzWVhKblpYSWdkR2hoYmlCNlpYSnZJR0pwZEhCc1lXNWxjeUFySURFZ0NnQk5ZV3htYjNKdFpXUWdTRlFnWTI5a1pXSnNiMk5yTGlCRVpXTnZaR2x1WnlCMGFHbHpJR052WkdWaWJHOWpheUJwY3lCemRHOXdjR1ZrTGlCVlgzRWdhWE5zWVhKblpYSWdkR2hoYmlCaWFYUndiR0Z1WlhNZ0t5QXhJQW9BUTA5TVVpQkNUMWdnYldWMGFDQjJZV3gxWlNCcGN5QnViM1FnWVNCeVpXZDFiR0Z5SUhaaGJIVmxJQ2dsWkNrc0lITnZJSGRsSUhkcGJHd2dhV2R1YjNKbElIUm9aU0JsYm5ScGNtVWdRMjlzYjNWeUlGTndaV05wWm1sallYUnBiMjRnWW05NExpQUtBRmRvYVd4bElISmxZV1JwYm1jZ1EwTlFYMUZPVkZOVVdTQmxiR1Z0Wlc1MElHbHVjMmxrWlNCUlEwUWdiM0lnVVVORElHMWhjbXRsY2lCelpXZHRaVzUwTENCdWRXMWlaWElnYjJZZ2MzVmlZbUZ1WkhNZ0tDVmtLU0JwY3lCbmNtVmhkR1Z5SUhSdklFOVFTbDlLTWt0ZlRVRllRa0ZPUkZNZ0tDVmtLUzRnVTI4Z2QyVWdiR2x0YVhRZ2RHaGxJRzUxYldKbGNpQnZaaUJsYkdWdFpXNTBjeUJ6ZEc5eVpXUWdkRzhnVDFCS1gwb3lTMTlOUVZoQ1FVNUVVeUFvSldRcElHRnVaQ0J6YTJsd0lIUm9aU0J5WlhOMExpQUtBRXBRTWlCSlNFUlNJR0p2ZURvZ1kyOXRjSEpsYzNOcGIyNGdkSGx3WlNCcGJtUnBZMkYwWlNCMGFHRjBJSFJvWlNCbWFXeGxJR2x6SUc1dmRDQmhJR052Ym1admNtMXBibWNnU2xBeUlHWnBiR1VnS0NWa0tTQUtBRlJwYkdVZ2FXNWtaWGdnY0hKdmRtbGtaV1FnWW5rZ2RHaGxJSFZ6WlhJZ2FYTWdhVzVqYjNKeVpXTjBJQ1ZrSUNodFlYZ2dQU0FsWkNrZ0NnQkZjbkp2Y2lCa1pXTnZaR2x1WnlCamIyMXdiMjVsYm5RZ0pXUXVDbFJvWlNCdWRXMWlaWElnYjJZZ2NtVnpiMngxZEdsdmJuTWdkRzhnY21WdGIzWmxJQ2dsWkNrZ2FYTWdaM0psWVhSbGNpQnZjaUJsY1hWaGJDQjBhR0Z1SUhSb1pTQnVkVzFpWlhJZ2IyWWdjbVZ6YjJ4MWRHbHZibk1nYjJZZ2RHaHBjeUJqYjIxd2IyNWxiblFnS0NWa0tRcE5iMlJwWm5rZ2RHaGxJR053WDNKbFpIVmpaU0J3WVhKaGJXVjBaWEl1Q2dvQVNXMWhaMlVnWkdGMFlTQm9ZWE1nWW1WbGJpQjFjR1JoZEdWa0lIZHBkR2dnZEdsc1pTQWxaQzRLQ2dCQnNQMEFDNEFnSXdDbEFFTUFaZ0NEQU82b0ZBRGYyQ01BdmhCREFQLzFnd0IrSUZVQVgxRWpBRFVBUXdCT1JJTUF6c1FVQU0vTUl3RCs0a01BLzVtREFKWUF4UUEvTVNNQXBRQkRBRjVFZ3dET3lCUUEzeEVqQVA3MFF3RC8vSU1BbmdCVkFIY0FJd0ExQUVNQS8vR0RBSzZJRkFDM0FDTUEvdmhEQU8va2d3Q09pTVVBSHhFakFLVUFRd0JtQUlNQTdxZ1VBTjlVSXdDK0VFTUE3eUtEQUg0Z1ZRQi9JaU1BTlFCREFFNUVnd0RPeEJRQXZ4RWpBUDdpUXdEM0FJTUFsZ0RGQUQ4aUl3Q2xBRU1BWGtTREFNN0lGQURYQUNNQS92UkRBUCs2Z3dDZUFGVUFid0FqQURVQVF3RC81b01Bcm9nVUFLK2lJd0QrK0VNQTV3Q0RBSTZJeFFBdklnSUF4UUNFQUg0Z0FnRE94Q1FBOXdBQ0FQNmlSQUJXQUFJQW5nQVVBTmNBQWdDK0VJUUFaZ0FDQUs2SUpBRGZFUUlBN3FoRUFEWUFBZ0NPaUJRQUh4RUNBTVVBaEFCdUFBSUF6b2drQVArSUFnRCt1RVFBVGtRQ0FKWUFGQUMzQUFJQS91U0VBRjVFQWdDbUFDUUE1d0FDQU41VVJBQXVJZ0lBUGdBVUFIY0FBZ0RGQUlRQWZpQUNBTTdFSkFELzhRSUEvcUpFQUZZQUFnQ2VBQlFBdnhFQ0FMNFFoQUJtQUFJQXJvZ2tBTzhpQWdEdXFFUUFOZ0FDQUk2SUZBQi9JZ0lBeFFDRUFHNEFBZ0RPaUNRQTcrUUNBUDY0UkFCT1JBSUFsZ0FVQUsraUFnRCs1SVFBWGtRQ0FLWUFKQURmMkFJQTNsUkVBQzRpQWdBK0FCUUFYMUVDQUZVQWhBQm1BQUlBM29na0FQOHlBZ0QrRVVRQVRrUUNBSzRBRkFDM0FBSUFmakdFQUY1UkFnREdBQ1FBMXdBQ0FPNGdSQUFlRVFJQW5nQVVBSGNBQWdCVkFJUUFYbFFDQU01RUpBRG5BQUlBL3ZGRUFEWUFBZ0NtQUJRQVgxVUNBUDUwaEFBK0VRSUF2aUFrQUg5MEFnRGV4RVFBLy9nQ0FKWUFGQUF2SWdJQVZRQ0VBR1lBQWdEZWlDUUE5d0FDQVA0UlJBQk9SQUlBcmdBVUFJK0lBZ0IrTVlRQVhsRUNBTVlBSkFEUHlBSUE3aUJFQUI0UkFnQ2VBQlFBYndBQ0FGVUFoQUJlVkFJQXprUWtBTi9SQWdEKzhVUUFOZ0FDQUtZQUZBQi9JZ0lBL25TRUFENFJBZ0MrSUNRQXZ5SUNBTjdFUkFEdklnSUFsZ0FVQUQ4eUF3RGUxUDMwLy93VUFENFJWUUNQaUFNQXZqS0ZBT2NBSlFCZVVmNnFmM0lEQU01RS9manZSQlFBZm1SRkFLK2lBd0NtQUYxVjM1bjk4VFlBL3ZWdllnTUEzdEg5OVAvbUZBQitjVlVBdjdFREFLNkloUURmMVNVQVRrVCs4bjltQXdER0FQMzQ3K0lVQUY1VVJRQ2ZFUU1BbGdCZFZjL0kvZkVlRWU3SVp3QURBTjdVL2ZULzh4UUFQaEZWQUw4UkF3QytNb1VBMzlnbEFGNVIvcW92SWdNQXprVDkrUGNBRkFCK1pFVUFuNWdEQUtZQVhWWFhBUDN4TmdEKzlXOUVBd0RlMGYzMC83a1VBSDV4VlFDM0FBTUFyb2lGQU4vY0pRQk9SUDd5ZHdBREFNWUEvZmp2NUJRQVhsUkZBSDl6QXdDV0FGMVZ2N2o5OFI0UjdzZy9NZ0lBcFFDRUFINUFBZ0RlRUNRQTN4RUNBUDV5UkFCV0FBSUFycWdVQUwreUFnQ1dBSVFBWmdBQ0FNWUFKQURuQUFJQTdzaEVBQzRpQWdDT2lCUUFkd0FDQUtVQWhBQnVBQUlBem9na0FQY0FBZ0Qra1VRQU5nQUNBSzZpRkFDdnFnSUEvcmlFQUY0QUFnQytBQ1FBejhRQ0FPNUVSQUQvOUFJQVBpSVVBQjhSQWdDbEFJUUFma0FDQU40UUpBRC9tUUlBL25KRUFGWUFBZ0N1cUJRQXR3QUNBSllBaEFCbUFBSUF4Z0FrQU5jQUFnRHV5RVFBTGlJQ0FJNklGQUJQUkFJQXBRQ0VBRzRBQWdET2lDUUE3K0lDQVA2UlJBQTJBQUlBcnFJVUFIOUVBZ0QrdUlRQVhnQUNBTDRBSkFDZkFBSUE3a1JFQVA5MkFnQStJaFFBUHpFREFNWUFoUUQvMmYzeWZtVCs4YitaQXdDdW9pVUE3MmI5OUZZQTd1Si9jd01BdnBoRkFQY0EvZmhtQVA1Mm40Z0RBSTZJRlFEZjFhVUFMaUxlbUU5RUF3Qytzb1VBLy96OThtNGlsZ0MzQUFNQXJxb2xBTi9SL2ZRMkFON1ViMlFEQUs2b1JRRHY2djM0WGtUdTZIOXhBd0ErTWhVQXo4U2xBUC82em9nL01RTUF4Z0NGQVA5My9mSitaUDd4djdNREFLNmlKUURuQVAzMFZnRHU0bmNBQXdDK21FVUE3K1Q5K0dZQS9uWi9aZ01Bam9nVkFOY0FwUUF1SXQ2WVB6TURBTDZ5aFFEL2RmM3liaUtXQUorUkF3Q3VxaVVBMzVuOTlEWUEzdFJmVVFNQXJxaEZBTy9zL2ZoZVJPN29mM0lEQUQ0eUZRQy9zYVVBLy9QT2lCOFJBd0RlVlAzeUhoRVVBSDVrL3ZqUHpBTUF2cEZGQU84aUpRQXVJdjd6ajRnREFNWUFoUUQzQUJRQVhoSCsvSytvQXdDbUFEVUEzOGo5OFQ0eC9tWnZaQU1BenNqOTh2LzFGQUJtQVA3MHY3b0RBSzRpUlFEbkFDVUFQakwrNm45ekF3Qytzb1VBMzFVVUFGWUFmbkdmRVFNQWxnQTFBTS9FL2ZFK00rN29UMFFEQU41VS9mSWVFUlFBZm1UKytMK1pBd0Mra1VVQTcrSWxBQzRpL3ZOL1pnTUF4Z0NGQU8va0ZBQmVFZjc4bjVnREFLWUFOUURYQVAzeFBqSCtabThpQXdET3lQM3kvN2tVQUdZQS92UzNBQU1BcmlKRkFOL1JKUUErTXY3cWR3QURBTDZ5aFFEdjdCUUFWZ0IrY1g5eUF3Q1dBRFVBdjdqOThUNHo3dWhmVlB6eDN0SDkrdGNBL1BnV0FQMy9mM1Q4OUg1eC9mTy9zL3p5NytydTZFOUUvUEd1SWdVQXY3ajgrUGNBL3Z4M0FQejBYaEg5OVg5MS9QTGYyTzdpUHpQODhiNnkvZnJQaVB6NC8vdjkvMzl6L1BSdUFQM3p0d0Q4OHU5bS92ay9NZnp4bmdBRkFMKzYvUGovL2Y3Mlp3RDg5Q1lBL2ZXUGlQenkzOXplMUM4aS9QSGUwZjM2ejhUOCtCWUEvZjkvY3Z6MGZuSDk4NytaL1BMdjdPN29Sd0Q4OGE0aUJRQ25BUHo0Ly9mKy9GY0EvUFJlRWYzMWx3RDg4dC9WN3VJM0FQenh2ckw5K3NjQS9Qai8vdjMvZjJiODlHNEEvZk92cVB6eTV3RCsrVDh5L1BHZUFBVUF2N0g4K08vay92WmZWUHowSmdEOTlZY0EvUExmbWQ3VUh4RVRBR1VBUXdEZUFJTUFqWWdqQUU1RUV3Q2xBRU1Bcm9pREFEVUFJd0RYQUJNQXhRQkRBSjRBZ3dCVkFDTUFMaUlUQUpVQVF3QitBSU1BL2hBakFIY0FFd0JsQUVNQXpvaURBSTJJSXdBZUVSTUFwUUJEQUY0QWd3QTFBQ01BNXdBVEFNVUFRd0MrQUlNQVZRQWpBUDhSRXdDVkFFTUFQZ0NEQU81QUl3Q3ZvaE1BWlFCREFONEFnd0NOaUNNQVRrUVRBS1VBUXdDdWlJTUFOUUFqQU85RUV3REZBRU1BbmdDREFGVUFJd0F1SWhNQWxRQkRBSDRBZ3dEK0VDTUF0d0FUQUdVQVF3RE9pSU1BallnakFCNFJFd0NsQUVNQVhnQ0RBRFVBSXdEUHhCTUF4UUJEQUw0QWd3QlZBQ01BOXdBVEFKVUFRd0ErQUlNQTdrQWpBRzhBQVFDRUFBRUFWZ0FCQUJRQUFRRFhBQUVBSkFBQkFKWUFBUUJGQUFFQWR3QUJBSVFBQVFER0FBRUFGQUFCQUkrSUFRQWtBQUVBOXdBQkFEVUFBUUF2SWdFQWhBQUJBUDVBQVFBVUFBRUF0d0FCQUNRQUFRQy9BQUVBUlFBQkFHY0FBUUNFQUFFQXBnQUJBQlFBQVFCUFJBRUFKQUFCQU9jQUFRQTFBQUVBUHhFQkFJUUFBUUJXQUFFQUZBQUJBTThBQVFBa0FBRUFsZ0FCQUVVQUFRQnZBQUVBaEFBQkFNWUFBUUFVQUFFQW53QUJBQ1FBQVFEdkFBRUFOUUFCQUQ4eUFRQ0VBQUVBL2tBQkFCUUFBUUN2QUFFQUpBQUJBUDlFQVFCRkFBRUFYd0FCQUlRQUFRQ21BQUVBRkFBQkFIOEFBUUFrQUFFQTN3QUJBRFVBQVFBZkVRRUFKQUFCQUZZQUFRQ0ZBQUVBdndBQkFCUUFBUUQzQUFFQXhnQUJBSGNBQVFBa0FBRUEvL2dCQUVVQUFRQi9BQUVBRkFBQkFOOEFBUUNtQUFFQVB6RUJBQ1FBQVFBdUlnRUFoUUFCQUxjQUFRQVVBQUVBNzBRQkFLNmlBUUJuQUFFQUpBQUJBUDlSQVFCRkFBRUFsd0FCQUJRQUFRRFBBQUVBTmdBQkFEOGlBUUFrQUFFQVZnQUJBSVVBQVFDL3NnRUFGQUFCQU85QUFRREdBQUVBYndBQkFDUUFBUUQvY2dFQVJRQUJBSjhBQVFBVUFBRUExd0FCQUtZQUFRQlBSQUVBSkFBQkFDNGlBUUNGQUFFQXI2Z0JBQlFBQVFEbkFBRUFycUlCQUY4QUFRQWtBQUVBLzBRQkFFVUFBUUNQaUFFQUZBQUJBSytxQVFBMkFBRUFIeEVDQVA3NEpBQldBQUlBdGdDRkFQOW1BZ0RPQUJRQUhoRUNBSllBTlFDdnFBSUE5Z0FrQUQ0eEFnQ21BRVVBdjdNQ0FMNnlGQUQvOVFJQVpnQitVVjlVQWdEKzhpUUFMaUlDQUs0aWhRRHZSQUlBeGdBVUFQLzBBZ0IyQURVQWYwUUNBTjVBSkFBK01nSUFuZ0JGQU5jQUFnQytpQlFBLy9vQ0FGNFIvdkZQUkFJQS92Z2tBRllBQWdDMkFJVUE3OGdDQU00QUZBQWVFUUlBbGdBMUFJK0lBZ0QyQUNRQVBqRUNBS1lBUlFEZlJBSUF2cklVQVArb0FnQm1BSDVSYndBQ0FQN3lKQUF1SWdJQXJpS0ZBT2NBQWdER0FCUUE3K0lDQUhZQU5RQi9jZ0lBM2tBa0FENHlBZ0NlQUVVQXY3RUNBTDZJRkFEL2N3SUFYaEgrOFQ4ekFRQ0VBQUVBN2lBQkFNVUFBUURQeEFFQVJBQUJBUDh5QVFBVkFBRUFqNGdCQUlRQUFRQm1BQUVBSlFBQkFLOEFBUUJFQUFFQTd5SUJBS1lBQVFCZkFBRUFoQUFCQUU1RUFRREZBQUVBejh3QkFFUUFBUUQzQUFFQUZRQUJBRzhBQVFDRUFBRUFWZ0FCQUNVQUFRQ2ZBQUVBUkFBQkFOOEFBUUQrTUFFQUx5SUJBSVFBQVFEdUlBRUF4UUFCQU0vSUFRQkVBQUVBL3hFQkFCVUFBUUIzQUFFQWhBQUJBR1lBQVFBbEFBRUFmd0FCQUVRQUFRRG5BQUVBcGdBQkFEY0FBUUNFQUFFQVRrUUJBTVVBQVFDM0FBRUFSQUFCQUw4QUFRQVZBQUVBUHdBQkFJUUFBUUJXQUFFQUpRQUJBSmNBQVFCRUFBRUExd0FCQVA0d0FRQWZFUUlBN3FoRUFJNklBZ0RXQU1VQS8vTUNBUDc4SlFBK0FBSUF0Z0JWQU4vWUFnRCsrRVFBWmdBQ0FINGdoUUQvbVFJQTVnRDFBRFlBQWdDbUFCVUFud0FDQVA3eVJBQjJBQUlBemtURkFQOTJBZ0QrOFNVQVRrUUNBSzRBVlFEUHlBSUEvdlJFQUY1RUFnQytFSVVBNytRQ0FONVU5UUFlRVFJQWxnQVZBQzhpQWdEdXFFUUFqb2dDQU5ZQXhRRC8rZ0lBL3Z3bEFENEFBZ0MyQUZVQXZ4RUNBUDc0UkFCbUFBSUFmaUNGQU84aUFnRG1BUFVBTmdBQ0FLWUFGUUIvSWdJQS92SkVBSFlBQWdET1JNVUEvOVVDQVA3eEpRQk9SQUlBcmdCVkFHOEFBZ0QrOUVRQVhrUUNBTDRRaFFEZkVRSUEzbFQxQUI0UkFnQ1dBQlVBWDFFREFQWUFGQUFlRVVRQWpvaWxBTi9VQXdDdW9sVUEvM1lrQUQ0aXRnQ3ZxZ01BNWdBVUFQLzFSQUJtQUlVQXo4d0RBSjRBeFFEdlJDUUFOZ0QrK0g4eEF3RHU2QlFBLy9GRUFIWUFwUURQeEFNQWZpSlZBTi9SSkFCT1JQNzBYMUVEQU5ZQUZBRHY0a1FBWGtTRkFMOGlBd0NXQU1VQTM4Z2tBQzRpL3ZKdklnTUE5Z0FVQUI0UlJBQ09pS1VBdjdFREFLNmlWUUQvTXlRQVBpSzJBSytvQXdEbUFCUUEvN2xFQUdZQWhRQy9xQU1BbmdERkFPL2tKQUEyQVA3NGIyUURBTzdvRkFELy9FUUFkZ0NsQU0vSUF3QitJbFVBNytva0FFNUUvdlIvZEFNQTFnQVVBUC82UkFCZVJJVUF2N0lEQUpZQXhRRGZSQ1FBTGlMKzhqOHg4d0QrK3YzeE5nQUVBTDR5ZFFEZkVmTUEzbFQ5OHUvazFRQitjZjc4ZjNQekFQN3ovZmdlRVFRQWxnQlZBTCt4OHdET0FMVUEzOWo5OUdZQS9ybGZWUE1BL25iOThTWUFCQUNtQUhVQW53RHpBSzRBL2ZMLzk5VUFSZ0QrOVg5MDh3RG1BUDM0RmdBRUFJWUFWUUNQaVBNQXhnQzFBTy9pL2ZSZUVlNm9QeEh6QVA3Ni9mRTJBQVFBdmpKMUFOL1I4d0RlVlAzeS8vdlZBSDV4L3Z4L1JQTUEvdlA5K0I0UkJBQ1dBRlVBZjNMekFNNEF0UUR2SXYzMFpnRCt1VTlFOHdEK2R2M3hKZ0FFQUtZQWRRQy9FZk1BcmdEOTh2Ly8xUUJHQVA3MVB6THpBT1lBL2ZnV0FBUUFoZ0JWQUc4QTh3REdBTFVBdjdqOTlGNFI3cWd2SWdCQnZKMEJDNlFlQVFBQUFBRUFBQUFCQUFBQUFnQUFBQUlBQUFBQ0FBQUFBd0FBQUFNQUFBQUVBQUFBQlFBQUFMY2hRaUZuSVVJaEVSRVJFVE16TXpOM2QzZDNBQUFBQUFBQUFBQUJWZ0FBQUFBQUFDQlBBQUF3VHdBQUFWWUFBQUVBQUFBd1R3QUFJRThBQUFFMEFBQUFBQUFBUUU4QUFNQlBBQUFCTkFBQUFRQUFBRkJQQUFEUVR3QUFBUmdBQUFBQUFBQmdUd0FBSUZBQUFBRVlBQUFCQUFBQWNFOEFBREJRQUFEQkNnQUFBQUFBQUlCUEFBQ0FVQUFBd1FvQUFBRUFBQUNRVHdBQWtGQUFBQ0VGQUFBQUFBQUFvRThBQUtCU0FBQWhCUUFBQVFBQUFMQlBBQUN3VWdBQUlRSUFBQUFBQUFEQVV3QUFJRk1BQUNFQ0FBQUJBQUFBMEZNQUFEQlRBQUFCVmdBQUFBQUFBT0JQQUFEUVR3QUFBVllBQUFFQUFBRHdUd0FBd0U4QUFBRlVBQUFBQUFBQUFGQUFBTUJRQUFBQlZBQUFBUUFBQUJCUUFBRFFVQUFBQVVnQUFBQUFBQUFnVUFBQXdGQUFBQUZJQUFBQkFBQUFNRkFBQU5CUUFBQUJPQUFBQUFBQUFFQlFBQURBVUFBQUFUZ0FBQUVBQUFCUVVBQUEwRkFBQUFFd0FBQUFBQUFBWUZBQUFDQlJBQUFCTUFBQUFRQUFBSEJRQUFBd1VRQUFBU1FBQUFBQUFBQ0FVQUFBUUZFQUFBRWtBQUFCQUFBQWtGQUFBRkJSQUFBQkhBQUFBQUFBQUtCUUFBQ0FVUUFBQVJ3QUFBRUFBQUN3VUFBQWtGRUFBQUVXQUFBQUFBQUFvRklBQUtCUkFBQUJGZ0FBQVFBQUFMQlNBQUN3VVFBQUFWWUFBQUFBQUFEZ1VBQUEwRkFBQUFGV0FBQUJBQUFBOEZBQUFNQlFBQUFCVkFBQUFBQUFBQUJSQUFEQVVBQUFBVlFBQUFFQUFBQVFVUUFBMEZBQUFBRlJBQUFBQUFBQUlGRUFBT0JRQUFBQlVRQUFBUUFBQURCUkFBRHdVQUFBQVVnQUFBQUFBQUJBVVFBQUFGRUFBQUZJQUFBQkFBQUFVRkVBQUJCUkFBQUJPQUFBQUFBQUFHQlJBQUFnVVFBQUFUZ0FBQUVBQUFCd1VRQUFNRkVBQUFFMEFBQUFBQUFBZ0ZFQUFFQlJBQUFCTkFBQUFRQUFBSkJSQUFCUVVRQUFBVEFBQUFBQUFBQ2dVUUFBWUZFQUFBRXdBQUFCQUFBQXNGRUFBSEJSQUFBQktBQUFBQUFBQU1CUkFBQmdVUUFBQVNnQUFBRUFBQURRVVFBQWNGRUFBQUVrQUFBQUFBQUE0RkVBQUlCUkFBQUJKQUFBQVFBQUFQQlJBQUNRVVFBQUFTSUFBQUFBQUFBQVVnQUFvRkVBQUFFaUFBQUJBQUFBRUZJQUFMQlJBQUFCSEFBQUFBQUFBQ0JTQUFEQVVRQUFBUndBQUFFQUFBQXdVZ0FBMEZFQUFBRVlBQUFBQUFBQVFGSUFBT0JSQUFBQkdBQUFBUUFBQUZCU0FBRHdVUUFBQVJZQUFBQUFBQUJnVWdBQUFGSUFBQUVXQUFBQkFBQUFjRklBQUJCU0FBQUJGQUFBQUFBQUFJQlNBQUFnVWdBQUFSUUFBQUVBQUFDUVVnQUFNRklBQUFFU0FBQUFBQUFBb0ZJQUFFQlNBQUFCRWdBQUFRQUFBTEJTQUFCUVVnQUFBUkVBQUFBQUFBREFVZ0FBWUZJQUFBRVJBQUFCQUFBQTBGSUFBSEJTQUFEQkNnQUFBQUFBQU9CU0FBQ0FVZ0FBd1FvQUFBRUFBQUR3VWdBQWtGSUFBTUVKQUFBQUFBQUFBRk1BQUtCU0FBREJDUUFBQVFBQUFCQlRBQUN3VWdBQW9RZ0FBQUFBQUFBZ1V3QUF3RklBQUtFSUFBQUJBQUFBTUZNQUFOQlNBQUFoQlFBQUFBQUFBRUJUQUFEZ1VnQUFJUVVBQUFFQUFBQlFVd0FBOEZJQUFFRUVBQUFBQUFBQVlGTUFBQUJUQUFCQkJBQUFBUUFBQUhCVEFBQVFVd0FBb1FJQUFBQUFBQUNBVXdBQUlGTUFBS0VDQUFBQkFBQUFrRk1BQURCVEFBQWhBZ0FBQUFBQUFLQlRBQUJBVXdBQUlRSUFBQUVBQUFDd1V3QUFVRk1BQUVFQkFBQUFBQUFBd0ZNQUFHQlRBQUJCQVFBQUFRQUFBTkJUQUFCd1V3QUFFUUVBQUFBQUFBRGdVd0FBZ0ZNQUFCRUJBQUFCQUFBQThGTUFBSkJUQUFDRkFBQUFBQUFBQUFCVUFBQ2dVd0FBaFFBQUFBRUFBQUFRVkFBQXNGTUFBRWtBQUFBQUFBQUFJRlFBQU1CVEFBQkpBQUFBQVFBQUFEQlVBQURRVXdBQUpRQUFBQUFBQUFCQVZBQUE0Rk1BQUNVQUFBQUJBQUFBVUZRQUFQQlRBQUFWQUFBQUFBQUFBR0JVQUFBQVZBQUFGUUFBQUFFQUFBQndWQUFBRUZRQUFBa0FBQUFBQUFBQWdGUUFBQ0JVQUFBSkFBQUFBUUFBQUpCVUFBQXdWQUFBQlFBQUFBQUFBQUNnVkFBQVFGUUFBQVVBQUFBQkFBQUFzRlFBQUZCVUFBQUJBQUFBQUFBQUFLQlVBQUJnVkFBQUFRQUFBQUVBQUFDd1ZBQUFjRlFBQUFGV0FBQUFBQUFBd0ZRQUFNQlVBQUFCVmdBQUFRQUFBTkJVQUFEUVZBQUFBQUVEQXdFQ0F3TUZCZ2NIQmdZSEJ3QUJBd01CQWdNREJRWUhCd1lHQndjRkJnY0hCZ1lIQndnSUNBZ0lDQWdJQlFZSEJ3WUdCd2NJQ0FnSUNBZ0lDQUVDQXdNQ0FnTURCZ1lIQndZR0J3Y0JBZ01EQWdJREF3WUdCd2NHQmdjSEJnWUhCd1lHQndjSUNBZ0lDQWdJQ0FZR0J3Y0dCZ2NIQ0FnSUNBZ0lDQWdEQXdRRUF3TUVCQWNIQndjSEJ3Y0hBd01FQkFNREJBUUhCd2NIQndjSEJ3Y0hCd2NIQndjSENBZ0lDQWdJQ0FnSEJ3Y0hCd2NIQndnSUNBZ0lDQWdJQXdNRUJBTURCQVFIQndjSEJ3Y0hCd01EQkFRREF3UUVCd2NIQndjSEJ3Y0hCd2NIQndjSEJ3Z0lDQWdJQ0FnSUJ3Y0hCd2NIQndjSUNBZ0lDQWdJQ0FFQ0F3TUNBZ01EQmdZSEJ3WUdCd2NCQWdNREFnSURBd1lHQndjR0JnY0hCZ1lIQndZR0J3Y0lDQWdJQ0FnSUNBWUdCd2NHQmdjSENBZ0lDQWdJQ0FnQ0FnTURBZ0lEQXdZR0J3Y0dCZ2NIQWdJREF3SUNBd01HQmdjSEJnWUhCd1lHQndjR0JnY0hDQWdJQ0FnSUNBZ0dCZ2NIQmdZSEJ3Z0lDQWdJQ0FnSUF3TUVCQU1EQkFRSEJ3Y0hCd2NIQndNREJBUURBd1FFQndjSEJ3Y0hCd2NIQndjSEJ3Y0hCd2dJQ0FnSUNBZ0lCd2NIQndjSEJ3Y0lDQWdJQ0FnSUNBTURCQVFEQXdRRUJ3Y0hCd2NIQndjREF3UUVBd01FQkFjSEJ3Y0hCd2NIQndjSEJ3Y0hCd2NJQ0FnSUNBZ0lDQWNIQndjSEJ3Y0hDQWdJQ0FnSUNBZ0FBUVVHQVFJR0JnTURCd2NEQXdjSEFBRUZCZ0VDQmdZREF3Y0hBd01IQndNREJ3Y0RBd2NIQkFRSEJ3UUVCd2NEQXdjSEF3TUhCd1FFQndjRUJBY0hBUUlHQmdJQ0JnWURBd2NIQXdNSEJ3RUNCZ1lDQWdZR0F3TUhCd01EQndjREF3Y0hBd01IQndRRUJ3Y0VCQWNIQXdNSEJ3TURCd2NFQkFjSEJBUUhCd1VHQ0FnR0JnZ0lCd2NJQ0FjSENBZ0ZCZ2dJQmdZSUNBY0hDQWdIQndnSUJ3Y0lDQWNIQ0FnSEJ3Z0lCd2NJQ0FjSENBZ0hCd2dJQndjSUNBY0hDQWdHQmdnSUJnWUlDQWNIQ0FnSEJ3Z0lCZ1lJQ0FZR0NBZ0hCd2dJQndjSUNBY0hDQWdIQndnSUJ3Y0lDQWNIQ0FnSEJ3Z0lCd2NJQ0FjSENBZ0hCd2dJQVFJR0JnSUNCZ1lEQXdjSEF3TUhCd0VDQmdZQ0FnWUdBd01IQndNREJ3Y0RBd2NIQXdNSEJ3UUVCd2NFQkFjSEF3TUhCd01EQndjRUJBY0hCQVFIQndJQ0JnWUNBZ1lHQXdNSEJ3TURCd2NDQWdZR0FnSUdCZ01EQndjREF3Y0hBd01IQndNREJ3Y0VCQWNIQkFRSEJ3TURCd2NEQXdjSEJBUUhCd1FFQndjR0JnZ0lCZ1lJQ0FjSENBZ0hCd2dJQmdZSUNBWUdDQWdIQndnSUJ3Y0lDQWNIQ0FnSEJ3Z0lCd2NJQ0FjSENBZ0hCd2dJQndjSUNBY0hDQWdIQndnSUJnWUlDQVlHQ0FnSEJ3Z0lCd2NJQ0FZR0NBZ0dCZ2dJQndjSUNBY0hDQWdIQndnSUJ3Y0lDQWNIQ0FnSEJ3Z0lCd2NJQ0FjSENBZ0hCd2dJQndjSUNBQUJBd01CQWdNREJRWUhCd1lHQndjQUFRTURBUUlEQXdVR0J3Y0dCZ2NIQlFZSEJ3WUdCd2NJQ0FnSUNBZ0lDQVVHQndjR0JnY0hDQWdJQ0FnSUNBZ0JBZ01EQWdJREF3WUdCd2NHQmdjSEFRSURBd0lDQXdNR0JnY0hCZ1lIQndZR0J3Y0dCZ2NIQ0FnSUNBZ0lDQWdHQmdjSEJnWUhCd2dJQ0FnSUNBZ0lBd01FQkFNREJBUUhCd2NIQndjSEJ3TURCQVFEQXdRRUJ3Y0hCd2NIQndjSEJ3Y0hCd2NIQndnSUNBZ0lDQWdJQndjSEJ3Y0hCd2NJQ0FnSUNBZ0lDQU1EQkFRREF3UUVCd2NIQndjSEJ3Y0RBd1FFQXdNRUJBY0hCd2NIQndjSEJ3Y0hCd2NIQndjSUNBZ0lDQWdJQ0FjSEJ3Y0hCd2NIQ0FnSUNBZ0lDQWdCQWdNREFnSURBd1lHQndjR0JnY0hBUUlEQXdJQ0F3TUdCZ2NIQmdZSEJ3WUdCd2NHQmdjSENBZ0lDQWdJQ0FnR0JnY0hCZ1lIQndnSUNBZ0lDQWdJQWdJREF3SUNBd01HQmdjSEJnWUhCd0lDQXdNQ0FnTURCZ1lIQndZR0J3Y0dCZ2NIQmdZSEJ3Z0lDQWdJQ0FnSUJnWUhCd1lHQndjSUNBZ0lDQWdJQ0FNREJBUURBd1FFQndjSEJ3Y0hCd2NEQXdRRUF3TUVCQWNIQndjSEJ3Y0hCd2NIQndjSEJ3Y0lDQWdJQ0FnSUNBY0hCd2NIQndjSENBZ0lDQWdJQ0FnREF3UUVBd01FQkFjSEJ3Y0hCd2NIQXdNRUJBTURCQVFIQndjSEJ3Y0hCd2NIQndjSEJ3Y0hDQWdJQ0FnSUNBZ0hCd2NIQndjSEJ3Z0lDQWdJQ0FnSUFBTUJCQU1HQkFjQkJBSUZCQWNGQndBREFRUURCZ1FIQVFRQ0JRUUhCUWNCQkFJRkJBY0ZCd0lGQWdVRkJ3VUhBUVFDQlFRSEJRY0NCUUlGQlFjRkJ3TUdCQWNHQ0FjSUJBY0ZCd2NJQndnREJnUUhCZ2dIQ0FRSEJRY0hDQWNJQkFjRkJ3Y0lCd2dGQndVSEJ3Z0hDQVFIQlFjSENBY0lCUWNGQndjSUJ3Z0JCQUlGQkFjRkJ3SUZBZ1VGQndVSEFRUUNCUVFIQlFjQ0JRSUZCUWNGQndJRkFnVUZCd1VIQWdVQ0JRVUhCUWNDQlFJRkJRY0ZCd0lGQWdVRkJ3VUhCQWNGQndjSUJ3Z0ZCd1VIQndnSENBUUhCUWNIQ0FjSUJRY0ZCd2NJQndnRkJ3VUhCd2dIQ0FVSEJRY0hDQWNJQlFjRkJ3Y0lCd2dGQndVSEJ3Z0hDQU1HQkFjR0NBY0lCQWNGQndjSUJ3Z0RCZ1FIQmdnSENBUUhCUWNIQ0FjSUJBY0ZCd2NJQndnRkJ3VUhCd2dIQ0FRSEJRY0hDQWNJQlFjRkJ3Y0lCd2dHQ0FjSUNBZ0lDQWNJQndnSUNBZ0lCZ2dIQ0FnSUNBZ0hDQWNJQ0FnSUNBY0lCd2dJQ0FnSUJ3Z0hDQWdJQ0FnSENBY0lDQWdJQ0FjSUJ3Z0lDQWdJQkFjRkJ3Y0lCd2dGQndVSEJ3Z0hDQVFIQlFjSENBY0lCUWNGQndjSUJ3Z0ZCd1VIQndnSENBVUhCUWNIQ0FjSUJRY0ZCd2NJQndnRkJ3VUhCd2dIQ0FjSUJ3Z0lDQWdJQndnSENBZ0lDQWdIQ0FjSUNBZ0lDQWNJQndnSUNBZ0lCd2dIQ0FnSUNBZ0hDQWNJQ0FnSUNBY0lCd2dJQ0FnSUJ3Z0hDQWdJQ0FnSkNRb0tDUWtLQ2d3TURRc01EQTBMQ1FrS0Nna0pDZ29NREFzTkRBd0xEUXdNRFEwTURBc0xEQWtOQ2drTUNnc01EQXNMREF3TkRRd0pDd29KREFvTkNRa0tDZ2tKQ2dvTURBMExEQXdOQ3drSkNnb0pDUW9LREF3TERRd01DdzBNREEwTkRBd0xDd3dKRFFvSkRBb0xEQXdMQ3d3TURRME1DUXNLQ1F3S0RRb0tDZ29LQ2dvS0RRc05DdzBMRFFzS0Nna0pDZ29KQ1EwTERBd05Dd3dNRFEwTkRRc0xDd3NOQ2cwS0Nnc0tDdzBOREF3TEN3d01EUW9NQ1FvTENRd0tDZ2tKQ2dvSkNRc05EQXdMRFF3TUNnb0tDZ29LQ2dvTERRc05DdzBMRFFzTERBd05EUXdNQ3dvTUNRb05DUXdMQ3dzTERRME5EUXNLQ3dvS0RRb05BRUhwdXdFTE53RUFBUUFCQUFFQUFBRUJBQUFCQVFBQkFBRUFBUUFCQUFBQUFBRUJBUUVBQUFBQUFBRUFBUUFBQUFBQkFRRUJBQUFBQVFBQkFRRUFRYW04QVFzM0FRQUJBQUVBQVFBQUFRRUFBQUVCQUFFQUFRQUJBQUVBQUFBQUFRRUJBUUFBQUFBQUFRQUJBQUFBQUFFQkFRRUFBQUFCQUFFQkFRQkI2YndCQ3djQkFBRUFBUUFCQUVINXZBRUxsUUlCQUFFQUFRQUJBQUFBQUFFQkFRRUFBQUFBQUFFQUFRQUFBQUFCQVFFQkFBQUFBQUFCQUFFQkFRQUFBUUVBQUFBQkFBRUFBUUFCQVFFQkFRRUJBUUVBQVFBQkFBRUFBUUFBQUFBQkFRRUJBQUVBQUFFQkFBRUFBQUFBQVFFQkFRQUJBQUVCQVFFQkFnQUFBQVFBQUFBRUFBQUFDQUFBQUpEL0FBQU1BQUFBR0FBQUFGTC9BQUFVQUFBQUdRQUFBRlAvQUFBVUFBQUFHZ0FBQUY3L0FBQVVBQUFBR3dBQUFGei9BQUFVQUFBQUhBQUFBRjMvQUFBVUFBQUFIUUFBQUYvL0FBQVVBQUFBSGdBQUFGSC9BQUFDQUFBQUh3QUFBRlgvQUFBRUFBQUFJQUFBQUZmL0FBQUVBQUFBSVFBQUFGai9BQUFRQUFBQUlnQUFBR0QvQUFBRUFBQUFJd0FBQUdIL0FBQVFBQUFBSkFBQUFKSC9BRUdZdndFTFpXUC9BQUFFQUFBQUpRQUFBR1QvQUFBVUFBQUFKZ0FBQUhUL0FBQVVBQUFBSndBQUFIai9BQUFFQUFBQUtBQUFBRkQvQUFBRUFBQUFLUUFBQUZuL0FBQUVBQUFBS2dBQUFIWC9BQUFVQUFBQUt3QUFBSGYvQUFBVUFBQUFMQUFBQUFBQUFBQVVBRUdRd0FFTE5TMEFBQUF1QUFBQUx3QUFBREFBQUFBeEFBQUFNZ0FBQURNQUFBQTBBQUFBSUNCUWFqWUFBQUJ3ZVhSbU53QUFBR2d5Y0dvNEFFSFF3QUVMTW5Ka2FHazVBQUFBY214dll6b0FBQUJqWTNCaU93QUFBSEpzWTNBOEFBQUFjR0Z0WXowQUFBQm1aV1JqUGdBQUFIaGlBRUdRd1FFTFFSa0FDd0FaR1JrQUFBQUFCUUFBQUFBQUFBa0FBQUFBQ3dBQUFBQUFBQUFBR1FBS0Noa1pHUU1LQndBQkFBa0xHQUFBQ1FZTEFBQUxBQVlaQUFBQUdSa1pBRUhod1FFTElRNEFBQUFBQUFBQUFCa0FDdzBaR1JrQURRQUFBZ0FKRGdBQUFBa0FEZ0FBRGdCQm04SUJDd0VNQUVHbndnRUxGUk1BQUFBQUV3QUFBQUFKREFBQUFBQUFEQUFBREFCQjFjSUJDd0VRQUVIaHdnRUxGUThBQUFBRUR3QUFBQUFKRUFBQUFBQUFFQUFBRUFCQmo4TUJDd0VTQUVHYnd3RUxIaEVBQUFBQUVRQUFBQUFKRWdBQUFBQUFFZ0FBRWdBQUdnQUFBQm9hR2dCQjBzTUJDdzRhQUFBQUdob2FBQUFBQUFBQUNRQkJnOFFCQ3dFVUFFR1B4QUVMRlJjQUFBQUFGd0FBQUFBSkZBQUFBQUFBRkFBQUZBQkJ2Y1FCQ3dFV0FFSEp4QUVMSnhVQUFBQUFGUUFBQUFBSkZnQUFBQUFBRmdBQUZnQUFNREV5TXpRMU5qYzRPVUZDUTBSRlJnQkI4Y1FCQ3doc0FRQUFBQUFBQlFCQmhNVUJDd0ZwQUVHY3hRRUxEbW9BQUFCckFBQUErR2NBQUFBRUFFRzB4UUVMQVFFQVFjVEZBUXNGLy8vLy93bz0iKTtyZXR1cm4gcmVjZWl2ZUluc3RhbmNlKGluc3RhbnRpYXRlU3luYyh1LGUpWzBdKX0oKTtHLmosYS5fbWFsbG9jPUcuayxhLl9mcmVlPUcubCxhLl9qcDJfZGVjb2RlPUcubixHLl9lbXNjcmlwdGVuX3N0YWNrX3Jlc3RvcmUsRy5fZW1zY3JpcHRlbl9zdGFja19hbGxvYyxHLmVtc2NyaXB0ZW5fc3RhY2tfZ2V0X2N1cnJlbnQ7dz1mdW5jdGlvbiBydW5DYWxsZXIoKXtEfHxydW4oKTtEfHwodz1ydW5DYWxsZXIpfTtmdW5jdGlvbiBydW4oKXtpZighKG0+MCkpeyFmdW5jdGlvbiBwcmVSdW4oKXtpZihhLnByZVJ1bil7ImZ1bmN0aW9uIj09dHlwZW9mIGEucHJlUnVuJiYoYS5wcmVSdW49W2EucHJlUnVuXSk7Zm9yKDthLnByZVJ1bi5sZW5ndGg7KWU9YS5wcmVSdW4uc2hpZnQoKSxkLnVuc2hpZnQoZSl9dmFyIGU7Y2FsbFJ1bnRpbWVDYWxsYmFja3MoZCl9KCk7aWYoIShtPjApKWlmKGEuc2V0U3RhdHVzKXthLnNldFN0YXR1cygiUnVubmluZy4uLiIpO3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7c2V0VGltZW91dCgoZnVuY3Rpb24oKXthLnNldFN0YXR1cygiIil9KSwxKTtkb1J1bigpfSksMSl9ZWxzZSBkb1J1bigpfWZ1bmN0aW9uIGRvUnVuKCl7aWYoIUQpe0Q9ITA7YS5jYWxsZWRSdW49ITA7IWZ1bmN0aW9uIGluaXRSdW50aW1lKCl7Y2FsbFJ1bnRpbWVDYWxsYmFja3MoZil9KCk7dChhKTthLm9uUnVudGltZUluaXRpYWxpemVkJiZhLm9uUnVudGltZUluaXRpYWxpemVkKCk7IWZ1bmN0aW9uIHBvc3RSdW4oKXtpZihhLnBvc3RSdW4peyJmdW5jdGlvbiI9PXR5cGVvZiBhLnBvc3RSdW4mJihhLnBvc3RSdW49W2EucG9zdFJ1bl0pO2Zvcig7YS5wb3N0UnVuLmxlbmd0aDspZT1hLnBvc3RSdW4uc2hpZnQoKSxwLnVuc2hpZnQoZSl9dmFyIGU7Y2FsbFJ1bnRpbWVDYWxsYmFja3MocCl9KCl9fX1pZihhLnByZUluaXQpeyJmdW5jdGlvbiI9PXR5cGVvZiBhLnByZUluaXQmJihhLnByZUluaXQ9W2EucHJlSW5pdF0pO2Zvcig7YS5wcmVJbml0Lmxlbmd0aD4wOylhLnByZUluaXQucG9wKCkoKX1ydW4oKTtyZXR1cm4gYX0pO2NvbnN0IElpPWdpO2NsYXNzIEpweEVycm9yIGV4dGVuZHMgcnR7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwiSnB4RXJyb3IiKX19Y2xhc3MgSnB4SW1hZ2V7c3RhdGljI3k9bnVsbDtzdGF0aWMgZGVjb2RlKGUsdD0hMSl7dGhpcy4jeXx8PUlpKHt3YXJufSk7Y29uc3QgaT10aGlzLiN5LmRlY29kZShlLHQpO2lmKCJzdHJpbmciPT10eXBlb2YgaSl0aHJvdyBuZXcgSnB4RXJyb3IoaSk7cmV0dXJuIGl9c3RhdGljIGNsZWFudXAoKXt0aGlzLiN5PW51bGx9c3RhdGljIHBhcnNlSW1hZ2VQcm9wZXJ0aWVzKGUpe2xldCB0PWUuZ2V0Qnl0ZSgpO2Zvcig7dD49MDspe2NvbnN0IGk9dDt0PWUuZ2V0Qnl0ZSgpO2lmKDY1MzYxPT09KGk8PDh8dCkpe2Uuc2tpcCg0KTtjb25zdCB0PWUuZ2V0SW50MzIoKT4+PjAsaT1lLmdldEludDMyKCk+Pj4wLGE9ZS5nZXRJbnQzMigpPj4+MCxzPWUuZ2V0SW50MzIoKT4+PjA7ZS5za2lwKDE2KTtyZXR1cm57d2lkdGg6dC1hLGhlaWdodDppLXMsYml0c1BlckNvbXBvbmVudDo4LGNvbXBvbmVudHNDb3VudDplLmdldFVpbnQxNigpfX19dGhyb3cgbmV3IEpweEVycm9yKCJObyBzaXplIG1hcmtlciBmb3VuZCBpbiBKUFggc3RyZWFtIil9fWNsYXNzIEpweFN0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIodCk7dGhpcy5zdHJlYW09ZTt0aGlzLmRpY3Q9ZS5kaWN0O3RoaXMubWF5YmVMZW5ndGg9dDt0aGlzLnBhcmFtcz1pfWdldCBieXRlcygpe3JldHVybiBzaGFkb3codGhpcywiYnl0ZXMiLHRoaXMuc3RyZWFtLmdldEJ5dGVzKHRoaXMubWF5YmVMZW5ndGgpKX1lbnN1cmVCdWZmZXIoZSl7fXJlYWRCbG9jayhlKXtpZighdGhpcy5lb2Ype3RoaXMuYnVmZmVyPUpweEltYWdlLmRlY29kZSh0aGlzLmJ5dGVzLGUpO3RoaXMuYnVmZmVyTGVuZ3RoPXRoaXMuYnVmZmVyLmxlbmd0aDt0aGlzLmVvZj0hMH19fWNsYXNzIExaV1N0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIodCk7dGhpcy5zdHI9ZTt0aGlzLmRpY3Q9ZS5kaWN0O3RoaXMuY2FjaGVkRGF0YT0wO3RoaXMuYml0c0NhY2hlZD0wO2NvbnN0IGE9NDA5NixzPXtlYXJseUNoYW5nZTppLGNvZGVMZW5ndGg6OSxuZXh0Q29kZToyNTgsZGljdGlvbmFyeVZhbHVlczpuZXcgVWludDhBcnJheShhKSxkaWN0aW9uYXJ5TGVuZ3RoczpuZXcgVWludDE2QXJyYXkoYSksZGljdGlvbmFyeVByZXZDb2RlczpuZXcgVWludDE2QXJyYXkoYSksY3VycmVudFNlcXVlbmNlOm5ldyBVaW50OEFycmF5KGEpLGN1cnJlbnRTZXF1ZW5jZUxlbmd0aDowfTtmb3IobGV0IGU9MDtlPDI1NjsrK2Upe3MuZGljdGlvbmFyeVZhbHVlc1tlXT1lO3MuZGljdGlvbmFyeUxlbmd0aHNbZV09MX10aGlzLmx6d1N0YXRlPXN9cmVhZEJpdHMoZSl7bGV0IHQ9dGhpcy5iaXRzQ2FjaGVkLGk9dGhpcy5jYWNoZWREYXRhO2Zvcig7dDxlOyl7Y29uc3QgZT10aGlzLnN0ci5nZXRCeXRlKCk7aWYoLTE9PT1lKXt0aGlzLmVvZj0hMDtyZXR1cm4gbnVsbH1pPWk8PDh8ZTt0Kz04fXRoaXMuYml0c0NhY2hlZD10LT1lO3RoaXMuY2FjaGVkRGF0YT1pO3RoaXMubGFzdENvZGU9bnVsbDtyZXR1cm4gaT4+PnQmKDE8PGUpLTF9cmVhZEJsb2NrKCl7bGV0IGUsdCxpLGE9MTAyNDtjb25zdCBzPXRoaXMubHp3U3RhdGU7aWYoIXMpcmV0dXJuO2NvbnN0IHI9cy5lYXJseUNoYW5nZTtsZXQgbj1zLm5leHRDb2RlO2NvbnN0IG89cy5kaWN0aW9uYXJ5VmFsdWVzLGc9cy5kaWN0aW9uYXJ5TGVuZ3RocyxjPXMuZGljdGlvbmFyeVByZXZDb2RlcztsZXQgaD1zLmNvZGVMZW5ndGgsbD1zLnByZXZDb2RlO2NvbnN0IEM9cy5jdXJyZW50U2VxdWVuY2U7bGV0IFE9cy5jdXJyZW50U2VxdWVuY2VMZW5ndGgsRT0wLHU9dGhpcy5idWZmZXJMZW5ndGgsZD10aGlzLmVuc3VyZUJ1ZmZlcih0aGlzLmJ1ZmZlckxlbmd0aCthKTtmb3IoZT0wO2U8NTEyO2UrKyl7Y29uc3QgZT10aGlzLnJlYWRCaXRzKGgpLHM9UT4wO2lmKGU8MjU2KXtDWzBdPWU7UT0xfWVsc2V7aWYoIShlPj0yNTgpKXtpZigyNTY9PT1lKXtoPTk7bj0yNTg7UT0wO2NvbnRpbnVlfXRoaXMuZW9mPSEwO2RlbGV0ZSB0aGlzLmx6d1N0YXRlO2JyZWFrfWlmKGU8bil7UT1nW2VdO2Zvcih0PVEtMSxpPWU7dD49MDt0LS0pe0NbdF09b1tpXTtpPWNbaV19fWVsc2UgQ1tRKytdPUNbMF19aWYocyl7Y1tuXT1sO2dbbl09Z1tsXSsxO29bbl09Q1swXTtuKys7aD1uK3ImbityLTE/aDowfE1hdGgubWluKE1hdGgubG9nKG4rcikvLjY5MzE0NzE4MDU1OTk0NTMrMSwxMil9bD1lO0UrPVE7aWYoYTxFKXtkb3thKz01MTJ9d2hpbGUoYTxFKTtkPXRoaXMuZW5zdXJlQnVmZmVyKHRoaXMuYnVmZmVyTGVuZ3RoK2EpfWZvcih0PTA7dDxRO3QrKylkW3UrK109Q1t0XX1zLm5leHRDb2RlPW47cy5jb2RlTGVuZ3RoPWg7cy5wcmV2Q29kZT1sO3MuY3VycmVudFNlcXVlbmNlTGVuZ3RoPVE7dGhpcy5idWZmZXJMZW5ndGg9dX19Y2xhc3MgUHJlZGljdG9yU3RyZWFtIGV4dGVuZHMgRGVjb2RlU3RyZWFte2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcih0KTtpZighKGkgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm4gZTtjb25zdCBhPXRoaXMucHJlZGljdG9yPWkuZ2V0KCJQcmVkaWN0b3IiKXx8MTtpZihhPD0xKXJldHVybiBlO2lmKDIhPT1hJiYoYTwxMHx8YT4xNSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBVbnN1cHBvcnRlZCBwcmVkaWN0b3I6ICR7YX1gKTt0aGlzLnJlYWRCbG9jaz0yPT09YT90aGlzLnJlYWRCbG9ja1RpZmY6dGhpcy5yZWFkQmxvY2tQbmc7dGhpcy5zdHI9ZTt0aGlzLmRpY3Q9ZS5kaWN0O2NvbnN0IHM9dGhpcy5jb2xvcnM9aS5nZXQoIkNvbG9ycyIpfHwxLHI9dGhpcy5iaXRzPWkuZ2V0KCJCUEMiLCJCaXRzUGVyQ29tcG9uZW50Iil8fDgsbj10aGlzLmNvbHVtbnM9aS5nZXQoIkNvbHVtbnMiKXx8MTt0aGlzLnBpeEJ5dGVzPXMqcis3Pj4zO3RoaXMucm93Qnl0ZXM9bipzKnIrNz4+MztyZXR1cm4gdGhpc31yZWFkQmxvY2tUaWZmKCl7Y29uc3QgZT10aGlzLnJvd0J5dGVzLHQ9dGhpcy5idWZmZXJMZW5ndGgsaT10aGlzLmVuc3VyZUJ1ZmZlcih0K2UpLGE9dGhpcy5iaXRzLHM9dGhpcy5jb2xvcnMscj10aGlzLnN0ci5nZXRCeXRlcyhlKTt0aGlzLmVvZj0hci5sZW5ndGg7aWYodGhpcy5lb2YpcmV0dXJuO2xldCBuLG89MCxnPTAsYz0wLGg9MCxsPXQ7aWYoMT09PWEmJjE9PT1zKWZvcihuPTA7bjxlOysrbil7bGV0IGU9cltuXV5vO2VePWU+PjE7ZV49ZT4+MjtlXj1lPj40O289KDEmZSk8PDc7aVtsKytdPWV9ZWxzZSBpZig4PT09YSl7Zm9yKG49MDtuPHM7KytuKWlbbCsrXT1yW25dO2Zvcig7bjxlOysrbil7aVtsXT1pW2wtc10rcltuXTtsKyt9fWVsc2UgaWYoMTY9PT1hKXtjb25zdCB0PTIqcztmb3Iobj0wO248dDsrK24paVtsKytdPXJbbl07Zm9yKDtuPGU7bis9Mil7Y29uc3QgZT0oKDI1NSZyW25dKTw8OCkrKDI1NSZyW24rMV0pKygoMjU1JmlbbC10XSk8PDgpKygyNTUmaVtsLXQrMV0pO2lbbCsrXT1lPj44JjI1NTtpW2wrK109MjU1JmV9fWVsc2V7Y29uc3QgZT1uZXcgVWludDhBcnJheShzKzEpLGw9KDE8PGEpLTE7bGV0IEM9MCxRPXQ7Y29uc3QgRT10aGlzLmNvbHVtbnM7Zm9yKG49MDtuPEU7KytuKWZvcihsZXQgdD0wO3Q8czsrK3Qpe2lmKGM8YSl7bz1vPDw4fDI1NSZyW0MrK107Yys9OH1lW3RdPWVbdF0rKG8+PmMtYSkmbDtjLT1hO2c9Zzw8YXxlW3RdO2grPWE7aWYoaD49OCl7aVtRKytdPWc+PmgtOCYyNTU7aC09OH19aD4wJiYoaVtRKytdPShnPDw4LWgpKyhvJigxPDw4LWgpLTEpKX10aGlzLmJ1ZmZlckxlbmd0aCs9ZX1yZWFkQmxvY2tQbmcoKXtjb25zdCBlPXRoaXMucm93Qnl0ZXMsdD10aGlzLnBpeEJ5dGVzLGk9dGhpcy5zdHIuZ2V0Qnl0ZSgpLGE9dGhpcy5zdHIuZ2V0Qnl0ZXMoZSk7dGhpcy5lb2Y9IWEubGVuZ3RoO2lmKHRoaXMuZW9mKXJldHVybjtjb25zdCBzPXRoaXMuYnVmZmVyTGVuZ3RoLHI9dGhpcy5lbnN1cmVCdWZmZXIocytlKTtsZXQgbj1yLnN1YmFycmF5KHMtZSxzKTswPT09bi5sZW5ndGgmJihuPW5ldyBVaW50OEFycmF5KGUpKTtsZXQgbyxnLGMsaD1zO3N3aXRjaChpKXtjYXNlIDA6Zm9yKG89MDtvPGU7KytvKXJbaCsrXT1hW29dO2JyZWFrO2Nhc2UgMTpmb3Iobz0wO288dDsrK28pcltoKytdPWFbb107Zm9yKDtvPGU7KytvKXtyW2hdPXJbaC10XSthW29dJjI1NTtoKyt9YnJlYWs7Y2FzZSAyOmZvcihvPTA7bzxlOysrbylyW2grK109bltvXSthW29dJjI1NTticmVhaztjYXNlIDM6Zm9yKG89MDtvPHQ7KytvKXJbaCsrXT0obltvXT4+MSkrYVtvXTtmb3IoO288ZTsrK28pe3JbaF09KG5bb10rcltoLXRdPj4xKSthW29dJjI1NTtoKyt9YnJlYWs7Y2FzZSA0OmZvcihvPTA7bzx0Oysrbyl7Zz1uW29dO2M9YVtvXTtyW2grK109ZytjfWZvcig7bzxlOysrbyl7Zz1uW29dO2NvbnN0IGU9bltvLXRdLGk9cltoLXRdLHM9aStnLWU7bGV0IGw9cy1pO2w8MCYmKGw9LWwpO2xldCBDPXMtZztDPDAmJihDPS1DKTtsZXQgUT1zLWU7UTwwJiYoUT0tUSk7Yz1hW29dO3JbaCsrXT1sPD1DJiZsPD1RP2krYzpDPD1RP2crYzplK2N9YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYFVuc3VwcG9ydGVkIHByZWRpY3RvcjogJHtpfWApfXRoaXMuYnVmZmVyTGVuZ3RoKz1lfX1jbGFzcyBSdW5MZW5ndGhTdHJlYW0gZXh0ZW5kcyBEZWNvZGVTdHJlYW17Y29uc3RydWN0b3IoZSx0KXtzdXBlcih0KTt0aGlzLnN0cj1lO3RoaXMuZGljdD1lLmRpY3R9cmVhZEJsb2NrKCl7Y29uc3QgZT10aGlzLnN0ci5nZXRCeXRlcygyKTtpZighZXx8ZS5sZW5ndGg8Mnx8MTI4PT09ZVswXSl7dGhpcy5lb2Y9ITA7cmV0dXJufWxldCB0LGk9dGhpcy5idWZmZXJMZW5ndGgsYT1lWzBdO2lmKGE8MTI4KXt0PXRoaXMuZW5zdXJlQnVmZmVyKGkrYSsxKTt0W2krK109ZVsxXTtpZihhPjApe2NvbnN0IGU9dGhpcy5zdHIuZ2V0Qnl0ZXMoYSk7dC5zZXQoZSxpKTtpKz1hfX1lbHNle2E9MjU3LWE7Y29uc3Qgcz1lWzFdO3Q9dGhpcy5lbnN1cmVCdWZmZXIoaSthKzEpO2ZvcihsZXQgZT0wO2U8YTtlKyspdFtpKytdPXN9dGhpcy5idWZmZXJMZW5ndGg9aX19Y2xhc3MgUGFyc2Vye2NvbnN0cnVjdG9yKHtsZXhlcjplLHhyZWY6dCxhbGxvd1N0cmVhbXM6aT0hMSxyZWNvdmVyeU1vZGU6YT0hMX0pe3RoaXMubGV4ZXI9ZTt0aGlzLnhyZWY9dDt0aGlzLmFsbG93U3RyZWFtcz1pO3RoaXMucmVjb3ZlcnlNb2RlPWE7dGhpcy5pbWFnZUNhY2hlPU9iamVjdC5jcmVhdGUobnVsbCk7dGhpcy5faW1hZ2VJZD0wO3RoaXMucmVmaWxsKCl9cmVmaWxsKCl7dGhpcy5idWYxPXRoaXMubGV4ZXIuZ2V0T2JqKCk7dGhpcy5idWYyPXRoaXMubGV4ZXIuZ2V0T2JqKCl9c2hpZnQoKXtpZih0aGlzLmJ1ZjIgaW5zdGFuY2VvZiBDbWQmJiJJRCI9PT10aGlzLmJ1ZjIuY21kKXt0aGlzLmJ1ZjE9dGhpcy5idWYyO3RoaXMuYnVmMj1udWxsfWVsc2V7dGhpcy5idWYxPXRoaXMuYnVmMjt0aGlzLmJ1ZjI9dGhpcy5sZXhlci5nZXRPYmooKX19dHJ5U2hpZnQoKXt0cnl7dGhpcy5zaGlmdCgpO3JldHVybiEwfWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiBNaXNzaW5nRGF0YUV4Y2VwdGlvbil0aHJvdyBlO3JldHVybiExfX1nZXRPYmooZT1udWxsKXtjb25zdCB0PXRoaXMuYnVmMTt0aGlzLnNoaWZ0KCk7aWYodCBpbnN0YW5jZW9mIENtZClzd2l0Y2godC5jbWQpe2Nhc2UiQkkiOnJldHVybiB0aGlzLm1ha2VJbmxpbmVJbWFnZShlKTtjYXNlIlsiOmNvbnN0IGk9W107Zm9yKDshaXNDbWQodGhpcy5idWYxLCJdIikmJnRoaXMuYnVmMSE9PXB0OylpLnB1c2godGhpcy5nZXRPYmooZSkpO2lmKHRoaXMuYnVmMT09PXB0KXtpZih0aGlzLnJlY292ZXJ5TW9kZSlyZXR1cm4gaTt0aHJvdyBuZXcgUGFyc2VyRU9GRXhjZXB0aW9uKCJFbmQgb2YgZmlsZSBpbnNpZGUgYXJyYXkuIil9dGhpcy5zaGlmdCgpO3JldHVybiBpO2Nhc2UiPDwiOmNvbnN0IGE9bmV3IERpY3QodGhpcy54cmVmKTtmb3IoOyFpc0NtZCh0aGlzLmJ1ZjEsIj4+IikmJnRoaXMuYnVmMSE9PXB0Oyl7aWYoISh0aGlzLmJ1ZjEgaW5zdGFuY2VvZiBOYW1lKSl7aW5mbygiTWFsZm9ybWVkIGRpY3Rpb25hcnk6IGtleSBtdXN0IGJlIGEgbmFtZSBvYmplY3QiKTt0aGlzLnNoaWZ0KCk7Y29udGludWV9Y29uc3QgdD10aGlzLmJ1ZjEubmFtZTt0aGlzLnNoaWZ0KCk7aWYodGhpcy5idWYxPT09cHQpYnJlYWs7YS5zZXQodCx0aGlzLmdldE9iaihlKSl9aWYodGhpcy5idWYxPT09cHQpe2lmKHRoaXMucmVjb3ZlcnlNb2RlKXJldHVybiBhO3Rocm93IG5ldyBQYXJzZXJFT0ZFeGNlcHRpb24oIkVuZCBvZiBmaWxlIGluc2lkZSBkaWN0aW9uYXJ5LiIpfWlmKGlzQ21kKHRoaXMuYnVmMiwic3RyZWFtIikpcmV0dXJuIHRoaXMuYWxsb3dTdHJlYW1zP3RoaXMubWFrZVN0cmVhbShhLGUpOmE7dGhpcy5zaGlmdCgpO3JldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHR9aWYoTnVtYmVyLmlzSW50ZWdlcih0KSl7aWYoTnVtYmVyLmlzSW50ZWdlcih0aGlzLmJ1ZjEpJiZpc0NtZCh0aGlzLmJ1ZjIsIlIiKSl7Y29uc3QgZT1SZWYuZ2V0KHQsdGhpcy5idWYxKTt0aGlzLnNoaWZ0KCk7dGhpcy5zaGlmdCgpO3JldHVybiBlfXJldHVybiB0fXJldHVybiJzdHJpbmciPT10eXBlb2YgdCYmZT9lLmRlY3J5cHRTdHJpbmcodCk6dH1maW5kRGVmYXVsdElubGluZVN0cmVhbUVuZChlKXtjb25zdHtrbm93bkNvbW1hbmRzOnR9PXRoaXMubGV4ZXIsaT1lLnBvcztsZXQgYSxzLHI9MDtmb3IoOy0xIT09KGE9ZS5nZXRCeXRlKCkpOylpZigwPT09cilyPTY5PT09YT8xOjA7ZWxzZSBpZigxPT09cilyPTczPT09YT8yOjA7ZWxzZSBpZigzMj09PWF8fDEwPT09YXx8MTM9PT1hKXtzPWUucG9zO2NvbnN0IGk9ZS5wZWVrQnl0ZXMoMTUpLG49aS5sZW5ndGg7aWYoMD09PW4pYnJlYWs7Zm9yKGxldCBlPTA7ZTxuO2UrKyl7YT1pW2VdO2lmKCgwIT09YXx8MD09PWlbZSsxXSkmJigxMCE9PWEmJjEzIT09YSYmKGE8MzJ8fGE+MTI3KSkpe3I9MDticmVha319aWYoMiE9PXIpY29udGludWU7aWYoIXQpe3dhcm4oImZpbmREZWZhdWx0SW5saW5lU3RyZWFtRW5kIC0gYGxleGVyLmtub3duQ29tbWFuZHNgIGlzIHVuZGVmaW5lZC4iKTtjb250aW51ZX1jb25zdCBvPW5ldyBMZXhlcihuZXcgU3RyZWFtKGkuc2xpY2UoKSksdCk7by5faGV4U3RyaW5nV2Fybj0oKT0+e307bGV0IGc9MDtmb3IoOzspe2NvbnN0IGU9by5nZXRPYmooKTtpZihlPT09cHQpe3I9MDticmVha31pZihlIGluc3RhbmNlb2YgQ21kKXtjb25zdCBpPXRbZS5jbWRdO2lmKCFpKXtyPTA7YnJlYWt9aWYoaS52YXJpYWJsZUFyZ3M/Zzw9aS5udW1BcmdzOmc9PT1pLm51bUFyZ3MpYnJlYWs7Zz0wfWVsc2UgZysrfWlmKDI9PT1yKWJyZWFrfWVsc2Ugcj0wO2lmKC0xPT09YSl7d2FybigiZmluZERlZmF1bHRJbmxpbmVTdHJlYW1FbmQ6IFJlYWNoZWQgdGhlIGVuZCBvZiB0aGUgc3RyZWFtIHdpdGhvdXQgZmluZGluZyBhIHZhbGlkIEVJIG1hcmtlciIpO2lmKHMpe3dhcm4oJy4uLiB0cnlpbmcgdG8gcmVjb3ZlciBieSB1c2luZyB0aGUgbGFzdCAiRUkiIG9jY3VycmVuY2UuJyk7ZS5za2lwKC0oZS5wb3MtcykpfX1sZXQgbj00O2Uuc2tpcCgtbik7YT1lLnBlZWtCeXRlKCk7ZS5za2lwKG4pO2lzV2hpdGVTcGFjZShhKXx8bi0tO3JldHVybiBlLnBvcy1uLWl9ZmluZERDVERlY29kZUlubGluZVN0cmVhbUVuZChlKXtjb25zdCB0PWUucG9zO2xldCBpLGEscz0hMTtmb3IoOy0xIT09KGk9ZS5nZXRCeXRlKCkpOylpZigyNTU9PT1pKXtzd2l0Y2goZS5nZXRCeXRlKCkpe2Nhc2UgMDpicmVhaztjYXNlIDI1NTplLnNraXAoLTEpO2JyZWFrO2Nhc2UgMjE3OnM9ITA7YnJlYWs7Y2FzZSAxOTI6Y2FzZSAxOTM6Y2FzZSAxOTQ6Y2FzZSAxOTU6Y2FzZSAxOTc6Y2FzZSAxOTg6Y2FzZSAxOTk6Y2FzZSAyMDE6Y2FzZSAyMDI6Y2FzZSAyMDM6Y2FzZSAyMDU6Y2FzZSAyMDY6Y2FzZSAyMDc6Y2FzZSAxOTY6Y2FzZSAyMDQ6Y2FzZSAyMTg6Y2FzZSAyMTk6Y2FzZSAyMjA6Y2FzZSAyMjE6Y2FzZSAyMjI6Y2FzZSAyMjM6Y2FzZSAyMjQ6Y2FzZSAyMjU6Y2FzZSAyMjY6Y2FzZSAyMjc6Y2FzZSAyMjg6Y2FzZSAyMjk6Y2FzZSAyMzA6Y2FzZSAyMzE6Y2FzZSAyMzI6Y2FzZSAyMzM6Y2FzZSAyMzQ6Y2FzZSAyMzU6Y2FzZSAyMzY6Y2FzZSAyMzc6Y2FzZSAyMzg6Y2FzZSAyMzk6Y2FzZSAyNTQ6YT1lLmdldFVpbnQxNigpO2E+Mj9lLnNraXAoYS0yKTplLnNraXAoLTIpfWlmKHMpYnJlYWt9Y29uc3Qgcj1lLnBvcy10O2lmKC0xPT09aSl7d2FybigiSW5saW5lIERDVERlY29kZSBpbWFnZSBzdHJlYW06IEVPSSBtYXJrZXIgbm90IGZvdW5kLCBzZWFyY2hpbmcgZm9yIC9FSS8gaW5zdGVhZC4iKTtlLnNraXAoLXIpO3JldHVybiB0aGlzLmZpbmREZWZhdWx0SW5saW5lU3RyZWFtRW5kKGUpfXRoaXMuaW5saW5lU3RyZWFtU2tpcEVJKGUpO3JldHVybiByfWZpbmRBU0NJSTg1RGVjb2RlSW5saW5lU3RyZWFtRW5kKGUpe2NvbnN0IHQ9ZS5wb3M7bGV0IGk7Zm9yKDstMSE9PShpPWUuZ2V0Qnl0ZSgpKTspaWYoMTI2PT09aSl7Y29uc3QgdD1lLnBvcztpPWUucGVla0J5dGUoKTtmb3IoO2lzV2hpdGVTcGFjZShpKTspe2Uuc2tpcCgpO2k9ZS5wZWVrQnl0ZSgpfWlmKDYyPT09aSl7ZS5za2lwKCk7YnJlYWt9aWYoZS5wb3M+dCl7Y29uc3QgdD1lLnBlZWtCeXRlcygyKTtpZig2OT09PXRbMF0mJjczPT09dFsxXSlicmVha319Y29uc3QgYT1lLnBvcy10O2lmKC0xPT09aSl7d2FybigiSW5saW5lIEFTQ0lJODVEZWNvZGUgaW1hZ2Ugc3RyZWFtOiBFT0QgbWFya2VyIG5vdCBmb3VuZCwgc2VhcmNoaW5nIGZvciAvRUkvIGluc3RlYWQuIik7ZS5za2lwKC1hKTtyZXR1cm4gdGhpcy5maW5kRGVmYXVsdElubGluZVN0cmVhbUVuZChlKX10aGlzLmlubGluZVN0cmVhbVNraXBFSShlKTtyZXR1cm4gYX1maW5kQVNDSUlIZXhEZWNvZGVJbmxpbmVTdHJlYW1FbmQoZSl7Y29uc3QgdD1lLnBvcztsZXQgaTtmb3IoOy0xIT09KGk9ZS5nZXRCeXRlKCkpJiY2MiE9PWk7KTtjb25zdCBhPWUucG9zLXQ7aWYoLTE9PT1pKXt3YXJuKCJJbmxpbmUgQVNDSUlIZXhEZWNvZGUgaW1hZ2Ugc3RyZWFtOiBFT0QgbWFya2VyIG5vdCBmb3VuZCwgc2VhcmNoaW5nIGZvciAvRUkvIGluc3RlYWQuIik7ZS5za2lwKC1hKTtyZXR1cm4gdGhpcy5maW5kRGVmYXVsdElubGluZVN0cmVhbUVuZChlKX10aGlzLmlubGluZVN0cmVhbVNraXBFSShlKTtyZXR1cm4gYX1pbmxpbmVTdHJlYW1Ta2lwRUkoZSl7bGV0IHQsaT0wO2Zvcig7LTEhPT0odD1lLmdldEJ5dGUoKSk7KWlmKDA9PT1pKWk9Njk9PT10PzE6MDtlbHNlIGlmKDE9PT1pKWk9NzM9PT10PzI6MDtlbHNlIGlmKDI9PT1pKWJyZWFrfW1ha2VJbmxpbmVJbWFnZShlKXtjb25zdCB0PXRoaXMubGV4ZXIsaT10LnN0cmVhbSxhPU9iamVjdC5jcmVhdGUobnVsbCk7bGV0IHM7Zm9yKDshaXNDbWQodGhpcy5idWYxLCJJRCIpJiZ0aGlzLmJ1ZjEhPT1wdDspe2lmKCEodGhpcy5idWYxIGluc3RhbmNlb2YgTmFtZSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJEaWN0aW9uYXJ5IGtleSBtdXN0IGJlIGEgbmFtZSBvYmplY3QiKTtjb25zdCB0PXRoaXMuYnVmMS5uYW1lO3RoaXMuc2hpZnQoKTtpZih0aGlzLmJ1ZjE9PT1wdClicmVhazthW3RdPXRoaXMuZ2V0T2JqKGUpfS0xIT09dC5iZWdpbklubGluZUltYWdlUG9zJiYocz1pLnBvcy10LmJlZ2luSW5saW5lSW1hZ2VQb3MpO2NvbnN0IHI9dGhpcy54cmVmLmZldGNoSWZSZWYoYS5GfHxhLkZpbHRlcik7bGV0IG47aWYociBpbnN0YW5jZW9mIE5hbWUpbj1yLm5hbWU7ZWxzZSBpZihBcnJheS5pc0FycmF5KHIpKXtjb25zdCBlPXRoaXMueHJlZi5mZXRjaElmUmVmKHJbMF0pO2UgaW5zdGFuY2VvZiBOYW1lJiYobj1lLm5hbWUpfWNvbnN0IG89aS5wb3M7bGV0IGcsYztzd2l0Y2gobil7Y2FzZSJEQ1QiOmNhc2UiRENURGVjb2RlIjpnPXRoaXMuZmluZERDVERlY29kZUlubGluZVN0cmVhbUVuZChpKTticmVhaztjYXNlIkE4NSI6Y2FzZSJBU0NJSTg1RGVjb2RlIjpnPXRoaXMuZmluZEFTQ0lJODVEZWNvZGVJbmxpbmVTdHJlYW1FbmQoaSk7YnJlYWs7Y2FzZSJBSHgiOmNhc2UiQVNDSUlIZXhEZWNvZGUiOmc9dGhpcy5maW5kQVNDSUlIZXhEZWNvZGVJbmxpbmVTdHJlYW1FbmQoaSk7YnJlYWs7ZGVmYXVsdDpnPXRoaXMuZmluZERlZmF1bHRJbmxpbmVTdHJlYW1FbmQoaSl9aWYoZzwxZTMmJnM+MCl7Y29uc3QgZT1pLnBvcztpLnBvcz10LmJlZ2luSW5saW5lSW1hZ2VQb3M7Yz1mdW5jdGlvbiBnZXRJbmxpbmVJbWFnZUNhY2hlS2V5KGUpe2NvbnN0IHQ9W10saT1lLmxlbmd0aDtsZXQgYT0wO2Zvcig7YTxpLTE7KXQucHVzaChlW2ErK108PDh8ZVthKytdKTthPGkmJnQucHVzaChlW2FdKTtyZXR1cm4gaSsiXyIrU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLHQpfShpLmdldEJ5dGVzKHMrZykpO2kucG9zPWU7Y29uc3QgYT10aGlzLmltYWdlQ2FjaGVbY107aWYodm9pZCAwIT09YSl7dGhpcy5idWYyPUNtZC5nZXQoIkVJIik7dGhpcy5zaGlmdCgpO2EucmVzZXQoKTtyZXR1cm4gYX19Y29uc3QgaD1uZXcgRGljdCh0aGlzLnhyZWYpO2Zvcihjb25zdCBlIGluIGEpaC5zZXQoZSxhW2VdKTtsZXQgbD1pLm1ha2VTdWJTdHJlYW0obyxnLGgpO2UmJihsPWUuY3JlYXRlU3RyZWFtKGwsZykpO2w9dGhpcy5maWx0ZXIobCxoLGcpO2wuZGljdD1oO2lmKHZvaWQgMCE9PWMpe2wuY2FjaGVLZXk9ImlubGluZV9pbWdfIisgKyt0aGlzLl9pbWFnZUlkO3RoaXMuaW1hZ2VDYWNoZVtjXT1sfXRoaXMuYnVmMj1DbWQuZ2V0KCJFSSIpO3RoaXMuc2hpZnQoKTtyZXR1cm4gbH1fZmluZFN0cmVhbUxlbmd0aChlLHQpe2NvbnN0e3N0cmVhbTppfT10aGlzLmxleGVyO2kucG9zPWU7Y29uc3QgYT10Lmxlbmd0aDtmb3IoO2kucG9zPGkuZW5kOyl7Y29uc3Qgcz1pLnBlZWtCeXRlcygyMDQ4KSxyPXMubGVuZ3RoLWE7aWYocjw9MClicmVhaztsZXQgbj0wO2Zvcig7bjxyOyl7bGV0IHI9MDtmb3IoO3I8YSYmc1tuK3JdPT09dFtyXTspcisrO2lmKHI+PWEpe2kucG9zKz1uO3JldHVybiBpLnBvcy1lfW4rK31pLnBvcys9cn1yZXR1cm4tMX1tYWtlU3RyZWFtKGUsdCl7Y29uc3QgaT10aGlzLmxleGVyO2xldCBhPWkuc3RyZWFtO2kuc2tpcFRvTmV4dExpbmUoKTtjb25zdCBzPWEucG9zLTE7bGV0IHI9ZS5nZXQoIkxlbmd0aCIpO2lmKCFOdW1iZXIuaXNJbnRlZ2VyKHIpKXtpbmZvKGBCYWQgbGVuZ3RoICIke3ImJnIudG9TdHJpbmcoKX0iIGluIHN0cmVhbS5gKTtyPTB9YS5wb3M9cytyO2kubmV4dENoYXIoKTtpZih0aGlzLnRyeVNoaWZ0KCkmJmlzQ21kKHRoaXMuYnVmMiwiZW5kc3RyZWFtIikpdGhpcy5zaGlmdCgpO2Vsc2V7Y29uc3QgZT1uZXcgVWludDhBcnJheShbMTAxLDExMCwxMDAsMTE1LDExNiwxMTQsMTAxLDk3LDEwOV0pO2xldCB0PXRoaXMuX2ZpbmRTdHJlYW1MZW5ndGgocyxlKTtpZih0PDApe2NvbnN0IGk9MTtmb3IobGV0IHI9MTtyPD1pO3IrKyl7Y29uc3QgaT1lLmxlbmd0aC1yLG49ZS5zbGljZSgwLGkpLG89dGhpcy5fZmluZFN0cmVhbUxlbmd0aChzLG4pO2lmKG8+PTApe2lmKCFpc1doaXRlU3BhY2UoYS5wZWVrQnl0ZXMoaSsxKVtpXSkpYnJlYWs7aW5mbyhgRm91bmQgIiR7Ynl0ZXNUb1N0cmluZyhuKX0iIHdoZW4gc2VhcmNoaW5nIGZvciBlbmRzdHJlYW0gY29tbWFuZC5gKTt0PW87YnJlYWt9fWlmKHQ8MCl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIk1pc3NpbmcgZW5kc3RyZWFtIGNvbW1hbmQuIil9cj10O2kubmV4dENoYXIoKTt0aGlzLnNoaWZ0KCk7dGhpcy5zaGlmdCgpfXRoaXMuc2hpZnQoKTthPWEubWFrZVN1YlN0cmVhbShzLHIsZSk7dCYmKGE9dC5jcmVhdGVTdHJlYW0oYSxyKSk7YT10aGlzLmZpbHRlcihhLGUscik7YS5kaWN0PWU7cmV0dXJuIGF9ZmlsdGVyKGUsdCxpKXtsZXQgYT10LmdldCgiRiIsIkZpbHRlciIpLHM9dC5nZXQoIkRQIiwiRGVjb2RlUGFybXMiKTtpZihhIGluc3RhbmNlb2YgTmFtZSl7QXJyYXkuaXNBcnJheShzKSYmd2FybigiL0RlY29kZVBhcm1zIHNob3VsZCBub3QgYmUgYW4gQXJyYXksIHdoZW4gL0ZpbHRlciBpcyBhIE5hbWUuIik7cmV0dXJuIHRoaXMubWFrZUZpbHRlcihlLGEubmFtZSxpLHMpfWxldCByPWk7aWYoQXJyYXkuaXNBcnJheShhKSl7Y29uc3QgdD1hLGk9cztmb3IobGV0IG49MCxvPXQubGVuZ3RoO248bzsrK24pe2E9dGhpcy54cmVmLmZldGNoSWZSZWYodFtuXSk7aWYoIShhIGluc3RhbmNlb2YgTmFtZSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBCYWQgZmlsdGVyIG5hbWUgIiR7YX0iYCk7cz1udWxsO0FycmF5LmlzQXJyYXkoaSkmJm4gaW4gaSYmKHM9dGhpcy54cmVmLmZldGNoSWZSZWYoaVtuXSkpO2U9dGhpcy5tYWtlRmlsdGVyKGUsYS5uYW1lLHIscyk7cj1udWxsfX1yZXR1cm4gZX1tYWtlRmlsdGVyKGUsdCxpLGEpe2lmKDA9PT1pKXt3YXJuKGBFbXB0eSAiJHt0fSIgc3RyZWFtLmApO3JldHVybiBuZXcgTnVsbFN0cmVhbX10cnl7c3dpdGNoKHQpe2Nhc2UiRmwiOmNhc2UiRmxhdGVEZWNvZGUiOnJldHVybiBhP25ldyBQcmVkaWN0b3JTdHJlYW0obmV3IEZsYXRlU3RyZWFtKGUsaSksaSxhKTpuZXcgRmxhdGVTdHJlYW0oZSxpKTtjYXNlIkxaVyI6Y2FzZSJMWldEZWNvZGUiOmxldCB0PTE7aWYoYSl7YS5oYXMoIkVhcmx5Q2hhbmdlIikmJih0PWEuZ2V0KCJFYXJseUNoYW5nZSIpKTtyZXR1cm4gbmV3IFByZWRpY3RvclN0cmVhbShuZXcgTFpXU3RyZWFtKGUsaSx0KSxpLGEpfXJldHVybiBuZXcgTFpXU3RyZWFtKGUsaSx0KTtjYXNlIkRDVCI6Y2FzZSJEQ1REZWNvZGUiOnJldHVybiBuZXcgSnBlZ1N0cmVhbShlLGksYSk7Y2FzZSJKUFgiOmNhc2UiSlBYRGVjb2RlIjpyZXR1cm4gbmV3IEpweFN0cmVhbShlLGksYSk7Y2FzZSJBODUiOmNhc2UiQVNDSUk4NURlY29kZSI6cmV0dXJuIG5ldyBBc2NpaTg1U3RyZWFtKGUsaSk7Y2FzZSJBSHgiOmNhc2UiQVNDSUlIZXhEZWNvZGUiOnJldHVybiBuZXcgQXNjaWlIZXhTdHJlYW0oZSxpKTtjYXNlIkNDRiI6Y2FzZSJDQ0lUVEZheERlY29kZSI6cmV0dXJuIG5ldyBDQ0lUVEZheFN0cmVhbShlLGksYSk7Y2FzZSJSTCI6Y2FzZSJSdW5MZW5ndGhEZWNvZGUiOnJldHVybiBuZXcgUnVuTGVuZ3RoU3RyZWFtKGUsaSk7Y2FzZSJKQklHMkRlY29kZSI6cmV0dXJuIG5ldyBKYmlnMlN0cmVhbShlLGksYSl9d2FybihgRmlsdGVyICIke3R9IiBpcyBub3Qgc3VwcG9ydGVkLmApO3JldHVybiBlfWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiBNaXNzaW5nRGF0YUV4Y2VwdGlvbil0aHJvdyBlO3dhcm4oYEludmFsaWQgc3RyZWFtOiAiJHtlfSJgKTtyZXR1cm4gbmV3IE51bGxTdHJlYW19fX1jb25zdCBjaT1bMSwwLDAsMCwwLDAsMCwwLDAsMSwxLDAsMSwxLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDEsMCwwLDAsMCwyLDAsMCwyLDIsMCwwLDAsMCwwLDIsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMiwwLDIsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwyLDAsMiwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMiwwLDIsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMF07ZnVuY3Rpb24gdG9IZXhEaWdpdChlKXtyZXR1cm4gZT49NDgmJmU8PTU3PzE1JmU6ZT49NjUmJmU8PTcwfHxlPj05NyYmZTw9MTAyPzkrKDE1JmUpOi0xfWNsYXNzIExleGVye2NvbnN0cnVjdG9yKGUsdD1udWxsKXt0aGlzLnN0cmVhbT1lO3RoaXMubmV4dENoYXIoKTt0aGlzLnN0ckJ1Zj1bXTt0aGlzLmtub3duQ29tbWFuZHM9dDt0aGlzLl9oZXhTdHJpbmdOdW1XYXJuPTA7dGhpcy5iZWdpbklubGluZUltYWdlUG9zPS0xfW5leHRDaGFyKCl7cmV0dXJuIHRoaXMuY3VycmVudENoYXI9dGhpcy5zdHJlYW0uZ2V0Qnl0ZSgpfXBlZWtDaGFyKCl7cmV0dXJuIHRoaXMuc3RyZWFtLnBlZWtCeXRlKCl9Z2V0TnVtYmVyKCl7bGV0IGU9dGhpcy5jdXJyZW50Q2hhcix0PSExLGk9MCxhPTE7aWYoNDU9PT1lKXthPS0xO2U9dGhpcy5uZXh0Q2hhcigpOzQ1PT09ZSYmKGU9dGhpcy5uZXh0Q2hhcigpKX1lbHNlIDQzPT09ZSYmKGU9dGhpcy5uZXh0Q2hhcigpKTtpZigxMD09PWV8fDEzPT09ZSlkb3tlPXRoaXMubmV4dENoYXIoKX13aGlsZSgxMD09PWV8fDEzPT09ZSk7aWYoNDY9PT1lKXtpPTEwO2U9dGhpcy5uZXh0Q2hhcigpfWlmKGU8NDh8fGU+NTcpe2NvbnN0IHQ9YEludmFsaWQgbnVtYmVyOiAke1N0cmluZy5mcm9tQ2hhckNvZGUoZSl9IChjaGFyQ29kZSAke2V9KWA7aWYoaXNXaGl0ZVNwYWNlKGUpfHwtMT09PWUpe2luZm8oYExleGVyLmdldE51bWJlciAtICIke3R9Ii5gKTtyZXR1cm4gMH10aHJvdyBuZXcgRm9ybWF0RXJyb3IodCl9bGV0IHM9ZS00OCxyPTAsbj0xO2Zvcig7KGU9dGhpcy5uZXh0Q2hhcigpKT49MDspaWYoZT49NDgmJmU8PTU3KXtjb25zdCBhPWUtNDg7aWYodClyPTEwKnIrYTtlbHNlezAhPT1pJiYoaSo9MTApO3M9MTAqcythfX1lbHNlIGlmKDQ2PT09ZSl7aWYoMCE9PWkpYnJlYWs7aT0xfWVsc2UgaWYoNDU9PT1lKXdhcm4oIkJhZGx5IGZvcm1hdHRlZCBudW1iZXI6IG1pbnVzIHNpZ24gaW4gdGhlIG1pZGRsZSIpO2Vsc2V7aWYoNjkhPT1lJiYxMDEhPT1lKWJyZWFrO2U9dGhpcy5wZWVrQ2hhcigpO2lmKDQzPT09ZXx8NDU9PT1lKXtuPTQ1PT09ZT8tMToxO3RoaXMubmV4dENoYXIoKX1lbHNlIGlmKGU8NDh8fGU+NTcpYnJlYWs7dD0hMH0wIT09aSYmKHMvPWkpO3QmJihzKj0xMCoqKG4qcikpO3JldHVybiBhKnN9Z2V0U3RyaW5nKCl7bGV0IGU9MSx0PSExO2NvbnN0IGk9dGhpcy5zdHJCdWY7aS5sZW5ndGg9MDtsZXQgYT10aGlzLm5leHRDaGFyKCk7Zm9yKDs7KXtsZXQgcz0hMTtzd2l0Y2goMHxhKXtjYXNlLTE6d2FybigiVW50ZXJtaW5hdGVkIHN0cmluZyIpO3Q9ITA7YnJlYWs7Y2FzZSA0MDorK2U7aS5wdXNoKCIoIik7YnJlYWs7Y2FzZSA0MTppZigwPT0tLWUpe3RoaXMubmV4dENoYXIoKTt0PSEwfWVsc2UgaS5wdXNoKCIpIik7YnJlYWs7Y2FzZSA5MjphPXRoaXMubmV4dENoYXIoKTtzd2l0Y2goYSl7Y2FzZS0xOndhcm4oIlVudGVybWluYXRlZCBzdHJpbmciKTt0PSEwO2JyZWFrO2Nhc2UgMTEwOmkucHVzaCgiXG4iKTticmVhaztjYXNlIDExNDppLnB1c2goIlxyIik7YnJlYWs7Y2FzZSAxMTY6aS5wdXNoKCJcdCIpO2JyZWFrO2Nhc2UgOTg6aS5wdXNoKCJcYiIpO2JyZWFrO2Nhc2UgMTAyOmkucHVzaCgiXGYiKTticmVhaztjYXNlIDkyOmNhc2UgNDA6Y2FzZSA0MTppLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhKSk7YnJlYWs7Y2FzZSA0ODpjYXNlIDQ5OmNhc2UgNTA6Y2FzZSA1MTpjYXNlIDUyOmNhc2UgNTM6Y2FzZSA1NDpjYXNlIDU1OmxldCBlPTE1JmE7YT10aGlzLm5leHRDaGFyKCk7cz0hMDtpZihhPj00OCYmYTw9NTUpe2U9KGU8PDMpKygxNSZhKTthPXRoaXMubmV4dENoYXIoKTtpZihhPj00OCYmYTw9NTUpe3M9ITE7ZT0oZTw8MykrKDE1JmEpfX1pLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShlKSk7YnJlYWs7Y2FzZSAxMzoxMD09PXRoaXMucGVla0NoYXIoKSYmdGhpcy5uZXh0Q2hhcigpO2JyZWFrO2Nhc2UgMTA6YnJlYWs7ZGVmYXVsdDppLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhKSl9YnJlYWs7ZGVmYXVsdDppLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhKSl9aWYodClicmVhaztzfHwoYT10aGlzLm5leHRDaGFyKCkpfXJldHVybiBpLmpvaW4oIiIpfWdldE5hbWUoKXtsZXQgZSx0O2NvbnN0IGk9dGhpcy5zdHJCdWY7aS5sZW5ndGg9MDtmb3IoOyhlPXRoaXMubmV4dENoYXIoKSk+PTAmJiFjaVtlXTspaWYoMzU9PT1lKXtlPXRoaXMubmV4dENoYXIoKTtpZihjaVtlXSl7d2FybigiTGV4ZXJfZ2V0TmFtZTogTlVNQkVSIFNJR04gKCMpIHNob3VsZCBiZSBmb2xsb3dlZCBieSBhIGhleGFkZWNpbWFsIG51bWJlci4iKTtpLnB1c2goIiMiKTticmVha31jb25zdCBhPXRvSGV4RGlnaXQoZSk7aWYoLTEhPT1hKXt0PWU7ZT10aGlzLm5leHRDaGFyKCk7Y29uc3Qgcz10b0hleERpZ2l0KGUpO2lmKC0xPT09cyl7d2FybihgTGV4ZXJfZ2V0TmFtZTogSWxsZWdhbCBkaWdpdCAoJHtTdHJpbmcuZnJvbUNoYXJDb2RlKGUpfSkgaW4gaGV4YWRlY2ltYWwgbnVtYmVyLmApO2kucHVzaCgiIyIsU3RyaW5nLmZyb21DaGFyQ29kZSh0KSk7aWYoY2lbZV0pYnJlYWs7aS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoZSkpO2NvbnRpbnVlfWkucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGE8PDR8cykpfWVsc2UgaS5wdXNoKCIjIixTdHJpbmcuZnJvbUNoYXJDb2RlKGUpKX1lbHNlIGkucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGUpKTtpLmxlbmd0aD4xMjcmJndhcm4oYE5hbWUgdG9rZW4gaXMgbG9uZ2VyIHRoYW4gYWxsb3dlZCBieSB0aGUgc3BlYzogJHtpLmxlbmd0aH1gKTtyZXR1cm4gTmFtZS5nZXQoaS5qb2luKCIiKSl9X2hleFN0cmluZ1dhcm4oZSl7NSE9dGhpcy5faGV4U3RyaW5nTnVtV2FybisrP3RoaXMuX2hleFN0cmluZ051bVdhcm4+NXx8d2FybihgZ2V0SGV4U3RyaW5nIC0gaWdub3JpbmcgaW52YWxpZCBjaGFyYWN0ZXI6ICR7ZX1gKTp3YXJuKCJnZXRIZXhTdHJpbmcgLSBpZ25vcmluZyBhZGRpdGlvbmFsIGludmFsaWQgY2hhcmFjdGVycy4iKX1nZXRIZXhTdHJpbmcoKXtjb25zdCBlPXRoaXMuc3RyQnVmO2UubGVuZ3RoPTA7bGV0IHQsaSxhPXRoaXMuY3VycmVudENoYXIscz0hMDt0aGlzLl9oZXhTdHJpbmdOdW1XYXJuPTA7Zm9yKDs7KXtpZihhPDApe3dhcm4oIlVudGVybWluYXRlZCBoZXggc3RyaW5nIik7YnJlYWt9aWYoNjI9PT1hKXt0aGlzLm5leHRDaGFyKCk7YnJlYWt9aWYoMSE9PWNpW2FdKXtpZihzKXt0PXRvSGV4RGlnaXQoYSk7aWYoLTE9PT10KXt0aGlzLl9oZXhTdHJpbmdXYXJuKGEpO2E9dGhpcy5uZXh0Q2hhcigpO2NvbnRpbnVlfX1lbHNle2k9dG9IZXhEaWdpdChhKTtpZigtMT09PWkpe3RoaXMuX2hleFN0cmluZ1dhcm4oYSk7YT10aGlzLm5leHRDaGFyKCk7Y29udGludWV9ZS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUodDw8NHxpKSl9cz0hczthPXRoaXMubmV4dENoYXIoKX1lbHNlIGE9dGhpcy5uZXh0Q2hhcigpfXJldHVybiBlLmpvaW4oIiIpfWdldE9iaigpe2xldCBlPSExLHQ9dGhpcy5jdXJyZW50Q2hhcjtmb3IoOzspe2lmKHQ8MClyZXR1cm4gcHQ7aWYoZSkxMCE9PXQmJjEzIT09dHx8KGU9ITEpO2Vsc2UgaWYoMzc9PT10KWU9ITA7ZWxzZSBpZigxIT09Y2lbdF0pYnJlYWs7dD10aGlzLm5leHRDaGFyKCl9c3dpdGNoKDB8dCl7Y2FzZSA0ODpjYXNlIDQ5OmNhc2UgNTA6Y2FzZSA1MTpjYXNlIDUyOmNhc2UgNTM6Y2FzZSA1NDpjYXNlIDU1OmNhc2UgNTY6Y2FzZSA1NzpjYXNlIDQzOmNhc2UgNDU6Y2FzZSA0NjpyZXR1cm4gdGhpcy5nZXROdW1iZXIoKTtjYXNlIDQwOnJldHVybiB0aGlzLmdldFN0cmluZygpO2Nhc2UgNDc6cmV0dXJuIHRoaXMuZ2V0TmFtZSgpO2Nhc2UgOTE6dGhpcy5uZXh0Q2hhcigpO3JldHVybiBDbWQuZ2V0KCJbIik7Y2FzZSA5Mzp0aGlzLm5leHRDaGFyKCk7cmV0dXJuIENtZC5nZXQoIl0iKTtjYXNlIDYwOnQ9dGhpcy5uZXh0Q2hhcigpO2lmKDYwPT09dCl7dGhpcy5uZXh0Q2hhcigpO3JldHVybiBDbWQuZ2V0KCI8PCIpfXJldHVybiB0aGlzLmdldEhleFN0cmluZygpO2Nhc2UgNjI6dD10aGlzLm5leHRDaGFyKCk7aWYoNjI9PT10KXt0aGlzLm5leHRDaGFyKCk7cmV0dXJuIENtZC5nZXQoIj4+Iil9cmV0dXJuIENtZC5nZXQoIj4iKTtjYXNlIDEyMzp0aGlzLm5leHRDaGFyKCk7cmV0dXJuIENtZC5nZXQoInsiKTtjYXNlIDEyNTp0aGlzLm5leHRDaGFyKCk7cmV0dXJuIENtZC5nZXQoIn0iKTtjYXNlIDQxOnRoaXMubmV4dENoYXIoKTt0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYElsbGVnYWwgY2hhcmFjdGVyOiAke3R9YCl9bGV0IGk9U3RyaW5nLmZyb21DaGFyQ29kZSh0KTtpZih0PDMyfHx0PjEyNyl7Y29uc3QgZT10aGlzLnBlZWtDaGFyKCk7aWYoZT49MzImJmU8PTEyNyl7dGhpcy5uZXh0Q2hhcigpO3JldHVybiBDbWQuZ2V0KGkpfX1jb25zdCBhPXRoaXMua25vd25Db21tYW5kcztsZXQgcz12b2lkIDAhPT1hPy5baV07Zm9yKDsodD10aGlzLm5leHRDaGFyKCkpPj0wJiYhY2lbdF07KXtjb25zdCBlPWkrU3RyaW5nLmZyb21DaGFyQ29kZSh0KTtpZihzJiZ2b2lkIDA9PT1hW2VdKWJyZWFrO2lmKDEyOD09PWkubGVuZ3RoKXRocm93IG5ldyBGb3JtYXRFcnJvcihgQ29tbWFuZCB0b2tlbiB0b28gbG9uZzogJHtpLmxlbmd0aH1gKTtpPWU7cz12b2lkIDAhPT1hPy5baV19aWYoInRydWUiPT09aSlyZXR1cm4hMDtpZigiZmFsc2UiPT09aSlyZXR1cm4hMTtpZigibnVsbCI9PT1pKXJldHVybiBudWxsOyJCSSI9PT1pJiYodGhpcy5iZWdpbklubGluZUltYWdlUG9zPXRoaXMuc3RyZWFtLnBvcyk7cmV0dXJuIENtZC5nZXQoaSl9c2tpcFRvTmV4dExpbmUoKXtsZXQgZT10aGlzLmN1cnJlbnRDaGFyO2Zvcig7ZT49MDspe2lmKDEzPT09ZSl7ZT10aGlzLm5leHRDaGFyKCk7MTA9PT1lJiZ0aGlzLm5leHRDaGFyKCk7YnJlYWt9aWYoMTA9PT1lKXt0aGlzLm5leHRDaGFyKCk7YnJlYWt9ZT10aGlzLm5leHRDaGFyKCl9fX1jbGFzcyBMaW5lYXJpemF0aW9ue3N0YXRpYyBjcmVhdGUoZSl7ZnVuY3Rpb24gZ2V0SW50KGUsdCxpPSExKXtjb25zdCBhPWUuZ2V0KHQpO2lmKE51bWJlci5pc0ludGVnZXIoYSkmJihpP2E+PTA6YT4wKSlyZXR1cm4gYTt0aHJvdyBuZXcgRXJyb3IoYFRoZSAiJHt0fSIgcGFyYW1ldGVyIGluIHRoZSBsaW5lYXJpemF0aW9uIGRpY3Rpb25hcnkgaXMgaW52YWxpZC5gKX1jb25zdCB0PW5ldyBQYXJzZXIoe2xleGVyOm5ldyBMZXhlcihlKSx4cmVmOm51bGx9KSxpPXQuZ2V0T2JqKCksYT10LmdldE9iaigpLHM9dC5nZXRPYmooKSxyPXQuZ2V0T2JqKCk7bGV0IG4sbztpZighKE51bWJlci5pc0ludGVnZXIoaSkmJk51bWJlci5pc0ludGVnZXIoYSkmJmlzQ21kKHMsIm9iaiIpJiZyIGluc3RhbmNlb2YgRGljdCYmIm51bWJlciI9PXR5cGVvZihuPXIuZ2V0KCJMaW5lYXJpemVkIikpJiZuPjApKXJldHVybiBudWxsO2lmKChvPWdldEludChyLCJMIikpIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCdUaGUgIkwiIHBhcmFtZXRlciBpbiB0aGUgbGluZWFyaXphdGlvbiBkaWN0aW9uYXJ5IGRvZXMgbm90IGVxdWFsIHRoZSBzdHJlYW0gbGVuZ3RoLicpO3JldHVybntsZW5ndGg6byxoaW50czpmdW5jdGlvbiBnZXRIaW50cyhlKXtjb25zdCB0PWUuZ2V0KCJIIik7bGV0IGk7aWYoQXJyYXkuaXNBcnJheSh0KSYmKDI9PT0oaT10Lmxlbmd0aCl8fDQ9PT1pKSl7Zm9yKGxldCBlPTA7ZTxpO2UrKyl7Y29uc3QgaT10W2VdO2lmKCEoTnVtYmVyLmlzSW50ZWdlcihpKSYmaT4wKSl0aHJvdyBuZXcgRXJyb3IoYEhpbnQgKCR7ZX0pIGluIHRoZSBsaW5lYXJpemF0aW9uIGRpY3Rpb25hcnkgaXMgaW52YWxpZC5gKX1yZXR1cm4gdH10aHJvdyBuZXcgRXJyb3IoIkhpbnQgYXJyYXkgaW4gdGhlIGxpbmVhcml6YXRpb24gZGljdGlvbmFyeSBpcyBpbnZhbGlkLiIpfShyKSxvYmplY3ROdW1iZXJGaXJzdDpnZXRJbnQociwiTyIpLGVuZEZpcnN0OmdldEludChyLCJFIiksbnVtUGFnZXM6Z2V0SW50KHIsIk4iKSxtYWluWFJlZkVudHJpZXNPZmZzZXQ6Z2V0SW50KHIsIlQiKSxwYWdlRmlyc3Q6ci5oYXMoIlAiKT9nZXRJbnQociwiUCIsITApOjB9fX1jb25zdCBoaT1bIkFkb2JlLUdCMS1VQ1MyIiwiQWRvYmUtQ05TMS1VQ1MyIiwiQWRvYmUtSmFwYW4xLVVDUzIiLCJBZG9iZS1Lb3JlYTEtVUNTMiIsIjc4LUVVQy1IIiwiNzgtRVVDLVYiLCI3OC1IIiwiNzgtUktTSi1IIiwiNzgtUktTSi1WIiwiNzgtViIsIjc4bXMtUktTSi1IIiwiNzhtcy1SS1NKLVYiLCI4M3B2LVJLU0otSCIsIjkwbXMtUktTSi1IIiwiOTBtcy1SS1NKLVYiLCI5MG1zcC1SS1NKLUgiLCI5MG1zcC1SS1NKLVYiLCI5MHB2LVJLU0otSCIsIjkwcHYtUktTSi1WIiwiQWRkLUgiLCJBZGQtUktTSi1IIiwiQWRkLVJLU0otViIsIkFkZC1WIiwiQWRvYmUtQ05TMS0wIiwiQWRvYmUtQ05TMS0xIiwiQWRvYmUtQ05TMS0yIiwiQWRvYmUtQ05TMS0zIiwiQWRvYmUtQ05TMS00IiwiQWRvYmUtQ05TMS01IiwiQWRvYmUtQ05TMS02IiwiQWRvYmUtR0IxLTAiLCJBZG9iZS1HQjEtMSIsIkFkb2JlLUdCMS0yIiwiQWRvYmUtR0IxLTMiLCJBZG9iZS1HQjEtNCIsIkFkb2JlLUdCMS01IiwiQWRvYmUtSmFwYW4xLTAiLCJBZG9iZS1KYXBhbjEtMSIsIkFkb2JlLUphcGFuMS0yIiwiQWRvYmUtSmFwYW4xLTMiLCJBZG9iZS1KYXBhbjEtNCIsIkFkb2JlLUphcGFuMS01IiwiQWRvYmUtSmFwYW4xLTYiLCJBZG9iZS1Lb3JlYTEtMCIsIkFkb2JlLUtvcmVhMS0xIiwiQWRvYmUtS29yZWExLTIiLCJCNS1IIiwiQjUtViIsIkI1cGMtSCIsIkI1cGMtViIsIkNOUy1FVUMtSCIsIkNOUy1FVUMtViIsIkNOUzEtSCIsIkNOUzEtViIsIkNOUzItSCIsIkNOUzItViIsIkVUSEstQjUtSCIsIkVUSEstQjUtViIsIkVUZW4tQjUtSCIsIkVUZW4tQjUtViIsIkVUZW5tcy1CNS1IIiwiRVRlbm1zLUI1LVYiLCJFVUMtSCIsIkVVQy1WIiwiRXh0LUgiLCJFeHQtUktTSi1IIiwiRXh0LVJLU0otViIsIkV4dC1WIiwiR0ItRVVDLUgiLCJHQi1FVUMtViIsIkdCLUgiLCJHQi1WIiwiR0JLLUVVQy1IIiwiR0JLLUVVQy1WIiwiR0JLMkstSCIsIkdCSzJLLVYiLCJHQktwLUVVQy1IIiwiR0JLcC1FVUMtViIsIkdCVC1FVUMtSCIsIkdCVC1FVUMtViIsIkdCVC1IIiwiR0JULVYiLCJHQlRwYy1FVUMtSCIsIkdCVHBjLUVVQy1WIiwiR0JwYy1FVUMtSCIsIkdCcGMtRVVDLVYiLCJIIiwiSEtkbGEtQjUtSCIsIkhLZGxhLUI1LVYiLCJIS2RsYi1CNS1IIiwiSEtkbGItQjUtViIsIkhLZ2Njcy1CNS1IIiwiSEtnY2NzLUI1LVYiLCJIS20zMTQtQjUtSCIsIkhLbTMxNC1CNS1WIiwiSEttNDcxLUI1LUgiLCJIS200NzEtQjUtViIsIkhLc2NzLUI1LUgiLCJIS3Njcy1CNS1WIiwiSGFua2FrdSIsIkhpcmFnYW5hIiwiS1NDLUVVQy1IIiwiS1NDLUVVQy1WIiwiS1NDLUgiLCJLU0MtSm9oYWItSCIsIktTQy1Kb2hhYi1WIiwiS1NDLVYiLCJLU0Ntcy1VSEMtSCIsIktTQ21zLVVIQy1IVy1IIiwiS1NDbXMtVUhDLUhXLVYiLCJLU0Ntcy1VSEMtViIsIktTQ3BjLUVVQy1IIiwiS1NDcGMtRVVDLVYiLCJLYXRha2FuYSIsIk5XUC1IIiwiTldQLVYiLCJSS1NKLUgiLCJSS1NKLVYiLCJSb21hbiIsIlVuaUNOUy1VQ1MyLUgiLCJVbmlDTlMtVUNTMi1WIiwiVW5pQ05TLVVURjE2LUgiLCJVbmlDTlMtVVRGMTYtViIsIlVuaUNOUy1VVEYzMi1IIiwiVW5pQ05TLVVURjMyLVYiLCJVbmlDTlMtVVRGOC1IIiwiVW5pQ05TLVVURjgtViIsIlVuaUdCLVVDUzItSCIsIlVuaUdCLVVDUzItViIsIlVuaUdCLVVURjE2LUgiLCJVbmlHQi1VVEYxNi1WIiwiVW5pR0ItVVRGMzItSCIsIlVuaUdCLVVURjMyLVYiLCJVbmlHQi1VVEY4LUgiLCJVbmlHQi1VVEY4LVYiLCJVbmlKSVMtVUNTMi1IIiwiVW5pSklTLVVDUzItSFctSCIsIlVuaUpJUy1VQ1MyLUhXLVYiLCJVbmlKSVMtVUNTMi1WIiwiVW5pSklTLVVURjE2LUgiLCJVbmlKSVMtVVRGMTYtViIsIlVuaUpJUy1VVEYzMi1IIiwiVW5pSklTLVVURjMyLVYiLCJVbmlKSVMtVVRGOC1IIiwiVW5pSklTLVVURjgtViIsIlVuaUpJUzIwMDQtVVRGMTYtSCIsIlVuaUpJUzIwMDQtVVRGMTYtViIsIlVuaUpJUzIwMDQtVVRGMzItSCIsIlVuaUpJUzIwMDQtVVRGMzItViIsIlVuaUpJUzIwMDQtVVRGOC1IIiwiVW5pSklTMjAwNC1VVEY4LVYiLCJVbmlKSVNQcm8tVUNTMi1IVy1WIiwiVW5pSklTUHJvLVVDUzItViIsIlVuaUpJU1Byby1VVEY4LVYiLCJVbmlKSVNYMDIxMy1VVEYzMi1IIiwiVW5pSklTWDAyMTMtVVRGMzItViIsIlVuaUpJU1gwMjEzMjAwNC1VVEYzMi1IIiwiVW5pSklTWDAyMTMyMDA0LVVURjMyLVYiLCJVbmlLUy1VQ1MyLUgiLCJVbmlLUy1VQ1MyLVYiLCJVbmlLUy1VVEYxNi1IIiwiVW5pS1MtVVRGMTYtViIsIlVuaUtTLVVURjMyLUgiLCJVbmlLUy1VVEYzMi1WIiwiVW5pS1MtVVRGOC1IIiwiVW5pS1MtVVRGOC1WIiwiViIsIldQLVN5bWJvbCJdLGxpPTIqKjI0LTE7Y2xhc3MgQ01hcHtjb25zdHJ1Y3RvcihlPSExKXt0aGlzLmNvZGVzcGFjZVJhbmdlcz1bW10sW10sW10sW11dO3RoaXMubnVtQ29kZXNwYWNlUmFuZ2VzPTA7dGhpcy5fbWFwPVtdO3RoaXMubmFtZT0iIjt0aGlzLnZlcnRpY2FsPSExO3RoaXMudXNlQ01hcD1udWxsO3RoaXMuYnVpbHRJbkNNYXA9ZX1hZGRDb2Rlc3BhY2VSYW5nZShlLHQsaSl7dGhpcy5jb2Rlc3BhY2VSYW5nZXNbZS0xXS5wdXNoKHQsaSk7dGhpcy5udW1Db2Rlc3BhY2VSYW5nZXMrK31tYXBDaWRSYW5nZShlLHQsaSl7aWYodC1lPmxpKXRocm93IG5ldyBFcnJvcigibWFwQ2lkUmFuZ2UgLSBpZ25vcmluZyBkYXRhIGFib3ZlIE1BWF9NQVBfUkFOR0UuIik7Zm9yKDtlPD10Oyl0aGlzLl9tYXBbZSsrXT1pKyt9bWFwQmZSYW5nZShlLHQsaSl7aWYodC1lPmxpKXRocm93IG5ldyBFcnJvcigibWFwQmZSYW5nZSAtIGlnbm9yaW5nIGRhdGEgYWJvdmUgTUFYX01BUF9SQU5HRS4iKTtjb25zdCBhPWkubGVuZ3RoLTE7Zm9yKDtlPD10Oyl7dGhpcy5fbWFwW2UrK109aTtjb25zdCB0PWkuY2hhckNvZGVBdChhKSsxO3Q+MjU1P2k9aS5zdWJzdHJpbmcoMCxhLTEpK1N0cmluZy5mcm9tQ2hhckNvZGUoaS5jaGFyQ29kZUF0KGEtMSkrMSkrIlwwIjppPWkuc3Vic3RyaW5nKDAsYSkrU3RyaW5nLmZyb21DaGFyQ29kZSh0KX19bWFwQmZSYW5nZVRvQXJyYXkoZSx0LGkpe2lmKHQtZT5saSl0aHJvdyBuZXcgRXJyb3IoIm1hcEJmUmFuZ2VUb0FycmF5IC0gaWdub3JpbmcgZGF0YSBhYm92ZSBNQVhfTUFQX1JBTkdFLiIpO2NvbnN0IGE9aS5sZW5ndGg7bGV0IHM9MDtmb3IoO2U8PXQmJnM8YTspe3RoaXMuX21hcFtlXT1pW3MrK107KytlfX1tYXBPbmUoZSx0KXt0aGlzLl9tYXBbZV09dH1sb29rdXAoZSl7cmV0dXJuIHRoaXMuX21hcFtlXX1jb250YWlucyhlKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fbWFwW2VdfWZvckVhY2goZSl7Y29uc3QgdD10aGlzLl9tYXAsaT10Lmxlbmd0aDtpZihpPD02NTUzNilmb3IobGV0IGE9MDthPGk7YSsrKXZvaWQgMCE9PXRbYV0mJmUoYSx0W2FdKTtlbHNlIGZvcihjb25zdCBpIGluIHQpZShpLHRbaV0pfWNoYXJDb2RlT2YoZSl7Y29uc3QgdD10aGlzLl9tYXA7aWYodC5sZW5ndGg8PTY1NTM2KXJldHVybiB0LmluZGV4T2YoZSk7Zm9yKGNvbnN0IGkgaW4gdClpZih0W2ldPT09ZSlyZXR1cm4gMHxpO3JldHVybi0xfWdldE1hcCgpe3JldHVybiB0aGlzLl9tYXB9cmVhZENoYXJDb2RlKGUsdCxpKXtsZXQgYT0wO2NvbnN0IHM9dGhpcy5jb2Rlc3BhY2VSYW5nZXM7Zm9yKGxldCByPTAsbj1zLmxlbmd0aDtyPG47cisrKXthPShhPDw4fGUuY2hhckNvZGVBdCh0K3IpKT4+PjA7Y29uc3Qgbj1zW3JdO2ZvcihsZXQgZT0wLHQ9bi5sZW5ndGg7ZTx0Oyl7Y29uc3QgdD1uW2UrK10scz1uW2UrK107aWYoYT49dCYmYTw9cyl7aS5jaGFyY29kZT1hO2kubGVuZ3RoPXIrMTtyZXR1cm59fX1pLmNoYXJjb2RlPTA7aS5sZW5ndGg9MX1nZXRDaGFyQ29kZUxlbmd0aChlKXtjb25zdCB0PXRoaXMuY29kZXNwYWNlUmFuZ2VzO2ZvcihsZXQgaT0wLGE9dC5sZW5ndGg7aTxhO2krKyl7Y29uc3QgYT10W2ldO2ZvcihsZXQgdD0wLHM9YS5sZW5ndGg7dDxzOyl7Y29uc3Qgcz1hW3QrK10scj1hW3QrK107aWYoZT49cyYmZTw9cilyZXR1cm4gaSsxfX1yZXR1cm4gMX1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuX21hcC5sZW5ndGh9Z2V0IGlzSWRlbnRpdHlDTWFwKCl7aWYoIklkZW50aXR5LUgiIT09dGhpcy5uYW1lJiYiSWRlbnRpdHktViIhPT10aGlzLm5hbWUpcmV0dXJuITE7aWYoNjU1MzYhPT10aGlzLl9tYXAubGVuZ3RoKXJldHVybiExO2ZvcihsZXQgZT0wO2U8NjU1MzY7ZSsrKWlmKHRoaXMuX21hcFtlXSE9PWUpcmV0dXJuITE7cmV0dXJuITB9fWNsYXNzIElkZW50aXR5Q01hcCBleHRlbmRzIENNYXB7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpO3RoaXMudmVydGljYWw9ZTt0aGlzLmFkZENvZGVzcGFjZVJhbmdlKHQsMCw2NTUzNSl9bWFwQ2lkUmFuZ2UoZSx0LGkpe3VucmVhY2hhYmxlKCJzaG91bGQgbm90IGNhbGwgbWFwQ2lkUmFuZ2UiKX1tYXBCZlJhbmdlKGUsdCxpKXt1bnJlYWNoYWJsZSgic2hvdWxkIG5vdCBjYWxsIG1hcEJmUmFuZ2UiKX1tYXBCZlJhbmdlVG9BcnJheShlLHQsaSl7dW5yZWFjaGFibGUoInNob3VsZCBub3QgY2FsbCBtYXBCZlJhbmdlVG9BcnJheSIpfW1hcE9uZShlLHQpe3VucmVhY2hhYmxlKCJzaG91bGQgbm90IGNhbGwgbWFwQ2lkT25lIil9bG9va3VwKGUpe3JldHVybiBOdW1iZXIuaXNJbnRlZ2VyKGUpJiZlPD02NTUzNT9lOnZvaWQgMH1jb250YWlucyhlKXtyZXR1cm4gTnVtYmVyLmlzSW50ZWdlcihlKSYmZTw9NjU1MzV9Zm9yRWFjaChlKXtmb3IobGV0IHQ9MDt0PD02NTUzNTt0KyspZSh0LHQpfWNoYXJDb2RlT2YoZSl7cmV0dXJuIE51bWJlci5pc0ludGVnZXIoZSkmJmU8PTY1NTM1P2U6LTF9Z2V0TWFwKCl7Y29uc3QgZT1uZXcgQXJyYXkoNjU1MzYpO2ZvcihsZXQgdD0wO3Q8PTY1NTM1O3QrKyllW3RdPXQ7cmV0dXJuIGV9Z2V0IGxlbmd0aCgpe3JldHVybiA2NTUzNn1nZXQgaXNJZGVudGl0eUNNYXAoKXt1bnJlYWNoYWJsZSgic2hvdWxkIG5vdCBhY2Nlc3MgLmlzSWRlbnRpdHlDTWFwIil9fWZ1bmN0aW9uIHN0clRvSW50KGUpe2xldCB0PTA7Zm9yKGxldCBpPTA7aTxlLmxlbmd0aDtpKyspdD10PDw4fGUuY2hhckNvZGVBdChpKTtyZXR1cm4gdD4+PjB9ZnVuY3Rpb24gZXhwZWN0U3RyaW5nKGUpe2lmKCJzdHJpbmciIT10eXBlb2YgZSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIk1hbGZvcm1lZCBDTWFwOiBleHBlY3RlZCBzdHJpbmcuIil9ZnVuY3Rpb24gZXhwZWN0SW50KGUpe2lmKCFOdW1iZXIuaXNJbnRlZ2VyKGUpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiTWFsZm9ybWVkIENNYXA6IGV4cGVjdGVkIGludC4iKX1mdW5jdGlvbiBwYXJzZUJmQ2hhcihlLHQpe2Zvcig7Oyl7bGV0IGk9dC5nZXRPYmooKTtpZihpPT09cHQpYnJlYWs7aWYoaXNDbWQoaSwiZW5kYmZjaGFyIikpcmV0dXJuO2V4cGVjdFN0cmluZyhpKTtjb25zdCBhPXN0clRvSW50KGkpO2k9dC5nZXRPYmooKTtleHBlY3RTdHJpbmcoaSk7Y29uc3Qgcz1pO2UubWFwT25lKGEscyl9fWZ1bmN0aW9uIHBhcnNlQmZSYW5nZShlLHQpe2Zvcig7Oyl7bGV0IGk9dC5nZXRPYmooKTtpZihpPT09cHQpYnJlYWs7aWYoaXNDbWQoaSwiZW5kYmZyYW5nZSIpKXJldHVybjtleHBlY3RTdHJpbmcoaSk7Y29uc3QgYT1zdHJUb0ludChpKTtpPXQuZ2V0T2JqKCk7ZXhwZWN0U3RyaW5nKGkpO2NvbnN0IHM9c3RyVG9JbnQoaSk7aT10LmdldE9iaigpO2lmKE51bWJlci5pc0ludGVnZXIoaSl8fCJzdHJpbmciPT10eXBlb2YgaSl7Y29uc3QgdD1OdW1iZXIuaXNJbnRlZ2VyKGkpP1N0cmluZy5mcm9tQ2hhckNvZGUoaSk6aTtlLm1hcEJmUmFuZ2UoYSxzLHQpfWVsc2V7aWYoIWlzQ21kKGksIlsiKSlicmVhazt7aT10LmdldE9iaigpO2NvbnN0IHI9W107Zm9yKDshaXNDbWQoaSwiXSIpJiZpIT09cHQ7KXtyLnB1c2goaSk7aT10LmdldE9iaigpfWUubWFwQmZSYW5nZVRvQXJyYXkoYSxzLHIpfX19dGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIGJmIHJhbmdlLiIpfWZ1bmN0aW9uIHBhcnNlQ2lkQ2hhcihlLHQpe2Zvcig7Oyl7bGV0IGk9dC5nZXRPYmooKTtpZihpPT09cHQpYnJlYWs7aWYoaXNDbWQoaSwiZW5kY2lkY2hhciIpKXJldHVybjtleHBlY3RTdHJpbmcoaSk7Y29uc3QgYT1zdHJUb0ludChpKTtpPXQuZ2V0T2JqKCk7ZXhwZWN0SW50KGkpO2NvbnN0IHM9aTtlLm1hcE9uZShhLHMpfX1mdW5jdGlvbiBwYXJzZUNpZFJhbmdlKGUsdCl7Zm9yKDs7KXtsZXQgaT10LmdldE9iaigpO2lmKGk9PT1wdClicmVhaztpZihpc0NtZChpLCJlbmRjaWRyYW5nZSIpKXJldHVybjtleHBlY3RTdHJpbmcoaSk7Y29uc3QgYT1zdHJUb0ludChpKTtpPXQuZ2V0T2JqKCk7ZXhwZWN0U3RyaW5nKGkpO2NvbnN0IHM9c3RyVG9JbnQoaSk7aT10LmdldE9iaigpO2V4cGVjdEludChpKTtjb25zdCByPWk7ZS5tYXBDaWRSYW5nZShhLHMscil9fWZ1bmN0aW9uIHBhcnNlQ29kZXNwYWNlUmFuZ2UoZSx0KXtmb3IoOzspe2xldCBpPXQuZ2V0T2JqKCk7aWYoaT09PXB0KWJyZWFrO2lmKGlzQ21kKGksImVuZGNvZGVzcGFjZXJhbmdlIikpcmV0dXJuO2lmKCJzdHJpbmciIT10eXBlb2YgaSlicmVhaztjb25zdCBhPXN0clRvSW50KGkpO2k9dC5nZXRPYmooKTtpZigic3RyaW5nIiE9dHlwZW9mIGkpYnJlYWs7Y29uc3Qgcz1zdHJUb0ludChpKTtlLmFkZENvZGVzcGFjZVJhbmdlKGkubGVuZ3RoLGEscyl9dGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIGNvZGVzcGFjZSByYW5nZS4iKX1mdW5jdGlvbiBwYXJzZVdNb2RlKGUsdCl7Y29uc3QgaT10LmdldE9iaigpO051bWJlci5pc0ludGVnZXIoaSkmJihlLnZlcnRpY2FsPSEhaSl9ZnVuY3Rpb24gcGFyc2VDTWFwTmFtZShlLHQpe2NvbnN0IGk9dC5nZXRPYmooKTtpIGluc3RhbmNlb2YgTmFtZSYmKGUubmFtZT1pLm5hbWUpfWFzeW5jIGZ1bmN0aW9uIHBhcnNlQ01hcChlLHQsaSxhKXtsZXQgcyxyO0E6Zm9yKDs7KXRyeXtjb25zdCBpPXQuZ2V0T2JqKCk7aWYoaT09PXB0KWJyZWFrO2lmKGkgaW5zdGFuY2VvZiBOYW1lKXsiV01vZGUiPT09aS5uYW1lP3BhcnNlV01vZGUoZSx0KToiQ01hcE5hbWUiPT09aS5uYW1lJiZwYXJzZUNNYXBOYW1lKGUsdCk7cz1pfWVsc2UgaWYoaSBpbnN0YW5jZW9mIENtZClzd2l0Y2goaS5jbWQpe2Nhc2UiZW5kY21hcCI6YnJlYWsgQTtjYXNlInVzZWNtYXAiOnMgaW5zdGFuY2VvZiBOYW1lJiYocj1zLm5hbWUpO2JyZWFrO2Nhc2UiYmVnaW5jb2Rlc3BhY2VyYW5nZSI6cGFyc2VDb2Rlc3BhY2VSYW5nZShlLHQpO2JyZWFrO2Nhc2UiYmVnaW5iZmNoYXIiOnBhcnNlQmZDaGFyKGUsdCk7YnJlYWs7Y2FzZSJiZWdpbmNpZGNoYXIiOnBhcnNlQ2lkQ2hhcihlLHQpO2JyZWFrO2Nhc2UiYmVnaW5iZnJhbmdlIjpwYXJzZUJmUmFuZ2UoZSx0KTticmVhaztjYXNlImJlZ2luY2lkcmFuZ2UiOnBhcnNlQ2lkUmFuZ2UoZSx0KX19Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGU7d2FybigiSW52YWxpZCBjTWFwIGRhdGE6ICIrZSk7Y29udGludWV9IWEmJnImJihhPXIpO3JldHVybiBhP2V4dGVuZENNYXAoZSxpLGEpOmV9YXN5bmMgZnVuY3Rpb24gZXh0ZW5kQ01hcChlLHQsaSl7ZS51c2VDTWFwPWF3YWl0IGNyZWF0ZUJ1aWx0SW5DTWFwKGksdCk7aWYoMD09PWUubnVtQ29kZXNwYWNlUmFuZ2VzKXtjb25zdCB0PWUudXNlQ01hcC5jb2Rlc3BhY2VSYW5nZXM7Zm9yKGxldCBpPTA7aTx0Lmxlbmd0aDtpKyspZS5jb2Rlc3BhY2VSYW5nZXNbaV09dFtpXS5zbGljZSgpO2UubnVtQ29kZXNwYWNlUmFuZ2VzPWUudXNlQ01hcC5udW1Db2Rlc3BhY2VSYW5nZXN9ZS51c2VDTWFwLmZvckVhY2goKGZ1bmN0aW9uKHQsaSl7ZS5jb250YWlucyh0KXx8ZS5tYXBPbmUodCxlLnVzZUNNYXAubG9va3VwKHQpKX0pKTtyZXR1cm4gZX1hc3luYyBmdW5jdGlvbiBjcmVhdGVCdWlsdEluQ01hcChlLHQpe2lmKCJJZGVudGl0eS1IIj09PWUpcmV0dXJuIG5ldyBJZGVudGl0eUNNYXAoITEsMik7aWYoIklkZW50aXR5LVYiPT09ZSlyZXR1cm4gbmV3IElkZW50aXR5Q01hcCghMCwyKTtpZighaGkuaW5jbHVkZXMoZSkpdGhyb3cgbmV3IEVycm9yKCJVbmtub3duIENNYXAgbmFtZTogIitlKTtpZighdCl0aHJvdyBuZXcgRXJyb3IoIkJ1aWx0LWluIENNYXAgcGFyYW1ldGVycyBhcmUgbm90IHByb3ZpZGVkLiIpO2NvbnN0e2NNYXBEYXRhOmksY29tcHJlc3Npb25UeXBlOmF9PWF3YWl0IHQoZSkscz1uZXcgQ01hcCghMCk7aWYoYT09PW1BLkJJTkFSWSlyZXR1cm4obmV3IEJpbmFyeUNNYXBSZWFkZXIpLnByb2Nlc3MoaSxzLChlPT5leHRlbmRDTWFwKHMsdCxlKSkpO2lmKGE9PT1tQS5OT05FKXtjb25zdCBlPW5ldyBMZXhlcihuZXcgU3RyZWFtKGkpKTtyZXR1cm4gcGFyc2VDTWFwKHMsZSx0LG51bGwpfXRocm93IG5ldyBFcnJvcihgSW52YWxpZCBDTWFwICJjb21wcmVzc2lvblR5cGUiIHZhbHVlOiAke2F9YCl9Y2xhc3MgQ01hcEZhY3Rvcnl7c3RhdGljIGFzeW5jIGNyZWF0ZSh7ZW5jb2Rpbmc6ZSxmZXRjaEJ1aWx0SW5DTWFwOnQsdXNlQ01hcDppfSl7aWYoZSBpbnN0YW5jZW9mIE5hbWUpcmV0dXJuIGNyZWF0ZUJ1aWx0SW5DTWFwKGUubmFtZSx0KTtpZihlIGluc3RhbmNlb2YgQmFzZVN0cmVhbSl7Y29uc3QgYT1hd2FpdCBwYXJzZUNNYXAobmV3IENNYXAsbmV3IExleGVyKGUpLHQsaSk7cmV0dXJuIGEuaXNJZGVudGl0eUNNYXA/Y3JlYXRlQnVpbHRJbkNNYXAoYS5uYW1lLHQpOmF9dGhyb3cgbmV3IEVycm9yKCJFbmNvZGluZyByZXF1aXJlZC4iKX19Y29uc3QgQ2k9WyIubm90ZGVmIiwic3BhY2UiLCJleGNsYW0iLCJxdW90ZWRibCIsIm51bWJlcnNpZ24iLCJkb2xsYXIiLCJwZXJjZW50IiwiYW1wZXJzYW5kIiwicXVvdGVyaWdodCIsInBhcmVubGVmdCIsInBhcmVucmlnaHQiLCJhc3RlcmlzayIsInBsdXMiLCJjb21tYSIsImh5cGhlbiIsInBlcmlvZCIsInNsYXNoIiwiemVybyIsIm9uZSIsInR3byIsInRocmVlIiwiZm91ciIsImZpdmUiLCJzaXgiLCJzZXZlbiIsImVpZ2h0IiwibmluZSIsImNvbG9uIiwic2VtaWNvbG9uIiwibGVzcyIsImVxdWFsIiwiZ3JlYXRlciIsInF1ZXN0aW9uIiwiYXQiLCJBIiwiQiIsIkMiLCJEIiwiRSIsIkYiLCJHIiwiSCIsIkkiLCJKIiwiSyIsIkwiLCJNIiwiTiIsIk8iLCJQIiwiUSIsIlIiLCJTIiwiVCIsIlUiLCJWIiwiVyIsIlgiLCJZIiwiWiIsImJyYWNrZXRsZWZ0IiwiYmFja3NsYXNoIiwiYnJhY2tldHJpZ2h0IiwiYXNjaWljaXJjdW0iLCJ1bmRlcnNjb3JlIiwicXVvdGVsZWZ0IiwiYSIsImIiLCJjIiwiZCIsImUiLCJmIiwiZyIsImgiLCJpIiwiaiIsImsiLCJsIiwibSIsIm4iLCJvIiwicCIsInEiLCJyIiwicyIsInQiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJicmFjZWxlZnQiLCJiYXIiLCJicmFjZXJpZ2h0IiwiYXNjaWl0aWxkZSIsImV4Y2xhbWRvd24iLCJjZW50Iiwic3RlcmxpbmciLCJmcmFjdGlvbiIsInllbiIsImZsb3JpbiIsInNlY3Rpb24iLCJjdXJyZW5jeSIsInF1b3Rlc2luZ2xlIiwicXVvdGVkYmxsZWZ0IiwiZ3VpbGxlbW90bGVmdCIsImd1aWxzaW5nbGxlZnQiLCJndWlsc2luZ2xyaWdodCIsImZpIiwiZmwiLCJlbmRhc2giLCJkYWdnZXIiLCJkYWdnZXJkYmwiLCJwZXJpb2RjZW50ZXJlZCIsInBhcmFncmFwaCIsImJ1bGxldCIsInF1b3Rlc2luZ2xiYXNlIiwicXVvdGVkYmxiYXNlIiwicXVvdGVkYmxyaWdodCIsImd1aWxsZW1vdHJpZ2h0IiwiZWxsaXBzaXMiLCJwZXJ0aG91c2FuZCIsInF1ZXN0aW9uZG93biIsImdyYXZlIiwiYWN1dGUiLCJjaXJjdW1mbGV4IiwidGlsZGUiLCJtYWNyb24iLCJicmV2ZSIsImRvdGFjY2VudCIsImRpZXJlc2lzIiwicmluZyIsImNlZGlsbGEiLCJodW5nYXJ1bWxhdXQiLCJvZ29uZWsiLCJjYXJvbiIsImVtZGFzaCIsIkFFIiwib3JkZmVtaW5pbmUiLCJMc2xhc2giLCJPc2xhc2giLCJPRSIsIm9yZG1hc2N1bGluZSIsImFlIiwiZG90bGVzc2kiLCJsc2xhc2giLCJvc2xhc2giLCJvZSIsImdlcm1hbmRibHMiLCJvbmVzdXBlcmlvciIsImxvZ2ljYWxub3QiLCJtdSIsInRyYWRlbWFyayIsIkV0aCIsIm9uZWhhbGYiLCJwbHVzbWludXMiLCJUaG9ybiIsIm9uZXF1YXJ0ZXIiLCJkaXZpZGUiLCJicm9rZW5iYXIiLCJkZWdyZWUiLCJ0aG9ybiIsInRocmVlcXVhcnRlcnMiLCJ0d29zdXBlcmlvciIsInJlZ2lzdGVyZWQiLCJtaW51cyIsImV0aCIsIm11bHRpcGx5IiwidGhyZWVzdXBlcmlvciIsImNvcHlyaWdodCIsIkFhY3V0ZSIsIkFjaXJjdW1mbGV4IiwiQWRpZXJlc2lzIiwiQWdyYXZlIiwiQXJpbmciLCJBdGlsZGUiLCJDY2VkaWxsYSIsIkVhY3V0ZSIsIkVjaXJjdW1mbGV4IiwiRWRpZXJlc2lzIiwiRWdyYXZlIiwiSWFjdXRlIiwiSWNpcmN1bWZsZXgiLCJJZGllcmVzaXMiLCJJZ3JhdmUiLCJOdGlsZGUiLCJPYWN1dGUiLCJPY2lyY3VtZmxleCIsIk9kaWVyZXNpcyIsIk9ncmF2ZSIsIk90aWxkZSIsIlNjYXJvbiIsIlVhY3V0ZSIsIlVjaXJjdW1mbGV4IiwiVWRpZXJlc2lzIiwiVWdyYXZlIiwiWWFjdXRlIiwiWWRpZXJlc2lzIiwiWmNhcm9uIiwiYWFjdXRlIiwiYWNpcmN1bWZsZXgiLCJhZGllcmVzaXMiLCJhZ3JhdmUiLCJhcmluZyIsImF0aWxkZSIsImNjZWRpbGxhIiwiZWFjdXRlIiwiZWNpcmN1bWZsZXgiLCJlZGllcmVzaXMiLCJlZ3JhdmUiLCJpYWN1dGUiLCJpY2lyY3VtZmxleCIsImlkaWVyZXNpcyIsImlncmF2ZSIsIm50aWxkZSIsIm9hY3V0ZSIsIm9jaXJjdW1mbGV4Iiwib2RpZXJlc2lzIiwib2dyYXZlIiwib3RpbGRlIiwic2Nhcm9uIiwidWFjdXRlIiwidWNpcmN1bWZsZXgiLCJ1ZGllcmVzaXMiLCJ1Z3JhdmUiLCJ5YWN1dGUiLCJ5ZGllcmVzaXMiLCJ6Y2Fyb24iXSxCaT1bIi5ub3RkZWYiLCJzcGFjZSIsImV4Y2xhbXNtYWxsIiwiSHVuZ2FydW1sYXV0c21hbGwiLCJkb2xsYXJvbGRzdHlsZSIsImRvbGxhcnN1cGVyaW9yIiwiYW1wZXJzYW5kc21hbGwiLCJBY3V0ZXNtYWxsIiwicGFyZW5sZWZ0c3VwZXJpb3IiLCJwYXJlbnJpZ2h0c3VwZXJpb3IiLCJ0d29kb3RlbmxlYWRlciIsIm9uZWRvdGVubGVhZGVyIiwiY29tbWEiLCJoeXBoZW4iLCJwZXJpb2QiLCJmcmFjdGlvbiIsInplcm9vbGRzdHlsZSIsIm9uZW9sZHN0eWxlIiwidHdvb2xkc3R5bGUiLCJ0aHJlZW9sZHN0eWxlIiwiZm91cm9sZHN0eWxlIiwiZml2ZW9sZHN0eWxlIiwic2l4b2xkc3R5bGUiLCJzZXZlbm9sZHN0eWxlIiwiZWlnaHRvbGRzdHlsZSIsIm5pbmVvbGRzdHlsZSIsImNvbG9uIiwic2VtaWNvbG9uIiwiY29tbWFzdXBlcmlvciIsInRocmVlcXVhcnRlcnNlbWRhc2giLCJwZXJpb2RzdXBlcmlvciIsInF1ZXN0aW9uc21hbGwiLCJhc3VwZXJpb3IiLCJic3VwZXJpb3IiLCJjZW50c3VwZXJpb3IiLCJkc3VwZXJpb3IiLCJlc3VwZXJpb3IiLCJpc3VwZXJpb3IiLCJsc3VwZXJpb3IiLCJtc3VwZXJpb3IiLCJuc3VwZXJpb3IiLCJvc3VwZXJpb3IiLCJyc3VwZXJpb3IiLCJzc3VwZXJpb3IiLCJ0c3VwZXJpb3IiLCJmZiIsImZpIiwiZmwiLCJmZmkiLCJmZmwiLCJwYXJlbmxlZnRpbmZlcmlvciIsInBhcmVucmlnaHRpbmZlcmlvciIsIkNpcmN1bWZsZXhzbWFsbCIsImh5cGhlbnN1cGVyaW9yIiwiR3JhdmVzbWFsbCIsIkFzbWFsbCIsIkJzbWFsbCIsIkNzbWFsbCIsIkRzbWFsbCIsIkVzbWFsbCIsIkZzbWFsbCIsIkdzbWFsbCIsIkhzbWFsbCIsIklzbWFsbCIsIkpzbWFsbCIsIktzbWFsbCIsIkxzbWFsbCIsIk1zbWFsbCIsIk5zbWFsbCIsIk9zbWFsbCIsIlBzbWFsbCIsIlFzbWFsbCIsIlJzbWFsbCIsIlNzbWFsbCIsIlRzbWFsbCIsIlVzbWFsbCIsIlZzbWFsbCIsIldzbWFsbCIsIlhzbWFsbCIsIllzbWFsbCIsIlpzbWFsbCIsImNvbG9ubW9uZXRhcnkiLCJvbmVmaXR0ZWQiLCJydXBpYWgiLCJUaWxkZXNtYWxsIiwiZXhjbGFtZG93bnNtYWxsIiwiY2VudG9sZHN0eWxlIiwiTHNsYXNoc21hbGwiLCJTY2Fyb25zbWFsbCIsIlpjYXJvbnNtYWxsIiwiRGllcmVzaXNzbWFsbCIsIkJyZXZlc21hbGwiLCJDYXJvbnNtYWxsIiwiRG90YWNjZW50c21hbGwiLCJNYWNyb25zbWFsbCIsImZpZ3VyZWRhc2giLCJoeXBoZW5pbmZlcmlvciIsIk9nb25la3NtYWxsIiwiUmluZ3NtYWxsIiwiQ2VkaWxsYXNtYWxsIiwib25lcXVhcnRlciIsIm9uZWhhbGYiLCJ0aHJlZXF1YXJ0ZXJzIiwicXVlc3Rpb25kb3duc21hbGwiLCJvbmVlaWdodGgiLCJ0aHJlZWVpZ2h0aHMiLCJmaXZlZWlnaHRocyIsInNldmVuZWlnaHRocyIsIm9uZXRoaXJkIiwidHdvdGhpcmRzIiwiemVyb3N1cGVyaW9yIiwib25lc3VwZXJpb3IiLCJ0d29zdXBlcmlvciIsInRocmVlc3VwZXJpb3IiLCJmb3Vyc3VwZXJpb3IiLCJmaXZlc3VwZXJpb3IiLCJzaXhzdXBlcmlvciIsInNldmVuc3VwZXJpb3IiLCJlaWdodHN1cGVyaW9yIiwibmluZXN1cGVyaW9yIiwiemVyb2luZmVyaW9yIiwib25laW5mZXJpb3IiLCJ0d29pbmZlcmlvciIsInRocmVlaW5mZXJpb3IiLCJmb3VyaW5mZXJpb3IiLCJmaXZlaW5mZXJpb3IiLCJzaXhpbmZlcmlvciIsInNldmVuaW5mZXJpb3IiLCJlaWdodGluZmVyaW9yIiwibmluZWluZmVyaW9yIiwiY2VudGluZmVyaW9yIiwiZG9sbGFyaW5mZXJpb3IiLCJwZXJpb2RpbmZlcmlvciIsImNvbW1haW5mZXJpb3IiLCJBZ3JhdmVzbWFsbCIsIkFhY3V0ZXNtYWxsIiwiQWNpcmN1bWZsZXhzbWFsbCIsIkF0aWxkZXNtYWxsIiwiQWRpZXJlc2lzc21hbGwiLCJBcmluZ3NtYWxsIiwiQUVzbWFsbCIsIkNjZWRpbGxhc21hbGwiLCJFZ3JhdmVzbWFsbCIsIkVhY3V0ZXNtYWxsIiwiRWNpcmN1bWZsZXhzbWFsbCIsIkVkaWVyZXNpc3NtYWxsIiwiSWdyYXZlc21hbGwiLCJJYWN1dGVzbWFsbCIsIkljaXJjdW1mbGV4c21hbGwiLCJJZGllcmVzaXNzbWFsbCIsIkV0aHNtYWxsIiwiTnRpbGRlc21hbGwiLCJPZ3JhdmVzbWFsbCIsIk9hY3V0ZXNtYWxsIiwiT2NpcmN1bWZsZXhzbWFsbCIsIk90aWxkZXNtYWxsIiwiT2RpZXJlc2lzc21hbGwiLCJPRXNtYWxsIiwiT3NsYXNoc21hbGwiLCJVZ3JhdmVzbWFsbCIsIlVhY3V0ZXNtYWxsIiwiVWNpcmN1bWZsZXhzbWFsbCIsIlVkaWVyZXNpc3NtYWxsIiwiWWFjdXRlc21hbGwiLCJUaG9ybnNtYWxsIiwiWWRpZXJlc2lzc21hbGwiXSxRaT1bIi5ub3RkZWYiLCJzcGFjZSIsImRvbGxhcm9sZHN0eWxlIiwiZG9sbGFyc3VwZXJpb3IiLCJwYXJlbmxlZnRzdXBlcmlvciIsInBhcmVucmlnaHRzdXBlcmlvciIsInR3b2RvdGVubGVhZGVyIiwib25lZG90ZW5sZWFkZXIiLCJjb21tYSIsImh5cGhlbiIsInBlcmlvZCIsImZyYWN0aW9uIiwiemVyb29sZHN0eWxlIiwib25lb2xkc3R5bGUiLCJ0d29vbGRzdHlsZSIsInRocmVlb2xkc3R5bGUiLCJmb3Vyb2xkc3R5bGUiLCJmaXZlb2xkc3R5bGUiLCJzaXhvbGRzdHlsZSIsInNldmVub2xkc3R5bGUiLCJlaWdodG9sZHN0eWxlIiwibmluZW9sZHN0eWxlIiwiY29sb24iLCJzZW1pY29sb24iLCJjb21tYXN1cGVyaW9yIiwidGhyZWVxdWFydGVyc2VtZGFzaCIsInBlcmlvZHN1cGVyaW9yIiwiYXN1cGVyaW9yIiwiYnN1cGVyaW9yIiwiY2VudHN1cGVyaW9yIiwiZHN1cGVyaW9yIiwiZXN1cGVyaW9yIiwiaXN1cGVyaW9yIiwibHN1cGVyaW9yIiwibXN1cGVyaW9yIiwibnN1cGVyaW9yIiwib3N1cGVyaW9yIiwicnN1cGVyaW9yIiwic3N1cGVyaW9yIiwidHN1cGVyaW9yIiwiZmYiLCJmaSIsImZsIiwiZmZpIiwiZmZsIiwicGFyZW5sZWZ0aW5mZXJpb3IiLCJwYXJlbnJpZ2h0aW5mZXJpb3IiLCJoeXBoZW5zdXBlcmlvciIsImNvbG9ubW9uZXRhcnkiLCJvbmVmaXR0ZWQiLCJydXBpYWgiLCJjZW50b2xkc3R5bGUiLCJmaWd1cmVkYXNoIiwiaHlwaGVuaW5mZXJpb3IiLCJvbmVxdWFydGVyIiwib25laGFsZiIsInRocmVlcXVhcnRlcnMiLCJvbmVlaWdodGgiLCJ0aHJlZWVpZ2h0aHMiLCJmaXZlZWlnaHRocyIsInNldmVuZWlnaHRocyIsIm9uZXRoaXJkIiwidHdvdGhpcmRzIiwiemVyb3N1cGVyaW9yIiwib25lc3VwZXJpb3IiLCJ0d29zdXBlcmlvciIsInRocmVlc3VwZXJpb3IiLCJmb3Vyc3VwZXJpb3IiLCJmaXZlc3VwZXJpb3IiLCJzaXhzdXBlcmlvciIsInNldmVuc3VwZXJpb3IiLCJlaWdodHN1cGVyaW9yIiwibmluZXN1cGVyaW9yIiwiemVyb2luZmVyaW9yIiwib25laW5mZXJpb3IiLCJ0d29pbmZlcmlvciIsInRocmVlaW5mZXJpb3IiLCJmb3VyaW5mZXJpb3IiLCJmaXZlaW5mZXJpb3IiLCJzaXhpbmZlcmlvciIsInNldmVuaW5mZXJpb3IiLCJlaWdodGluZmVyaW9yIiwibmluZWluZmVyaW9yIiwiY2VudGluZmVyaW9yIiwiZG9sbGFyaW5mZXJpb3IiLCJwZXJpb2RpbmZlcmlvciIsImNvbW1haW5mZXJpb3IiXSxFaT1bIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsInNwYWNlIiwiZXhjbGFtc21hbGwiLCJIdW5nYXJ1bWxhdXRzbWFsbCIsIiIsImRvbGxhcm9sZHN0eWxlIiwiZG9sbGFyc3VwZXJpb3IiLCJhbXBlcnNhbmRzbWFsbCIsIkFjdXRlc21hbGwiLCJwYXJlbmxlZnRzdXBlcmlvciIsInBhcmVucmlnaHRzdXBlcmlvciIsInR3b2RvdGVubGVhZGVyIiwib25lZG90ZW5sZWFkZXIiLCJjb21tYSIsImh5cGhlbiIsInBlcmlvZCIsImZyYWN0aW9uIiwiemVyb29sZHN0eWxlIiwib25lb2xkc3R5bGUiLCJ0d29vbGRzdHlsZSIsInRocmVlb2xkc3R5bGUiLCJmb3Vyb2xkc3R5bGUiLCJmaXZlb2xkc3R5bGUiLCJzaXhvbGRzdHlsZSIsInNldmVub2xkc3R5bGUiLCJlaWdodG9sZHN0eWxlIiwibmluZW9sZHN0eWxlIiwiY29sb24iLCJzZW1pY29sb24iLCJjb21tYXN1cGVyaW9yIiwidGhyZWVxdWFydGVyc2VtZGFzaCIsInBlcmlvZHN1cGVyaW9yIiwicXVlc3Rpb25zbWFsbCIsIiIsImFzdXBlcmlvciIsImJzdXBlcmlvciIsImNlbnRzdXBlcmlvciIsImRzdXBlcmlvciIsImVzdXBlcmlvciIsIiIsIiIsIiIsImlzdXBlcmlvciIsIiIsIiIsImxzdXBlcmlvciIsIm1zdXBlcmlvciIsIm5zdXBlcmlvciIsIm9zdXBlcmlvciIsIiIsIiIsInJzdXBlcmlvciIsInNzdXBlcmlvciIsInRzdXBlcmlvciIsIiIsImZmIiwiZmkiLCJmbCIsImZmaSIsImZmbCIsInBhcmVubGVmdGluZmVyaW9yIiwiIiwicGFyZW5yaWdodGluZmVyaW9yIiwiQ2lyY3VtZmxleHNtYWxsIiwiaHlwaGVuc3VwZXJpb3IiLCJHcmF2ZXNtYWxsIiwiQXNtYWxsIiwiQnNtYWxsIiwiQ3NtYWxsIiwiRHNtYWxsIiwiRXNtYWxsIiwiRnNtYWxsIiwiR3NtYWxsIiwiSHNtYWxsIiwiSXNtYWxsIiwiSnNtYWxsIiwiS3NtYWxsIiwiTHNtYWxsIiwiTXNtYWxsIiwiTnNtYWxsIiwiT3NtYWxsIiwiUHNtYWxsIiwiUXNtYWxsIiwiUnNtYWxsIiwiU3NtYWxsIiwiVHNtYWxsIiwiVXNtYWxsIiwiVnNtYWxsIiwiV3NtYWxsIiwiWHNtYWxsIiwiWXNtYWxsIiwiWnNtYWxsIiwiY29sb25tb25ldGFyeSIsIm9uZWZpdHRlZCIsInJ1cGlhaCIsIlRpbGRlc21hbGwiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCJleGNsYW1kb3duc21hbGwiLCJjZW50b2xkc3R5bGUiLCJMc2xhc2hzbWFsbCIsIiIsIiIsIlNjYXJvbnNtYWxsIiwiWmNhcm9uc21hbGwiLCJEaWVyZXNpc3NtYWxsIiwiQnJldmVzbWFsbCIsIkNhcm9uc21hbGwiLCIiLCJEb3RhY2NlbnRzbWFsbCIsIiIsIiIsIk1hY3JvbnNtYWxsIiwiIiwiIiwiZmlndXJlZGFzaCIsImh5cGhlbmluZmVyaW9yIiwiIiwiIiwiT2dvbmVrc21hbGwiLCJSaW5nc21hbGwiLCJDZWRpbGxhc21hbGwiLCIiLCIiLCIiLCJvbmVxdWFydGVyIiwib25laGFsZiIsInRocmVlcXVhcnRlcnMiLCJxdWVzdGlvbmRvd25zbWFsbCIsIm9uZWVpZ2h0aCIsInRocmVlZWlnaHRocyIsImZpdmVlaWdodGhzIiwic2V2ZW5laWdodGhzIiwib25ldGhpcmQiLCJ0d290aGlyZHMiLCIiLCIiLCJ6ZXJvc3VwZXJpb3IiLCJvbmVzdXBlcmlvciIsInR3b3N1cGVyaW9yIiwidGhyZWVzdXBlcmlvciIsImZvdXJzdXBlcmlvciIsImZpdmVzdXBlcmlvciIsInNpeHN1cGVyaW9yIiwic2V2ZW5zdXBlcmlvciIsImVpZ2h0c3VwZXJpb3IiLCJuaW5lc3VwZXJpb3IiLCJ6ZXJvaW5mZXJpb3IiLCJvbmVpbmZlcmlvciIsInR3b2luZmVyaW9yIiwidGhyZWVpbmZlcmlvciIsImZvdXJpbmZlcmlvciIsImZpdmVpbmZlcmlvciIsInNpeGluZmVyaW9yIiwic2V2ZW5pbmZlcmlvciIsImVpZ2h0aW5mZXJpb3IiLCJuaW5laW5mZXJpb3IiLCJjZW50aW5mZXJpb3IiLCJkb2xsYXJpbmZlcmlvciIsInBlcmlvZGluZmVyaW9yIiwiY29tbWFpbmZlcmlvciIsIkFncmF2ZXNtYWxsIiwiQWFjdXRlc21hbGwiLCJBY2lyY3VtZmxleHNtYWxsIiwiQXRpbGRlc21hbGwiLCJBZGllcmVzaXNzbWFsbCIsIkFyaW5nc21hbGwiLCJBRXNtYWxsIiwiQ2NlZGlsbGFzbWFsbCIsIkVncmF2ZXNtYWxsIiwiRWFjdXRlc21hbGwiLCJFY2lyY3VtZmxleHNtYWxsIiwiRWRpZXJlc2lzc21hbGwiLCJJZ3JhdmVzbWFsbCIsIklhY3V0ZXNtYWxsIiwiSWNpcmN1bWZsZXhzbWFsbCIsIklkaWVyZXNpc3NtYWxsIiwiRXRoc21hbGwiLCJOdGlsZGVzbWFsbCIsIk9ncmF2ZXNtYWxsIiwiT2FjdXRlc21hbGwiLCJPY2lyY3VtZmxleHNtYWxsIiwiT3RpbGRlc21hbGwiLCJPZGllcmVzaXNzbWFsbCIsIk9Fc21hbGwiLCJPc2xhc2hzbWFsbCIsIlVncmF2ZXNtYWxsIiwiVWFjdXRlc21hbGwiLCJVY2lyY3VtZmxleHNtYWxsIiwiVWRpZXJlc2lzc21hbGwiLCJZYWN1dGVzbWFsbCIsIlRob3Juc21hbGwiLCJZZGllcmVzaXNzbWFsbCJdLHVpPVsiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwic3BhY2UiLCJleGNsYW1zbWFsbCIsIkh1bmdhcnVtbGF1dHNtYWxsIiwiY2VudG9sZHN0eWxlIiwiZG9sbGFyb2xkc3R5bGUiLCJkb2xsYXJzdXBlcmlvciIsImFtcGVyc2FuZHNtYWxsIiwiQWN1dGVzbWFsbCIsInBhcmVubGVmdHN1cGVyaW9yIiwicGFyZW5yaWdodHN1cGVyaW9yIiwidHdvZG90ZW5sZWFkZXIiLCJvbmVkb3RlbmxlYWRlciIsImNvbW1hIiwiaHlwaGVuIiwicGVyaW9kIiwiZnJhY3Rpb24iLCJ6ZXJvb2xkc3R5bGUiLCJvbmVvbGRzdHlsZSIsInR3b29sZHN0eWxlIiwidGhyZWVvbGRzdHlsZSIsImZvdXJvbGRzdHlsZSIsImZpdmVvbGRzdHlsZSIsInNpeG9sZHN0eWxlIiwic2V2ZW5vbGRzdHlsZSIsImVpZ2h0b2xkc3R5bGUiLCJuaW5lb2xkc3R5bGUiLCJjb2xvbiIsInNlbWljb2xvbiIsIiIsInRocmVlcXVhcnRlcnNlbWRhc2giLCIiLCJxdWVzdGlvbnNtYWxsIiwiIiwiIiwiIiwiIiwiRXRoc21hbGwiLCIiLCIiLCJvbmVxdWFydGVyIiwib25laGFsZiIsInRocmVlcXVhcnRlcnMiLCJvbmVlaWdodGgiLCJ0aHJlZWVpZ2h0aHMiLCJmaXZlZWlnaHRocyIsInNldmVuZWlnaHRocyIsIm9uZXRoaXJkIiwidHdvdGhpcmRzIiwiIiwiIiwiIiwiIiwiIiwiIiwiZmYiLCJmaSIsImZsIiwiZmZpIiwiZmZsIiwicGFyZW5sZWZ0aW5mZXJpb3IiLCIiLCJwYXJlbnJpZ2h0aW5mZXJpb3IiLCJDaXJjdW1mbGV4c21hbGwiLCJoeXBoZW5pbmZlcmlvciIsIkdyYXZlc21hbGwiLCJBc21hbGwiLCJCc21hbGwiLCJDc21hbGwiLCJEc21hbGwiLCJFc21hbGwiLCJGc21hbGwiLCJHc21hbGwiLCJIc21hbGwiLCJJc21hbGwiLCJKc21hbGwiLCJLc21hbGwiLCJMc21hbGwiLCJNc21hbGwiLCJOc21hbGwiLCJPc21hbGwiLCJQc21hbGwiLCJRc21hbGwiLCJSc21hbGwiLCJTc21hbGwiLCJUc21hbGwiLCJVc21hbGwiLCJWc21hbGwiLCJXc21hbGwiLCJYc21hbGwiLCJZc21hbGwiLCJac21hbGwiLCJjb2xvbm1vbmV0YXJ5Iiwib25lZml0dGVkIiwicnVwaWFoIiwiVGlsZGVzbWFsbCIsIiIsIiIsImFzdXBlcmlvciIsImNlbnRzdXBlcmlvciIsIiIsIiIsIiIsIiIsIkFhY3V0ZXNtYWxsIiwiQWdyYXZlc21hbGwiLCJBY2lyY3VtZmxleHNtYWxsIiwiQWRpZXJlc2lzc21hbGwiLCJBdGlsZGVzbWFsbCIsIkFyaW5nc21hbGwiLCJDY2VkaWxsYXNtYWxsIiwiRWFjdXRlc21hbGwiLCJFZ3JhdmVzbWFsbCIsIkVjaXJjdW1mbGV4c21hbGwiLCJFZGllcmVzaXNzbWFsbCIsIklhY3V0ZXNtYWxsIiwiSWdyYXZlc21hbGwiLCJJY2lyY3VtZmxleHNtYWxsIiwiSWRpZXJlc2lzc21hbGwiLCJOdGlsZGVzbWFsbCIsIk9hY3V0ZXNtYWxsIiwiT2dyYXZlc21hbGwiLCJPY2lyY3VtZmxleHNtYWxsIiwiT2RpZXJlc2lzc21hbGwiLCJPdGlsZGVzbWFsbCIsIlVhY3V0ZXNtYWxsIiwiVWdyYXZlc21hbGwiLCJVY2lyY3VtZmxleHNtYWxsIiwiVWRpZXJlc2lzc21hbGwiLCIiLCJlaWdodHN1cGVyaW9yIiwiZm91cmluZmVyaW9yIiwidGhyZWVpbmZlcmlvciIsInNpeGluZmVyaW9yIiwiZWlnaHRpbmZlcmlvciIsInNldmVuaW5mZXJpb3IiLCJTY2Fyb25zbWFsbCIsIiIsImNlbnRpbmZlcmlvciIsInR3b2luZmVyaW9yIiwiIiwiRGllcmVzaXNzbWFsbCIsIiIsIkNhcm9uc21hbGwiLCJvc3VwZXJpb3IiLCJmaXZlaW5mZXJpb3IiLCIiLCJjb21tYWluZmVyaW9yIiwicGVyaW9kaW5mZXJpb3IiLCJZYWN1dGVzbWFsbCIsIiIsImRvbGxhcmluZmVyaW9yIiwiIiwiIiwiVGhvcm5zbWFsbCIsIiIsIm5pbmVpbmZlcmlvciIsInplcm9pbmZlcmlvciIsIlpjYXJvbnNtYWxsIiwiQUVzbWFsbCIsIk9zbGFzaHNtYWxsIiwicXVlc3Rpb25kb3duc21hbGwiLCJvbmVpbmZlcmlvciIsIkxzbGFzaHNtYWxsIiwiIiwiIiwiIiwiIiwiIiwiIiwiQ2VkaWxsYXNtYWxsIiwiIiwiIiwiIiwiIiwiIiwiT0VzbWFsbCIsImZpZ3VyZWRhc2giLCJoeXBoZW5zdXBlcmlvciIsIiIsIiIsIiIsIiIsImV4Y2xhbWRvd25zbWFsbCIsIiIsIllkaWVyZXNpc3NtYWxsIiwiIiwib25lc3VwZXJpb3IiLCJ0d29zdXBlcmlvciIsInRocmVlc3VwZXJpb3IiLCJmb3Vyc3VwZXJpb3IiLCJmaXZlc3VwZXJpb3IiLCJzaXhzdXBlcmlvciIsInNldmVuc3VwZXJpb3IiLCJuaW5lc3VwZXJpb3IiLCJ6ZXJvc3VwZXJpb3IiLCIiLCJlc3VwZXJpb3IiLCJyc3VwZXJpb3IiLCJ0c3VwZXJpb3IiLCIiLCIiLCJpc3VwZXJpb3IiLCJzc3VwZXJpb3IiLCJkc3VwZXJpb3IiLCIiLCIiLCIiLCIiLCIiLCJsc3VwZXJpb3IiLCJPZ29uZWtzbWFsbCIsIkJyZXZlc21hbGwiLCJNYWNyb25zbWFsbCIsImJzdXBlcmlvciIsIm5zdXBlcmlvciIsIm1zdXBlcmlvciIsImNvbW1hc3VwZXJpb3IiLCJwZXJpb2RzdXBlcmlvciIsIkRvdGFjY2VudHNtYWxsIiwiUmluZ3NtYWxsIiwiIiwiIiwiIiwiIl0sZGk9WyIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCJzcGFjZSIsImV4Y2xhbSIsInF1b3RlZGJsIiwibnVtYmVyc2lnbiIsImRvbGxhciIsInBlcmNlbnQiLCJhbXBlcnNhbmQiLCJxdW90ZXNpbmdsZSIsInBhcmVubGVmdCIsInBhcmVucmlnaHQiLCJhc3RlcmlzayIsInBsdXMiLCJjb21tYSIsImh5cGhlbiIsInBlcmlvZCIsInNsYXNoIiwiemVybyIsIm9uZSIsInR3byIsInRocmVlIiwiZm91ciIsImZpdmUiLCJzaXgiLCJzZXZlbiIsImVpZ2h0IiwibmluZSIsImNvbG9uIiwic2VtaWNvbG9uIiwibGVzcyIsImVxdWFsIiwiZ3JlYXRlciIsInF1ZXN0aW9uIiwiYXQiLCJBIiwiQiIsIkMiLCJEIiwiRSIsIkYiLCJHIiwiSCIsIkkiLCJKIiwiSyIsIkwiLCJNIiwiTiIsIk8iLCJQIiwiUSIsIlIiLCJTIiwiVCIsIlUiLCJWIiwiVyIsIlgiLCJZIiwiWiIsImJyYWNrZXRsZWZ0IiwiYmFja3NsYXNoIiwiYnJhY2tldHJpZ2h0IiwiYXNjaWljaXJjdW0iLCJ1bmRlcnNjb3JlIiwiZ3JhdmUiLCJhIiwiYiIsImMiLCJkIiwiZSIsImYiLCJnIiwiaCIsImkiLCJqIiwiayIsImwiLCJtIiwibiIsIm8iLCJwIiwicSIsInIiLCJzIiwidCIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsImJyYWNlbGVmdCIsImJhciIsImJyYWNlcmlnaHQiLCJhc2NpaXRpbGRlIiwiIiwiQWRpZXJlc2lzIiwiQXJpbmciLCJDY2VkaWxsYSIsIkVhY3V0ZSIsIk50aWxkZSIsIk9kaWVyZXNpcyIsIlVkaWVyZXNpcyIsImFhY3V0ZSIsImFncmF2ZSIsImFjaXJjdW1mbGV4IiwiYWRpZXJlc2lzIiwiYXRpbGRlIiwiYXJpbmciLCJjY2VkaWxsYSIsImVhY3V0ZSIsImVncmF2ZSIsImVjaXJjdW1mbGV4IiwiZWRpZXJlc2lzIiwiaWFjdXRlIiwiaWdyYXZlIiwiaWNpcmN1bWZsZXgiLCJpZGllcmVzaXMiLCJudGlsZGUiLCJvYWN1dGUiLCJvZ3JhdmUiLCJvY2lyY3VtZmxleCIsIm9kaWVyZXNpcyIsIm90aWxkZSIsInVhY3V0ZSIsInVncmF2ZSIsInVjaXJjdW1mbGV4IiwidWRpZXJlc2lzIiwiZGFnZ2VyIiwiZGVncmVlIiwiY2VudCIsInN0ZXJsaW5nIiwic2VjdGlvbiIsImJ1bGxldCIsInBhcmFncmFwaCIsImdlcm1hbmRibHMiLCJyZWdpc3RlcmVkIiwiY29weXJpZ2h0IiwidHJhZGVtYXJrIiwiYWN1dGUiLCJkaWVyZXNpcyIsIm5vdGVxdWFsIiwiQUUiLCJPc2xhc2giLCJpbmZpbml0eSIsInBsdXNtaW51cyIsImxlc3NlcXVhbCIsImdyZWF0ZXJlcXVhbCIsInllbiIsIm11IiwicGFydGlhbGRpZmYiLCJzdW1tYXRpb24iLCJwcm9kdWN0IiwicGkiLCJpbnRlZ3JhbCIsIm9yZGZlbWluaW5lIiwib3JkbWFzY3VsaW5lIiwiT21lZ2EiLCJhZSIsIm9zbGFzaCIsInF1ZXN0aW9uZG93biIsImV4Y2xhbWRvd24iLCJsb2dpY2Fsbm90IiwicmFkaWNhbCIsImZsb3JpbiIsImFwcHJveGVxdWFsIiwiRGVsdGEiLCJndWlsbGVtb3RsZWZ0IiwiZ3VpbGxlbW90cmlnaHQiLCJlbGxpcHNpcyIsInNwYWNlIiwiQWdyYXZlIiwiQXRpbGRlIiwiT3RpbGRlIiwiT0UiLCJvZSIsImVuZGFzaCIsImVtZGFzaCIsInF1b3RlZGJsbGVmdCIsInF1b3RlZGJscmlnaHQiLCJxdW90ZWxlZnQiLCJxdW90ZXJpZ2h0IiwiZGl2aWRlIiwibG96ZW5nZSIsInlkaWVyZXNpcyIsIllkaWVyZXNpcyIsImZyYWN0aW9uIiwiY3VycmVuY3kiLCJndWlsc2luZ2xsZWZ0IiwiZ3VpbHNpbmdscmlnaHQiLCJmaSIsImZsIiwiZGFnZ2VyZGJsIiwicGVyaW9kY2VudGVyZWQiLCJxdW90ZXNpbmdsYmFzZSIsInF1b3RlZGJsYmFzZSIsInBlcnRob3VzYW5kIiwiQWNpcmN1bWZsZXgiLCJFY2lyY3VtZmxleCIsIkFhY3V0ZSIsIkVkaWVyZXNpcyIsIkVncmF2ZSIsIklhY3V0ZSIsIkljaXJjdW1mbGV4IiwiSWRpZXJlc2lzIiwiSWdyYXZlIiwiT2FjdXRlIiwiT2NpcmN1bWZsZXgiLCJhcHBsZSIsIk9ncmF2ZSIsIlVhY3V0ZSIsIlVjaXJjdW1mbGV4IiwiVWdyYXZlIiwiZG90bGVzc2kiLCJjaXJjdW1mbGV4IiwidGlsZGUiLCJtYWNyb24iLCJicmV2ZSIsImRvdGFjY2VudCIsInJpbmciLCJjZWRpbGxhIiwiaHVuZ2FydW1sYXV0Iiwib2dvbmVrIiwiY2Fyb24iXSxmaT1bIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsInNwYWNlIiwiZXhjbGFtIiwicXVvdGVkYmwiLCJudW1iZXJzaWduIiwiZG9sbGFyIiwicGVyY2VudCIsImFtcGVyc2FuZCIsInF1b3RlcmlnaHQiLCJwYXJlbmxlZnQiLCJwYXJlbnJpZ2h0IiwiYXN0ZXJpc2siLCJwbHVzIiwiY29tbWEiLCJoeXBoZW4iLCJwZXJpb2QiLCJzbGFzaCIsInplcm8iLCJvbmUiLCJ0d28iLCJ0aHJlZSIsImZvdXIiLCJmaXZlIiwic2l4Iiwic2V2ZW4iLCJlaWdodCIsIm5pbmUiLCJjb2xvbiIsInNlbWljb2xvbiIsImxlc3MiLCJlcXVhbCIsImdyZWF0ZXIiLCJxdWVzdGlvbiIsImF0IiwiQSIsIkIiLCJDIiwiRCIsIkUiLCJGIiwiRyIsIkgiLCJJIiwiSiIsIksiLCJMIiwiTSIsIk4iLCJPIiwiUCIsIlEiLCJSIiwiUyIsIlQiLCJVIiwiViIsIlciLCJYIiwiWSIsIloiLCJicmFja2V0bGVmdCIsImJhY2tzbGFzaCIsImJyYWNrZXRyaWdodCIsImFzY2lpY2lyY3VtIiwidW5kZXJzY29yZSIsInF1b3RlbGVmdCIsImEiLCJiIiwiYyIsImQiLCJlIiwiZiIsImciLCJoIiwiaSIsImoiLCJrIiwibCIsIm0iLCJuIiwibyIsInAiLCJxIiwiciIsInMiLCJ0IiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiYnJhY2VsZWZ0IiwiYmFyIiwiYnJhY2VyaWdodCIsImFzY2lpdGlsZGUiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCJleGNsYW1kb3duIiwiY2VudCIsInN0ZXJsaW5nIiwiZnJhY3Rpb24iLCJ5ZW4iLCJmbG9yaW4iLCJzZWN0aW9uIiwiY3VycmVuY3kiLCJxdW90ZXNpbmdsZSIsInF1b3RlZGJsbGVmdCIsImd1aWxsZW1vdGxlZnQiLCJndWlsc2luZ2xsZWZ0IiwiZ3VpbHNpbmdscmlnaHQiLCJmaSIsImZsIiwiIiwiZW5kYXNoIiwiZGFnZ2VyIiwiZGFnZ2VyZGJsIiwicGVyaW9kY2VudGVyZWQiLCIiLCJwYXJhZ3JhcGgiLCJidWxsZXQiLCJxdW90ZXNpbmdsYmFzZSIsInF1b3RlZGJsYmFzZSIsInF1b3RlZGJscmlnaHQiLCJndWlsbGVtb3RyaWdodCIsImVsbGlwc2lzIiwicGVydGhvdXNhbmQiLCIiLCJxdWVzdGlvbmRvd24iLCIiLCJncmF2ZSIsImFjdXRlIiwiY2lyY3VtZmxleCIsInRpbGRlIiwibWFjcm9uIiwiYnJldmUiLCJkb3RhY2NlbnQiLCJkaWVyZXNpcyIsIiIsInJpbmciLCJjZWRpbGxhIiwiIiwiaHVuZ2FydW1sYXV0Iiwib2dvbmVrIiwiY2Fyb24iLCJlbWRhc2giLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCJBRSIsIiIsIm9yZGZlbWluaW5lIiwiIiwiIiwiIiwiIiwiTHNsYXNoIiwiT3NsYXNoIiwiT0UiLCJvcmRtYXNjdWxpbmUiLCIiLCIiLCIiLCIiLCIiLCJhZSIsIiIsIiIsIiIsImRvdGxlc3NpIiwiIiwiIiwibHNsYXNoIiwib3NsYXNoIiwib2UiLCJnZXJtYW5kYmxzIiwiIiwiIiwiIiwiIl0scGk9WyIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCJzcGFjZSIsImV4Y2xhbSIsInF1b3RlZGJsIiwibnVtYmVyc2lnbiIsImRvbGxhciIsInBlcmNlbnQiLCJhbXBlcnNhbmQiLCJxdW90ZXNpbmdsZSIsInBhcmVubGVmdCIsInBhcmVucmlnaHQiLCJhc3RlcmlzayIsInBsdXMiLCJjb21tYSIsImh5cGhlbiIsInBlcmlvZCIsInNsYXNoIiwiemVybyIsIm9uZSIsInR3byIsInRocmVlIiwiZm91ciIsImZpdmUiLCJzaXgiLCJzZXZlbiIsImVpZ2h0IiwibmluZSIsImNvbG9uIiwic2VtaWNvbG9uIiwibGVzcyIsImVxdWFsIiwiZ3JlYXRlciIsInF1ZXN0aW9uIiwiYXQiLCJBIiwiQiIsIkMiLCJEIiwiRSIsIkYiLCJHIiwiSCIsIkkiLCJKIiwiSyIsIkwiLCJNIiwiTiIsIk8iLCJQIiwiUSIsIlIiLCJTIiwiVCIsIlUiLCJWIiwiVyIsIlgiLCJZIiwiWiIsImJyYWNrZXRsZWZ0IiwiYmFja3NsYXNoIiwiYnJhY2tldHJpZ2h0IiwiYXNjaWljaXJjdW0iLCJ1bmRlcnNjb3JlIiwiZ3JhdmUiLCJhIiwiYiIsImMiLCJkIiwiZSIsImYiLCJnIiwiaCIsImkiLCJqIiwiayIsImwiLCJtIiwibiIsIm8iLCJwIiwicSIsInIiLCJzIiwidCIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsImJyYWNlbGVmdCIsImJhciIsImJyYWNlcmlnaHQiLCJhc2NpaXRpbGRlIiwiYnVsbGV0IiwiRXVybyIsImJ1bGxldCIsInF1b3Rlc2luZ2xiYXNlIiwiZmxvcmluIiwicXVvdGVkYmxiYXNlIiwiZWxsaXBzaXMiLCJkYWdnZXIiLCJkYWdnZXJkYmwiLCJjaXJjdW1mbGV4IiwicGVydGhvdXNhbmQiLCJTY2Fyb24iLCJndWlsc2luZ2xsZWZ0IiwiT0UiLCJidWxsZXQiLCJaY2Fyb24iLCJidWxsZXQiLCJidWxsZXQiLCJxdW90ZWxlZnQiLCJxdW90ZXJpZ2h0IiwicXVvdGVkYmxsZWZ0IiwicXVvdGVkYmxyaWdodCIsImJ1bGxldCIsImVuZGFzaCIsImVtZGFzaCIsInRpbGRlIiwidHJhZGVtYXJrIiwic2Nhcm9uIiwiZ3VpbHNpbmdscmlnaHQiLCJvZSIsImJ1bGxldCIsInpjYXJvbiIsIllkaWVyZXNpcyIsInNwYWNlIiwiZXhjbGFtZG93biIsImNlbnQiLCJzdGVybGluZyIsImN1cnJlbmN5IiwieWVuIiwiYnJva2VuYmFyIiwic2VjdGlvbiIsImRpZXJlc2lzIiwiY29weXJpZ2h0Iiwib3JkZmVtaW5pbmUiLCJndWlsbGVtb3RsZWZ0IiwibG9naWNhbG5vdCIsImh5cGhlbiIsInJlZ2lzdGVyZWQiLCJtYWNyb24iLCJkZWdyZWUiLCJwbHVzbWludXMiLCJ0d29zdXBlcmlvciIsInRocmVlc3VwZXJpb3IiLCJhY3V0ZSIsIm11IiwicGFyYWdyYXBoIiwicGVyaW9kY2VudGVyZWQiLCJjZWRpbGxhIiwib25lc3VwZXJpb3IiLCJvcmRtYXNjdWxpbmUiLCJndWlsbGVtb3RyaWdodCIsIm9uZXF1YXJ0ZXIiLCJvbmVoYWxmIiwidGhyZWVxdWFydGVycyIsInF1ZXN0aW9uZG93biIsIkFncmF2ZSIsIkFhY3V0ZSIsIkFjaXJjdW1mbGV4IiwiQXRpbGRlIiwiQWRpZXJlc2lzIiwiQXJpbmciLCJBRSIsIkNjZWRpbGxhIiwiRWdyYXZlIiwiRWFjdXRlIiwiRWNpcmN1bWZsZXgiLCJFZGllcmVzaXMiLCJJZ3JhdmUiLCJJYWN1dGUiLCJJY2lyY3VtZmxleCIsIklkaWVyZXNpcyIsIkV0aCIsIk50aWxkZSIsIk9ncmF2ZSIsIk9hY3V0ZSIsIk9jaXJjdW1mbGV4IiwiT3RpbGRlIiwiT2RpZXJlc2lzIiwibXVsdGlwbHkiLCJPc2xhc2giLCJVZ3JhdmUiLCJVYWN1dGUiLCJVY2lyY3VtZmxleCIsIlVkaWVyZXNpcyIsIllhY3V0ZSIsIlRob3JuIiwiZ2VybWFuZGJscyIsImFncmF2ZSIsImFhY3V0ZSIsImFjaXJjdW1mbGV4IiwiYXRpbGRlIiwiYWRpZXJlc2lzIiwiYXJpbmciLCJhZSIsImNjZWRpbGxhIiwiZWdyYXZlIiwiZWFjdXRlIiwiZWNpcmN1bWZsZXgiLCJlZGllcmVzaXMiLCJpZ3JhdmUiLCJpYWN1dGUiLCJpY2lyY3VtZmxleCIsImlkaWVyZXNpcyIsImV0aCIsIm50aWxkZSIsIm9ncmF2ZSIsIm9hY3V0ZSIsIm9jaXJjdW1mbGV4Iiwib3RpbGRlIiwib2RpZXJlc2lzIiwiZGl2aWRlIiwib3NsYXNoIiwidWdyYXZlIiwidWFjdXRlIiwidWNpcmN1bWZsZXgiLCJ1ZGllcmVzaXMiLCJ5YWN1dGUiLCJ0aG9ybiIsInlkaWVyZXNpcyJdLG1pPVsiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwic3BhY2UiLCJleGNsYW0iLCJ1bml2ZXJzYWwiLCJudW1iZXJzaWduIiwiZXhpc3RlbnRpYWwiLCJwZXJjZW50IiwiYW1wZXJzYW5kIiwic3VjaHRoYXQiLCJwYXJlbmxlZnQiLCJwYXJlbnJpZ2h0IiwiYXN0ZXJpc2ttYXRoIiwicGx1cyIsImNvbW1hIiwibWludXMiLCJwZXJpb2QiLCJzbGFzaCIsInplcm8iLCJvbmUiLCJ0d28iLCJ0aHJlZSIsImZvdXIiLCJmaXZlIiwic2l4Iiwic2V2ZW4iLCJlaWdodCIsIm5pbmUiLCJjb2xvbiIsInNlbWljb2xvbiIsImxlc3MiLCJlcXVhbCIsImdyZWF0ZXIiLCJxdWVzdGlvbiIsImNvbmdydWVudCIsIkFscGhhIiwiQmV0YSIsIkNoaSIsIkRlbHRhIiwiRXBzaWxvbiIsIlBoaSIsIkdhbW1hIiwiRXRhIiwiSW90YSIsInRoZXRhMSIsIkthcHBhIiwiTGFtYmRhIiwiTXUiLCJOdSIsIk9taWNyb24iLCJQaSIsIlRoZXRhIiwiUmhvIiwiU2lnbWEiLCJUYXUiLCJVcHNpbG9uIiwic2lnbWExIiwiT21lZ2EiLCJYaSIsIlBzaSIsIlpldGEiLCJicmFja2V0bGVmdCIsInRoZXJlZm9yZSIsImJyYWNrZXRyaWdodCIsInBlcnBlbmRpY3VsYXIiLCJ1bmRlcnNjb3JlIiwicmFkaWNhbGV4IiwiYWxwaGEiLCJiZXRhIiwiY2hpIiwiZGVsdGEiLCJlcHNpbG9uIiwicGhpIiwiZ2FtbWEiLCJldGEiLCJpb3RhIiwicGhpMSIsImthcHBhIiwibGFtYmRhIiwibXUiLCJudSIsIm9taWNyb24iLCJwaSIsInRoZXRhIiwicmhvIiwic2lnbWEiLCJ0YXUiLCJ1cHNpbG9uIiwib21lZ2ExIiwib21lZ2EiLCJ4aSIsInBzaSIsInpldGEiLCJicmFjZWxlZnQiLCJiYXIiLCJicmFjZXJpZ2h0Iiwic2ltaWxhciIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIsIkV1cm8iLCJVcHNpbG9uMSIsIm1pbnV0ZSIsImxlc3NlcXVhbCIsImZyYWN0aW9uIiwiaW5maW5pdHkiLCJmbG9yaW4iLCJjbHViIiwiZGlhbW9uZCIsImhlYXJ0Iiwic3BhZGUiLCJhcnJvd2JvdGgiLCJhcnJvd2xlZnQiLCJhcnJvd3VwIiwiYXJyb3dyaWdodCIsImFycm93ZG93biIsImRlZ3JlZSIsInBsdXNtaW51cyIsInNlY29uZCIsImdyZWF0ZXJlcXVhbCIsIm11bHRpcGx5IiwicHJvcG9ydGlvbmFsIiwicGFydGlhbGRpZmYiLCJidWxsZXQiLCJkaXZpZGUiLCJub3RlcXVhbCIsImVxdWl2YWxlbmNlIiwiYXBwcm94ZXF1YWwiLCJlbGxpcHNpcyIsImFycm93dmVydGV4IiwiYXJyb3dob3JpemV4IiwiY2FycmlhZ2VyZXR1cm4iLCJhbGVwaCIsIklmcmFrdHVyIiwiUmZyYWt0dXIiLCJ3ZWllcnN0cmFzcyIsImNpcmNsZW11bHRpcGx5IiwiY2lyY2xlcGx1cyIsImVtcHR5c2V0IiwiaW50ZXJzZWN0aW9uIiwidW5pb24iLCJwcm9wZXJzdXBlcnNldCIsInJlZmxleHN1cGVyc2V0Iiwibm90c3Vic2V0IiwicHJvcGVyc3Vic2V0IiwicmVmbGV4c3Vic2V0IiwiZWxlbWVudCIsIm5vdGVsZW1lbnQiLCJhbmdsZSIsImdyYWRpZW50IiwicmVnaXN0ZXJzZXJpZiIsImNvcHlyaWdodHNlcmlmIiwidHJhZGVtYXJrc2VyaWYiLCJwcm9kdWN0IiwicmFkaWNhbCIsImRvdG1hdGgiLCJsb2dpY2Fsbm90IiwibG9naWNhbGFuZCIsImxvZ2ljYWxvciIsImFycm93ZGJsYm90aCIsImFycm93ZGJsbGVmdCIsImFycm93ZGJsdXAiLCJhcnJvd2RibHJpZ2h0IiwiYXJyb3dkYmxkb3duIiwibG96ZW5nZSIsImFuZ2xlbGVmdCIsInJlZ2lzdGVyc2FucyIsImNvcHlyaWdodHNhbnMiLCJ0cmFkZW1hcmtzYW5zIiwic3VtbWF0aW9uIiwicGFyZW5sZWZ0dHAiLCJwYXJlbmxlZnRleCIsInBhcmVubGVmdGJ0IiwiYnJhY2tldGxlZnR0cCIsImJyYWNrZXRsZWZ0ZXgiLCJicmFja2V0bGVmdGJ0IiwiYnJhY2VsZWZ0dHAiLCJicmFjZWxlZnRtaWQiLCJicmFjZWxlZnRidCIsImJyYWNlZXgiLCIiLCJhbmdsZXJpZ2h0IiwiaW50ZWdyYWwiLCJpbnRlZ3JhbHRwIiwiaW50ZWdyYWxleCIsImludGVncmFsYnQiLCJwYXJlbnJpZ2h0dHAiLCJwYXJlbnJpZ2h0ZXgiLCJwYXJlbnJpZ2h0YnQiLCJicmFja2V0cmlnaHR0cCIsImJyYWNrZXRyaWdodGV4IiwiYnJhY2tldHJpZ2h0YnQiLCJicmFjZXJpZ2h0dHAiLCJicmFjZXJpZ2h0bWlkIiwiYnJhY2VyaWdodGJ0IiwiIl0seWk9WyIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCJzcGFjZSIsImExIiwiYTIiLCJhMjAyIiwiYTMiLCJhNCIsImE1IiwiYTExOSIsImExMTgiLCJhMTE3IiwiYTExIiwiYTEyIiwiYTEzIiwiYTE0IiwiYTE1IiwiYTE2IiwiYTEwNSIsImExNyIsImExOCIsImExOSIsImEyMCIsImEyMSIsImEyMiIsImEyMyIsImEyNCIsImEyNSIsImEyNiIsImEyNyIsImEyOCIsImE2IiwiYTciLCJhOCIsImE5IiwiYTEwIiwiYTI5IiwiYTMwIiwiYTMxIiwiYTMyIiwiYTMzIiwiYTM0IiwiYTM1IiwiYTM2IiwiYTM3IiwiYTM4IiwiYTM5IiwiYTQwIiwiYTQxIiwiYTQyIiwiYTQzIiwiYTQ0IiwiYTQ1IiwiYTQ2IiwiYTQ3IiwiYTQ4IiwiYTQ5IiwiYTUwIiwiYTUxIiwiYTUyIiwiYTUzIiwiYTU0IiwiYTU1IiwiYTU2IiwiYTU3IiwiYTU4IiwiYTU5IiwiYTYwIiwiYTYxIiwiYTYyIiwiYTYzIiwiYTY0IiwiYTY1IiwiYTY2IiwiYTY3IiwiYTY4IiwiYTY5IiwiYTcwIiwiYTcxIiwiYTcyIiwiYTczIiwiYTc0IiwiYTIwMyIsImE3NSIsImEyMDQiLCJhNzYiLCJhNzciLCJhNzgiLCJhNzkiLCJhODEiLCJhODIiLCJhODMiLCJhODQiLCJhOTciLCJhOTgiLCJhOTkiLCJhMTAwIiwiIiwiYTg5IiwiYTkwIiwiYTkzIiwiYTk0IiwiYTkxIiwiYTkyIiwiYTIwNSIsImE4NSIsImEyMDYiLCJhODYiLCJhODciLCJhODgiLCJhOTUiLCJhOTYiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCJhMTAxIiwiYTEwMiIsImExMDMiLCJhMTA0IiwiYTEwNiIsImExMDciLCJhMTA4IiwiYTExMiIsImExMTEiLCJhMTEwIiwiYTEwOSIsImExMjAiLCJhMTIxIiwiYTEyMiIsImExMjMiLCJhMTI0IiwiYTEyNSIsImExMjYiLCJhMTI3IiwiYTEyOCIsImExMjkiLCJhMTMwIiwiYTEzMSIsImExMzIiLCJhMTMzIiwiYTEzNCIsImExMzUiLCJhMTM2IiwiYTEzNyIsImExMzgiLCJhMTM5IiwiYTE0MCIsImExNDEiLCJhMTQyIiwiYTE0MyIsImExNDQiLCJhMTQ1IiwiYTE0NiIsImExNDciLCJhMTQ4IiwiYTE0OSIsImExNTAiLCJhMTUxIiwiYTE1MiIsImExNTMiLCJhMTU0IiwiYTE1NSIsImExNTYiLCJhMTU3IiwiYTE1OCIsImExNTkiLCJhMTYwIiwiYTE2MSIsImExNjMiLCJhMTY0IiwiYTE5NiIsImExNjUiLCJhMTkyIiwiYTE2NiIsImExNjciLCJhMTY4IiwiYTE2OSIsImExNzAiLCJhMTcxIiwiYTE3MiIsImExNzMiLCJhMTYyIiwiYTE3NCIsImExNzUiLCJhMTc2IiwiYTE3NyIsImExNzgiLCJhMTc5IiwiYTE5MyIsImExODAiLCJhMTk5IiwiYTE4MSIsImEyMDAiLCJhMTgyIiwiIiwiYTIwMSIsImExODMiLCJhMTg0IiwiYTE5NyIsImExODUiLCJhMTk0IiwiYTE5OCIsImExODYiLCJhMTk1IiwiYTE4NyIsImExODgiLCJhMTg5IiwiYTE5MCIsImExOTEiLCIiXTtmdW5jdGlvbiBnZXRFbmNvZGluZyhlKXtzd2l0Y2goZSl7Y2FzZSJXaW5BbnNpRW5jb2RpbmciOnJldHVybiBwaTtjYXNlIlN0YW5kYXJkRW5jb2RpbmciOnJldHVybiBmaTtjYXNlIk1hY1JvbWFuRW5jb2RpbmciOnJldHVybiBkaTtjYXNlIlN5bWJvbFNldEVuY29kaW5nIjpyZXR1cm4gbWk7Y2FzZSJaYXBmRGluZ2JhdHNFbmNvZGluZyI6cmV0dXJuIHlpO2Nhc2UiRXhwZXJ0RW5jb2RpbmciOnJldHVybiBFaTtjYXNlIk1hY0V4cGVydEVuY29kaW5nIjpyZXR1cm4gdWk7ZGVmYXVsdDpyZXR1cm4gbnVsbH19Y29uc3Qgd2k9WyIubm90ZGVmIiwic3BhY2UiLCJleGNsYW0iLCJxdW90ZWRibCIsIm51bWJlcnNpZ24iLCJkb2xsYXIiLCJwZXJjZW50IiwiYW1wZXJzYW5kIiwicXVvdGVyaWdodCIsInBhcmVubGVmdCIsInBhcmVucmlnaHQiLCJhc3RlcmlzayIsInBsdXMiLCJjb21tYSIsImh5cGhlbiIsInBlcmlvZCIsInNsYXNoIiwiemVybyIsIm9uZSIsInR3byIsInRocmVlIiwiZm91ciIsImZpdmUiLCJzaXgiLCJzZXZlbiIsImVpZ2h0IiwibmluZSIsImNvbG9uIiwic2VtaWNvbG9uIiwibGVzcyIsImVxdWFsIiwiZ3JlYXRlciIsInF1ZXN0aW9uIiwiYXQiLCJBIiwiQiIsIkMiLCJEIiwiRSIsIkYiLCJHIiwiSCIsIkkiLCJKIiwiSyIsIkwiLCJNIiwiTiIsIk8iLCJQIiwiUSIsIlIiLCJTIiwiVCIsIlUiLCJWIiwiVyIsIlgiLCJZIiwiWiIsImJyYWNrZXRsZWZ0IiwiYmFja3NsYXNoIiwiYnJhY2tldHJpZ2h0IiwiYXNjaWljaXJjdW0iLCJ1bmRlcnNjb3JlIiwicXVvdGVsZWZ0IiwiYSIsImIiLCJjIiwiZCIsImUiLCJmIiwiZyIsImgiLCJpIiwiaiIsImsiLCJsIiwibSIsIm4iLCJvIiwicCIsInEiLCJyIiwicyIsInQiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJicmFjZWxlZnQiLCJiYXIiLCJicmFjZXJpZ2h0IiwiYXNjaWl0aWxkZSIsImV4Y2xhbWRvd24iLCJjZW50Iiwic3RlcmxpbmciLCJmcmFjdGlvbiIsInllbiIsImZsb3JpbiIsInNlY3Rpb24iLCJjdXJyZW5jeSIsInF1b3Rlc2luZ2xlIiwicXVvdGVkYmxsZWZ0IiwiZ3VpbGxlbW90bGVmdCIsImd1aWxzaW5nbGxlZnQiLCJndWlsc2luZ2xyaWdodCIsImZpIiwiZmwiLCJlbmRhc2giLCJkYWdnZXIiLCJkYWdnZXJkYmwiLCJwZXJpb2RjZW50ZXJlZCIsInBhcmFncmFwaCIsImJ1bGxldCIsInF1b3Rlc2luZ2xiYXNlIiwicXVvdGVkYmxiYXNlIiwicXVvdGVkYmxyaWdodCIsImd1aWxsZW1vdHJpZ2h0IiwiZWxsaXBzaXMiLCJwZXJ0aG91c2FuZCIsInF1ZXN0aW9uZG93biIsImdyYXZlIiwiYWN1dGUiLCJjaXJjdW1mbGV4IiwidGlsZGUiLCJtYWNyb24iLCJicmV2ZSIsImRvdGFjY2VudCIsImRpZXJlc2lzIiwicmluZyIsImNlZGlsbGEiLCJodW5nYXJ1bWxhdXQiLCJvZ29uZWsiLCJjYXJvbiIsImVtZGFzaCIsIkFFIiwib3JkZmVtaW5pbmUiLCJMc2xhc2giLCJPc2xhc2giLCJPRSIsIm9yZG1hc2N1bGluZSIsImFlIiwiZG90bGVzc2kiLCJsc2xhc2giLCJvc2xhc2giLCJvZSIsImdlcm1hbmRibHMiLCJvbmVzdXBlcmlvciIsImxvZ2ljYWxub3QiLCJtdSIsInRyYWRlbWFyayIsIkV0aCIsIm9uZWhhbGYiLCJwbHVzbWludXMiLCJUaG9ybiIsIm9uZXF1YXJ0ZXIiLCJkaXZpZGUiLCJicm9rZW5iYXIiLCJkZWdyZWUiLCJ0aG9ybiIsInRocmVlcXVhcnRlcnMiLCJ0d29zdXBlcmlvciIsInJlZ2lzdGVyZWQiLCJtaW51cyIsImV0aCIsIm11bHRpcGx5IiwidGhyZWVzdXBlcmlvciIsImNvcHlyaWdodCIsIkFhY3V0ZSIsIkFjaXJjdW1mbGV4IiwiQWRpZXJlc2lzIiwiQWdyYXZlIiwiQXJpbmciLCJBdGlsZGUiLCJDY2VkaWxsYSIsIkVhY3V0ZSIsIkVjaXJjdW1mbGV4IiwiRWRpZXJlc2lzIiwiRWdyYXZlIiwiSWFjdXRlIiwiSWNpcmN1bWZsZXgiLCJJZGllcmVzaXMiLCJJZ3JhdmUiLCJOdGlsZGUiLCJPYWN1dGUiLCJPY2lyY3VtZmxleCIsIk9kaWVyZXNpcyIsIk9ncmF2ZSIsIk90aWxkZSIsIlNjYXJvbiIsIlVhY3V0ZSIsIlVjaXJjdW1mbGV4IiwiVWRpZXJlc2lzIiwiVWdyYXZlIiwiWWFjdXRlIiwiWWRpZXJlc2lzIiwiWmNhcm9uIiwiYWFjdXRlIiwiYWNpcmN1bWZsZXgiLCJhZGllcmVzaXMiLCJhZ3JhdmUiLCJhcmluZyIsImF0aWxkZSIsImNjZWRpbGxhIiwiZWFjdXRlIiwiZWNpcmN1bWZsZXgiLCJlZGllcmVzaXMiLCJlZ3JhdmUiLCJpYWN1dGUiLCJpY2lyY3VtZmxleCIsImlkaWVyZXNpcyIsImlncmF2ZSIsIm50aWxkZSIsIm9hY3V0ZSIsIm9jaXJjdW1mbGV4Iiwib2RpZXJlc2lzIiwib2dyYXZlIiwib3RpbGRlIiwic2Nhcm9uIiwidWFjdXRlIiwidWNpcmN1bWZsZXgiLCJ1ZGllcmVzaXMiLCJ1Z3JhdmUiLCJ5YWN1dGUiLCJ5ZGllcmVzaXMiLCJ6Y2Fyb24iLCJleGNsYW1zbWFsbCIsIkh1bmdhcnVtbGF1dHNtYWxsIiwiZG9sbGFyb2xkc3R5bGUiLCJkb2xsYXJzdXBlcmlvciIsImFtcGVyc2FuZHNtYWxsIiwiQWN1dGVzbWFsbCIsInBhcmVubGVmdHN1cGVyaW9yIiwicGFyZW5yaWdodHN1cGVyaW9yIiwidHdvZG90ZW5sZWFkZXIiLCJvbmVkb3RlbmxlYWRlciIsInplcm9vbGRzdHlsZSIsIm9uZW9sZHN0eWxlIiwidHdvb2xkc3R5bGUiLCJ0aHJlZW9sZHN0eWxlIiwiZm91cm9sZHN0eWxlIiwiZml2ZW9sZHN0eWxlIiwic2l4b2xkc3R5bGUiLCJzZXZlbm9sZHN0eWxlIiwiZWlnaHRvbGRzdHlsZSIsIm5pbmVvbGRzdHlsZSIsImNvbW1hc3VwZXJpb3IiLCJ0aHJlZXF1YXJ0ZXJzZW1kYXNoIiwicGVyaW9kc3VwZXJpb3IiLCJxdWVzdGlvbnNtYWxsIiwiYXN1cGVyaW9yIiwiYnN1cGVyaW9yIiwiY2VudHN1cGVyaW9yIiwiZHN1cGVyaW9yIiwiZXN1cGVyaW9yIiwiaXN1cGVyaW9yIiwibHN1cGVyaW9yIiwibXN1cGVyaW9yIiwibnN1cGVyaW9yIiwib3N1cGVyaW9yIiwicnN1cGVyaW9yIiwic3N1cGVyaW9yIiwidHN1cGVyaW9yIiwiZmYiLCJmZmkiLCJmZmwiLCJwYXJlbmxlZnRpbmZlcmlvciIsInBhcmVucmlnaHRpbmZlcmlvciIsIkNpcmN1bWZsZXhzbWFsbCIsImh5cGhlbnN1cGVyaW9yIiwiR3JhdmVzbWFsbCIsIkFzbWFsbCIsIkJzbWFsbCIsIkNzbWFsbCIsIkRzbWFsbCIsIkVzbWFsbCIsIkZzbWFsbCIsIkdzbWFsbCIsIkhzbWFsbCIsIklzbWFsbCIsIkpzbWFsbCIsIktzbWFsbCIsIkxzbWFsbCIsIk1zbWFsbCIsIk5zbWFsbCIsIk9zbWFsbCIsIlBzbWFsbCIsIlFzbWFsbCIsIlJzbWFsbCIsIlNzbWFsbCIsIlRzbWFsbCIsIlVzbWFsbCIsIlZzbWFsbCIsIldzbWFsbCIsIlhzbWFsbCIsIllzbWFsbCIsIlpzbWFsbCIsImNvbG9ubW9uZXRhcnkiLCJvbmVmaXR0ZWQiLCJydXBpYWgiLCJUaWxkZXNtYWxsIiwiZXhjbGFtZG93bnNtYWxsIiwiY2VudG9sZHN0eWxlIiwiTHNsYXNoc21hbGwiLCJTY2Fyb25zbWFsbCIsIlpjYXJvbnNtYWxsIiwiRGllcmVzaXNzbWFsbCIsIkJyZXZlc21hbGwiLCJDYXJvbnNtYWxsIiwiRG90YWNjZW50c21hbGwiLCJNYWNyb25zbWFsbCIsImZpZ3VyZWRhc2giLCJoeXBoZW5pbmZlcmlvciIsIk9nb25la3NtYWxsIiwiUmluZ3NtYWxsIiwiQ2VkaWxsYXNtYWxsIiwicXVlc3Rpb25kb3duc21hbGwiLCJvbmVlaWdodGgiLCJ0aHJlZWVpZ2h0aHMiLCJmaXZlZWlnaHRocyIsInNldmVuZWlnaHRocyIsIm9uZXRoaXJkIiwidHdvdGhpcmRzIiwiemVyb3N1cGVyaW9yIiwiZm91cnN1cGVyaW9yIiwiZml2ZXN1cGVyaW9yIiwic2l4c3VwZXJpb3IiLCJzZXZlbnN1cGVyaW9yIiwiZWlnaHRzdXBlcmlvciIsIm5pbmVzdXBlcmlvciIsInplcm9pbmZlcmlvciIsIm9uZWluZmVyaW9yIiwidHdvaW5mZXJpb3IiLCJ0aHJlZWluZmVyaW9yIiwiZm91cmluZmVyaW9yIiwiZml2ZWluZmVyaW9yIiwic2l4aW5mZXJpb3IiLCJzZXZlbmluZmVyaW9yIiwiZWlnaHRpbmZlcmlvciIsIm5pbmVpbmZlcmlvciIsImNlbnRpbmZlcmlvciIsImRvbGxhcmluZmVyaW9yIiwicGVyaW9kaW5mZXJpb3IiLCJjb21tYWluZmVyaW9yIiwiQWdyYXZlc21hbGwiLCJBYWN1dGVzbWFsbCIsIkFjaXJjdW1mbGV4c21hbGwiLCJBdGlsZGVzbWFsbCIsIkFkaWVyZXNpc3NtYWxsIiwiQXJpbmdzbWFsbCIsIkFFc21hbGwiLCJDY2VkaWxsYXNtYWxsIiwiRWdyYXZlc21hbGwiLCJFYWN1dGVzbWFsbCIsIkVjaXJjdW1mbGV4c21hbGwiLCJFZGllcmVzaXNzbWFsbCIsIklncmF2ZXNtYWxsIiwiSWFjdXRlc21hbGwiLCJJY2lyY3VtZmxleHNtYWxsIiwiSWRpZXJlc2lzc21hbGwiLCJFdGhzbWFsbCIsIk50aWxkZXNtYWxsIiwiT2dyYXZlc21hbGwiLCJPYWN1dGVzbWFsbCIsIk9jaXJjdW1mbGV4c21hbGwiLCJPdGlsZGVzbWFsbCIsIk9kaWVyZXNpc3NtYWxsIiwiT0VzbWFsbCIsIk9zbGFzaHNtYWxsIiwiVWdyYXZlc21hbGwiLCJVYWN1dGVzbWFsbCIsIlVjaXJjdW1mbGV4c21hbGwiLCJVZGllcmVzaXNzbWFsbCIsIllhY3V0ZXNtYWxsIiwiVGhvcm5zbWFsbCIsIllkaWVyZXNpc3NtYWxsIiwiMDAxLjAwMCIsIjAwMS4wMDEiLCIwMDEuMDAyIiwiMDAxLjAwMyIsIkJsYWNrIiwiQm9sZCIsIkJvb2siLCJMaWdodCIsIk1lZGl1bSIsIlJlZ3VsYXIiLCJSb21hbiIsIlNlbWlib2xkIl0sYmk9MzkxLERpPVtudWxsLHtpZDoiaHN0ZW0iLG1pbjoyLHN0YWNrQ2xlYXJpbmc6ITAsc3RlbTohMH0sbnVsbCx7aWQ6InZzdGVtIixtaW46MixzdGFja0NsZWFyaW5nOiEwLHN0ZW06ITB9LHtpZDoidm1vdmV0byIsbWluOjEsc3RhY2tDbGVhcmluZzohMH0se2lkOiJybGluZXRvIixtaW46MixyZXNldFN0YWNrOiEwfSx7aWQ6ImhsaW5ldG8iLG1pbjoxLHJlc2V0U3RhY2s6ITB9LHtpZDoidmxpbmV0byIsbWluOjEscmVzZXRTdGFjazohMH0se2lkOiJycmN1cnZldG8iLG1pbjo2LHJlc2V0U3RhY2s6ITB9LG51bGwse2lkOiJjYWxsc3ViciIsbWluOjEsdW5kZWZTdGFjazohMH0se2lkOiJyZXR1cm4iLG1pbjowLHVuZGVmU3RhY2s6ITB9LG51bGwsbnVsbCx7aWQ6ImVuZGNoYXIiLG1pbjowLHN0YWNrQ2xlYXJpbmc6ITB9LG51bGwsbnVsbCxudWxsLHtpZDoiaHN0ZW1obSIsbWluOjIsc3RhY2tDbGVhcmluZzohMCxzdGVtOiEwfSx7aWQ6ImhpbnRtYXNrIixtaW46MCxzdGFja0NsZWFyaW5nOiEwfSx7aWQ6ImNudHJtYXNrIixtaW46MCxzdGFja0NsZWFyaW5nOiEwfSx7aWQ6InJtb3ZldG8iLG1pbjoyLHN0YWNrQ2xlYXJpbmc6ITB9LHtpZDoiaG1vdmV0byIsbWluOjEsc3RhY2tDbGVhcmluZzohMH0se2lkOiJ2c3RlbWhtIixtaW46MixzdGFja0NsZWFyaW5nOiEwLHN0ZW06ITB9LHtpZDoicmN1cnZlbGluZSIsbWluOjgscmVzZXRTdGFjazohMH0se2lkOiJybGluZWN1cnZlIixtaW46OCxyZXNldFN0YWNrOiEwfSx7aWQ6InZ2Y3VydmV0byIsbWluOjQscmVzZXRTdGFjazohMH0se2lkOiJoaGN1cnZldG8iLG1pbjo0LHJlc2V0U3RhY2s6ITB9LG51bGwse2lkOiJjYWxsZ3N1YnIiLG1pbjoxLHVuZGVmU3RhY2s6ITB9LHtpZDoidmhjdXJ2ZXRvIixtaW46NCxyZXNldFN0YWNrOiEwfSx7aWQ6Imh2Y3VydmV0byIsbWluOjQscmVzZXRTdGFjazohMH1dLEZpPVtudWxsLG51bGwsbnVsbCx7aWQ6ImFuZCIsbWluOjIsc3RhY2tEZWx0YTotMX0se2lkOiJvciIsbWluOjIsc3RhY2tEZWx0YTotMX0se2lkOiJub3QiLG1pbjoxLHN0YWNrRGVsdGE6MH0sbnVsbCxudWxsLG51bGwse2lkOiJhYnMiLG1pbjoxLHN0YWNrRGVsdGE6MH0se2lkOiJhZGQiLG1pbjoyLHN0YWNrRGVsdGE6LTEsc3RhY2tGbihlLHQpe2VbdC0yXT1lW3QtMl0rZVt0LTFdfX0se2lkOiJzdWIiLG1pbjoyLHN0YWNrRGVsdGE6LTEsc3RhY2tGbihlLHQpe2VbdC0yXT1lW3QtMl0tZVt0LTFdfX0se2lkOiJkaXYiLG1pbjoyLHN0YWNrRGVsdGE6LTEsc3RhY2tGbihlLHQpe2VbdC0yXT1lW3QtMl0vZVt0LTFdfX0sbnVsbCx7aWQ6Im5lZyIsbWluOjEsc3RhY2tEZWx0YTowLHN0YWNrRm4oZSx0KXtlW3QtMV09LWVbdC0xXX19LHtpZDoiZXEiLG1pbjoyLHN0YWNrRGVsdGE6LTF9LG51bGwsbnVsbCx7aWQ6ImRyb3AiLG1pbjoxLHN0YWNrRGVsdGE6LTF9LG51bGwse2lkOiJwdXQiLG1pbjoyLHN0YWNrRGVsdGE6LTJ9LHtpZDoiZ2V0IixtaW46MSxzdGFja0RlbHRhOjB9LHtpZDoiaWZlbHNlIixtaW46NCxzdGFja0RlbHRhOi0zfSx7aWQ6InJhbmRvbSIsbWluOjAsc3RhY2tEZWx0YToxfSx7aWQ6Im11bCIsbWluOjIsc3RhY2tEZWx0YTotMSxzdGFja0ZuKGUsdCl7ZVt0LTJdPWVbdC0yXSplW3QtMV19fSxudWxsLHtpZDoic3FydCIsbWluOjEsc3RhY2tEZWx0YTowfSx7aWQ6ImR1cCIsbWluOjEsc3RhY2tEZWx0YToxfSx7aWQ6ImV4Y2giLG1pbjoyLHN0YWNrRGVsdGE6MH0se2lkOiJpbmRleCIsbWluOjIsc3RhY2tEZWx0YTowfSx7aWQ6InJvbGwiLG1pbjozLHN0YWNrRGVsdGE6LTJ9LG51bGwsbnVsbCxudWxsLHtpZDoiaGZsZXgiLG1pbjo3LHJlc2V0U3RhY2s6ITB9LHtpZDoiZmxleCIsbWluOjEzLHJlc2V0U3RhY2s6ITB9LHtpZDoiaGZsZXgxIixtaW46OSxyZXNldFN0YWNrOiEwfSx7aWQ6ImZsZXgxIixtaW46MTEscmVzZXRTdGFjazohMH1dO2NsYXNzIENGRlBhcnNlcntjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5ieXRlcz1lLmdldEJ5dGVzKCk7dGhpcy5wcm9wZXJ0aWVzPXQ7dGhpcy5zZWFjQW5hbHlzaXNFbmFibGVkPSEhaX1wYXJzZSgpe2NvbnN0IGU9dGhpcy5wcm9wZXJ0aWVzLHQ9bmV3IENGRjt0aGlzLmNmZj10O2NvbnN0IGk9dGhpcy5wYXJzZUhlYWRlcigpLGE9dGhpcy5wYXJzZUluZGV4KGkuZW5kUG9zKSxzPXRoaXMucGFyc2VJbmRleChhLmVuZFBvcykscj10aGlzLnBhcnNlSW5kZXgocy5lbmRQb3MpLG49dGhpcy5wYXJzZUluZGV4KHIuZW5kUG9zKSxvPXRoaXMucGFyc2VEaWN0KHMub2JqLmdldCgwKSksZz10aGlzLmNyZWF0ZURpY3QoQ0ZGVG9wRGljdCxvLHQuc3RyaW5ncyk7dC5oZWFkZXI9aS5vYmo7dC5uYW1lcz10aGlzLnBhcnNlTmFtZUluZGV4KGEub2JqKTt0LnN0cmluZ3M9dGhpcy5wYXJzZVN0cmluZ0luZGV4KHIub2JqKTt0LnRvcERpY3Q9Zzt0Lmdsb2JhbFN1YnJJbmRleD1uLm9iajt0aGlzLnBhcnNlUHJpdmF0ZURpY3QodC50b3BEaWN0KTt0LmlzQ0lERm9udD1nLmhhc05hbWUoIlJPUyIpO2NvbnN0IGM9Zy5nZXRCeU5hbWUoIkNoYXJTdHJpbmdzIiksaD10aGlzLnBhcnNlSW5kZXgoYykub2JqLGw9Zy5nZXRCeU5hbWUoIkZvbnRNYXRyaXgiKTtsJiYoZS5mb250TWF0cml4PWwpO2NvbnN0IEM9Zy5nZXRCeU5hbWUoIkZvbnRCQm94Iik7aWYoQyl7ZS5hc2NlbnQ9TWF0aC5tYXgoQ1szXSxDWzFdKTtlLmRlc2NlbnQ9TWF0aC5taW4oQ1sxXSxDWzNdKTtlLmFzY2VudFNjYWxlZD0hMH1sZXQgUSxFO2lmKHQuaXNDSURGb250KXtjb25zdCBlPXRoaXMucGFyc2VJbmRleChnLmdldEJ5TmFtZSgiRkRBcnJheSIpKS5vYmo7Zm9yKGxldCBpPTAsYT1lLmNvdW50O2k8YTsrK2kpe2NvbnN0IGE9ZS5nZXQoaSkscz10aGlzLmNyZWF0ZURpY3QoQ0ZGVG9wRGljdCx0aGlzLnBhcnNlRGljdChhKSx0LnN0cmluZ3MpO3RoaXMucGFyc2VQcml2YXRlRGljdChzKTt0LmZkQXJyYXkucHVzaChzKX1FPW51bGw7UT10aGlzLnBhcnNlQ2hhcnNldHMoZy5nZXRCeU5hbWUoImNoYXJzZXQiKSxoLmNvdW50LHQuc3RyaW5ncywhMCk7dC5mZFNlbGVjdD10aGlzLnBhcnNlRkRTZWxlY3QoZy5nZXRCeU5hbWUoIkZEU2VsZWN0IiksaC5jb3VudCl9ZWxzZXtRPXRoaXMucGFyc2VDaGFyc2V0cyhnLmdldEJ5TmFtZSgiY2hhcnNldCIpLGguY291bnQsdC5zdHJpbmdzLCExKTtFPXRoaXMucGFyc2VFbmNvZGluZyhnLmdldEJ5TmFtZSgiRW5jb2RpbmciKSxlLHQuc3RyaW5ncyxRLmNoYXJzZXQpfXQuY2hhcnNldD1RO3QuZW5jb2Rpbmc9RTtjb25zdCB1PXRoaXMucGFyc2VDaGFyU3RyaW5ncyh7Y2hhclN0cmluZ3M6aCxsb2NhbFN1YnJJbmRleDpnLnByaXZhdGVEaWN0LnN1YnJzSW5kZXgsZ2xvYmFsU3VickluZGV4Om4ub2JqLGZkU2VsZWN0OnQuZmRTZWxlY3QsZmRBcnJheTp0LmZkQXJyYXkscHJpdmF0ZURpY3Q6Zy5wcml2YXRlRGljdH0pO3QuY2hhclN0cmluZ3M9dS5jaGFyU3RyaW5nczt0LnNlYWNzPXUuc2VhY3M7dC53aWR0aHM9dS53aWR0aHM7cmV0dXJuIHR9cGFyc2VIZWFkZXIoKXtsZXQgZT10aGlzLmJ5dGVzO2NvbnN0IHQ9ZS5sZW5ndGg7bGV0IGk9MDtmb3IoO2k8dCYmMSE9PWVbaV07KSsraTtpZihpPj10KXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBDRkYgaGVhZGVyIik7aWYoMCE9PWkpe2luZm8oImNmZiBkYXRhIGlzIHNoaWZ0ZWQiKTtlPWUuc3ViYXJyYXkoaSk7dGhpcy5ieXRlcz1lfWNvbnN0IGE9ZVswXSxzPWVbMV0scj1lWzJdLG49ZVszXTtyZXR1cm57b2JqOm5ldyBDRkZIZWFkZXIoYSxzLHIsbiksZW5kUG9zOnJ9fXBhcnNlRGljdChlKXtsZXQgdD0wO2Z1bmN0aW9uIHBhcnNlT3BlcmFuZCgpe2xldCBpPWVbdCsrXTtpZigzMD09PWkpcmV0dXJuIGZ1bmN0aW9uIHBhcnNlRmxvYXRPcGVyYW5kKCl7bGV0IGk9IiI7Y29uc3QgYT0xNSxzPVsiMCIsIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCI4IiwiOSIsIi4iLCJFIiwiRS0iLG51bGwsIi0iXSxyPWUubGVuZ3RoO2Zvcig7dDxyOyl7Y29uc3Qgcj1lW3QrK10sbj1yPj40LG89MTUmcjtpZihuPT09YSlicmVhaztpKz1zW25dO2lmKG89PT1hKWJyZWFrO2krPXNbb119cmV0dXJuIHBhcnNlRmxvYXQoaSl9KCk7aWYoMjg9PT1pKXtpPWVbdCsrXTtpPShpPDwyNHxlW3QrK108PDE2KT4+MTY7cmV0dXJuIGl9aWYoMjk9PT1pKXtpPWVbdCsrXTtpPWk8PDh8ZVt0KytdO2k9aTw8OHxlW3QrK107aT1pPDw4fGVbdCsrXTtyZXR1cm4gaX1pZihpPj0zMiYmaTw9MjQ2KXJldHVybiBpLTEzOTtpZihpPj0yNDcmJmk8PTI1MClyZXR1cm4gMjU2KihpLTI0NykrZVt0KytdKzEwODtpZihpPj0yNTEmJmk8PTI1NClyZXR1cm4tMjU2KihpLTI1MSktZVt0KytdLTEwODt3YXJuKCdDRkZQYXJzZXJfcGFyc2VEaWN0OiAiJytpKyciIGlzIGEgcmVzZXJ2ZWQgY29tbWFuZC4nKTtyZXR1cm4gTmFOfWxldCBpPVtdO2NvbnN0IGE9W107dD0wO2NvbnN0IHM9ZS5sZW5ndGg7Zm9yKDt0PHM7KXtsZXQgcz1lW3RdO2lmKHM8PTIxKXsxMj09PXMmJihzPXM8PDh8ZVsrK3RdKTthLnB1c2goW3MsaV0pO2k9W107Kyt0fWVsc2UgaS5wdXNoKHBhcnNlT3BlcmFuZCgpKX1yZXR1cm4gYX1wYXJzZUluZGV4KGUpe2NvbnN0IHQ9bmV3IENGRkluZGV4LGk9dGhpcy5ieXRlcyxhPWlbZSsrXTw8OHxpW2UrK10scz1bXTtsZXQgcixuLG89ZTtpZigwIT09YSl7Y29uc3QgdD1pW2UrK10sZz1lKyhhKzEpKnQtMTtmb3Iocj0wLG49YSsxO3I8bjsrK3Ipe2xldCBhPTA7Zm9yKGxldCBzPTA7czx0Oysrcyl7YTw8PTg7YSs9aVtlKytdfXMucHVzaChnK2EpfW89c1thXX1mb3Iocj0wLG49cy5sZW5ndGgtMTtyPG47KytyKXtjb25zdCBlPXNbcl0sYT1zW3IrMV07dC5hZGQoaS5zdWJhcnJheShlLGEpKX1yZXR1cm57b2JqOnQsZW5kUG9zOm99fXBhcnNlTmFtZUluZGV4KGUpe2NvbnN0IHQ9W107Zm9yKGxldCBpPTAsYT1lLmNvdW50O2k8YTsrK2kpe2NvbnN0IGE9ZS5nZXQoaSk7dC5wdXNoKGJ5dGVzVG9TdHJpbmcoYSkpfXJldHVybiB0fXBhcnNlU3RyaW5nSW5kZXgoZSl7Y29uc3QgdD1uZXcgQ0ZGU3RyaW5ncztmb3IobGV0IGk9MCxhPWUuY291bnQ7aTxhOysraSl7Y29uc3QgYT1lLmdldChpKTt0LmFkZChieXRlc1RvU3RyaW5nKGEpKX1yZXR1cm4gdH1jcmVhdGVEaWN0KGUsdCxpKXtjb25zdCBhPW5ldyBlKGkpO2Zvcihjb25zdFtlLGldb2YgdClhLnNldEJ5S2V5KGUsaSk7cmV0dXJuIGF9cGFyc2VDaGFyU3RyaW5nKGUsdCxpLGEpe2lmKCF0fHxlLmNhbGxEZXB0aD4xMClyZXR1cm4hMTtsZXQgcz1lLnN0YWNrU2l6ZTtjb25zdCByPWUuc3RhY2s7bGV0IG49dC5sZW5ndGg7Zm9yKGxldCBvPTA7bzxuOyl7Y29uc3QgZz10W28rK107bGV0IGM9bnVsbDtpZigxMj09PWcpe2NvbnN0IGU9dFtvKytdO2lmKDA9PT1lKXt0W28tMl09MTM5O3Rbby0xXT0yMjtzPTB9ZWxzZSBjPUZpW2VdfWVsc2UgaWYoMjg9PT1nKXtyW3NdPSh0W29dPDwyNHx0W28rMV08PDE2KT4+MTY7bys9MjtzKyt9ZWxzZSBpZigxND09PWcpe2lmKHM+PTQpe3MtPTQ7aWYodGhpcy5zZWFjQW5hbHlzaXNFbmFibGVkKXtlLnNlYWM9ci5zbGljZShzLHMrNCk7cmV0dXJuITF9fWM9RGlbZ119ZWxzZSBpZihnPj0zMiYmZzw9MjQ2KXtyW3NdPWctMTM5O3MrK31lbHNlIGlmKGc+PTI0NyYmZzw9MjU0KXtyW3NdPWc8MjUxPyhnLTI0Nzw8OCkrdFtvXSsxMDg6LShnLTI1MTw8OCktdFtvXS0xMDg7bysrO3MrK31lbHNlIGlmKDI1NT09PWcpe3Jbc109KHRbb108PDI0fHRbbysxXTw8MTZ8dFtvKzJdPDw4fHRbbyszXSkvNjU1MzY7bys9NDtzKyt9ZWxzZSBpZigxOT09PWd8fDIwPT09Zyl7ZS5oaW50cys9cz4+MTtpZigwPT09ZS5oaW50cyl7dC5jb3B5V2l0aGluKG8tMSxvLC0xKTtvLT0xO24tPTE7Y29udGludWV9bys9ZS5oaW50cys3Pj4zO3MlPTI7Yz1EaVtnXX1lbHNle2lmKDEwPT09Z3x8Mjk9PT1nKXtjb25zdCB0PTEwPT09Zz9pOmE7aWYoIXQpe2M9RGlbZ107d2FybigiTWlzc2luZyBzdWJyc0luZGV4IGZvciAiK2MuaWQpO3JldHVybiExfWxldCBuPTMyNzY4O3QuY291bnQ8MTI0MD9uPTEwNzp0LmNvdW50PDMzOTAwJiYobj0xMTMxKTtjb25zdCBvPXJbLS1zXStuO2lmKG88MHx8bz49dC5jb3VudHx8aXNOYU4obykpe2M9RGlbZ107d2FybigiT3V0IG9mIGJvdW5kcyBzdWJySW5kZXggZm9yICIrYy5pZCk7cmV0dXJuITF9ZS5zdGFja1NpemU9cztlLmNhbGxEZXB0aCsrO2lmKCF0aGlzLnBhcnNlQ2hhclN0cmluZyhlLHQuZ2V0KG8pLGksYSkpcmV0dXJuITE7ZS5jYWxsRGVwdGgtLTtzPWUuc3RhY2tTaXplO2NvbnRpbnVlfWlmKDExPT09Zyl7ZS5zdGFja1NpemU9cztyZXR1cm4hMH1pZigwPT09ZyYmbz09PXQubGVuZ3RoKXt0W28tMV09MTQ7Yz1EaVsxNF19ZWxzZXtpZig5PT09Zyl7dC5jb3B5V2l0aGluKG8tMSxvLC0xKTtvLT0xO24tPTE7Y29udGludWV9Yz1EaVtnXX19aWYoYyl7aWYoYy5zdGVtKXtlLmhpbnRzKz1zPj4xO2lmKDM9PT1nfHwyMz09PWcpZS5oYXNWU3RlbXM9ITA7ZWxzZSBpZihlLmhhc1ZTdGVtcyYmKDE9PT1nfHwxOD09PWcpKXt3YXJuKCJDRkYgc3RlbSBoaW50cyBhcmUgaW4gd3Jvbmcgb3JkZXIiKTt0W28tMV09MT09PWc/MzoyM319aWYoIm1pbiJpbiBjJiYhZS51bmRlZlN0YWNrJiZzPGMubWluKXt3YXJuKCJOb3QgZW5vdWdoIHBhcmFtZXRlcnMgZm9yICIrYy5pZCsiOyBhY3R1YWw6ICIrcysiLCBleHBlY3RlZDogIitjLm1pbik7aWYoMD09PXMpe3Rbby0xXT0xNDtyZXR1cm4hMH1yZXR1cm4hMX1pZihlLmZpcnN0U3RhY2tDbGVhcmluZyYmYy5zdGFja0NsZWFyaW5nKXtlLmZpcnN0U3RhY2tDbGVhcmluZz0hMTtzLT1jLm1pbjtzPj0yJiZjLnN0ZW0/cyU9MjpzPjEmJndhcm4oIkZvdW5kIHRvbyBtYW55IHBhcmFtZXRlcnMgZm9yIHN0YWNrLWNsZWFyaW5nIGNvbW1hbmQiKTtzPjAmJihlLndpZHRoPXJbcy0xXSl9aWYoInN0YWNrRGVsdGEiaW4gYyl7InN0YWNrRm4iaW4gYyYmYy5zdGFja0ZuKHIscyk7cys9Yy5zdGFja0RlbHRhfWVsc2UgaWYoYy5zdGFja0NsZWFyaW5nKXM9MDtlbHNlIGlmKGMucmVzZXRTdGFjayl7cz0wO2UudW5kZWZTdGFjaz0hMX1lbHNlIGlmKGMudW5kZWZTdGFjayl7cz0wO2UudW5kZWZTdGFjaz0hMDtlLmZpcnN0U3RhY2tDbGVhcmluZz0hMX19fW48dC5sZW5ndGgmJnQuZmlsbCgxNCxuKTtlLnN0YWNrU2l6ZT1zO3JldHVybiEwfXBhcnNlQ2hhclN0cmluZ3Moe2NoYXJTdHJpbmdzOmUsbG9jYWxTdWJySW5kZXg6dCxnbG9iYWxTdWJySW5kZXg6aSxmZFNlbGVjdDphLGZkQXJyYXk6cyxwcml2YXRlRGljdDpyfSl7Y29uc3Qgbj1bXSxvPVtdLGc9ZS5jb3VudDtmb3IobGV0IGM9MDtjPGc7YysrKXtjb25zdCBnPWUuZ2V0KGMpLGg9e2NhbGxEZXB0aDowLHN0YWNrU2l6ZTowLHN0YWNrOltdLHVuZGVmU3RhY2s6ITAsaGludHM6MCxmaXJzdFN0YWNrQ2xlYXJpbmc6ITAsc2VhYzpudWxsLHdpZHRoOm51bGwsaGFzVlN0ZW1zOiExfTtsZXQgbD0hMCxDPW51bGwsUT1yO2lmKGEmJnMubGVuZ3RoKXtjb25zdCBlPWEuZ2V0RkRJbmRleChjKTtpZigtMT09PWUpe3dhcm4oIkdseXBoIGluZGV4IGlzIG5vdCBpbiBmZCBzZWxlY3QuIik7bD0hMX1pZihlPj1zLmxlbmd0aCl7d2FybigiSW52YWxpZCBmZCBpbmRleCBmb3IgZ2x5cGggaW5kZXguIik7bD0hMX1pZihsKXtRPXNbZV0ucHJpdmF0ZURpY3Q7Qz1RLnN1YnJzSW5kZXh9fWVsc2UgdCYmKEM9dCk7bCYmKGw9dGhpcy5wYXJzZUNoYXJTdHJpbmcoaCxnLEMsaSkpO2lmKG51bGwhPT1oLndpZHRoKXtjb25zdCBlPVEuZ2V0QnlOYW1lKCJub21pbmFsV2lkdGhYIik7b1tjXT1lK2gud2lkdGh9ZWxzZXtjb25zdCBlPVEuZ2V0QnlOYW1lKCJkZWZhdWx0V2lkdGhYIik7b1tjXT1lfW51bGwhPT1oLnNlYWMmJihuW2NdPWguc2VhYyk7bHx8ZS5zZXQoYyxuZXcgVWludDhBcnJheShbMTRdKSl9cmV0dXJue2NoYXJTdHJpbmdzOmUsc2VhY3M6bix3aWR0aHM6b319ZW1wdHlQcml2YXRlRGljdGlvbmFyeShlKXtjb25zdCB0PXRoaXMuY3JlYXRlRGljdChDRkZQcml2YXRlRGljdCxbXSxlLnN0cmluZ3MpO2Uuc2V0QnlLZXkoMTgsWzAsMF0pO2UucHJpdmF0ZURpY3Q9dH1wYXJzZVByaXZhdGVEaWN0KGUpe2lmKCFlLmhhc05hbWUoIlByaXZhdGUiKSl7dGhpcy5lbXB0eVByaXZhdGVEaWN0aW9uYXJ5KGUpO3JldHVybn1jb25zdCB0PWUuZ2V0QnlOYW1lKCJQcml2YXRlIik7aWYoIUFycmF5LmlzQXJyYXkodCl8fDIhPT10Lmxlbmd0aCl7ZS5yZW1vdmVCeU5hbWUoIlByaXZhdGUiKTtyZXR1cm59Y29uc3QgaT10WzBdLGE9dFsxXTtpZigwPT09aXx8YT49dGhpcy5ieXRlcy5sZW5ndGgpe3RoaXMuZW1wdHlQcml2YXRlRGljdGlvbmFyeShlKTtyZXR1cm59Y29uc3Qgcz1hK2kscj10aGlzLmJ5dGVzLnN1YmFycmF5KGEscyksbj10aGlzLnBhcnNlRGljdChyKSxvPXRoaXMuY3JlYXRlRGljdChDRkZQcml2YXRlRGljdCxuLGUuc3RyaW5ncyk7ZS5wcml2YXRlRGljdD1vOzA9PT1vLmdldEJ5TmFtZSgiRXhwYW5zaW9uRmFjdG9yIikmJm8uc2V0QnlOYW1lKCJFeHBhbnNpb25GYWN0b3IiLC4wNik7aWYoIW8uZ2V0QnlOYW1lKCJTdWJycyIpKXJldHVybjtjb25zdCBnPW8uZ2V0QnlOYW1lKCJTdWJycyIpLGM9YStnO2lmKDA9PT1nfHxjPj10aGlzLmJ5dGVzLmxlbmd0aCl7dGhpcy5lbXB0eVByaXZhdGVEaWN0aW9uYXJ5KGUpO3JldHVybn1jb25zdCBoPXRoaXMucGFyc2VJbmRleChjKTtvLnN1YnJzSW5kZXg9aC5vYmp9cGFyc2VDaGFyc2V0cyhlLHQsaSxhKXtpZigwPT09ZSlyZXR1cm4gbmV3IENGRkNoYXJzZXQoITAsUmkuSVNPX0FET0JFLENpKTtpZigxPT09ZSlyZXR1cm4gbmV3IENGRkNoYXJzZXQoITAsUmkuRVhQRVJULEJpKTtpZigyPT09ZSlyZXR1cm4gbmV3IENGRkNoYXJzZXQoITAsUmkuRVhQRVJUX1NVQlNFVCxRaSk7Y29uc3Qgcz10aGlzLmJ5dGVzLHI9ZSxuPXNbZSsrXSxvPVthPzA6Ii5ub3RkZWYiXTtsZXQgZyxjLGg7dC09MTtzd2l0Y2gobil7Y2FzZSAwOmZvcihoPTA7aDx0O2grKyl7Zz1zW2UrK108PDh8c1tlKytdO28ucHVzaChhP2c6aS5nZXQoZykpfWJyZWFrO2Nhc2UgMTpmb3IoO28ubGVuZ3RoPD10Oyl7Zz1zW2UrK108PDh8c1tlKytdO2M9c1tlKytdO2ZvcihoPTA7aDw9YztoKyspby5wdXNoKGE/ZysrOmkuZ2V0KGcrKykpfWJyZWFrO2Nhc2UgMjpmb3IoO28ubGVuZ3RoPD10Oyl7Zz1zW2UrK108PDh8c1tlKytdO2M9c1tlKytdPDw4fHNbZSsrXTtmb3IoaD0wO2g8PWM7aCsrKW8ucHVzaChhP2crKzppLmdldChnKyspKX1icmVhaztkZWZhdWx0OnRocm93IG5ldyBGb3JtYXRFcnJvcigiVW5rbm93biBjaGFyc2V0IGZvcm1hdCIpfWNvbnN0IGw9ZSxDPXMuc3ViYXJyYXkocixsKTtyZXR1cm4gbmV3IENGRkNoYXJzZXQoITEsbixvLEMpfXBhcnNlRW5jb2RpbmcoZSx0LGksYSl7Y29uc3Qgcz1PYmplY3QuY3JlYXRlKG51bGwpLHI9dGhpcy5ieXRlcztsZXQgbixvLGcsYz0hMSxoPW51bGw7aWYoMD09PWV8fDE9PT1lKXtjPSEwO249ZTtjb25zdCB0PWU/RWk6Zmk7Zm9yKG89MCxnPWEubGVuZ3RoO288ZztvKyspe2NvbnN0IGU9dC5pbmRleE9mKGFbb10pOy0xIT09ZSYmKHNbZV09byl9fWVsc2V7Y29uc3QgdD1lO249cltlKytdO3N3aXRjaCgxMjcmbil7Y2FzZSAwOmNvbnN0IHQ9cltlKytdO2ZvcihvPTE7bzw9dDtvKyspc1tyW2UrK11dPW87YnJlYWs7Y2FzZSAxOmNvbnN0IGk9cltlKytdO2xldCBhPTE7Zm9yKG89MDtvPGk7bysrKXtjb25zdCB0PXJbZSsrXSxpPXJbZSsrXTtmb3IobGV0IGU9dDtlPD10K2k7ZSsrKXNbZV09YSsrfWJyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEZvcm1hdEVycm9yKGBVbmtub3duIGVuY29kaW5nIGZvcm1hdDogJHtufSBpbiBDRkZgKX1jb25zdCBnPWU7aWYoMTI4Jm4pe3JbdF0mPTEyNzshZnVuY3Rpb24gcmVhZFN1cHBsZW1lbnQoKXtjb25zdCB0PXJbZSsrXTtmb3Iobz0wO288dDtvKyspe2NvbnN0IHQ9cltlKytdLG49KHJbZSsrXTw8OCkrKDI1NSZyW2UrK10pO3NbdF09YS5pbmRleE9mKGkuZ2V0KG4pKX19KCl9aD1yLnN1YmFycmF5KHQsZyl9biY9MTI3O3JldHVybiBuZXcgQ0ZGRW5jb2RpbmcoYyxuLHMsaCl9cGFyc2VGRFNlbGVjdChlLHQpe2NvbnN0IGk9dGhpcy5ieXRlcyxhPWlbZSsrXSxzPVtdO2xldCByO3N3aXRjaChhKXtjYXNlIDA6Zm9yKHI9MDtyPHQ7KytyKXtjb25zdCB0PWlbZSsrXTtzLnB1c2godCl9YnJlYWs7Y2FzZSAzOmNvbnN0IG49aVtlKytdPDw4fGlbZSsrXTtmb3Iocj0wO3I8bjsrK3Ipe2xldCB0PWlbZSsrXTw8OHxpW2UrK107aWYoMD09PXImJjAhPT10KXt3YXJuKCJwYXJzZUZEU2VsZWN0OiBUaGUgZmlyc3QgcmFuZ2UgbXVzdCBoYXZlIGEgZmlyc3QgR0lEIG9mIDAgLS0gdHJ5aW5nIHRvIHJlY292ZXIuIik7dD0wfWNvbnN0IGE9aVtlKytdLG49aVtlXTw8OHxpW2UrMV07Zm9yKGxldCBlPXQ7ZTxuOysrZSlzLnB1c2goYSl9ZSs9MjticmVhaztkZWZhdWx0OnRocm93IG5ldyBGb3JtYXRFcnJvcihgcGFyc2VGRFNlbGVjdDogVW5rbm93biBmb3JtYXQgIiR7YX0iLmApfWlmKHMubGVuZ3RoIT09dCl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoInBhcnNlRkRTZWxlY3Q6IEludmFsaWQgZm9udCBkYXRhLiIpO3JldHVybiBuZXcgQ0ZGRkRTZWxlY3QoYSxzKX19Y2xhc3MgQ0ZGe2NvbnN0cnVjdG9yKCl7dGhpcy5oZWFkZXI9bnVsbDt0aGlzLm5hbWVzPVtdO3RoaXMudG9wRGljdD1udWxsO3RoaXMuc3RyaW5ncz1uZXcgQ0ZGU3RyaW5nczt0aGlzLmdsb2JhbFN1YnJJbmRleD1udWxsO3RoaXMuZW5jb2Rpbmc9bnVsbDt0aGlzLmNoYXJzZXQ9bnVsbDt0aGlzLmNoYXJTdHJpbmdzPW51bGw7dGhpcy5mZEFycmF5PVtdO3RoaXMuZmRTZWxlY3Q9bnVsbDt0aGlzLmlzQ0lERm9udD0hMX1kdXBsaWNhdGVGaXJzdEdseXBoKCl7aWYodGhpcy5jaGFyU3RyaW5ncy5jb3VudD49NjU1MzUpe3dhcm4oIk5vdCBlbm91Z2ggc3BhY2UgaW4gY2hhcnN0cmluZ3MgdG8gZHVwbGljYXRlIGZpcnN0IGdseXBoLiIpO3JldHVybn1jb25zdCBlPXRoaXMuY2hhclN0cmluZ3MuZ2V0KDApO3RoaXMuY2hhclN0cmluZ3MuYWRkKGUpO3RoaXMuaXNDSURGb250JiZ0aGlzLmZkU2VsZWN0LmZkU2VsZWN0LnB1c2godGhpcy5mZFNlbGVjdC5mZFNlbGVjdFswXSl9aGFzR2x5cGhJZChlKXtpZihlPDB8fGU+PXRoaXMuY2hhclN0cmluZ3MuY291bnQpcmV0dXJuITE7cmV0dXJuIHRoaXMuY2hhclN0cmluZ3MuZ2V0KGUpLmxlbmd0aD4wfX1jbGFzcyBDRkZIZWFkZXJ7Y29uc3RydWN0b3IoZSx0LGksYSl7dGhpcy5tYWpvcj1lO3RoaXMubWlub3I9dDt0aGlzLmhkclNpemU9aTt0aGlzLm9mZlNpemU9YX19Y2xhc3MgQ0ZGU3RyaW5nc3tjb25zdHJ1Y3Rvcigpe3RoaXMuc3RyaW5ncz1bXX1nZXQoZSl7cmV0dXJuIGU+PTAmJmU8PTM5MD93aVtlXTplLWJpPD10aGlzLnN0cmluZ3MubGVuZ3RoP3RoaXMuc3RyaW5nc1tlLWJpXTp3aVswXX1nZXRTSUQoZSl7bGV0IHQ9d2kuaW5kZXhPZihlKTtpZigtMSE9PXQpcmV0dXJuIHQ7dD10aGlzLnN0cmluZ3MuaW5kZXhPZihlKTtyZXR1cm4tMSE9PXQ/dCtiaTotMX1hZGQoZSl7dGhpcy5zdHJpbmdzLnB1c2goZSl9Z2V0IGNvdW50KCl7cmV0dXJuIHRoaXMuc3RyaW5ncy5sZW5ndGh9fWNsYXNzIENGRkluZGV4e2NvbnN0cnVjdG9yKCl7dGhpcy5vYmplY3RzPVtdO3RoaXMubGVuZ3RoPTB9YWRkKGUpe3RoaXMubGVuZ3RoKz1lLmxlbmd0aDt0aGlzLm9iamVjdHMucHVzaChlKX1zZXQoZSx0KXt0aGlzLmxlbmd0aCs9dC5sZW5ndGgtdGhpcy5vYmplY3RzW2VdLmxlbmd0aDt0aGlzLm9iamVjdHNbZV09dH1nZXQoZSl7cmV0dXJuIHRoaXMub2JqZWN0c1tlXX1nZXQgY291bnQoKXtyZXR1cm4gdGhpcy5vYmplY3RzLmxlbmd0aH19Y2xhc3MgQ0ZGRGljdHtjb25zdHJ1Y3RvcihlLHQpe3RoaXMua2V5VG9OYW1lTWFwPWUua2V5VG9OYW1lTWFwO3RoaXMubmFtZVRvS2V5TWFwPWUubmFtZVRvS2V5TWFwO3RoaXMuZGVmYXVsdHM9ZS5kZWZhdWx0czt0aGlzLnR5cGVzPWUudHlwZXM7dGhpcy5vcGNvZGVzPWUub3Bjb2Rlczt0aGlzLm9yZGVyPWUub3JkZXI7dGhpcy5zdHJpbmdzPXQ7dGhpcy52YWx1ZXM9T2JqZWN0LmNyZWF0ZShudWxsKX1zZXRCeUtleShlLHQpe2lmKCEoZSBpbiB0aGlzLmtleVRvTmFtZU1hcCkpcmV0dXJuITE7aWYoMD09PXQubGVuZ3RoKXJldHVybiEwO2Zvcihjb25zdCBpIG9mIHQpaWYoaXNOYU4oaSkpe3dhcm4oYEludmFsaWQgQ0ZGRGljdCB2YWx1ZTogIiR7dH0iIGZvciBrZXkgIiR7ZX0iLmApO3JldHVybiEwfWNvbnN0IGk9dGhpcy50eXBlc1tlXTsibnVtIiE9PWkmJiJzaWQiIT09aSYmIm9mZnNldCIhPT1pfHwodD10WzBdKTt0aGlzLnZhbHVlc1tlXT10O3JldHVybiEwfXNldEJ5TmFtZShlLHQpe2lmKCEoZSBpbiB0aGlzLm5hbWVUb0tleU1hcCkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIGRpY3Rpb25hcnkgbmFtZSAiJHtlfSJgKTt0aGlzLnZhbHVlc1t0aGlzLm5hbWVUb0tleU1hcFtlXV09dH1oYXNOYW1lKGUpe3JldHVybiB0aGlzLm5hbWVUb0tleU1hcFtlXWluIHRoaXMudmFsdWVzfWdldEJ5TmFtZShlKXtpZighKGUgaW4gdGhpcy5uYW1lVG9LZXlNYXApKXRocm93IG5ldyBGb3JtYXRFcnJvcihgSW52YWxpZCBkaWN0aW9uYXJ5IG5hbWUgJHtlfSJgKTtjb25zdCB0PXRoaXMubmFtZVRvS2V5TWFwW2VdO3JldHVybiB0IGluIHRoaXMudmFsdWVzP3RoaXMudmFsdWVzW3RdOnRoaXMuZGVmYXVsdHNbdF19cmVtb3ZlQnlOYW1lKGUpe2RlbGV0ZSB0aGlzLnZhbHVlc1t0aGlzLm5hbWVUb0tleU1hcFtlXV19c3RhdGljIGNyZWF0ZVRhYmxlcyhlKXtjb25zdCB0PXtrZXlUb05hbWVNYXA6e30sbmFtZVRvS2V5TWFwOnt9LGRlZmF1bHRzOnt9LHR5cGVzOnt9LG9wY29kZXM6e30sb3JkZXI6W119O2Zvcihjb25zdCBpIG9mIGUpe2NvbnN0IGU9QXJyYXkuaXNBcnJheShpWzBdKT8oaVswXVswXTw8OCkraVswXVsxXTppWzBdO3Qua2V5VG9OYW1lTWFwW2VdPWlbMV07dC5uYW1lVG9LZXlNYXBbaVsxXV09ZTt0LnR5cGVzW2VdPWlbMl07dC5kZWZhdWx0c1tlXT1pWzNdO3Qub3Bjb2Rlc1tlXT1BcnJheS5pc0FycmF5KGlbMF0pP2lbMF06W2lbMF1dO3Qub3JkZXIucHVzaChlKX1yZXR1cm4gdH19Y29uc3QgU2k9W1tbMTIsMzBdLCJST1MiLFsic2lkIiwic2lkIiwibnVtIl0sbnVsbF0sW1sxMiwyMF0sIlN5bnRoZXRpY0Jhc2UiLCJudW0iLG51bGxdLFswLCJ2ZXJzaW9uIiwic2lkIixudWxsXSxbMSwiTm90aWNlIiwic2lkIixudWxsXSxbWzEyLDBdLCJDb3B5cmlnaHQiLCJzaWQiLG51bGxdLFsyLCJGdWxsTmFtZSIsInNpZCIsbnVsbF0sWzMsIkZhbWlseU5hbWUiLCJzaWQiLG51bGxdLFs0LCJXZWlnaHQiLCJzaWQiLG51bGxdLFtbMTIsMV0sImlzRml4ZWRQaXRjaCIsIm51bSIsMF0sW1sxMiwyXSwiSXRhbGljQW5nbGUiLCJudW0iLDBdLFtbMTIsM10sIlVuZGVybGluZVBvc2l0aW9uIiwibnVtIiwtMTAwXSxbWzEyLDRdLCJVbmRlcmxpbmVUaGlja25lc3MiLCJudW0iLDUwXSxbWzEyLDVdLCJQYWludFR5cGUiLCJudW0iLDBdLFtbMTIsNl0sIkNoYXJzdHJpbmdUeXBlIiwibnVtIiwyXSxbWzEyLDddLCJGb250TWF0cml4IixbIm51bSIsIm51bSIsIm51bSIsIm51bSIsIm51bSIsIm51bSJdLFsuMDAxLDAsMCwuMDAxLDAsMF1dLFsxMywiVW5pcXVlSUQiLCJudW0iLG51bGxdLFs1LCJGb250QkJveCIsWyJudW0iLCJudW0iLCJudW0iLCJudW0iXSxbMCwwLDAsMF1dLFtbMTIsOF0sIlN0cm9rZVdpZHRoIiwibnVtIiwwXSxbMTQsIlhVSUQiLCJhcnJheSIsbnVsbF0sWzE1LCJjaGFyc2V0Iiwib2Zmc2V0IiwwXSxbMTYsIkVuY29kaW5nIiwib2Zmc2V0IiwwXSxbMTcsIkNoYXJTdHJpbmdzIiwib2Zmc2V0IiwwXSxbMTgsIlByaXZhdGUiLFsib2Zmc2V0Iiwib2Zmc2V0Il0sbnVsbF0sW1sxMiwyMV0sIlBvc3RTY3JpcHQiLCJzaWQiLG51bGxdLFtbMTIsMjJdLCJCYXNlRm9udE5hbWUiLCJzaWQiLG51bGxdLFtbMTIsMjNdLCJCYXNlRm9udEJsZW5kIiwiZGVsdGEiLG51bGxdLFtbMTIsMzFdLCJDSURGb250VmVyc2lvbiIsIm51bSIsMF0sW1sxMiwzMl0sIkNJREZvbnRSZXZpc2lvbiIsIm51bSIsMF0sW1sxMiwzM10sIkNJREZvbnRUeXBlIiwibnVtIiwwXSxbWzEyLDM0XSwiQ0lEQ291bnQiLCJudW0iLDg3MjBdLFtbMTIsMzVdLCJVSURCYXNlIiwibnVtIixudWxsXSxbWzEyLDM3XSwiRkRTZWxlY3QiLCJvZmZzZXQiLG51bGxdLFtbMTIsMzZdLCJGREFycmF5Iiwib2Zmc2V0IixudWxsXSxbWzEyLDM4XSwiRm9udE5hbWUiLCJzaWQiLG51bGxdXTtjbGFzcyBDRkZUb3BEaWN0IGV4dGVuZHMgQ0ZGRGljdHtzdGF0aWMgZ2V0IHRhYmxlcygpe3JldHVybiBzaGFkb3codGhpcywidGFibGVzIix0aGlzLmNyZWF0ZVRhYmxlcyhTaSkpfWNvbnN0cnVjdG9yKGUpe3N1cGVyKENGRlRvcERpY3QudGFibGVzLGUpO3RoaXMucHJpdmF0ZURpY3Q9bnVsbH19Y29uc3Qga2k9W1s2LCJCbHVlVmFsdWVzIiwiZGVsdGEiLG51bGxdLFs3LCJPdGhlckJsdWVzIiwiZGVsdGEiLG51bGxdLFs4LCJGYW1pbHlCbHVlcyIsImRlbHRhIixudWxsXSxbOSwiRmFtaWx5T3RoZXJCbHVlcyIsImRlbHRhIixudWxsXSxbWzEyLDldLCJCbHVlU2NhbGUiLCJudW0iLC4wMzk2MjVdLFtbMTIsMTBdLCJCbHVlU2hpZnQiLCJudW0iLDddLFtbMTIsMTFdLCJCbHVlRnV6eiIsIm51bSIsMV0sWzEwLCJTdGRIVyIsIm51bSIsbnVsbF0sWzExLCJTdGRWVyIsIm51bSIsbnVsbF0sW1sxMiwxMl0sIlN0ZW1TbmFwSCIsImRlbHRhIixudWxsXSxbWzEyLDEzXSwiU3RlbVNuYXBWIiwiZGVsdGEiLG51bGxdLFtbMTIsMTRdLCJGb3JjZUJvbGQiLCJudW0iLDBdLFtbMTIsMTddLCJMYW5ndWFnZUdyb3VwIiwibnVtIiwwXSxbWzEyLDE4XSwiRXhwYW5zaW9uRmFjdG9yIiwibnVtIiwuMDZdLFtbMTIsMTldLCJpbml0aWFsUmFuZG9tU2VlZCIsIm51bSIsMF0sWzIwLCJkZWZhdWx0V2lkdGhYIiwibnVtIiwwXSxbMjEsIm5vbWluYWxXaWR0aFgiLCJudW0iLDBdLFsxOSwiU3VicnMiLCJvZmZzZXQiLG51bGxdXTtjbGFzcyBDRkZQcml2YXRlRGljdCBleHRlbmRzIENGRkRpY3R7c3RhdGljIGdldCB0YWJsZXMoKXtyZXR1cm4gc2hhZG93KHRoaXMsInRhYmxlcyIsdGhpcy5jcmVhdGVUYWJsZXMoa2kpKX1jb25zdHJ1Y3RvcihlKXtzdXBlcihDRkZQcml2YXRlRGljdC50YWJsZXMsZSk7dGhpcy5zdWJyc0luZGV4PW51bGx9fWNvbnN0IFJpPXtJU09fQURPQkU6MCxFWFBFUlQ6MSxFWFBFUlRfU1VCU0VUOjJ9O2NsYXNzIENGRkNoYXJzZXR7Y29uc3RydWN0b3IoZSx0LGksYSl7dGhpcy5wcmVkZWZpbmVkPWU7dGhpcy5mb3JtYXQ9dDt0aGlzLmNoYXJzZXQ9aTt0aGlzLnJhdz1hfX1jbGFzcyBDRkZFbmNvZGluZ3tjb25zdHJ1Y3RvcihlLHQsaSxhKXt0aGlzLnByZWRlZmluZWQ9ZTt0aGlzLmZvcm1hdD10O3RoaXMuZW5jb2Rpbmc9aTt0aGlzLnJhdz1hfX1jbGFzcyBDRkZGRFNlbGVjdHtjb25zdHJ1Y3RvcihlLHQpe3RoaXMuZm9ybWF0PWU7dGhpcy5mZFNlbGVjdD10fWdldEZESW5kZXgoZSl7cmV0dXJuIGU8MHx8ZT49dGhpcy5mZFNlbGVjdC5sZW5ndGg/LTE6dGhpcy5mZFNlbGVjdFtlXX19Y2xhc3MgQ0ZGT2Zmc2V0VHJhY2tlcntjb25zdHJ1Y3Rvcigpe3RoaXMub2Zmc2V0cz1PYmplY3QuY3JlYXRlKG51bGwpfWlzVHJhY2tpbmcoZSl7cmV0dXJuIGUgaW4gdGhpcy5vZmZzZXRzfXRyYWNrKGUsdCl7aWYoZSBpbiB0aGlzLm9mZnNldHMpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBBbHJlYWR5IHRyYWNraW5nIGxvY2F0aW9uIG9mICR7ZX1gKTt0aGlzLm9mZnNldHNbZV09dH1vZmZzZXQoZSl7Zm9yKGNvbnN0IHQgaW4gdGhpcy5vZmZzZXRzKXRoaXMub2Zmc2V0c1t0XSs9ZX1zZXRFbnRyeUxvY2F0aW9uKGUsdCxpKXtpZighKGUgaW4gdGhpcy5vZmZzZXRzKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYE5vdCB0cmFja2luZyBsb2NhdGlvbiBvZiAke2V9YCk7Y29uc3QgYT1pLmRhdGEscz10aGlzLm9mZnNldHNbZV07Zm9yKGxldCBlPTAsaT10Lmxlbmd0aDtlPGk7KytlKXtjb25zdCBpPTUqZStzLHI9aSsxLG49aSsyLG89aSszLGc9aSs0O2lmKDI5IT09YVtpXXx8MCE9PWFbcl18fDAhPT1hW25dfHwwIT09YVtvXXx8MCE9PWFbZ10pdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJ3cml0aW5nIHRvIGFuIG9mZnNldCB0aGF0IGlzIG5vdCBlbXB0eSIpO2NvbnN0IGM9dFtlXTthW2ldPTI5O2Fbcl09Yz4+MjQmMjU1O2Fbbl09Yz4+MTYmMjU1O2Fbb109Yz4+OCYyNTU7YVtnXT0yNTUmY319fWNsYXNzIENGRkNvbXBpbGVye2NvbnN0cnVjdG9yKGUpe3RoaXMuY2ZmPWV9Y29tcGlsZSgpe2NvbnN0IGU9dGhpcy5jZmYsdD17ZGF0YTpbXSxsZW5ndGg6MCxhZGQoZSl7dHJ5e3RoaXMuZGF0YS5wdXNoKC4uLmUpfWNhdGNoe3RoaXMuZGF0YT10aGlzLmRhdGEuY29uY2F0KGUpfXRoaXMubGVuZ3RoPXRoaXMuZGF0YS5sZW5ndGh9fSxpPXRoaXMuY29tcGlsZUhlYWRlcihlLmhlYWRlcik7dC5hZGQoaSk7Y29uc3QgYT10aGlzLmNvbXBpbGVOYW1lSW5kZXgoZS5uYW1lcyk7dC5hZGQoYSk7aWYoZS5pc0NJREZvbnQmJmUudG9wRGljdC5oYXNOYW1lKCJGb250TWF0cml4Iikpe2NvbnN0IHQ9ZS50b3BEaWN0LmdldEJ5TmFtZSgiRm9udE1hdHJpeCIpO2UudG9wRGljdC5yZW1vdmVCeU5hbWUoIkZvbnRNYXRyaXgiKTtmb3IoY29uc3QgaSBvZiBlLmZkQXJyYXkpe2xldCBlPXQuc2xpY2UoMCk7aS5oYXNOYW1lKCJGb250TWF0cml4IikmJihlPVV0aWwudHJhbnNmb3JtKGUsaS5nZXRCeU5hbWUoIkZvbnRNYXRyaXgiKSkpO2kuc2V0QnlOYW1lKCJGb250TWF0cml4IixlKX19Y29uc3Qgcz1lLnRvcERpY3QuZ2V0QnlOYW1lKCJYVUlEIik7cz8ubGVuZ3RoPjE2JiZlLnRvcERpY3QucmVtb3ZlQnlOYW1lKCJYVUlEIik7ZS50b3BEaWN0LnNldEJ5TmFtZSgiY2hhcnNldCIsMCk7bGV0IHI9dGhpcy5jb21waWxlVG9wRGljdHMoW2UudG9wRGljdF0sdC5sZW5ndGgsZS5pc0NJREZvbnQpO3QuYWRkKHIub3V0cHV0KTtjb25zdCBuPXIudHJhY2tlcnNbMF0sbz10aGlzLmNvbXBpbGVTdHJpbmdJbmRleChlLnN0cmluZ3Muc3RyaW5ncyk7dC5hZGQobyk7Y29uc3QgZz10aGlzLmNvbXBpbGVJbmRleChlLmdsb2JhbFN1YnJJbmRleCk7dC5hZGQoZyk7aWYoZS5lbmNvZGluZyYmZS50b3BEaWN0Lmhhc05hbWUoIkVuY29kaW5nIikpaWYoZS5lbmNvZGluZy5wcmVkZWZpbmVkKW4uc2V0RW50cnlMb2NhdGlvbigiRW5jb2RpbmciLFtlLmVuY29kaW5nLmZvcm1hdF0sdCk7ZWxzZXtjb25zdCBpPXRoaXMuY29tcGlsZUVuY29kaW5nKGUuZW5jb2RpbmcpO24uc2V0RW50cnlMb2NhdGlvbigiRW5jb2RpbmciLFt0Lmxlbmd0aF0sdCk7dC5hZGQoaSl9Y29uc3QgYz10aGlzLmNvbXBpbGVDaGFyc2V0KGUuY2hhcnNldCxlLmNoYXJTdHJpbmdzLmNvdW50LGUuc3RyaW5ncyxlLmlzQ0lERm9udCk7bi5zZXRFbnRyeUxvY2F0aW9uKCJjaGFyc2V0IixbdC5sZW5ndGhdLHQpO3QuYWRkKGMpO2NvbnN0IGg9dGhpcy5jb21waWxlQ2hhclN0cmluZ3MoZS5jaGFyU3RyaW5ncyk7bi5zZXRFbnRyeUxvY2F0aW9uKCJDaGFyU3RyaW5ncyIsW3QubGVuZ3RoXSx0KTt0LmFkZChoKTtpZihlLmlzQ0lERm9udCl7bi5zZXRFbnRyeUxvY2F0aW9uKCJGRFNlbGVjdCIsW3QubGVuZ3RoXSx0KTtjb25zdCBpPXRoaXMuY29tcGlsZUZEU2VsZWN0KGUuZmRTZWxlY3QpO3QuYWRkKGkpO3I9dGhpcy5jb21waWxlVG9wRGljdHMoZS5mZEFycmF5LHQubGVuZ3RoLCEwKTtuLnNldEVudHJ5TG9jYXRpb24oIkZEQXJyYXkiLFt0Lmxlbmd0aF0sdCk7dC5hZGQoci5vdXRwdXQpO2NvbnN0IGE9ci50cmFja2Vyczt0aGlzLmNvbXBpbGVQcml2YXRlRGljdHMoZS5mZEFycmF5LGEsdCl9dGhpcy5jb21waWxlUHJpdmF0ZURpY3RzKFtlLnRvcERpY3RdLFtuXSx0KTt0LmFkZChbMF0pO3JldHVybiB0LmRhdGF9ZW5jb2RlTnVtYmVyKGUpe3JldHVybiBOdW1iZXIuaXNJbnRlZ2VyKGUpP3RoaXMuZW5jb2RlSW50ZWdlcihlKTp0aGlzLmVuY29kZUZsb2F0KGUpfXN0YXRpYyBnZXQgRW5jb2RlRmxvYXRSZWdFeHAoKXtyZXR1cm4gc2hhZG93KHRoaXMsIkVuY29kZUZsb2F0UmVnRXhwIiwvXC4oXGQqPykoPzo5ezUsMjB9fDB7NSwyMH0pXGR7MCwyfSg/OmUoLispfCQpLyl9ZW5jb2RlRmxvYXQoZSl7bGV0IHQ9ZS50b1N0cmluZygpO2NvbnN0IGk9Q0ZGQ29tcGlsZXIuRW5jb2RlRmxvYXRSZWdFeHAuZXhlYyh0KTtpZihpKXtjb25zdCBhPXBhcnNlRmxvYXQoIjFlIisoKGlbMl0/K2lbMl06MCkraVsxXS5sZW5ndGgpKTt0PShNYXRoLnJvdW5kKGUqYSkvYSkudG9TdHJpbmcoKX1sZXQgYSxzLHI9IiI7Zm9yKGE9MCxzPXQubGVuZ3RoO2E8czsrK2Epe2NvbnN0IGU9dFthXTtyKz0iZSI9PT1lPyItIj09PXRbKythXT8iYyI6ImIiOiIuIj09PWU/ImEiOiItIj09PWU/ImUiOmV9cis9MSZyLmxlbmd0aD8iZiI6ImZmIjtjb25zdCBuPVszMF07Zm9yKGE9MCxzPXIubGVuZ3RoO2E8czthKz0yKW4ucHVzaChwYXJzZUludChyLnN1YnN0cmluZyhhLGErMiksMTYpKTtyZXR1cm4gbn1lbmNvZGVJbnRlZ2VyKGUpe2xldCB0O3Q9ZT49LTEwNyYmZTw9MTA3P1tlKzEzOV06ZT49MTA4JiZlPD0xMTMxP1syNDcrKChlLT0xMDgpPj44KSwyNTUmZV06ZT49LTExMzEmJmU8PS0xMDg/WzI1MSsoKGU9LWUtMTA4KT4+OCksMjU1JmVdOmU+PS0zMjc2OCYmZTw9MzI3Njc/WzI4LGU+PjgmMjU1LDI1NSZlXTpbMjksZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZV07cmV0dXJuIHR9Y29tcGlsZUhlYWRlcihlKXtyZXR1cm5bZS5tYWpvcixlLm1pbm9yLDQsZS5vZmZTaXplXX1jb21waWxlTmFtZUluZGV4KGUpe2NvbnN0IHQ9bmV3IENGRkluZGV4O2Zvcihjb25zdCBpIG9mIGUpe2NvbnN0IGU9TWF0aC5taW4oaS5sZW5ndGgsMTI3KTtsZXQgYT1uZXcgQXJyYXkoZSk7Zm9yKGxldCB0PTA7dDxlO3QrKyl7bGV0IGU9aVt0XTsoZTwiISJ8fGU+In4ifHwiWyI9PT1lfHwiXSI9PT1lfHwiKCI9PT1lfHwiKSI9PT1lfHwieyI9PT1lfHwifSI9PT1lfHwiPCI9PT1lfHwiPiI9PT1lfHwiLyI9PT1lfHwiJSI9PT1lKSYmKGU9Il8iKTthW3RdPWV9YT1hLmpvaW4oIiIpOyIiPT09YSYmKGE9IkJhZF9Gb250X05hbWUiKTt0LmFkZChzdHJpbmdUb0J5dGVzKGEpKX1yZXR1cm4gdGhpcy5jb21waWxlSW5kZXgodCl9Y29tcGlsZVRvcERpY3RzKGUsdCxpKXtjb25zdCBhPVtdO2xldCBzPW5ldyBDRkZJbmRleDtmb3IoY29uc3QgciBvZiBlKXtpZihpKXtyLnJlbW92ZUJ5TmFtZSgiQ0lERm9udFZlcnNpb24iKTtyLnJlbW92ZUJ5TmFtZSgiQ0lERm9udFJldmlzaW9uIik7ci5yZW1vdmVCeU5hbWUoIkNJREZvbnRUeXBlIik7ci5yZW1vdmVCeU5hbWUoIkNJRENvdW50Iik7ci5yZW1vdmVCeU5hbWUoIlVJREJhc2UiKX1jb25zdCBlPW5ldyBDRkZPZmZzZXRUcmFja2VyLG49dGhpcy5jb21waWxlRGljdChyLGUpO2EucHVzaChlKTtzLmFkZChuKTtlLm9mZnNldCh0KX1zPXRoaXMuY29tcGlsZUluZGV4KHMsYSk7cmV0dXJue3RyYWNrZXJzOmEsb3V0cHV0OnN9fWNvbXBpbGVQcml2YXRlRGljdHMoZSx0LGkpe2ZvcihsZXQgYT0wLHM9ZS5sZW5ndGg7YTxzOysrYSl7Y29uc3Qgcz1lW2FdLHI9cy5wcml2YXRlRGljdDtpZighcnx8IXMuaGFzTmFtZSgiUHJpdmF0ZSIpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiVGhlcmUgbXVzdCBiZSBhIHByaXZhdGUgZGljdGlvbmFyeS4iKTtjb25zdCBuPW5ldyBDRkZPZmZzZXRUcmFja2VyLG89dGhpcy5jb21waWxlRGljdChyLG4pO2xldCBnPWkubGVuZ3RoO24ub2Zmc2V0KGcpO28ubGVuZ3RofHwoZz0wKTt0W2FdLnNldEVudHJ5TG9jYXRpb24oIlByaXZhdGUiLFtvLmxlbmd0aCxnXSxpKTtpLmFkZChvKTtpZihyLnN1YnJzSW5kZXgmJnIuaGFzTmFtZSgiU3VicnMiKSl7Y29uc3QgZT10aGlzLmNvbXBpbGVJbmRleChyLnN1YnJzSW5kZXgpO24uc2V0RW50cnlMb2NhdGlvbigiU3VicnMiLFtvLmxlbmd0aF0saSk7aS5hZGQoZSl9fX1jb21waWxlRGljdChlLHQpe2NvbnN0IGk9W107Zm9yKGNvbnN0IGEgb2YgZS5vcmRlcil7aWYoIShhIGluIGUudmFsdWVzKSljb250aW51ZTtsZXQgcz1lLnZhbHVlc1thXSxyPWUudHlwZXNbYV07QXJyYXkuaXNBcnJheShyKXx8KHI9W3JdKTtBcnJheS5pc0FycmF5KHMpfHwocz1bc10pO2lmKDAhPT1zLmxlbmd0aCl7Zm9yKGxldCBuPTAsbz1yLmxlbmd0aDtuPG87KytuKXtjb25zdCBvPXJbbl0sZz1zW25dO3N3aXRjaChvKXtjYXNlIm51bSI6Y2FzZSJzaWQiOmkucHVzaCguLi50aGlzLmVuY29kZU51bWJlcihnKSk7YnJlYWs7Y2FzZSJvZmZzZXQiOmNvbnN0IHI9ZS5rZXlUb05hbWVNYXBbYV07dC5pc1RyYWNraW5nKHIpfHx0LnRyYWNrKHIsaS5sZW5ndGgpO2kucHVzaCgyOSwwLDAsMCwwKTticmVhaztjYXNlImFycmF5IjpjYXNlImRlbHRhIjppLnB1c2goLi4udGhpcy5lbmNvZGVOdW1iZXIoZykpO2ZvcihsZXQgZT0xLHQ9cy5sZW5ndGg7ZTx0OysrZSlpLnB1c2goLi4udGhpcy5lbmNvZGVOdW1iZXIoc1tlXSkpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEZvcm1hdEVycm9yKGBVbmtub3duIGRhdGEgdHlwZSBvZiAke299YCl9fWkucHVzaCguLi5lLm9wY29kZXNbYV0pfX1yZXR1cm4gaX1jb21waWxlU3RyaW5nSW5kZXgoZSl7Y29uc3QgdD1uZXcgQ0ZGSW5kZXg7Zm9yKGNvbnN0IGkgb2YgZSl0LmFkZChzdHJpbmdUb0J5dGVzKGkpKTtyZXR1cm4gdGhpcy5jb21waWxlSW5kZXgodCl9Y29tcGlsZUNoYXJTdHJpbmdzKGUpe2NvbnN0IHQ9bmV3IENGRkluZGV4O2ZvcihsZXQgaT0wO2k8ZS5jb3VudDtpKyspe2NvbnN0IGE9ZS5nZXQoaSk7MCE9PWEubGVuZ3RoP3QuYWRkKGEpOnQuYWRkKG5ldyBVaW50OEFycmF5KFsxMzksMTRdKSl9cmV0dXJuIHRoaXMuY29tcGlsZUluZGV4KHQpfWNvbXBpbGVDaGFyc2V0KGUsdCxpLGEpe2xldCBzO2NvbnN0IHI9dC0xO2lmKGEpcz1uZXcgVWludDhBcnJheShbMiwwLDAscj4+OCYyNTUsMjU1JnJdKTtlbHNle3M9bmV3IFVpbnQ4QXJyYXkoMSsyKnIpO3NbMF09MDtsZXQgdD0wO2NvbnN0IGE9ZS5jaGFyc2V0Lmxlbmd0aDtsZXQgbj0hMTtmb3IobGV0IHI9MTtyPHMubGVuZ3RoO3IrPTIpe2xldCBvPTA7aWYodDxhKXtjb25zdCBhPWUuY2hhcnNldFt0KytdO289aS5nZXRTSUQoYSk7aWYoLTE9PT1vKXtvPTA7aWYoIW4pe249ITA7d2FybihgQ291bGRuJ3QgZmluZCAke2F9IGluIENGRiBzdHJpbmdzYCl9fX1zW3JdPW8+PjgmMjU1O3NbcisxXT0yNTUmb319cmV0dXJuIHRoaXMuY29tcGlsZVR5cGVkQXJyYXkocyl9Y29tcGlsZUVuY29kaW5nKGUpe3JldHVybiB0aGlzLmNvbXBpbGVUeXBlZEFycmF5KGUucmF3KX1jb21waWxlRkRTZWxlY3QoZSl7Y29uc3QgdD1lLmZvcm1hdDtsZXQgaSxhO3N3aXRjaCh0KXtjYXNlIDA6aT1uZXcgVWludDhBcnJheSgxK2UuZmRTZWxlY3QubGVuZ3RoKTtpWzBdPXQ7Zm9yKGE9MDthPGUuZmRTZWxlY3QubGVuZ3RoO2ErKylpW2ErMV09ZS5mZFNlbGVjdFthXTticmVhaztjYXNlIDM6Y29uc3Qgcz0wO2xldCByPWUuZmRTZWxlY3RbMF07Y29uc3Qgbj1bdCwwLDAscz4+OCYyNTUsMjU1JnMscl07Zm9yKGE9MTthPGUuZmRTZWxlY3QubGVuZ3RoO2ErKyl7Y29uc3QgdD1lLmZkU2VsZWN0W2FdO2lmKHQhPT1yKXtuLnB1c2goYT4+OCYyNTUsMjU1JmEsdCk7cj10fX1jb25zdCBvPShuLmxlbmd0aC0zKS8zO25bMV09bz4+OCYyNTU7blsyXT0yNTUmbztuLnB1c2goYT4+OCYyNTUsMjU1JmEpO2k9bmV3IFVpbnQ4QXJyYXkobil9cmV0dXJuIHRoaXMuY29tcGlsZVR5cGVkQXJyYXkoaSl9Y29tcGlsZVR5cGVkQXJyYXkoZSl7cmV0dXJuIEFycmF5LmZyb20oZSl9Y29tcGlsZUluZGV4KGUsdD1bXSl7Y29uc3QgaT1lLm9iamVjdHMsYT1pLmxlbmd0aDtpZigwPT09YSlyZXR1cm5bMCwwXTtjb25zdCBzPVthPj44JjI1NSwyNTUmYV07bGV0IHIsbixvPTE7Zm9yKHI9MDtyPGE7KytyKW8rPWlbcl0ubGVuZ3RoO249bzwyNTY/MTpvPDY1NTM2PzI6bzwxNjc3NzIxNj8zOjQ7cy5wdXNoKG4pO2xldCBnPTE7Zm9yKHI9MDtyPGErMTtyKyspezE9PT1uP3MucHVzaCgyNTUmZyk6Mj09PW4/cy5wdXNoKGc+PjgmMjU1LDI1NSZnKTozPT09bj9zLnB1c2goZz4+MTYmMjU1LGc+PjgmMjU1LDI1NSZnKTpzLnB1c2goZz4+PjI0JjI1NSxnPj4xNiYyNTUsZz4+OCYyNTUsMjU1JmcpO2lbcl0mJihnKz1pW3JdLmxlbmd0aCl9Zm9yKHI9MDtyPGE7cisrKXt0W3JdJiZ0W3JdLm9mZnNldChzLmxlbmd0aCk7cy5wdXNoKC4uLmlbcl0pfXJldHVybiBzfX1jb25zdCBOaT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2UuQT02NTtlLkFFPTE5ODtlLkFFYWN1dGU9NTA4O2UuQUVtYWNyb249NDgyO2UuQUVzbWFsbD02MzQ2MjtlLkFhY3V0ZT0xOTM7ZS5BYWN1dGVzbWFsbD02MzQ1NztlLkFicmV2ZT0yNTg7ZS5BYnJldmVhY3V0ZT03ODU0O2UuQWJyZXZlY3lyaWxsaWM9MTIzMjtlLkFicmV2ZWRvdGJlbG93PTc4NjI7ZS5BYnJldmVncmF2ZT03ODU2O2UuQWJyZXZlaG9va2Fib3ZlPTc4NTg7ZS5BYnJldmV0aWxkZT03ODYwO2UuQWNhcm9uPTQ2MTtlLkFjaXJjbGU9OTM5ODtlLkFjaXJjdW1mbGV4PTE5NDtlLkFjaXJjdW1mbGV4YWN1dGU9Nzg0NDtlLkFjaXJjdW1mbGV4ZG90YmVsb3c9Nzg1MjtlLkFjaXJjdW1mbGV4Z3JhdmU9Nzg0NjtlLkFjaXJjdW1mbGV4aG9va2Fib3ZlPTc4NDg7ZS5BY2lyY3VtZmxleHNtYWxsPTYzNDU4O2UuQWNpcmN1bWZsZXh0aWxkZT03ODUwO2UuQWN1dGU9NjMxNzc7ZS5BY3V0ZXNtYWxsPTYzNDEyO2UuQWN5cmlsbGljPTEwNDA7ZS5BZGJsZ3JhdmU9NTEyO2UuQWRpZXJlc2lzPTE5NjtlLkFkaWVyZXNpc2N5cmlsbGljPTEyMzQ7ZS5BZGllcmVzaXNtYWNyb249NDc4O2UuQWRpZXJlc2lzc21hbGw9NjM0NjA7ZS5BZG90YmVsb3c9Nzg0MDtlLkFkb3RtYWNyb249NDgwO2UuQWdyYXZlPTE5MjtlLkFncmF2ZXNtYWxsPTYzNDU2O2UuQWhvb2thYm92ZT03ODQyO2UuQWllY3lyaWxsaWM9MTIzNjtlLkFpbnZlcnRlZGJyZXZlPTUxNDtlLkFscGhhPTkxMztlLkFscGhhdG9ub3M9OTAyO2UuQW1hY3Jvbj0yNTY7ZS5BbW9ub3NwYWNlPTY1MzEzO2UuQW9nb25laz0yNjA7ZS5BcmluZz0xOTc7ZS5BcmluZ2FjdXRlPTUwNjtlLkFyaW5nYmVsb3c9NzY4MDtlLkFyaW5nc21hbGw9NjM0NjE7ZS5Bc21hbGw9NjMzMjk7ZS5BdGlsZGU9MTk1O2UuQXRpbGRlc21hbGw9NjM0NTk7ZS5BeWJhcm1lbmlhbj0xMzI5O2UuQj02NjtlLkJjaXJjbGU9OTM5OTtlLkJkb3RhY2NlbnQ9NzY4MjtlLkJkb3RiZWxvdz03Njg0O2UuQmVjeXJpbGxpYz0xMDQxO2UuQmVuYXJtZW5pYW49MTMzMDtlLkJldGE9OTE0O2UuQmhvb2s9Mzg1O2UuQmxpbmViZWxvdz03Njg2O2UuQm1vbm9zcGFjZT02NTMxNDtlLkJyZXZlc21hbGw9NjMyMjA7ZS5Cc21hbGw9NjMzMzA7ZS5CdG9wYmFyPTM4NjtlLkM9Njc7ZS5DYWFybWVuaWFuPTEzNDI7ZS5DYWN1dGU9MjYyO2UuQ2Fyb249NjMxNzg7ZS5DYXJvbnNtYWxsPTYzMjIxO2UuQ2Nhcm9uPTI2ODtlLkNjZWRpbGxhPTE5OTtlLkNjZWRpbGxhYWN1dGU9NzY4ODtlLkNjZWRpbGxhc21hbGw9NjM0NjM7ZS5DY2lyY2xlPTk0MDA7ZS5DY2lyY3VtZmxleD0yNjQ7ZS5DZG90PTI2NjtlLkNkb3RhY2NlbnQ9MjY2O2UuQ2VkaWxsYXNtYWxsPTYzNDE2O2UuQ2hhYXJtZW5pYW49MTM1MztlLkNoZWFia2hhc2lhbmN5cmlsbGljPTEyMTI7ZS5DaGVjeXJpbGxpYz0xMDYzO2UuQ2hlZGVzY2VuZGVyYWJraGFzaWFuY3lyaWxsaWM9MTIxNDtlLkNoZWRlc2NlbmRlcmN5cmlsbGljPTEyMDY7ZS5DaGVkaWVyZXNpc2N5cmlsbGljPTEyNjg7ZS5DaGVoYXJtZW5pYW49MTM0NztlLkNoZWtoYWthc3NpYW5jeXJpbGxpYz0xMjI3O2UuQ2hldmVydGljYWxzdHJva2VjeXJpbGxpYz0xMjA4O2UuQ2hpPTkzNTtlLkNob29rPTM5MTtlLkNpcmN1bWZsZXhzbWFsbD02MzIyMjtlLkNtb25vc3BhY2U9NjUzMTU7ZS5Db2FybWVuaWFuPTEzNjE7ZS5Dc21hbGw9NjMzMzE7ZS5EPTY4O2UuRFo9NDk3O2UuRFpjYXJvbj00NTI7ZS5EYWFybWVuaWFuPTEzMzI7ZS5EYWZyaWNhbj0zOTM7ZS5EY2Fyb249MjcwO2UuRGNlZGlsbGE9NzY5NjtlLkRjaXJjbGU9OTQwMTtlLkRjaXJjdW1mbGV4YmVsb3c9NzY5ODtlLkRjcm9hdD0yNzI7ZS5EZG90YWNjZW50PTc2OTA7ZS5EZG90YmVsb3c9NzY5MjtlLkRlY3lyaWxsaWM9MTA0NDtlLkRlaWNvcHRpYz0xMDA2O2UuRGVsdGE9ODcxMDtlLkRlbHRhZ3JlZWs9OTE2O2UuRGhvb2s9Mzk0O2UuRGllcmVzaXM9NjMxNzk7ZS5EaWVyZXNpc0FjdXRlPTYzMTgwO2UuRGllcmVzaXNHcmF2ZT02MzE4MTtlLkRpZXJlc2lzc21hbGw9NjM0MDA7ZS5EaWdhbW1hZ3JlZWs9OTg4O2UuRGplY3lyaWxsaWM9MTAyNjtlLkRsaW5lYmVsb3c9NzY5NDtlLkRtb25vc3BhY2U9NjUzMTY7ZS5Eb3RhY2NlbnRzbWFsbD02MzIyMztlLkRzbGFzaD0yNzI7ZS5Ec21hbGw9NjMzMzI7ZS5EdG9wYmFyPTM5NTtlLkR6PTQ5ODtlLkR6Y2Fyb249NDUzO2UuRHplYWJraGFzaWFuY3lyaWxsaWM9MTI0ODtlLkR6ZWN5cmlsbGljPTEwMjk7ZS5EemhlY3lyaWxsaWM9MTAzOTtlLkU9Njk7ZS5FYWN1dGU9MjAxO2UuRWFjdXRlc21hbGw9NjM0NjU7ZS5FYnJldmU9Mjc2O2UuRWNhcm9uPTI4MjtlLkVjZWRpbGxhYnJldmU9NzcwODtlLkVjaGFybWVuaWFuPTEzMzM7ZS5FY2lyY2xlPTk0MDI7ZS5FY2lyY3VtZmxleD0yMDI7ZS5FY2lyY3VtZmxleGFjdXRlPTc4NzA7ZS5FY2lyY3VtZmxleGJlbG93PTc3MDQ7ZS5FY2lyY3VtZmxleGRvdGJlbG93PTc4Nzg7ZS5FY2lyY3VtZmxleGdyYXZlPTc4NzI7ZS5FY2lyY3VtZmxleGhvb2thYm92ZT03ODc0O2UuRWNpcmN1bWZsZXhzbWFsbD02MzQ2NjtlLkVjaXJjdW1mbGV4dGlsZGU9Nzg3NjtlLkVjeXJpbGxpYz0xMDI4O2UuRWRibGdyYXZlPTUxNjtlLkVkaWVyZXNpcz0yMDM7ZS5FZGllcmVzaXNzbWFsbD02MzQ2NztlLkVkb3Q9Mjc4O2UuRWRvdGFjY2VudD0yNzg7ZS5FZG90YmVsb3c9Nzg2NDtlLkVmY3lyaWxsaWM9MTA2MDtlLkVncmF2ZT0yMDA7ZS5FZ3JhdmVzbWFsbD02MzQ2NDtlLkVoYXJtZW5pYW49MTMzNTtlLkVob29rYWJvdmU9Nzg2NjtlLkVpZ2h0cm9tYW49ODU1MTtlLkVpbnZlcnRlZGJyZXZlPTUxODtlLkVpb3RpZmllZGN5cmlsbGljPTExMjQ7ZS5FbGN5cmlsbGljPTEwNTE7ZS5FbGV2ZW5yb21hbj04NTU0O2UuRW1hY3Jvbj0yNzQ7ZS5FbWFjcm9uYWN1dGU9NzcwMjtlLkVtYWNyb25ncmF2ZT03NzAwO2UuRW1jeXJpbGxpYz0xMDUyO2UuRW1vbm9zcGFjZT02NTMxNztlLkVuY3lyaWxsaWM9MTA1MztlLkVuZGVzY2VuZGVyY3lyaWxsaWM9MTE4NjtlLkVuZz0zMzA7ZS5FbmdoZWN5cmlsbGljPTExODg7ZS5Fbmhvb2tjeXJpbGxpYz0xMjIzO2UuRW9nb25laz0yODA7ZS5Fb3Blbj00MDA7ZS5FcHNpbG9uPTkxNztlLkVwc2lsb250b25vcz05MDQ7ZS5FcmN5cmlsbGljPTEwNTY7ZS5FcmV2ZXJzZWQ9Mzk4O2UuRXJldmVyc2VkY3lyaWxsaWM9MTA2OTtlLkVzY3lyaWxsaWM9MTA1NztlLkVzZGVzY2VuZGVyY3lyaWxsaWM9MTE5NDtlLkVzaD00MjU7ZS5Fc21hbGw9NjMzMzM7ZS5FdGE9OTE5O2UuRXRhcm1lbmlhbj0xMzM2O2UuRXRhdG9ub3M9OTA1O2UuRXRoPTIwODtlLkV0aHNtYWxsPTYzNDcyO2UuRXRpbGRlPTc4Njg7ZS5FdGlsZGViZWxvdz03NzA2O2UuRXVybz04MzY0O2UuRXpoPTQzOTtlLkV6aGNhcm9uPTQ5NDtlLkV6aHJldmVyc2VkPTQ0MDtlLkY9NzA7ZS5GY2lyY2xlPTk0MDM7ZS5GZG90YWNjZW50PTc3MTA7ZS5GZWhhcm1lbmlhbj0xMzY2O2UuRmVpY29wdGljPTk5NjtlLkZob29rPTQwMTtlLkZpdGFjeXJpbGxpYz0xMTM4O2UuRml2ZXJvbWFuPTg1NDg7ZS5GbW9ub3NwYWNlPTY1MzE4O2UuRm91cnJvbWFuPTg1NDc7ZS5Gc21hbGw9NjMzMzQ7ZS5HPTcxO2UuR0JzcXVhcmU9MTMxOTE7ZS5HYWN1dGU9NTAwO2UuR2FtbWE9OTE1O2UuR2FtbWFhZnJpY2FuPTQwNDtlLkdhbmdpYWNvcHRpYz0xMDAyO2UuR2JyZXZlPTI4NjtlLkdjYXJvbj00ODY7ZS5HY2VkaWxsYT0yOTA7ZS5HY2lyY2xlPTk0MDQ7ZS5HY2lyY3VtZmxleD0yODQ7ZS5HY29tbWFhY2NlbnQ9MjkwO2UuR2RvdD0yODg7ZS5HZG90YWNjZW50PTI4ODtlLkdlY3lyaWxsaWM9MTA0MztlLkdoYWRhcm1lbmlhbj0xMzQ2O2UuR2hlbWlkZGxlaG9va2N5cmlsbGljPTExNzI7ZS5HaGVzdHJva2VjeXJpbGxpYz0xMTcwO2UuR2hldXB0dXJuY3lyaWxsaWM9MTE2ODtlLkdob29rPTQwMztlLkdpbWFybWVuaWFuPTEzMzE7ZS5HamVjeXJpbGxpYz0xMDI3O2UuR21hY3Jvbj03NzEyO2UuR21vbm9zcGFjZT02NTMxOTtlLkdyYXZlPTYzMTgyO2UuR3JhdmVzbWFsbD02MzMyODtlLkdzbWFsbD02MzMzNTtlLkdzbWFsbGhvb2s9NjY3O2UuR3N0cm9rZT00ODQ7ZS5IPTcyO2UuSDE4NTMzPTk2Nzk7ZS5IMTg1NDM9OTY0MjtlLkgxODU1MT05NjQzO2UuSDIyMDczPTk2MzM7ZS5IUHNxdWFyZT0xMzI1OTtlLkhhYWJraGFzaWFuY3lyaWxsaWM9MTE5MjtlLkhhZGVzY2VuZGVyY3lyaWxsaWM9MTIwMjtlLkhhcmRzaWduY3lyaWxsaWM9MTA2NjtlLkhiYXI9Mjk0O2UuSGJyZXZlYmVsb3c9NzcyMjtlLkhjZWRpbGxhPTc3MjA7ZS5IY2lyY2xlPTk0MDU7ZS5IY2lyY3VtZmxleD0yOTI7ZS5IZGllcmVzaXM9NzcxODtlLkhkb3RhY2NlbnQ9NzcxNDtlLkhkb3RiZWxvdz03NzE2O2UuSG1vbm9zcGFjZT02NTMyMDtlLkhvYXJtZW5pYW49MTM0NDtlLkhvcmljb3B0aWM9MWUzO2UuSHNtYWxsPTYzMzM2O2UuSHVuZ2FydW1sYXV0PTYzMTgzO2UuSHVuZ2FydW1sYXV0c21hbGw9NjMyMjQ7ZS5IenNxdWFyZT0xMzIwMDtlLkk9NzM7ZS5JQWN5cmlsbGljPTEwNzE7ZS5JSj0zMDY7ZS5JVWN5cmlsbGljPTEwNzA7ZS5JYWN1dGU9MjA1O2UuSWFjdXRlc21hbGw9NjM0Njk7ZS5JYnJldmU9MzAwO2UuSWNhcm9uPTQ2MztlLkljaXJjbGU9OTQwNjtlLkljaXJjdW1mbGV4PTIwNjtlLkljaXJjdW1mbGV4c21hbGw9NjM0NzA7ZS5JY3lyaWxsaWM9MTAzMDtlLklkYmxncmF2ZT01MjA7ZS5JZGllcmVzaXM9MjA3O2UuSWRpZXJlc2lzYWN1dGU9NzcyNjtlLklkaWVyZXNpc2N5cmlsbGljPTEyNTI7ZS5JZGllcmVzaXNzbWFsbD02MzQ3MTtlLklkb3Q9MzA0O2UuSWRvdGFjY2VudD0zMDQ7ZS5JZG90YmVsb3c9Nzg4MjtlLkllYnJldmVjeXJpbGxpYz0xMjM4O2UuSWVjeXJpbGxpYz0xMDQ1O2UuSWZyYWt0dXI9ODQ2NTtlLklncmF2ZT0yMDQ7ZS5JZ3JhdmVzbWFsbD02MzQ2ODtlLklob29rYWJvdmU9Nzg4MDtlLklpY3lyaWxsaWM9MTA0ODtlLklpbnZlcnRlZGJyZXZlPTUyMjtlLklpc2hvcnRjeXJpbGxpYz0xMDQ5O2UuSW1hY3Jvbj0yOTg7ZS5JbWFjcm9uY3lyaWxsaWM9MTI1MDtlLkltb25vc3BhY2U9NjUzMjE7ZS5Jbmlhcm1lbmlhbj0xMzM5O2UuSW9jeXJpbGxpYz0xMDI1O2UuSW9nb25laz0zMDI7ZS5Jb3RhPTkyMTtlLklvdGFhZnJpY2FuPTQwNjtlLklvdGFkaWVyZXNpcz05Mzg7ZS5Jb3RhdG9ub3M9OTA2O2UuSXNtYWxsPTYzMzM3O2UuSXN0cm9rZT00MDc7ZS5JdGlsZGU9Mjk2O2UuSXRpbGRlYmVsb3c9NzcyNDtlLkl6aGl0c2FjeXJpbGxpYz0xMTQwO2UuSXpoaXRzYWRibGdyYXZlY3lyaWxsaWM9MTE0MjtlLko9NzQ7ZS5KYWFybWVuaWFuPTEzNDU7ZS5KY2lyY2xlPTk0MDc7ZS5KY2lyY3VtZmxleD0zMDg7ZS5KZWN5cmlsbGljPTEwMzI7ZS5KaGVoYXJtZW5pYW49MTM1NTtlLkptb25vc3BhY2U9NjUzMjI7ZS5Kc21hbGw9NjMzMzg7ZS5LPTc1O2UuS0JzcXVhcmU9MTMxODk7ZS5LS3NxdWFyZT0xMzI2MTtlLkthYmFzaGtpcmN5cmlsbGljPTExODQ7ZS5LYWN1dGU9NzcyODtlLkthY3lyaWxsaWM9MTA1MDtlLkthZGVzY2VuZGVyY3lyaWxsaWM9MTE3ODtlLkthaG9va2N5cmlsbGljPTEyMTk7ZS5LYXBwYT05MjI7ZS5LYXN0cm9rZWN5cmlsbGljPTExODI7ZS5LYXZlcnRpY2Fsc3Ryb2tlY3lyaWxsaWM9MTE4MDtlLktjYXJvbj00ODg7ZS5LY2VkaWxsYT0zMTA7ZS5LY2lyY2xlPTk0MDg7ZS5LY29tbWFhY2NlbnQ9MzEwO2UuS2RvdGJlbG93PTc3MzA7ZS5LZWhhcm1lbmlhbj0xMzY0O2UuS2VuYXJtZW5pYW49MTM0MztlLktoYWN5cmlsbGljPTEwNjE7ZS5LaGVpY29wdGljPTk5ODtlLktob29rPTQwODtlLktqZWN5cmlsbGljPTEwMzY7ZS5LbGluZWJlbG93PTc3MzI7ZS5LbW9ub3NwYWNlPTY1MzIzO2UuS29wcGFjeXJpbGxpYz0xMTUyO2UuS29wcGFncmVlaz05OTA7ZS5Lc2ljeXJpbGxpYz0xMTM0O2UuS3NtYWxsPTYzMzM5O2UuTD03NjtlLkxKPTQ1NTtlLkxMPTYzMTY3O2UuTGFjdXRlPTMxMztlLkxhbWJkYT05MjM7ZS5MY2Fyb249MzE3O2UuTGNlZGlsbGE9MzE1O2UuTGNpcmNsZT05NDA5O2UuTGNpcmN1bWZsZXhiZWxvdz03NzQwO2UuTGNvbW1hYWNjZW50PTMxNTtlLkxkb3Q9MzE5O2UuTGRvdGFjY2VudD0zMTk7ZS5MZG90YmVsb3c9NzczNDtlLkxkb3RiZWxvd21hY3Jvbj03NzM2O2UuTGl3bmFybWVuaWFuPTEzNDA7ZS5Maj00NTY7ZS5MamVjeXJpbGxpYz0xMDMzO2UuTGxpbmViZWxvdz03NzM4O2UuTG1vbm9zcGFjZT02NTMyNDtlLkxzbGFzaD0zMjE7ZS5Mc2xhc2hzbWFsbD02MzIyNTtlLkxzbWFsbD02MzM0MDtlLk09Nzc7ZS5NQnNxdWFyZT0xMzE5MDtlLk1hY3Jvbj02MzE4NDtlLk1hY3JvbnNtYWxsPTYzNDA3O2UuTWFjdXRlPTc3NDI7ZS5NY2lyY2xlPTk0MTA7ZS5NZG90YWNjZW50PTc3NDQ7ZS5NZG90YmVsb3c9Nzc0NjtlLk1lbmFybWVuaWFuPTEzNDg7ZS5NbW9ub3NwYWNlPTY1MzI1O2UuTXNtYWxsPTYzMzQxO2UuTXR1cm5lZD00MTI7ZS5NdT05MjQ7ZS5OPTc4O2UuTko9NDU4O2UuTmFjdXRlPTMyMztlLk5jYXJvbj0zMjc7ZS5OY2VkaWxsYT0zMjU7ZS5OY2lyY2xlPTk0MTE7ZS5OY2lyY3VtZmxleGJlbG93PTc3NTQ7ZS5OY29tbWFhY2NlbnQ9MzI1O2UuTmRvdGFjY2VudD03NzQ4O2UuTmRvdGJlbG93PTc3NTA7ZS5OaG9va2xlZnQ9NDEzO2UuTmluZXJvbWFuPTg1NTI7ZS5Oaj00NTk7ZS5OamVjeXJpbGxpYz0xMDM0O2UuTmxpbmViZWxvdz03NzUyO2UuTm1vbm9zcGFjZT02NTMyNjtlLk5vd2FybWVuaWFuPTEzNTA7ZS5Oc21hbGw9NjMzNDI7ZS5OdGlsZGU9MjA5O2UuTnRpbGRlc21hbGw9NjM0NzM7ZS5OdT05MjU7ZS5PPTc5O2UuT0U9MzM4O2UuT0VzbWFsbD02MzIyNjtlLk9hY3V0ZT0yMTE7ZS5PYWN1dGVzbWFsbD02MzQ3NTtlLk9iYXJyZWRjeXJpbGxpYz0xMjU2O2UuT2JhcnJlZGRpZXJlc2lzY3lyaWxsaWM9MTI1ODtlLk9icmV2ZT0zMzQ7ZS5PY2Fyb249NDY1O2UuT2NlbnRlcmVkdGlsZGU9NDE1O2UuT2NpcmNsZT05NDEyO2UuT2NpcmN1bWZsZXg9MjEyO2UuT2NpcmN1bWZsZXhhY3V0ZT03ODg4O2UuT2NpcmN1bWZsZXhkb3RiZWxvdz03ODk2O2UuT2NpcmN1bWZsZXhncmF2ZT03ODkwO2UuT2NpcmN1bWZsZXhob29rYWJvdmU9Nzg5MjtlLk9jaXJjdW1mbGV4c21hbGw9NjM0NzY7ZS5PY2lyY3VtZmxleHRpbGRlPTc4OTQ7ZS5PY3lyaWxsaWM9MTA1NDtlLk9kYmxhY3V0ZT0zMzY7ZS5PZGJsZ3JhdmU9NTI0O2UuT2RpZXJlc2lzPTIxNDtlLk9kaWVyZXNpc2N5cmlsbGljPTEyNTQ7ZS5PZGllcmVzaXNzbWFsbD02MzQ3ODtlLk9kb3RiZWxvdz03ODg0O2UuT2dvbmVrc21hbGw9NjMyMjc7ZS5PZ3JhdmU9MjEwO2UuT2dyYXZlc21hbGw9NjM0NzQ7ZS5PaGFybWVuaWFuPTEzNjU7ZS5PaG09ODQ4NjtlLk9ob29rYWJvdmU9Nzg4NjtlLk9ob3JuPTQxNjtlLk9ob3JuYWN1dGU9Nzg5ODtlLk9ob3JuZG90YmVsb3c9NzkwNjtlLk9ob3JuZ3JhdmU9NzkwMDtlLk9ob3JuaG9va2Fib3ZlPTc5MDI7ZS5PaG9ybnRpbGRlPTc5MDQ7ZS5PaHVuZ2FydW1sYXV0PTMzNjtlLk9pPTQxODtlLk9pbnZlcnRlZGJyZXZlPTUyNjtlLk9tYWNyb249MzMyO2UuT21hY3JvbmFjdXRlPTc3NjI7ZS5PbWFjcm9uZ3JhdmU9Nzc2MDtlLk9tZWdhPTg0ODY7ZS5PbWVnYWN5cmlsbGljPTExMjA7ZS5PbWVnYWdyZWVrPTkzNztlLk9tZWdhcm91bmRjeXJpbGxpYz0xMTQ2O2UuT21lZ2F0aXRsb2N5cmlsbGljPTExNDg7ZS5PbWVnYXRvbm9zPTkxMTtlLk9taWNyb249OTI3O2UuT21pY3JvbnRvbm9zPTkwODtlLk9tb25vc3BhY2U9NjUzMjc7ZS5PbmVyb21hbj04NTQ0O2UuT29nb25laz00OTA7ZS5Pb2dvbmVrbWFjcm9uPTQ5MjtlLk9vcGVuPTM5MDtlLk9zbGFzaD0yMTY7ZS5Pc2xhc2hhY3V0ZT01MTA7ZS5Pc2xhc2hzbWFsbD02MzQ4MDtlLk9zbWFsbD02MzM0MztlLk9zdHJva2VhY3V0ZT01MTA7ZS5PdGN5cmlsbGljPTExNTA7ZS5PdGlsZGU9MjEzO2UuT3RpbGRlYWN1dGU9Nzc1NjtlLk90aWxkZWRpZXJlc2lzPTc3NTg7ZS5PdGlsZGVzbWFsbD02MzQ3NztlLlA9ODA7ZS5QYWN1dGU9Nzc2NDtlLlBjaXJjbGU9OTQxMztlLlBkb3RhY2NlbnQ9Nzc2NjtlLlBlY3lyaWxsaWM9MTA1NTtlLlBlaGFybWVuaWFuPTEzNTQ7ZS5QZW1pZGRsZWhvb2tjeXJpbGxpYz0xMTkwO2UuUGhpPTkzNDtlLlBob29rPTQyMDtlLlBpPTkyODtlLlBpd3Jhcm1lbmlhbj0xMzYzO2UuUG1vbm9zcGFjZT02NTMyODtlLlBzaT05MzY7ZS5Qc2ljeXJpbGxpYz0xMTM2O2UuUHNtYWxsPTYzMzQ0O2UuUT04MTtlLlFjaXJjbGU9OTQxNDtlLlFtb25vc3BhY2U9NjUzMjk7ZS5Rc21hbGw9NjMzNDU7ZS5SPTgyO2UuUmFhcm1lbmlhbj0xMzU2O2UuUmFjdXRlPTM0MDtlLlJjYXJvbj0zNDQ7ZS5SY2VkaWxsYT0zNDI7ZS5SY2lyY2xlPTk0MTU7ZS5SY29tbWFhY2NlbnQ9MzQyO2UuUmRibGdyYXZlPTUyODtlLlJkb3RhY2NlbnQ9Nzc2ODtlLlJkb3RiZWxvdz03NzcwO2UuUmRvdGJlbG93bWFjcm9uPTc3NzI7ZS5SZWhhcm1lbmlhbj0xMzYwO2UuUmZyYWt0dXI9ODQ3NjtlLlJobz05Mjk7ZS5SaW5nc21hbGw9NjMyMjg7ZS5SaW52ZXJ0ZWRicmV2ZT01MzA7ZS5SbGluZWJlbG93PTc3NzQ7ZS5SbW9ub3NwYWNlPTY1MzMwO2UuUnNtYWxsPTYzMzQ2O2UuUnNtYWxsaW52ZXJ0ZWQ9NjQxO2UuUnNtYWxsaW52ZXJ0ZWRzdXBlcmlvcj02OTQ7ZS5TPTgzO2UuU0YwMTAwMDA9OTQ4NDtlLlNGMDIwMDAwPTk0OTI7ZS5TRjAzMDAwMD05NDg4O2UuU0YwNDAwMDA9OTQ5NjtlLlNGMDUwMDAwPTk1MzI7ZS5TRjA2MDAwMD05NTE2O2UuU0YwNzAwMDA9OTUyNDtlLlNGMDgwMDAwPTk1MDA7ZS5TRjA5MDAwMD05NTA4O2UuU0YxMDAwMDA9OTQ3MjtlLlNGMTEwMDAwPTk0NzQ7ZS5TRjE5MDAwMD05NTY5O2UuU0YyMDAwMDA9OTU3MDtlLlNGMjEwMDAwPTk1NTg7ZS5TRjIyMDAwMD05NTU3O2UuU0YyMzAwMDA9OTU3MTtlLlNGMjQwMDAwPTk1NTM7ZS5TRjI1MDAwMD05NTU5O2UuU0YyNjAwMDA9OTU2NTtlLlNGMjcwMDAwPTk1NjQ7ZS5TRjI4MDAwMD05NTYzO2UuU0YzNjAwMDA9OTU2NjtlLlNGMzcwMDAwPTk1Njc7ZS5TRjM4MDAwMD05NTYyO2UuU0YzOTAwMDA9OTU1NjtlLlNGNDAwMDAwPTk1Nzc7ZS5TRjQxMDAwMD05NTc0O2UuU0Y0MjAwMDA9OTU2ODtlLlNGNDMwMDAwPTk1NTI7ZS5TRjQ0MDAwMD05NTgwO2UuU0Y0NTAwMDA9OTU3NTtlLlNGNDYwMDAwPTk1NzY7ZS5TRjQ3MDAwMD05NTcyO2UuU0Y0ODAwMDA9OTU3MztlLlNGNDkwMDAwPTk1NjE7ZS5TRjUwMDAwMD05NTYwO2UuU0Y1MTAwMDA9OTU1NDtlLlNGNTIwMDAwPTk1NTU7ZS5TRjUzMDAwMD05NTc5O2UuU0Y1NDAwMDA9OTU3ODtlLlNhY3V0ZT0zNDY7ZS5TYWN1dGVkb3RhY2NlbnQ9Nzc4MDtlLlNhbXBpZ3JlZWs9OTkyO2UuU2Nhcm9uPTM1MjtlLlNjYXJvbmRvdGFjY2VudD03NzgyO2UuU2Nhcm9uc21hbGw9NjMyMjk7ZS5TY2VkaWxsYT0zNTA7ZS5TY2h3YT0zOTk7ZS5TY2h3YWN5cmlsbGljPTEyNDA7ZS5TY2h3YWRpZXJlc2lzY3lyaWxsaWM9MTI0MjtlLlNjaXJjbGU9OTQxNjtlLlNjaXJjdW1mbGV4PTM0ODtlLlNjb21tYWFjY2VudD01MzY7ZS5TZG90YWNjZW50PTc3NzY7ZS5TZG90YmVsb3c9Nzc3ODtlLlNkb3RiZWxvd2RvdGFjY2VudD03Nzg0O2UuU2VoYXJtZW5pYW49MTM1NztlLlNldmVucm9tYW49ODU1MDtlLlNoYWFybWVuaWFuPTEzNTE7ZS5TaGFjeXJpbGxpYz0xMDY0O2UuU2hjaGFjeXJpbGxpYz0xMDY1O2UuU2hlaWNvcHRpYz05OTQ7ZS5TaGhhY3lyaWxsaWM9MTIxMDtlLlNoaW1hY29wdGljPTEwMDQ7ZS5TaWdtYT05MzE7ZS5TaXhyb21hbj04NTQ5O2UuU21vbm9zcGFjZT02NTMzMTtlLlNvZnRzaWduY3lyaWxsaWM9MTA2ODtlLlNzbWFsbD02MzM0NztlLlN0aWdtYWdyZWVrPTk4NjtlLlQ9ODQ7ZS5UYXU9OTMyO2UuVGJhcj0zNTg7ZS5UY2Fyb249MzU2O2UuVGNlZGlsbGE9MzU0O2UuVGNpcmNsZT05NDE3O2UuVGNpcmN1bWZsZXhiZWxvdz03NzkyO2UuVGNvbW1hYWNjZW50PTM1NDtlLlRkb3RhY2NlbnQ9Nzc4NjtlLlRkb3RiZWxvdz03Nzg4O2UuVGVjeXJpbGxpYz0xMDU4O2UuVGVkZXNjZW5kZXJjeXJpbGxpYz0xMTk2O2UuVGVucm9tYW49ODU1MztlLlRldHNlY3lyaWxsaWM9MTIwNDtlLlRoZXRhPTkyMDtlLlRob29rPTQyODtlLlRob3JuPTIyMjtlLlRob3Juc21hbGw9NjM0ODY7ZS5UaHJlZXJvbWFuPTg1NDY7ZS5UaWxkZXNtYWxsPTYzMjMwO2UuVGl3bmFybWVuaWFuPTEzNTk7ZS5UbGluZWJlbG93PTc3OTA7ZS5UbW9ub3NwYWNlPTY1MzMyO2UuVG9hcm1lbmlhbj0xMzM3O2UuVG9uZWZpdmU9NDQ0O2UuVG9uZXNpeD0zODg7ZS5Ub25ldHdvPTQyMztlLlRyZXRyb2ZsZXhob29rPTQzMDtlLlRzZWN5cmlsbGljPTEwNjI7ZS5Uc2hlY3lyaWxsaWM9MTAzNTtlLlRzbWFsbD02MzM0ODtlLlR3ZWx2ZXJvbWFuPTg1NTU7ZS5Ud29yb21hbj04NTQ1O2UuVT04NTtlLlVhY3V0ZT0yMTg7ZS5VYWN1dGVzbWFsbD02MzQ4MjtlLlVicmV2ZT0zNjQ7ZS5VY2Fyb249NDY3O2UuVWNpcmNsZT05NDE4O2UuVWNpcmN1bWZsZXg9MjE5O2UuVWNpcmN1bWZsZXhiZWxvdz03Nzk4O2UuVWNpcmN1bWZsZXhzbWFsbD02MzQ4MztlLlVjeXJpbGxpYz0xMDU5O2UuVWRibGFjdXRlPTM2ODtlLlVkYmxncmF2ZT01MzI7ZS5VZGllcmVzaXM9MjIwO2UuVWRpZXJlc2lzYWN1dGU9NDcxO2UuVWRpZXJlc2lzYmVsb3c9Nzc5NDtlLlVkaWVyZXNpc2Nhcm9uPTQ3MztlLlVkaWVyZXNpc2N5cmlsbGljPTEyNjQ7ZS5VZGllcmVzaXNncmF2ZT00NzU7ZS5VZGllcmVzaXNtYWNyb249NDY5O2UuVWRpZXJlc2lzc21hbGw9NjM0ODQ7ZS5VZG90YmVsb3c9NzkwODtlLlVncmF2ZT0yMTc7ZS5VZ3JhdmVzbWFsbD02MzQ4MTtlLlVob29rYWJvdmU9NzkxMDtlLlVob3JuPTQzMTtlLlVob3JuYWN1dGU9NzkxMjtlLlVob3JuZG90YmVsb3c9NzkyMDtlLlVob3JuZ3JhdmU9NzkxNDtlLlVob3JuaG9va2Fib3ZlPTc5MTY7ZS5VaG9ybnRpbGRlPTc5MTg7ZS5VaHVuZ2FydW1sYXV0PTM2ODtlLlVodW5nYXJ1bWxhdXRjeXJpbGxpYz0xMjY2O2UuVWludmVydGVkYnJldmU9NTM0O2UuVWtjeXJpbGxpYz0xMTQ0O2UuVW1hY3Jvbj0zNjI7ZS5VbWFjcm9uY3lyaWxsaWM9MTI2MjtlLlVtYWNyb25kaWVyZXNpcz03ODAyO2UuVW1vbm9zcGFjZT02NTMzMztlLlVvZ29uZWs9MzcwO2UuVXBzaWxvbj05MzM7ZS5VcHNpbG9uMT05Nzg7ZS5VcHNpbG9uYWN1dGVob29rc3ltYm9sZ3JlZWs9OTc5O2UuVXBzaWxvbmFmcmljYW49NDMzO2UuVXBzaWxvbmRpZXJlc2lzPTkzOTtlLlVwc2lsb25kaWVyZXNpc2hvb2tzeW1ib2xncmVlaz05ODA7ZS5VcHNpbG9uaG9va3N5bWJvbD05Nzg7ZS5VcHNpbG9udG9ub3M9OTEwO2UuVXJpbmc9MzY2O2UuVXNob3J0Y3lyaWxsaWM9MTAzODtlLlVzbWFsbD02MzM0OTtlLlVzdHJhaWdodGN5cmlsbGljPTExOTg7ZS5Vc3RyYWlnaHRzdHJva2VjeXJpbGxpYz0xMjAwO2UuVXRpbGRlPTM2MDtlLlV0aWxkZWFjdXRlPTc4MDA7ZS5VdGlsZGViZWxvdz03Nzk2O2UuVj04NjtlLlZjaXJjbGU9OTQxOTtlLlZkb3RiZWxvdz03ODA2O2UuVmVjeXJpbGxpYz0xMDQyO2UuVmV3YXJtZW5pYW49MTM1ODtlLlZob29rPTQzNDtlLlZtb25vc3BhY2U9NjUzMzQ7ZS5Wb2FybWVuaWFuPTEzNTI7ZS5Wc21hbGw9NjMzNTA7ZS5WdGlsZGU9NzgwNDtlLlc9ODc7ZS5XYWN1dGU9NzgxMDtlLldjaXJjbGU9OTQyMDtlLldjaXJjdW1mbGV4PTM3MjtlLldkaWVyZXNpcz03ODEyO2UuV2RvdGFjY2VudD03ODE0O2UuV2RvdGJlbG93PTc4MTY7ZS5XZ3JhdmU9NzgwODtlLldtb25vc3BhY2U9NjUzMzU7ZS5Xc21hbGw9NjMzNTE7ZS5YPTg4O2UuWGNpcmNsZT05NDIxO2UuWGRpZXJlc2lzPTc4MjA7ZS5YZG90YWNjZW50PTc4MTg7ZS5YZWhhcm1lbmlhbj0xMzQxO2UuWGk9OTI2O2UuWG1vbm9zcGFjZT02NTMzNjtlLlhzbWFsbD02MzM1MjtlLlk9ODk7ZS5ZYWN1dGU9MjIxO2UuWWFjdXRlc21hbGw9NjM0ODU7ZS5ZYXRjeXJpbGxpYz0xMTIyO2UuWWNpcmNsZT05NDIyO2UuWWNpcmN1bWZsZXg9Mzc0O2UuWWRpZXJlc2lzPTM3NjtlLllkaWVyZXNpc3NtYWxsPTYzNDg3O2UuWWRvdGFjY2VudD03ODIyO2UuWWRvdGJlbG93PTc5MjQ7ZS5ZZXJpY3lyaWxsaWM9MTA2NztlLlllcnVkaWVyZXNpc2N5cmlsbGljPTEyNzI7ZS5ZZ3JhdmU9NzkyMjtlLllob29rPTQzNTtlLllob29rYWJvdmU9NzkyNjtlLllpYXJtZW5pYW49MTM0OTtlLllpY3lyaWxsaWM9MTAzMTtlLllpd25hcm1lbmlhbj0xMzYyO2UuWW1vbm9zcGFjZT02NTMzNztlLllzbWFsbD02MzM1MztlLll0aWxkZT03OTI4O2UuWXVzYmlnY3lyaWxsaWM9MTEzMDtlLll1c2JpZ2lvdGlmaWVkY3lyaWxsaWM9MTEzMjtlLll1c2xpdHRsZWN5cmlsbGljPTExMjY7ZS5ZdXNsaXR0bGVpb3RpZmllZGN5cmlsbGljPTExMjg7ZS5aPTkwO2UuWmFhcm1lbmlhbj0xMzM0O2UuWmFjdXRlPTM3NztlLlpjYXJvbj0zODE7ZS5aY2Fyb25zbWFsbD02MzIzMTtlLlpjaXJjbGU9OTQyMztlLlpjaXJjdW1mbGV4PTc4MjQ7ZS5aZG90PTM3OTtlLlpkb3RhY2NlbnQ9Mzc5O2UuWmRvdGJlbG93PTc4MjY7ZS5aZWN5cmlsbGljPTEwNDc7ZS5aZWRlc2NlbmRlcmN5cmlsbGljPTExNzY7ZS5aZWRpZXJlc2lzY3lyaWxsaWM9MTI0NjtlLlpldGE9OTE4O2UuWmhlYXJtZW5pYW49MTMzODtlLlpoZWJyZXZlY3lyaWxsaWM9MTIxNztlLlpoZWN5cmlsbGljPTEwNDY7ZS5aaGVkZXNjZW5kZXJjeXJpbGxpYz0xMTc0O2UuWmhlZGllcmVzaXNjeXJpbGxpYz0xMjQ0O2UuWmxpbmViZWxvdz03ODI4O2UuWm1vbm9zcGFjZT02NTMzODtlLlpzbWFsbD02MzM1NDtlLlpzdHJva2U9NDM3O2UuYT05NztlLmFhYmVuZ2FsaT0yNDM4O2UuYWFjdXRlPTIyNTtlLmFhZGV2YT0yMzEwO2UuYWFndWphcmF0aT0yNjk0O2UuYWFndXJtdWtoaT0yNTY2O2UuYWFtYXRyYWd1cm11a2hpPTI2MjI7ZS5hYXJ1c3F1YXJlPTEzMDU5O2UuYWF2b3dlbHNpZ25iZW5nYWxpPTI0OTQ7ZS5hYXZvd2Vsc2lnbmRldmE9MjM2NjtlLmFhdm93ZWxzaWduZ3VqYXJhdGk9Mjc1MDtlLmFiYnJldmlhdGlvbm1hcmthcm1lbmlhbj0xMzc1O2UuYWJicmV2aWF0aW9uc2lnbmRldmE9MjQxNjtlLmFiZW5nYWxpPTI0Mzc7ZS5hYm9wb21vZm89MTI1NzA7ZS5hYnJldmU9MjU5O2UuYWJyZXZlYWN1dGU9Nzg1NTtlLmFicmV2ZWN5cmlsbGljPTEyMzM7ZS5hYnJldmVkb3RiZWxvdz03ODYzO2UuYWJyZXZlZ3JhdmU9Nzg1NztlLmFicmV2ZWhvb2thYm92ZT03ODU5O2UuYWJyZXZldGlsZGU9Nzg2MTtlLmFjYXJvbj00NjI7ZS5hY2lyY2xlPTk0MjQ7ZS5hY2lyY3VtZmxleD0yMjY7ZS5hY2lyY3VtZmxleGFjdXRlPTc4NDU7ZS5hY2lyY3VtZmxleGRvdGJlbG93PTc4NTM7ZS5hY2lyY3VtZmxleGdyYXZlPTc4NDc7ZS5hY2lyY3VtZmxleGhvb2thYm92ZT03ODQ5O2UuYWNpcmN1bWZsZXh0aWxkZT03ODUxO2UuYWN1dGU9MTgwO2UuYWN1dGViZWxvd2NtYj03OTE7ZS5hY3V0ZWNtYj03Njk7ZS5hY3V0ZWNvbWI9NzY5O2UuYWN1dGVkZXZhPTIzODg7ZS5hY3V0ZWxvd21vZD03MTk7ZS5hY3V0ZXRvbmVjbWI9ODMzO2UuYWN5cmlsbGljPTEwNzI7ZS5hZGJsZ3JhdmU9NTEzO2UuYWRkYWtndXJtdWtoaT0yNjczO2UuYWRldmE9MjMwOTtlLmFkaWVyZXNpcz0yMjg7ZS5hZGllcmVzaXNjeXJpbGxpYz0xMjM1O2UuYWRpZXJlc2lzbWFjcm9uPTQ3OTtlLmFkb3RiZWxvdz03ODQxO2UuYWRvdG1hY3Jvbj00ODE7ZS5hZT0yMzA7ZS5hZWFjdXRlPTUwOTtlLmFla29yZWFuPTEyNjI0O2UuYWVtYWNyb249NDgzO2UuYWZpaTAwMjA4PTgyMTM7ZS5hZmlpMDg5NDE9ODM1NjtlLmFmaWkxMDAxNz0xMDQwO2UuYWZpaTEwMDE4PTEwNDE7ZS5hZmlpMTAwMTk9MTA0MjtlLmFmaWkxMDAyMD0xMDQzO2UuYWZpaTEwMDIxPTEwNDQ7ZS5hZmlpMTAwMjI9MTA0NTtlLmFmaWkxMDAyMz0xMDI1O2UuYWZpaTEwMDI0PTEwNDY7ZS5hZmlpMTAwMjU9MTA0NztlLmFmaWkxMDAyNj0xMDQ4O2UuYWZpaTEwMDI3PTEwNDk7ZS5hZmlpMTAwMjg9MTA1MDtlLmFmaWkxMDAyOT0xMDUxO2UuYWZpaTEwMDMwPTEwNTI7ZS5hZmlpMTAwMzE9MTA1MztlLmFmaWkxMDAzMj0xMDU0O2UuYWZpaTEwMDMzPTEwNTU7ZS5hZmlpMTAwMzQ9MTA1NjtlLmFmaWkxMDAzNT0xMDU3O2UuYWZpaTEwMDM2PTEwNTg7ZS5hZmlpMTAwMzc9MTA1OTtlLmFmaWkxMDAzOD0xMDYwO2UuYWZpaTEwMDM5PTEwNjE7ZS5hZmlpMTAwNDA9MTA2MjtlLmFmaWkxMDA0MT0xMDYzO2UuYWZpaTEwMDQyPTEwNjQ7ZS5hZmlpMTAwNDM9MTA2NTtlLmFmaWkxMDA0ND0xMDY2O2UuYWZpaTEwMDQ1PTEwNjc7ZS5hZmlpMTAwNDY9MTA2ODtlLmFmaWkxMDA0Nz0xMDY5O2UuYWZpaTEwMDQ4PTEwNzA7ZS5hZmlpMTAwNDk9MTA3MTtlLmFmaWkxMDA1MD0xMTY4O2UuYWZpaTEwMDUxPTEwMjY7ZS5hZmlpMTAwNTI9MTAyNztlLmFmaWkxMDA1Mz0xMDI4O2UuYWZpaTEwMDU0PTEwMjk7ZS5hZmlpMTAwNTU9MTAzMDtlLmFmaWkxMDA1Nj0xMDMxO2UuYWZpaTEwMDU3PTEwMzI7ZS5hZmlpMTAwNTg9MTAzMztlLmFmaWkxMDA1OT0xMDM0O2UuYWZpaTEwMDYwPTEwMzU7ZS5hZmlpMTAwNjE9MTAzNjtlLmFmaWkxMDA2Mj0xMDM4O2UuYWZpaTEwMDYzPTYzMTcyO2UuYWZpaTEwMDY0PTYzMTczO2UuYWZpaTEwMDY1PTEwNzI7ZS5hZmlpMTAwNjY9MTA3MztlLmFmaWkxMDA2Nz0xMDc0O2UuYWZpaTEwMDY4PTEwNzU7ZS5hZmlpMTAwNjk9MTA3NjtlLmFmaWkxMDA3MD0xMDc3O2UuYWZpaTEwMDcxPTExMDU7ZS5hZmlpMTAwNzI9MTA3ODtlLmFmaWkxMDA3Mz0xMDc5O2UuYWZpaTEwMDc0PTEwODA7ZS5hZmlpMTAwNzU9MTA4MTtlLmFmaWkxMDA3Nj0xMDgyO2UuYWZpaTEwMDc3PTEwODM7ZS5hZmlpMTAwNzg9MTA4NDtlLmFmaWkxMDA3OT0xMDg1O2UuYWZpaTEwMDgwPTEwODY7ZS5hZmlpMTAwODE9MTA4NztlLmFmaWkxMDA4Mj0xMDg4O2UuYWZpaTEwMDgzPTEwODk7ZS5hZmlpMTAwODQ9MTA5MDtlLmFmaWkxMDA4NT0xMDkxO2UuYWZpaTEwMDg2PTEwOTI7ZS5hZmlpMTAwODc9MTA5MztlLmFmaWkxMDA4OD0xMDk0O2UuYWZpaTEwMDg5PTEwOTU7ZS5hZmlpMTAwOTA9MTA5NjtlLmFmaWkxMDA5MT0xMDk3O2UuYWZpaTEwMDkyPTEwOTg7ZS5hZmlpMTAwOTM9MTA5OTtlLmFmaWkxMDA5ND0xMTAwO2UuYWZpaTEwMDk1PTExMDE7ZS5hZmlpMTAwOTY9MTEwMjtlLmFmaWkxMDA5Nz0xMTAzO2UuYWZpaTEwMDk4PTExNjk7ZS5hZmlpMTAwOTk9MTEwNjtlLmFmaWkxMDEwMD0xMTA3O2UuYWZpaTEwMTAxPTExMDg7ZS5hZmlpMTAxMDI9MTEwOTtlLmFmaWkxMDEwMz0xMTEwO2UuYWZpaTEwMTA0PTExMTE7ZS5hZmlpMTAxMDU9MTExMjtlLmFmaWkxMDEwNj0xMTEzO2UuYWZpaTEwMTA3PTExMTQ7ZS5hZmlpMTAxMDg9MTExNTtlLmFmaWkxMDEwOT0xMTE2O2UuYWZpaTEwMTEwPTExMTg7ZS5hZmlpMTAxNDU9MTAzOTtlLmFmaWkxMDE0Nj0xMTIyO2UuYWZpaTEwMTQ3PTExMzg7ZS5hZmlpMTAxNDg9MTE0MDtlLmFmaWkxMDE5Mj02MzE3NDtlLmFmaWkxMDE5Mz0xMTE5O2UuYWZpaTEwMTk0PTExMjM7ZS5hZmlpMTAxOTU9MTEzOTtlLmFmaWkxMDE5Nj0xMTQxO2UuYWZpaTEwODMxPTYzMTc1O2UuYWZpaTEwODMyPTYzMTc2O2UuYWZpaTEwODQ2PTEyNDE7ZS5hZmlpMjk5PTgyMDY7ZS5hZmlpMzAwPTgyMDc7ZS5hZmlpMzAxPTgyMDU7ZS5hZmlpNTczODE9MTY0MjtlLmFmaWk1NzM4OD0xNTQ4O2UuYWZpaTU3MzkyPTE2MzI7ZS5hZmlpNTczOTM9MTYzMztlLmFmaWk1NzM5ND0xNjM0O2UuYWZpaTU3Mzk1PTE2MzU7ZS5hZmlpNTczOTY9MTYzNjtlLmFmaWk1NzM5Nz0xNjM3O2UuYWZpaTU3Mzk4PTE2Mzg7ZS5hZmlpNTczOTk9MTYzOTtlLmFmaWk1NzQwMD0xNjQwO2UuYWZpaTU3NDAxPTE2NDE7ZS5hZmlpNTc0MDM9MTU2MztlLmFmaWk1NzQwNz0xNTY3O2UuYWZpaTU3NDA5PTE1Njk7ZS5hZmlpNTc0MTA9MTU3MDtlLmFmaWk1NzQxMT0xNTcxO2UuYWZpaTU3NDEyPTE1NzI7ZS5hZmlpNTc0MTM9MTU3MztlLmFmaWk1NzQxND0xNTc0O2UuYWZpaTU3NDE1PTE1NzU7ZS5hZmlpNTc0MTY9MTU3NjtlLmFmaWk1NzQxNz0xNTc3O2UuYWZpaTU3NDE4PTE1Nzg7ZS5hZmlpNTc0MTk9MTU3OTtlLmFmaWk1NzQyMD0xNTgwO2UuYWZpaTU3NDIxPTE1ODE7ZS5hZmlpNTc0MjI9MTU4MjtlLmFmaWk1NzQyMz0xNTgzO2UuYWZpaTU3NDI0PTE1ODQ7ZS5hZmlpNTc0MjU9MTU4NTtlLmFmaWk1NzQyNj0xNTg2O2UuYWZpaTU3NDI3PTE1ODc7ZS5hZmlpNTc0Mjg9MTU4ODtlLmFmaWk1NzQyOT0xNTg5O2UuYWZpaTU3NDMwPTE1OTA7ZS5hZmlpNTc0MzE9MTU5MTtlLmFmaWk1NzQzMj0xNTkyO2UuYWZpaTU3NDMzPTE1OTM7ZS5hZmlpNTc0MzQ9MTU5NDtlLmFmaWk1NzQ0MD0xNjAwO2UuYWZpaTU3NDQxPTE2MDE7ZS5hZmlpNTc0NDI9MTYwMjtlLmFmaWk1NzQ0Mz0xNjAzO2UuYWZpaTU3NDQ0PTE2MDQ7ZS5hZmlpNTc0NDU9MTYwNTtlLmFmaWk1NzQ0Nj0xNjA2O2UuYWZpaTU3NDQ4PTE2MDg7ZS5hZmlpNTc0NDk9MTYwOTtlLmFmaWk1NzQ1MD0xNjEwO2UuYWZpaTU3NDUxPTE2MTE7ZS5hZmlpNTc0NTI9MTYxMjtlLmFmaWk1NzQ1Mz0xNjEzO2UuYWZpaTU3NDU0PTE2MTQ7ZS5hZmlpNTc0NTU9MTYxNTtlLmFmaWk1NzQ1Nj0xNjE2O2UuYWZpaTU3NDU3PTE2MTc7ZS5hZmlpNTc0NTg9MTYxODtlLmFmaWk1NzQ3MD0xNjA3O2UuYWZpaTU3NTA1PTE3MDA7ZS5hZmlpNTc1MDY9MTY2MjtlLmFmaWk1NzUwNz0xNjcwO2UuYWZpaTU3NTA4PTE2ODg7ZS5hZmlpNTc1MDk9MTcxMTtlLmFmaWk1NzUxMT0xNjU3O2UuYWZpaTU3NTEyPTE2NzI7ZS5hZmlpNTc1MTM9MTY4MTtlLmFmaWk1NzUxND0xNzIyO2UuYWZpaTU3NTE5PTE3NDY7ZS5hZmlpNTc1MzQ9MTc0OTtlLmFmaWk1NzYzNj04MzYyO2UuYWZpaTU3NjQ1PTE0NzA7ZS5hZmlpNTc2NTg9MTQ3NTtlLmFmaWk1NzY2ND0xNDg4O2UuYWZpaTU3NjY1PTE0ODk7ZS5hZmlpNTc2NjY9MTQ5MDtlLmFmaWk1NzY2Nz0xNDkxO2UuYWZpaTU3NjY4PTE0OTI7ZS5hZmlpNTc2Njk9MTQ5MztlLmFmaWk1NzY3MD0xNDk0O2UuYWZpaTU3NjcxPTE0OTU7ZS5hZmlpNTc2NzI9MTQ5NjtlLmFmaWk1NzY3Mz0xNDk3O2UuYWZpaTU3Njc0PTE0OTg7ZS5hZmlpNTc2NzU9MTQ5OTtlLmFmaWk1NzY3Nj0xNTAwO2UuYWZpaTU3Njc3PTE1MDE7ZS5hZmlpNTc2Nzg9MTUwMjtlLmFmaWk1NzY3OT0xNTAzO2UuYWZpaTU3NjgwPTE1MDQ7ZS5hZmlpNTc2ODE9MTUwNTtlLmFmaWk1NzY4Mj0xNTA2O2UuYWZpaTU3NjgzPTE1MDc7ZS5hZmlpNTc2ODQ9MTUwODtlLmFmaWk1NzY4NT0xNTA5O2UuYWZpaTU3Njg2PTE1MTA7ZS5hZmlpNTc2ODc9MTUxMTtlLmFmaWk1NzY4OD0xNTEyO2UuYWZpaTU3Njg5PTE1MTM7ZS5hZmlpNTc2OTA9MTUxNDtlLmFmaWk1NzY5ND02NDI5ODtlLmFmaWk1NzY5NT02NDI5OTtlLmFmaWk1NzcwMD02NDMzMTtlLmFmaWk1NzcwNT02NDI4NztlLmFmaWk1NzcxNj0xNTIwO2UuYWZpaTU3NzE3PTE1MjE7ZS5hZmlpNTc3MTg9MTUyMjtlLmFmaWk1NzcyMz02NDMwOTtlLmFmaWk1Nzc5Mz0xNDYwO2UuYWZpaTU3Nzk0PTE0NjE7ZS5hZmlpNTc3OTU9MTQ2MjtlLmFmaWk1Nzc5Nj0xNDY3O2UuYWZpaTU3Nzk3PTE0NjQ7ZS5hZmlpNTc3OTg9MTQ2MztlLmFmaWk1Nzc5OT0xNDU2O2UuYWZpaTU3ODAwPTE0NTg7ZS5hZmlpNTc4MDE9MTQ1NztlLmFmaWk1NzgwMj0xNDU5O2UuYWZpaTU3ODAzPTE0NzQ7ZS5hZmlpNTc4MDQ9MTQ3MztlLmFmaWk1NzgwNj0xNDY1O2UuYWZpaTU3ODA3PTE0Njg7ZS5hZmlpNTc4Mzk9MTQ2OTtlLmFmaWk1Nzg0MT0xNDcxO2UuYWZpaTU3ODQyPTE0NzI7ZS5hZmlpNTc5Mjk9NzAwO2UuYWZpaTYxMjQ4PTg0NTM7ZS5hZmlpNjEyODk9ODQ2NztlLmFmaWk2MTM1Mj04NDcwO2UuYWZpaTYxNTczPTgyMzY7ZS5hZmlpNjE1NzQ9ODIzNztlLmFmaWk2MTU3NT04MjM4O2UuYWZpaTYxNjY0PTgyMDQ7ZS5hZmlpNjMxNjc9MTY0NTtlLmFmaWk2NDkzNz03MDE7ZS5hZ3JhdmU9MjI0O2UuYWd1amFyYXRpPTI2OTM7ZS5hZ3VybXVraGk9MjU2NTtlLmFoaXJhZ2FuYT0xMjM1NDtlLmFob29rYWJvdmU9Nzg0MztlLmFpYmVuZ2FsaT0yNDQ4O2UuYWlib3BvbW9mbz0xMjU3NDtlLmFpZGV2YT0yMzIwO2UuYWllY3lyaWxsaWM9MTIzNztlLmFpZ3VqYXJhdGk9MjcwNDtlLmFpZ3VybXVraGk9MjU3NjtlLmFpbWF0cmFndXJtdWtoaT0yNjMyO2UuYWluYXJhYmljPTE1OTM7ZS5haW5maW5hbGFyYWJpYz02NTIyNjtlLmFpbmluaXRpYWxhcmFiaWM9NjUyMjc7ZS5haW5tZWRpYWxhcmFiaWM9NjUyMjg7ZS5haW52ZXJ0ZWRicmV2ZT01MTU7ZS5haXZvd2Vsc2lnbmJlbmdhbGk9MjUwNDtlLmFpdm93ZWxzaWduZGV2YT0yMzc2O2UuYWl2b3dlbHNpZ25ndWphcmF0aT0yNzYwO2UuYWthdGFrYW5hPTEyNDUwO2UuYWthdGFrYW5haGFsZndpZHRoPTY1MzkzO2UuYWtvcmVhbj0xMjYyMztlLmFsZWY9MTQ4ODtlLmFsZWZhcmFiaWM9MTU3NTtlLmFsZWZkYWdlc2hoZWJyZXc9NjQzMDQ7ZS5hbGVmZmluYWxhcmFiaWM9NjUxNjY7ZS5hbGVmaGFtemFhYm92ZWFyYWJpYz0xNTcxO2UuYWxlZmhhbXphYWJvdmVmaW5hbGFyYWJpYz02NTE1NjtlLmFsZWZoYW16YWJlbG93YXJhYmljPTE1NzM7ZS5hbGVmaGFtemFiZWxvd2ZpbmFsYXJhYmljPTY1MTYwO2UuYWxlZmhlYnJldz0xNDg4O2UuYWxlZmxhbWVkaGVicmV3PTY0MzM1O2UuYWxlZm1hZGRhYWJvdmVhcmFiaWM9MTU3MDtlLmFsZWZtYWRkYWFib3ZlZmluYWxhcmFiaWM9NjUxNTQ7ZS5hbGVmbWFrc3VyYWFyYWJpYz0xNjA5O2UuYWxlZm1ha3N1cmFmaW5hbGFyYWJpYz02NTI2NDtlLmFsZWZtYWtzdXJhaW5pdGlhbGFyYWJpYz02NTI2NztlLmFsZWZtYWtzdXJhbWVkaWFsYXJhYmljPTY1MjY4O2UuYWxlZnBhdGFoaGVicmV3PTY0MzAyO2UuYWxlZnFhbWF0c2hlYnJldz02NDMwMztlLmFsZXBoPTg1MDE7ZS5hbGxlcXVhbD04NzgwO2UuYWxwaGE9OTQ1O2UuYWxwaGF0b25vcz05NDA7ZS5hbWFjcm9uPTI1NztlLmFtb25vc3BhY2U9NjUzNDU7ZS5hbXBlcnNhbmQ9Mzg7ZS5hbXBlcnNhbmRtb25vc3BhY2U9NjUyODY7ZS5hbXBlcnNhbmRzbWFsbD02MzI3MDtlLmFtc3F1YXJlPTEzMjUwO2UuYW5ib3BvbW9mbz0xMjU3ODtlLmFuZ2JvcG9tb2ZvPTEyNTgwO2UuYW5nYnJhY2tldGxlZnQ9MTIyOTY7ZS5hbmdicmFja2V0cmlnaHQ9MTIyOTc7ZS5hbmdraGFua2h1dGhhaT0zNjc0O2UuYW5nbGU9ODczNjtlLmFuZ2xlYnJhY2tldGxlZnQ9MTIyOTY7ZS5hbmdsZWJyYWNrZXRsZWZ0dmVydGljYWw9NjUwODc7ZS5hbmdsZWJyYWNrZXRyaWdodD0xMjI5NztlLmFuZ2xlYnJhY2tldHJpZ2h0dmVydGljYWw9NjUwODg7ZS5hbmdsZWxlZnQ9OTAwMTtlLmFuZ2xlcmlnaHQ9OTAwMjtlLmFuZ3N0cm9tPTg0OTE7ZS5hbm90ZWxlaWE9OTAzO2UuYW51ZGF0dGFkZXZhPTIzODY7ZS5hbnVzdmFyYWJlbmdhbGk9MjQzNDtlLmFudXN2YXJhZGV2YT0yMzA2O2UuYW51c3ZhcmFndWphcmF0aT0yNjkwO2UuYW9nb25laz0yNjE7ZS5hcGFhdG9zcXVhcmU9MTMwNTY7ZS5hcGFyZW49OTM3MjtlLmFwb3N0cm9waGVhcm1lbmlhbj0xMzcwO2UuYXBvc3Ryb3BoZW1vZD03MDA7ZS5hcHBsZT02Mzc0MztlLmFwcHJvYWNoZXM9ODc4NDtlLmFwcHJveGVxdWFsPTg3NzY7ZS5hcHByb3hlcXVhbG9yaW1hZ2U9ODc4NjtlLmFwcHJveGltYXRlbHllcXVhbD04NzczO2UuYXJhZWFla29yZWFuPTEyNjg2O2UuYXJhZWFrb3JlYW49MTI2ODU7ZS5hcmM9ODk3ODtlLmFyaWdodGhhbGZyaW5nPTc4MzQ7ZS5hcmluZz0yMjk7ZS5hcmluZ2FjdXRlPTUwNztlLmFyaW5nYmVsb3c9NzY4MTtlLmFycm93Ym90aD04NTk2O2UuYXJyb3dkYXNoZG93bj04Njc1O2UuYXJyb3dkYXNobGVmdD04NjcyO2UuYXJyb3dkYXNocmlnaHQ9ODY3NDtlLmFycm93ZGFzaHVwPTg2NzM7ZS5hcnJvd2RibGJvdGg9ODY2MDtlLmFycm93ZGJsZG93bj04NjU5O2UuYXJyb3dkYmxsZWZ0PTg2NTY7ZS5hcnJvd2RibHJpZ2h0PTg2NTg7ZS5hcnJvd2RibHVwPTg2NTc7ZS5hcnJvd2Rvd249ODU5NTtlLmFycm93ZG93bmxlZnQ9ODYwMTtlLmFycm93ZG93bnJpZ2h0PTg2MDA7ZS5hcnJvd2Rvd253aGl0ZT04NjgxO2UuYXJyb3doZWFkZG93bm1vZD03MDk7ZS5hcnJvd2hlYWRsZWZ0bW9kPTcwNjtlLmFycm93aGVhZHJpZ2h0bW9kPTcwNztlLmFycm93aGVhZHVwbW9kPTcwODtlLmFycm93aG9yaXpleD02MzcxOTtlLmFycm93bGVmdD04NTkyO2UuYXJyb3dsZWZ0ZGJsPTg2NTY7ZS5hcnJvd2xlZnRkYmxzdHJva2U9ODY1MztlLmFycm93bGVmdG92ZXJyaWdodD04NjQ2O2UuYXJyb3dsZWZ0d2hpdGU9ODY3ODtlLmFycm93cmlnaHQ9ODU5NDtlLmFycm93cmlnaHRkYmxzdHJva2U9ODY1NTtlLmFycm93cmlnaHRoZWF2eT0xMDE0MjtlLmFycm93cmlnaHRvdmVybGVmdD04NjQ0O2UuYXJyb3dyaWdodHdoaXRlPTg2ODA7ZS5hcnJvd3RhYmxlZnQ9ODY3NjtlLmFycm93dGFicmlnaHQ9ODY3NztlLmFycm93dXA9ODU5MztlLmFycm93dXBkbj04NTk3O2UuYXJyb3d1cGRuYnNlPTg2MTY7ZS5hcnJvd3VwZG93bmJhc2U9ODYxNjtlLmFycm93dXBsZWZ0PTg1OTg7ZS5hcnJvd3VwbGVmdG9mZG93bj04NjQ1O2UuYXJyb3d1cHJpZ2h0PTg1OTk7ZS5hcnJvd3Vwd2hpdGU9ODY3OTtlLmFycm93dmVydGV4PTYzNzE4O2UuYXNjaWljaXJjdW09OTQ7ZS5hc2NpaWNpcmN1bW1vbm9zcGFjZT02NTM0MjtlLmFzY2lpdGlsZGU9MTI2O2UuYXNjaWl0aWxkZW1vbm9zcGFjZT02NTM3NDtlLmFzY3JpcHQ9NTkzO2UuYXNjcmlwdHR1cm5lZD01OTQ7ZS5hc21hbGxoaXJhZ2FuYT0xMjM1MztlLmFzbWFsbGthdGFrYW5hPTEyNDQ5O2UuYXNtYWxsa2F0YWthbmFoYWxmd2lkdGg9NjUzODM7ZS5hc3Rlcmlzaz00MjtlLmFzdGVyaXNrYWx0b25lYXJhYmljPTE2NDU7ZS5hc3Rlcmlza2FyYWJpYz0xNjQ1O2UuYXN0ZXJpc2ttYXRoPTg3Mjc7ZS5hc3Rlcmlza21vbm9zcGFjZT02NTI5MDtlLmFzdGVyaXNrc21hbGw9NjUxMjE7ZS5hc3RlcmlzbT04MjU4O2UuYXN1cGVyaW9yPTYzMjA5O2UuYXN5bXB0b3RpY2FsbHllcXVhbD04NzcxO2UuYXQ9NjQ7ZS5hdGlsZGU9MjI3O2UuYXRtb25vc3BhY2U9NjUzMTI7ZS5hdHNtYWxsPTY1MTMxO2UuYXR1cm5lZD01OTI7ZS5hdWJlbmdhbGk9MjQ1MjtlLmF1Ym9wb21vZm89MTI1NzY7ZS5hdWRldmE9MjMyNDtlLmF1Z3VqYXJhdGk9MjcwODtlLmF1Z3VybXVraGk9MjU4MDtlLmF1bGVuZ3RobWFya2JlbmdhbGk9MjUxOTtlLmF1bWF0cmFndXJtdWtoaT0yNjM2O2UuYXV2b3dlbHNpZ25iZW5nYWxpPTI1MDg7ZS5hdXZvd2Vsc2lnbmRldmE9MjM4MDtlLmF1dm93ZWxzaWduZ3VqYXJhdGk9Mjc2NDtlLmF2YWdyYWhhZGV2YT0yMzY1O2UuYXliYXJtZW5pYW49MTM3NztlLmF5aW49MTUwNjtlLmF5aW5hbHRvbmVoZWJyZXc9NjQyODg7ZS5heWluaGVicmV3PTE1MDY7ZS5iPTk4O2UuYmFiZW5nYWxpPTI0NzY7ZS5iYWNrc2xhc2g9OTI7ZS5iYWNrc2xhc2htb25vc3BhY2U9NjUzNDA7ZS5iYWRldmE9MjM0ODtlLmJhZ3VqYXJhdGk9MjczMjtlLmJhZ3VybXVraGk9MjYwNDtlLmJhaGlyYWdhbmE9MTI0MDA7ZS5iYWh0dGhhaT0zNjQ3O2UuYmFrYXRha2FuYT0xMjQ5NjtlLmJhcj0xMjQ7ZS5iYXJtb25vc3BhY2U9NjUzNzI7ZS5iYm9wb21vZm89MTI1NDk7ZS5iY2lyY2xlPTk0MjU7ZS5iZG90YWNjZW50PTc2ODM7ZS5iZG90YmVsb3c9NzY4NTtlLmJlYW1lZHNpeHRlZW50aG5vdGVzPTk4MzY7ZS5iZWNhdXNlPTg3NTc7ZS5iZWN5cmlsbGljPTEwNzM7ZS5iZWhhcmFiaWM9MTU3NjtlLmJlaGZpbmFsYXJhYmljPTY1MTY4O2UuYmVoaW5pdGlhbGFyYWJpYz02NTE2OTtlLmJlaGlyYWdhbmE9MTI0MDk7ZS5iZWhtZWRpYWxhcmFiaWM9NjUxNzA7ZS5iZWhtZWVtaW5pdGlhbGFyYWJpYz02NDY3MTtlLmJlaG1lZW1pc29sYXRlZGFyYWJpYz02NDUyMDtlLmJlaG5vb25maW5hbGFyYWJpYz02NDYyMTtlLmJla2F0YWthbmE9MTI1MDU7ZS5iZW5hcm1lbmlhbj0xMzc4O2UuYmV0PTE0ODk7ZS5iZXRhPTk0NjtlLmJldGFzeW1ib2xncmVlaz05NzY7ZS5iZXRkYWdlc2g9NjQzMDU7ZS5iZXRkYWdlc2hoZWJyZXc9NjQzMDU7ZS5iZXRoZWJyZXc9MTQ4OTtlLmJldHJhZmVoZWJyZXc9NjQzMzI7ZS5iaGFiZW5nYWxpPTI0Nzc7ZS5iaGFkZXZhPTIzNDk7ZS5iaGFndWphcmF0aT0yNzMzO2UuYmhhZ3VybXVraGk9MjYwNTtlLmJob29rPTU5NTtlLmJpaGlyYWdhbmE9MTI0MDM7ZS5iaWthdGFrYW5hPTEyNDk5O2UuYmlsYWJpYWxjbGljaz02NjQ7ZS5iaW5kaWd1cm11a2hpPTI1NjI7ZS5iaXJ1c3F1YXJlPTEzMTA1O2UuYmxhY2tjaXJjbGU9OTY3OTtlLmJsYWNrZGlhbW9uZD05NjcwO2UuYmxhY2tkb3ducG9pbnRpbmd0cmlhbmdsZT05NjYwO2UuYmxhY2tsZWZ0cG9pbnRpbmdwb2ludGVyPTk2Njg7ZS5ibGFja2xlZnRwb2ludGluZ3RyaWFuZ2xlPTk2NjQ7ZS5ibGFja2xlbnRpY3VsYXJicmFja2V0bGVmdD0xMjMwNDtlLmJsYWNrbGVudGljdWxhcmJyYWNrZXRsZWZ0dmVydGljYWw9NjUwODM7ZS5ibGFja2xlbnRpY3VsYXJicmFja2V0cmlnaHQ9MTIzMDU7ZS5ibGFja2xlbnRpY3VsYXJicmFja2V0cmlnaHR2ZXJ0aWNhbD02NTA4NDtlLmJsYWNrbG93ZXJsZWZ0dHJpYW5nbGU9OTY5OTtlLmJsYWNrbG93ZXJyaWdodHRyaWFuZ2xlPTk2OTg7ZS5ibGFja3JlY3RhbmdsZT05NjQ0O2UuYmxhY2tyaWdodHBvaW50aW5ncG9pbnRlcj05NjU4O2UuYmxhY2tyaWdodHBvaW50aW5ndHJpYW5nbGU9OTY1NDtlLmJsYWNrc21hbGxzcXVhcmU9OTY0MjtlLmJsYWNrc21pbGluZ2ZhY2U9OTc4NztlLmJsYWNrc3F1YXJlPTk2MzI7ZS5ibGFja3N0YXI9OTczMztlLmJsYWNrdXBwZXJsZWZ0dHJpYW5nbGU9OTcwMDtlLmJsYWNrdXBwZXJyaWdodHRyaWFuZ2xlPTk3MDE7ZS5ibGFja3VwcG9pbnRpbmdzbWFsbHRyaWFuZ2xlPTk2NTI7ZS5ibGFja3VwcG9pbnRpbmd0cmlhbmdsZT05NjUwO2UuYmxhbms9OTI1MTtlLmJsaW5lYmVsb3c9NzY4NztlLmJsb2NrPTk2MDg7ZS5ibW9ub3NwYWNlPTY1MzQ2O2UuYm9iYWltYWl0aGFpPTM2MTA7ZS5ib2hpcmFnYW5hPTEyNDEyO2UuYm9rYXRha2FuYT0xMjUwODtlLmJwYXJlbj05MzczO2UuYnFzcXVhcmU9MTMyNTE7ZS5icmFjZWV4PTYzNzMyO2UuYnJhY2VsZWZ0PTEyMztlLmJyYWNlbGVmdGJ0PTYzNzMxO2UuYnJhY2VsZWZ0bWlkPTYzNzMwO2UuYnJhY2VsZWZ0bW9ub3NwYWNlPTY1MzcxO2UuYnJhY2VsZWZ0c21hbGw9NjUxMTU7ZS5icmFjZWxlZnR0cD02MzcyOTtlLmJyYWNlbGVmdHZlcnRpY2FsPTY1MDc5O2UuYnJhY2VyaWdodD0xMjU7ZS5icmFjZXJpZ2h0YnQ9NjM3NDI7ZS5icmFjZXJpZ2h0bWlkPTYzNzQxO2UuYnJhY2VyaWdodG1vbm9zcGFjZT02NTM3MztlLmJyYWNlcmlnaHRzbWFsbD02NTExNjtlLmJyYWNlcmlnaHR0cD02Mzc0MDtlLmJyYWNlcmlnaHR2ZXJ0aWNhbD02NTA4MDtlLmJyYWNrZXRsZWZ0PTkxO2UuYnJhY2tldGxlZnRidD02MzcyODtlLmJyYWNrZXRsZWZ0ZXg9NjM3Mjc7ZS5icmFja2V0bGVmdG1vbm9zcGFjZT02NTMzOTtlLmJyYWNrZXRsZWZ0dHA9NjM3MjY7ZS5icmFja2V0cmlnaHQ9OTM7ZS5icmFja2V0cmlnaHRidD02MzczOTtlLmJyYWNrZXRyaWdodGV4PTYzNzM4O2UuYnJhY2tldHJpZ2h0bW9ub3NwYWNlPTY1MzQxO2UuYnJhY2tldHJpZ2h0dHA9NjM3Mzc7ZS5icmV2ZT03Mjg7ZS5icmV2ZWJlbG93Y21iPTgxNDtlLmJyZXZlY21iPTc3NDtlLmJyZXZlaW52ZXJ0ZWRiZWxvd2NtYj04MTU7ZS5icmV2ZWludmVydGVkY21iPTc4NTtlLmJyZXZlaW52ZXJ0ZWRkb3VibGVjbWI9ODY1O2UuYnJpZGdlYmVsb3djbWI9ODEwO2UuYnJpZGdlaW52ZXJ0ZWRiZWxvd2NtYj04MjY7ZS5icm9rZW5iYXI9MTY2O2UuYnN0cm9rZT0zODQ7ZS5ic3VwZXJpb3I9NjMyMTA7ZS5idG9wYmFyPTM4NztlLmJ1aGlyYWdhbmE9MTI0MDY7ZS5idWthdGFrYW5hPTEyNTAyO2UuYnVsbGV0PTgyMjY7ZS5idWxsZXRpbnZlcnNlPTk2ODg7ZS5idWxsZXRvcGVyYXRvcj04NzI5O2UuYnVsbHNleWU9OTY3ODtlLmM9OTk7ZS5jYWFybWVuaWFuPTEzOTA7ZS5jYWJlbmdhbGk9MjQ1ODtlLmNhY3V0ZT0yNjM7ZS5jYWRldmE9MjMzMDtlLmNhZ3VqYXJhdGk9MjcxNDtlLmNhZ3VybXVraGk9MjU4NjtlLmNhbHNxdWFyZT0xMzE5MjtlLmNhbmRyYWJpbmR1YmVuZ2FsaT0yNDMzO2UuY2FuZHJhYmluZHVjbWI9Nzg0O2UuY2FuZHJhYmluZHVkZXZhPTIzMDU7ZS5jYW5kcmFiaW5kdWd1amFyYXRpPTI2ODk7ZS5jYXBzbG9jaz04NjgyO2UuY2FyZW9mPTg0NTM7ZS5jYXJvbj03MTE7ZS5jYXJvbmJlbG93Y21iPTgxMjtlLmNhcm9uY21iPTc4MDtlLmNhcnJpYWdlcmV0dXJuPTg2Mjk7ZS5jYm9wb21vZm89MTI1Njg7ZS5jY2Fyb249MjY5O2UuY2NlZGlsbGE9MjMxO2UuY2NlZGlsbGFhY3V0ZT03Njg5O2UuY2NpcmNsZT05NDI2O2UuY2NpcmN1bWZsZXg9MjY1O2UuY2N1cmw9NTk3O2UuY2RvdD0yNjc7ZS5jZG90YWNjZW50PTI2NztlLmNkc3F1YXJlPTEzMjUzO2UuY2VkaWxsYT0xODQ7ZS5jZWRpbGxhY21iPTgwNztlLmNlbnQ9MTYyO2UuY2VudGlncmFkZT04NDUxO2UuY2VudGluZmVyaW9yPTYzMTk5O2UuY2VudG1vbm9zcGFjZT02NTUwNDtlLmNlbnRvbGRzdHlsZT02MzM5NDtlLmNlbnRzdXBlcmlvcj02MzIwMDtlLmNoYWFybWVuaWFuPTE0MDE7ZS5jaGFiZW5nYWxpPTI0NTk7ZS5jaGFkZXZhPTIzMzE7ZS5jaGFndWphcmF0aT0yNzE1O2UuY2hhZ3VybXVraGk9MjU4NztlLmNoYm9wb21vZm89MTI1NjQ7ZS5jaGVhYmtoYXNpYW5jeXJpbGxpYz0xMjEzO2UuY2hlY2ttYXJrPTEwMDAzO2UuY2hlY3lyaWxsaWM9MTA5NTtlLmNoZWRlc2NlbmRlcmFia2hhc2lhbmN5cmlsbGljPTEyMTU7ZS5jaGVkZXNjZW5kZXJjeXJpbGxpYz0xMjA3O2UuY2hlZGllcmVzaXNjeXJpbGxpYz0xMjY5O2UuY2hlaGFybWVuaWFuPTEzOTU7ZS5jaGVraGFrYXNzaWFuY3lyaWxsaWM9MTIyODtlLmNoZXZlcnRpY2Fsc3Ryb2tlY3lyaWxsaWM9MTIwOTtlLmNoaT05Njc7ZS5jaGlldWNoYWNpcmNsZWtvcmVhbj0xMjkxOTtlLmNoaWV1Y2hhcGFyZW5rb3JlYW49MTI4MjM7ZS5jaGlldWNoY2lyY2xla29yZWFuPTEyOTA1O2UuY2hpZXVjaGtvcmVhbj0xMjYxODtlLmNoaWV1Y2hwYXJlbmtvcmVhbj0xMjgwOTtlLmNob2NoYW5ndGhhaT0zNTk0O2UuY2hvY2hhbnRoYWk9MzU5MjtlLmNob2NoaW5ndGhhaT0zNTkzO2UuY2hvY2hvZXRoYWk9MzU5NjtlLmNob29rPTM5MjtlLmNpZXVjYWNpcmNsZWtvcmVhbj0xMjkxODtlLmNpZXVjYXBhcmVua29yZWFuPTEyODIyO2UuY2lldWNjaXJjbGVrb3JlYW49MTI5MDQ7ZS5jaWV1Y2tvcmVhbj0xMjYxNjtlLmNpZXVjcGFyZW5rb3JlYW49MTI4MDg7ZS5jaWV1Y3VwYXJlbmtvcmVhbj0xMjgyODtlLmNpcmNsZT05Njc1O2UuY2lyY2xlY29weXJ0PTE2OTtlLmNpcmNsZW11bHRpcGx5PTg4NTU7ZS5jaXJjbGVvdD04ODU3O2UuY2lyY2xlcGx1cz04ODUzO2UuY2lyY2xlcG9zdGFsbWFyaz0xMjM0MjtlLmNpcmNsZXdpdGhsZWZ0aGFsZmJsYWNrPTk2ODA7ZS5jaXJjbGV3aXRocmlnaHRoYWxmYmxhY2s9OTY4MTtlLmNpcmN1bWZsZXg9NzEwO2UuY2lyY3VtZmxleGJlbG93Y21iPTgxMztlLmNpcmN1bWZsZXhjbWI9NzcwO2UuY2xlYXI9ODk5OTtlLmNsaWNrYWx2ZW9sYXI9NDUwO2UuY2xpY2tkZW50YWw9NDQ4O2UuY2xpY2tsYXRlcmFsPTQ0OTtlLmNsaWNrcmV0cm9mbGV4PTQ1MTtlLmNsdWI9OTgyNztlLmNsdWJzdWl0YmxhY2s9OTgyNztlLmNsdWJzdWl0d2hpdGU9OTgzMTtlLmNtY3ViZWRzcXVhcmU9MTMyMjA7ZS5jbW9ub3NwYWNlPTY1MzQ3O2UuY21zcXVhcmVkc3F1YXJlPTEzMjE2O2UuY29hcm1lbmlhbj0xNDA5O2UuY29sb249NTg7ZS5jb2xvbm1vbmV0YXJ5PTgzNTM7ZS5jb2xvbm1vbm9zcGFjZT02NTMwNjtlLmNvbG9uc2lnbj04MzUzO2UuY29sb25zbWFsbD02NTEwOTtlLmNvbG9udHJpYW5ndWxhcmhhbGZtb2Q9NzIxO2UuY29sb250cmlhbmd1bGFybW9kPTcyMDtlLmNvbW1hPTQ0O2UuY29tbWFhYm92ZWNtYj03ODc7ZS5jb21tYWFib3ZlcmlnaHRjbWI9Nzg5O2UuY29tbWFhY2NlbnQ9NjMxNzE7ZS5jb21tYWFyYWJpYz0xNTQ4O2UuY29tbWFhcm1lbmlhbj0xMzczO2UuY29tbWFpbmZlcmlvcj02MzIwMTtlLmNvbW1hbW9ub3NwYWNlPTY1MjkyO2UuY29tbWFyZXZlcnNlZGFib3ZlY21iPTc4ODtlLmNvbW1hcmV2ZXJzZWRtb2Q9NzAxO2UuY29tbWFzbWFsbD02NTEwNDtlLmNvbW1hc3VwZXJpb3I9NjMyMDI7ZS5jb21tYXR1cm5lZGFib3ZlY21iPTc4NjtlLmNvbW1hdHVybmVkbW9kPTY5OTtlLmNvbXBhc3M9OTc4ODtlLmNvbmdydWVudD04NzczO2UuY29udG91cmludGVncmFsPTg3NTA7ZS5jb250cm9sPTg5NjM7ZS5jb250cm9sQUNLPTY7ZS5jb250cm9sQkVMPTc7ZS5jb250cm9sQlM9ODtlLmNvbnRyb2xDQU49MjQ7ZS5jb250cm9sQ1I9MTM7ZS5jb250cm9sREMxPTE3O2UuY29udHJvbERDMj0xODtlLmNvbnRyb2xEQzM9MTk7ZS5jb250cm9sREM0PTIwO2UuY29udHJvbERFTD0xMjc7ZS5jb250cm9sRExFPTE2O2UuY29udHJvbEVNPTI1O2UuY29udHJvbEVOUT01O2UuY29udHJvbEVPVD00O2UuY29udHJvbEVTQz0yNztlLmNvbnRyb2xFVEI9MjM7ZS5jb250cm9sRVRYPTM7ZS5jb250cm9sRkY9MTI7ZS5jb250cm9sRlM9Mjg7ZS5jb250cm9sR1M9Mjk7ZS5jb250cm9sSFQ9OTtlLmNvbnRyb2xMRj0xMDtlLmNvbnRyb2xOQUs9MjE7ZS5jb250cm9sTlVMTD0wO2UuY29udHJvbFJTPTMwO2UuY29udHJvbFNJPTE1O2UuY29udHJvbFNPPTE0O2UuY29udHJvbFNPVD0yO2UuY29udHJvbFNUWD0xO2UuY29udHJvbFNVQj0yNjtlLmNvbnRyb2xTWU49MjI7ZS5jb250cm9sVVM9MzE7ZS5jb250cm9sVlQ9MTE7ZS5jb3B5cmlnaHQ9MTY5O2UuY29weXJpZ2h0c2Fucz02MzcyMTtlLmNvcHlyaWdodHNlcmlmPTYzMTkzO2UuY29ybmVyYnJhY2tldGxlZnQ9MTIzMDA7ZS5jb3JuZXJicmFja2V0bGVmdGhhbGZ3aWR0aD02NTM3ODtlLmNvcm5lcmJyYWNrZXRsZWZ0dmVydGljYWw9NjUwODk7ZS5jb3JuZXJicmFja2V0cmlnaHQ9MTIzMDE7ZS5jb3JuZXJicmFja2V0cmlnaHRoYWxmd2lkdGg9NjUzNzk7ZS5jb3JuZXJicmFja2V0cmlnaHR2ZXJ0aWNhbD02NTA5MDtlLmNvcnBvcmF0aW9uc3F1YXJlPTEzMTgzO2UuY29zcXVhcmU9MTMyNTU7ZS5jb3Zlcmtnc3F1YXJlPTEzMjU0O2UuY3BhcmVuPTkzNzQ7ZS5jcnV6ZWlybz04MzU0O2UuY3N0cmV0Y2hlZD02NjM7ZS5jdXJseWFuZD04OTExO2UuY3VybHlvcj04OTEwO2UuY3VycmVuY3k9MTY0O2UuY3lyQnJldmU9NjMxODU7ZS5jeXJGbGV4PTYzMTg2O2UuY3lyYnJldmU9NjMxODg7ZS5jeXJmbGV4PTYzMTg5O2UuZD0xMDA7ZS5kYWFybWVuaWFuPTEzODA7ZS5kYWJlbmdhbGk9MjQ3MDtlLmRhZGFyYWJpYz0xNTkwO2UuZGFkZXZhPTIzNDI7ZS5kYWRmaW5hbGFyYWJpYz02NTIxNDtlLmRhZGluaXRpYWxhcmFiaWM9NjUyMTU7ZS5kYWRtZWRpYWxhcmFiaWM9NjUyMTY7ZS5kYWdlc2g9MTQ2ODtlLmRhZ2VzaGhlYnJldz0xNDY4O2UuZGFnZ2VyPTgyMjQ7ZS5kYWdnZXJkYmw9ODIyNTtlLmRhZ3VqYXJhdGk9MjcyNjtlLmRhZ3VybXVraGk9MjU5ODtlLmRhaGlyYWdhbmE9MTIzODQ7ZS5kYWthdGFrYW5hPTEyNDgwO2UuZGFsYXJhYmljPTE1ODM7ZS5kYWxldD0xNDkxO2UuZGFsZXRkYWdlc2g9NjQzMDc7ZS5kYWxldGRhZ2VzaGhlYnJldz02NDMwNztlLmRhbGV0aGVicmV3PTE0OTE7ZS5kYWxmaW5hbGFyYWJpYz02NTE5NDtlLmRhbW1hYXJhYmljPTE2MTU7ZS5kYW1tYWxvd2FyYWJpYz0xNjE1O2UuZGFtbWF0YW5hbHRvbmVhcmFiaWM9MTYxMjtlLmRhbW1hdGFuYXJhYmljPTE2MTI7ZS5kYW5kYT0yNDA0O2UuZGFyZ2FoZWJyZXc9MTQ0NztlLmRhcmdhbGVmdGhlYnJldz0xNDQ3O2UuZGFzaWFwbmV1bWF0YWN5cmlsbGljY21iPTExNTc7ZS5kYmxHcmF2ZT02MzE4NztlLmRibGFuZ2xlYnJhY2tldGxlZnQ9MTIyOTg7ZS5kYmxhbmdsZWJyYWNrZXRsZWZ0dmVydGljYWw9NjUwODU7ZS5kYmxhbmdsZWJyYWNrZXRyaWdodD0xMjI5OTtlLmRibGFuZ2xlYnJhY2tldHJpZ2h0dmVydGljYWw9NjUwODY7ZS5kYmxhcmNoaW52ZXJ0ZWRiZWxvd2NtYj04MTE7ZS5kYmxhcnJvd2xlZnQ9ODY2MDtlLmRibGFycm93cmlnaHQ9ODY1ODtlLmRibGRhbmRhPTI0MDU7ZS5kYmxncmF2ZT02MzE5MDtlLmRibGdyYXZlY21iPTc4MztlLmRibGludGVncmFsPTg3NDg7ZS5kYmxsb3dsaW5lPTgyMTU7ZS5kYmxsb3dsaW5lY21iPTgxOTtlLmRibG92ZXJsaW5lY21iPTgzMTtlLmRibHByaW1lbW9kPTY5ODtlLmRibHZlcnRpY2FsYmFyPTgyMTQ7ZS5kYmx2ZXJ0aWNhbGxpbmVhYm92ZWNtYj03ODI7ZS5kYm9wb21vZm89MTI1NTM7ZS5kYnNxdWFyZT0xMzI1NjtlLmRjYXJvbj0yNzE7ZS5kY2VkaWxsYT03Njk3O2UuZGNpcmNsZT05NDI3O2UuZGNpcmN1bWZsZXhiZWxvdz03Njk5O2UuZGNyb2F0PTI3MztlLmRkYWJlbmdhbGk9MjQ2NTtlLmRkYWRldmE9MjMzNztlLmRkYWd1amFyYXRpPTI3MjE7ZS5kZGFndXJtdWtoaT0yNTkzO2UuZGRhbGFyYWJpYz0xNjcyO2UuZGRhbGZpbmFsYXJhYmljPTY0MzkzO2UuZGRkaGFkZXZhPTIzOTY7ZS5kZGhhYmVuZ2FsaT0yNDY2O2UuZGRoYWRldmE9MjMzODtlLmRkaGFndWphcmF0aT0yNzIyO2UuZGRoYWd1cm11a2hpPTI1OTQ7ZS5kZG90YWNjZW50PTc2OTE7ZS5kZG90YmVsb3c9NzY5MztlLmRlY2ltYWxzZXBhcmF0b3JhcmFiaWM9MTY0MztlLmRlY2ltYWxzZXBhcmF0b3JwZXJzaWFuPTE2NDM7ZS5kZWN5cmlsbGljPTEwNzY7ZS5kZWdyZWU9MTc2O2UuZGVoaWhlYnJldz0xNDUzO2UuZGVoaXJhZ2FuYT0xMjM5MTtlLmRlaWNvcHRpYz0xMDA3O2UuZGVrYXRha2FuYT0xMjQ4NztlLmRlbGV0ZWxlZnQ9OTAwMztlLmRlbGV0ZXJpZ2h0PTg5OTg7ZS5kZWx0YT05NDg7ZS5kZWx0YXR1cm5lZD0zOTc7ZS5kZW5vbWluYXRvcm1pbnVzb25lbnVtZXJhdG9yYmVuZ2FsaT0yNTUyO2UuZGV6aD02NzY7ZS5kaGFiZW5nYWxpPTI0NzE7ZS5kaGFkZXZhPTIzNDM7ZS5kaGFndWphcmF0aT0yNzI3O2UuZGhhZ3VybXVraGk9MjU5OTtlLmRob29rPTU5OTtlLmRpYWx5dGlrYXRvbm9zPTkwMTtlLmRpYWx5dGlrYXRvbm9zY21iPTgzNjtlLmRpYW1vbmQ9OTgzMDtlLmRpYW1vbmRzdWl0d2hpdGU9OTgyNjtlLmRpZXJlc2lzPTE2ODtlLmRpZXJlc2lzYWN1dGU9NjMxOTE7ZS5kaWVyZXNpc2JlbG93Y21iPTgwNDtlLmRpZXJlc2lzY21iPTc3NjtlLmRpZXJlc2lzZ3JhdmU9NjMxOTI7ZS5kaWVyZXNpc3Rvbm9zPTkwMTtlLmRpaGlyYWdhbmE9MTIzODY7ZS5kaWthdGFrYW5hPTEyNDgyO2UuZGl0dG9tYXJrPTEyMjkxO2UuZGl2aWRlPTI0NztlLmRpdmlkZXM9ODczOTtlLmRpdmlzaW9uc2xhc2g9ODcyNTtlLmRqZWN5cmlsbGljPTExMDY7ZS5ka3NoYWRlPTk2MTk7ZS5kbGluZWJlbG93PTc2OTU7ZS5kbHNxdWFyZT0xMzIwNztlLmRtYWNyb249MjczO2UuZG1vbm9zcGFjZT02NTM0ODtlLmRuYmxvY2s9OTYwNDtlLmRvY2hhZGF0aGFpPTM1OTg7ZS5kb2Rla3RoYWk9MzYwNDtlLmRvaGlyYWdhbmE9MTIzOTM7ZS5kb2thdGFrYW5hPTEyNDg5O2UuZG9sbGFyPTM2O2UuZG9sbGFyaW5mZXJpb3I9NjMyMDM7ZS5kb2xsYXJtb25vc3BhY2U9NjUyODQ7ZS5kb2xsYXJvbGRzdHlsZT02MzI2ODtlLmRvbGxhcnNtYWxsPTY1MTI5O2UuZG9sbGFyc3VwZXJpb3I9NjMyMDQ7ZS5kb25nPTgzNjM7ZS5kb3J1c3F1YXJlPTEzMDk0O2UuZG90YWNjZW50PTcyOTtlLmRvdGFjY2VudGNtYj03NzU7ZS5kb3RiZWxvd2NtYj04MDM7ZS5kb3RiZWxvd2NvbWI9ODAzO2UuZG90a2F0YWthbmE9MTI1Mzk7ZS5kb3RsZXNzaT0zMDU7ZS5kb3RsZXNzaj02MzE2NjtlLmRvdGxlc3Nqc3Ryb2tlaG9vaz02NDQ7ZS5kb3RtYXRoPTg5MDE7ZS5kb3R0ZWRjaXJjbGU9OTY3NjtlLmRvdWJsZXlvZHBhdGFoPTY0Mjg3O2UuZG91YmxleW9kcGF0YWhoZWJyZXc9NjQyODc7ZS5kb3dudGFja2JlbG93Y21iPTc5ODtlLmRvd250YWNrbW9kPTcyNTtlLmRwYXJlbj05Mzc1O2UuZHN1cGVyaW9yPTYzMjExO2UuZHRhaWw9NTk4O2UuZHRvcGJhcj0zOTY7ZS5kdWhpcmFnYW5hPTEyMzg5O2UuZHVrYXRha2FuYT0xMjQ4NTtlLmR6PTQ5OTtlLmR6YWx0b25lPTY3NTtlLmR6Y2Fyb249NDU0O2UuZHpjdXJsPTY3NztlLmR6ZWFia2hhc2lhbmN5cmlsbGljPTEyNDk7ZS5kemVjeXJpbGxpYz0xMTA5O2UuZHpoZWN5cmlsbGljPTExMTk7ZS5lPTEwMTtlLmVhY3V0ZT0yMzM7ZS5lYXJ0aD05NzkzO2UuZWJlbmdhbGk9MjQ0NztlLmVib3BvbW9mbz0xMjU3MjtlLmVicmV2ZT0yNzc7ZS5lY2FuZHJhZGV2YT0yMzE3O2UuZWNhbmRyYWd1amFyYXRpPTI3MDE7ZS5lY2FuZHJhdm93ZWxzaWduZGV2YT0yMzczO2UuZWNhbmRyYXZvd2Vsc2lnbmd1amFyYXRpPTI3NTc7ZS5lY2Fyb249MjgzO2UuZWNlZGlsbGFicmV2ZT03NzA5O2UuZWNoYXJtZW5pYW49MTM4MTtlLmVjaHlpd25hcm1lbmlhbj0xNDE1O2UuZWNpcmNsZT05NDI4O2UuZWNpcmN1bWZsZXg9MjM0O2UuZWNpcmN1bWZsZXhhY3V0ZT03ODcxO2UuZWNpcmN1bWZsZXhiZWxvdz03NzA1O2UuZWNpcmN1bWZsZXhkb3RiZWxvdz03ODc5O2UuZWNpcmN1bWZsZXhncmF2ZT03ODczO2UuZWNpcmN1bWZsZXhob29rYWJvdmU9Nzg3NTtlLmVjaXJjdW1mbGV4dGlsZGU9Nzg3NztlLmVjeXJpbGxpYz0xMTA4O2UuZWRibGdyYXZlPTUxNztlLmVkZXZhPTIzMTk7ZS5lZGllcmVzaXM9MjM1O2UuZWRvdD0yNzk7ZS5lZG90YWNjZW50PTI3OTtlLmVkb3RiZWxvdz03ODY1O2UuZWVndXJtdWtoaT0yNTc1O2UuZWVtYXRyYWd1cm11a2hpPTI2MzE7ZS5lZmN5cmlsbGljPTEwOTI7ZS5lZ3JhdmU9MjMyO2UuZWd1amFyYXRpPTI3MDM7ZS5laGFybWVuaWFuPTEzODM7ZS5laGJvcG9tb2ZvPTEyNTczO2UuZWhpcmFnYW5hPTEyMzYwO2UuZWhvb2thYm92ZT03ODY3O2UuZWlib3BvbW9mbz0xMjU3NTtlLmVpZ2h0PTU2O2UuZWlnaHRhcmFiaWM9MTY0MDtlLmVpZ2h0YmVuZ2FsaT0yNTQyO2UuZWlnaHRjaXJjbGU9OTMxOTtlLmVpZ2h0Y2lyY2xlaW52ZXJzZXNhbnNzZXJpZj0xMDEyOTtlLmVpZ2h0ZGV2YT0yNDE0O2UuZWlnaHRlZW5jaXJjbGU9OTMyOTtlLmVpZ2h0ZWVucGFyZW49OTM0OTtlLmVpZ2h0ZWVucGVyaW9kPTkzNjk7ZS5laWdodGd1amFyYXRpPTI3OTg7ZS5laWdodGd1cm11a2hpPTI2NzA7ZS5laWdodGhhY2thcmFiaWM9MTY0MDtlLmVpZ2h0aGFuZ3pob3U9MTIzMjg7ZS5laWdodGhub3RlYmVhbWVkPTk4MzU7ZS5laWdodGlkZW9ncmFwaGljcGFyZW49MTI4Mzk7ZS5laWdodGluZmVyaW9yPTgzMjg7ZS5laWdodG1vbm9zcGFjZT02NTMwNDtlLmVpZ2h0b2xkc3R5bGU9NjMyODg7ZS5laWdodHBhcmVuPTkzMzk7ZS5laWdodHBlcmlvZD05MzU5O2UuZWlnaHRwZXJzaWFuPTE3ODQ7ZS5laWdodHJvbWFuPTg1Njc7ZS5laWdodHN1cGVyaW9yPTgzMTI7ZS5laWdodHRoYWk9MzY3MjtlLmVpbnZlcnRlZGJyZXZlPTUxOTtlLmVpb3RpZmllZGN5cmlsbGljPTExMjU7ZS5la2F0YWthbmE9MTI0NTY7ZS5la2F0YWthbmFoYWxmd2lkdGg9NjUzOTY7ZS5la29ua2FyZ3VybXVraGk9MjY3NjtlLmVrb3JlYW49MTI2Mjg7ZS5lbGN5cmlsbGljPTEwODM7ZS5lbGVtZW50PTg3MTI7ZS5lbGV2ZW5jaXJjbGU9OTMyMjtlLmVsZXZlbnBhcmVuPTkzNDI7ZS5lbGV2ZW5wZXJpb2Q9OTM2MjtlLmVsZXZlbnJvbWFuPTg1NzA7ZS5lbGxpcHNpcz04MjMwO2UuZWxsaXBzaXN2ZXJ0aWNhbD04OTQyO2UuZW1hY3Jvbj0yNzU7ZS5lbWFjcm9uYWN1dGU9NzcwMztlLmVtYWNyb25ncmF2ZT03NzAxO2UuZW1jeXJpbGxpYz0xMDg0O2UuZW1kYXNoPTgyMTI7ZS5lbWRhc2h2ZXJ0aWNhbD02NTA3MztlLmVtb25vc3BhY2U9NjUzNDk7ZS5lbXBoYXNpc21hcmthcm1lbmlhbj0xMzcxO2UuZW1wdHlzZXQ9ODcwOTtlLmVuYm9wb21vZm89MTI1Nzk7ZS5lbmN5cmlsbGljPTEwODU7ZS5lbmRhc2g9ODIxMTtlLmVuZGFzaHZlcnRpY2FsPTY1MDc0O2UuZW5kZXNjZW5kZXJjeXJpbGxpYz0xMTg3O2UuZW5nPTMzMTtlLmVuZ2JvcG9tb2ZvPTEyNTgxO2UuZW5naGVjeXJpbGxpYz0xMTg5O2UuZW5ob29rY3lyaWxsaWM9MTIyNDtlLmVuc3BhY2U9ODE5NDtlLmVvZ29uZWs9MjgxO2UuZW9rb3JlYW49MTI2Mjc7ZS5lb3Blbj02MDM7ZS5lb3BlbmNsb3NlZD02NjY7ZS5lb3BlbnJldmVyc2VkPTYwNDtlLmVvcGVucmV2ZXJzZWRjbG9zZWQ9NjA2O2UuZW9wZW5yZXZlcnNlZGhvb2s9NjA1O2UuZXBhcmVuPTkzNzY7ZS5lcHNpbG9uPTk0OTtlLmVwc2lsb250b25vcz05NDE7ZS5lcXVhbD02MTtlLmVxdWFsbW9ub3NwYWNlPTY1MzA5O2UuZXF1YWxzbWFsbD02NTEyNjtlLmVxdWFsc3VwZXJpb3I9ODMxNjtlLmVxdWl2YWxlbmNlPTg4MDE7ZS5lcmJvcG9tb2ZvPTEyNTgyO2UuZXJjeXJpbGxpYz0xMDg4O2UuZXJldmVyc2VkPTYwMDtlLmVyZXZlcnNlZGN5cmlsbGljPTExMDE7ZS5lc2N5cmlsbGljPTEwODk7ZS5lc2Rlc2NlbmRlcmN5cmlsbGljPTExOTU7ZS5lc2g9NjQzO2UuZXNoY3VybD02NDY7ZS5lc2hvcnRkZXZhPTIzMTg7ZS5lc2hvcnR2b3dlbHNpZ25kZXZhPTIzNzQ7ZS5lc2hyZXZlcnNlZGxvb3A9NDI2O2UuZXNoc3F1YXRyZXZlcnNlZD02NDU7ZS5lc21hbGxoaXJhZ2FuYT0xMjM1OTtlLmVzbWFsbGthdGFrYW5hPTEyNDU1O2UuZXNtYWxsa2F0YWthbmFoYWxmd2lkdGg9NjUzODY7ZS5lc3RpbWF0ZWQ9ODQ5NDtlLmVzdXBlcmlvcj02MzIxMjtlLmV0YT05NTE7ZS5ldGFybWVuaWFuPTEzODQ7ZS5ldGF0b25vcz05NDI7ZS5ldGg9MjQwO2UuZXRpbGRlPTc4Njk7ZS5ldGlsZGViZWxvdz03NzA3O2UuZXRuYWh0YWZvdWtoaGVicmV3PTE0MjU7ZS5ldG5haHRhZm91a2hsZWZ0aGVicmV3PTE0MjU7ZS5ldG5haHRhaGVicmV3PTE0MjU7ZS5ldG5haHRhbGVmdGhlYnJldz0xNDI1O2UuZXR1cm5lZD00Nzc7ZS5ldWtvcmVhbj0xMjY0MTtlLmV1cm89ODM2NDtlLmV2b3dlbHNpZ25iZW5nYWxpPTI1MDM7ZS5ldm93ZWxzaWduZGV2YT0yMzc1O2UuZXZvd2Vsc2lnbmd1amFyYXRpPTI3NTk7ZS5leGNsYW09MzM7ZS5leGNsYW1hcm1lbmlhbj0xMzcyO2UuZXhjbGFtZGJsPTgyNTI7ZS5leGNsYW1kb3duPTE2MTtlLmV4Y2xhbWRvd25zbWFsbD02MzM5MztlLmV4Y2xhbW1vbm9zcGFjZT02NTI4MTtlLmV4Y2xhbXNtYWxsPTYzMjY1O2UuZXhpc3RlbnRpYWw9ODcwNztlLmV6aD02NTg7ZS5lemhjYXJvbj00OTU7ZS5lemhjdXJsPTY1OTtlLmV6aHJldmVyc2VkPTQ0MTtlLmV6aHRhaWw9NDQyO2UuZj0xMDI7ZS5mYWRldmE9MjM5ODtlLmZhZ3VybXVraGk9MjY1NDtlLmZhaHJlbmhlaXQ9ODQ1NztlLmZhdGhhYXJhYmljPTE2MTQ7ZS5mYXRoYWxvd2FyYWJpYz0xNjE0O2UuZmF0aGF0YW5hcmFiaWM9MTYxMTtlLmZib3BvbW9mbz0xMjU1MjtlLmZjaXJjbGU9OTQyOTtlLmZkb3RhY2NlbnQ9NzcxMTtlLmZlaGFyYWJpYz0xNjAxO2UuZmVoYXJtZW5pYW49MTQxNDtlLmZlaGZpbmFsYXJhYmljPTY1MjM0O2UuZmVoaW5pdGlhbGFyYWJpYz02NTIzNTtlLmZlaG1lZGlhbGFyYWJpYz02NTIzNjtlLmZlaWNvcHRpYz05OTc7ZS5mZW1hbGU9OTc5MjtlLmZmPTY0MjU2O2UuZl9mPTY0MjU2O2UuZmZpPTY0MjU5O2UuZl9mX2k9NjQyNTk7ZS5mZmw9NjQyNjA7ZS5mX2ZfbD02NDI2MDtlLmZpPTY0MjU3O2UuZl9pPTY0MjU3O2UuZmlmdGVlbmNpcmNsZT05MzI2O2UuZmlmdGVlbnBhcmVuPTkzNDY7ZS5maWZ0ZWVucGVyaW9kPTkzNjY7ZS5maWd1cmVkYXNoPTgyMTA7ZS5maWxsZWRib3g9OTYzMjtlLmZpbGxlZHJlY3Q9OTY0NDtlLmZpbmFsa2FmPTE0OTg7ZS5maW5hbGthZmRhZ2VzaD02NDMxNDtlLmZpbmFsa2FmZGFnZXNoaGVicmV3PTY0MzE0O2UuZmluYWxrYWZoZWJyZXc9MTQ5ODtlLmZpbmFsbWVtPTE1MDE7ZS5maW5hbG1lbWhlYnJldz0xNTAxO2UuZmluYWxudW49MTUwMztlLmZpbmFsbnVuaGVicmV3PTE1MDM7ZS5maW5hbHBlPTE1MDc7ZS5maW5hbHBlaGVicmV3PTE1MDc7ZS5maW5hbHRzYWRpPTE1MDk7ZS5maW5hbHRzYWRpaGVicmV3PTE1MDk7ZS5maXJzdHRvbmVjaGluZXNlPTcxMztlLmZpc2hleWU9OTY3MztlLmZpdGFjeXJpbGxpYz0xMTM5O2UuZml2ZT01MztlLmZpdmVhcmFiaWM9MTYzNztlLmZpdmViZW5nYWxpPTI1Mzk7ZS5maXZlY2lyY2xlPTkzMTY7ZS5maXZlY2lyY2xlaW52ZXJzZXNhbnNzZXJpZj0xMDEyNjtlLmZpdmVkZXZhPTI0MTE7ZS5maXZlZWlnaHRocz04NTQxO2UuZml2ZWd1amFyYXRpPTI3OTU7ZS5maXZlZ3VybXVraGk9MjY2NztlLmZpdmVoYWNrYXJhYmljPTE2Mzc7ZS5maXZlaGFuZ3pob3U9MTIzMjU7ZS5maXZlaWRlb2dyYXBoaWNwYXJlbj0xMjgzNjtlLmZpdmVpbmZlcmlvcj04MzI1O2UuZml2ZW1vbm9zcGFjZT02NTMwMTtlLmZpdmVvbGRzdHlsZT02MzI4NTtlLmZpdmVwYXJlbj05MzM2O2UuZml2ZXBlcmlvZD05MzU2O2UuZml2ZXBlcnNpYW49MTc4MTtlLmZpdmVyb21hbj04NTY0O2UuZml2ZXN1cGVyaW9yPTgzMDk7ZS5maXZldGhhaT0zNjY5O2UuZmw9NjQyNTg7ZS5mX2w9NjQyNTg7ZS5mbG9yaW49NDAyO2UuZm1vbm9zcGFjZT02NTM1MDtlLmZtc3F1YXJlPTEzMjA5O2UuZm9mYW50aGFpPTM2MTU7ZS5mb2ZhdGhhaT0zNjEzO2UuZm9uZ21hbnRoYWk9MzY2MztlLmZvcmFsbD04NzA0O2UuZm91cj01MjtlLmZvdXJhcmFiaWM9MTYzNjtlLmZvdXJiZW5nYWxpPTI1Mzg7ZS5mb3VyY2lyY2xlPTkzMTU7ZS5mb3VyY2lyY2xlaW52ZXJzZXNhbnNzZXJpZj0xMDEyNTtlLmZvdXJkZXZhPTI0MTA7ZS5mb3VyZ3VqYXJhdGk9Mjc5NDtlLmZvdXJndXJtdWtoaT0yNjY2O2UuZm91cmhhY2thcmFiaWM9MTYzNjtlLmZvdXJoYW5nemhvdT0xMjMyNDtlLmZvdXJpZGVvZ3JhcGhpY3BhcmVuPTEyODM1O2UuZm91cmluZmVyaW9yPTgzMjQ7ZS5mb3VybW9ub3NwYWNlPTY1MzAwO2UuZm91cm51bWVyYXRvcmJlbmdhbGk9MjU1MTtlLmZvdXJvbGRzdHlsZT02MzI4NDtlLmZvdXJwYXJlbj05MzM1O2UuZm91cnBlcmlvZD05MzU1O2UuZm91cnBlcnNpYW49MTc4MDtlLmZvdXJyb21hbj04NTYzO2UuZm91cnN1cGVyaW9yPTgzMDg7ZS5mb3VydGVlbmNpcmNsZT05MzI1O2UuZm91cnRlZW5wYXJlbj05MzQ1O2UuZm91cnRlZW5wZXJpb2Q9OTM2NTtlLmZvdXJ0aGFpPTM2Njg7ZS5mb3VydGh0b25lY2hpbmVzZT03MTU7ZS5mcGFyZW49OTM3NztlLmZyYWN0aW9uPTgyNjA7ZS5mcmFuYz04MzU1O2UuZz0xMDM7ZS5nYWJlbmdhbGk9MjQ1NTtlLmdhY3V0ZT01MDE7ZS5nYWRldmE9MjMyNztlLmdhZmFyYWJpYz0xNzExO2UuZ2FmZmluYWxhcmFiaWM9NjQ0MDM7ZS5nYWZpbml0aWFsYXJhYmljPTY0NDA0O2UuZ2FmbWVkaWFsYXJhYmljPTY0NDA1O2UuZ2FndWphcmF0aT0yNzExO2UuZ2FndXJtdWtoaT0yNTgzO2UuZ2FoaXJhZ2FuYT0xMjM2NDtlLmdha2F0YWthbmE9MTI0NjA7ZS5nYW1tYT05NDc7ZS5nYW1tYWxhdGluc21hbGw9NjExO2UuZ2FtbWFzdXBlcmlvcj03MzY7ZS5nYW5naWFjb3B0aWM9MTAwMztlLmdib3BvbW9mbz0xMjU1NztlLmdicmV2ZT0yODc7ZS5nY2Fyb249NDg3O2UuZ2NlZGlsbGE9MjkxO2UuZ2NpcmNsZT05NDMwO2UuZ2NpcmN1bWZsZXg9Mjg1O2UuZ2NvbW1hYWNjZW50PTI5MTtlLmdkb3Q9Mjg5O2UuZ2RvdGFjY2VudD0yODk7ZS5nZWN5cmlsbGljPTEwNzU7ZS5nZWhpcmFnYW5hPTEyMzcwO2UuZ2VrYXRha2FuYT0xMjQ2NjtlLmdlb21ldHJpY2FsbHllcXVhbD04Nzg1O2UuZ2VyZXNoYWNjZW50aGVicmV3PTE0MzY7ZS5nZXJlc2hoZWJyZXc9MTUyMztlLmdlcmVzaG11cWRhbWhlYnJldz0xNDM3O2UuZ2VybWFuZGJscz0yMjM7ZS5nZXJzaGF5aW1hY2NlbnRoZWJyZXc9MTQzODtlLmdlcnNoYXlpbWhlYnJldz0xNTI0O2UuZ2V0YW1hcms9MTIzMDc7ZS5naGFiZW5nYWxpPTI0NTY7ZS5naGFkYXJtZW5pYW49MTM5NDtlLmdoYWRldmE9MjMyODtlLmdoYWd1amFyYXRpPTI3MTI7ZS5naGFndXJtdWtoaT0yNTg0O2UuZ2hhaW5hcmFiaWM9MTU5NDtlLmdoYWluZmluYWxhcmFiaWM9NjUyMzA7ZS5naGFpbmluaXRpYWxhcmFiaWM9NjUyMzE7ZS5naGFpbm1lZGlhbGFyYWJpYz02NTIzMjtlLmdoZW1pZGRsZWhvb2tjeXJpbGxpYz0xMTczO2UuZ2hlc3Ryb2tlY3lyaWxsaWM9MTE3MTtlLmdoZXVwdHVybmN5cmlsbGljPTExNjk7ZS5naGhhZGV2YT0yMzk0O2UuZ2hoYWd1cm11a2hpPTI2NTA7ZS5naG9vaz02MDg7ZS5naHpzcXVhcmU9MTMyMDM7ZS5naWhpcmFnYW5hPTEyMzY2O2UuZ2lrYXRha2FuYT0xMjQ2MjtlLmdpbWFybWVuaWFuPTEzNzk7ZS5naW1lbD0xNDkwO2UuZ2ltZWxkYWdlc2g9NjQzMDY7ZS5naW1lbGRhZ2VzaGhlYnJldz02NDMwNjtlLmdpbWVsaGVicmV3PTE0OTA7ZS5namVjeXJpbGxpYz0xMTA3O2UuZ2xvdHRhbGludmVydGVkc3Ryb2tlPTQ0NjtlLmdsb3R0YWxzdG9wPTY2MDtlLmdsb3R0YWxzdG9waW52ZXJ0ZWQ9NjYyO2UuZ2xvdHRhbHN0b3Btb2Q9NzA0O2UuZ2xvdHRhbHN0b3ByZXZlcnNlZD02NjE7ZS5nbG90dGFsc3RvcHJldmVyc2VkbW9kPTcwNTtlLmdsb3R0YWxzdG9wcmV2ZXJzZWRzdXBlcmlvcj03NDA7ZS5nbG90dGFsc3RvcHN0cm9rZT02NzM7ZS5nbG90dGFsc3RvcHN0cm9rZXJldmVyc2VkPTY3NDtlLmdtYWNyb249NzcxMztlLmdtb25vc3BhY2U9NjUzNTE7ZS5nb2hpcmFnYW5hPTEyMzcyO2UuZ29rYXRha2FuYT0xMjQ2ODtlLmdwYXJlbj05Mzc4O2UuZ3Bhc3F1YXJlPTEzMjI4O2UuZ3JhZGllbnQ9ODcxMTtlLmdyYXZlPTk2O2UuZ3JhdmViZWxvd2NtYj03OTA7ZS5ncmF2ZWNtYj03Njg7ZS5ncmF2ZWNvbWI9NzY4O2UuZ3JhdmVkZXZhPTIzODc7ZS5ncmF2ZWxvd21vZD03MTg7ZS5ncmF2ZW1vbm9zcGFjZT02NTM0NDtlLmdyYXZldG9uZWNtYj04MzI7ZS5ncmVhdGVyPTYyO2UuZ3JlYXRlcmVxdWFsPTg4MDU7ZS5ncmVhdGVyZXF1YWxvcmxlc3M9ODkyMztlLmdyZWF0ZXJtb25vc3BhY2U9NjUzMTA7ZS5ncmVhdGVyb3JlcXVpdmFsZW50PTg4MTk7ZS5ncmVhdGVyb3JsZXNzPTg4MjM7ZS5ncmVhdGVyb3ZlcmVxdWFsPTg4MDc7ZS5ncmVhdGVyc21hbGw9NjUxMjU7ZS5nc2NyaXB0PTYwOTtlLmdzdHJva2U9NDg1O2UuZ3VoaXJhZ2FuYT0xMjM2ODtlLmd1aWxsZW1vdGxlZnQ9MTcxO2UuZ3VpbGxlbW90cmlnaHQ9MTg3O2UuZ3VpbHNpbmdsbGVmdD04MjQ5O2UuZ3VpbHNpbmdscmlnaHQ9ODI1MDtlLmd1a2F0YWthbmE9MTI0NjQ7ZS5ndXJhbXVzcXVhcmU9MTMwODA7ZS5neXNxdWFyZT0xMzI1NztlLmg9MTA0O2UuaGFhYmtoYXNpYW5jeXJpbGxpYz0xMTkzO2UuaGFhbHRvbmVhcmFiaWM9MTcyOTtlLmhhYmVuZ2FsaT0yNDg5O2UuaGFkZXNjZW5kZXJjeXJpbGxpYz0xMjAzO2UuaGFkZXZhPTIzNjE7ZS5oYWd1amFyYXRpPTI3NDU7ZS5oYWd1cm11a2hpPTI2MTc7ZS5oYWhhcmFiaWM9MTU4MTtlLmhhaGZpbmFsYXJhYmljPTY1MTg2O2UuaGFoaW5pdGlhbGFyYWJpYz02NTE4NztlLmhhaGlyYWdhbmE9MTIzOTk7ZS5oYWhtZWRpYWxhcmFiaWM9NjUxODg7ZS5oYWl0dXNxdWFyZT0xMzA5ODtlLmhha2F0YWthbmE9MTI0OTU7ZS5oYWthdGFrYW5haGFsZndpZHRoPTY1NDE4O2UuaGFsYW50Z3VybXVraGk9MjYzNztlLmhhbXphYXJhYmljPTE1Njk7ZS5oYW16YWxvd2FyYWJpYz0xNTY5O2UuaGFuZ3VsZmlsbGVyPTEyNjQ0O2UuaGFyZHNpZ25jeXJpbGxpYz0xMDk4O2UuaGFycG9vbmxlZnRiYXJidXA9ODYzNjtlLmhhcnBvb25yaWdodGJhcmJ1cD04NjQwO2UuaGFzcXVhcmU9MTMyNTg7ZS5oYXRhZnBhdGFoPTE0NTg7ZS5oYXRhZnBhdGFoMTY9MTQ1ODtlLmhhdGFmcGF0YWgyMz0xNDU4O2UuaGF0YWZwYXRhaDJmPTE0NTg7ZS5oYXRhZnBhdGFoaGVicmV3PTE0NTg7ZS5oYXRhZnBhdGFobmFycm93aGVicmV3PTE0NTg7ZS5oYXRhZnBhdGFocXVhcnRlcmhlYnJldz0xNDU4O2UuaGF0YWZwYXRhaHdpZGVoZWJyZXc9MTQ1ODtlLmhhdGFmcWFtYXRzPTE0NTk7ZS5oYXRhZnFhbWF0czFiPTE0NTk7ZS5oYXRhZnFhbWF0czI4PTE0NTk7ZS5oYXRhZnFhbWF0czM0PTE0NTk7ZS5oYXRhZnFhbWF0c2hlYnJldz0xNDU5O2UuaGF0YWZxYW1hdHNuYXJyb3doZWJyZXc9MTQ1OTtlLmhhdGFmcWFtYXRzcXVhcnRlcmhlYnJldz0xNDU5O2UuaGF0YWZxYW1hdHN3aWRlaGVicmV3PTE0NTk7ZS5oYXRhZnNlZ29sPTE0NTc7ZS5oYXRhZnNlZ29sMTc9MTQ1NztlLmhhdGFmc2Vnb2wyND0xNDU3O2UuaGF0YWZzZWdvbDMwPTE0NTc7ZS5oYXRhZnNlZ29saGVicmV3PTE0NTc7ZS5oYXRhZnNlZ29sbmFycm93aGVicmV3PTE0NTc7ZS5oYXRhZnNlZ29scXVhcnRlcmhlYnJldz0xNDU3O2UuaGF0YWZzZWdvbHdpZGVoZWJyZXc9MTQ1NztlLmhiYXI9Mjk1O2UuaGJvcG9tb2ZvPTEyNTU5O2UuaGJyZXZlYmVsb3c9NzcyMztlLmhjZWRpbGxhPTc3MjE7ZS5oY2lyY2xlPTk0MzE7ZS5oY2lyY3VtZmxleD0yOTM7ZS5oZGllcmVzaXM9NzcxOTtlLmhkb3RhY2NlbnQ9NzcxNTtlLmhkb3RiZWxvdz03NzE3O2UuaGU9MTQ5MjtlLmhlYXJ0PTk4Mjk7ZS5oZWFydHN1aXRibGFjaz05ODI5O2UuaGVhcnRzdWl0d2hpdGU9OTgyNTtlLmhlZGFnZXNoPTY0MzA4O2UuaGVkYWdlc2hoZWJyZXc9NjQzMDg7ZS5oZWhhbHRvbmVhcmFiaWM9MTcyOTtlLmhlaGFyYWJpYz0xNjA3O2UuaGVoZWJyZXc9MTQ5MjtlLmhlaGZpbmFsYWx0b25lYXJhYmljPTY0NDIzO2UuaGVoZmluYWxhbHR0d29hcmFiaWM9NjUyNTg7ZS5oZWhmaW5hbGFyYWJpYz02NTI1ODtlLmhlaGhhbXphYWJvdmVmaW5hbGFyYWJpYz02NDQyMTtlLmhlaGhhbXphYWJvdmVpc29sYXRlZGFyYWJpYz02NDQyMDtlLmhlaGluaXRpYWxhbHRvbmVhcmFiaWM9NjQ0MjQ7ZS5oZWhpbml0aWFsYXJhYmljPTY1MjU5O2UuaGVoaXJhZ2FuYT0xMjQwODtlLmhlaG1lZGlhbGFsdG9uZWFyYWJpYz02NDQyNTtlLmhlaG1lZGlhbGFyYWJpYz02NTI2MDtlLmhlaXNlaWVyYXNxdWFyZT0xMzE3OTtlLmhla2F0YWthbmE9MTI1MDQ7ZS5oZWthdGFrYW5haGFsZndpZHRoPTY1NDIxO2UuaGVrdXRhYXJ1c3F1YXJlPTEzMTEwO2UuaGVuZ2hvb2s9NjE1O2UuaGVydXR1c3F1YXJlPTEzMTEzO2UuaGV0PTE0OTU7ZS5oZXRoZWJyZXc9MTQ5NTtlLmhob29rPTYxNDtlLmhob29rc3VwZXJpb3I9Njg5O2UuaGlldWhhY2lyY2xla29yZWFuPTEyOTIzO2UuaGlldWhhcGFyZW5rb3JlYW49MTI4Mjc7ZS5oaWV1aGNpcmNsZWtvcmVhbj0xMjkwOTtlLmhpZXVoa29yZWFuPTEyNjIyO2UuaGlldWhwYXJlbmtvcmVhbj0xMjgxMztlLmhpaGlyYWdhbmE9MTI0MDI7ZS5oaWthdGFrYW5hPTEyNDk4O2UuaGlrYXRha2FuYWhhbGZ3aWR0aD02NTQxOTtlLmhpcmlxPTE0NjA7ZS5oaXJpcTE0PTE0NjA7ZS5oaXJpcTIxPTE0NjA7ZS5oaXJpcTJkPTE0NjA7ZS5oaXJpcWhlYnJldz0xNDYwO2UuaGlyaXFuYXJyb3doZWJyZXc9MTQ2MDtlLmhpcmlxcXVhcnRlcmhlYnJldz0xNDYwO2UuaGlyaXF3aWRlaGVicmV3PTE0NjA7ZS5obGluZWJlbG93PTc4MzA7ZS5obW9ub3NwYWNlPTY1MzUyO2UuaG9hcm1lbmlhbj0xMzkyO2UuaG9oaXB0aGFpPTM2Mjc7ZS5ob2hpcmFnYW5hPTEyNDExO2UuaG9rYXRha2FuYT0xMjUwNztlLmhva2F0YWthbmFoYWxmd2lkdGg9NjU0MjI7ZS5ob2xhbT0xNDY1O2UuaG9sYW0xOT0xNDY1O2UuaG9sYW0yNj0xNDY1O2UuaG9sYW0zMj0xNDY1O2UuaG9sYW1oZWJyZXc9MTQ2NTtlLmhvbGFtbmFycm93aGVicmV3PTE0NjU7ZS5ob2xhbXF1YXJ0ZXJoZWJyZXc9MTQ2NTtlLmhvbGFtd2lkZWhlYnJldz0xNDY1O2UuaG9ub2todWt0aGFpPTM2MzA7ZS5ob29rYWJvdmVjb21iPTc3NztlLmhvb2tjbWI9Nzc3O2UuaG9va3BhbGF0YWxpemVkYmVsb3djbWI9ODAxO2UuaG9va3JldHJvZmxleGJlbG93Y21iPTgwMjtlLmhvb25zcXVhcmU9MTMxMjI7ZS5ob3JpY29wdGljPTEwMDE7ZS5ob3Jpem9udGFsYmFyPTgyMTM7ZS5ob3JuY21iPTc5NTtlLmhvdHNwcmluZ3M9OTgzMjtlLmhvdXNlPTg5NjI7ZS5ocGFyZW49OTM3OTtlLmhzdXBlcmlvcj02ODg7ZS5odHVybmVkPTYxMztlLmh1aGlyYWdhbmE9MTI0MDU7ZS5odWlpdG9zcXVhcmU9MTMxMDc7ZS5odWthdGFrYW5hPTEyNTAxO2UuaHVrYXRha2FuYWhhbGZ3aWR0aD02NTQyMDtlLmh1bmdhcnVtbGF1dD03MzM7ZS5odW5nYXJ1bWxhdXRjbWI9Nzc5O2UuaHY9NDA1O2UuaHlwaGVuPTQ1O2UuaHlwaGVuaW5mZXJpb3I9NjMyMDU7ZS5oeXBoZW5tb25vc3BhY2U9NjUyOTM7ZS5oeXBoZW5zbWFsbD02NTEyMztlLmh5cGhlbnN1cGVyaW9yPTYzMjA2O2UuaHlwaGVudHdvPTgyMDg7ZS5pPTEwNTtlLmlhY3V0ZT0yMzc7ZS5pYWN5cmlsbGljPTExMDM7ZS5pYmVuZ2FsaT0yNDM5O2UuaWJvcG9tb2ZvPTEyNTgzO2UuaWJyZXZlPTMwMTtlLmljYXJvbj00NjQ7ZS5pY2lyY2xlPTk0MzI7ZS5pY2lyY3VtZmxleD0yMzg7ZS5pY3lyaWxsaWM9MTExMDtlLmlkYmxncmF2ZT01MjE7ZS5pZGVvZ3JhcGhlYXJ0aGNpcmNsZT0xMjk0MztlLmlkZW9ncmFwaGZpcmVjaXJjbGU9MTI5Mzk7ZS5pZGVvZ3JhcGhpY2FsbGlhbmNlcGFyZW49MTI4NjM7ZS5pZGVvZ3JhcGhpY2NhbGxwYXJlbj0xMjg1ODtlLmlkZW9ncmFwaGljY2VudHJlY2lyY2xlPTEyOTY1O2UuaWRlb2dyYXBoaWNjbG9zZT0xMjI5NDtlLmlkZW9ncmFwaGljY29tbWE9MTIyODk7ZS5pZGVvZ3JhcGhpY2NvbW1hbGVmdD02NTM4MDtlLmlkZW9ncmFwaGljY29uZ3JhdHVsYXRpb25wYXJlbj0xMjg1NTtlLmlkZW9ncmFwaGljY29ycmVjdGNpcmNsZT0xMjk2MztlLmlkZW9ncmFwaGljZWFydGhwYXJlbj0xMjg0NztlLmlkZW9ncmFwaGljZW50ZXJwcmlzZXBhcmVuPTEyODYxO2UuaWRlb2dyYXBoaWNleGNlbGxlbnRjaXJjbGU9MTI5NTc7ZS5pZGVvZ3JhcGhpY2Zlc3RpdmFscGFyZW49MTI4NjQ7ZS5pZGVvZ3JhcGhpY2ZpbmFuY2lhbGNpcmNsZT0xMjk1MDtlLmlkZW9ncmFwaGljZmluYW5jaWFscGFyZW49MTI4NTQ7ZS5pZGVvZ3JhcGhpY2ZpcmVwYXJlbj0xMjg0MztlLmlkZW9ncmFwaGljaGF2ZXBhcmVuPTEyODUwO2UuaWRlb2dyYXBoaWNoaWdoY2lyY2xlPTEyOTY0O2UuaWRlb2dyYXBoaWNpdGVyYXRpb25tYXJrPTEyMjkzO2UuaWRlb2dyYXBoaWNsYWJvcmNpcmNsZT0xMjk1MjtlLmlkZW9ncmFwaGljbGFib3JwYXJlbj0xMjg1NjtlLmlkZW9ncmFwaGljbGVmdGNpcmNsZT0xMjk2NztlLmlkZW9ncmFwaGljbG93Y2lyY2xlPTEyOTY2O2UuaWRlb2dyYXBoaWNtZWRpY2luZWNpcmNsZT0xMjk2OTtlLmlkZW9ncmFwaGljbWV0YWxwYXJlbj0xMjg0NjtlLmlkZW9ncmFwaGljbW9vbnBhcmVuPTEyODQyO2UuaWRlb2dyYXBoaWNuYW1lcGFyZW49MTI4NTI7ZS5pZGVvZ3JhcGhpY3BlcmlvZD0xMjI5MDtlLmlkZW9ncmFwaGljcHJpbnRjaXJjbGU9MTI5NTg7ZS5pZGVvZ3JhcGhpY3JlYWNocGFyZW49MTI4Njc7ZS5pZGVvZ3JhcGhpY3JlcHJlc2VudHBhcmVuPTEyODU3O2UuaWRlb2dyYXBoaWNyZXNvdXJjZXBhcmVuPTEyODYyO2UuaWRlb2dyYXBoaWNyaWdodGNpcmNsZT0xMjk2ODtlLmlkZW9ncmFwaGljc2VjcmV0Y2lyY2xlPTEyOTUzO2UuaWRlb2dyYXBoaWNzZWxmcGFyZW49MTI4NjY7ZS5pZGVvZ3JhcGhpY3NvY2lldHlwYXJlbj0xMjg1MTtlLmlkZW9ncmFwaGljc3BhY2U9MTIyODg7ZS5pZGVvZ3JhcGhpY3NwZWNpYWxwYXJlbj0xMjg1MztlLmlkZW9ncmFwaGljc3RvY2twYXJlbj0xMjg0OTtlLmlkZW9ncmFwaGljc3R1ZHlwYXJlbj0xMjg1OTtlLmlkZW9ncmFwaGljc3VucGFyZW49MTI4NDg7ZS5pZGVvZ3JhcGhpY3N1cGVydmlzZXBhcmVuPTEyODYwO2UuaWRlb2dyYXBoaWN3YXRlcnBhcmVuPTEyODQ0O2UuaWRlb2dyYXBoaWN3b29kcGFyZW49MTI4NDU7ZS5pZGVvZ3JhcGhpY3plcm89MTIyOTU7ZS5pZGVvZ3JhcGhtZXRhbGNpcmNsZT0xMjk0MjtlLmlkZW9ncmFwaG1vb25jaXJjbGU9MTI5Mzg7ZS5pZGVvZ3JhcGhuYW1lY2lyY2xlPTEyOTQ4O2UuaWRlb2dyYXBoc3VuY2lyY2xlPTEyOTQ0O2UuaWRlb2dyYXBod2F0ZXJjaXJjbGU9MTI5NDA7ZS5pZGVvZ3JhcGh3b29kY2lyY2xlPTEyOTQxO2UuaWRldmE9MjMxMTtlLmlkaWVyZXNpcz0yMzk7ZS5pZGllcmVzaXNhY3V0ZT03NzI3O2UuaWRpZXJlc2lzY3lyaWxsaWM9MTI1MztlLmlkb3RiZWxvdz03ODgzO2UuaWVicmV2ZWN5cmlsbGljPTEyMzk7ZS5pZWN5cmlsbGljPTEwNzc7ZS5pZXVuZ2FjaXJjbGVrb3JlYW49MTI5MTc7ZS5pZXVuZ2FwYXJlbmtvcmVhbj0xMjgyMTtlLmlldW5nY2lyY2xla29yZWFuPTEyOTAzO2UuaWV1bmdrb3JlYW49MTI2MTU7ZS5pZXVuZ3BhcmVua29yZWFuPTEyODA3O2UuaWdyYXZlPTIzNjtlLmlndWphcmF0aT0yNjk1O2UuaWd1cm11a2hpPTI1Njc7ZS5paGlyYWdhbmE9MTIzNTY7ZS5paG9va2Fib3ZlPTc4ODE7ZS5paWJlbmdhbGk9MjQ0MDtlLmlpY3lyaWxsaWM9MTA4MDtlLmlpZGV2YT0yMzEyO2UuaWlndWphcmF0aT0yNjk2O2UuaWlndXJtdWtoaT0yNTY4O2UuaWltYXRyYWd1cm11a2hpPTI2MjQ7ZS5paW52ZXJ0ZWRicmV2ZT01MjM7ZS5paXNob3J0Y3lyaWxsaWM9MTA4MTtlLmlpdm93ZWxzaWduYmVuZ2FsaT0yNDk2O2UuaWl2b3dlbHNpZ25kZXZhPTIzNjg7ZS5paXZvd2Vsc2lnbmd1amFyYXRpPTI3NTI7ZS5paj0zMDc7ZS5pa2F0YWthbmE9MTI0NTI7ZS5pa2F0YWthbmFoYWxmd2lkdGg9NjUzOTQ7ZS5pa29yZWFuPTEyNjQzO2UuaWxkZT03MzI7ZS5pbHV5aGVicmV3PTE0NTI7ZS5pbWFjcm9uPTI5OTtlLmltYWNyb25jeXJpbGxpYz0xMjUxO2UuaW1hZ2VvcmFwcHJveGltYXRlbHllcXVhbD04Nzg3O2UuaW1hdHJhZ3VybXVraGk9MjYyMztlLmltb25vc3BhY2U9NjUzNTM7ZS5pbmNyZW1lbnQ9ODcxMDtlLmluZmluaXR5PTg3MzQ7ZS5pbmlhcm1lbmlhbj0xMzg3O2UuaW50ZWdyYWw9ODc0NztlLmludGVncmFsYm90dG9tPTg5OTM7ZS5pbnRlZ3JhbGJ0PTg5OTM7ZS5pbnRlZ3JhbGV4PTYzNzMzO2UuaW50ZWdyYWx0b3A9ODk5MjtlLmludGVncmFsdHA9ODk5MjtlLmludGVyc2VjdGlvbj04NzQ1O2UuaW50aXNxdWFyZT0xMzA2MTtlLmludmJ1bGxldD05Njg4O2UuaW52Y2lyY2xlPTk2ODk7ZS5pbnZzbWlsZWZhY2U9OTc4NztlLmlvY3lyaWxsaWM9MTEwNTtlLmlvZ29uZWs9MzAzO2UuaW90YT05NTM7ZS5pb3RhZGllcmVzaXM9OTcwO2UuaW90YWRpZXJlc2lzdG9ub3M9OTEyO2UuaW90YWxhdGluPTYxNztlLmlvdGF0b25vcz05NDM7ZS5pcGFyZW49OTM4MDtlLmlyaWd1cm11a2hpPTI2NzQ7ZS5pc21hbGxoaXJhZ2FuYT0xMjM1NTtlLmlzbWFsbGthdGFrYW5hPTEyNDUxO2UuaXNtYWxsa2F0YWthbmFoYWxmd2lkdGg9NjUzODQ7ZS5pc3NoYXJiZW5nYWxpPTI1NTQ7ZS5pc3Ryb2tlPTYxNjtlLmlzdXBlcmlvcj02MzIxMztlLml0ZXJhdGlvbmhpcmFnYW5hPTEyNDQ1O2UuaXRlcmF0aW9ua2F0YWthbmE9MTI1NDE7ZS5pdGlsZGU9Mjk3O2UuaXRpbGRlYmVsb3c9NzcyNTtlLml1Ym9wb21vZm89MTI1ODU7ZS5pdWN5cmlsbGljPTExMDI7ZS5pdm93ZWxzaWduYmVuZ2FsaT0yNDk1O2UuaXZvd2Vsc2lnbmRldmE9MjM2NztlLml2b3dlbHNpZ25ndWphcmF0aT0yNzUxO2UuaXpoaXRzYWN5cmlsbGljPTExNDE7ZS5pemhpdHNhZGJsZ3JhdmVjeXJpbGxpYz0xMTQzO2Uuaj0xMDY7ZS5qYWFybWVuaWFuPTEzOTM7ZS5qYWJlbmdhbGk9MjQ2MDtlLmphZGV2YT0yMzMyO2UuamFndWphcmF0aT0yNzE2O2UuamFndXJtdWtoaT0yNTg4O2UuamJvcG9tb2ZvPTEyNTYwO2UuamNhcm9uPTQ5NjtlLmpjaXJjbGU9OTQzMztlLmpjaXJjdW1mbGV4PTMwOTtlLmpjcm9zc2VkdGFpbD02Njk7ZS5qZG90bGVzc3N0cm9rZT02MDc7ZS5qZWN5cmlsbGljPTExMTI7ZS5qZWVtYXJhYmljPTE1ODA7ZS5qZWVtZmluYWxhcmFiaWM9NjUxODI7ZS5qZWVtaW5pdGlhbGFyYWJpYz02NTE4MztlLmplZW1tZWRpYWxhcmFiaWM9NjUxODQ7ZS5qZWhhcmFiaWM9MTY4ODtlLmplaGZpbmFsYXJhYmljPTY0Mzk1O2UuamhhYmVuZ2FsaT0yNDYxO2UuamhhZGV2YT0yMzMzO2UuamhhZ3VqYXJhdGk9MjcxNztlLmpoYWd1cm11a2hpPTI1ODk7ZS5qaGVoYXJtZW5pYW49MTQwMztlLmppcz0xMjI5MjtlLmptb25vc3BhY2U9NjUzNTQ7ZS5qcGFyZW49OTM4MTtlLmpzdXBlcmlvcj02OTA7ZS5rPTEwNztlLmthYmFzaGtpcmN5cmlsbGljPTExODU7ZS5rYWJlbmdhbGk9MjQ1MztlLmthY3V0ZT03NzI5O2Uua2FjeXJpbGxpYz0xMDgyO2Uua2FkZXNjZW5kZXJjeXJpbGxpYz0xMTc5O2Uua2FkZXZhPTIzMjU7ZS5rYWY9MTQ5OTtlLmthZmFyYWJpYz0xNjAzO2Uua2FmZGFnZXNoPTY0MzE1O2Uua2FmZGFnZXNoaGVicmV3PTY0MzE1O2Uua2FmZmluYWxhcmFiaWM9NjUyNDI7ZS5rYWZoZWJyZXc9MTQ5OTtlLmthZmluaXRpYWxhcmFiaWM9NjUyNDM7ZS5rYWZtZWRpYWxhcmFiaWM9NjUyNDQ7ZS5rYWZyYWZlaGVicmV3PTY0MzMzO2Uua2FndWphcmF0aT0yNzA5O2Uua2FndXJtdWtoaT0yNTgxO2Uua2FoaXJhZ2FuYT0xMjM2MztlLmthaG9va2N5cmlsbGljPTEyMjA7ZS5rYWthdGFrYW5hPTEyNDU5O2Uua2FrYXRha2FuYWhhbGZ3aWR0aD02NTM5ODtlLmthcHBhPTk1NDtlLmthcHBhc3ltYm9sZ3JlZWs9MTAwODtlLmthcHllb3VubWlldW1rb3JlYW49MTI2NTc7ZS5rYXB5ZW91bnBoaWV1cGhrb3JlYW49MTI2NzY7ZS5rYXB5ZW91bnBpZXVwa29yZWFuPTEyNjY0O2Uua2FweWVvdW5zc2FuZ3BpZXVwa29yZWFuPTEyNjY1O2Uua2Fyb3JpaXNxdWFyZT0xMzA2OTtlLmthc2hpZGFhdXRvYXJhYmljPTE2MDA7ZS5rYXNoaWRhYXV0b25vc2lkZWJlYXJpbmdhcmFiaWM9MTYwMDtlLmthc21hbGxrYXRha2FuYT0xMjUzMztlLmthc3F1YXJlPTEzMTg4O2Uua2FzcmFhcmFiaWM9MTYxNjtlLmthc3JhdGFuYXJhYmljPTE2MTM7ZS5rYXN0cm9rZWN5cmlsbGljPTExODM7ZS5rYXRhaGlyYXByb2xvbmdtYXJraGFsZndpZHRoPTY1MzkyO2Uua2F2ZXJ0aWNhbHN0cm9rZWN5cmlsbGljPTExODE7ZS5rYm9wb21vZm89MTI1NTg7ZS5rY2Fsc3F1YXJlPTEzMTkzO2Uua2Nhcm9uPTQ4OTtlLmtjZWRpbGxhPTMxMTtlLmtjaXJjbGU9OTQzNDtlLmtjb21tYWFjY2VudD0zMTE7ZS5rZG90YmVsb3c9NzczMTtlLmtlaGFybWVuaWFuPTE0MTI7ZS5rZWhpcmFnYW5hPTEyMzY5O2Uua2VrYXRha2FuYT0xMjQ2NTtlLmtla2F0YWthbmFoYWxmd2lkdGg9NjU0MDE7ZS5rZW5hcm1lbmlhbj0xMzkxO2Uua2VzbWFsbGthdGFrYW5hPTEyNTM0O2Uua2dyZWVubGFuZGljPTMxMjtlLmtoYWJlbmdhbGk9MjQ1NDtlLmtoYWN5cmlsbGljPTEwOTM7ZS5raGFkZXZhPTIzMjY7ZS5raGFndWphcmF0aT0yNzEwO2Uua2hhZ3VybXVraGk9MjU4MjtlLmtoYWhhcmFiaWM9MTU4MjtlLmtoYWhmaW5hbGFyYWJpYz02NTE5MDtlLmtoYWhpbml0aWFsYXJhYmljPTY1MTkxO2Uua2hhaG1lZGlhbGFyYWJpYz02NTE5MjtlLmtoZWljb3B0aWM9OTk5O2Uua2hoYWRldmE9MjM5MztlLmtoaGFndXJtdWtoaT0yNjQ5O2Uua2hpZXVraGFjaXJjbGVrb3JlYW49MTI5MjA7ZS5raGlldWtoYXBhcmVua29yZWFuPTEyODI0O2Uua2hpZXVraGNpcmNsZWtvcmVhbj0xMjkwNjtlLmtoaWV1a2hrb3JlYW49MTI2MTk7ZS5raGlldWtocGFyZW5rb3JlYW49MTI4MTA7ZS5raG9raGFpdGhhaT0zNTg2O2Uua2hva2hvbnRoYWk9MzU4OTtlLmtob2todWF0dGhhaT0zNTg3O2Uua2hva2h3YWl0aGFpPTM1ODg7ZS5raG9tdXR0aGFpPTM2NzU7ZS5raG9vaz00MDk7ZS5raG9yYWtoYW5ndGhhaT0zNTkwO2Uua2h6c3F1YXJlPTEzMjAxO2Uua2loaXJhZ2FuYT0xMjM2NTtlLmtpa2F0YWthbmE9MTI0NjE7ZS5raWthdGFrYW5haGFsZndpZHRoPTY1Mzk5O2Uua2lyb2d1cmFtdXNxdWFyZT0xMzA3NztlLmtpcm9tZWV0b3J1c3F1YXJlPTEzMDc4O2Uua2lyb3NxdWFyZT0xMzA3NjtlLmtpeWVva2FjaXJjbGVrb3JlYW49MTI5MTA7ZS5raXllb2thcGFyZW5rb3JlYW49MTI4MTQ7ZS5raXllb2tjaXJjbGVrb3JlYW49MTI4OTY7ZS5raXllb2trb3JlYW49MTI1OTM7ZS5raXllb2twYXJlbmtvcmVhbj0xMjgwMDtlLmtpeWVva3Npb3Nrb3JlYW49MTI1OTU7ZS5ramVjeXJpbGxpYz0xMTE2O2Uua2xpbmViZWxvdz03NzMzO2Uua2xzcXVhcmU9MTMyMDg7ZS5rbWN1YmVkc3F1YXJlPTEzMjIyO2Uua21vbm9zcGFjZT02NTM1NTtlLmttc3F1YXJlZHNxdWFyZT0xMzIxODtlLmtvaGlyYWdhbmE9MTIzNzE7ZS5rb2htc3F1YXJlPTEzMjQ4O2Uua29rYWl0aGFpPTM1ODU7ZS5rb2thdGFrYW5hPTEyNDY3O2Uua29rYXRha2FuYWhhbGZ3aWR0aD02NTQwMjtlLmtvb3Bvc3F1YXJlPTEzMDg2O2Uua29wcGFjeXJpbGxpYz0xMTUzO2Uua29yZWFuc3RhbmRhcmRzeW1ib2w9MTI5Mjc7ZS5rb3JvbmlzY21iPTgzNTtlLmtwYXJlbj05MzgyO2Uua3Bhc3F1YXJlPTEzMjI2O2Uua3NpY3lyaWxsaWM9MTEzNTtlLmt0c3F1YXJlPTEzMjYzO2Uua3R1cm5lZD02NzA7ZS5rdWhpcmFnYW5hPTEyMzY3O2Uua3VrYXRha2FuYT0xMjQ2MztlLmt1a2F0YWthbmFoYWxmd2lkdGg9NjU0MDA7ZS5rdnNxdWFyZT0xMzI0MDtlLmt3c3F1YXJlPTEzMjQ2O2UubD0xMDg7ZS5sYWJlbmdhbGk9MjQ4MjtlLmxhY3V0ZT0zMTQ7ZS5sYWRldmE9MjM1NDtlLmxhZ3VqYXJhdGk9MjczODtlLmxhZ3VybXVraGk9MjYxMDtlLmxha2toYW5neWFvdGhhaT0zNjUzO2UubGFtYWxlZmZpbmFsYXJhYmljPTY1Mjc2O2UubGFtYWxlZmhhbXphYWJvdmVmaW5hbGFyYWJpYz02NTI3MjtlLmxhbWFsZWZoYW16YWFib3ZlaXNvbGF0ZWRhcmFiaWM9NjUyNzE7ZS5sYW1hbGVmaGFtemFiZWxvd2ZpbmFsYXJhYmljPTY1Mjc0O2UubGFtYWxlZmhhbXphYmVsb3dpc29sYXRlZGFyYWJpYz02NTI3MztlLmxhbWFsZWZpc29sYXRlZGFyYWJpYz02NTI3NTtlLmxhbWFsZWZtYWRkYWFib3ZlZmluYWxhcmFiaWM9NjUyNzA7ZS5sYW1hbGVmbWFkZGFhYm92ZWlzb2xhdGVkYXJhYmljPTY1MjY5O2UubGFtYXJhYmljPTE2MDQ7ZS5sYW1iZGE9OTU1O2UubGFtYmRhc3Ryb2tlPTQxMTtlLmxhbWVkPTE1MDA7ZS5sYW1lZGRhZ2VzaD02NDMxNjtlLmxhbWVkZGFnZXNoaGVicmV3PTY0MzE2O2UubGFtZWRoZWJyZXc9MTUwMDtlLmxhbWZpbmFsYXJhYmljPTY1MjQ2O2UubGFtaGFoaW5pdGlhbGFyYWJpYz02NDcxNDtlLmxhbWluaXRpYWxhcmFiaWM9NjUyNDc7ZS5sYW1qZWVtaW5pdGlhbGFyYWJpYz02NDcxMztlLmxhbWtoYWhpbml0aWFsYXJhYmljPTY0NzE1O2UubGFtbGFtaGVoaXNvbGF0ZWRhcmFiaWM9NjUwMTA7ZS5sYW1tZWRpYWxhcmFiaWM9NjUyNDg7ZS5sYW1tZWVtaGFoaW5pdGlhbGFyYWJpYz02NDkwNDtlLmxhbW1lZW1pbml0aWFsYXJhYmljPTY0NzE2O2UubGFyZ2VjaXJjbGU9OTcxMTtlLmxiYXI9NDEwO2UubGJlbHQ9NjIwO2UubGJvcG9tb2ZvPTEyNTU2O2UubGNhcm9uPTMxODtlLmxjZWRpbGxhPTMxNjtlLmxjaXJjbGU9OTQzNTtlLmxjaXJjdW1mbGV4YmVsb3c9Nzc0MTtlLmxjb21tYWFjY2VudD0zMTY7ZS5sZG90PTMyMDtlLmxkb3RhY2NlbnQ9MzIwO2UubGRvdGJlbG93PTc3MzU7ZS5sZG90YmVsb3dtYWNyb249NzczNztlLmxlZnRhbmdsZWFib3ZlY21iPTc5NDtlLmxlZnR0YWNrYmVsb3djbWI9NzkyO2UubGVzcz02MDtlLmxlc3NlcXVhbD04ODA0O2UubGVzc2VxdWFsb3JncmVhdGVyPTg5MjI7ZS5sZXNzbW9ub3NwYWNlPTY1MzA4O2UubGVzc29yZXF1aXZhbGVudD04ODE4O2UubGVzc29yZ3JlYXRlcj04ODIyO2UubGVzc292ZXJlcXVhbD04ODA2O2UubGVzc3NtYWxsPTY1MTI0O2UubGV6aD02MjI7ZS5sZmJsb2NrPTk2MTI7ZS5saG9va3JldHJvZmxleD02MjE7ZS5saXJhPTgzNTY7ZS5saXduYXJtZW5pYW49MTM4ODtlLmxqPTQ1NztlLmxqZWN5cmlsbGljPTExMTM7ZS5sbD02MzE2ODtlLmxsYWRldmE9MjM1NTtlLmxsYWd1amFyYXRpPTI3Mzk7ZS5sbGluZWJlbG93PTc3Mzk7ZS5sbGxhZGV2YT0yMzU2O2UubGx2b2NhbGljYmVuZ2FsaT0yNTI5O2UubGx2b2NhbGljZGV2YT0yNDAxO2UubGx2b2NhbGljdm93ZWxzaWduYmVuZ2FsaT0yNTMxO2UubGx2b2NhbGljdm93ZWxzaWduZGV2YT0yNDAzO2UubG1pZGRsZXRpbGRlPTYxOTtlLmxtb25vc3BhY2U9NjUzNTY7ZS5sbXNxdWFyZT0xMzI2NDtlLmxvY2h1bGF0aGFpPTM2Mjg7ZS5sb2dpY2FsYW5kPTg3NDM7ZS5sb2dpY2Fsbm90PTE3MjtlLmxvZ2ljYWxub3RyZXZlcnNlZD04OTc2O2UubG9naWNhbG9yPTg3NDQ7ZS5sb2xpbmd0aGFpPTM2MjE7ZS5sb25ncz0zODM7ZS5sb3dsaW5lY2VudGVybGluZT02NTEwMjtlLmxvd2xpbmVjbWI9ODE4O2UubG93bGluZWRhc2hlZD02NTEwMTtlLmxvemVuZ2U9OTY3NDtlLmxwYXJlbj05MzgzO2UubHNsYXNoPTMyMjtlLmxzcXVhcmU9ODQ2NztlLmxzdXBlcmlvcj02MzIxNDtlLmx0c2hhZGU9OTYxNztlLmx1dGhhaT0zNjIyO2UubHZvY2FsaWNiZW5nYWxpPTI0NDQ7ZS5sdm9jYWxpY2RldmE9MjMxNjtlLmx2b2NhbGljdm93ZWxzaWduYmVuZ2FsaT0yNTMwO2UubHZvY2FsaWN2b3dlbHNpZ25kZXZhPTI0MDI7ZS5seHNxdWFyZT0xMzI2NztlLm09MTA5O2UubWFiZW5nYWxpPTI0Nzg7ZS5tYWNyb249MTc1O2UubWFjcm9uYmVsb3djbWI9ODE3O2UubWFjcm9uY21iPTc3MjtlLm1hY3Jvbmxvd21vZD03MTc7ZS5tYWNyb25tb25vc3BhY2U9NjU1MDc7ZS5tYWN1dGU9Nzc0MztlLm1hZGV2YT0yMzUwO2UubWFndWphcmF0aT0yNzM0O2UubWFndXJtdWtoaT0yNjA2O2UubWFoYXBha2hoZWJyZXc9MTQ0NDtlLm1haGFwYWtobGVmdGhlYnJldz0xNDQ0O2UubWFoaXJhZ2FuYT0xMjQxNDtlLm1haWNoYXR0YXdhbG93bGVmdHRoYWk9NjM2Mzc7ZS5tYWljaGF0dGF3YWxvd3JpZ2h0dGhhaT02MzYzNjtlLm1haWNoYXR0YXdhdGhhaT0zNjU5O2UubWFpY2hhdHRhd2F1cHBlcmxlZnR0aGFpPTYzNjM1O2UubWFpZWtsb3dsZWZ0dGhhaT02MzYyODtlLm1haWVrbG93cmlnaHR0aGFpPTYzNjI3O2UubWFpZWt0aGFpPTM2NTY7ZS5tYWlla3VwcGVybGVmdHRoYWk9NjM2MjY7ZS5tYWloYW5ha2F0bGVmdHRoYWk9NjM2MjA7ZS5tYWloYW5ha2F0dGhhaT0zNjMzO2UubWFpdGFpa2h1bGVmdHRoYWk9NjM2MjU7ZS5tYWl0YWlraHV0aGFpPTM2NTU7ZS5tYWl0aG9sb3dsZWZ0dGhhaT02MzYzMTtlLm1haXRob2xvd3JpZ2h0dGhhaT02MzYzMDtlLm1haXRob3RoYWk9MzY1NztlLm1haXRob3VwcGVybGVmdHRoYWk9NjM2Mjk7ZS5tYWl0cmlsb3dsZWZ0dGhhaT02MzYzNDtlLm1haXRyaWxvd3JpZ2h0dGhhaT02MzYzMztlLm1haXRyaXRoYWk9MzY1ODtlLm1haXRyaXVwcGVybGVmdHRoYWk9NjM2MzI7ZS5tYWl5YW1va3RoYWk9MzY1NDtlLm1ha2F0YWthbmE9MTI1MTA7ZS5tYWthdGFrYW5haGFsZndpZHRoPTY1NDIzO2UubWFsZT05Nzk0O2UubWFuc3lvbnNxdWFyZT0xMzEyNztlLm1hcWFmaGVicmV3PTE0NzA7ZS5tYXJzPTk3OTQ7ZS5tYXNvcmFjaXJjbGVoZWJyZXc9MTQ1NTtlLm1hc3F1YXJlPTEzMTg3O2UubWJvcG9tb2ZvPTEyNTUxO2UubWJzcXVhcmU9MTMyNjg7ZS5tY2lyY2xlPTk0MzY7ZS5tY3ViZWRzcXVhcmU9MTMyMjE7ZS5tZG90YWNjZW50PTc3NDU7ZS5tZG90YmVsb3c9Nzc0NztlLm1lZW1hcmFiaWM9MTYwNTtlLm1lZW1maW5hbGFyYWJpYz02NTI1MDtlLm1lZW1pbml0aWFsYXJhYmljPTY1MjUxO2UubWVlbW1lZGlhbGFyYWJpYz02NTI1MjtlLm1lZW1tZWVtaW5pdGlhbGFyYWJpYz02NDcyMTtlLm1lZW1tZWVtaXNvbGF0ZWRhcmFiaWM9NjQ1ODQ7ZS5tZWV0b3J1c3F1YXJlPTEzMTMzO2UubWVoaXJhZ2FuYT0xMjQxNztlLm1laXppZXJhc3F1YXJlPTEzMTgyO2UubWVrYXRha2FuYT0xMjUxMztlLm1la2F0YWthbmFoYWxmd2lkdGg9NjU0MjY7ZS5tZW09MTUwMjtlLm1lbWRhZ2VzaD02NDMxODtlLm1lbWRhZ2VzaGhlYnJldz02NDMxODtlLm1lbWhlYnJldz0xNTAyO2UubWVuYXJtZW5pYW49MTM5NjtlLm1lcmtoYWhlYnJldz0xNDQ1O2UubWVya2hha2VmdWxhaGVicmV3PTE0NDY7ZS5tZXJraGFrZWZ1bGFsZWZ0aGVicmV3PTE0NDY7ZS5tZXJraGFsZWZ0aGVicmV3PTE0NDU7ZS5taG9vaz02MjU7ZS5taHpzcXVhcmU9MTMyMDI7ZS5taWRkbGVkb3RrYXRha2FuYWhhbGZ3aWR0aD02NTM4MTtlLm1pZGRvdD0xODM7ZS5taWV1bWFjaXJjbGVrb3JlYW49MTI5MTQ7ZS5taWV1bWFwYXJlbmtvcmVhbj0xMjgxODtlLm1pZXVtY2lyY2xla29yZWFuPTEyOTAwO2UubWlldW1rb3JlYW49MTI2MDk7ZS5taWV1bXBhbnNpb3Nrb3JlYW49MTI2NTY7ZS5taWV1bXBhcmVua29yZWFuPTEyODA0O2UubWlldW1waWV1cGtvcmVhbj0xMjY1NDtlLm1pZXVtc2lvc2tvcmVhbj0xMjY1NTtlLm1paGlyYWdhbmE9MTI0MTU7ZS5taWthdGFrYW5hPTEyNTExO2UubWlrYXRha2FuYWhhbGZ3aWR0aD02NTQyNDtlLm1pbnVzPTg3MjI7ZS5taW51c2JlbG93Y21iPTgwMDtlLm1pbnVzY2lyY2xlPTg4NTQ7ZS5taW51c21vZD03Mjc7ZS5taW51c3BsdXM9ODcyMztlLm1pbnV0ZT04MjQyO2UubWlyaWJhYXJ1c3F1YXJlPTEzMTMwO2UubWlyaXNxdWFyZT0xMzEyOTtlLm1sb25nbGVndHVybmVkPTYyNDtlLm1sc3F1YXJlPTEzMjA2O2UubW1jdWJlZHNxdWFyZT0xMzIxOTtlLm1tb25vc3BhY2U9NjUzNTc7ZS5tbXNxdWFyZWRzcXVhcmU9MTMyMTU7ZS5tb2hpcmFnYW5hPTEyNDE4O2UubW9obXNxdWFyZT0xMzI0OTtlLm1va2F0YWthbmE9MTI1MTQ7ZS5tb2thdGFrYW5haGFsZndpZHRoPTY1NDI3O2UubW9sc3F1YXJlPTEzMjcwO2UubW9tYXRoYWk9MzYxNztlLm1vdmVyc3NxdWFyZT0xMzIyMztlLm1vdmVyc3NxdWFyZWRzcXVhcmU9MTMyMjQ7ZS5tcGFyZW49OTM4NDtlLm1wYXNxdWFyZT0xMzIyNztlLm1zc3F1YXJlPTEzMjM1O2UubXN1cGVyaW9yPTYzMjE1O2UubXR1cm5lZD02MjM7ZS5tdT0xODE7ZS5tdTE9MTgxO2UubXVhc3F1YXJlPTEzMTg2O2UubXVjaGdyZWF0ZXI9ODgxMTtlLm11Y2hsZXNzPTg4MTA7ZS5tdWZzcXVhcmU9MTMxOTY7ZS5tdWdyZWVrPTk1NjtlLm11Z3NxdWFyZT0xMzE5NztlLm11aGlyYWdhbmE9MTI0MTY7ZS5tdWthdGFrYW5hPTEyNTEyO2UubXVrYXRha2FuYWhhbGZ3aWR0aD02NTQyNTtlLm11bHNxdWFyZT0xMzIwNTtlLm11bHRpcGx5PTIxNTtlLm11bXNxdWFyZT0xMzIxMTtlLm11bmFoaGVicmV3PTE0NDM7ZS5tdW5haGxlZnRoZWJyZXc9MTQ0MztlLm11c2ljYWxub3RlPTk4MzQ7ZS5tdXNpY2Fsbm90ZWRibD05ODM1O2UubXVzaWNmbGF0c2lnbj05ODM3O2UubXVzaWNzaGFycHNpZ249OTgzOTtlLm11c3NxdWFyZT0xMzIzNDtlLm11dnNxdWFyZT0xMzIzODtlLm11d3NxdWFyZT0xMzI0NDtlLm12bWVnYXNxdWFyZT0xMzI0MTtlLm12c3F1YXJlPTEzMjM5O2UubXdtZWdhc3F1YXJlPTEzMjQ3O2UubXdzcXVhcmU9MTMyNDU7ZS5uPTExMDtlLm5hYmVuZ2FsaT0yNDcyO2UubmFibGE9ODcxMTtlLm5hY3V0ZT0zMjQ7ZS5uYWRldmE9MjM0NDtlLm5hZ3VqYXJhdGk9MjcyODtlLm5hZ3VybXVraGk9MjYwMDtlLm5haGlyYWdhbmE9MTIzOTQ7ZS5uYWthdGFrYW5hPTEyNDkwO2UubmFrYXRha2FuYWhhbGZ3aWR0aD02NTQxMztlLm5hcG9zdHJvcGhlPTMyOTtlLm5hc3F1YXJlPTEzMTg1O2UubmJvcG9tb2ZvPTEyNTU1O2UubmJzcGFjZT0xNjA7ZS5uY2Fyb249MzI4O2UubmNlZGlsbGE9MzI2O2UubmNpcmNsZT05NDM3O2UubmNpcmN1bWZsZXhiZWxvdz03NzU1O2UubmNvbW1hYWNjZW50PTMyNjtlLm5kb3RhY2NlbnQ9Nzc0OTtlLm5kb3RiZWxvdz03NzUxO2UubmVoaXJhZ2FuYT0xMjM5NztlLm5la2F0YWthbmE9MTI0OTM7ZS5uZWthdGFrYW5haGFsZndpZHRoPTY1NDE2O2UubmV3c2hlcWVsc2lnbj04MzYyO2UubmZzcXVhcmU9MTMxOTU7ZS5uZ2FiZW5nYWxpPTI0NTc7ZS5uZ2FkZXZhPTIzMjk7ZS5uZ2FndWphcmF0aT0yNzEzO2UubmdhZ3VybXVraGk9MjU4NTtlLm5nb25ndXRoYWk9MzU5MTtlLm5oaXJhZ2FuYT0xMjQzNTtlLm5ob29rbGVmdD02MjY7ZS5uaG9va3JldHJvZmxleD02Mjc7ZS5uaWV1bmFjaXJjbGVrb3JlYW49MTI5MTE7ZS5uaWV1bmFwYXJlbmtvcmVhbj0xMjgxNTtlLm5pZXVuY2lldWNrb3JlYW49MTI1OTc7ZS5uaWV1bmNpcmNsZWtvcmVhbj0xMjg5NztlLm5pZXVuaGlldWhrb3JlYW49MTI1OTg7ZS5uaWV1bmtvcmVhbj0xMjU5NjtlLm5pZXVucGFuc2lvc2tvcmVhbj0xMjY0ODtlLm5pZXVucGFyZW5rb3JlYW49MTI4MDE7ZS5uaWV1bnNpb3Nrb3JlYW49MTI2NDc7ZS5uaWV1bnRpa2V1dGtvcmVhbj0xMjY0NjtlLm5paGlyYWdhbmE9MTIzOTU7ZS5uaWthdGFrYW5hPTEyNDkxO2UubmlrYXRha2FuYWhhbGZ3aWR0aD02NTQxNDtlLm5pa2hhaGl0bGVmdHRoYWk9NjM2NDE7ZS5uaWtoYWhpdHRoYWk9MzY2MTtlLm5pbmU9NTc7ZS5uaW5lYXJhYmljPTE2NDE7ZS5uaW5lYmVuZ2FsaT0yNTQzO2UubmluZWNpcmNsZT05MzIwO2UubmluZWNpcmNsZWludmVyc2VzYW5zc2VyaWY9MTAxMzA7ZS5uaW5lZGV2YT0yNDE1O2UubmluZWd1amFyYXRpPTI3OTk7ZS5uaW5lZ3VybXVraGk9MjY3MTtlLm5pbmVoYWNrYXJhYmljPTE2NDE7ZS5uaW5laGFuZ3pob3U9MTIzMjk7ZS5uaW5laWRlb2dyYXBoaWNwYXJlbj0xMjg0MDtlLm5pbmVpbmZlcmlvcj04MzI5O2UubmluZW1vbm9zcGFjZT02NTMwNTtlLm5pbmVvbGRzdHlsZT02MzI4OTtlLm5pbmVwYXJlbj05MzQwO2UubmluZXBlcmlvZD05MzYwO2UubmluZXBlcnNpYW49MTc4NTtlLm5pbmVyb21hbj04NTY4O2UubmluZXN1cGVyaW9yPTgzMTM7ZS5uaW5ldGVlbmNpcmNsZT05MzMwO2UubmluZXRlZW5wYXJlbj05MzUwO2UubmluZXRlZW5wZXJpb2Q9OTM3MDtlLm5pbmV0aGFpPTM2NzM7ZS5uaj00NjA7ZS5uamVjeXJpbGxpYz0xMTE0O2UubmthdGFrYW5hPTEyNTMxO2UubmthdGFrYW5haGFsZndpZHRoPTY1NDM3O2UubmxlZ3JpZ2h0bG9uZz00MTQ7ZS5ubGluZWJlbG93PTc3NTM7ZS5ubW9ub3NwYWNlPTY1MzU4O2Uubm1zcXVhcmU9MTMyMTA7ZS5ubmFiZW5nYWxpPTI0Njc7ZS5ubmFkZXZhPTIzMzk7ZS5ubmFndWphcmF0aT0yNzIzO2Uubm5hZ3VybXVraGk9MjU5NTtlLm5ubmFkZXZhPTIzNDU7ZS5ub2hpcmFnYW5hPTEyMzk4O2Uubm9rYXRha2FuYT0xMjQ5NDtlLm5va2F0YWthbmFoYWxmd2lkdGg9NjU0MTc7ZS5ub25icmVha2luZ3NwYWNlPTE2MDtlLm5vbmVudGhhaT0zNjAzO2Uubm9udXRoYWk9MzYwOTtlLm5vb25hcmFiaWM9MTYwNjtlLm5vb25maW5hbGFyYWJpYz02NTI1NDtlLm5vb25naHVubmFhcmFiaWM9MTcyMjtlLm5vb25naHVubmFmaW5hbGFyYWJpYz02NDQxNTtlLm5vb25pbml0aWFsYXJhYmljPTY1MjU1O2Uubm9vbmplZW1pbml0aWFsYXJhYmljPTY0NzIyO2Uubm9vbmplZW1pc29sYXRlZGFyYWJpYz02NDU4NztlLm5vb25tZWRpYWxhcmFiaWM9NjUyNTY7ZS5ub29ubWVlbWluaXRpYWxhcmFiaWM9NjQ3MjU7ZS5ub29ubWVlbWlzb2xhdGVkYXJhYmljPTY0NTkwO2Uubm9vbm5vb25maW5hbGFyYWJpYz02NDY1MztlLm5vdGNvbnRhaW5zPTg3MTY7ZS5ub3RlbGVtZW50PTg3MTM7ZS5ub3RlbGVtZW50b2Y9ODcxMztlLm5vdGVxdWFsPTg4MDA7ZS5ub3RncmVhdGVyPTg4MTU7ZS5ub3RncmVhdGVybm9yZXF1YWw9ODgxNztlLm5vdGdyZWF0ZXJub3JsZXNzPTg4MjU7ZS5ub3RpZGVudGljYWw9ODgwMjtlLm5vdGxlc3M9ODgxNDtlLm5vdGxlc3Nub3JlcXVhbD04ODE2O2Uubm90cGFyYWxsZWw9ODc0MjtlLm5vdHByZWNlZGVzPTg4MzI7ZS5ub3RzdWJzZXQ9ODgzNjtlLm5vdHN1Y2NlZWRzPTg4MzM7ZS5ub3RzdXBlcnNldD04ODM3O2Uubm93YXJtZW5pYW49MTM5ODtlLm5wYXJlbj05Mzg1O2UubnNzcXVhcmU9MTMyMzM7ZS5uc3VwZXJpb3I9ODMxOTtlLm50aWxkZT0yNDE7ZS5udT05NTc7ZS5udWhpcmFnYW5hPTEyMzk2O2UubnVrYXRha2FuYT0xMjQ5MjtlLm51a2F0YWthbmFoYWxmd2lkdGg9NjU0MTU7ZS5udWt0YWJlbmdhbGk9MjQ5MjtlLm51a3RhZGV2YT0yMzY0O2UubnVrdGFndWphcmF0aT0yNzQ4O2UubnVrdGFndXJtdWtoaT0yNjIwO2UubnVtYmVyc2lnbj0zNTtlLm51bWJlcnNpZ25tb25vc3BhY2U9NjUyODM7ZS5udW1iZXJzaWduc21hbGw9NjUxMTk7ZS5udW1lcmFsc2lnbmdyZWVrPTg4NDtlLm51bWVyYWxzaWdubG93ZXJncmVlaz04ODU7ZS5udW1lcm89ODQ3MDtlLm51bj0xNTA0O2UubnVuZGFnZXNoPTY0MzIwO2UubnVuZGFnZXNoaGVicmV3PTY0MzIwO2UubnVuaGVicmV3PTE1MDQ7ZS5udnNxdWFyZT0xMzIzNztlLm53c3F1YXJlPTEzMjQzO2UubnlhYmVuZ2FsaT0yNDYyO2UubnlhZGV2YT0yMzM0O2UubnlhZ3VqYXJhdGk9MjcxODtlLm55YWd1cm11a2hpPTI1OTA7ZS5vPTExMTtlLm9hY3V0ZT0yNDM7ZS5vYW5ndGhhaT0zNjI5O2Uub2JhcnJlZD02Mjk7ZS5vYmFycmVkY3lyaWxsaWM9MTI1NztlLm9iYXJyZWRkaWVyZXNpc2N5cmlsbGljPTEyNTk7ZS5vYmVuZ2FsaT0yNDUxO2Uub2JvcG9tb2ZvPTEyNTcxO2Uub2JyZXZlPTMzNTtlLm9jYW5kcmFkZXZhPTIzMjE7ZS5vY2FuZHJhZ3VqYXJhdGk9MjcwNTtlLm9jYW5kcmF2b3dlbHNpZ25kZXZhPTIzNzc7ZS5vY2FuZHJhdm93ZWxzaWduZ3VqYXJhdGk9Mjc2MTtlLm9jYXJvbj00NjY7ZS5vY2lyY2xlPTk0Mzg7ZS5vY2lyY3VtZmxleD0yNDQ7ZS5vY2lyY3VtZmxleGFjdXRlPTc4ODk7ZS5vY2lyY3VtZmxleGRvdGJlbG93PTc4OTc7ZS5vY2lyY3VtZmxleGdyYXZlPTc4OTE7ZS5vY2lyY3VtZmxleGhvb2thYm92ZT03ODkzO2Uub2NpcmN1bWZsZXh0aWxkZT03ODk1O2Uub2N5cmlsbGljPTEwODY7ZS5vZGJsYWN1dGU9MzM3O2Uub2RibGdyYXZlPTUyNTtlLm9kZXZhPTIzMjM7ZS5vZGllcmVzaXM9MjQ2O2Uub2RpZXJlc2lzY3lyaWxsaWM9MTI1NTtlLm9kb3RiZWxvdz03ODg1O2Uub2U9MzM5O2Uub2Vrb3JlYW49MTI2MzQ7ZS5vZ29uZWs9NzMxO2Uub2dvbmVrY21iPTgwODtlLm9ncmF2ZT0yNDI7ZS5vZ3VqYXJhdGk9MjcwNztlLm9oYXJtZW5pYW49MTQxMztlLm9oaXJhZ2FuYT0xMjM2MjtlLm9ob29rYWJvdmU9Nzg4NztlLm9ob3JuPTQxNztlLm9ob3JuYWN1dGU9Nzg5OTtlLm9ob3JuZG90YmVsb3c9NzkwNztlLm9ob3JuZ3JhdmU9NzkwMTtlLm9ob3JuaG9va2Fib3ZlPTc5MDM7ZS5vaG9ybnRpbGRlPTc5MDU7ZS5vaHVuZ2FydW1sYXV0PTMzNztlLm9pPTQxOTtlLm9pbnZlcnRlZGJyZXZlPTUyNztlLm9rYXRha2FuYT0xMjQ1ODtlLm9rYXRha2FuYWhhbGZ3aWR0aD02NTM5NztlLm9rb3JlYW49MTI2MzE7ZS5vbGVoZWJyZXc9MTQ1MTtlLm9tYWNyb249MzMzO2Uub21hY3JvbmFjdXRlPTc3NjM7ZS5vbWFjcm9uZ3JhdmU9Nzc2MTtlLm9tZGV2YT0yMzg0O2Uub21lZ2E9OTY5O2Uub21lZ2ExPTk4MjtlLm9tZWdhY3lyaWxsaWM9MTEyMTtlLm9tZWdhbGF0aW5jbG9zZWQ9NjMxO2Uub21lZ2Fyb3VuZGN5cmlsbGljPTExNDc7ZS5vbWVnYXRpdGxvY3lyaWxsaWM9MTE0OTtlLm9tZWdhdG9ub3M9OTc0O2Uub21ndWphcmF0aT0yNzY4O2Uub21pY3Jvbj05NTk7ZS5vbWljcm9udG9ub3M9OTcyO2Uub21vbm9zcGFjZT02NTM1OTtlLm9uZT00OTtlLm9uZWFyYWJpYz0xNjMzO2Uub25lYmVuZ2FsaT0yNTM1O2Uub25lY2lyY2xlPTkzMTI7ZS5vbmVjaXJjbGVpbnZlcnNlc2Fuc3NlcmlmPTEwMTIyO2Uub25lZGV2YT0yNDA3O2Uub25lZG90ZW5sZWFkZXI9ODIyODtlLm9uZWVpZ2h0aD04NTM5O2Uub25lZml0dGVkPTYzMTk2O2Uub25lZ3VqYXJhdGk9Mjc5MTtlLm9uZWd1cm11a2hpPTI2NjM7ZS5vbmVoYWNrYXJhYmljPTE2MzM7ZS5vbmVoYWxmPTE4OTtlLm9uZWhhbmd6aG91PTEyMzIxO2Uub25laWRlb2dyYXBoaWNwYXJlbj0xMjgzMjtlLm9uZWluZmVyaW9yPTgzMjE7ZS5vbmVtb25vc3BhY2U9NjUyOTc7ZS5vbmVudW1lcmF0b3JiZW5nYWxpPTI1NDg7ZS5vbmVvbGRzdHlsZT02MzI4MTtlLm9uZXBhcmVuPTkzMzI7ZS5vbmVwZXJpb2Q9OTM1MjtlLm9uZXBlcnNpYW49MTc3NztlLm9uZXF1YXJ0ZXI9MTg4O2Uub25lcm9tYW49ODU2MDtlLm9uZXN1cGVyaW9yPTE4NTtlLm9uZXRoYWk9MzY2NTtlLm9uZXRoaXJkPTg1MzE7ZS5vb2dvbmVrPTQ5MTtlLm9vZ29uZWttYWNyb249NDkzO2Uub29ndXJtdWtoaT0yNTc5O2Uub29tYXRyYWd1cm11a2hpPTI2MzU7ZS5vb3Blbj01OTY7ZS5vcGFyZW49OTM4NjtlLm9wZW5idWxsZXQ9OTcwMjtlLm9wdGlvbj04OTk3O2Uub3JkZmVtaW5pbmU9MTcwO2Uub3JkbWFzY3VsaW5lPTE4NjtlLm9ydGhvZ29uYWw9ODczNTtlLm9zaG9ydGRldmE9MjMyMjtlLm9zaG9ydHZvd2Vsc2lnbmRldmE9MjM3ODtlLm9zbGFzaD0yNDg7ZS5vc2xhc2hhY3V0ZT01MTE7ZS5vc21hbGxoaXJhZ2FuYT0xMjM2MTtlLm9zbWFsbGthdGFrYW5hPTEyNDU3O2Uub3NtYWxsa2F0YWthbmFoYWxmd2lkdGg9NjUzODc7ZS5vc3Ryb2tlYWN1dGU9NTExO2Uub3N1cGVyaW9yPTYzMjE2O2Uub3RjeXJpbGxpYz0xMTUxO2Uub3RpbGRlPTI0NTtlLm90aWxkZWFjdXRlPTc3NTc7ZS5vdGlsZGVkaWVyZXNpcz03NzU5O2Uub3Vib3BvbW9mbz0xMjU3NztlLm92ZXJsaW5lPTgyNTQ7ZS5vdmVybGluZWNlbnRlcmxpbmU9NjUwOTg7ZS5vdmVybGluZWNtYj03NzM7ZS5vdmVybGluZWRhc2hlZD02NTA5NztlLm92ZXJsaW5lZGJsd2F2eT02NTEwMDtlLm92ZXJsaW5ld2F2eT02NTA5OTtlLm92ZXJzY29yZT0xNzU7ZS5vdm93ZWxzaWduYmVuZ2FsaT0yNTA3O2Uub3Zvd2Vsc2lnbmRldmE9MjM3OTtlLm92b3dlbHNpZ25ndWphcmF0aT0yNzYzO2UucD0xMTI7ZS5wYWFtcHNzcXVhcmU9MTMxODQ7ZS5wYWFzZW50b3NxdWFyZT0xMzA5OTtlLnBhYmVuZ2FsaT0yNDc0O2UucGFjdXRlPTc3NjU7ZS5wYWRldmE9MjM0NjtlLnBhZ2Vkb3duPTg2NzE7ZS5wYWdldXA9ODY3MDtlLnBhZ3VqYXJhdGk9MjczMDtlLnBhZ3VybXVraGk9MjYwMjtlLnBhaGlyYWdhbmE9MTI0MDE7ZS5wYWl5YW5ub2l0aGFpPTM2MzE7ZS5wYWthdGFrYW5hPTEyNDk3O2UucGFsYXRhbGl6YXRpb25jeXJpbGxpY2NtYj0xMTU2O2UucGFsb2Noa2FjeXJpbGxpYz0xMjE2O2UucGFuc2lvc2tvcmVhbj0xMjY3MTtlLnBhcmFncmFwaD0xODI7ZS5wYXJhbGxlbD04NzQxO2UucGFyZW5sZWZ0PTQwO2UucGFyZW5sZWZ0YWx0b25lYXJhYmljPTY0ODMwO2UucGFyZW5sZWZ0YnQ9NjM3MjU7ZS5wYXJlbmxlZnRleD02MzcyNDtlLnBhcmVubGVmdGluZmVyaW9yPTgzMzM7ZS5wYXJlbmxlZnRtb25vc3BhY2U9NjUyODg7ZS5wYXJlbmxlZnRzbWFsbD02NTExMztlLnBhcmVubGVmdHN1cGVyaW9yPTgzMTc7ZS5wYXJlbmxlZnR0cD02MzcyMztlLnBhcmVubGVmdHZlcnRpY2FsPTY1MDc3O2UucGFyZW5yaWdodD00MTtlLnBhcmVucmlnaHRhbHRvbmVhcmFiaWM9NjQ4MzE7ZS5wYXJlbnJpZ2h0YnQ9NjM3MzY7ZS5wYXJlbnJpZ2h0ZXg9NjM3MzU7ZS5wYXJlbnJpZ2h0aW5mZXJpb3I9ODMzNDtlLnBhcmVucmlnaHRtb25vc3BhY2U9NjUyODk7ZS5wYXJlbnJpZ2h0c21hbGw9NjUxMTQ7ZS5wYXJlbnJpZ2h0c3VwZXJpb3I9ODMxODtlLnBhcmVucmlnaHR0cD02MzczNDtlLnBhcmVucmlnaHR2ZXJ0aWNhbD02NTA3ODtlLnBhcnRpYWxkaWZmPTg3MDY7ZS5wYXNlcWhlYnJldz0xNDcyO2UucGFzaHRhaGVicmV3PTE0MzM7ZS5wYXNxdWFyZT0xMzIyNTtlLnBhdGFoPTE0NjM7ZS5wYXRhaDExPTE0NjM7ZS5wYXRhaDFkPTE0NjM7ZS5wYXRhaDJhPTE0NjM7ZS5wYXRhaGhlYnJldz0xNDYzO2UucGF0YWhuYXJyb3doZWJyZXc9MTQ2MztlLnBhdGFocXVhcnRlcmhlYnJldz0xNDYzO2UucGF0YWh3aWRlaGVicmV3PTE0NjM7ZS5wYXplcmhlYnJldz0xNDQxO2UucGJvcG9tb2ZvPTEyNTUwO2UucGNpcmNsZT05NDM5O2UucGRvdGFjY2VudD03NzY3O2UucGU9MTUwODtlLnBlY3lyaWxsaWM9MTA4NztlLnBlZGFnZXNoPTY0MzI0O2UucGVkYWdlc2hoZWJyZXc9NjQzMjQ7ZS5wZWV6aXNxdWFyZT0xMzExNTtlLnBlZmluYWxkYWdlc2hoZWJyZXc9NjQzMjM7ZS5wZWhhcmFiaWM9MTY2MjtlLnBlaGFybWVuaWFuPTE0MDI7ZS5wZWhlYnJldz0xNTA4O2UucGVoZmluYWxhcmFiaWM9NjQzNDM7ZS5wZWhpbml0aWFsYXJhYmljPTY0MzQ0O2UucGVoaXJhZ2FuYT0xMjQxMDtlLnBlaG1lZGlhbGFyYWJpYz02NDM0NTtlLnBla2F0YWthbmE9MTI1MDY7ZS5wZW1pZGRsZWhvb2tjeXJpbGxpYz0xMTkxO2UucGVyYWZlaGVicmV3PTY0MzM0O2UucGVyY2VudD0zNztlLnBlcmNlbnRhcmFiaWM9MTY0MjtlLnBlcmNlbnRtb25vc3BhY2U9NjUyODU7ZS5wZXJjZW50c21hbGw9NjUxMzA7ZS5wZXJpb2Q9NDY7ZS5wZXJpb2Rhcm1lbmlhbj0xNDE3O2UucGVyaW9kY2VudGVyZWQ9MTgzO2UucGVyaW9kaGFsZndpZHRoPTY1Mzc3O2UucGVyaW9kaW5mZXJpb3I9NjMyMDc7ZS5wZXJpb2Rtb25vc3BhY2U9NjUyOTQ7ZS5wZXJpb2RzbWFsbD02NTEwNjtlLnBlcmlvZHN1cGVyaW9yPTYzMjA4O2UucGVyaXNwb21lbmlncmVla2NtYj04MzQ7ZS5wZXJwZW5kaWN1bGFyPTg4Njk7ZS5wZXJ0aG91c2FuZD04MjQwO2UucGVzZXRhPTgzNTk7ZS5wZnNxdWFyZT0xMzE5NDtlLnBoYWJlbmdhbGk9MjQ3NTtlLnBoYWRldmE9MjM0NztlLnBoYWd1amFyYXRpPTI3MzE7ZS5waGFndXJtdWtoaT0yNjAzO2UucGhpPTk2NjtlLnBoaTE9OTgxO2UucGhpZXVwaGFjaXJjbGVrb3JlYW49MTI5MjI7ZS5waGlldXBoYXBhcmVua29yZWFuPTEyODI2O2UucGhpZXVwaGNpcmNsZWtvcmVhbj0xMjkwODtlLnBoaWV1cGhrb3JlYW49MTI2MjE7ZS5waGlldXBocGFyZW5rb3JlYW49MTI4MTI7ZS5waGlsYXRpbj02MzI7ZS5waGludGh1dGhhaT0zNjQyO2UucGhpc3ltYm9sZ3JlZWs9OTgxO2UucGhvb2s9NDIxO2UucGhvcGhhbnRoYWk9MzYxNDtlLnBob3BodW5ndGhhaT0zNjEyO2UucGhvc2FtcGhhb3RoYWk9MzYxNjtlLnBpPTk2MDtlLnBpZXVwYWNpcmNsZWtvcmVhbj0xMjkxNTtlLnBpZXVwYXBhcmVua29yZWFuPTEyODE5O2UucGlldXBjaWV1Y2tvcmVhbj0xMjY2MjtlLnBpZXVwY2lyY2xla29yZWFuPTEyOTAxO2UucGlldXBraXllb2trb3JlYW49MTI2NTg7ZS5waWV1cGtvcmVhbj0xMjYxMDtlLnBpZXVwcGFyZW5rb3JlYW49MTI4MDU7ZS5waWV1cHNpb3NraXllb2trb3JlYW49MTI2NjA7ZS5waWV1cHNpb3Nrb3JlYW49MTI2MTI7ZS5waWV1cHNpb3N0aWtldXRrb3JlYW49MTI2NjE7ZS5waWV1cHRoaWV1dGhrb3JlYW49MTI2NjM7ZS5waWV1cHRpa2V1dGtvcmVhbj0xMjY1OTtlLnBpaGlyYWdhbmE9MTI0MDQ7ZS5waWthdGFrYW5hPTEyNTAwO2UucGlzeW1ib2xncmVlaz05ODI7ZS5waXdyYXJtZW5pYW49MTQxMTtlLnBsYW5ja292ZXIycGk9ODQ2MztlLnBsYW5ja292ZXIycGkxPTg0NjM7ZS5wbHVzPTQzO2UucGx1c2JlbG93Y21iPTc5OTtlLnBsdXNjaXJjbGU9ODg1MztlLnBsdXNtaW51cz0xNzc7ZS5wbHVzbW9kPTcyNjtlLnBsdXNtb25vc3BhY2U9NjUyOTE7ZS5wbHVzc21hbGw9NjUxMjI7ZS5wbHVzc3VwZXJpb3I9ODMxNDtlLnBtb25vc3BhY2U9NjUzNjA7ZS5wbXNxdWFyZT0xMzI3MjtlLnBvaGlyYWdhbmE9MTI0MTM7ZS5wb2ludGluZ2luZGV4ZG93bndoaXRlPTk3NTk7ZS5wb2ludGluZ2luZGV4bGVmdHdoaXRlPTk3NTY7ZS5wb2ludGluZ2luZGV4cmlnaHR3aGl0ZT05NzU4O2UucG9pbnRpbmdpbmRleHVwd2hpdGU9OTc1NztlLnBva2F0YWthbmE9MTI1MDk7ZS5wb3BsYXRoYWk9MzYxMTtlLnBvc3RhbG1hcms9MTIzMDY7ZS5wb3N0YWxtYXJrZmFjZT0xMjMyMDtlLnBwYXJlbj05Mzg3O2UucHJlY2VkZXM9ODgyNjtlLnByZXNjcmlwdGlvbj04NDc4O2UucHJpbWVtb2Q9Njk3O2UucHJpbWVyZXZlcnNlZD04MjQ1O2UucHJvZHVjdD04NzE5O2UucHJvamVjdGl2ZT04OTY1O2UucHJvbG9uZ2Vka2FuYT0xMjU0MDtlLnByb3BlbGxvcj04OTg0O2UucHJvcGVyc3Vic2V0PTg4MzQ7ZS5wcm9wZXJzdXBlcnNldD04ODM1O2UucHJvcG9ydGlvbj04NzU5O2UucHJvcG9ydGlvbmFsPTg3MzM7ZS5wc2k9OTY4O2UucHNpY3lyaWxsaWM9MTEzNztlLnBzaWxpcG5ldW1hdGFjeXJpbGxpY2NtYj0xMTU4O2UucHNzcXVhcmU9MTMyMzI7ZS5wdWhpcmFnYW5hPTEyNDA3O2UucHVrYXRha2FuYT0xMjUwMztlLnB2c3F1YXJlPTEzMjM2O2UucHdzcXVhcmU9MTMyNDI7ZS5xPTExMztlLnFhZGV2YT0yMzkyO2UucWFkbWFoZWJyZXc9MTQ0ODtlLnFhZmFyYWJpYz0xNjAyO2UucWFmZmluYWxhcmFiaWM9NjUyMzg7ZS5xYWZpbml0aWFsYXJhYmljPTY1MjM5O2UucWFmbWVkaWFsYXJhYmljPTY1MjQwO2UucWFtYXRzPTE0NjQ7ZS5xYW1hdHMxMD0xNDY0O2UucWFtYXRzMWE9MTQ2NDtlLnFhbWF0czFjPTE0NjQ7ZS5xYW1hdHMyNz0xNDY0O2UucWFtYXRzMjk9MTQ2NDtlLnFhbWF0czMzPTE0NjQ7ZS5xYW1hdHNkZT0xNDY0O2UucWFtYXRzaGVicmV3PTE0NjQ7ZS5xYW1hdHNuYXJyb3doZWJyZXc9MTQ2NDtlLnFhbWF0c3FhdGFuaGVicmV3PTE0NjQ7ZS5xYW1hdHNxYXRhbm5hcnJvd2hlYnJldz0xNDY0O2UucWFtYXRzcWF0YW5xdWFydGVyaGVicmV3PTE0NjQ7ZS5xYW1hdHNxYXRhbndpZGVoZWJyZXc9MTQ2NDtlLnFhbWF0c3F1YXJ0ZXJoZWJyZXc9MTQ2NDtlLnFhbWF0c3dpZGVoZWJyZXc9MTQ2NDtlLnFhcm5leXBhcmFoZWJyZXc9MTQzOTtlLnFib3BvbW9mbz0xMjU2MTtlLnFjaXJjbGU9OTQ0MDtlLnFob29rPTY3MjtlLnFtb25vc3BhY2U9NjUzNjE7ZS5xb2Y9MTUxMTtlLnFvZmRhZ2VzaD02NDMyNztlLnFvZmRhZ2VzaGhlYnJldz02NDMyNztlLnFvZmhlYnJldz0xNTExO2UucXBhcmVuPTkzODg7ZS5xdWFydGVybm90ZT05ODMzO2UucXVidXRzPTE0Njc7ZS5xdWJ1dHMxOD0xNDY3O2UucXVidXRzMjU9MTQ2NztlLnF1YnV0czMxPTE0Njc7ZS5xdWJ1dHNoZWJyZXc9MTQ2NztlLnF1YnV0c25hcnJvd2hlYnJldz0xNDY3O2UucXVidXRzcXVhcnRlcmhlYnJldz0xNDY3O2UucXVidXRzd2lkZWhlYnJldz0xNDY3O2UucXVlc3Rpb249NjM7ZS5xdWVzdGlvbmFyYWJpYz0xNTY3O2UucXVlc3Rpb25hcm1lbmlhbj0xMzc0O2UucXVlc3Rpb25kb3duPTE5MTtlLnF1ZXN0aW9uZG93bnNtYWxsPTYzNDIzO2UucXVlc3Rpb25ncmVlaz04OTQ7ZS5xdWVzdGlvbm1vbm9zcGFjZT02NTMxMTtlLnF1ZXN0aW9uc21hbGw9NjMyOTU7ZS5xdW90ZWRibD0zNDtlLnF1b3RlZGJsYmFzZT04MjIyO2UucXVvdGVkYmxsZWZ0PTgyMjA7ZS5xdW90ZWRibG1vbm9zcGFjZT02NTI4MjtlLnF1b3RlZGJscHJpbWU9MTIzMTg7ZS5xdW90ZWRibHByaW1lcmV2ZXJzZWQ9MTIzMTc7ZS5xdW90ZWRibHJpZ2h0PTgyMjE7ZS5xdW90ZWxlZnQ9ODIxNjtlLnF1b3RlbGVmdHJldmVyc2VkPTgyMTk7ZS5xdW90ZXJldmVyc2VkPTgyMTk7ZS5xdW90ZXJpZ2h0PTgyMTc7ZS5xdW90ZXJpZ2h0bj0zMjk7ZS5xdW90ZXNpbmdsYmFzZT04MjE4O2UucXVvdGVzaW5nbGU9Mzk7ZS5xdW90ZXNpbmdsZW1vbm9zcGFjZT02NTI4NztlLnI9MTE0O2UucmFhcm1lbmlhbj0xNDA0O2UucmFiZW5nYWxpPTI0ODA7ZS5yYWN1dGU9MzQxO2UucmFkZXZhPTIzNTI7ZS5yYWRpY2FsPTg3MzA7ZS5yYWRpY2FsZXg9NjM3MTc7ZS5yYWRvdmVyc3NxdWFyZT0xMzIzMDtlLnJhZG92ZXJzc3F1YXJlZHNxdWFyZT0xMzIzMTtlLnJhZHNxdWFyZT0xMzIyOTtlLnJhZmU9MTQ3MTtlLnJhZmVoZWJyZXc9MTQ3MTtlLnJhZ3VqYXJhdGk9MjczNjtlLnJhZ3VybXVraGk9MjYwODtlLnJhaGlyYWdhbmE9MTI0MjU7ZS5yYWthdGFrYW5hPTEyNTIxO2UucmFrYXRha2FuYWhhbGZ3aWR0aD02NTQzMTtlLnJhbG93ZXJkaWFnb25hbGJlbmdhbGk9MjU0NTtlLnJhbWlkZGxlZGlhZ29uYWxiZW5nYWxpPTI1NDQ7ZS5yYW1zaG9ybj02MTI7ZS5yYXRpbz04NzU4O2UucmJvcG9tb2ZvPTEyNTY2O2UucmNhcm9uPTM0NTtlLnJjZWRpbGxhPTM0MztlLnJjaXJjbGU9OTQ0MTtlLnJjb21tYWFjY2VudD0zNDM7ZS5yZGJsZ3JhdmU9NTI5O2UucmRvdGFjY2VudD03NzY5O2UucmRvdGJlbG93PTc3NzE7ZS5yZG90YmVsb3dtYWNyb249Nzc3MztlLnJlZmVyZW5jZW1hcms9ODI1MTtlLnJlZmxleHN1YnNldD04ODM4O2UucmVmbGV4c3VwZXJzZXQ9ODgzOTtlLnJlZ2lzdGVyZWQ9MTc0O2UucmVnaXN0ZXJzYW5zPTYzNzIwO2UucmVnaXN0ZXJzZXJpZj02MzE5NDtlLnJlaGFyYWJpYz0xNTg1O2UucmVoYXJtZW5pYW49MTQwODtlLnJlaGZpbmFsYXJhYmljPTY1MTk4O2UucmVoaXJhZ2FuYT0xMjQyODtlLnJla2F0YWthbmE9MTI1MjQ7ZS5yZWthdGFrYW5haGFsZndpZHRoPTY1NDM0O2UucmVzaD0xNTEyO2UucmVzaGRhZ2VzaGhlYnJldz02NDMyODtlLnJlc2hoZWJyZXc9MTUxMjtlLnJldmVyc2VkdGlsZGU9ODc2NTtlLnJldmlhaGVicmV3PTE0MzE7ZS5yZXZpYW11Z3Jhc2hoZWJyZXc9MTQzMTtlLnJldmxvZ2ljYWxub3Q9ODk3NjtlLnJmaXNoaG9vaz02Mzg7ZS5yZmlzaGhvb2tyZXZlcnNlZD02Mzk7ZS5yaGFiZW5nYWxpPTI1MjU7ZS5yaGFkZXZhPTIzOTc7ZS5yaG89OTYxO2Uucmhvb2s9NjM3O2Uucmhvb2t0dXJuZWQ9NjM1O2Uucmhvb2t0dXJuZWRzdXBlcmlvcj02OTM7ZS5yaG9zeW1ib2xncmVlaz0xMDA5O2UucmhvdGljaG9va21vZD03MzQ7ZS5yaWV1bGFjaXJjbGVrb3JlYW49MTI5MTM7ZS5yaWV1bGFwYXJlbmtvcmVhbj0xMjgxNztlLnJpZXVsY2lyY2xla29yZWFuPTEyODk5O2UucmlldWxoaWV1aGtvcmVhbj0xMjYwODtlLnJpZXVsa2l5ZW9ra29yZWFuPTEyNjAyO2UucmlldWxraXllb2tzaW9za29yZWFuPTEyNjQ5O2UucmlldWxrb3JlYW49MTI2MDE7ZS5yaWV1bG1pZXVta29yZWFuPTEyNjAzO2UucmlldWxwYW5zaW9za29yZWFuPTEyNjUyO2UucmlldWxwYXJlbmtvcmVhbj0xMjgwMztlLnJpZXVscGhpZXVwaGtvcmVhbj0xMjYwNztlLnJpZXVscGlldXBrb3JlYW49MTI2MDQ7ZS5yaWV1bHBpZXVwc2lvc2tvcmVhbj0xMjY1MTtlLnJpZXVsc2lvc2tvcmVhbj0xMjYwNTtlLnJpZXVsdGhpZXV0aGtvcmVhbj0xMjYwNjtlLnJpZXVsdGlrZXV0a29yZWFuPTEyNjUwO2UucmlldWx5ZW9yaW5oaWV1aGtvcmVhbj0xMjY1MztlLnJpZ2h0YW5nbGU9ODczNTtlLnJpZ2h0dGFja2JlbG93Y21iPTc5MztlLnJpZ2h0dHJpYW5nbGU9ODg5NTtlLnJpaGlyYWdhbmE9MTI0MjY7ZS5yaWthdGFrYW5hPTEyNTIyO2UucmlrYXRha2FuYWhhbGZ3aWR0aD02NTQzMjtlLnJpbmc9NzMwO2UucmluZ2JlbG93Y21iPTgwNTtlLnJpbmdjbWI9Nzc4O2UucmluZ2hhbGZsZWZ0PTcwMztlLnJpbmdoYWxmbGVmdGFybWVuaWFuPTEzNjk7ZS5yaW5naGFsZmxlZnRiZWxvd2NtYj03OTY7ZS5yaW5naGFsZmxlZnRjZW50ZXJlZD03MjM7ZS5yaW5naGFsZnJpZ2h0PTcwMjtlLnJpbmdoYWxmcmlnaHRiZWxvd2NtYj04MjU7ZS5yaW5naGFsZnJpZ2h0Y2VudGVyZWQ9NzIyO2UucmludmVydGVkYnJldmU9NTMxO2Uucml0dG9ydXNxdWFyZT0xMzEzNztlLnJsaW5lYmVsb3c9Nzc3NTtlLnJsb25nbGVnPTYzNjtlLnJsb25nbGVndHVybmVkPTYzNDtlLnJtb25vc3BhY2U9NjUzNjI7ZS5yb2hpcmFnYW5hPTEyNDI5O2Uucm9rYXRha2FuYT0xMjUyNTtlLnJva2F0YWthbmFoYWxmd2lkdGg9NjU0MzU7ZS5yb3J1YXRoYWk9MzYxOTtlLnJwYXJlbj05Mzg5O2UucnJhYmVuZ2FsaT0yNTI0O2UucnJhZGV2YT0yMzUzO2UucnJhZ3VybXVraGk9MjY1MjtlLnJyZWhhcmFiaWM9MTY4MTtlLnJyZWhmaW5hbGFyYWJpYz02NDM5NztlLnJydm9jYWxpY2JlbmdhbGk9MjUyODtlLnJydm9jYWxpY2RldmE9MjQwMDtlLnJydm9jYWxpY2d1amFyYXRpPTI3ODQ7ZS5ycnZvY2FsaWN2b3dlbHNpZ25iZW5nYWxpPTI1MDA7ZS5ycnZvY2FsaWN2b3dlbHNpZ25kZXZhPTIzNzI7ZS5ycnZvY2FsaWN2b3dlbHNpZ25ndWphcmF0aT0yNzU2O2UucnN1cGVyaW9yPTYzMjE3O2UucnRibG9jaz05NjE2O2UucnR1cm5lZD02MzM7ZS5ydHVybmVkc3VwZXJpb3I9NjkyO2UucnVoaXJhZ2FuYT0xMjQyNztlLnJ1a2F0YWthbmE9MTI1MjM7ZS5ydWthdGFrYW5haGFsZndpZHRoPTY1NDMzO2UucnVwZWVtYXJrYmVuZ2FsaT0yNTQ2O2UucnVwZWVzaWduYmVuZ2FsaT0yNTQ3O2UucnVwaWFoPTYzMTk3O2UucnV0aGFpPTM2MjA7ZS5ydm9jYWxpY2JlbmdhbGk9MjQ0MztlLnJ2b2NhbGljZGV2YT0yMzE1O2UucnZvY2FsaWNndWphcmF0aT0yNjk5O2UucnZvY2FsaWN2b3dlbHNpZ25iZW5nYWxpPTI0OTk7ZS5ydm9jYWxpY3Zvd2Vsc2lnbmRldmE9MjM3MTtlLnJ2b2NhbGljdm93ZWxzaWduZ3VqYXJhdGk9Mjc1NTtlLnM9MTE1O2Uuc2FiZW5nYWxpPTI0ODg7ZS5zYWN1dGU9MzQ3O2Uuc2FjdXRlZG90YWNjZW50PTc3ODE7ZS5zYWRhcmFiaWM9MTU4OTtlLnNhZGV2YT0yMzYwO2Uuc2FkZmluYWxhcmFiaWM9NjUyMTA7ZS5zYWRpbml0aWFsYXJhYmljPTY1MjExO2Uuc2FkbWVkaWFsYXJhYmljPTY1MjEyO2Uuc2FndWphcmF0aT0yNzQ0O2Uuc2FndXJtdWtoaT0yNjE2O2Uuc2FoaXJhZ2FuYT0xMjM3MztlLnNha2F0YWthbmE9MTI0Njk7ZS5zYWthdGFrYW5haGFsZndpZHRoPTY1NDAzO2Uuc2FsbGFsbGFob3VhbGF5aGV3YXNhbGxhbWFyYWJpYz02NTAxODtlLnNhbWVraD0xNTA1O2Uuc2FtZWtoZGFnZXNoPTY0MzIxO2Uuc2FtZWtoZGFnZXNoaGVicmV3PTY0MzIxO2Uuc2FtZWtoaGVicmV3PTE1MDU7ZS5zYXJhYWF0aGFpPTM2MzQ7ZS5zYXJhYWV0aGFpPTM2NDk7ZS5zYXJhYWltYWltYWxhaXRoYWk9MzY1MjtlLnNhcmFhaW1haW11YW50aGFpPTM2NTE7ZS5zYXJhYW10aGFpPTM2MzU7ZS5zYXJhYXRoYWk9MzYzMjtlLnNhcmFldGhhaT0zNjQ4O2Uuc2FyYWlpbGVmdHRoYWk9NjM2MjI7ZS5zYXJhaWl0aGFpPTM2Mzc7ZS5zYXJhaWxlZnR0aGFpPTYzNjIxO2Uuc2FyYWl0aGFpPTM2MzY7ZS5zYXJhb3RoYWk9MzY1MDtlLnNhcmF1ZWVsZWZ0dGhhaT02MzYyNDtlLnNhcmF1ZWV0aGFpPTM2Mzk7ZS5zYXJhdWVsZWZ0dGhhaT02MzYyMztlLnNhcmF1ZXRoYWk9MzYzODtlLnNhcmF1dGhhaT0zNjQwO2Uuc2FyYXV1dGhhaT0zNjQxO2Uuc2JvcG9tb2ZvPTEyNTY5O2Uuc2Nhcm9uPTM1MztlLnNjYXJvbmRvdGFjY2VudD03NzgzO2Uuc2NlZGlsbGE9MzUxO2Uuc2Nod2E9NjAxO2Uuc2Nod2FjeXJpbGxpYz0xMjQxO2Uuc2Nod2FkaWVyZXNpc2N5cmlsbGljPTEyNDM7ZS5zY2h3YWhvb2s9NjAyO2Uuc2NpcmNsZT05NDQyO2Uuc2NpcmN1bWZsZXg9MzQ5O2Uuc2NvbW1hYWNjZW50PTUzNztlLnNkb3RhY2NlbnQ9Nzc3NztlLnNkb3RiZWxvdz03Nzc5O2Uuc2RvdGJlbG93ZG90YWNjZW50PTc3ODU7ZS5zZWFndWxsYmVsb3djbWI9ODI4O2Uuc2Vjb25kPTgyNDM7ZS5zZWNvbmR0b25lY2hpbmVzZT03MTQ7ZS5zZWN0aW9uPTE2NztlLnNlZW5hcmFiaWM9MTU4NztlLnNlZW5maW5hbGFyYWJpYz02NTIwMjtlLnNlZW5pbml0aWFsYXJhYmljPTY1MjAzO2Uuc2Vlbm1lZGlhbGFyYWJpYz02NTIwNDtlLnNlZ29sPTE0NjI7ZS5zZWdvbDEzPTE0NjI7ZS5zZWdvbDFmPTE0NjI7ZS5zZWdvbDJjPTE0NjI7ZS5zZWdvbGhlYnJldz0xNDYyO2Uuc2Vnb2xuYXJyb3doZWJyZXc9MTQ2MjtlLnNlZ29scXVhcnRlcmhlYnJldz0xNDYyO2Uuc2Vnb2x0YWhlYnJldz0xNDI2O2Uuc2Vnb2x3aWRlaGVicmV3PTE0NjI7ZS5zZWhhcm1lbmlhbj0xNDA1O2Uuc2VoaXJhZ2FuYT0xMjM3OTtlLnNla2F0YWthbmE9MTI0NzU7ZS5zZWthdGFrYW5haGFsZndpZHRoPTY1NDA2O2Uuc2VtaWNvbG9uPTU5O2Uuc2VtaWNvbG9uYXJhYmljPTE1NjM7ZS5zZW1pY29sb25tb25vc3BhY2U9NjUzMDc7ZS5zZW1pY29sb25zbWFsbD02NTEwODtlLnNlbWl2b2ljZWRtYXJra2FuYT0xMjQ0NDtlLnNlbWl2b2ljZWRtYXJra2FuYWhhbGZ3aWR0aD02NTQzOTtlLnNlbnRpc3F1YXJlPTEzMDkwO2Uuc2VudG9zcXVhcmU9MTMwOTE7ZS5zZXZlbj01NTtlLnNldmVuYXJhYmljPTE2Mzk7ZS5zZXZlbmJlbmdhbGk9MjU0MTtlLnNldmVuY2lyY2xlPTkzMTg7ZS5zZXZlbmNpcmNsZWludmVyc2VzYW5zc2VyaWY9MTAxMjg7ZS5zZXZlbmRldmE9MjQxMztlLnNldmVuZWlnaHRocz04NTQyO2Uuc2V2ZW5ndWphcmF0aT0yNzk3O2Uuc2V2ZW5ndXJtdWtoaT0yNjY5O2Uuc2V2ZW5oYWNrYXJhYmljPTE2Mzk7ZS5zZXZlbmhhbmd6aG91PTEyMzI3O2Uuc2V2ZW5pZGVvZ3JhcGhpY3BhcmVuPTEyODM4O2Uuc2V2ZW5pbmZlcmlvcj04MzI3O2Uuc2V2ZW5tb25vc3BhY2U9NjUzMDM7ZS5zZXZlbm9sZHN0eWxlPTYzMjg3O2Uuc2V2ZW5wYXJlbj05MzM4O2Uuc2V2ZW5wZXJpb2Q9OTM1ODtlLnNldmVucGVyc2lhbj0xNzgzO2Uuc2V2ZW5yb21hbj04NTY2O2Uuc2V2ZW5zdXBlcmlvcj04MzExO2Uuc2V2ZW50ZWVuY2lyY2xlPTkzMjg7ZS5zZXZlbnRlZW5wYXJlbj05MzQ4O2Uuc2V2ZW50ZWVucGVyaW9kPTkzNjg7ZS5zZXZlbnRoYWk9MzY3MTtlLnNmdGh5cGhlbj0xNzM7ZS5zaGFhcm1lbmlhbj0xMzk5O2Uuc2hhYmVuZ2FsaT0yNDg2O2Uuc2hhY3lyaWxsaWM9MTA5NjtlLnNoYWRkYWFyYWJpYz0xNjE3O2Uuc2hhZGRhZGFtbWFhcmFiaWM9NjQ2MDk7ZS5zaGFkZGFkYW1tYXRhbmFyYWJpYz02NDYwNjtlLnNoYWRkYWZhdGhhYXJhYmljPTY0NjA4O2Uuc2hhZGRha2FzcmFhcmFiaWM9NjQ2MTA7ZS5zaGFkZGFrYXNyYXRhbmFyYWJpYz02NDYwNztlLnNoYWRlPTk2MTg7ZS5zaGFkZWRhcms9OTYxOTtlLnNoYWRlbGlnaHQ9OTYxNztlLnNoYWRlbWVkaXVtPTk2MTg7ZS5zaGFkZXZhPTIzNTg7ZS5zaGFndWphcmF0aT0yNzQyO2Uuc2hhZ3VybXVraGk9MjYxNDtlLnNoYWxzaGVsZXRoZWJyZXc9MTQyNztlLnNoYm9wb21vZm89MTI1NjU7ZS5zaGNoYWN5cmlsbGljPTEwOTc7ZS5zaGVlbmFyYWJpYz0xNTg4O2Uuc2hlZW5maW5hbGFyYWJpYz02NTIwNjtlLnNoZWVuaW5pdGlhbGFyYWJpYz02NTIwNztlLnNoZWVubWVkaWFsYXJhYmljPTY1MjA4O2Uuc2hlaWNvcHRpYz05OTU7ZS5zaGVxZWw9ODM2MjtlLnNoZXFlbGhlYnJldz04MzYyO2Uuc2hldmE9MTQ1NjtlLnNoZXZhMTE1PTE0NTY7ZS5zaGV2YTE1PTE0NTY7ZS5zaGV2YTIyPTE0NTY7ZS5zaGV2YTJlPTE0NTY7ZS5zaGV2YWhlYnJldz0xNDU2O2Uuc2hldmFuYXJyb3doZWJyZXc9MTQ1NjtlLnNoZXZhcXVhcnRlcmhlYnJldz0xNDU2O2Uuc2hldmF3aWRlaGVicmV3PTE0NTY7ZS5zaGhhY3lyaWxsaWM9MTIxMTtlLnNoaW1hY29wdGljPTEwMDU7ZS5zaGluPTE1MTM7ZS5zaGluZGFnZXNoPTY0MzI5O2Uuc2hpbmRhZ2VzaGhlYnJldz02NDMyOTtlLnNoaW5kYWdlc2hzaGluZG90PTY0MzAwO2Uuc2hpbmRhZ2VzaHNoaW5kb3RoZWJyZXc9NjQzMDA7ZS5zaGluZGFnZXNoc2luZG90PTY0MzAxO2Uuc2hpbmRhZ2VzaHNpbmRvdGhlYnJldz02NDMwMTtlLnNoaW5kb3RoZWJyZXc9MTQ3MztlLnNoaW5oZWJyZXc9MTUxMztlLnNoaW5zaGluZG90PTY0Mjk4O2Uuc2hpbnNoaW5kb3RoZWJyZXc9NjQyOTg7ZS5zaGluc2luZG90PTY0Mjk5O2Uuc2hpbnNpbmRvdGhlYnJldz02NDI5OTtlLnNob29rPTY0MjtlLnNpZ21hPTk2MztlLnNpZ21hMT05NjI7ZS5zaWdtYWZpbmFsPTk2MjtlLnNpZ21hbHVuYXRlc3ltYm9sZ3JlZWs9MTAxMDtlLnNpaGlyYWdhbmE9MTIzNzU7ZS5zaWthdGFrYW5hPTEyNDcxO2Uuc2lrYXRha2FuYWhhbGZ3aWR0aD02NTQwNDtlLnNpbHVxaGVicmV3PTE0Njk7ZS5zaWx1cWxlZnRoZWJyZXc9MTQ2OTtlLnNpbWlsYXI9ODc2NDtlLnNpbmRvdGhlYnJldz0xNDc0O2Uuc2lvc2FjaXJjbGVrb3JlYW49MTI5MTY7ZS5zaW9zYXBhcmVua29yZWFuPTEyODIwO2Uuc2lvc2NpZXVja29yZWFuPTEyNjcwO2Uuc2lvc2NpcmNsZWtvcmVhbj0xMjkwMjtlLnNpb3NraXllb2trb3JlYW49MTI2NjY7ZS5zaW9za29yZWFuPTEyNjEzO2Uuc2lvc25pZXVua29yZWFuPTEyNjY3O2Uuc2lvc3BhcmVua29yZWFuPTEyODA2O2Uuc2lvc3BpZXVwa29yZWFuPTEyNjY5O2Uuc2lvc3Rpa2V1dGtvcmVhbj0xMjY2ODtlLnNpeD01NDtlLnNpeGFyYWJpYz0xNjM4O2Uuc2l4YmVuZ2FsaT0yNTQwO2Uuc2l4Y2lyY2xlPTkzMTc7ZS5zaXhjaXJjbGVpbnZlcnNlc2Fuc3NlcmlmPTEwMTI3O2Uuc2l4ZGV2YT0yNDEyO2Uuc2l4Z3VqYXJhdGk9Mjc5NjtlLnNpeGd1cm11a2hpPTI2Njg7ZS5zaXhoYWNrYXJhYmljPTE2Mzg7ZS5zaXhoYW5nemhvdT0xMjMyNjtlLnNpeGlkZW9ncmFwaGljcGFyZW49MTI4Mzc7ZS5zaXhpbmZlcmlvcj04MzI2O2Uuc2l4bW9ub3NwYWNlPTY1MzAyO2Uuc2l4b2xkc3R5bGU9NjMyODY7ZS5zaXhwYXJlbj05MzM3O2Uuc2l4cGVyaW9kPTkzNTc7ZS5zaXhwZXJzaWFuPTE3ODI7ZS5zaXhyb21hbj04NTY1O2Uuc2l4c3VwZXJpb3I9ODMxMDtlLnNpeHRlZW5jaXJjbGU9OTMyNztlLnNpeHRlZW5jdXJyZW5jeWRlbm9taW5hdG9yYmVuZ2FsaT0yNTUzO2Uuc2l4dGVlbnBhcmVuPTkzNDc7ZS5zaXh0ZWVucGVyaW9kPTkzNjc7ZS5zaXh0aGFpPTM2NzA7ZS5zbGFzaD00NztlLnNsYXNobW9ub3NwYWNlPTY1Mjk1O2Uuc2xvbmc9MzgzO2Uuc2xvbmdkb3RhY2NlbnQ9NzgzNTtlLnNtaWxlZmFjZT05Nzg2O2Uuc21vbm9zcGFjZT02NTM2MztlLnNvZnBhc3VxaGVicmV3PTE0NzU7ZS5zb2Z0aHlwaGVuPTE3MztlLnNvZnRzaWduY3lyaWxsaWM9MTEwMDtlLnNvaGlyYWdhbmE9MTIzODE7ZS5zb2thdGFrYW5hPTEyNDc3O2Uuc29rYXRha2FuYWhhbGZ3aWR0aD02NTQwNztlLnNvbGlkdXNsb25nb3ZlcmxheWNtYj04MjQ7ZS5zb2xpZHVzc2hvcnRvdmVybGF5Y21iPTgyMztlLnNvcnVzaXRoYWk9MzYyNTtlLnNvc2FsYXRoYWk9MzYyNDtlLnNvc290aGFpPTM1OTU7ZS5zb3N1YXRoYWk9MzYyNjtlLnNwYWNlPTMyO2Uuc3BhY2VoYWNrYXJhYmljPTMyO2Uuc3BhZGU9OTgyNDtlLnNwYWRlc3VpdGJsYWNrPTk4MjQ7ZS5zcGFkZXN1aXR3aGl0ZT05ODI4O2Uuc3BhcmVuPTkzOTA7ZS5zcXVhcmViZWxvd2NtYj04Mjc7ZS5zcXVhcmVjYz0xMzI1MjtlLnNxdWFyZWNtPTEzMjEzO2Uuc3F1YXJlZGlhZ29uYWxjcm9zc2hhdGNoZmlsbD05NjQxO2Uuc3F1YXJlaG9yaXpvbnRhbGZpbGw9OTYzNjtlLnNxdWFyZWtnPTEzMTk5O2Uuc3F1YXJla209MTMyMTQ7ZS5zcXVhcmVrbWNhcGl0YWw9MTMyNjI7ZS5zcXVhcmVsbj0xMzI2NTtlLnNxdWFyZWxvZz0xMzI2NjtlLnNxdWFyZW1nPTEzMTk4O2Uuc3F1YXJlbWlsPTEzMjY5O2Uuc3F1YXJlbW09MTMyMTI7ZS5zcXVhcmVtc3F1YXJlZD0xMzIxNztlLnNxdWFyZW9ydGhvZ29uYWxjcm9zc2hhdGNoZmlsbD05NjM4O2Uuc3F1YXJldXBwZXJsZWZ0dG9sb3dlcnJpZ2h0ZmlsbD05NjM5O2Uuc3F1YXJldXBwZXJyaWdodHRvbG93ZXJsZWZ0ZmlsbD05NjQwO2Uuc3F1YXJldmVydGljYWxmaWxsPTk2Mzc7ZS5zcXVhcmV3aGl0ZXdpdGhzbWFsbGJsYWNrPTk2MzU7ZS5zcnNxdWFyZT0xMzI3NTtlLnNzYWJlbmdhbGk9MjQ4NztlLnNzYWRldmE9MjM1OTtlLnNzYWd1amFyYXRpPTI3NDM7ZS5zc2FuZ2NpZXVja29yZWFuPTEyNjE3O2Uuc3NhbmdoaWV1aGtvcmVhbj0xMjY3NztlLnNzYW5naWV1bmdrb3JlYW49MTI2NzI7ZS5zc2FuZ2tpeWVva2tvcmVhbj0xMjU5NDtlLnNzYW5nbmlldW5rb3JlYW49MTI2NDU7ZS5zc2FuZ3BpZXVwa29yZWFuPTEyNjExO2Uuc3NhbmdzaW9za29yZWFuPTEyNjE0O2Uuc3Nhbmd0aWtldXRrb3JlYW49MTI2MDA7ZS5zc3VwZXJpb3I9NjMyMTg7ZS5zdGVybGluZz0xNjM7ZS5zdGVybGluZ21vbm9zcGFjZT02NTUwNTtlLnN0cm9rZWxvbmdvdmVybGF5Y21iPTgyMjtlLnN0cm9rZXNob3J0b3ZlcmxheWNtYj04MjE7ZS5zdWJzZXQ9ODgzNDtlLnN1YnNldG5vdGVxdWFsPTg4NDI7ZS5zdWJzZXRvcmVxdWFsPTg4Mzg7ZS5zdWNjZWVkcz04ODI3O2Uuc3VjaHRoYXQ9ODcxNTtlLnN1aGlyYWdhbmE9MTIzNzc7ZS5zdWthdGFrYW5hPTEyNDczO2Uuc3VrYXRha2FuYWhhbGZ3aWR0aD02NTQwNTtlLnN1a3VuYXJhYmljPTE2MTg7ZS5zdW1tYXRpb249ODcyMTtlLnN1bj05Nzg4O2Uuc3VwZXJzZXQ9ODgzNTtlLnN1cGVyc2V0bm90ZXF1YWw9ODg0MztlLnN1cGVyc2V0b3JlcXVhbD04ODM5O2Uuc3ZzcXVhcmU9MTMyNzY7ZS5zeW91d2FlcmFzcXVhcmU9MTMxODA7ZS50PTExNjtlLnRhYmVuZ2FsaT0yNDY4O2UudGFja2Rvd249ODg2ODtlLnRhY2tsZWZ0PTg4Njc7ZS50YWRldmE9MjM0MDtlLnRhZ3VqYXJhdGk9MjcyNDtlLnRhZ3VybXVraGk9MjU5NjtlLnRhaGFyYWJpYz0xNTkxO2UudGFoZmluYWxhcmFiaWM9NjUyMTg7ZS50YWhpbml0aWFsYXJhYmljPTY1MjE5O2UudGFoaXJhZ2FuYT0xMjM4MztlLnRhaG1lZGlhbGFyYWJpYz02NTIyMDtlLnRhaXN5b3VlcmFzcXVhcmU9MTMxODE7ZS50YWthdGFrYW5hPTEyNDc5O2UudGFrYXRha2FuYWhhbGZ3aWR0aD02NTQwODtlLnRhdHdlZWxhcmFiaWM9MTYwMDtlLnRhdT05NjQ7ZS50YXY9MTUxNDtlLnRhdmRhZ2VzPTY0MzMwO2UudGF2ZGFnZXNoPTY0MzMwO2UudGF2ZGFnZXNoaGVicmV3PTY0MzMwO2UudGF2aGVicmV3PTE1MTQ7ZS50YmFyPTM1OTtlLnRib3BvbW9mbz0xMjU1NDtlLnRjYXJvbj0zNTc7ZS50Y2N1cmw9NjgwO2UudGNlZGlsbGE9MzU1O2UudGNoZWhhcmFiaWM9MTY3MDtlLnRjaGVoZmluYWxhcmFiaWM9NjQzNzk7ZS50Y2hlaGluaXRpYWxhcmFiaWM9NjQzODA7ZS50Y2hlaG1lZGlhbGFyYWJpYz02NDM4MTtlLnRjaXJjbGU9OTQ0MztlLnRjaXJjdW1mbGV4YmVsb3c9Nzc5MztlLnRjb21tYWFjY2VudD0zNTU7ZS50ZGllcmVzaXM9NzgzMTtlLnRkb3RhY2NlbnQ9Nzc4NztlLnRkb3RiZWxvdz03Nzg5O2UudGVjeXJpbGxpYz0xMDkwO2UudGVkZXNjZW5kZXJjeXJpbGxpYz0xMTk3O2UudGVoYXJhYmljPTE1Nzg7ZS50ZWhmaW5hbGFyYWJpYz02NTE3NDtlLnRlaGhhaGluaXRpYWxhcmFiaWM9NjQ2NzQ7ZS50ZWhoYWhpc29sYXRlZGFyYWJpYz02NDUyNDtlLnRlaGluaXRpYWxhcmFiaWM9NjUxNzU7ZS50ZWhpcmFnYW5hPTEyMzkwO2UudGVoamVlbWluaXRpYWxhcmFiaWM9NjQ2NzM7ZS50ZWhqZWVtaXNvbGF0ZWRhcmFiaWM9NjQ1MjM7ZS50ZWhtYXJidXRhYXJhYmljPTE1Nzc7ZS50ZWhtYXJidXRhZmluYWxhcmFiaWM9NjUxNzI7ZS50ZWhtZWRpYWxhcmFiaWM9NjUxNzY7ZS50ZWhtZWVtaW5pdGlhbGFyYWJpYz02NDY3NjtlLnRlaG1lZW1pc29sYXRlZGFyYWJpYz02NDUyNjtlLnRlaG5vb25maW5hbGFyYWJpYz02NDYyNztlLnRla2F0YWthbmE9MTI0ODY7ZS50ZWthdGFrYW5haGFsZndpZHRoPTY1NDExO2UudGVsZXBob25lPTg0ODE7ZS50ZWxlcGhvbmVibGFjaz05NzQyO2UudGVsaXNoYWdlZG9sYWhlYnJldz0xNDQwO2UudGVsaXNoYXFldGFuYWhlYnJldz0xNDQ5O2UudGVuY2lyY2xlPTkzMjE7ZS50ZW5pZGVvZ3JhcGhpY3BhcmVuPTEyODQxO2UudGVucGFyZW49OTM0MTtlLnRlbnBlcmlvZD05MzYxO2UudGVucm9tYW49ODU2OTtlLnRlc2g9Njc5O2UudGV0PTE0OTY7ZS50ZXRkYWdlc2g9NjQzMTI7ZS50ZXRkYWdlc2hoZWJyZXc9NjQzMTI7ZS50ZXRoZWJyZXc9MTQ5NjtlLnRldHNlY3lyaWxsaWM9MTIwNTtlLnRldmlyaGVicmV3PTE0MzU7ZS50ZXZpcmxlZnRoZWJyZXc9MTQzNTtlLnRoYWJlbmdhbGk9MjQ2OTtlLnRoYWRldmE9MjM0MTtlLnRoYWd1amFyYXRpPTI3MjU7ZS50aGFndXJtdWtoaT0yNTk3O2UudGhhbGFyYWJpYz0xNTg0O2UudGhhbGZpbmFsYXJhYmljPTY1MTk2O2UudGhhbnRoYWtoYXRsb3dsZWZ0dGhhaT02MzY0MDtlLnRoYW50aGFraGF0bG93cmlnaHR0aGFpPTYzNjM5O2UudGhhbnRoYWtoYXR0aGFpPTM2NjA7ZS50aGFudGhha2hhdHVwcGVybGVmdHRoYWk9NjM2Mzg7ZS50aGVoYXJhYmljPTE1Nzk7ZS50aGVoZmluYWxhcmFiaWM9NjUxNzg7ZS50aGVoaW5pdGlhbGFyYWJpYz02NTE3OTtlLnRoZWhtZWRpYWxhcmFiaWM9NjUxODA7ZS50aGVyZWV4aXN0cz04NzA3O2UudGhlcmVmb3JlPTg3NTY7ZS50aGV0YT05NTI7ZS50aGV0YTE9OTc3O2UudGhldGFzeW1ib2xncmVlaz05Nzc7ZS50aGlldXRoYWNpcmNsZWtvcmVhbj0xMjkyMTtlLnRoaWV1dGhhcGFyZW5rb3JlYW49MTI4MjU7ZS50aGlldXRoY2lyY2xla29yZWFuPTEyOTA3O2UudGhpZXV0aGtvcmVhbj0xMjYyMDtlLnRoaWV1dGhwYXJlbmtvcmVhbj0xMjgxMTtlLnRoaXJ0ZWVuY2lyY2xlPTkzMjQ7ZS50aGlydGVlbnBhcmVuPTkzNDQ7ZS50aGlydGVlbnBlcmlvZD05MzY0O2UudGhvbmFuZ21vbnRob3RoYWk9MzYwMTtlLnRob29rPTQyOTtlLnRob3BodXRoYW90aGFpPTM2MDI7ZS50aG9ybj0yNTQ7ZS50aG90aGFoYW50aGFpPTM2MDc7ZS50aG90aGFudGhhaT0zNjAwO2UudGhvdGhvbmd0aGFpPTM2MDg7ZS50aG90aHVuZ3RoYWk9MzYwNjtlLnRob3VzYW5kY3lyaWxsaWM9MTE1NDtlLnRob3VzYW5kc3NlcGFyYXRvcmFyYWJpYz0xNjQ0O2UudGhvdXNhbmRzc2VwYXJhdG9ycGVyc2lhbj0xNjQ0O2UudGhyZWU9NTE7ZS50aHJlZWFyYWJpYz0xNjM1O2UudGhyZWViZW5nYWxpPTI1Mzc7ZS50aHJlZWNpcmNsZT05MzE0O2UudGhyZWVjaXJjbGVpbnZlcnNlc2Fuc3NlcmlmPTEwMTI0O2UudGhyZWVkZXZhPTI0MDk7ZS50aHJlZWVpZ2h0aHM9ODU0MDtlLnRocmVlZ3VqYXJhdGk9Mjc5MztlLnRocmVlZ3VybXVraGk9MjY2NTtlLnRocmVlaGFja2FyYWJpYz0xNjM1O2UudGhyZWVoYW5nemhvdT0xMjMyMztlLnRocmVlaWRlb2dyYXBoaWNwYXJlbj0xMjgzNDtlLnRocmVlaW5mZXJpb3I9ODMyMztlLnRocmVlbW9ub3NwYWNlPTY1Mjk5O2UudGhyZWVudW1lcmF0b3JiZW5nYWxpPTI1NTA7ZS50aHJlZW9sZHN0eWxlPTYzMjgzO2UudGhyZWVwYXJlbj05MzM0O2UudGhyZWVwZXJpb2Q9OTM1NDtlLnRocmVlcGVyc2lhbj0xNzc5O2UudGhyZWVxdWFydGVycz0xOTA7ZS50aHJlZXF1YXJ0ZXJzZW1kYXNoPTYzMTk4O2UudGhyZWVyb21hbj04NTYyO2UudGhyZWVzdXBlcmlvcj0xNzk7ZS50aHJlZXRoYWk9MzY2NztlLnRoenNxdWFyZT0xMzIwNDtlLnRpaGlyYWdhbmE9MTIzODU7ZS50aWthdGFrYW5hPTEyNDgxO2UudGlrYXRha2FuYWhhbGZ3aWR0aD02NTQwOTtlLnRpa2V1dGFjaXJjbGVrb3JlYW49MTI5MTI7ZS50aWtldXRhcGFyZW5rb3JlYW49MTI4MTY7ZS50aWtldXRjaXJjbGVrb3JlYW49MTI4OTg7ZS50aWtldXRrb3JlYW49MTI1OTk7ZS50aWtldXRwYXJlbmtvcmVhbj0xMjgwMjtlLnRpbGRlPTczMjtlLnRpbGRlYmVsb3djbWI9ODE2O2UudGlsZGVjbWI9NzcxO2UudGlsZGVjb21iPTc3MTtlLnRpbGRlZG91YmxlY21iPTg2NDtlLnRpbGRlb3BlcmF0b3I9ODc2NDtlLnRpbGRlb3ZlcmxheWNtYj04MjA7ZS50aWxkZXZlcnRpY2FsY21iPTgzMDtlLnRpbWVzY2lyY2xlPTg4NTU7ZS50aXBlaGFoZWJyZXc9MTQzMDtlLnRpcGVoYWxlZnRoZWJyZXc9MTQzMDtlLnRpcHBpZ3VybXVraGk9MjY3MjtlLnRpdGxvY3lyaWxsaWNjbWI9MTE1NTtlLnRpd25hcm1lbmlhbj0xNDA3O2UudGxpbmViZWxvdz03NzkxO2UudG1vbm9zcGFjZT02NTM2NDtlLnRvYXJtZW5pYW49MTM4NTtlLnRvaGlyYWdhbmE9MTIzOTI7ZS50b2thdGFrYW5hPTEyNDg4O2UudG9rYXRha2FuYWhhbGZ3aWR0aD02NTQxMjtlLnRvbmViYXJleHRyYWhpZ2htb2Q9NzQxO2UudG9uZWJhcmV4dHJhbG93bW9kPTc0NTtlLnRvbmViYXJoaWdobW9kPTc0MjtlLnRvbmViYXJsb3dtb2Q9NzQ0O2UudG9uZWJhcm1pZG1vZD03NDM7ZS50b25lZml2ZT00NDU7ZS50b25lc2l4PTM4OTtlLnRvbmV0d289NDI0O2UudG9ub3M9OTAwO2UudG9uc3F1YXJlPTEzMDk1O2UudG9wYXRha3RoYWk9MzU5OTtlLnRvcnRvaXNlc2hlbGxicmFja2V0bGVmdD0xMjMwODtlLnRvcnRvaXNlc2hlbGxicmFja2V0bGVmdHNtYWxsPTY1MTE3O2UudG9ydG9pc2VzaGVsbGJyYWNrZXRsZWZ0dmVydGljYWw9NjUwODE7ZS50b3J0b2lzZXNoZWxsYnJhY2tldHJpZ2h0PTEyMzA5O2UudG9ydG9pc2VzaGVsbGJyYWNrZXRyaWdodHNtYWxsPTY1MTE4O2UudG9ydG9pc2VzaGVsbGJyYWNrZXRyaWdodHZlcnRpY2FsPTY1MDgyO2UudG90YW90aGFpPTM2MDU7ZS50cGFsYXRhbGhvb2s9NDI3O2UudHBhcmVuPTkzOTE7ZS50cmFkZW1hcms9ODQ4MjtlLnRyYWRlbWFya3NhbnM9NjM3MjI7ZS50cmFkZW1hcmtzZXJpZj02MzE5NTtlLnRyZXRyb2ZsZXhob29rPTY0ODtlLnRyaWFnZG49OTY2MDtlLnRyaWFnbGY9OTY2ODtlLnRyaWFncnQ9OTY1ODtlLnRyaWFndXA9OTY1MDtlLnRzPTY3ODtlLnRzYWRpPTE1MTA7ZS50c2FkaWRhZ2VzaD02NDMyNjtlLnRzYWRpZGFnZXNoaGVicmV3PTY0MzI2O2UudHNhZGloZWJyZXc9MTUxMDtlLnRzZWN5cmlsbGljPTEwOTQ7ZS50c2VyZT0xNDYxO2UudHNlcmUxMj0xNDYxO2UudHNlcmUxZT0xNDYxO2UudHNlcmUyYj0xNDYxO2UudHNlcmVoZWJyZXc9MTQ2MTtlLnRzZXJlbmFycm93aGVicmV3PTE0NjE7ZS50c2VyZXF1YXJ0ZXJoZWJyZXc9MTQ2MTtlLnRzZXJld2lkZWhlYnJldz0xNDYxO2UudHNoZWN5cmlsbGljPTExMTU7ZS50c3VwZXJpb3I9NjMyMTk7ZS50dGFiZW5nYWxpPTI0NjM7ZS50dGFkZXZhPTIzMzU7ZS50dGFndWphcmF0aT0yNzE5O2UudHRhZ3VybXVraGk9MjU5MTtlLnR0ZWhhcmFiaWM9MTY1NztlLnR0ZWhmaW5hbGFyYWJpYz02NDM1OTtlLnR0ZWhpbml0aWFsYXJhYmljPTY0MzYwO2UudHRlaG1lZGlhbGFyYWJpYz02NDM2MTtlLnR0aGFiZW5nYWxpPTI0NjQ7ZS50dGhhZGV2YT0yMzM2O2UudHRoYWd1amFyYXRpPTI3MjA7ZS50dGhhZ3VybXVraGk9MjU5MjtlLnR0dXJuZWQ9NjQ3O2UudHVoaXJhZ2FuYT0xMjM4ODtlLnR1a2F0YWthbmE9MTI0ODQ7ZS50dWthdGFrYW5haGFsZndpZHRoPTY1NDEwO2UudHVzbWFsbGhpcmFnYW5hPTEyMzg3O2UudHVzbWFsbGthdGFrYW5hPTEyNDgzO2UudHVzbWFsbGthdGFrYW5haGFsZndpZHRoPTY1MzkxO2UudHdlbHZlY2lyY2xlPTkzMjM7ZS50d2VsdmVwYXJlbj05MzQzO2UudHdlbHZlcGVyaW9kPTkzNjM7ZS50d2VsdmVyb21hbj04NTcxO2UudHdlbnR5Y2lyY2xlPTkzMzE7ZS50d2VudHloYW5nemhvdT0yMTMxNjtlLnR3ZW50eXBhcmVuPTkzNTE7ZS50d2VudHlwZXJpb2Q9OTM3MTtlLnR3bz01MDtlLnR3b2FyYWJpYz0xNjM0O2UudHdvYmVuZ2FsaT0yNTM2O2UudHdvY2lyY2xlPTkzMTM7ZS50d29jaXJjbGVpbnZlcnNlc2Fuc3NlcmlmPTEwMTIzO2UudHdvZGV2YT0yNDA4O2UudHdvZG90ZW5sZWFkZXI9ODIyOTtlLnR3b2RvdGxlYWRlcj04MjI5O2UudHdvZG90bGVhZGVydmVydGljYWw9NjUwNzI7ZS50d29ndWphcmF0aT0yNzkyO2UudHdvZ3VybXVraGk9MjY2NDtlLnR3b2hhY2thcmFiaWM9MTYzNDtlLnR3b2hhbmd6aG91PTEyMzIyO2UudHdvaWRlb2dyYXBoaWNwYXJlbj0xMjgzMztlLnR3b2luZmVyaW9yPTgzMjI7ZS50d29tb25vc3BhY2U9NjUyOTg7ZS50d29udW1lcmF0b3JiZW5nYWxpPTI1NDk7ZS50d29vbGRzdHlsZT02MzI4MjtlLnR3b3BhcmVuPTkzMzM7ZS50d29wZXJpb2Q9OTM1MztlLnR3b3BlcnNpYW49MTc3ODtlLnR3b3JvbWFuPTg1NjE7ZS50d29zdHJva2U9NDQzO2UudHdvc3VwZXJpb3I9MTc4O2UudHdvdGhhaT0zNjY2O2UudHdvdGhpcmRzPTg1MzI7ZS51PTExNztlLnVhY3V0ZT0yNTA7ZS51YmFyPTY0OTtlLnViZW5nYWxpPTI0NDE7ZS51Ym9wb21vZm89MTI1ODQ7ZS51YnJldmU9MzY1O2UudWNhcm9uPTQ2ODtlLnVjaXJjbGU9OTQ0NDtlLnVjaXJjdW1mbGV4PTI1MTtlLnVjaXJjdW1mbGV4YmVsb3c9Nzc5OTtlLnVjeXJpbGxpYz0xMDkxO2UudWRhdHRhZGV2YT0yMzg1O2UudWRibGFjdXRlPTM2OTtlLnVkYmxncmF2ZT01MzM7ZS51ZGV2YT0yMzEzO2UudWRpZXJlc2lzPTI1MjtlLnVkaWVyZXNpc2FjdXRlPTQ3MjtlLnVkaWVyZXNpc2JlbG93PTc3OTU7ZS51ZGllcmVzaXNjYXJvbj00NzQ7ZS51ZGllcmVzaXNjeXJpbGxpYz0xMjY1O2UudWRpZXJlc2lzZ3JhdmU9NDc2O2UudWRpZXJlc2lzbWFjcm9uPTQ3MDtlLnVkb3RiZWxvdz03OTA5O2UudWdyYXZlPTI0OTtlLnVndWphcmF0aT0yNjk3O2UudWd1cm11a2hpPTI1Njk7ZS51aGlyYWdhbmE9MTIzNTg7ZS51aG9va2Fib3ZlPTc5MTE7ZS51aG9ybj00MzI7ZS51aG9ybmFjdXRlPTc5MTM7ZS51aG9ybmRvdGJlbG93PTc5MjE7ZS51aG9ybmdyYXZlPTc5MTU7ZS51aG9ybmhvb2thYm92ZT03OTE3O2UudWhvcm50aWxkZT03OTE5O2UudWh1bmdhcnVtbGF1dD0zNjk7ZS51aHVuZ2FydW1sYXV0Y3lyaWxsaWM9MTI2NztlLnVpbnZlcnRlZGJyZXZlPTUzNTtlLnVrYXRha2FuYT0xMjQ1NDtlLnVrYXRha2FuYWhhbGZ3aWR0aD02NTM5NTtlLnVrY3lyaWxsaWM9MTE0NTtlLnVrb3JlYW49MTI2MzY7ZS51bWFjcm9uPTM2MztlLnVtYWNyb25jeXJpbGxpYz0xMjYzO2UudW1hY3JvbmRpZXJlc2lzPTc4MDM7ZS51bWF0cmFndXJtdWtoaT0yNjI1O2UudW1vbm9zcGFjZT02NTM2NTtlLnVuZGVyc2NvcmU9OTU7ZS51bmRlcnNjb3JlZGJsPTgyMTU7ZS51bmRlcnNjb3JlbW9ub3NwYWNlPTY1MzQzO2UudW5kZXJzY29yZXZlcnRpY2FsPTY1MDc1O2UudW5kZXJzY29yZXdhdnk9NjUxMDM7ZS51bmlvbj04NzQ2O2UudW5pdmVyc2FsPTg3MDQ7ZS51b2dvbmVrPTM3MTtlLnVwYXJlbj05MzkyO2UudXBibG9jaz05NjAwO2UudXBwZXJkb3RoZWJyZXc9MTQ3NjtlLnVwc2lsb249OTY1O2UudXBzaWxvbmRpZXJlc2lzPTk3MTtlLnVwc2lsb25kaWVyZXNpc3Rvbm9zPTk0NDtlLnVwc2lsb25sYXRpbj02NTA7ZS51cHNpbG9udG9ub3M9OTczO2UudXB0YWNrYmVsb3djbWI9Nzk3O2UudXB0YWNrbW9kPTcyNDtlLnVyYWd1cm11a2hpPTI2NzU7ZS51cmluZz0zNjc7ZS51c2hvcnRjeXJpbGxpYz0xMTE4O2UudXNtYWxsaGlyYWdhbmE9MTIzNTc7ZS51c21hbGxrYXRha2FuYT0xMjQ1MztlLnVzbWFsbGthdGFrYW5haGFsZndpZHRoPTY1Mzg1O2UudXN0cmFpZ2h0Y3lyaWxsaWM9MTE5OTtlLnVzdHJhaWdodHN0cm9rZWN5cmlsbGljPTEyMDE7ZS51dGlsZGU9MzYxO2UudXRpbGRlYWN1dGU9NzgwMTtlLnV0aWxkZWJlbG93PTc3OTc7ZS51dWJlbmdhbGk9MjQ0MjtlLnV1ZGV2YT0yMzE0O2UudXVndWphcmF0aT0yNjk4O2UudXVndXJtdWtoaT0yNTcwO2UudXVtYXRyYWd1cm11a2hpPTI2MjY7ZS51dXZvd2Vsc2lnbmJlbmdhbGk9MjQ5ODtlLnV1dm93ZWxzaWduZGV2YT0yMzcwO2UudXV2b3dlbHNpZ25ndWphcmF0aT0yNzU0O2UudXZvd2Vsc2lnbmJlbmdhbGk9MjQ5NztlLnV2b3dlbHNpZ25kZXZhPTIzNjk7ZS51dm93ZWxzaWduZ3VqYXJhdGk9Mjc1MztlLnY9MTE4O2UudmFkZXZhPTIzNTc7ZS52YWd1amFyYXRpPTI3NDE7ZS52YWd1cm11a2hpPTI2MTM7ZS52YWthdGFrYW5hPTEyNTM1O2UudmF2PTE0OTM7ZS52YXZkYWdlc2g9NjQzMDk7ZS52YXZkYWdlc2g2NT02NDMwOTtlLnZhdmRhZ2VzaGhlYnJldz02NDMwOTtlLnZhdmhlYnJldz0xNDkzO2UudmF2aG9sYW09NjQzMzE7ZS52YXZob2xhbWhlYnJldz02NDMzMTtlLnZhdnZhdmhlYnJldz0xNTIwO2UudmF2eW9kaGVicmV3PTE1MjE7ZS52Y2lyY2xlPTk0NDU7ZS52ZG90YmVsb3c9NzgwNztlLnZlY3lyaWxsaWM9MTA3NDtlLnZlaGFyYWJpYz0xNzAwO2UudmVoZmluYWxhcmFiaWM9NjQzNjM7ZS52ZWhpbml0aWFsYXJhYmljPTY0MzY0O2UudmVobWVkaWFsYXJhYmljPTY0MzY1O2UudmVrYXRha2FuYT0xMjUzNztlLnZlbnVzPTk3OTI7ZS52ZXJ0aWNhbGJhcj0xMjQ7ZS52ZXJ0aWNhbGxpbmVhYm92ZWNtYj03ODE7ZS52ZXJ0aWNhbGxpbmViZWxvd2NtYj04MDk7ZS52ZXJ0aWNhbGxpbmVsb3dtb2Q9NzE2O2UudmVydGljYWxsaW5lbW9kPTcxMjtlLnZld2FybWVuaWFuPTE0MDY7ZS52aG9vaz02NTE7ZS52aWthdGFrYW5hPTEyNTM2O2UudmlyYW1hYmVuZ2FsaT0yNTA5O2UudmlyYW1hZGV2YT0yMzgxO2UudmlyYW1hZ3VqYXJhdGk9Mjc2NTtlLnZpc2FyZ2FiZW5nYWxpPTI0MzU7ZS52aXNhcmdhZGV2YT0yMzA3O2UudmlzYXJnYWd1amFyYXRpPTI2OTE7ZS52bW9ub3NwYWNlPTY1MzY2O2Uudm9hcm1lbmlhbj0xNDAwO2Uudm9pY2VkaXRlcmF0aW9uaGlyYWdhbmE9MTI0NDY7ZS52b2ljZWRpdGVyYXRpb25rYXRha2FuYT0xMjU0MjtlLnZvaWNlZG1hcmtrYW5hPTEyNDQzO2Uudm9pY2VkbWFya2thbmFoYWxmd2lkdGg9NjU0Mzg7ZS52b2thdGFrYW5hPTEyNTM4O2UudnBhcmVuPTkzOTM7ZS52dGlsZGU9NzgwNTtlLnZ0dXJuZWQ9NjUyO2UudnVoaXJhZ2FuYT0xMjQzNjtlLnZ1a2F0YWthbmE9MTI1MzI7ZS53PTExOTtlLndhY3V0ZT03ODExO2Uud2Fla29yZWFuPTEyNjMzO2Uud2FoaXJhZ2FuYT0xMjQzMTtlLndha2F0YWthbmE9MTI1Mjc7ZS53YWthdGFrYW5haGFsZndpZHRoPTY1NDM2O2Uud2Frb3JlYW49MTI2MzI7ZS53YXNtYWxsaGlyYWdhbmE9MTI0MzA7ZS53YXNtYWxsa2F0YWthbmE9MTI1MjY7ZS53YXR0b3NxdWFyZT0xMzE0MztlLndhdmVkYXNoPTEyMzE2O2Uud2F2eXVuZGVyc2NvcmV2ZXJ0aWNhbD02NTA3NjtlLndhd2FyYWJpYz0xNjA4O2Uud2F3ZmluYWxhcmFiaWM9NjUyNjI7ZS53YXdoYW16YWFib3ZlYXJhYmljPTE1NzI7ZS53YXdoYW16YWFib3ZlZmluYWxhcmFiaWM9NjUxNTg7ZS53YnNxdWFyZT0xMzI3NztlLndjaXJjbGU9OTQ0NjtlLndjaXJjdW1mbGV4PTM3MztlLndkaWVyZXNpcz03ODEzO2Uud2RvdGFjY2VudD03ODE1O2Uud2RvdGJlbG93PTc4MTc7ZS53ZWhpcmFnYW5hPTEyNDMzO2Uud2VpZXJzdHJhc3M9ODQ3MjtlLndla2F0YWthbmE9MTI1Mjk7ZS53ZWtvcmVhbj0xMjYzODtlLndlb2tvcmVhbj0xMjYzNztlLndncmF2ZT03ODA5O2Uud2hpdGVidWxsZXQ9OTcwMjtlLndoaXRlY2lyY2xlPTk2NzU7ZS53aGl0ZWNpcmNsZWludmVyc2U9OTY4OTtlLndoaXRlY29ybmVyYnJhY2tldGxlZnQ9MTIzMDI7ZS53aGl0ZWNvcm5lcmJyYWNrZXRsZWZ0dmVydGljYWw9NjUwOTE7ZS53aGl0ZWNvcm5lcmJyYWNrZXRyaWdodD0xMjMwMztlLndoaXRlY29ybmVyYnJhY2tldHJpZ2h0dmVydGljYWw9NjUwOTI7ZS53aGl0ZWRpYW1vbmQ9OTY3MTtlLndoaXRlZGlhbW9uZGNvbnRhaW5pbmdibGFja3NtYWxsZGlhbW9uZD05NjcyO2Uud2hpdGVkb3ducG9pbnRpbmdzbWFsbHRyaWFuZ2xlPTk2NjM7ZS53aGl0ZWRvd25wb2ludGluZ3RyaWFuZ2xlPTk2NjE7ZS53aGl0ZWxlZnRwb2ludGluZ3NtYWxsdHJpYW5nbGU9OTY2NztlLndoaXRlbGVmdHBvaW50aW5ndHJpYW5nbGU9OTY2NTtlLndoaXRlbGVudGljdWxhcmJyYWNrZXRsZWZ0PTEyMzEwO2Uud2hpdGVsZW50aWN1bGFyYnJhY2tldHJpZ2h0PTEyMzExO2Uud2hpdGVyaWdodHBvaW50aW5nc21hbGx0cmlhbmdsZT05NjU3O2Uud2hpdGVyaWdodHBvaW50aW5ndHJpYW5nbGU9OTY1NTtlLndoaXRlc21hbGxzcXVhcmU9OTY0MztlLndoaXRlc21pbGluZ2ZhY2U9OTc4NjtlLndoaXRlc3F1YXJlPTk2MzM7ZS53aGl0ZXN0YXI9OTczNDtlLndoaXRldGVsZXBob25lPTk3NDM7ZS53aGl0ZXRvcnRvaXNlc2hlbGxicmFja2V0bGVmdD0xMjMxMjtlLndoaXRldG9ydG9pc2VzaGVsbGJyYWNrZXRyaWdodD0xMjMxMztlLndoaXRldXBwb2ludGluZ3NtYWxsdHJpYW5nbGU9OTY1MztlLndoaXRldXBwb2ludGluZ3RyaWFuZ2xlPTk2NTE7ZS53aWhpcmFnYW5hPTEyNDMyO2Uud2lrYXRha2FuYT0xMjUyODtlLndpa29yZWFuPTEyNjM5O2Uud21vbm9zcGFjZT02NTM2NztlLndvaGlyYWdhbmE9MTI0MzQ7ZS53b2thdGFrYW5hPTEyNTMwO2Uud29rYXRha2FuYWhhbGZ3aWR0aD02NTM4MjtlLndvbj04MzYxO2Uud29ubW9ub3NwYWNlPTY1NTEwO2Uud293YWVudGhhaT0zNjIzO2Uud3BhcmVuPTkzOTQ7ZS53cmluZz03ODMyO2Uud3N1cGVyaW9yPTY5NTtlLnd0dXJuZWQ9NjUzO2Uud3lubj00NDc7ZS54PTEyMDtlLnhhYm92ZWNtYj04Mjk7ZS54Ym9wb21vZm89MTI1NjI7ZS54Y2lyY2xlPTk0NDc7ZS54ZGllcmVzaXM9NzgyMTtlLnhkb3RhY2NlbnQ9NzgxOTtlLnhlaGFybWVuaWFuPTEzODk7ZS54aT05NTg7ZS54bW9ub3NwYWNlPTY1MzY4O2UueHBhcmVuPTkzOTU7ZS54c3VwZXJpb3I9NzM5O2UueT0xMjE7ZS55YWFkb3NxdWFyZT0xMzEzNDtlLnlhYmVuZ2FsaT0yNDc5O2UueWFjdXRlPTI1MztlLnlhZGV2YT0yMzUxO2UueWFla29yZWFuPTEyNjI2O2UueWFndWphcmF0aT0yNzM1O2UueWFndXJtdWtoaT0yNjA3O2UueWFoaXJhZ2FuYT0xMjQyMDtlLnlha2F0YWthbmE9MTI1MTY7ZS55YWthdGFrYW5haGFsZndpZHRoPTY1NDI4O2UueWFrb3JlYW49MTI2MjU7ZS55YW1ha2thbnRoYWk9MzY2MjtlLnlhc21hbGxoaXJhZ2FuYT0xMjQxOTtlLnlhc21hbGxrYXRha2FuYT0xMjUxNTtlLnlhc21hbGxrYXRha2FuYWhhbGZ3aWR0aD02NTM4ODtlLnlhdGN5cmlsbGljPTExMjM7ZS55Y2lyY2xlPTk0NDg7ZS55Y2lyY3VtZmxleD0zNzU7ZS55ZGllcmVzaXM9MjU1O2UueWRvdGFjY2VudD03ODIzO2UueWRvdGJlbG93PTc5MjU7ZS55ZWhhcmFiaWM9MTYxMDtlLnllaGJhcnJlZWFyYWJpYz0xNzQ2O2UueWVoYmFycmVlZmluYWxhcmFiaWM9NjQ0MzE7ZS55ZWhmaW5hbGFyYWJpYz02NTI2NjtlLnllaGhhbXphYWJvdmVhcmFiaWM9MTU3NDtlLnllaGhhbXphYWJvdmVmaW5hbGFyYWJpYz02NTE2MjtlLnllaGhhbXphYWJvdmVpbml0aWFsYXJhYmljPTY1MTYzO2UueWVoaGFtemFhYm92ZW1lZGlhbGFyYWJpYz02NTE2NDtlLnllaGluaXRpYWxhcmFiaWM9NjUyNjc7ZS55ZWhtZWRpYWxhcmFiaWM9NjUyNjg7ZS55ZWhtZWVtaW5pdGlhbGFyYWJpYz02NDczMztlLnllaG1lZW1pc29sYXRlZGFyYWJpYz02NDYwMDtlLnllaG5vb25maW5hbGFyYWJpYz02NDY2MDtlLnllaHRocmVlZG90c2JlbG93YXJhYmljPTE3NDU7ZS55ZWtvcmVhbj0xMjYzMDtlLnllbj0xNjU7ZS55ZW5tb25vc3BhY2U9NjU1MDk7ZS55ZW9rb3JlYW49MTI2Mjk7ZS55ZW9yaW5oaWV1aGtvcmVhbj0xMjY3ODtlLnllcmFoYmVueW9tb2hlYnJldz0xNDUwO2UueWVyYWhiZW55b21vbGVmdGhlYnJldz0xNDUwO2UueWVyaWN5cmlsbGljPTEwOTk7ZS55ZXJ1ZGllcmVzaXNjeXJpbGxpYz0xMjczO2UueWVzaWV1bmdrb3JlYW49MTI2NzM7ZS55ZXNpZXVuZ3BhbnNpb3Nrb3JlYW49MTI2NzU7ZS55ZXNpZXVuZ3Npb3Nrb3JlYW49MTI2NzQ7ZS55ZXRpdmhlYnJldz0xNDM0O2UueWdyYXZlPTc5MjM7ZS55aG9vaz00MzY7ZS55aG9va2Fib3ZlPTc5Mjc7ZS55aWFybWVuaWFuPTEzOTc7ZS55aWN5cmlsbGljPTExMTE7ZS55aWtvcmVhbj0xMjY0MjtlLnlpbnlhbmc9OTc3NTtlLnlpd25hcm1lbmlhbj0xNDEwO2UueW1vbm9zcGFjZT02NTM2OTtlLnlvZD0xNDk3O2UueW9kZGFnZXNoPTY0MzEzO2UueW9kZGFnZXNoaGVicmV3PTY0MzEzO2UueW9kaGVicmV3PTE0OTc7ZS55b2R5b2RoZWJyZXc9MTUyMjtlLnlvZHlvZHBhdGFoaGVicmV3PTY0Mjg3O2UueW9oaXJhZ2FuYT0xMjQyNDtlLnlvaWtvcmVhbj0xMjY4MTtlLnlva2F0YWthbmE9MTI1MjA7ZS55b2thdGFrYW5haGFsZndpZHRoPTY1NDMwO2UueW9rb3JlYW49MTI2MzU7ZS55b3NtYWxsaGlyYWdhbmE9MTI0MjM7ZS55b3NtYWxsa2F0YWthbmE9MTI1MTk7ZS55b3NtYWxsa2F0YWthbmFoYWxmd2lkdGg9NjUzOTA7ZS55b3RncmVlaz0xMDExO2UueW95YWVrb3JlYW49MTI2ODA7ZS55b3lha29yZWFuPTEyNjc5O2UueW95YWt0aGFpPTM2MTg7ZS55b3lpbmd0aGFpPTM1OTc7ZS55cGFyZW49OTM5NjtlLnlwb2dlZ3JhbW1lbmk9ODkwO2UueXBvZ2VncmFtbWVuaWdyZWVrY21iPTgzNztlLnlyPTQyMjtlLnlyaW5nPTc4MzM7ZS55c3VwZXJpb3I9Njk2O2UueXRpbGRlPTc5Mjk7ZS55dHVybmVkPTY1NDtlLnl1aGlyYWdhbmE9MTI0MjI7ZS55dWlrb3JlYW49MTI2ODQ7ZS55dWthdGFrYW5hPTEyNTE4O2UueXVrYXRha2FuYWhhbGZ3aWR0aD02NTQyOTtlLnl1a29yZWFuPTEyNjQwO2UueXVzYmlnY3lyaWxsaWM9MTEzMTtlLnl1c2JpZ2lvdGlmaWVkY3lyaWxsaWM9MTEzMztlLnl1c2xpdHRsZWN5cmlsbGljPTExMjc7ZS55dXNsaXR0bGVpb3RpZmllZGN5cmlsbGljPTExMjk7ZS55dXNtYWxsaGlyYWdhbmE9MTI0MjE7ZS55dXNtYWxsa2F0YWthbmE9MTI1MTc7ZS55dXNtYWxsa2F0YWthbmFoYWxmd2lkdGg9NjUzODk7ZS55dXlla29yZWFuPTEyNjgzO2UueXV5ZW9rb3JlYW49MTI2ODI7ZS55eWFiZW5nYWxpPTI1Mjc7ZS55eWFkZXZhPTIzOTk7ZS56PTEyMjtlLnphYXJtZW5pYW49MTM4MjtlLnphY3V0ZT0zNzg7ZS56YWRldmE9MjM5NTtlLnphZ3VybXVraGk9MjY1MTtlLnphaGFyYWJpYz0xNTkyO2UuemFoZmluYWxhcmFiaWM9NjUyMjI7ZS56YWhpbml0aWFsYXJhYmljPTY1MjIzO2UuemFoaXJhZ2FuYT0xMjM3NDtlLnphaG1lZGlhbGFyYWJpYz02NTIyNDtlLnphaW5hcmFiaWM9MTU4NjtlLnphaW5maW5hbGFyYWJpYz02NTIwMDtlLnpha2F0YWthbmE9MTI0NzA7ZS56YXFlZmdhZG9saGVicmV3PTE0Mjk7ZS56YXFlZnFhdGFuaGVicmV3PTE0Mjg7ZS56YXJxYWhlYnJldz0xNDMyO2UuemF5aW49MTQ5NDtlLnpheWluZGFnZXNoPTY0MzEwO2UuemF5aW5kYWdlc2hoZWJyZXc9NjQzMTA7ZS56YXlpbmhlYnJldz0xNDk0O2UuemJvcG9tb2ZvPTEyNTY3O2UuemNhcm9uPTM4MjtlLnpjaXJjbGU9OTQ0OTtlLnpjaXJjdW1mbGV4PTc4MjU7ZS56Y3VybD02NTc7ZS56ZG90PTM4MDtlLnpkb3RhY2NlbnQ9MzgwO2UuemRvdGJlbG93PTc4Mjc7ZS56ZWN5cmlsbGljPTEwNzk7ZS56ZWRlc2NlbmRlcmN5cmlsbGljPTExNzc7ZS56ZWRpZXJlc2lzY3lyaWxsaWM9MTI0NztlLnplaGlyYWdhbmE9MTIzODA7ZS56ZWthdGFrYW5hPTEyNDc2O2UuemVybz00ODtlLnplcm9hcmFiaWM9MTYzMjtlLnplcm9iZW5nYWxpPTI1MzQ7ZS56ZXJvZGV2YT0yNDA2O2UuemVyb2d1amFyYXRpPTI3OTA7ZS56ZXJvZ3VybXVraGk9MjY2MjtlLnplcm9oYWNrYXJhYmljPTE2MzI7ZS56ZXJvaW5mZXJpb3I9ODMyMDtlLnplcm9tb25vc3BhY2U9NjUyOTY7ZS56ZXJvb2xkc3R5bGU9NjMyODA7ZS56ZXJvcGVyc2lhbj0xNzc2O2UuemVyb3N1cGVyaW9yPTgzMDQ7ZS56ZXJvdGhhaT0zNjY0O2UuemVyb3dpZHRoam9pbmVyPTY1Mjc5O2UuemVyb3dpZHRobm9uam9pbmVyPTgyMDQ7ZS56ZXJvd2lkdGhzcGFjZT04MjAzO2UuemV0YT05NTA7ZS56aGJvcG9tb2ZvPTEyNTYzO2UuemhlYXJtZW5pYW49MTM4NjtlLnpoZWJyZXZlY3lyaWxsaWM9MTIxODtlLnpoZWN5cmlsbGljPTEwNzg7ZS56aGVkZXNjZW5kZXJjeXJpbGxpYz0xMTc1O2UuemhlZGllcmVzaXNjeXJpbGxpYz0xMjQ1O2UuemloaXJhZ2FuYT0xMjM3NjtlLnppa2F0YWthbmE9MTI0NzI7ZS56aW5vcmhlYnJldz0xNDU0O2UuemxpbmViZWxvdz03ODI5O2Uuem1vbm9zcGFjZT02NTM3MDtlLnpvaGlyYWdhbmE9MTIzODI7ZS56b2thdGFrYW5hPTEyNDc4O2UuenBhcmVuPTkzOTc7ZS56cmV0cm9mbGV4aG9vaz02NTY7ZS56c3Ryb2tlPTQzODtlLnp1aGlyYWdhbmE9MTIzNzg7ZS56dWthdGFrYW5hPTEyNDc0O2VbIi5ub3RkZWYiXT0wO2UuYW5nYnJhY2tldGxlZnRiaWc9OTAwMTtlLmFuZ2JyYWNrZXRsZWZ0QmlnPTkwMDE7ZS5hbmdicmFja2V0bGVmdGJpZ2c9OTAwMTtlLmFuZ2JyYWNrZXRsZWZ0QmlnZz05MDAxO2UuYW5nYnJhY2tldHJpZ2h0QmlnPTkwMDI7ZS5hbmdicmFja2V0cmlnaHRiaWc9OTAwMjtlLmFuZ2JyYWNrZXRyaWdodEJpZ2c9OTAwMjtlLmFuZ2JyYWNrZXRyaWdodGJpZ2c9OTAwMjtlLmFycm93aG9va2xlZnQ9ODYxODtlLmFycm93aG9va3JpZ2h0PTg2MTc7ZS5hcnJvd2xlZnR0b3BoYWxmPTg2MzY7ZS5hcnJvd2xlZnRib3RoYWxmPTg2Mzc7ZS5hcnJvd25vcnRoZWFzdD04NTk5O2UuYXJyb3dub3J0aHdlc3Q9ODU5ODtlLmFycm93cmlnaHR0b3BoYWxmPTg2NDA7ZS5hcnJvd3JpZ2h0Ym90aGFsZj04NjQxO2UuYXJyb3dzb3V0aGVhc3Q9ODYwMDtlLmFycm93c291dGh3ZXN0PTg2MDE7ZS5iYWNrc2xhc2hiaWc9ODcyNjtlLmJhY2tzbGFzaEJpZz04NzI2O2UuYmFja3NsYXNoQmlnZz04NzI2O2UuYmFja3NsYXNoYmlnZz04NzI2O2UuYmFyZGJsPTgyMTQ7ZS5icmFjZWh0aXBkb3dubGVmdD02NTA3OTtlLmJyYWNlaHRpcGRvd25yaWdodD02NTA3OTtlLmJyYWNlaHRpcHVwbGVmdD02NTA4MDtlLmJyYWNlaHRpcHVwcmlnaHQ9NjUwODA7ZS5icmFjZWxlZnRCaWc9MTIzO2UuYnJhY2VsZWZ0YmlnPTEyMztlLmJyYWNlbGVmdGJpZ2c9MTIzO2UuYnJhY2VsZWZ0QmlnZz0xMjM7ZS5icmFjZXJpZ2h0QmlnPTEyNTtlLmJyYWNlcmlnaHRiaWc9MTI1O2UuYnJhY2VyaWdodGJpZ2c9MTI1O2UuYnJhY2VyaWdodEJpZ2c9MTI1O2UuYnJhY2tldGxlZnRiaWc9OTE7ZS5icmFja2V0bGVmdEJpZz05MTtlLmJyYWNrZXRsZWZ0YmlnZz05MTtlLmJyYWNrZXRsZWZ0QmlnZz05MTtlLmJyYWNrZXRyaWdodEJpZz05MztlLmJyYWNrZXRyaWdodGJpZz05MztlLmJyYWNrZXRyaWdodGJpZ2c9OTM7ZS5icmFja2V0cmlnaHRCaWdnPTkzO2UuY2VpbGluZ2xlZnRiaWc9ODk2ODtlLmNlaWxpbmdsZWZ0QmlnPTg5Njg7ZS5jZWlsaW5nbGVmdEJpZ2c9ODk2ODtlLmNlaWxpbmdsZWZ0YmlnZz04OTY4O2UuY2VpbGluZ3JpZ2h0YmlnPTg5Njk7ZS5jZWlsaW5ncmlnaHRCaWc9ODk2OTtlLmNlaWxpbmdyaWdodGJpZ2c9ODk2OTtlLmNlaWxpbmdyaWdodEJpZ2c9ODk2OTtlLmNpcmNsZWRvdGRpc3BsYXk9ODg1NztlLmNpcmNsZWRvdHRleHQ9ODg1NztlLmNpcmNsZW11bHRpcGx5ZGlzcGxheT04ODU1O2UuY2lyY2xlbXVsdGlwbHl0ZXh0PTg4NTU7ZS5jaXJjbGVwbHVzZGlzcGxheT04ODUzO2UuY2lyY2xlcGx1c3RleHQ9ODg1MztlLmNvbnRpbnRlZ3JhbGRpc3BsYXk9ODc1MDtlLmNvbnRpbnRlZ3JhbHRleHQ9ODc1MDtlLmNvcHJvZHVjdGRpc3BsYXk9ODcyMDtlLmNvcHJvZHVjdHRleHQ9ODcyMDtlLmZsb29ybGVmdEJpZz04OTcwO2UuZmxvb3JsZWZ0YmlnPTg5NzA7ZS5mbG9vcmxlZnRiaWdnPTg5NzA7ZS5mbG9vcmxlZnRCaWdnPTg5NzA7ZS5mbG9vcnJpZ2h0YmlnPTg5NzE7ZS5mbG9vcnJpZ2h0QmlnPTg5NzE7ZS5mbG9vcnJpZ2h0QmlnZz04OTcxO2UuZmxvb3JyaWdodGJpZ2c9ODk3MTtlLmhhdHdpZGU9NzcwO2UuaGF0d2lkZXI9NzcwO2UuaGF0d2lkZXN0PTc3MDtlLmludGVyY2FsPTc0ODg7ZS5pbnRlZ3JhbGRpc3BsYXk9ODc0NztlLmludGVncmFsdGV4dD04NzQ3O2UuaW50ZXJzZWN0aW9uZGlzcGxheT04ODk4O2UuaW50ZXJzZWN0aW9udGV4dD04ODk4O2UubG9naWNhbGFuZGRpc3BsYXk9ODc0MztlLmxvZ2ljYWxhbmR0ZXh0PTg3NDM7ZS5sb2dpY2Fsb3JkaXNwbGF5PTg3NDQ7ZS5sb2dpY2Fsb3J0ZXh0PTg3NDQ7ZS5wYXJlbmxlZnRCaWc9NDA7ZS5wYXJlbmxlZnRiaWc9NDA7ZS5wYXJlbmxlZnRCaWdnPTQwO2UucGFyZW5sZWZ0YmlnZz00MDtlLnBhcmVucmlnaHRCaWc9NDE7ZS5wYXJlbnJpZ2h0YmlnPTQxO2UucGFyZW5yaWdodEJpZ2c9NDE7ZS5wYXJlbnJpZ2h0YmlnZz00MTtlLnByaW1lPTgyNDI7ZS5wcm9kdWN0ZGlzcGxheT04NzE5O2UucHJvZHVjdHRleHQ9ODcxOTtlLnJhZGljYWxiaWc9ODczMDtlLnJhZGljYWxCaWc9ODczMDtlLnJhZGljYWxCaWdnPTg3MzA7ZS5yYWRpY2FsYmlnZz04NzMwO2UucmFkaWNhbGJ0PTg3MzA7ZS5yYWRpY2FsdHA9ODczMDtlLnJhZGljYWx2ZXJ0ZXg9ODczMDtlLnNsYXNoYmlnPTQ3O2Uuc2xhc2hCaWc9NDc7ZS5zbGFzaEJpZ2c9NDc7ZS5zbGFzaGJpZ2c9NDc7ZS5zdW1tYXRpb25kaXNwbGF5PTg3MjE7ZS5zdW1tYXRpb250ZXh0PTg3MjE7ZS50aWxkZXdpZGU9NzMyO2UudGlsZGV3aWRlcj03MzI7ZS50aWxkZXdpZGVzdD03MzI7ZS51bmlvbmRpc3BsYXk9ODg5OTtlLnVuaW9ubXVsdGlkaXNwbGF5PTg4NDY7ZS51bmlvbm11bHRpdGV4dD04ODQ2O2UudW5pb25zcWRpc3BsYXk9ODg1MjtlLnVuaW9uc3F0ZXh0PTg4NTI7ZS51bmlvbnRleHQ9ODg5OTtlLnZleHRlbmRkb3VibGU9ODc0MTtlLnZleHRlbmRzaW5nbGU9ODczOX0pKSxHaT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2Uuc3BhY2U9MzI7ZS5hMT05OTg1O2UuYTI9OTk4NjtlLmEyMDI9OTk4NztlLmEzPTk5ODg7ZS5hND05NzQyO2UuYTU9OTk5MDtlLmExMTk9OTk5MTtlLmExMTg9OTk5MjtlLmExMTc9OTk5MztlLmExMT05NzU1O2UuYTEyPTk3NTg7ZS5hMTM9OTk5NjtlLmExND05OTk3O2UuYTE1PTk5OTg7ZS5hMTY9OTk5OTtlLmExMDU9MWU0O2UuYTE3PTEwMDAxO2UuYTE4PTEwMDAyO2UuYTE5PTEwMDAzO2UuYTIwPTEwMDA0O2UuYTIxPTEwMDA1O2UuYTIyPTEwMDA2O2UuYTIzPTEwMDA3O2UuYTI0PTEwMDA4O2UuYTI1PTEwMDA5O2UuYTI2PTEwMDEwO2UuYTI3PTEwMDExO2UuYTI4PTEwMDEyO2UuYTY9MTAwMTM7ZS5hNz0xMDAxNDtlLmE4PTEwMDE1O2UuYTk9MTAwMTY7ZS5hMTA9MTAwMTc7ZS5hMjk9MTAwMTg7ZS5hMzA9MTAwMTk7ZS5hMzE9MTAwMjA7ZS5hMzI9MTAwMjE7ZS5hMzM9MTAwMjI7ZS5hMzQ9MTAwMjM7ZS5hMzU9OTczMztlLmEzNj0xMDAyNTtlLmEzNz0xMDAyNjtlLmEzOD0xMDAyNztlLmEzOT0xMDAyODtlLmE0MD0xMDAyOTtlLmE0MT0xMDAzMDtlLmE0Mj0xMDAzMTtlLmE0Mz0xMDAzMjtlLmE0ND0xMDAzMztlLmE0NT0xMDAzNDtlLmE0Nj0xMDAzNTtlLmE0Nz0xMDAzNjtlLmE0OD0xMDAzNztlLmE0OT0xMDAzODtlLmE1MD0xMDAzOTtlLmE1MT0xMDA0MDtlLmE1Mj0xMDA0MTtlLmE1Mz0xMDA0MjtlLmE1ND0xMDA0MztlLmE1NT0xMDA0NDtlLmE1Nj0xMDA0NTtlLmE1Nz0xMDA0NjtlLmE1OD0xMDA0NztlLmE1OT0xMDA0ODtlLmE2MD0xMDA0OTtlLmE2MT0xMDA1MDtlLmE2Mj0xMDA1MTtlLmE2Mz0xMDA1MjtlLmE2ND0xMDA1MztlLmE2NT0xMDA1NDtlLmE2Nj0xMDA1NTtlLmE2Nz0xMDA1NjtlLmE2OD0xMDA1NztlLmE2OT0xMDA1ODtlLmE3MD0xMDA1OTtlLmE3MT05Njc5O2UuYTcyPTEwMDYxO2UuYTczPTk2MzI7ZS5hNzQ9MTAwNjM7ZS5hMjAzPTEwMDY0O2UuYTc1PTEwMDY1O2UuYTIwND0xMDA2NjtlLmE3Nj05NjUwO2UuYTc3PTk2NjA7ZS5hNzg9OTY3MDtlLmE3OT0xMDA3MDtlLmE4MT05Njg3O2UuYTgyPTEwMDcyO2UuYTgzPTEwMDczO2UuYTg0PTEwMDc0O2UuYTk3PTEwMDc1O2UuYTk4PTEwMDc2O2UuYTk5PTEwMDc3O2UuYTEwMD0xMDA3ODtlLmExMDE9MTAwODE7ZS5hMTAyPTEwMDgyO2UuYTEwMz0xMDA4MztlLmExMDQ9MTAwODQ7ZS5hMTA2PTEwMDg1O2UuYTEwNz0xMDA4NjtlLmExMDg9MTAwODc7ZS5hMTEyPTk4Mjc7ZS5hMTExPTk4MzA7ZS5hMTEwPTk4Mjk7ZS5hMTA5PTk4MjQ7ZS5hMTIwPTkzMTI7ZS5hMTIxPTkzMTM7ZS5hMTIyPTkzMTQ7ZS5hMTIzPTkzMTU7ZS5hMTI0PTkzMTY7ZS5hMTI1PTkzMTc7ZS5hMTI2PTkzMTg7ZS5hMTI3PTkzMTk7ZS5hMTI4PTkzMjA7ZS5hMTI5PTkzMjE7ZS5hMTMwPTEwMTAyO2UuYTEzMT0xMDEwMztlLmExMzI9MTAxMDQ7ZS5hMTMzPTEwMTA1O2UuYTEzND0xMDEwNjtlLmExMzU9MTAxMDc7ZS5hMTM2PTEwMTA4O2UuYTEzNz0xMDEwOTtlLmExMzg9MTAxMTA7ZS5hMTM5PTEwMTExO2UuYTE0MD0xMDExMjtlLmExNDE9MTAxMTM7ZS5hMTQyPTEwMTE0O2UuYTE0Mz0xMDExNTtlLmExNDQ9MTAxMTY7ZS5hMTQ1PTEwMTE3O2UuYTE0Nj0xMDExODtlLmExNDc9MTAxMTk7ZS5hMTQ4PTEwMTIwO2UuYTE0OT0xMDEyMTtlLmExNTA9MTAxMjI7ZS5hMTUxPTEwMTIzO2UuYTE1Mj0xMDEyNDtlLmExNTM9MTAxMjU7ZS5hMTU0PTEwMTI2O2UuYTE1NT0xMDEyNztlLmExNTY9MTAxMjg7ZS5hMTU3PTEwMTI5O2UuYTE1OD0xMDEzMDtlLmExNTk9MTAxMzE7ZS5hMTYwPTEwMTMyO2UuYTE2MT04NTk0O2UuYTE2Mz04NTk2O2UuYTE2ND04NTk3O2UuYTE5Nj0xMDEzNjtlLmExNjU9MTAxMzc7ZS5hMTkyPTEwMTM4O2UuYTE2Nj0xMDEzOTtlLmExNjc9MTAxNDA7ZS5hMTY4PTEwMTQxO2UuYTE2OT0xMDE0MjtlLmExNzA9MTAxNDM7ZS5hMTcxPTEwMTQ0O2UuYTE3Mj0xMDE0NTtlLmExNzM9MTAxNDY7ZS5hMTYyPTEwMTQ3O2UuYTE3ND0xMDE0ODtlLmExNzU9MTAxNDk7ZS5hMTc2PTEwMTUwO2UuYTE3Nz0xMDE1MTtlLmExNzg9MTAxNTI7ZS5hMTc5PTEwMTUzO2UuYTE5Mz0xMDE1NDtlLmExODA9MTAxNTU7ZS5hMTk5PTEwMTU2O2UuYTE4MT0xMDE1NztlLmEyMDA9MTAxNTg7ZS5hMTgyPTEwMTU5O2UuYTIwMT0xMDE2MTtlLmExODM9MTAxNjI7ZS5hMTg0PTEwMTYzO2UuYTE5Nz0xMDE2NDtlLmExODU9MTAxNjU7ZS5hMTk0PTEwMTY2O2UuYTE5OD0xMDE2NztlLmExODY9MTAxNjg7ZS5hMTk1PTEwMTY5O2UuYTE4Nz0xMDE3MDtlLmExODg9MTAxNzE7ZS5hMTg5PTEwMTcyO2UuYTE5MD0xMDE3MztlLmExOTE9MTAxNzQ7ZS5hODk9MTAwODg7ZS5hOTA9MTAwODk7ZS5hOTM9MTAwOTA7ZS5hOTQ9MTAwOTE7ZS5hOTE9MTAwOTI7ZS5hOTI9MTAwOTM7ZS5hMjA1PTEwMDk0O2UuYTg1PTEwMDk1O2UuYTIwNj0xMDA5NjtlLmE4Nj0xMDA5NztlLmE4Nz0xMDA5ODtlLmE4OD0xMDA5OTtlLmE5NT0xMDEwMDtlLmE5Nj0xMDEwMTtlWyIubm90ZGVmIl09MH0pKSx4aT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2VbNjM3MjFdPTE2OTtlWzYzMTkzXT0xNjk7ZVs2MzcyMF09MTc0O2VbNjMxOTRdPTE3NDtlWzYzNzIyXT04NDgyO2VbNjMxOTVdPTg0ODI7ZVs2MzcyOV09OTEyNztlWzYzNzMwXT05MTI4O2VbNjM3MzFdPTkxMjk7ZVs2Mzc0MF09OTEzMTtlWzYzNzQxXT05MTMyO2VbNjM3NDJdPTkxMzM7ZVs2MzcyNl09OTEyMTtlWzYzNzI3XT05MTIyO2VbNjM3MjhdPTkxMjM7ZVs2MzczN109OTEyNDtlWzYzNzM4XT05MTI1O2VbNjM3MzldPTkxMjY7ZVs2MzcyM109OTExNTtlWzYzNzI0XT05MTE2O2VbNjM3MjVdPTkxMTc7ZVs2MzczNF09OTExODtlWzYzNzM1XT05MTE5O2VbNjM3MzZdPTkxMjB9KSk7ZnVuY3Rpb24gZ2V0VW5pY29kZUZvckdseXBoKGUsdCl7bGV0IGk9dFtlXTtpZih2b2lkIDAhPT1pKXJldHVybiBpO2lmKCFlKXJldHVybi0xO2lmKCJ1Ij09PWVbMF0pe2NvbnN0IHQ9ZS5sZW5ndGg7bGV0IGE7aWYoNz09PXQmJiJuIj09PWVbMV0mJiJpIj09PWVbMl0pYT1lLnN1YnN0cmluZygzKTtlbHNle2lmKCEodD49NSYmdDw9NykpcmV0dXJuLTE7YT1lLnN1YnN0cmluZygxKX1pZihhPT09YS50b1VwcGVyQ2FzZSgpKXtpPXBhcnNlSW50KGEsMTYpO2lmKGk+PTApcmV0dXJuIGl9fXJldHVybi0xfWNvbnN0IE1pPVtbMCwxMjddLFsxMjgsMjU1XSxbMjU2LDM4M10sWzM4NCw1OTFdLFs1OTIsNjg3LDc0MjQsNzU1MSw3NTUyLDc2MTVdLFs2ODgsNzY3LDQyNzUyLDQyNzgzXSxbNzY4LDg3OSw3NjE2LDc2NzldLFs4ODAsMTAyM10sWzExMzkyLDExNTE5XSxbMTAyNCwxMjc5LDEyODAsMTMyNywxMTc0NCwxMTc3NSw0MjU2MCw0MjY1NV0sWzEzMjgsMTQyM10sWzE0MjQsMTUzNV0sWzQyMjQwLDQyNTU5XSxbMTUzNiwxNzkxLDE4NzIsMTkxOV0sWzE5ODQsMjA0N10sWzIzMDQsMjQzMV0sWzI0MzIsMjU1OV0sWzI1NjAsMjY4N10sWzI2ODgsMjgxNV0sWzI4MTYsMjk0M10sWzI5NDQsMzA3MV0sWzMwNzIsMzE5OV0sWzMyMDAsMzMyN10sWzMzMjgsMzQ1NV0sWzM1ODQsMzcxMV0sWzM3MTIsMzgzOV0sWzQyNTYsNDM1MSwxMTUyMCwxMTU2N10sWzY5MTIsNzAzOV0sWzQzNTIsNDYwN10sWzc2ODAsNzkzNSwxMTM2MCwxMTM5MSw0Mjc4NCw0MzAwN10sWzc5MzYsODE5MV0sWzgxOTIsODMwMywxMTc3NiwxMTkwM10sWzgzMDQsODM1MV0sWzgzNTIsODM5OV0sWzg0MDAsODQ0N10sWzg0NDgsODUyN10sWzg1MjgsODU5MV0sWzg1OTIsODcwMywxMDIyNCwxMDIzOSwxMDQ5NiwxMDYyMywxMTAwOCwxMTI2M10sWzg3MDQsODk1OSwxMDc1MiwxMTAwNywxMDE3NiwxMDIyMywxMDYyNCwxMDc1MV0sWzg5NjAsOTIxNV0sWzkyMTYsOTI3OV0sWzkyODAsOTMxMV0sWzkzMTIsOTQ3MV0sWzk0NzIsOTU5OV0sWzk2MDAsOTYzMV0sWzk2MzIsOTcyN10sWzk3MjgsOTk4M10sWzk5ODQsMTAxNzVdLFsxMjI4OCwxMjM1MV0sWzEyMzUyLDEyNDQ3XSxbMTI0NDgsMTI1NDMsMTI3ODQsMTI3OTldLFsxMjU0NCwxMjU5MSwxMjcwNCwxMjczNV0sWzEyNTkyLDEyNjg3XSxbNDMwNzIsNDMxMzVdLFsxMjgwMCwxMzA1NV0sWzEzMDU2LDEzMzExXSxbNDQwMzIsNTUyMTVdLFs1NTI5Niw1NzM0M10sWzY3ODQwLDY3ODcxXSxbMTk5NjgsNDA5NTksMTE5MDQsMTIwMzEsMTIwMzIsMTIyNTUsMTIyNzIsMTIyODcsMTMzMTIsMTk5MDMsMTMxMDcyLDE3Mzc5MSwxMjY4OCwxMjcwM10sWzU3MzQ0LDYzNzQzXSxbMTI3MzYsMTI3ODMsNjM3NDQsNjQyNTUsMTk0NTYwLDE5NTEwM10sWzY0MjU2LDY0MzM1XSxbNjQzMzYsNjUwMjNdLFs2NTA1Niw2NTA3MV0sWzY1MDQwLDY1MDU1XSxbNjUxMDQsNjUxMzVdLFs2NTEzNiw2NTI3OV0sWzY1MjgwLDY1NTE5XSxbNjU1MjAsNjU1MzVdLFszODQwLDQwOTVdLFsxNzkyLDE4NzFdLFsxOTIwLDE5ODNdLFszNDU2LDM1ODNdLFs0MDk2LDQyNTVdLFs0NjA4LDQ5OTEsNDk5Miw1MDIzLDExNjQ4LDExNzQzXSxbNTAyNCw1MTE5XSxbNTEyMCw1NzU5XSxbNTc2MCw1NzkxXSxbNTc5Miw1ODg3XSxbNjAxNiw2MTQzXSxbNjE0NCw2MzE5XSxbMTAyNDAsMTA0OTVdLFs0MDk2MCw0MjEyN10sWzU4ODgsNTkxOSw1OTIwLDU5NTEsNTk1Miw1OTgzLDU5ODQsNjAxNV0sWzY2MzA0LDY2MzUxXSxbNjYzNTIsNjYzODNdLFs2NjU2MCw2NjYzOV0sWzExODc4NCwxMTkwMzksMTE5MDQwLDExOTI5NSwxMTkyOTYsMTE5Mzc1XSxbMTE5ODA4LDEyMDgzMV0sWzEwNDQ0ODAsMTA0ODU3M10sWzY1MDI0LDY1MDM5LDkxNzc2MCw5MTc5OTldLFs5MTc1MDQsOTE3NjMxXSxbNjQwMCw2NDc5XSxbNjQ4MCw2NTI3XSxbNjUyOCw2NjIzXSxbNjY1Niw2Njg3XSxbMTEyNjQsMTEzNTldLFsxMTU2OCwxMTY0N10sWzE5OTA0LDE5OTY3XSxbNDMwMDgsNDMwNTVdLFs2NTUzNiw2NTY2Myw2NTY2NCw2NTc5MSw2NTc5Miw2NTg1NV0sWzY1ODU2LDY1OTM1XSxbNjY0MzIsNjY0NjNdLFs2NjQ2NCw2NjUyN10sWzY2NjQwLDY2Njg3XSxbNjY2ODgsNjY3MzVdLFs2NzU4NCw2NzY0N10sWzY4MDk2LDY4MTkxXSxbMTE5NTUyLDExOTY0N10sWzczNzI4LDc0NzUxLDc0NzUyLDc0ODc5XSxbMTE5NjQ4LDExOTY3OV0sWzcwNDAsNzEwM10sWzcxNjgsNzI0N10sWzcyNDgsNzI5NV0sWzQzMTM2LDQzMjMxXSxbNDMyNjQsNDMzMTFdLFs0MzMxMiw0MzM1OV0sWzQzNTIwLDQzNjE1XSxbNjU5MzYsNjU5OTldLFs2NmUzLDY2MDQ3XSxbNjYyMDgsNjYyNzEsNjYxNzYsNjYyMDcsNjc4NzIsNjc5MDNdLFsxMjcwMjQsMTI3MTM1LDEyNjk3NiwxMjcwMjNdXTtmdW5jdGlvbiBnZXRVbmljb2RlUmFuZ2VGb3IoZSx0PS0xKXtpZigtMSE9PXQpe2NvbnN0IGk9TWlbdF07Zm9yKGxldCBhPTAscz1pLmxlbmd0aDthPHM7YSs9MilpZihlPj1pW2FdJiZlPD1pW2ErMV0pcmV0dXJuIHR9Zm9yKGxldCB0PTAsaT1NaS5sZW5ndGg7dDxpO3QrKyl7Y29uc3QgaT1NaVt0XTtmb3IobGV0IGE9MCxzPWkubGVuZ3RoO2E8czthKz0yKWlmKGU+PWlbYV0mJmU8PWlbYSsxXSlyZXR1cm4gdH1yZXR1cm4tMX1jb25zdCBKaT1uZXcgUmVnRXhwKCJeKFxccyl8KFxccHtNbn0pfChcXHB7Q2Z9KSQiLCJ1IiksSGk9bmV3IE1hcDtjb25zdCBZaT0hMCx2aT0xLEtpPTIsVGk9NCxxaT0zMixPaT1bIi5ub3RkZWYiLCIubnVsbCIsIm5vbm1hcmtpbmdyZXR1cm4iLCJzcGFjZSIsImV4Y2xhbSIsInF1b3RlZGJsIiwibnVtYmVyc2lnbiIsImRvbGxhciIsInBlcmNlbnQiLCJhbXBlcnNhbmQiLCJxdW90ZXNpbmdsZSIsInBhcmVubGVmdCIsInBhcmVucmlnaHQiLCJhc3RlcmlzayIsInBsdXMiLCJjb21tYSIsImh5cGhlbiIsInBlcmlvZCIsInNsYXNoIiwiemVybyIsIm9uZSIsInR3byIsInRocmVlIiwiZm91ciIsImZpdmUiLCJzaXgiLCJzZXZlbiIsImVpZ2h0IiwibmluZSIsImNvbG9uIiwic2VtaWNvbG9uIiwibGVzcyIsImVxdWFsIiwiZ3JlYXRlciIsInF1ZXN0aW9uIiwiYXQiLCJBIiwiQiIsIkMiLCJEIiwiRSIsIkYiLCJHIiwiSCIsIkkiLCJKIiwiSyIsIkwiLCJNIiwiTiIsIk8iLCJQIiwiUSIsIlIiLCJTIiwiVCIsIlUiLCJWIiwiVyIsIlgiLCJZIiwiWiIsImJyYWNrZXRsZWZ0IiwiYmFja3NsYXNoIiwiYnJhY2tldHJpZ2h0IiwiYXNjaWljaXJjdW0iLCJ1bmRlcnNjb3JlIiwiZ3JhdmUiLCJhIiwiYiIsImMiLCJkIiwiZSIsImYiLCJnIiwiaCIsImkiLCJqIiwiayIsImwiLCJtIiwibiIsIm8iLCJwIiwicSIsInIiLCJzIiwidCIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsImJyYWNlbGVmdCIsImJhciIsImJyYWNlcmlnaHQiLCJhc2NpaXRpbGRlIiwiQWRpZXJlc2lzIiwiQXJpbmciLCJDY2VkaWxsYSIsIkVhY3V0ZSIsIk50aWxkZSIsIk9kaWVyZXNpcyIsIlVkaWVyZXNpcyIsImFhY3V0ZSIsImFncmF2ZSIsImFjaXJjdW1mbGV4IiwiYWRpZXJlc2lzIiwiYXRpbGRlIiwiYXJpbmciLCJjY2VkaWxsYSIsImVhY3V0ZSIsImVncmF2ZSIsImVjaXJjdW1mbGV4IiwiZWRpZXJlc2lzIiwiaWFjdXRlIiwiaWdyYXZlIiwiaWNpcmN1bWZsZXgiLCJpZGllcmVzaXMiLCJudGlsZGUiLCJvYWN1dGUiLCJvZ3JhdmUiLCJvY2lyY3VtZmxleCIsIm9kaWVyZXNpcyIsIm90aWxkZSIsInVhY3V0ZSIsInVncmF2ZSIsInVjaXJjdW1mbGV4IiwidWRpZXJlc2lzIiwiZGFnZ2VyIiwiZGVncmVlIiwiY2VudCIsInN0ZXJsaW5nIiwic2VjdGlvbiIsImJ1bGxldCIsInBhcmFncmFwaCIsImdlcm1hbmRibHMiLCJyZWdpc3RlcmVkIiwiY29weXJpZ2h0IiwidHJhZGVtYXJrIiwiYWN1dGUiLCJkaWVyZXNpcyIsIm5vdGVxdWFsIiwiQUUiLCJPc2xhc2giLCJpbmZpbml0eSIsInBsdXNtaW51cyIsImxlc3NlcXVhbCIsImdyZWF0ZXJlcXVhbCIsInllbiIsIm11IiwicGFydGlhbGRpZmYiLCJzdW1tYXRpb24iLCJwcm9kdWN0IiwicGkiLCJpbnRlZ3JhbCIsIm9yZGZlbWluaW5lIiwib3JkbWFzY3VsaW5lIiwiT21lZ2EiLCJhZSIsIm9zbGFzaCIsInF1ZXN0aW9uZG93biIsImV4Y2xhbWRvd24iLCJsb2dpY2Fsbm90IiwicmFkaWNhbCIsImZsb3JpbiIsImFwcHJveGVxdWFsIiwiRGVsdGEiLCJndWlsbGVtb3RsZWZ0IiwiZ3VpbGxlbW90cmlnaHQiLCJlbGxpcHNpcyIsIm5vbmJyZWFraW5nc3BhY2UiLCJBZ3JhdmUiLCJBdGlsZGUiLCJPdGlsZGUiLCJPRSIsIm9lIiwiZW5kYXNoIiwiZW1kYXNoIiwicXVvdGVkYmxsZWZ0IiwicXVvdGVkYmxyaWdodCIsInF1b3RlbGVmdCIsInF1b3RlcmlnaHQiLCJkaXZpZGUiLCJsb3plbmdlIiwieWRpZXJlc2lzIiwiWWRpZXJlc2lzIiwiZnJhY3Rpb24iLCJjdXJyZW5jeSIsImd1aWxzaW5nbGxlZnQiLCJndWlsc2luZ2xyaWdodCIsImZpIiwiZmwiLCJkYWdnZXJkYmwiLCJwZXJpb2RjZW50ZXJlZCIsInF1b3Rlc2luZ2xiYXNlIiwicXVvdGVkYmxiYXNlIiwicGVydGhvdXNhbmQiLCJBY2lyY3VtZmxleCIsIkVjaXJjdW1mbGV4IiwiQWFjdXRlIiwiRWRpZXJlc2lzIiwiRWdyYXZlIiwiSWFjdXRlIiwiSWNpcmN1bWZsZXgiLCJJZGllcmVzaXMiLCJJZ3JhdmUiLCJPYWN1dGUiLCJPY2lyY3VtZmxleCIsImFwcGxlIiwiT2dyYXZlIiwiVWFjdXRlIiwiVWNpcmN1bWZsZXgiLCJVZ3JhdmUiLCJkb3RsZXNzaSIsImNpcmN1bWZsZXgiLCJ0aWxkZSIsIm1hY3JvbiIsImJyZXZlIiwiZG90YWNjZW50IiwicmluZyIsImNlZGlsbGEiLCJodW5nYXJ1bWxhdXQiLCJvZ29uZWsiLCJjYXJvbiIsIkxzbGFzaCIsImxzbGFzaCIsIlNjYXJvbiIsInNjYXJvbiIsIlpjYXJvbiIsInpjYXJvbiIsImJyb2tlbmJhciIsIkV0aCIsImV0aCIsIllhY3V0ZSIsInlhY3V0ZSIsIlRob3JuIiwidGhvcm4iLCJtaW51cyIsIm11bHRpcGx5Iiwib25lc3VwZXJpb3IiLCJ0d29zdXBlcmlvciIsInRocmVlc3VwZXJpb3IiLCJvbmVoYWxmIiwib25lcXVhcnRlciIsInRocmVlcXVhcnRlcnMiLCJmcmFuYyIsIkdicmV2ZSIsImdicmV2ZSIsIklkb3RhY2NlbnQiLCJTY2VkaWxsYSIsInNjZWRpbGxhIiwiQ2FjdXRlIiwiY2FjdXRlIiwiQ2Nhcm9uIiwiY2Nhcm9uIiwiZGNyb2F0Il07ZnVuY3Rpb24gcmVjb3ZlckdseXBoTmFtZShlLHQpe2lmKHZvaWQgMCE9PXRbZV0pcmV0dXJuIGU7Y29uc3QgaT1nZXRVbmljb2RlRm9yR2x5cGgoZSx0KTtpZigtMSE9PWkpZm9yKGNvbnN0IGUgaW4gdClpZih0W2VdPT09aSlyZXR1cm4gZTtpbmZvKCJVbmFibGUgdG8gcmVjb3ZlciBhIHN0YW5kYXJkIGdseXBoIG5hbWUgZm9yOiAiK2UpO3JldHVybiBlfWZ1bmN0aW9uIHR5cGUxRm9udEdseXBoTWFwcGluZyhlLHQsaSl7Y29uc3QgYT1PYmplY3QuY3JlYXRlKG51bGwpO2xldCBzLHIsbjtjb25zdCBvPSEhKGUuZmxhZ3MmVGkpO2lmKGUuaXNJbnRlcm5hbEZvbnQpe249dDtmb3Iocj0wO3I8bi5sZW5ndGg7cisrKXtzPWkuaW5kZXhPZihuW3JdKTthW3JdPXM+PTA/czowfX1lbHNlIGlmKGUuYmFzZUVuY29kaW5nTmFtZSl7bj1nZXRFbmNvZGluZyhlLmJhc2VFbmNvZGluZ05hbWUpO2ZvcihyPTA7cjxuLmxlbmd0aDtyKyspe3M9aS5pbmRleE9mKG5bcl0pO2Fbcl09cz49MD9zOjB9fWVsc2UgaWYobylmb3IociBpbiB0KWFbcl09dFtyXTtlbHNle249Zmk7Zm9yKHI9MDtyPG4ubGVuZ3RoO3IrKyl7cz1pLmluZGV4T2YobltyXSk7YVtyXT1zPj0wP3M6MH19Y29uc3QgZz1lLmRpZmZlcmVuY2VzO2xldCBjO2lmKGcpZm9yKHIgaW4gZyl7Y29uc3QgZT1nW3JdO3M9aS5pbmRleE9mKGUpO2lmKC0xPT09cyl7Y3x8KGM9TmkoKSk7Y29uc3QgdD1yZWNvdmVyR2x5cGhOYW1lKGUsYyk7dCE9PWUmJihzPWkuaW5kZXhPZih0KSl9YVtyXT1zPj0wP3M6MH1yZXR1cm4gYX1mdW5jdGlvbiBub3JtYWxpemVGb250TmFtZShlKXtyZXR1cm4gZS5yZXBsYWNlQWxsKC9bLF9dL2csIi0iKS5yZXBsYWNlQWxsKC9ccy9nLCIiKX1jb25zdCBQaT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2VbIlRpbWVzLVJvbWFuIl09IlRpbWVzLVJvbWFuIjtlLkhlbHZldGljYT0iSGVsdmV0aWNhIjtlLkNvdXJpZXI9IkNvdXJpZXIiO2UuU3ltYm9sPSJTeW1ib2wiO2VbIlRpbWVzLUJvbGQiXT0iVGltZXMtQm9sZCI7ZVsiSGVsdmV0aWNhLUJvbGQiXT0iSGVsdmV0aWNhLUJvbGQiO2VbIkNvdXJpZXItQm9sZCJdPSJDb3VyaWVyLUJvbGQiO2UuWmFwZkRpbmdiYXRzPSJaYXBmRGluZ2JhdHMiO2VbIlRpbWVzLUl0YWxpYyJdPSJUaW1lcy1JdGFsaWMiO2VbIkhlbHZldGljYS1PYmxpcXVlIl09IkhlbHZldGljYS1PYmxpcXVlIjtlWyJDb3VyaWVyLU9ibGlxdWUiXT0iQ291cmllci1PYmxpcXVlIjtlWyJUaW1lcy1Cb2xkSXRhbGljIl09IlRpbWVzLUJvbGRJdGFsaWMiO2VbIkhlbHZldGljYS1Cb2xkT2JsaXF1ZSJdPSJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUiO2VbIkNvdXJpZXItQm9sZE9ibGlxdWUiXT0iQ291cmllci1Cb2xkT2JsaXF1ZSI7ZS5BcmlhbE5hcnJvdz0iSGVsdmV0aWNhIjtlWyJBcmlhbE5hcnJvdy1Cb2xkIl09IkhlbHZldGljYS1Cb2xkIjtlWyJBcmlhbE5hcnJvdy1Cb2xkSXRhbGljIl09IkhlbHZldGljYS1Cb2xkT2JsaXF1ZSI7ZVsiQXJpYWxOYXJyb3ctSXRhbGljIl09IkhlbHZldGljYS1PYmxpcXVlIjtlLkFyaWFsQmxhY2s9IkhlbHZldGljYSI7ZVsiQXJpYWxCbGFjay1Cb2xkIl09IkhlbHZldGljYS1Cb2xkIjtlWyJBcmlhbEJsYWNrLUJvbGRJdGFsaWMiXT0iSGVsdmV0aWNhLUJvbGRPYmxpcXVlIjtlWyJBcmlhbEJsYWNrLUl0YWxpYyJdPSJIZWx2ZXRpY2EtT2JsaXF1ZSI7ZVsiQXJpYWwtQmxhY2siXT0iSGVsdmV0aWNhIjtlWyJBcmlhbC1CbGFjay1Cb2xkIl09IkhlbHZldGljYS1Cb2xkIjtlWyJBcmlhbC1CbGFjay1Cb2xkSXRhbGljIl09IkhlbHZldGljYS1Cb2xkT2JsaXF1ZSI7ZVsiQXJpYWwtQmxhY2stSXRhbGljIl09IkhlbHZldGljYS1PYmxpcXVlIjtlLkFyaWFsPSJIZWx2ZXRpY2EiO2VbIkFyaWFsLUJvbGQiXT0iSGVsdmV0aWNhLUJvbGQiO2VbIkFyaWFsLUJvbGRJdGFsaWMiXT0iSGVsdmV0aWNhLUJvbGRPYmxpcXVlIjtlWyJBcmlhbC1JdGFsaWMiXT0iSGVsdmV0aWNhLU9ibGlxdWUiO2UuQXJpYWxNVD0iSGVsdmV0aWNhIjtlWyJBcmlhbC1Cb2xkSXRhbGljTVQiXT0iSGVsdmV0aWNhLUJvbGRPYmxpcXVlIjtlWyJBcmlhbC1Cb2xkTVQiXT0iSGVsdmV0aWNhLUJvbGQiO2VbIkFyaWFsLUl0YWxpY01UIl09IkhlbHZldGljYS1PYmxpcXVlIjtlWyJBcmlhbC1Cb2xkSXRhbGljTVQtQm9sZEl0YWxpYyJdPSJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUiO2VbIkFyaWFsLUJvbGRNVC1Cb2xkIl09IkhlbHZldGljYS1Cb2xkIjtlWyJBcmlhbC1JdGFsaWNNVC1JdGFsaWMiXT0iSGVsdmV0aWNhLU9ibGlxdWUiO2UuQXJpYWxVbmljb2RlTVM9IkhlbHZldGljYSI7ZVsiQXJpYWxVbmljb2RlTVMtQm9sZCJdPSJIZWx2ZXRpY2EtQm9sZCI7ZVsiQXJpYWxVbmljb2RlTVMtQm9sZEl0YWxpYyJdPSJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUiO2VbIkFyaWFsVW5pY29kZU1TLUl0YWxpYyJdPSJIZWx2ZXRpY2EtT2JsaXF1ZSI7ZVsiQ291cmllci1Cb2xkSXRhbGljIl09IkNvdXJpZXItQm9sZE9ibGlxdWUiO2VbIkNvdXJpZXItSXRhbGljIl09IkNvdXJpZXItT2JsaXF1ZSI7ZS5Db3VyaWVyTmV3PSJDb3VyaWVyIjtlWyJDb3VyaWVyTmV3LUJvbGQiXT0iQ291cmllci1Cb2xkIjtlWyJDb3VyaWVyTmV3LUJvbGRJdGFsaWMiXT0iQ291cmllci1Cb2xkT2JsaXF1ZSI7ZVsiQ291cmllck5ldy1JdGFsaWMiXT0iQ291cmllci1PYmxpcXVlIjtlWyJDb3VyaWVyTmV3UFMtQm9sZEl0YWxpY01UIl09IkNvdXJpZXItQm9sZE9ibGlxdWUiO2VbIkNvdXJpZXJOZXdQUy1Cb2xkTVQiXT0iQ291cmllci1Cb2xkIjtlWyJDb3VyaWVyTmV3UFMtSXRhbGljTVQiXT0iQ291cmllci1PYmxpcXVlIjtlLkNvdXJpZXJOZXdQU01UPSJDb3VyaWVyIjtlWyJIZWx2ZXRpY2EtQm9sZEl0YWxpYyJdPSJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUiO2VbIkhlbHZldGljYS1JdGFsaWMiXT0iSGVsdmV0aWNhLU9ibGlxdWUiO2VbIlN5bWJvbC1Cb2xkIl09IlN5bWJvbCI7ZVsiU3ltYm9sLUJvbGRJdGFsaWMiXT0iU3ltYm9sIjtlWyJTeW1ib2wtSXRhbGljIl09IlN5bWJvbCI7ZS5UaW1lc05ld1JvbWFuPSJUaW1lcy1Sb21hbiI7ZVsiVGltZXNOZXdSb21hbi1Cb2xkIl09IlRpbWVzLUJvbGQiO2VbIlRpbWVzTmV3Um9tYW4tQm9sZEl0YWxpYyJdPSJUaW1lcy1Cb2xkSXRhbGljIjtlWyJUaW1lc05ld1JvbWFuLUl0YWxpYyJdPSJUaW1lcy1JdGFsaWMiO2UuVGltZXNOZXdSb21hblBTPSJUaW1lcy1Sb21hbiI7ZVsiVGltZXNOZXdSb21hblBTLUJvbGQiXT0iVGltZXMtQm9sZCI7ZVsiVGltZXNOZXdSb21hblBTLUJvbGRJdGFsaWMiXT0iVGltZXMtQm9sZEl0YWxpYyI7ZVsiVGltZXNOZXdSb21hblBTLUJvbGRJdGFsaWNNVCJdPSJUaW1lcy1Cb2xkSXRhbGljIjtlWyJUaW1lc05ld1JvbWFuUFMtQm9sZE1UIl09IlRpbWVzLUJvbGQiO2VbIlRpbWVzTmV3Um9tYW5QUy1JdGFsaWMiXT0iVGltZXMtSXRhbGljIjtlWyJUaW1lc05ld1JvbWFuUFMtSXRhbGljTVQiXT0iVGltZXMtSXRhbGljIjtlLlRpbWVzTmV3Um9tYW5QU01UPSJUaW1lcy1Sb21hbiI7ZVsiVGltZXNOZXdSb21hblBTTVQtQm9sZCJdPSJUaW1lcy1Cb2xkIjtlWyJUaW1lc05ld1JvbWFuUFNNVC1Cb2xkSXRhbGljIl09IlRpbWVzLUJvbGRJdGFsaWMiO2VbIlRpbWVzTmV3Um9tYW5QU01ULUl0YWxpYyJdPSJUaW1lcy1JdGFsaWMifSkpLFdpPWdldExvb2t1cFRhYmxlRmFjdG9yeSgoZnVuY3Rpb24oZSl7ZS5Db3VyaWVyPSJGb3hpdEZpeGVkLnBmYiI7ZVsiQ291cmllci1Cb2xkIl09IkZveGl0Rml4ZWRCb2xkLnBmYiI7ZVsiQ291cmllci1Cb2xkT2JsaXF1ZSJdPSJGb3hpdEZpeGVkQm9sZEl0YWxpYy5wZmIiO2VbIkNvdXJpZXItT2JsaXF1ZSJdPSJGb3hpdEZpeGVkSXRhbGljLnBmYiI7ZS5IZWx2ZXRpY2E9IkxpYmVyYXRpb25TYW5zLVJlZ3VsYXIudHRmIjtlWyJIZWx2ZXRpY2EtQm9sZCJdPSJMaWJlcmF0aW9uU2Fucy1Cb2xkLnR0ZiI7ZVsiSGVsdmV0aWNhLUJvbGRPYmxpcXVlIl09IkxpYmVyYXRpb25TYW5zLUJvbGRJdGFsaWMudHRmIjtlWyJIZWx2ZXRpY2EtT2JsaXF1ZSJdPSJMaWJlcmF0aW9uU2Fucy1JdGFsaWMudHRmIjtlWyJUaW1lcy1Sb21hbiJdPSJGb3hpdFNlcmlmLnBmYiI7ZVsiVGltZXMtQm9sZCJdPSJGb3hpdFNlcmlmQm9sZC5wZmIiO2VbIlRpbWVzLUJvbGRJdGFsaWMiXT0iRm94aXRTZXJpZkJvbGRJdGFsaWMucGZiIjtlWyJUaW1lcy1JdGFsaWMiXT0iRm94aXRTZXJpZkl0YWxpYy5wZmIiO2UuU3ltYm9sPSJGb3hpdFN5bWJvbC5wZmIiO2UuWmFwZkRpbmdiYXRzPSJGb3hpdERpbmdiYXRzLnBmYiI7ZVsiTGliZXJhdGlvblNhbnMtUmVndWxhciJdPSJMaWJlcmF0aW9uU2Fucy1SZWd1bGFyLnR0ZiI7ZVsiTGliZXJhdGlvblNhbnMtQm9sZCJdPSJMaWJlcmF0aW9uU2Fucy1Cb2xkLnR0ZiI7ZVsiTGliZXJhdGlvblNhbnMtSXRhbGljIl09IkxpYmVyYXRpb25TYW5zLUl0YWxpYy50dGYiO2VbIkxpYmVyYXRpb25TYW5zLUJvbGRJdGFsaWMiXT0iTGliZXJhdGlvblNhbnMtQm9sZEl0YWxpYy50dGYifSkpLFhpPWdldExvb2t1cFRhYmxlRmFjdG9yeSgoZnVuY3Rpb24oZSl7ZS5DYWxpYnJpPSJIZWx2ZXRpY2EiO2VbIkNhbGlicmktQm9sZCJdPSJIZWx2ZXRpY2EtQm9sZCI7ZVsiQ2FsaWJyaS1Cb2xkSXRhbGljIl09IkhlbHZldGljYS1Cb2xkT2JsaXF1ZSI7ZVsiQ2FsaWJyaS1JdGFsaWMiXT0iSGVsdmV0aWNhLU9ibGlxdWUiO2UuQ2VudHVyeUdvdGhpYz0iSGVsdmV0aWNhIjtlWyJDZW50dXJ5R290aGljLUJvbGQiXT0iSGVsdmV0aWNhLUJvbGQiO2VbIkNlbnR1cnlHb3RoaWMtQm9sZEl0YWxpYyJdPSJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUiO2VbIkNlbnR1cnlHb3RoaWMtSXRhbGljIl09IkhlbHZldGljYS1PYmxpcXVlIjtlLkNvbWljU2Fuc01TPSJDb21pYyBTYW5zIE1TIjtlWyJDb21pY1NhbnNNUy1Cb2xkIl09IkNvbWljIFNhbnMgTVMtQm9sZCI7ZVsiQ29taWNTYW5zTVMtQm9sZEl0YWxpYyJdPSJDb21pYyBTYW5zIE1TLUJvbGRJdGFsaWMiO2VbIkNvbWljU2Fuc01TLUl0YWxpYyJdPSJDb21pYyBTYW5zIE1TLUl0YWxpYyI7ZS5JbXBhY3Q9IkhlbHZldGljYSI7ZVsiSXRjU3ltYm9sLUJvbGQiXT0iSGVsdmV0aWNhLUJvbGQiO2VbIkl0Y1N5bWJvbC1Cb2xkSXRhbGljIl09IkhlbHZldGljYS1Cb2xkT2JsaXF1ZSI7ZVsiSXRjU3ltYm9sLUJvb2siXT0iSGVsdmV0aWNhIjtlWyJJdGNTeW1ib2wtQm9va0l0YWxpYyJdPSJIZWx2ZXRpY2EtT2JsaXF1ZSI7ZVsiSXRjU3ltYm9sLU1lZGl1bSJdPSJIZWx2ZXRpY2EiO2VbIkl0Y1N5bWJvbC1NZWRpdW1JdGFsaWMiXT0iSGVsdmV0aWNhLU9ibGlxdWUiO2UuTHVjaWRhQ29uc29sZT0iQ291cmllciI7ZVsiTHVjaWRhQ29uc29sZS1Cb2xkIl09IkNvdXJpZXItQm9sZCI7ZVsiTHVjaWRhQ29uc29sZS1Cb2xkSXRhbGljIl09IkNvdXJpZXItQm9sZE9ibGlxdWUiO2VbIkx1Y2lkYUNvbnNvbGUtSXRhbGljIl09IkNvdXJpZXItT2JsaXF1ZSI7ZVsiTHVjaWRhU2Fucy1EZW1pIl09IkhlbHZldGljYS1Cb2xkIjtlWyJNUy1Hb3RoaWMiXT0iTVMgR290aGljIjtlWyJNUy1Hb3RoaWMtQm9sZCJdPSJNUyBHb3RoaWMtQm9sZCI7ZVsiTVMtR290aGljLUJvbGRJdGFsaWMiXT0iTVMgR290aGljLUJvbGRJdGFsaWMiO2VbIk1TLUdvdGhpYy1JdGFsaWMiXT0iTVMgR290aGljLUl0YWxpYyI7ZVsiTVMtTWluY2hvIl09Ik1TIE1pbmNobyI7ZVsiTVMtTWluY2hvLUJvbGQiXT0iTVMgTWluY2hvLUJvbGQiO2VbIk1TLU1pbmNoby1Cb2xkSXRhbGljIl09Ik1TIE1pbmNoby1Cb2xkSXRhbGljIjtlWyJNUy1NaW5jaG8tSXRhbGljIl09Ik1TIE1pbmNoby1JdGFsaWMiO2VbIk1TLVBHb3RoaWMiXT0iTVMgUEdvdGhpYyI7ZVsiTVMtUEdvdGhpYy1Cb2xkIl09Ik1TIFBHb3RoaWMtQm9sZCI7ZVsiTVMtUEdvdGhpYy1Cb2xkSXRhbGljIl09Ik1TIFBHb3RoaWMtQm9sZEl0YWxpYyI7ZVsiTVMtUEdvdGhpYy1JdGFsaWMiXT0iTVMgUEdvdGhpYy1JdGFsaWMiO2VbIk1TLVBNaW5jaG8iXT0iTVMgUE1pbmNobyI7ZVsiTVMtUE1pbmNoby1Cb2xkIl09Ik1TIFBNaW5jaG8tQm9sZCI7ZVsiTVMtUE1pbmNoby1Cb2xkSXRhbGljIl09Ik1TIFBNaW5jaG8tQm9sZEl0YWxpYyI7ZVsiTVMtUE1pbmNoby1JdGFsaWMiXT0iTVMgUE1pbmNoby1JdGFsaWMiO2UuTnVwdGlhbFNjcmlwdD0iVGltZXMtSXRhbGljIjtlLlNlZ29lVUlTeW1ib2w9IkhlbHZldGljYSJ9KSksamk9Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlWyJBZG9iZSBKZW5zb24iXT0hMDtlWyJBZG9iZSBUZXh0Il09ITA7ZS5BbGJlcnR1cz0hMDtlLkFsZHVzPSEwO2UuQWxleGFuZHJpYT0hMDtlLkFsZ2VyaWFuPSEwO2VbIkFtZXJpY2FuIFR5cGV3cml0ZXIiXT0hMDtlLkFudGlxdWE9ITA7ZS5BcGV4PSEwO2UuQXJubz0hMDtlLkFzdGVyPSEwO2UuQXVyb3JhPSEwO2UuQmFza2VydmlsbGU9ITA7ZS5CZWxsPSEwO2UuQmVtYm89ITA7ZVsiQmVtYm8gU2Nob29sYm9vayJdPSEwO2UuQmVuZ3VpYXQ9ITA7ZVsiQmVya2VsZXkgT2xkIFN0eWxlIl09ITA7ZVsiQmVybmhhcmQgTW9kZXJuIl09ITA7ZVsiQmVydGhvbGQgQ2l0eSJdPSEwO2UuQm9kb25pPSEwO2VbIkJhdWVyIEJvZG9uaSJdPSEwO2VbIkJvb2sgQW50aXF1YSJdPSEwO2UuQm9va21hbj0hMDtlWyJCb3JkZWF1eCBSb21hbiJdPSEwO2VbIkNhbGlmb3JuaWFuIEZCIl09ITA7ZS5DYWxpc3RvPSEwO2UuQ2FsdmVydD0hMDtlLkNhcGl0YWxzPSEwO2UuQ2FtYnJpYT0hMDtlLkNhcnRpZXI9ITA7ZS5DYXNsb249ITA7ZS5DYXR1bGw9ITA7ZS5DZW50YXVyPSEwO2VbIkNlbnR1cnkgT2xkIFN0eWxlIl09ITA7ZVsiQ2VudHVyeSBTY2hvb2xib29rIl09ITA7ZS5DaGFwYXJyYWw9ITA7ZVsiQ2hhcmlzIFNJTCJdPSEwO2UuQ2hlbHRlbmhhbT0hMDtlWyJDaG9sbGEgU2xhYiJdPSEwO2UuQ2xhcmVuZG9uPSEwO2UuQ2xlYXJmYWNlPSEwO2UuQ29jaGluPSEwO2UuQ29sb25uYT0hMDtlWyJDb21wdXRlciBNb2Rlcm4iXT0hMDtlWyJDb25jcmV0ZSBSb21hbiJdPSEwO2UuQ29uc3RhbnRpYT0hMDtlWyJDb29wZXIgQmxhY2siXT0hMDtlLkNvcm9uYT0hMDtlLkVjb3R5cGU9ITA7ZS5FZ3lwdGllbm5lPSEwO2UuRWxlcGhhbnQ9ITA7ZS5FeGNlbHNpb3I9ITA7ZS5GYWlyZmllbGQ9ITA7ZVsiRkYgU2NhbGEiXT0hMDtlLkZvbGthcmQ9ITA7ZS5Gb290bGlnaHQ9ITA7ZS5GcmVlU2VyaWY9ITA7ZVsiRnJpeiBRdWFkcmF0YSJdPSEwO2UuR2FyYW1vbmQ9ITA7ZS5HZW50aXVtPSEwO2UuR2VvcmdpYT0hMDtlLkdsb3VjZXN0ZXI9ITA7ZVsiR291ZHkgT2xkIFN0eWxlIl09ITA7ZVsiR291ZHkgU2Nob29sYm9vayJdPSEwO2VbIkdvdWR5IFBybyBGb250Il09ITA7ZS5HcmFuam9uPSEwO2VbIkd1YXJkaWFuIEVneXB0aWFuIl09ITA7ZS5IZWF0aGVyPSEwO2UuSGVyY3VsZXM9ITA7ZVsiSGlnaCBUb3dlciBUZXh0Il09ITA7ZS5IaXJvc2hpZ2U9ITA7ZVsiSG9lZmxlciBUZXh0Il09ITA7ZVsiSHVtYW5hIFNlcmlmIl09ITA7ZS5JbXByaW50PSEwO2VbIklvbmljIE5vLiA1Il09ITA7ZS5KYW5zb249ITA7ZS5Kb2FubmE9ITA7ZS5Lb3Jpbm5hPSEwO2UuTGV4aWNvbj0hMDtlLkxpYmVyYXRpb25TZXJpZj0hMDtlWyJMaWJlcmF0aW9uIFNlcmlmIl09ITA7ZVsiTGludXggTGliZXJ0aW5lIl09ITA7ZS5MaXRlcmF0dXJuYXlhPSEwO2UuTHVjaWRhPSEwO2VbIkx1Y2lkYSBCcmlnaHQiXT0hMDtlLk1lbGlvcj0hMDtlLk1lbXBoaXM9ITA7ZS5NaWxsZXI9ITA7ZS5NaW5pb249ITA7ZS5Nb2Rlcm49ITA7ZVsiTW9uYSBMaXNhIl09ITA7ZVsiTXJzIEVhdmVzIl09ITA7ZVsiTVMgU2VyaWYiXT0hMDtlWyJNdXNlbyBTbGFiIl09ITA7ZVsiTmV3IFlvcmsiXT0hMDtlWyJOaW1idXMgUm9tYW4iXT0hMDtlWyJOUFMgUmF3bGluc29uIFJvYWR3YXkiXT0hMDtlLk51cHRpYWxTY3JpcHQ9ITA7ZS5QYWxhdGlubz0hMDtlLlBlcnBldHVhPSEwO2UuUGxhbnRpbj0hMDtlWyJQbGFudGluIFNjaG9vbGJvb2siXT0hMDtlLlBsYXliaWxsPSEwO2VbIlBvb3IgUmljaGFyZCJdPSEwO2VbIlJhd2xpbnNvbiBSb2Fkd2F5Il09ITA7ZS5SZW5hdWx0PSEwO2UuUmVxdWllbT0hMDtlLlJvY2t3ZWxsPSEwO2UuUm9tYW49ITA7ZVsiUm90aXMgU2VyaWYiXT0hMDtlLlNhYm9uPSEwO2UuU2NhbGE9ITA7ZS5TZWFndWxsPSEwO2UuU2lzdGluYT0hMDtlLlNvdXZlbmlyPSEwO2UuU1RJWD0hMDtlWyJTdG9uZSBJbmZvcm1hbCJdPSEwO2VbIlN0b25lIFNlcmlmIl09ITA7ZS5TeWxmYWVuPSEwO2UuVGltZXM9ITA7ZS5UcmFqYW49ITA7ZVsiVHJpbml0w6kiXT0hMDtlWyJUcnVtcCBNZWRpYWV2YWwiXT0hMDtlLlV0b3BpYT0hMDtlWyJWYWxlIFR5cGUiXT0hMDtlWyJCaXRzdHJlYW0gVmVyYSJdPSEwO2VbIlZlcmEgU2VyaWYiXT0hMDtlLlZlcnNhaWxsZXM9ITA7ZS5XYW50ZWQ9ITA7ZS5XZWlzcz0hMDtlWyJXaWRlIExhdGluIl09ITA7ZS5XaW5kc29yPSEwO2UuWElUUz0hMH0pKSxaaT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2UuRGluZ2JhdHM9ITA7ZS5TeW1ib2w9ITA7ZS5aYXBmRGluZ2JhdHM9ITA7ZS5XaW5nZGluZ3M9ITA7ZVsiV2luZ2RpbmdzLUJvbGQiXT0hMDtlWyJXaW5nZGluZ3MtUmVndWxhciJdPSEwfSkpLFZpPWdldExvb2t1cFRhYmxlRmFjdG9yeSgoZnVuY3Rpb24oZSl7ZVsyXT0xMDtlWzNdPTMyO2VbNF09MzM7ZVs1XT0zNDtlWzZdPTM1O2VbN109MzY7ZVs4XT0zNztlWzldPTM4O2VbMTBdPTM5O2VbMTFdPTQwO2VbMTJdPTQxO2VbMTNdPTQyO2VbMTRdPTQzO2VbMTVdPTQ0O2VbMTZdPTQ1O2VbMTddPTQ2O2VbMThdPTQ3O2VbMTldPTQ4O2VbMjBdPTQ5O2VbMjFdPTUwO2VbMjJdPTUxO2VbMjNdPTUyO2VbMjRdPTUzO2VbMjVdPTU0O2VbMjZdPTU1O2VbMjddPTU2O2VbMjhdPTU3O2VbMjldPTU4O2VbMzBdPTg5NDtlWzMxXT02MDtlWzMyXT02MTtlWzMzXT02MjtlWzM0XT02MztlWzM1XT02NDtlWzM2XT02NTtlWzM3XT02NjtlWzM4XT02NztlWzM5XT02ODtlWzQwXT02OTtlWzQxXT03MDtlWzQyXT03MTtlWzQzXT03MjtlWzQ0XT03MztlWzQ1XT03NDtlWzQ2XT03NTtlWzQ3XT03NjtlWzQ4XT03NztlWzQ5XT03ODtlWzUwXT03OTtlWzUxXT04MDtlWzUyXT04MTtlWzUzXT04MjtlWzU0XT04MztlWzU1XT04NDtlWzU2XT04NTtlWzU3XT04NjtlWzU4XT04NztlWzU5XT04ODtlWzYwXT04OTtlWzYxXT05MDtlWzYyXT05MTtlWzYzXT05MjtlWzY0XT05MztlWzY1XT05NDtlWzY2XT05NTtlWzY3XT05NjtlWzY4XT05NztlWzY5XT05ODtlWzcwXT05OTtlWzcxXT0xMDA7ZVs3Ml09MTAxO2VbNzNdPTEwMjtlWzc0XT0xMDM7ZVs3NV09MTA0O2VbNzZdPTEwNTtlWzc3XT0xMDY7ZVs3OF09MTA3O2VbNzldPTEwODtlWzgwXT0xMDk7ZVs4MV09MTEwO2VbODJdPTExMTtlWzgzXT0xMTI7ZVs4NF09MTEzO2VbODVdPTExNDtlWzg2XT0xMTU7ZVs4N109MTE2O2VbODhdPTExNztlWzg5XT0xMTg7ZVs5MF09MTE5O2VbOTFdPTEyMDtlWzkyXT0xMjE7ZVs5M109MTIyO2VbOTRdPTEyMztlWzk1XT0xMjQ7ZVs5Nl09MTI1O2VbOTddPTEyNjtlWzk4XT0xOTY7ZVs5OV09MTk3O2VbMTAwXT0xOTk7ZVsxMDFdPTIwMTtlWzEwMl09MjA5O2VbMTAzXT0yMTQ7ZVsxMDRdPTIyMDtlWzEwNV09MjI1O2VbMTA2XT0yMjQ7ZVsxMDddPTIyNjtlWzEwOF09MjI4O2VbMTA5XT0yMjc7ZVsxMTBdPTIyOTtlWzExMV09MjMxO2VbMTEyXT0yMzM7ZVsxMTNdPTIzMjtlWzExNF09MjM0O2VbMTE1XT0yMzU7ZVsxMTZdPTIzNztlWzExN109MjM2O2VbMTE4XT0yMzg7ZVsxMTldPTIzOTtlWzEyMF09MjQxO2VbMTIxXT0yNDM7ZVsxMjJdPTI0MjtlWzEyM109MjQ0O2VbMTI0XT0yNDY7ZVsxMjVdPTI0NTtlWzEyNl09MjUwO2VbMTI3XT0yNDk7ZVsxMjhdPTI1MTtlWzEyOV09MjUyO2VbMTMwXT04MjI0O2VbMTMxXT0xNzY7ZVsxMzJdPTE2MjtlWzEzM109MTYzO2VbMTM0XT0xNjc7ZVsxMzVdPTgyMjY7ZVsxMzZdPTE4MjtlWzEzN109MjIzO2VbMTM4XT0xNzQ7ZVsxMzldPTE2OTtlWzE0MF09ODQ4MjtlWzE0MV09MTgwO2VbMTQyXT0xNjg7ZVsxNDNdPTg4MDA7ZVsxNDRdPTE5ODtlWzE0NV09MjE2O2VbMTQ2XT04NzM0O2VbMTQ3XT0xNzc7ZVsxNDhdPTg4MDQ7ZVsxNDldPTg4MDU7ZVsxNTBdPTE2NTtlWzE1MV09MTgxO2VbMTUyXT04NzA2O2VbMTUzXT04NzIxO2VbMTU0XT04NzE5O2VbMTU2XT04NzQ3O2VbMTU3XT0xNzA7ZVsxNThdPTE4NjtlWzE1OV09ODQ4NjtlWzE2MF09MjMwO2VbMTYxXT0yNDg7ZVsxNjJdPTE5MTtlWzE2M109MTYxO2VbMTY0XT0xNzI7ZVsxNjVdPTg3MzA7ZVsxNjZdPTQwMjtlWzE2N109ODc3NjtlWzE2OF09ODcxMDtlWzE2OV09MTcxO2VbMTcwXT0xODc7ZVsxNzFdPTgyMzA7ZVsxNzldPTgyMjA7ZVsxODBdPTgyMjE7ZVsxODFdPTgyMTY7ZVsxODJdPTgyMTc7ZVsyMDBdPTE5MztlWzIwM109MjA1O2VbMjA3XT0yMTE7ZVsyMTBdPTIxODtlWzIyM109NzExO2VbMjI0XT0zMjE7ZVsyMjVdPTMyMjtlWzIyNl09MzUyO2VbMjI3XT0zNTM7ZVsyMjhdPTM4MTtlWzIyOV09MzgyO2VbMjMzXT0yMjE7ZVsyMzRdPTI1MztlWzI1Ml09MjYzO2VbMjUzXT0yNjg7ZVsyNTRdPTI2OTtlWzI1OF09MjU4O2VbMjYwXT0yNjA7ZVsyNjFdPTI2MTtlWzI2NV09MjgwO2VbMjY2XT0yODE7ZVsyNjddPTI4MjtlWzI2OF09MjgzO2VbMjY5XT0zMTM7ZVsyNzVdPTMyMztlWzI3Nl09MzI0O2VbMjc4XT0zMjg7ZVsyODNdPTM0NDtlWzI4NF09MzQ1O2VbMjg1XT0zNDY7ZVsyODZdPTM0NztlWzI5Ml09MzY3O2VbMjk1XT0zNzc7ZVsyOTZdPTM3ODtlWzI5OF09MzgwO2VbMzA1XT05NjM7ZVszMDZdPTk2NDtlWzMwN109OTY2O2VbMzA4XT04MjE1O2VbMzA5XT04MjUyO2VbMzEwXT04MzE5O2VbMzExXT04MzU5O2VbMzEyXT04NTkyO2VbMzEzXT04NTkzO2VbMzM3XT05NTUyO2VbNDkzXT0xMDM5O2VbNDk0XT0xMDQwO2VbNjcyXT0xNDg4O2VbNjczXT0xNDg5O2VbNjc0XT0xNDkwO2VbNjc1XT0xNDkxO2VbNjc2XT0xNDkyO2VbNjc3XT0xNDkzO2VbNjc4XT0xNDk0O2VbNjc5XT0xNDk1O2VbNjgwXT0xNDk2O2VbNjgxXT0xNDk3O2VbNjgyXT0xNDk4O2VbNjgzXT0xNDk5O2VbNjg0XT0xNTAwO2VbNjg1XT0xNTAxO2VbNjg2XT0xNTAyO2VbNjg3XT0xNTAzO2VbNjg4XT0xNTA0O2VbNjg5XT0xNTA1O2VbNjkwXT0xNTA2O2VbNjkxXT0xNTA3O2VbNjkyXT0xNTA4O2VbNjkzXT0xNTA5O2VbNjk0XT0xNTEwO2VbNjk1XT0xNTExO2VbNjk2XT0xNTEyO2VbNjk3XT0xNTEzO2VbNjk4XT0xNTE0O2VbNzA1XT0xNTI0O2VbNzA2XT04MzYyO2VbNzEwXT02NDI4ODtlWzcxMV09NjQyOTg7ZVs3NTldPTE2MTc7ZVs3NjFdPTE3NzY7ZVs3NjNdPTE3Nzg7ZVs3NzVdPTE2NTI7ZVs3NzddPTE3NjQ7ZVs3NzhdPTE3ODA7ZVs3NzldPTE3ODE7ZVs3ODBdPTE3ODI7ZVs3ODJdPTc3MTtlWzc4M109NjQ3MjY7ZVs3ODZdPTgzNjM7ZVs3ODhdPTg1MzI7ZVs3OTBdPTc2ODtlWzc5MV09NzY5O2VbNzkyXT03Njg7ZVs3OTVdPTgwMztlWzc5N109NjQzMzY7ZVs3OThdPTY0MzM3O2VbNzk5XT02NDM0MjtlWzgwMF09NjQzNDM7ZVs4MDFdPTY0MzQ0O2VbODAyXT02NDM0NTtlWzgwM109NjQzNjI7ZVs4MDRdPTY0MzYzO2VbODA1XT02NDM2NDtlWzI0MjRdPTc4MjE7ZVsyNDI1XT03ODIyO2VbMjQyNl09NzgyMztlWzI0MjddPTc4MjQ7ZVsyNDI4XT03ODI1O2VbMjQyOV09NzgyNjtlWzI0MzBdPTc4Mjc7ZVsyNDMzXT03NjgyO2VbMjY3OF09ODA0NTtlWzI2NzldPTgwNDY7ZVsyODMwXT0xNTUyO2VbMjgzOF09Njg2O2VbMjg0MF09NzUxO2VbMjg0Ml09NzUzO2VbMjg0M109NzU0O2VbMjg0NF09NzU1O2VbMjg0Nl09NzU3O2VbMjg1Nl09NzY3O2VbMjg1N109ODQ4O2VbMjg1OF09ODQ5O2VbMjg2Ml09ODUzO2VbMjg2M109ODU0O2VbMjg2NF09ODU1O2VbMjg2NV09ODYxO2VbMjg2Nl09ODYyO2VbMjkwNl09NzQ2MDtlWzI5MDhdPTc0NjI7ZVsyOTA5XT03NDYzO2VbMjkxMF09NzQ2NDtlWzI5MTJdPTc0NjY7ZVsyOTEzXT03NDY3O2VbMjkxNF09NzQ2ODtlWzI5MTZdPTc0NzA7ZVsyOTE3XT03NDcxO2VbMjkxOF09NzQ3MjtlWzI5MjBdPTc0NzQ7ZVsyOTIxXT03NDc1O2VbMjkyMl09NzQ3NjtlWzI5MjRdPTc0Nzg7ZVsyOTI1XT03NDc5O2VbMjkyNl09NzQ4MDtlWzI5MjhdPTc0ODI7ZVsyOTI5XT03NDgzO2VbMjkzMF09NzQ4NDtlWzI5MzJdPTc0ODY7ZVsyOTMzXT03NDg3O2VbMjkzNF09NzQ4ODtlWzI5MzZdPTc0OTA7ZVsyOTM3XT03NDkxO2VbMjkzOF09NzQ5MjtlWzI5NDBdPTc0OTQ7ZVsyOTQxXT03NDk1O2VbMjk0Ml09NzQ5NjtlWzI5NDRdPTc0OTg7ZVsyOTQ2XT03NTAwO2VbMjk0OF09NzUwMjtlWzI5NTBdPTc1MDQ7ZVsyOTUxXT03NTA1O2VbMjk1Ml09NzUwNjtlWzI5NTRdPTc1MDg7ZVsyOTU1XT03NTA5O2VbMjk1Nl09NzUxMDtlWzI5NThdPTc1MTI7ZVsyOTU5XT03NTEzO2VbMjk2MF09NzUxNDtlWzI5NjJdPTc1MTY7ZVsyOTYzXT03NTE3O2VbMjk2NF09NzUxODtlWzI5NjZdPTc1MjA7ZVsyOTY3XT03NTIxO2VbMjk2OF09NzUyMjtlWzI5NzBdPTc1MjQ7ZVsyOTcxXT03NTI1O2VbMjk3Ml09NzUyNjtlWzI5NzRdPTc1Mjg7ZVsyOTc1XT03NTI5O2VbMjk3Nl09NzUzMDtlWzI5NzhdPTE1Mzc7ZVsyOTc5XT0xNTM4O2VbMjk4MF09MTUzOTtlWzI5ODJdPTE1NDk7ZVsyOTgzXT0xNTUxO2VbMjk4NF09MTU1MjtlWzI5ODZdPTE1NTQ7ZVsyOTg3XT0xNTU1O2VbMjk4OF09MTU1NjtlWzI5OTBdPTE2MjM7ZVsyOTkxXT0xNjI0O2VbMjk5NV09MTc3NTtlWzI5OTldPTE3OTE7ZVszMDAyXT02NDI5MDtlWzMwMDNdPTY0MjkxO2VbMzAwNF09NjQyOTI7ZVszMDA2XT02NDI5NDtlWzMwMDddPTY0Mjk1O2VbMzAwOF09NjQyOTY7ZVszMDExXT0xOTAwO2VbMzAxNF09ODIyMztlWzMwMTVdPTgyNDQ7ZVszMDE3XT03NTMyO2VbMzAxOF09NzUzMztlWzMwMTldPTc1MzQ7ZVszMDc1XT03NTkwO2VbMzA3Nl09NzU5MTtlWzMwNzldPTc1OTQ7ZVszMDgwXT03NTk1O2VbMzA4M109NzU5ODtlWzMwODRdPTc1OTk7ZVszMDg3XT03NjAyO2VbMzA4OF09NzYwMztlWzMwOTFdPTc2MDY7ZVszMDkyXT03NjA3O2VbMzA5NV09NzYxMDtlWzMwOTZdPTc2MTE7ZVszMDk5XT03NjE0O2VbMzEwMF09NzYxNTtlWzMxMDNdPTc2MTg7ZVszMTA0XT03NjE5O2VbMzEwN109ODMzNztlWzMxMDhdPTgzMzg7ZVszMTE2XT0xODg0O2VbMzExOV09MTg4NTtlWzMxMjBdPTE4ODU7ZVszMTIzXT0xODg2O2VbMzEyNF09MTg4NjtlWzMxMjddPTE4ODc7ZVszMTI4XT0xODg3O2VbMzEzMV09MTg4ODtlWzMxMzJdPTE4ODg7ZVszMTM1XT0xODg5O2VbMzEzNl09MTg4OTtlWzMxMzldPTE4OTA7ZVszMTQwXT0xODkwO2VbMzE0M109MTg5MTtlWzMxNDRdPTE4OTE7ZVszMTQ3XT0xODkyO2VbMzE0OF09MTg5MjtlWzMxNTNdPTU4MDtlWzMxNTRdPTU4MTtlWzMxNTddPTU4NDtlWzMxNThdPTU4NTtlWzMxNjFdPTU4ODtlWzMxNjJdPTU4OTtlWzMxNjVdPTg5MTtlWzMxNjZdPTg5MjtlWzMxNjldPTEyNzQ7ZVszMTcwXT0xMjc1O2VbMzE3M109MTI3ODtlWzMxNzRdPTEyNzk7ZVszMTgxXT03NjIyO2VbMzE4Ml09NzYyMztlWzMyODJdPTExNzk5O2VbMzMxNl09NTc4O2VbMzM3OV09NDI3ODU7ZVszMzkzXT0xMTU5O2VbMzQxNl09ODM3N30pKSx6aT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2VbMjI3XT0zMjI7ZVsyNjRdPTI2MTtlWzI5MV09MzQ2fSkpLF9pPWdldExvb2t1cFRhYmxlRmFjdG9yeSgoZnVuY3Rpb24oZSl7ZVsxXT0zMjtlWzRdPTY1O2VbNV09MTkyO2VbNl09MTkzO2VbOV09MTk2O2VbMTddPTY2O2VbMThdPTY3O2VbMjFdPTI2ODtlWzI0XT02ODtlWzI4XT02OTtlWzI5XT0yMDA7ZVszMF09MjAxO2VbMzJdPTI4MjtlWzM4XT03MDtlWzM5XT03MTtlWzQ0XT03MjtlWzQ3XT03MztlWzQ4XT0yMDQ7ZVs0OV09MjA1O2VbNThdPTc0O2VbNjBdPTc1O2VbNjJdPTc2O2VbNjhdPTc3O2VbNjldPTc4O2VbNzVdPTc5O2VbNzZdPTIxMDtlWzgwXT0yMTQ7ZVs4N109ODA7ZVs4OV09ODE7ZVs5MF09ODI7ZVs5Ml09MzQ0O2VbOTRdPTgzO2VbOTddPTM1MjtlWzEwMF09ODQ7ZVsxMDRdPTg1O2VbMTA5XT0yMjA7ZVsxMTVdPTg2O2VbMTE2XT04NztlWzEyMV09ODg7ZVsxMjJdPTg5O2VbMTI0XT0yMjE7ZVsxMjddPTkwO2VbMTI5XT0zODE7ZVsyNThdPTk3O2VbMjU5XT0yMjQ7ZVsyNjBdPTIyNTtlWzI2M109MjI4O2VbMjY4XT0yNjE7ZVsyNzFdPTk4O2VbMjcyXT05OTtlWzI3M109MjYzO2VbMjc1XT0yNjk7ZVsyODJdPTEwMDtlWzI4Nl09MTAxO2VbMjg3XT0yMzI7ZVsyODhdPTIzMztlWzI5MF09MjgzO2VbMjk1XT0yODE7ZVsyOTZdPTEwMjtlWzMzNl09MTAzO2VbMzQ2XT0xMDQ7ZVszNDldPTEwNTtlWzM1MF09MjM2O2VbMzUxXT0yMzc7ZVszNjFdPTEwNjtlWzM2NF09MTA3O2VbMzY3XT0xMDg7ZVszNzFdPTMyMjtlWzM3M109MTA5O2VbMzc0XT0xMTA7ZVszODFdPTExMTtlWzM4Ml09MjQyO2VbMzgzXT0yNDM7ZVszODZdPTI0NjtlWzM5M109MTEyO2VbMzk1XT0xMTM7ZVszOTZdPTExNDtlWzM5OF09MzQ1O2VbNDAwXT0xMTU7ZVs0MDFdPTM0NztlWzQwM109MzUzO2VbNDEwXT0xMTY7ZVs0MzddPTExNztlWzQ0Ml09MjUyO2VbNDQ4XT0xMTg7ZVs0NDldPTExOTtlWzQ1NF09MTIwO2VbNDU1XT0xMjE7ZVs0NTddPTI1MztlWzQ2MF09MTIyO2VbNDYyXT0zODI7ZVs0NjNdPTM4MDtlWzg1M109NDQ7ZVs4NTVdPTU4O2VbODU2XT00NjtlWzg3Nl09NDc7ZVs4NzhdPTQ1O2VbODgyXT00NTtlWzg5NF09NDA7ZVs4OTVdPTQxO2VbODk2XT05MTtlWzg5N109OTM7ZVs5MjNdPTY0O2VbMTAwNF09NDg7ZVsxMDA1XT00OTtlWzEwMDZdPTUwO2VbMTAwN109NTE7ZVsxMDA4XT01MjtlWzEwMDldPTUzO2VbMTAxMF09NTQ7ZVsxMDExXT01NTtlWzEwMTJdPTU2O2VbMTAxM109NTc7ZVsxMDgxXT0zNztlWzEwODVdPTQzO2VbMTA4Nl09NDV9KSk7ZnVuY3Rpb24gZ2V0U3RhbmRhcmRGb250TmFtZShlKXtjb25zdCB0PW5vcm1hbGl6ZUZvbnROYW1lKGUpO3JldHVybiBQaSgpW3RdfWZ1bmN0aW9uIGlzS25vd25Gb250TmFtZShlKXtjb25zdCB0PW5vcm1hbGl6ZUZvbnROYW1lKGUpO3JldHVybiEhKFBpKClbdF18fFhpKClbdF18fGppKClbdF18fFppKClbdF0pfWNsYXNzIFRvVW5pY29kZU1hcHtjb25zdHJ1Y3RvcihlPVtdKXt0aGlzLl9tYXA9ZX1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuX21hcC5sZW5ndGh9Zm9yRWFjaChlKXtmb3IoY29uc3QgdCBpbiB0aGlzLl9tYXApZSh0LHRoaXMuX21hcFt0XS5jaGFyQ29kZUF0KDApKX1oYXMoZSl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuX21hcFtlXX1nZXQoZSl7cmV0dXJuIHRoaXMuX21hcFtlXX1jaGFyQ29kZU9mKGUpe2NvbnN0IHQ9dGhpcy5fbWFwO2lmKHQubGVuZ3RoPD02NTUzNilyZXR1cm4gdC5pbmRleE9mKGUpO2Zvcihjb25zdCBpIGluIHQpaWYodFtpXT09PWUpcmV0dXJuIDB8aTtyZXR1cm4tMX1hbWVuZChlKXtmb3IoY29uc3QgdCBpbiBlKXRoaXMuX21hcFt0XT1lW3RdfX1jbGFzcyBJZGVudGl0eVRvVW5pY29kZU1hcHtjb25zdHJ1Y3RvcihlLHQpe3RoaXMuZmlyc3RDaGFyPWU7dGhpcy5sYXN0Q2hhcj10fWdldCBsZW5ndGgoKXtyZXR1cm4gdGhpcy5sYXN0Q2hhcisxLXRoaXMuZmlyc3RDaGFyfWZvckVhY2goZSl7Zm9yKGxldCB0PXRoaXMuZmlyc3RDaGFyLGk9dGhpcy5sYXN0Q2hhcjt0PD1pO3QrKyllKHQsdCl9aGFzKGUpe3JldHVybiB0aGlzLmZpcnN0Q2hhcjw9ZSYmZTw9dGhpcy5sYXN0Q2hhcn1nZXQoZSl7aWYodGhpcy5maXJzdENoYXI8PWUmJmU8PXRoaXMubGFzdENoYXIpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZSl9Y2hhckNvZGVPZihlKXtyZXR1cm4gTnVtYmVyLmlzSW50ZWdlcihlKSYmZT49dGhpcy5maXJzdENoYXImJmU8PXRoaXMubGFzdENoYXI/ZTotMX1hbWVuZChlKXt1bnJlYWNoYWJsZSgiU2hvdWxkIG5vdCBjYWxsIGFtZW5kKCkiKX19Y2xhc3MgQ0ZGRm9udHtjb25zdHJ1Y3RvcihlLHQpe3RoaXMucHJvcGVydGllcz10O2NvbnN0IGk9bmV3IENGRlBhcnNlcihlLHQsWWkpO3RoaXMuY2ZmPWkucGFyc2UoKTt0aGlzLmNmZi5kdXBsaWNhdGVGaXJzdEdseXBoKCk7Y29uc3QgYT1uZXcgQ0ZGQ29tcGlsZXIodGhpcy5jZmYpO3RoaXMuc2VhY3M9dGhpcy5jZmYuc2VhY3M7dHJ5e3RoaXMuZGF0YT1hLmNvbXBpbGUoKX1jYXRjaHt3YXJuKCJGYWlsZWQgdG8gY29tcGlsZSBmb250ICIrdC5sb2FkZWROYW1lKTt0aGlzLmRhdGE9ZX10aGlzLl9jcmVhdGVCdWlsdEluRW5jb2RpbmcoKX1nZXQgbnVtR2x5cGhzKCl7cmV0dXJuIHRoaXMuY2ZmLmNoYXJTdHJpbmdzLmNvdW50fWdldENoYXJzZXQoKXtyZXR1cm4gdGhpcy5jZmYuY2hhcnNldC5jaGFyc2V0fWdldEdseXBoTWFwcGluZygpe2NvbnN0IGU9dGhpcy5jZmYsdD10aGlzLnByb3BlcnRpZXMse2NpZFRvR2lkTWFwOmksY01hcDphfT10LHM9ZS5jaGFyc2V0LmNoYXJzZXQ7bGV0IHIsbjtpZih0LmNvbXBvc2l0ZSl7bGV0IHQsbztpZihpPy5sZW5ndGg+MCl7dD1PYmplY3QuY3JlYXRlKG51bGwpO2ZvcihsZXQgZT0wLGE9aS5sZW5ndGg7ZTxhO2UrKyl7Y29uc3QgYT1pW2VdO3ZvaWQgMCE9PWEmJih0W2FdPWUpfX1yPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoZS5pc0NJREZvbnQpZm9yKG49MDtuPHMubGVuZ3RoO24rKyl7Y29uc3QgZT1zW25dO289YS5jaGFyQ29kZU9mKGUpO3ZvaWQgMCE9PXQ/LltvXSYmKG89dFtvXSk7cltvXT1ufWVsc2UgZm9yKG49MDtuPGUuY2hhclN0cmluZ3MuY291bnQ7bisrKXtvPWEuY2hhckNvZGVPZihuKTtyW29dPW59cmV0dXJuIHJ9bGV0IG89ZS5lbmNvZGluZz9lLmVuY29kaW5nLmVuY29kaW5nOm51bGw7dC5pc0ludGVybmFsRm9udCYmKG89dC5kZWZhdWx0RW5jb2RpbmcpO3I9dHlwZTFGb250R2x5cGhNYXBwaW5nKHQsbyxzKTtyZXR1cm4gcn1oYXNHbHlwaElkKGUpe3JldHVybiB0aGlzLmNmZi5oYXNHbHlwaElkKGUpfV9jcmVhdGVCdWlsdEluRW5jb2RpbmcoKXtjb25zdHtjaGFyc2V0OmUsZW5jb2Rpbmc6dH09dGhpcy5jZmY7aWYoIWV8fCF0KXJldHVybjtjb25zdCBpPWUuY2hhcnNldCxhPXQuZW5jb2Rpbmcscz1bXTtmb3IoY29uc3QgZSBpbiBhKXtjb25zdCB0PWFbZV07aWYodD49MCl7Y29uc3QgYT1pW3RdO2EmJihzW2VdPWEpfX1zLmxlbmd0aD4wJiYodGhpcy5wcm9wZXJ0aWVzLmJ1aWx0SW5FbmNvZGluZz1zKX19ZnVuY3Rpb24gZ2V0VWludDMyKGUsdCl7cmV0dXJuKGVbdF08PDI0fGVbdCsxXTw8MTZ8ZVt0KzJdPDw4fGVbdCszXSk+Pj4wfWZ1bmN0aW9uIGdldFVpbnQxNihlLHQpe3JldHVybiBlW3RdPDw4fGVbdCsxXX1mdW5jdGlvbiBnZXRJbnQxNihlLHQpe3JldHVybihlW3RdPDwyNHxlW3QrMV08PDE2KT4+MTZ9ZnVuY3Rpb24gZ2V0SW50OChlLHQpe3JldHVybiBlW3RdPDwyND4+MjR9ZnVuY3Rpb24gZ2V0RmxvYXQyMTQoZSx0KXtyZXR1cm4gZ2V0SW50MTYoZSx0KS8xNjM4NH1mdW5jdGlvbiBnZXRTdWJyb3V0aW5lQmlhcyhlKXtjb25zdCB0PWUubGVuZ3RoO2xldCBpPTMyNzY4O3Q8MTI0MD9pPTEwNzp0PDMzOTAwJiYoaT0xMTMxKTtyZXR1cm4gaX1mdW5jdGlvbiBwYXJzZUNtYXAoZSx0LGkpe2NvbnN0IGE9MT09PWdldFVpbnQxNihlLHQrMik/Z2V0VWludDMyKGUsdCs4KTpnZXRVaW50MzIoZSx0KzE2KSxzPWdldFVpbnQxNihlLHQrYSk7bGV0IHIsbixvO2lmKDQ9PT1zKXtnZXRVaW50MTYoZSx0K2ErMik7Y29uc3QgaT1nZXRVaW50MTYoZSx0K2ErNik+PjE7bj10K2ErMTQ7cj1bXTtmb3Iobz0wO288aTtvKyssbis9MilyW29dPXtlbmQ6Z2V0VWludDE2KGUsbil9O24rPTI7Zm9yKG89MDtvPGk7bysrLG4rPTIpcltvXS5zdGFydD1nZXRVaW50MTYoZSxuKTtmb3Iobz0wO288aTtvKyssbis9MilyW29dLmlkRGVsdGE9Z2V0VWludDE2KGUsbik7Zm9yKG89MDtvPGk7bysrLG4rPTIpe2xldCB0PWdldFVpbnQxNihlLG4pO2lmKDAhPT10KXtyW29dLmlkcz1bXTtmb3IobGV0IGk9MCxhPXJbb10uZW5kLXJbb10uc3RhcnQrMTtpPGE7aSsrKXtyW29dLmlkc1tpXT1nZXRVaW50MTYoZSxuK3QpO3QrPTJ9fX1yZXR1cm4gcn1pZigxMj09PXMpe2NvbnN0IGk9Z2V0VWludDMyKGUsdCthKzEyKTtuPXQrYSsxNjtyPVtdO2ZvcihvPTA7bzxpO28rKyl7dD1nZXRVaW50MzIoZSxuKTtyLnB1c2goe3N0YXJ0OnQsZW5kOmdldFVpbnQzMihlLG4rNCksaWREZWx0YTpnZXRVaW50MzIoZSxuKzgpLXR9KTtuKz0xMn1yZXR1cm4gcn10aHJvdyBuZXcgRm9ybWF0RXJyb3IoYHVuc3VwcG9ydGVkIGNtYXA6ICR7c31gKX1mdW5jdGlvbiBwYXJzZUNmZihlLHQsaSxhKXtjb25zdCBzPW5ldyBDRkZQYXJzZXIobmV3IFN0cmVhbShlLHQsaS10KSx7fSxhKS5wYXJzZSgpO3JldHVybntnbHlwaHM6cy5jaGFyU3RyaW5ncy5vYmplY3RzLHN1YnJzOnMudG9wRGljdC5wcml2YXRlRGljdD8uc3VicnNJbmRleD8ub2JqZWN0cyxnc3VicnM6cy5nbG9iYWxTdWJySW5kZXg/Lm9iamVjdHMsaXNDRkZDSURGb250OnMuaXNDSURGb250LGZkU2VsZWN0OnMuZmRTZWxlY3QsZmRBcnJheTpzLmZkQXJyYXl9fWZ1bmN0aW9uIGxvb2t1cENtYXAoZSx0KXtjb25zdCBpPXQuY29kZVBvaW50QXQoMCk7bGV0IGE9MCxzPTAscj1lLmxlbmd0aC0xO2Zvcig7czxyOyl7Y29uc3QgdD1zK3IrMT4+MTtpPGVbdF0uc3RhcnQ/cj10LTE6cz10fWVbc10uc3RhcnQ8PWkmJmk8PWVbc10uZW5kJiYoYT1lW3NdLmlkRGVsdGErKGVbc10uaWRzP2Vbc10uaWRzW2ktZVtzXS5zdGFydF06aSkmNjU1MzUpO3JldHVybntjaGFyQ29kZTppLGdseXBoSWQ6YX19ZnVuY3Rpb24gY29tcGlsZUdseWYoZSx0LGkpe2Z1bmN0aW9uIG1vdmVUbyhlLGkpe3QuYWRkKGh0LFtlLGldKX1mdW5jdGlvbiBsaW5lVG8oZSxpKXt0LmFkZChsdCxbZSxpXSl9ZnVuY3Rpb24gcXVhZHJhdGljQ3VydmVUbyhlLGksYSxzKXt0LmFkZChDdCxbZSxpLGEsc10pfWxldCBhPTA7Y29uc3Qgcz1nZXRJbnQxNihlLGEpO2xldCByLG49MCxvPTA7YSs9MTA7aWYoczwwKWRve3I9Z2V0VWludDE2KGUsYSk7Y29uc3Qgcz1nZXRVaW50MTYoZSxhKzIpO2ErPTQ7bGV0IGcsYztpZigxJnIpe2lmKDImcil7Zz1nZXRJbnQxNihlLGEpO2M9Z2V0SW50MTYoZSxhKzIpfWVsc2V7Zz1nZXRVaW50MTYoZSxhKTtjPWdldFVpbnQxNihlLGErMil9YSs9NH1lbHNlIGlmKDImcil7Zz1nZXRJbnQ4KGUsYSsrKTtjPWdldEludDgoZSxhKyspfWVsc2V7Zz1lW2ErK107Yz1lW2ErK119aWYoMiZyKXtuPWc7bz1jfWVsc2V7bj0wO289MH1sZXQgaD0xLGw9MSxDPTAsUT0wO2lmKDgmcil7aD1sPWdldEZsb2F0MjE0KGUsYSk7YSs9Mn1lbHNlIGlmKDY0JnIpe2g9Z2V0RmxvYXQyMTQoZSxhKTtsPWdldEZsb2F0MjE0KGUsYSsyKTthKz00fWVsc2UgaWYoMTI4JnIpe2g9Z2V0RmxvYXQyMTQoZSxhKTtDPWdldEZsb2F0MjE0KGUsYSsyKTtRPWdldEZsb2F0MjE0KGUsYSs0KTtsPWdldEZsb2F0MjE0KGUsYSs2KTthKz04fWNvbnN0IEU9aS5nbHlwaHNbc107aWYoRSl7dC5hZGQoUXQpO3QuYWRkKHV0LFtoLEMsUSxsLG4sb10pO2NvbXBpbGVHbHlmKEUsdCxpKTt0LmFkZChCdCl9fXdoaWxlKDMyJnIpO2Vsc2V7Y29uc3QgdD1bXTtsZXQgaSxnO2ZvcihpPTA7aTxzO2krKyl7dC5wdXNoKGdldFVpbnQxNihlLGEpKTthKz0yfWErPTIrZ2V0VWludDE2KGUsYSk7Y29uc3QgYz10LmF0KC0xKSsxLGg9W107Zm9yKDtoLmxlbmd0aDxjOyl7cj1lW2ErK107bGV0IHQ9MTs4JnImJih0Kz1lW2ErK10pO2Zvcig7dC0tID4wOyloLnB1c2goe2ZsYWdzOnJ9KX1mb3IoaT0wO2k8YztpKyspe3N3aXRjaCgxOCZoW2ldLmZsYWdzKXtjYXNlIDA6bis9Z2V0SW50MTYoZSxhKTthKz0yO2JyZWFrO2Nhc2UgMjpuLT1lW2ErK107YnJlYWs7Y2FzZSAxODpuKz1lW2ErK119aFtpXS54PW59Zm9yKGk9MDtpPGM7aSsrKXtzd2l0Y2goMzYmaFtpXS5mbGFncyl7Y2FzZSAwOm8rPWdldEludDE2KGUsYSk7YSs9MjticmVhaztjYXNlIDQ6by09ZVthKytdO2JyZWFrO2Nhc2UgMzY6bys9ZVthKytdfWhbaV0ueT1vfWxldCBsPTA7Zm9yKGE9MDthPHM7YSsrKXtjb25zdCBlPXRbYV0scz1oLnNsaWNlKGwsZSsxKTtpZigxJnNbMF0uZmxhZ3Mpcy5wdXNoKHNbMF0pO2Vsc2UgaWYoMSZzLmF0KC0xKS5mbGFncylzLnVuc2hpZnQocy5hdCgtMSkpO2Vsc2V7Y29uc3QgZT17ZmxhZ3M6MSx4OihzWzBdLngrcy5hdCgtMSkueCkvMix5OihzWzBdLnkrcy5hdCgtMSkueSkvMn07cy51bnNoaWZ0KGUpO3MucHVzaChlKX1tb3ZlVG8oc1swXS54LHNbMF0ueSk7Zm9yKGk9MSxnPXMubGVuZ3RoO2k8ZztpKyspaWYoMSZzW2ldLmZsYWdzKWxpbmVUbyhzW2ldLngsc1tpXS55KTtlbHNlIGlmKDEmc1tpKzFdLmZsYWdzKXtxdWFkcmF0aWNDdXJ2ZVRvKHNbaV0ueCxzW2ldLnksc1tpKzFdLngsc1tpKzFdLnkpO2krK31lbHNlIHF1YWRyYXRpY0N1cnZlVG8oc1tpXS54LHNbaV0ueSwoc1tpXS54K3NbaSsxXS54KS8yLChzW2ldLnkrc1tpKzFdLnkpLzIpO2w9ZSsxfX19ZnVuY3Rpb24gY29tcGlsZUNoYXJTdHJpbmcoZSx0LGksYSl7ZnVuY3Rpb24gbW92ZVRvKGUsaSl7dC5hZGQoaHQsW2UsaV0pfWZ1bmN0aW9uIGxpbmVUbyhlLGkpe3QuYWRkKGx0LFtlLGldKX1mdW5jdGlvbiBiZXppZXJDdXJ2ZVRvKGUsaSxhLHMscixuKXt0LmFkZChjdCxbZSxpLGEscyxyLG5dKX1jb25zdCBzPVtdO2xldCByPTAsbj0wLG89MDshZnVuY3Rpb24gcGFyc2UoZSl7bGV0IGc9MDtmb3IoO2c8ZS5sZW5ndGg7KXtsZXQgYyxoLGwsQyxRLEUsdSxkLGYscD0hMSxtPWVbZysrXTtzd2l0Y2gobSl7Y2FzZSAxOmNhc2UgMzpjYXNlIDE4OmNhc2UgMjM6bys9cy5sZW5ndGg+PjE7cD0hMDticmVhaztjYXNlIDQ6bis9cy5wb3AoKTttb3ZlVG8ocixuKTtwPSEwO2JyZWFrO2Nhc2UgNTpmb3IoO3MubGVuZ3RoPjA7KXtyKz1zLnNoaWZ0KCk7bis9cy5zaGlmdCgpO2xpbmVUbyhyLG4pfWJyZWFrO2Nhc2UgNjpmb3IoO3MubGVuZ3RoPjA7KXtyKz1zLnNoaWZ0KCk7bGluZVRvKHIsbik7aWYoMD09PXMubGVuZ3RoKWJyZWFrO24rPXMuc2hpZnQoKTtsaW5lVG8ocixuKX1icmVhaztjYXNlIDc6Zm9yKDtzLmxlbmd0aD4wOyl7bis9cy5zaGlmdCgpO2xpbmVUbyhyLG4pO2lmKDA9PT1zLmxlbmd0aClicmVhaztyKz1zLnNoaWZ0KCk7bGluZVRvKHIsbil9YnJlYWs7Y2FzZSA4OmZvcig7cy5sZW5ndGg+MDspe2M9citzLnNoaWZ0KCk7bD1uK3Muc2hpZnQoKTtoPWMrcy5zaGlmdCgpO0M9bCtzLnNoaWZ0KCk7cj1oK3Muc2hpZnQoKTtuPUMrcy5zaGlmdCgpO2JlemllckN1cnZlVG8oYyxsLGgsQyxyLG4pfWJyZWFrO2Nhc2UgMTA6ZD1zLnBvcCgpO2Y9bnVsbDtpZihpLmlzQ0ZGQ0lERm9udCl7Y29uc3QgZT1pLmZkU2VsZWN0LmdldEZESW5kZXgoYSk7aWYoZT49MCYmZTxpLmZkQXJyYXkubGVuZ3RoKXtjb25zdCB0PWkuZmRBcnJheVtlXTtsZXQgYTt0LnByaXZhdGVEaWN0Py5zdWJyc0luZGV4JiYoYT10LnByaXZhdGVEaWN0LnN1YnJzSW5kZXgub2JqZWN0cyk7aWYoYSl7ZCs9Z2V0U3Vicm91dGluZUJpYXMoYSk7Zj1hW2RdfX1lbHNlIHdhcm4oIkludmFsaWQgZmQgaW5kZXggZm9yIGdseXBoIGluZGV4LiIpfWVsc2UgZj1pLnN1YnJzW2QraS5zdWJyc0JpYXNdO2YmJnBhcnNlKGYpO2JyZWFrO2Nhc2UgMTE6cmV0dXJuO2Nhc2UgMTI6bT1lW2crK107c3dpdGNoKG0pe2Nhc2UgMzQ6Yz1yK3Muc2hpZnQoKTtoPWMrcy5zaGlmdCgpO1E9bitzLnNoaWZ0KCk7cj1oK3Muc2hpZnQoKTtiZXppZXJDdXJ2ZVRvKGMsbixoLFEscixRKTtjPXIrcy5zaGlmdCgpO2g9YytzLnNoaWZ0KCk7cj1oK3Muc2hpZnQoKTtiZXppZXJDdXJ2ZVRvKGMsUSxoLG4scixuKTticmVhaztjYXNlIDM1OmM9citzLnNoaWZ0KCk7bD1uK3Muc2hpZnQoKTtoPWMrcy5zaGlmdCgpO0M9bCtzLnNoaWZ0KCk7cj1oK3Muc2hpZnQoKTtuPUMrcy5zaGlmdCgpO2JlemllckN1cnZlVG8oYyxsLGgsQyxyLG4pO2M9citzLnNoaWZ0KCk7bD1uK3Muc2hpZnQoKTtoPWMrcy5zaGlmdCgpO0M9bCtzLnNoaWZ0KCk7cj1oK3Muc2hpZnQoKTtuPUMrcy5zaGlmdCgpO2JlemllckN1cnZlVG8oYyxsLGgsQyxyLG4pO3MucG9wKCk7YnJlYWs7Y2FzZSAzNjpjPXIrcy5zaGlmdCgpO1E9bitzLnNoaWZ0KCk7aD1jK3Muc2hpZnQoKTtFPVErcy5zaGlmdCgpO3I9aCtzLnNoaWZ0KCk7YmV6aWVyQ3VydmVUbyhjLFEsaCxFLHIsRSk7Yz1yK3Muc2hpZnQoKTtoPWMrcy5zaGlmdCgpO3U9RStzLnNoaWZ0KCk7cj1oK3Muc2hpZnQoKTtiZXppZXJDdXJ2ZVRvKGMsRSxoLHUscixuKTticmVhaztjYXNlIDM3OmNvbnN0IGU9cix0PW47Yz1yK3Muc2hpZnQoKTtsPW4rcy5zaGlmdCgpO2g9YytzLnNoaWZ0KCk7Qz1sK3Muc2hpZnQoKTtyPWgrcy5zaGlmdCgpO249QytzLnNoaWZ0KCk7YmV6aWVyQ3VydmVUbyhjLGwsaCxDLHIsbik7Yz1yK3Muc2hpZnQoKTtsPW4rcy5zaGlmdCgpO2g9YytzLnNoaWZ0KCk7Qz1sK3Muc2hpZnQoKTtyPWg7bj1DO01hdGguYWJzKHItZSk+TWF0aC5hYnMobi10KT9yKz1zLnNoaWZ0KCk6bis9cy5zaGlmdCgpO2JlemllckN1cnZlVG8oYyxsLGgsQyxyLG4pO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEZvcm1hdEVycm9yKGB1bmtub3duIG9wZXJhdG9yOiAxMiAke219YCl9YnJlYWs7Y2FzZSAxNDppZihzLmxlbmd0aD49NCl7Y29uc3QgZT1zLnBvcCgpLGE9cy5wb3AoKTtuPXMucG9wKCk7cj1zLnBvcCgpO3QuYWRkKFF0KTt0LmFkZChkdCxbcixuXSk7bGV0IG89bG9va3VwQ21hcChpLmNtYXAsU3RyaW5nLmZyb21DaGFyQ29kZShpLmdseXBoTmFtZU1hcFtmaVtlXV0pKTtjb21waWxlQ2hhclN0cmluZyhpLmdseXBoc1tvLmdseXBoSWRdLHQsaSxvLmdseXBoSWQpO3QuYWRkKEJ0KTtvPWxvb2t1cENtYXAoaS5jbWFwLFN0cmluZy5mcm9tQ2hhckNvZGUoaS5nbHlwaE5hbWVNYXBbZmlbYV1dKSk7Y29tcGlsZUNoYXJTdHJpbmcoaS5nbHlwaHNbby5nbHlwaElkXSx0LGksby5nbHlwaElkKX1yZXR1cm47Y2FzZSAxOTpjYXNlIDIwOm8rPXMubGVuZ3RoPj4xO2crPW8rNz4+MztwPSEwO2JyZWFrO2Nhc2UgMjE6bis9cy5wb3AoKTtyKz1zLnBvcCgpO21vdmVUbyhyLG4pO3A9ITA7YnJlYWs7Y2FzZSAyMjpyKz1zLnBvcCgpO21vdmVUbyhyLG4pO3A9ITA7YnJlYWs7Y2FzZSAyNDpmb3IoO3MubGVuZ3RoPjI7KXtjPXIrcy5zaGlmdCgpO2w9bitzLnNoaWZ0KCk7aD1jK3Muc2hpZnQoKTtDPWwrcy5zaGlmdCgpO3I9aCtzLnNoaWZ0KCk7bj1DK3Muc2hpZnQoKTtiZXppZXJDdXJ2ZVRvKGMsbCxoLEMscixuKX1yKz1zLnNoaWZ0KCk7bis9cy5zaGlmdCgpO2xpbmVUbyhyLG4pO2JyZWFrO2Nhc2UgMjU6Zm9yKDtzLmxlbmd0aD42Oyl7cis9cy5zaGlmdCgpO24rPXMuc2hpZnQoKTtsaW5lVG8ocixuKX1jPXIrcy5zaGlmdCgpO2w9bitzLnNoaWZ0KCk7aD1jK3Muc2hpZnQoKTtDPWwrcy5zaGlmdCgpO3I9aCtzLnNoaWZ0KCk7bj1DK3Muc2hpZnQoKTtiZXppZXJDdXJ2ZVRvKGMsbCxoLEMscixuKTticmVhaztjYXNlIDI2OnMubGVuZ3RoJTImJihyKz1zLnNoaWZ0KCkpO2Zvcig7cy5sZW5ndGg+MDspe2M9cjtsPW4rcy5zaGlmdCgpO2g9YytzLnNoaWZ0KCk7Qz1sK3Muc2hpZnQoKTtyPWg7bj1DK3Muc2hpZnQoKTtiZXppZXJDdXJ2ZVRvKGMsbCxoLEMscixuKX1icmVhaztjYXNlIDI3OnMubGVuZ3RoJTImJihuKz1zLnNoaWZ0KCkpO2Zvcig7cy5sZW5ndGg+MDspe2M9citzLnNoaWZ0KCk7bD1uO2g9YytzLnNoaWZ0KCk7Qz1sK3Muc2hpZnQoKTtyPWgrcy5zaGlmdCgpO249QztiZXppZXJDdXJ2ZVRvKGMsbCxoLEMscixuKX1icmVhaztjYXNlIDI4OnMucHVzaCgoZVtnXTw8MjR8ZVtnKzFdPDwxNik+PjE2KTtnKz0yO2JyZWFrO2Nhc2UgMjk6ZD1zLnBvcCgpK2kuZ3N1YnJzQmlhcztmPWkuZ3N1YnJzW2RdO2YmJnBhcnNlKGYpO2JyZWFrO2Nhc2UgMzA6Zm9yKDtzLmxlbmd0aD4wOyl7Yz1yO2w9bitzLnNoaWZ0KCk7aD1jK3Muc2hpZnQoKTtDPWwrcy5zaGlmdCgpO3I9aCtzLnNoaWZ0KCk7bj1DKygxPT09cy5sZW5ndGg/cy5zaGlmdCgpOjApO2JlemllckN1cnZlVG8oYyxsLGgsQyxyLG4pO2lmKDA9PT1zLmxlbmd0aClicmVhaztjPXIrcy5zaGlmdCgpO2w9bjtoPWMrcy5zaGlmdCgpO0M9bCtzLnNoaWZ0KCk7bj1DK3Muc2hpZnQoKTtyPWgrKDE9PT1zLmxlbmd0aD9zLnNoaWZ0KCk6MCk7YmV6aWVyQ3VydmVUbyhjLGwsaCxDLHIsbil9YnJlYWs7Y2FzZSAzMTpmb3IoO3MubGVuZ3RoPjA7KXtjPXIrcy5zaGlmdCgpO2w9bjtoPWMrcy5zaGlmdCgpO0M9bCtzLnNoaWZ0KCk7bj1DK3Muc2hpZnQoKTtyPWgrKDE9PT1zLmxlbmd0aD9zLnNoaWZ0KCk6MCk7YmV6aWVyQ3VydmVUbyhjLGwsaCxDLHIsbik7aWYoMD09PXMubGVuZ3RoKWJyZWFrO2M9cjtsPW4rcy5zaGlmdCgpO2g9YytzLnNoaWZ0KCk7Qz1sK3Muc2hpZnQoKTtyPWgrcy5zaGlmdCgpO249QysoMT09PXMubGVuZ3RoP3Muc2hpZnQoKTowKTtiZXppZXJDdXJ2ZVRvKGMsbCxoLEMscixuKX1icmVhaztkZWZhdWx0OmlmKG08MzIpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGB1bmtub3duIG9wZXJhdG9yOiAke219YCk7aWYobTwyNDcpcy5wdXNoKG0tMTM5KTtlbHNlIGlmKG08MjUxKXMucHVzaCgyNTYqKG0tMjQ3KStlW2crK10rMTA4KTtlbHNlIGlmKG08MjU1KXMucHVzaCgyNTYqLShtLTI1MSktZVtnKytdLTEwOCk7ZWxzZXtzLnB1c2goKGVbZ108PDI0fGVbZysxXTw8MTZ8ZVtnKzJdPDw4fGVbZyszXSkvNjU1MzYpO2crPTR9fXAmJihzLmxlbmd0aD0wKX19KGUpfWNvbnN0ICRpPVtdO2NsYXNzIENvbW1hbmRze2NtZHM9W107YWRkKGUsdCl7aWYodClpZihpc051bWJlckFycmF5KHQsbnVsbCkpdGhpcy5jbWRzLnB1c2goZSwuLi50KTtlbHNle3dhcm4oYENvbW1hbmRzLmFkZCAtICIke2V9IiBoYXMgYXQgbGVhc3Qgb25lIG5vbi1udW1iZXIgYXJnOiAiJHt0fSIuYCk7Y29uc3QgaT10Lm1hcCgoZT0+Im51bWJlciI9PXR5cGVvZiBlP2U6MCkpO3RoaXMuY21kcy5wdXNoKGUsLi4uaSl9ZWxzZSB0aGlzLmNtZHMucHVzaChlKX19Y2xhc3MgQ29tcGlsZWRGb250e2NvbnN0cnVjdG9yKGUpe3RoaXMuY29uc3RydWN0b3I9PT1Db21waWxlZEZvbnQmJnVucmVhY2hhYmxlKCJDYW5ub3QgaW5pdGlhbGl6ZSBDb21waWxlZEZvbnQuIik7dGhpcy5mb250TWF0cml4PWU7dGhpcy5jb21waWxlZEdseXBocz1PYmplY3QuY3JlYXRlKG51bGwpO3RoaXMuY29tcGlsZWRDaGFyQ29kZVRvR2x5cGhJZD1PYmplY3QuY3JlYXRlKG51bGwpfWdldFBhdGhKcyhlKXtjb25zdHtjaGFyQ29kZTp0LGdseXBoSWQ6aX09bG9va3VwQ21hcCh0aGlzLmNtYXAsZSk7bGV0IGEscz10aGlzLmNvbXBpbGVkR2x5cGhzW2ldO2lmKCFzKXt0cnl7cz10aGlzLmNvbXBpbGVHbHlwaCh0aGlzLmdseXBoc1tpXSxpKX1jYXRjaChlKXtzPSRpO2E9ZX10aGlzLmNvbXBpbGVkR2x5cGhzW2ldPXN9dGhpcy5jb21waWxlZENoYXJDb2RlVG9HbHlwaElkW3RdPz89aTtpZihhKXRocm93IGE7cmV0dXJuIHN9Y29tcGlsZUdseXBoKGUsdCl7aWYoIWV8fDA9PT1lLmxlbmd0aHx8MTQ9PT1lWzBdKXJldHVybiAkaTtsZXQgaT10aGlzLmZvbnRNYXRyaXg7aWYodGhpcy5pc0NGRkNJREZvbnQpe2NvbnN0IGU9dGhpcy5mZFNlbGVjdC5nZXRGREluZGV4KHQpO2lmKGU+PTAmJmU8dGhpcy5mZEFycmF5Lmxlbmd0aCl7aT10aGlzLmZkQXJyYXlbZV0uZ2V0QnlOYW1lKCJGb250TWF0cml4Iil8fGF9ZWxzZSB3YXJuKCJJbnZhbGlkIGZkIGluZGV4IGZvciBnbHlwaCBpbmRleC4iKX1jb25zdCBzPW5ldyBDb21tYW5kcztzLmFkZChRdCk7cy5hZGQodXQsaS5zbGljZSgpKTtzLmFkZChFdCk7dGhpcy5jb21waWxlR2x5cGhJbXBsKGUscyx0KTtzLmFkZChCdCk7cmV0dXJuIHMuY21kc31jb21waWxlR2x5cGhJbXBsKCl7dW5yZWFjaGFibGUoIkNoaWxkcmVuIGNsYXNzZXMgc2hvdWxkIGltcGxlbWVudCB0aGlzLiIpfWhhc0J1aWx0UGF0aChlKXtjb25zdHtjaGFyQ29kZTp0LGdseXBoSWQ6aX09bG9va3VwQ21hcCh0aGlzLmNtYXAsZSk7cmV0dXJuIHZvaWQgMCE9PXRoaXMuY29tcGlsZWRHbHlwaHNbaV0mJnZvaWQgMCE9PXRoaXMuY29tcGlsZWRDaGFyQ29kZVRvR2x5cGhJZFt0XX19Y2xhc3MgVHJ1ZVR5cGVDb21waWxlZCBleHRlbmRzIENvbXBpbGVkRm9udHtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIoaXx8WzQ4OGUtNiwwLDAsNDg4ZS02LDAsMF0pO3RoaXMuZ2x5cGhzPWU7dGhpcy5jbWFwPXR9Y29tcGlsZUdseXBoSW1wbChlLHQpe2NvbXBpbGVHbHlmKGUsdCx0aGlzKX19Y2xhc3MgVHlwZTJDb21waWxlZCBleHRlbmRzIENvbXBpbGVkRm9udHtjb25zdHJ1Y3RvcihlLHQsaSxhKXtzdXBlcihpfHxbLjAwMSwwLDAsLjAwMSwwLDBdKTt0aGlzLmdseXBocz1lLmdseXBoczt0aGlzLmdzdWJycz1lLmdzdWJyc3x8W107dGhpcy5zdWJycz1lLnN1YnJzfHxbXTt0aGlzLmNtYXA9dDt0aGlzLmdseXBoTmFtZU1hcD1hfHxOaSgpO3RoaXMuZ3N1YnJzQmlhcz1nZXRTdWJyb3V0aW5lQmlhcyh0aGlzLmdzdWJycyk7dGhpcy5zdWJyc0JpYXM9Z2V0U3Vicm91dGluZUJpYXModGhpcy5zdWJycyk7dGhpcy5pc0NGRkNJREZvbnQ9ZS5pc0NGRkNJREZvbnQ7dGhpcy5mZFNlbGVjdD1lLmZkU2VsZWN0O3RoaXMuZmRBcnJheT1lLmZkQXJyYXl9Y29tcGlsZUdseXBoSW1wbChlLHQsaSl7Y29tcGlsZUNoYXJTdHJpbmcoZSx0LHRoaXMsaSl9fWNsYXNzIEZvbnRSZW5kZXJlckZhY3Rvcnl7c3RhdGljIGNyZWF0ZShlLHQpe2NvbnN0IGk9bmV3IFVpbnQ4QXJyYXkoZS5kYXRhKTtsZXQgYSxzLHIsbixvLGc7Y29uc3QgYz1nZXRVaW50MTYoaSw0KTtmb3IobGV0IGU9MCxoPTEyO2U8YztlKyssaCs9MTYpe2NvbnN0IGU9Ynl0ZXNUb1N0cmluZyhpLnN1YmFycmF5KGgsaCs0KSksYz1nZXRVaW50MzIoaSxoKzgpLGw9Z2V0VWludDMyKGksaCsxMik7c3dpdGNoKGUpe2Nhc2UiY21hcCI6YT1wYXJzZUNtYXAoaSxjKTticmVhaztjYXNlImdseWYiOnM9aS5zdWJhcnJheShjLGMrbCk7YnJlYWs7Y2FzZSJsb2NhIjpyPWkuc3ViYXJyYXkoYyxjK2wpO2JyZWFrO2Nhc2UiaGVhZCI6Zz1nZXRVaW50MTYoaSxjKzE4KTtvPWdldFVpbnQxNihpLGMrNTApO2JyZWFrO2Nhc2UiQ0ZGICI6bj1wYXJzZUNmZihpLGMsYytsLHQpfX1pZihzKXtjb25zdCB0PWc/WzEvZywwLDAsMS9nLDAsMF06ZS5mb250TWF0cml4O3JldHVybiBuZXcgVHJ1ZVR5cGVDb21waWxlZChmdW5jdGlvbiBwYXJzZUdseWZUYWJsZShlLHQsaSl7bGV0IGEscztpZihpKXthPTQ7cz1nZXRVaW50MzJ9ZWxzZXthPTI7cz0oZSx0KT0+MipnZXRVaW50MTYoZSx0KX1jb25zdCByPVtdO2xldCBuPXModCwwKTtmb3IobGV0IGk9YTtpPHQubGVuZ3RoO2krPWEpe2NvbnN0IGE9cyh0LGkpO3IucHVzaChlLnN1YmFycmF5KG4sYSkpO249YX1yZXR1cm4gcn0ocyxyLG8pLGEsdCl9cmV0dXJuIG5ldyBUeXBlMkNvbXBpbGVkKG4sYSxlLmZvbnRNYXRyaXgsZS5nbHlwaE5hbWVNYXApfX1jb25zdCBBYT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2UuQ291cmllcj02MDA7ZVsiQ291cmllci1Cb2xkIl09NjAwO2VbIkNvdXJpZXItQm9sZE9ibGlxdWUiXT02MDA7ZVsiQ291cmllci1PYmxpcXVlIl09NjAwO2UuSGVsdmV0aWNhPWdldExvb2t1cFRhYmxlRmFjdG9yeSgoZnVuY3Rpb24oZSl7ZS5zcGFjZT0yNzg7ZS5leGNsYW09Mjc4O2UucXVvdGVkYmw9MzU1O2UubnVtYmVyc2lnbj01NTY7ZS5kb2xsYXI9NTU2O2UucGVyY2VudD04ODk7ZS5hbXBlcnNhbmQ9NjY3O2UucXVvdGVyaWdodD0yMjI7ZS5wYXJlbmxlZnQ9MzMzO2UucGFyZW5yaWdodD0zMzM7ZS5hc3Rlcmlzaz0zODk7ZS5wbHVzPTU4NDtlLmNvbW1hPTI3ODtlLmh5cGhlbj0zMzM7ZS5wZXJpb2Q9Mjc4O2Uuc2xhc2g9Mjc4O2UuemVybz01NTY7ZS5vbmU9NTU2O2UudHdvPTU1NjtlLnRocmVlPTU1NjtlLmZvdXI9NTU2O2UuZml2ZT01NTY7ZS5zaXg9NTU2O2Uuc2V2ZW49NTU2O2UuZWlnaHQ9NTU2O2UubmluZT01NTY7ZS5jb2xvbj0yNzg7ZS5zZW1pY29sb249Mjc4O2UubGVzcz01ODQ7ZS5lcXVhbD01ODQ7ZS5ncmVhdGVyPTU4NDtlLnF1ZXN0aW9uPTU1NjtlLmF0PTEwMTU7ZS5BPTY2NztlLkI9NjY3O2UuQz03MjI7ZS5EPTcyMjtlLkU9NjY3O2UuRj02MTE7ZS5HPTc3ODtlLkg9NzIyO2UuST0yNzg7ZS5KPTUwMDtlLks9NjY3O2UuTD01NTY7ZS5NPTgzMztlLk49NzIyO2UuTz03Nzg7ZS5QPTY2NztlLlE9Nzc4O2UuUj03MjI7ZS5TPTY2NztlLlQ9NjExO2UuVT03MjI7ZS5WPTY2NztlLlc9OTQ0O2UuWD02Njc7ZS5ZPTY2NztlLlo9NjExO2UuYnJhY2tldGxlZnQ9Mjc4O2UuYmFja3NsYXNoPTI3ODtlLmJyYWNrZXRyaWdodD0yNzg7ZS5hc2NpaWNpcmN1bT00Njk7ZS51bmRlcnNjb3JlPTU1NjtlLnF1b3RlbGVmdD0yMjI7ZS5hPTU1NjtlLmI9NTU2O2UuYz01MDA7ZS5kPTU1NjtlLmU9NTU2O2UuZj0yNzg7ZS5nPTU1NjtlLmg9NTU2O2UuaT0yMjI7ZS5qPTIyMjtlLms9NTAwO2UubD0yMjI7ZS5tPTgzMztlLm49NTU2O2Uubz01NTY7ZS5wPTU1NjtlLnE9NTU2O2Uucj0zMzM7ZS5zPTUwMDtlLnQ9Mjc4O2UudT01NTY7ZS52PTUwMDtlLnc9NzIyO2UueD01MDA7ZS55PTUwMDtlLno9NTAwO2UuYnJhY2VsZWZ0PTMzNDtlLmJhcj0yNjA7ZS5icmFjZXJpZ2h0PTMzNDtlLmFzY2lpdGlsZGU9NTg0O2UuZXhjbGFtZG93bj0zMzM7ZS5jZW50PTU1NjtlLnN0ZXJsaW5nPTU1NjtlLmZyYWN0aW9uPTE2NztlLnllbj01NTY7ZS5mbG9yaW49NTU2O2Uuc2VjdGlvbj01NTY7ZS5jdXJyZW5jeT01NTY7ZS5xdW90ZXNpbmdsZT0xOTE7ZS5xdW90ZWRibGxlZnQ9MzMzO2UuZ3VpbGxlbW90bGVmdD01NTY7ZS5ndWlsc2luZ2xsZWZ0PTMzMztlLmd1aWxzaW5nbHJpZ2h0PTMzMztlLmZpPTUwMDtlLmZsPTUwMDtlLmVuZGFzaD01NTY7ZS5kYWdnZXI9NTU2O2UuZGFnZ2VyZGJsPTU1NjtlLnBlcmlvZGNlbnRlcmVkPTI3ODtlLnBhcmFncmFwaD01Mzc7ZS5idWxsZXQ9MzUwO2UucXVvdGVzaW5nbGJhc2U9MjIyO2UucXVvdGVkYmxiYXNlPTMzMztlLnF1b3RlZGJscmlnaHQ9MzMzO2UuZ3VpbGxlbW90cmlnaHQ9NTU2O2UuZWxsaXBzaXM9MWUzO2UucGVydGhvdXNhbmQ9MWUzO2UucXVlc3Rpb25kb3duPTYxMTtlLmdyYXZlPTMzMztlLmFjdXRlPTMzMztlLmNpcmN1bWZsZXg9MzMzO2UudGlsZGU9MzMzO2UubWFjcm9uPTMzMztlLmJyZXZlPTMzMztlLmRvdGFjY2VudD0zMzM7ZS5kaWVyZXNpcz0zMzM7ZS5yaW5nPTMzMztlLmNlZGlsbGE9MzMzO2UuaHVuZ2FydW1sYXV0PTMzMztlLm9nb25laz0zMzM7ZS5jYXJvbj0zMzM7ZS5lbWRhc2g9MWUzO2UuQUU9MWUzO2Uub3JkZmVtaW5pbmU9MzcwO2UuTHNsYXNoPTU1NjtlLk9zbGFzaD03Nzg7ZS5PRT0xZTM7ZS5vcmRtYXNjdWxpbmU9MzY1O2UuYWU9ODg5O2UuZG90bGVzc2k9Mjc4O2UubHNsYXNoPTIyMjtlLm9zbGFzaD02MTE7ZS5vZT05NDQ7ZS5nZXJtYW5kYmxzPTYxMTtlLklkaWVyZXNpcz0yNzg7ZS5lYWN1dGU9NTU2O2UuYWJyZXZlPTU1NjtlLnVodW5nYXJ1bWxhdXQ9NTU2O2UuZWNhcm9uPTU1NjtlLllkaWVyZXNpcz02Njc7ZS5kaXZpZGU9NTg0O2UuWWFjdXRlPTY2NztlLkFjaXJjdW1mbGV4PTY2NztlLmFhY3V0ZT01NTY7ZS5VY2lyY3VtZmxleD03MjI7ZS55YWN1dGU9NTAwO2Uuc2NvbW1hYWNjZW50PTUwMDtlLmVjaXJjdW1mbGV4PTU1NjtlLlVyaW5nPTcyMjtlLlVkaWVyZXNpcz03MjI7ZS5hb2dvbmVrPTU1NjtlLlVhY3V0ZT03MjI7ZS51b2dvbmVrPTU1NjtlLkVkaWVyZXNpcz02Njc7ZS5EY3JvYXQ9NzIyO2UuY29tbWFhY2NlbnQ9MjUwO2UuY29weXJpZ2h0PTczNztlLkVtYWNyb249NjY3O2UuY2Nhcm9uPTUwMDtlLmFyaW5nPTU1NjtlLk5jb21tYWFjY2VudD03MjI7ZS5sYWN1dGU9MjIyO2UuYWdyYXZlPTU1NjtlLlRjb21tYWFjY2VudD02MTE7ZS5DYWN1dGU9NzIyO2UuYXRpbGRlPTU1NjtlLkVkb3RhY2NlbnQ9NjY3O2Uuc2Nhcm9uPTUwMDtlLnNjZWRpbGxhPTUwMDtlLmlhY3V0ZT0yNzg7ZS5sb3plbmdlPTQ3MTtlLlJjYXJvbj03MjI7ZS5HY29tbWFhY2NlbnQ9Nzc4O2UudWNpcmN1bWZsZXg9NTU2O2UuYWNpcmN1bWZsZXg9NTU2O2UuQW1hY3Jvbj02Njc7ZS5yY2Fyb249MzMzO2UuY2NlZGlsbGE9NTAwO2UuWmRvdGFjY2VudD02MTE7ZS5UaG9ybj02Njc7ZS5PbWFjcm9uPTc3ODtlLlJhY3V0ZT03MjI7ZS5TYWN1dGU9NjY3O2UuZGNhcm9uPTY0MztlLlVtYWNyb249NzIyO2UudXJpbmc9NTU2O2UudGhyZWVzdXBlcmlvcj0zMzM7ZS5PZ3JhdmU9Nzc4O2UuQWdyYXZlPTY2NztlLkFicmV2ZT02Njc7ZS5tdWx0aXBseT01ODQ7ZS51YWN1dGU9NTU2O2UuVGNhcm9uPTYxMTtlLnBhcnRpYWxkaWZmPTQ3NjtlLnlkaWVyZXNpcz01MDA7ZS5OYWN1dGU9NzIyO2UuaWNpcmN1bWZsZXg9Mjc4O2UuRWNpcmN1bWZsZXg9NjY3O2UuYWRpZXJlc2lzPTU1NjtlLmVkaWVyZXNpcz01NTY7ZS5jYWN1dGU9NTAwO2UubmFjdXRlPTU1NjtlLnVtYWNyb249NTU2O2UuTmNhcm9uPTcyMjtlLklhY3V0ZT0yNzg7ZS5wbHVzbWludXM9NTg0O2UuYnJva2VuYmFyPTI2MDtlLnJlZ2lzdGVyZWQ9NzM3O2UuR2JyZXZlPTc3ODtlLklkb3RhY2NlbnQ9Mjc4O2Uuc3VtbWF0aW9uPTYwMDtlLkVncmF2ZT02Njc7ZS5yYWN1dGU9MzMzO2Uub21hY3Jvbj01NTY7ZS5aYWN1dGU9NjExO2UuWmNhcm9uPTYxMTtlLmdyZWF0ZXJlcXVhbD01NDk7ZS5FdGg9NzIyO2UuQ2NlZGlsbGE9NzIyO2UubGNvbW1hYWNjZW50PTIyMjtlLnRjYXJvbj0zMTc7ZS5lb2dvbmVrPTU1NjtlLlVvZ29uZWs9NzIyO2UuQWFjdXRlPTY2NztlLkFkaWVyZXNpcz02Njc7ZS5lZ3JhdmU9NTU2O2UuemFjdXRlPTUwMDtlLmlvZ29uZWs9MjIyO2UuT2FjdXRlPTc3ODtlLm9hY3V0ZT01NTY7ZS5hbWFjcm9uPTU1NjtlLnNhY3V0ZT01MDA7ZS5pZGllcmVzaXM9Mjc4O2UuT2NpcmN1bWZsZXg9Nzc4O2UuVWdyYXZlPTcyMjtlLkRlbHRhPTYxMjtlLnRob3JuPTU1NjtlLnR3b3N1cGVyaW9yPTMzMztlLk9kaWVyZXNpcz03Nzg7ZS5tdT01NTY7ZS5pZ3JhdmU9Mjc4O2Uub2h1bmdhcnVtbGF1dD01NTY7ZS5Fb2dvbmVrPTY2NztlLmRjcm9hdD01NTY7ZS50aHJlZXF1YXJ0ZXJzPTgzNDtlLlNjZWRpbGxhPTY2NztlLmxjYXJvbj0yOTk7ZS5LY29tbWFhY2NlbnQ9NjY3O2UuTGFjdXRlPTU1NjtlLnRyYWRlbWFyaz0xZTM7ZS5lZG90YWNjZW50PTU1NjtlLklncmF2ZT0yNzg7ZS5JbWFjcm9uPTI3ODtlLkxjYXJvbj01NTY7ZS5vbmVoYWxmPTgzNDtlLmxlc3NlcXVhbD01NDk7ZS5vY2lyY3VtZmxleD01NTY7ZS5udGlsZGU9NTU2O2UuVWh1bmdhcnVtbGF1dD03MjI7ZS5FYWN1dGU9NjY3O2UuZW1hY3Jvbj01NTY7ZS5nYnJldmU9NTU2O2Uub25lcXVhcnRlcj04MzQ7ZS5TY2Fyb249NjY3O2UuU2NvbW1hYWNjZW50PTY2NztlLk9odW5nYXJ1bWxhdXQ9Nzc4O2UuZGVncmVlPTQwMDtlLm9ncmF2ZT01NTY7ZS5DY2Fyb249NzIyO2UudWdyYXZlPTU1NjtlLnJhZGljYWw9NDUzO2UuRGNhcm9uPTcyMjtlLnJjb21tYWFjY2VudD0zMzM7ZS5OdGlsZGU9NzIyO2Uub3RpbGRlPTU1NjtlLlJjb21tYWFjY2VudD03MjI7ZS5MY29tbWFhY2NlbnQ9NTU2O2UuQXRpbGRlPTY2NztlLkFvZ29uZWs9NjY3O2UuQXJpbmc9NjY3O2UuT3RpbGRlPTc3ODtlLnpkb3RhY2NlbnQ9NTAwO2UuRWNhcm9uPTY2NztlLklvZ29uZWs9Mjc4O2Uua2NvbW1hYWNjZW50PTUwMDtlLm1pbnVzPTU4NDtlLkljaXJjdW1mbGV4PTI3ODtlLm5jYXJvbj01NTY7ZS50Y29tbWFhY2NlbnQ9Mjc4O2UubG9naWNhbG5vdD01ODQ7ZS5vZGllcmVzaXM9NTU2O2UudWRpZXJlc2lzPTU1NjtlLm5vdGVxdWFsPTU0OTtlLmdjb21tYWFjY2VudD01NTY7ZS5ldGg9NTU2O2UuemNhcm9uPTUwMDtlLm5jb21tYWFjY2VudD01NTY7ZS5vbmVzdXBlcmlvcj0zMzM7ZS5pbWFjcm9uPTI3ODtlLkV1cm89NTU2fSkpO2VbIkhlbHZldGljYS1Cb2xkIl09Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlLnNwYWNlPTI3ODtlLmV4Y2xhbT0zMzM7ZS5xdW90ZWRibD00NzQ7ZS5udW1iZXJzaWduPTU1NjtlLmRvbGxhcj01NTY7ZS5wZXJjZW50PTg4OTtlLmFtcGVyc2FuZD03MjI7ZS5xdW90ZXJpZ2h0PTI3ODtlLnBhcmVubGVmdD0zMzM7ZS5wYXJlbnJpZ2h0PTMzMztlLmFzdGVyaXNrPTM4OTtlLnBsdXM9NTg0O2UuY29tbWE9Mjc4O2UuaHlwaGVuPTMzMztlLnBlcmlvZD0yNzg7ZS5zbGFzaD0yNzg7ZS56ZXJvPTU1NjtlLm9uZT01NTY7ZS50d289NTU2O2UudGhyZWU9NTU2O2UuZm91cj01NTY7ZS5maXZlPTU1NjtlLnNpeD01NTY7ZS5zZXZlbj01NTY7ZS5laWdodD01NTY7ZS5uaW5lPTU1NjtlLmNvbG9uPTMzMztlLnNlbWljb2xvbj0zMzM7ZS5sZXNzPTU4NDtlLmVxdWFsPTU4NDtlLmdyZWF0ZXI9NTg0O2UucXVlc3Rpb249NjExO2UuYXQ9OTc1O2UuQT03MjI7ZS5CPTcyMjtlLkM9NzIyO2UuRD03MjI7ZS5FPTY2NztlLkY9NjExO2UuRz03Nzg7ZS5IPTcyMjtlLkk9Mjc4O2UuSj01NTY7ZS5LPTcyMjtlLkw9NjExO2UuTT04MzM7ZS5OPTcyMjtlLk89Nzc4O2UuUD02Njc7ZS5RPTc3ODtlLlI9NzIyO2UuUz02Njc7ZS5UPTYxMTtlLlU9NzIyO2UuVj02Njc7ZS5XPTk0NDtlLlg9NjY3O2UuWT02Njc7ZS5aPTYxMTtlLmJyYWNrZXRsZWZ0PTMzMztlLmJhY2tzbGFzaD0yNzg7ZS5icmFja2V0cmlnaHQ9MzMzO2UuYXNjaWljaXJjdW09NTg0O2UudW5kZXJzY29yZT01NTY7ZS5xdW90ZWxlZnQ9Mjc4O2UuYT01NTY7ZS5iPTYxMTtlLmM9NTU2O2UuZD02MTE7ZS5lPTU1NjtlLmY9MzMzO2UuZz02MTE7ZS5oPTYxMTtlLmk9Mjc4O2Uuaj0yNzg7ZS5rPTU1NjtlLmw9Mjc4O2UubT04ODk7ZS5uPTYxMTtlLm89NjExO2UucD02MTE7ZS5xPTYxMTtlLnI9Mzg5O2Uucz01NTY7ZS50PTMzMztlLnU9NjExO2Uudj01NTY7ZS53PTc3ODtlLng9NTU2O2UueT01NTY7ZS56PTUwMDtlLmJyYWNlbGVmdD0zODk7ZS5iYXI9MjgwO2UuYnJhY2VyaWdodD0zODk7ZS5hc2NpaXRpbGRlPTU4NDtlLmV4Y2xhbWRvd249MzMzO2UuY2VudD01NTY7ZS5zdGVybGluZz01NTY7ZS5mcmFjdGlvbj0xNjc7ZS55ZW49NTU2O2UuZmxvcmluPTU1NjtlLnNlY3Rpb249NTU2O2UuY3VycmVuY3k9NTU2O2UucXVvdGVzaW5nbGU9MjM4O2UucXVvdGVkYmxsZWZ0PTUwMDtlLmd1aWxsZW1vdGxlZnQ9NTU2O2UuZ3VpbHNpbmdsbGVmdD0zMzM7ZS5ndWlsc2luZ2xyaWdodD0zMzM7ZS5maT02MTE7ZS5mbD02MTE7ZS5lbmRhc2g9NTU2O2UuZGFnZ2VyPTU1NjtlLmRhZ2dlcmRibD01NTY7ZS5wZXJpb2RjZW50ZXJlZD0yNzg7ZS5wYXJhZ3JhcGg9NTU2O2UuYnVsbGV0PTM1MDtlLnF1b3Rlc2luZ2xiYXNlPTI3ODtlLnF1b3RlZGJsYmFzZT01MDA7ZS5xdW90ZWRibHJpZ2h0PTUwMDtlLmd1aWxsZW1vdHJpZ2h0PTU1NjtlLmVsbGlwc2lzPTFlMztlLnBlcnRob3VzYW5kPTFlMztlLnF1ZXN0aW9uZG93bj02MTE7ZS5ncmF2ZT0zMzM7ZS5hY3V0ZT0zMzM7ZS5jaXJjdW1mbGV4PTMzMztlLnRpbGRlPTMzMztlLm1hY3Jvbj0zMzM7ZS5icmV2ZT0zMzM7ZS5kb3RhY2NlbnQ9MzMzO2UuZGllcmVzaXM9MzMzO2UucmluZz0zMzM7ZS5jZWRpbGxhPTMzMztlLmh1bmdhcnVtbGF1dD0zMzM7ZS5vZ29uZWs9MzMzO2UuY2Fyb249MzMzO2UuZW1kYXNoPTFlMztlLkFFPTFlMztlLm9yZGZlbWluaW5lPTM3MDtlLkxzbGFzaD02MTE7ZS5Pc2xhc2g9Nzc4O2UuT0U9MWUzO2Uub3JkbWFzY3VsaW5lPTM2NTtlLmFlPTg4OTtlLmRvdGxlc3NpPTI3ODtlLmxzbGFzaD0yNzg7ZS5vc2xhc2g9NjExO2Uub2U9OTQ0O2UuZ2VybWFuZGJscz02MTE7ZS5JZGllcmVzaXM9Mjc4O2UuZWFjdXRlPTU1NjtlLmFicmV2ZT01NTY7ZS51aHVuZ2FydW1sYXV0PTYxMTtlLmVjYXJvbj01NTY7ZS5ZZGllcmVzaXM9NjY3O2UuZGl2aWRlPTU4NDtlLllhY3V0ZT02Njc7ZS5BY2lyY3VtZmxleD03MjI7ZS5hYWN1dGU9NTU2O2UuVWNpcmN1bWZsZXg9NzIyO2UueWFjdXRlPTU1NjtlLnNjb21tYWFjY2VudD01NTY7ZS5lY2lyY3VtZmxleD01NTY7ZS5VcmluZz03MjI7ZS5VZGllcmVzaXM9NzIyO2UuYW9nb25laz01NTY7ZS5VYWN1dGU9NzIyO2UudW9nb25laz02MTE7ZS5FZGllcmVzaXM9NjY3O2UuRGNyb2F0PTcyMjtlLmNvbW1hYWNjZW50PTI1MDtlLmNvcHlyaWdodD03Mzc7ZS5FbWFjcm9uPTY2NztlLmNjYXJvbj01NTY7ZS5hcmluZz01NTY7ZS5OY29tbWFhY2NlbnQ9NzIyO2UubGFjdXRlPTI3ODtlLmFncmF2ZT01NTY7ZS5UY29tbWFhY2NlbnQ9NjExO2UuQ2FjdXRlPTcyMjtlLmF0aWxkZT01NTY7ZS5FZG90YWNjZW50PTY2NztlLnNjYXJvbj01NTY7ZS5zY2VkaWxsYT01NTY7ZS5pYWN1dGU9Mjc4O2UubG96ZW5nZT00OTQ7ZS5SY2Fyb249NzIyO2UuR2NvbW1hYWNjZW50PTc3ODtlLnVjaXJjdW1mbGV4PTYxMTtlLmFjaXJjdW1mbGV4PTU1NjtlLkFtYWNyb249NzIyO2UucmNhcm9uPTM4OTtlLmNjZWRpbGxhPTU1NjtlLlpkb3RhY2NlbnQ9NjExO2UuVGhvcm49NjY3O2UuT21hY3Jvbj03Nzg7ZS5SYWN1dGU9NzIyO2UuU2FjdXRlPTY2NztlLmRjYXJvbj03NDM7ZS5VbWFjcm9uPTcyMjtlLnVyaW5nPTYxMTtlLnRocmVlc3VwZXJpb3I9MzMzO2UuT2dyYXZlPTc3ODtlLkFncmF2ZT03MjI7ZS5BYnJldmU9NzIyO2UubXVsdGlwbHk9NTg0O2UudWFjdXRlPTYxMTtlLlRjYXJvbj02MTE7ZS5wYXJ0aWFsZGlmZj00OTQ7ZS55ZGllcmVzaXM9NTU2O2UuTmFjdXRlPTcyMjtlLmljaXJjdW1mbGV4PTI3ODtlLkVjaXJjdW1mbGV4PTY2NztlLmFkaWVyZXNpcz01NTY7ZS5lZGllcmVzaXM9NTU2O2UuY2FjdXRlPTU1NjtlLm5hY3V0ZT02MTE7ZS51bWFjcm9uPTYxMTtlLk5jYXJvbj03MjI7ZS5JYWN1dGU9Mjc4O2UucGx1c21pbnVzPTU4NDtlLmJyb2tlbmJhcj0yODA7ZS5yZWdpc3RlcmVkPTczNztlLkdicmV2ZT03Nzg7ZS5JZG90YWNjZW50PTI3ODtlLnN1bW1hdGlvbj02MDA7ZS5FZ3JhdmU9NjY3O2UucmFjdXRlPTM4OTtlLm9tYWNyb249NjExO2UuWmFjdXRlPTYxMTtlLlpjYXJvbj02MTE7ZS5ncmVhdGVyZXF1YWw9NTQ5O2UuRXRoPTcyMjtlLkNjZWRpbGxhPTcyMjtlLmxjb21tYWFjY2VudD0yNzg7ZS50Y2Fyb249Mzg5O2UuZW9nb25laz01NTY7ZS5Vb2dvbmVrPTcyMjtlLkFhY3V0ZT03MjI7ZS5BZGllcmVzaXM9NzIyO2UuZWdyYXZlPTU1NjtlLnphY3V0ZT01MDA7ZS5pb2dvbmVrPTI3ODtlLk9hY3V0ZT03Nzg7ZS5vYWN1dGU9NjExO2UuYW1hY3Jvbj01NTY7ZS5zYWN1dGU9NTU2O2UuaWRpZXJlc2lzPTI3ODtlLk9jaXJjdW1mbGV4PTc3ODtlLlVncmF2ZT03MjI7ZS5EZWx0YT02MTI7ZS50aG9ybj02MTE7ZS50d29zdXBlcmlvcj0zMzM7ZS5PZGllcmVzaXM9Nzc4O2UubXU9NjExO2UuaWdyYXZlPTI3ODtlLm9odW5nYXJ1bWxhdXQ9NjExO2UuRW9nb25laz02Njc7ZS5kY3JvYXQ9NjExO2UudGhyZWVxdWFydGVycz04MzQ7ZS5TY2VkaWxsYT02Njc7ZS5sY2Fyb249NDAwO2UuS2NvbW1hYWNjZW50PTcyMjtlLkxhY3V0ZT02MTE7ZS50cmFkZW1hcms9MWUzO2UuZWRvdGFjY2VudD01NTY7ZS5JZ3JhdmU9Mjc4O2UuSW1hY3Jvbj0yNzg7ZS5MY2Fyb249NjExO2Uub25laGFsZj04MzQ7ZS5sZXNzZXF1YWw9NTQ5O2Uub2NpcmN1bWZsZXg9NjExO2UubnRpbGRlPTYxMTtlLlVodW5nYXJ1bWxhdXQ9NzIyO2UuRWFjdXRlPTY2NztlLmVtYWNyb249NTU2O2UuZ2JyZXZlPTYxMTtlLm9uZXF1YXJ0ZXI9ODM0O2UuU2Nhcm9uPTY2NztlLlNjb21tYWFjY2VudD02Njc7ZS5PaHVuZ2FydW1sYXV0PTc3ODtlLmRlZ3JlZT00MDA7ZS5vZ3JhdmU9NjExO2UuQ2Nhcm9uPTcyMjtlLnVncmF2ZT02MTE7ZS5yYWRpY2FsPTU0OTtlLkRjYXJvbj03MjI7ZS5yY29tbWFhY2NlbnQ9Mzg5O2UuTnRpbGRlPTcyMjtlLm90aWxkZT02MTE7ZS5SY29tbWFhY2NlbnQ9NzIyO2UuTGNvbW1hYWNjZW50PTYxMTtlLkF0aWxkZT03MjI7ZS5Bb2dvbmVrPTcyMjtlLkFyaW5nPTcyMjtlLk90aWxkZT03Nzg7ZS56ZG90YWNjZW50PTUwMDtlLkVjYXJvbj02Njc7ZS5Jb2dvbmVrPTI3ODtlLmtjb21tYWFjY2VudD01NTY7ZS5taW51cz01ODQ7ZS5JY2lyY3VtZmxleD0yNzg7ZS5uY2Fyb249NjExO2UudGNvbW1hYWNjZW50PTMzMztlLmxvZ2ljYWxub3Q9NTg0O2Uub2RpZXJlc2lzPTYxMTtlLnVkaWVyZXNpcz02MTE7ZS5ub3RlcXVhbD01NDk7ZS5nY29tbWFhY2NlbnQ9NjExO2UuZXRoPTYxMTtlLnpjYXJvbj01MDA7ZS5uY29tbWFhY2NlbnQ9NjExO2Uub25lc3VwZXJpb3I9MzMzO2UuaW1hY3Jvbj0yNzg7ZS5FdXJvPTU1Nn0pKTtlWyJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUiXT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2Uuc3BhY2U9Mjc4O2UuZXhjbGFtPTMzMztlLnF1b3RlZGJsPTQ3NDtlLm51bWJlcnNpZ249NTU2O2UuZG9sbGFyPTU1NjtlLnBlcmNlbnQ9ODg5O2UuYW1wZXJzYW5kPTcyMjtlLnF1b3RlcmlnaHQ9Mjc4O2UucGFyZW5sZWZ0PTMzMztlLnBhcmVucmlnaHQ9MzMzO2UuYXN0ZXJpc2s9Mzg5O2UucGx1cz01ODQ7ZS5jb21tYT0yNzg7ZS5oeXBoZW49MzMzO2UucGVyaW9kPTI3ODtlLnNsYXNoPTI3ODtlLnplcm89NTU2O2Uub25lPTU1NjtlLnR3bz01NTY7ZS50aHJlZT01NTY7ZS5mb3VyPTU1NjtlLmZpdmU9NTU2O2Uuc2l4PTU1NjtlLnNldmVuPTU1NjtlLmVpZ2h0PTU1NjtlLm5pbmU9NTU2O2UuY29sb249MzMzO2Uuc2VtaWNvbG9uPTMzMztlLmxlc3M9NTg0O2UuZXF1YWw9NTg0O2UuZ3JlYXRlcj01ODQ7ZS5xdWVzdGlvbj02MTE7ZS5hdD05NzU7ZS5BPTcyMjtlLkI9NzIyO2UuQz03MjI7ZS5EPTcyMjtlLkU9NjY3O2UuRj02MTE7ZS5HPTc3ODtlLkg9NzIyO2UuST0yNzg7ZS5KPTU1NjtlLks9NzIyO2UuTD02MTE7ZS5NPTgzMztlLk49NzIyO2UuTz03Nzg7ZS5QPTY2NztlLlE9Nzc4O2UuUj03MjI7ZS5TPTY2NztlLlQ9NjExO2UuVT03MjI7ZS5WPTY2NztlLlc9OTQ0O2UuWD02Njc7ZS5ZPTY2NztlLlo9NjExO2UuYnJhY2tldGxlZnQ9MzMzO2UuYmFja3NsYXNoPTI3ODtlLmJyYWNrZXRyaWdodD0zMzM7ZS5hc2NpaWNpcmN1bT01ODQ7ZS51bmRlcnNjb3JlPTU1NjtlLnF1b3RlbGVmdD0yNzg7ZS5hPTU1NjtlLmI9NjExO2UuYz01NTY7ZS5kPTYxMTtlLmU9NTU2O2UuZj0zMzM7ZS5nPTYxMTtlLmg9NjExO2UuaT0yNzg7ZS5qPTI3ODtlLms9NTU2O2UubD0yNzg7ZS5tPTg4OTtlLm49NjExO2Uubz02MTE7ZS5wPTYxMTtlLnE9NjExO2Uucj0zODk7ZS5zPTU1NjtlLnQ9MzMzO2UudT02MTE7ZS52PTU1NjtlLnc9Nzc4O2UueD01NTY7ZS55PTU1NjtlLno9NTAwO2UuYnJhY2VsZWZ0PTM4OTtlLmJhcj0yODA7ZS5icmFjZXJpZ2h0PTM4OTtlLmFzY2lpdGlsZGU9NTg0O2UuZXhjbGFtZG93bj0zMzM7ZS5jZW50PTU1NjtlLnN0ZXJsaW5nPTU1NjtlLmZyYWN0aW9uPTE2NztlLnllbj01NTY7ZS5mbG9yaW49NTU2O2Uuc2VjdGlvbj01NTY7ZS5jdXJyZW5jeT01NTY7ZS5xdW90ZXNpbmdsZT0yMzg7ZS5xdW90ZWRibGxlZnQ9NTAwO2UuZ3VpbGxlbW90bGVmdD01NTY7ZS5ndWlsc2luZ2xsZWZ0PTMzMztlLmd1aWxzaW5nbHJpZ2h0PTMzMztlLmZpPTYxMTtlLmZsPTYxMTtlLmVuZGFzaD01NTY7ZS5kYWdnZXI9NTU2O2UuZGFnZ2VyZGJsPTU1NjtlLnBlcmlvZGNlbnRlcmVkPTI3ODtlLnBhcmFncmFwaD01NTY7ZS5idWxsZXQ9MzUwO2UucXVvdGVzaW5nbGJhc2U9Mjc4O2UucXVvdGVkYmxiYXNlPTUwMDtlLnF1b3RlZGJscmlnaHQ9NTAwO2UuZ3VpbGxlbW90cmlnaHQ9NTU2O2UuZWxsaXBzaXM9MWUzO2UucGVydGhvdXNhbmQ9MWUzO2UucXVlc3Rpb25kb3duPTYxMTtlLmdyYXZlPTMzMztlLmFjdXRlPTMzMztlLmNpcmN1bWZsZXg9MzMzO2UudGlsZGU9MzMzO2UubWFjcm9uPTMzMztlLmJyZXZlPTMzMztlLmRvdGFjY2VudD0zMzM7ZS5kaWVyZXNpcz0zMzM7ZS5yaW5nPTMzMztlLmNlZGlsbGE9MzMzO2UuaHVuZ2FydW1sYXV0PTMzMztlLm9nb25laz0zMzM7ZS5jYXJvbj0zMzM7ZS5lbWRhc2g9MWUzO2UuQUU9MWUzO2Uub3JkZmVtaW5pbmU9MzcwO2UuTHNsYXNoPTYxMTtlLk9zbGFzaD03Nzg7ZS5PRT0xZTM7ZS5vcmRtYXNjdWxpbmU9MzY1O2UuYWU9ODg5O2UuZG90bGVzc2k9Mjc4O2UubHNsYXNoPTI3ODtlLm9zbGFzaD02MTE7ZS5vZT05NDQ7ZS5nZXJtYW5kYmxzPTYxMTtlLklkaWVyZXNpcz0yNzg7ZS5lYWN1dGU9NTU2O2UuYWJyZXZlPTU1NjtlLnVodW5nYXJ1bWxhdXQ9NjExO2UuZWNhcm9uPTU1NjtlLllkaWVyZXNpcz02Njc7ZS5kaXZpZGU9NTg0O2UuWWFjdXRlPTY2NztlLkFjaXJjdW1mbGV4PTcyMjtlLmFhY3V0ZT01NTY7ZS5VY2lyY3VtZmxleD03MjI7ZS55YWN1dGU9NTU2O2Uuc2NvbW1hYWNjZW50PTU1NjtlLmVjaXJjdW1mbGV4PTU1NjtlLlVyaW5nPTcyMjtlLlVkaWVyZXNpcz03MjI7ZS5hb2dvbmVrPTU1NjtlLlVhY3V0ZT03MjI7ZS51b2dvbmVrPTYxMTtlLkVkaWVyZXNpcz02Njc7ZS5EY3JvYXQ9NzIyO2UuY29tbWFhY2NlbnQ9MjUwO2UuY29weXJpZ2h0PTczNztlLkVtYWNyb249NjY3O2UuY2Nhcm9uPTU1NjtlLmFyaW5nPTU1NjtlLk5jb21tYWFjY2VudD03MjI7ZS5sYWN1dGU9Mjc4O2UuYWdyYXZlPTU1NjtlLlRjb21tYWFjY2VudD02MTE7ZS5DYWN1dGU9NzIyO2UuYXRpbGRlPTU1NjtlLkVkb3RhY2NlbnQ9NjY3O2Uuc2Nhcm9uPTU1NjtlLnNjZWRpbGxhPTU1NjtlLmlhY3V0ZT0yNzg7ZS5sb3plbmdlPTQ5NDtlLlJjYXJvbj03MjI7ZS5HY29tbWFhY2NlbnQ9Nzc4O2UudWNpcmN1bWZsZXg9NjExO2UuYWNpcmN1bWZsZXg9NTU2O2UuQW1hY3Jvbj03MjI7ZS5yY2Fyb249Mzg5O2UuY2NlZGlsbGE9NTU2O2UuWmRvdGFjY2VudD02MTE7ZS5UaG9ybj02Njc7ZS5PbWFjcm9uPTc3ODtlLlJhY3V0ZT03MjI7ZS5TYWN1dGU9NjY3O2UuZGNhcm9uPTc0MztlLlVtYWNyb249NzIyO2UudXJpbmc9NjExO2UudGhyZWVzdXBlcmlvcj0zMzM7ZS5PZ3JhdmU9Nzc4O2UuQWdyYXZlPTcyMjtlLkFicmV2ZT03MjI7ZS5tdWx0aXBseT01ODQ7ZS51YWN1dGU9NjExO2UuVGNhcm9uPTYxMTtlLnBhcnRpYWxkaWZmPTQ5NDtlLnlkaWVyZXNpcz01NTY7ZS5OYWN1dGU9NzIyO2UuaWNpcmN1bWZsZXg9Mjc4O2UuRWNpcmN1bWZsZXg9NjY3O2UuYWRpZXJlc2lzPTU1NjtlLmVkaWVyZXNpcz01NTY7ZS5jYWN1dGU9NTU2O2UubmFjdXRlPTYxMTtlLnVtYWNyb249NjExO2UuTmNhcm9uPTcyMjtlLklhY3V0ZT0yNzg7ZS5wbHVzbWludXM9NTg0O2UuYnJva2VuYmFyPTI4MDtlLnJlZ2lzdGVyZWQ9NzM3O2UuR2JyZXZlPTc3ODtlLklkb3RhY2NlbnQ9Mjc4O2Uuc3VtbWF0aW9uPTYwMDtlLkVncmF2ZT02Njc7ZS5yYWN1dGU9Mzg5O2Uub21hY3Jvbj02MTE7ZS5aYWN1dGU9NjExO2UuWmNhcm9uPTYxMTtlLmdyZWF0ZXJlcXVhbD01NDk7ZS5FdGg9NzIyO2UuQ2NlZGlsbGE9NzIyO2UubGNvbW1hYWNjZW50PTI3ODtlLnRjYXJvbj0zODk7ZS5lb2dvbmVrPTU1NjtlLlVvZ29uZWs9NzIyO2UuQWFjdXRlPTcyMjtlLkFkaWVyZXNpcz03MjI7ZS5lZ3JhdmU9NTU2O2UuemFjdXRlPTUwMDtlLmlvZ29uZWs9Mjc4O2UuT2FjdXRlPTc3ODtlLm9hY3V0ZT02MTE7ZS5hbWFjcm9uPTU1NjtlLnNhY3V0ZT01NTY7ZS5pZGllcmVzaXM9Mjc4O2UuT2NpcmN1bWZsZXg9Nzc4O2UuVWdyYXZlPTcyMjtlLkRlbHRhPTYxMjtlLnRob3JuPTYxMTtlLnR3b3N1cGVyaW9yPTMzMztlLk9kaWVyZXNpcz03Nzg7ZS5tdT02MTE7ZS5pZ3JhdmU9Mjc4O2Uub2h1bmdhcnVtbGF1dD02MTE7ZS5Fb2dvbmVrPTY2NztlLmRjcm9hdD02MTE7ZS50aHJlZXF1YXJ0ZXJzPTgzNDtlLlNjZWRpbGxhPTY2NztlLmxjYXJvbj00MDA7ZS5LY29tbWFhY2NlbnQ9NzIyO2UuTGFjdXRlPTYxMTtlLnRyYWRlbWFyaz0xZTM7ZS5lZG90YWNjZW50PTU1NjtlLklncmF2ZT0yNzg7ZS5JbWFjcm9uPTI3ODtlLkxjYXJvbj02MTE7ZS5vbmVoYWxmPTgzNDtlLmxlc3NlcXVhbD01NDk7ZS5vY2lyY3VtZmxleD02MTE7ZS5udGlsZGU9NjExO2UuVWh1bmdhcnVtbGF1dD03MjI7ZS5FYWN1dGU9NjY3O2UuZW1hY3Jvbj01NTY7ZS5nYnJldmU9NjExO2Uub25lcXVhcnRlcj04MzQ7ZS5TY2Fyb249NjY3O2UuU2NvbW1hYWNjZW50PTY2NztlLk9odW5nYXJ1bWxhdXQ9Nzc4O2UuZGVncmVlPTQwMDtlLm9ncmF2ZT02MTE7ZS5DY2Fyb249NzIyO2UudWdyYXZlPTYxMTtlLnJhZGljYWw9NTQ5O2UuRGNhcm9uPTcyMjtlLnJjb21tYWFjY2VudD0zODk7ZS5OdGlsZGU9NzIyO2Uub3RpbGRlPTYxMTtlLlJjb21tYWFjY2VudD03MjI7ZS5MY29tbWFhY2NlbnQ9NjExO2UuQXRpbGRlPTcyMjtlLkFvZ29uZWs9NzIyO2UuQXJpbmc9NzIyO2UuT3RpbGRlPTc3ODtlLnpkb3RhY2NlbnQ9NTAwO2UuRWNhcm9uPTY2NztlLklvZ29uZWs9Mjc4O2Uua2NvbW1hYWNjZW50PTU1NjtlLm1pbnVzPTU4NDtlLkljaXJjdW1mbGV4PTI3ODtlLm5jYXJvbj02MTE7ZS50Y29tbWFhY2NlbnQ9MzMzO2UubG9naWNhbG5vdD01ODQ7ZS5vZGllcmVzaXM9NjExO2UudWRpZXJlc2lzPTYxMTtlLm5vdGVxdWFsPTU0OTtlLmdjb21tYWFjY2VudD02MTE7ZS5ldGg9NjExO2UuemNhcm9uPTUwMDtlLm5jb21tYWFjY2VudD02MTE7ZS5vbmVzdXBlcmlvcj0zMzM7ZS5pbWFjcm9uPTI3ODtlLkV1cm89NTU2fSkpO2VbIkhlbHZldGljYS1PYmxpcXVlIl09Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlLnNwYWNlPTI3ODtlLmV4Y2xhbT0yNzg7ZS5xdW90ZWRibD0zNTU7ZS5udW1iZXJzaWduPTU1NjtlLmRvbGxhcj01NTY7ZS5wZXJjZW50PTg4OTtlLmFtcGVyc2FuZD02Njc7ZS5xdW90ZXJpZ2h0PTIyMjtlLnBhcmVubGVmdD0zMzM7ZS5wYXJlbnJpZ2h0PTMzMztlLmFzdGVyaXNrPTM4OTtlLnBsdXM9NTg0O2UuY29tbWE9Mjc4O2UuaHlwaGVuPTMzMztlLnBlcmlvZD0yNzg7ZS5zbGFzaD0yNzg7ZS56ZXJvPTU1NjtlLm9uZT01NTY7ZS50d289NTU2O2UudGhyZWU9NTU2O2UuZm91cj01NTY7ZS5maXZlPTU1NjtlLnNpeD01NTY7ZS5zZXZlbj01NTY7ZS5laWdodD01NTY7ZS5uaW5lPTU1NjtlLmNvbG9uPTI3ODtlLnNlbWljb2xvbj0yNzg7ZS5sZXNzPTU4NDtlLmVxdWFsPTU4NDtlLmdyZWF0ZXI9NTg0O2UucXVlc3Rpb249NTU2O2UuYXQ9MTAxNTtlLkE9NjY3O2UuQj02Njc7ZS5DPTcyMjtlLkQ9NzIyO2UuRT02Njc7ZS5GPTYxMTtlLkc9Nzc4O2UuSD03MjI7ZS5JPTI3ODtlLko9NTAwO2UuSz02Njc7ZS5MPTU1NjtlLk09ODMzO2UuTj03MjI7ZS5PPTc3ODtlLlA9NjY3O2UuUT03Nzg7ZS5SPTcyMjtlLlM9NjY3O2UuVD02MTE7ZS5VPTcyMjtlLlY9NjY3O2UuVz05NDQ7ZS5YPTY2NztlLlk9NjY3O2UuWj02MTE7ZS5icmFja2V0bGVmdD0yNzg7ZS5iYWNrc2xhc2g9Mjc4O2UuYnJhY2tldHJpZ2h0PTI3ODtlLmFzY2lpY2lyY3VtPTQ2OTtlLnVuZGVyc2NvcmU9NTU2O2UucXVvdGVsZWZ0PTIyMjtlLmE9NTU2O2UuYj01NTY7ZS5jPTUwMDtlLmQ9NTU2O2UuZT01NTY7ZS5mPTI3ODtlLmc9NTU2O2UuaD01NTY7ZS5pPTIyMjtlLmo9MjIyO2Uuaz01MDA7ZS5sPTIyMjtlLm09ODMzO2Uubj01NTY7ZS5vPTU1NjtlLnA9NTU2O2UucT01NTY7ZS5yPTMzMztlLnM9NTAwO2UudD0yNzg7ZS51PTU1NjtlLnY9NTAwO2Uudz03MjI7ZS54PTUwMDtlLnk9NTAwO2Uuej01MDA7ZS5icmFjZWxlZnQ9MzM0O2UuYmFyPTI2MDtlLmJyYWNlcmlnaHQ9MzM0O2UuYXNjaWl0aWxkZT01ODQ7ZS5leGNsYW1kb3duPTMzMztlLmNlbnQ9NTU2O2Uuc3Rlcmxpbmc9NTU2O2UuZnJhY3Rpb249MTY3O2UueWVuPTU1NjtlLmZsb3Jpbj01NTY7ZS5zZWN0aW9uPTU1NjtlLmN1cnJlbmN5PTU1NjtlLnF1b3Rlc2luZ2xlPTE5MTtlLnF1b3RlZGJsbGVmdD0zMzM7ZS5ndWlsbGVtb3RsZWZ0PTU1NjtlLmd1aWxzaW5nbGxlZnQ9MzMzO2UuZ3VpbHNpbmdscmlnaHQ9MzMzO2UuZmk9NTAwO2UuZmw9NTAwO2UuZW5kYXNoPTU1NjtlLmRhZ2dlcj01NTY7ZS5kYWdnZXJkYmw9NTU2O2UucGVyaW9kY2VudGVyZWQ9Mjc4O2UucGFyYWdyYXBoPTUzNztlLmJ1bGxldD0zNTA7ZS5xdW90ZXNpbmdsYmFzZT0yMjI7ZS5xdW90ZWRibGJhc2U9MzMzO2UucXVvdGVkYmxyaWdodD0zMzM7ZS5ndWlsbGVtb3RyaWdodD01NTY7ZS5lbGxpcHNpcz0xZTM7ZS5wZXJ0aG91c2FuZD0xZTM7ZS5xdWVzdGlvbmRvd249NjExO2UuZ3JhdmU9MzMzO2UuYWN1dGU9MzMzO2UuY2lyY3VtZmxleD0zMzM7ZS50aWxkZT0zMzM7ZS5tYWNyb249MzMzO2UuYnJldmU9MzMzO2UuZG90YWNjZW50PTMzMztlLmRpZXJlc2lzPTMzMztlLnJpbmc9MzMzO2UuY2VkaWxsYT0zMzM7ZS5odW5nYXJ1bWxhdXQ9MzMzO2Uub2dvbmVrPTMzMztlLmNhcm9uPTMzMztlLmVtZGFzaD0xZTM7ZS5BRT0xZTM7ZS5vcmRmZW1pbmluZT0zNzA7ZS5Mc2xhc2g9NTU2O2UuT3NsYXNoPTc3ODtlLk9FPTFlMztlLm9yZG1hc2N1bGluZT0zNjU7ZS5hZT04ODk7ZS5kb3RsZXNzaT0yNzg7ZS5sc2xhc2g9MjIyO2Uub3NsYXNoPTYxMTtlLm9lPTk0NDtlLmdlcm1hbmRibHM9NjExO2UuSWRpZXJlc2lzPTI3ODtlLmVhY3V0ZT01NTY7ZS5hYnJldmU9NTU2O2UudWh1bmdhcnVtbGF1dD01NTY7ZS5lY2Fyb249NTU2O2UuWWRpZXJlc2lzPTY2NztlLmRpdmlkZT01ODQ7ZS5ZYWN1dGU9NjY3O2UuQWNpcmN1bWZsZXg9NjY3O2UuYWFjdXRlPTU1NjtlLlVjaXJjdW1mbGV4PTcyMjtlLnlhY3V0ZT01MDA7ZS5zY29tbWFhY2NlbnQ9NTAwO2UuZWNpcmN1bWZsZXg9NTU2O2UuVXJpbmc9NzIyO2UuVWRpZXJlc2lzPTcyMjtlLmFvZ29uZWs9NTU2O2UuVWFjdXRlPTcyMjtlLnVvZ29uZWs9NTU2O2UuRWRpZXJlc2lzPTY2NztlLkRjcm9hdD03MjI7ZS5jb21tYWFjY2VudD0yNTA7ZS5jb3B5cmlnaHQ9NzM3O2UuRW1hY3Jvbj02Njc7ZS5jY2Fyb249NTAwO2UuYXJpbmc9NTU2O2UuTmNvbW1hYWNjZW50PTcyMjtlLmxhY3V0ZT0yMjI7ZS5hZ3JhdmU9NTU2O2UuVGNvbW1hYWNjZW50PTYxMTtlLkNhY3V0ZT03MjI7ZS5hdGlsZGU9NTU2O2UuRWRvdGFjY2VudD02Njc7ZS5zY2Fyb249NTAwO2Uuc2NlZGlsbGE9NTAwO2UuaWFjdXRlPTI3ODtlLmxvemVuZ2U9NDcxO2UuUmNhcm9uPTcyMjtlLkdjb21tYWFjY2VudD03Nzg7ZS51Y2lyY3VtZmxleD01NTY7ZS5hY2lyY3VtZmxleD01NTY7ZS5BbWFjcm9uPTY2NztlLnJjYXJvbj0zMzM7ZS5jY2VkaWxsYT01MDA7ZS5aZG90YWNjZW50PTYxMTtlLlRob3JuPTY2NztlLk9tYWNyb249Nzc4O2UuUmFjdXRlPTcyMjtlLlNhY3V0ZT02Njc7ZS5kY2Fyb249NjQzO2UuVW1hY3Jvbj03MjI7ZS51cmluZz01NTY7ZS50aHJlZXN1cGVyaW9yPTMzMztlLk9ncmF2ZT03Nzg7ZS5BZ3JhdmU9NjY3O2UuQWJyZXZlPTY2NztlLm11bHRpcGx5PTU4NDtlLnVhY3V0ZT01NTY7ZS5UY2Fyb249NjExO2UucGFydGlhbGRpZmY9NDc2O2UueWRpZXJlc2lzPTUwMDtlLk5hY3V0ZT03MjI7ZS5pY2lyY3VtZmxleD0yNzg7ZS5FY2lyY3VtZmxleD02Njc7ZS5hZGllcmVzaXM9NTU2O2UuZWRpZXJlc2lzPTU1NjtlLmNhY3V0ZT01MDA7ZS5uYWN1dGU9NTU2O2UudW1hY3Jvbj01NTY7ZS5OY2Fyb249NzIyO2UuSWFjdXRlPTI3ODtlLnBsdXNtaW51cz01ODQ7ZS5icm9rZW5iYXI9MjYwO2UucmVnaXN0ZXJlZD03Mzc7ZS5HYnJldmU9Nzc4O2UuSWRvdGFjY2VudD0yNzg7ZS5zdW1tYXRpb249NjAwO2UuRWdyYXZlPTY2NztlLnJhY3V0ZT0zMzM7ZS5vbWFjcm9uPTU1NjtlLlphY3V0ZT02MTE7ZS5aY2Fyb249NjExO2UuZ3JlYXRlcmVxdWFsPTU0OTtlLkV0aD03MjI7ZS5DY2VkaWxsYT03MjI7ZS5sY29tbWFhY2NlbnQ9MjIyO2UudGNhcm9uPTMxNztlLmVvZ29uZWs9NTU2O2UuVW9nb25laz03MjI7ZS5BYWN1dGU9NjY3O2UuQWRpZXJlc2lzPTY2NztlLmVncmF2ZT01NTY7ZS56YWN1dGU9NTAwO2UuaW9nb25laz0yMjI7ZS5PYWN1dGU9Nzc4O2Uub2FjdXRlPTU1NjtlLmFtYWNyb249NTU2O2Uuc2FjdXRlPTUwMDtlLmlkaWVyZXNpcz0yNzg7ZS5PY2lyY3VtZmxleD03Nzg7ZS5VZ3JhdmU9NzIyO2UuRGVsdGE9NjEyO2UudGhvcm49NTU2O2UudHdvc3VwZXJpb3I9MzMzO2UuT2RpZXJlc2lzPTc3ODtlLm11PTU1NjtlLmlncmF2ZT0yNzg7ZS5vaHVuZ2FydW1sYXV0PTU1NjtlLkVvZ29uZWs9NjY3O2UuZGNyb2F0PTU1NjtlLnRocmVlcXVhcnRlcnM9ODM0O2UuU2NlZGlsbGE9NjY3O2UubGNhcm9uPTI5OTtlLktjb21tYWFjY2VudD02Njc7ZS5MYWN1dGU9NTU2O2UudHJhZGVtYXJrPTFlMztlLmVkb3RhY2NlbnQ9NTU2O2UuSWdyYXZlPTI3ODtlLkltYWNyb249Mjc4O2UuTGNhcm9uPTU1NjtlLm9uZWhhbGY9ODM0O2UubGVzc2VxdWFsPTU0OTtlLm9jaXJjdW1mbGV4PTU1NjtlLm50aWxkZT01NTY7ZS5VaHVuZ2FydW1sYXV0PTcyMjtlLkVhY3V0ZT02Njc7ZS5lbWFjcm9uPTU1NjtlLmdicmV2ZT01NTY7ZS5vbmVxdWFydGVyPTgzNDtlLlNjYXJvbj02Njc7ZS5TY29tbWFhY2NlbnQ9NjY3O2UuT2h1bmdhcnVtbGF1dD03Nzg7ZS5kZWdyZWU9NDAwO2Uub2dyYXZlPTU1NjtlLkNjYXJvbj03MjI7ZS51Z3JhdmU9NTU2O2UucmFkaWNhbD00NTM7ZS5EY2Fyb249NzIyO2UucmNvbW1hYWNjZW50PTMzMztlLk50aWxkZT03MjI7ZS5vdGlsZGU9NTU2O2UuUmNvbW1hYWNjZW50PTcyMjtlLkxjb21tYWFjY2VudD01NTY7ZS5BdGlsZGU9NjY3O2UuQW9nb25laz02Njc7ZS5BcmluZz02Njc7ZS5PdGlsZGU9Nzc4O2UuemRvdGFjY2VudD01MDA7ZS5FY2Fyb249NjY3O2UuSW9nb25laz0yNzg7ZS5rY29tbWFhY2NlbnQ9NTAwO2UubWludXM9NTg0O2UuSWNpcmN1bWZsZXg9Mjc4O2UubmNhcm9uPTU1NjtlLnRjb21tYWFjY2VudD0yNzg7ZS5sb2dpY2Fsbm90PTU4NDtlLm9kaWVyZXNpcz01NTY7ZS51ZGllcmVzaXM9NTU2O2Uubm90ZXF1YWw9NTQ5O2UuZ2NvbW1hYWNjZW50PTU1NjtlLmV0aD01NTY7ZS56Y2Fyb249NTAwO2UubmNvbW1hYWNjZW50PTU1NjtlLm9uZXN1cGVyaW9yPTMzMztlLmltYWNyb249Mjc4O2UuRXVybz01NTZ9KSk7ZS5TeW1ib2w9Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlLnNwYWNlPTI1MDtlLmV4Y2xhbT0zMzM7ZS51bml2ZXJzYWw9NzEzO2UubnVtYmVyc2lnbj01MDA7ZS5leGlzdGVudGlhbD01NDk7ZS5wZXJjZW50PTgzMztlLmFtcGVyc2FuZD03Nzg7ZS5zdWNodGhhdD00Mzk7ZS5wYXJlbmxlZnQ9MzMzO2UucGFyZW5yaWdodD0zMzM7ZS5hc3Rlcmlza21hdGg9NTAwO2UucGx1cz01NDk7ZS5jb21tYT0yNTA7ZS5taW51cz01NDk7ZS5wZXJpb2Q9MjUwO2Uuc2xhc2g9Mjc4O2UuemVybz01MDA7ZS5vbmU9NTAwO2UudHdvPTUwMDtlLnRocmVlPTUwMDtlLmZvdXI9NTAwO2UuZml2ZT01MDA7ZS5zaXg9NTAwO2Uuc2V2ZW49NTAwO2UuZWlnaHQ9NTAwO2UubmluZT01MDA7ZS5jb2xvbj0yNzg7ZS5zZW1pY29sb249Mjc4O2UubGVzcz01NDk7ZS5lcXVhbD01NDk7ZS5ncmVhdGVyPTU0OTtlLnF1ZXN0aW9uPTQ0NDtlLmNvbmdydWVudD01NDk7ZS5BbHBoYT03MjI7ZS5CZXRhPTY2NztlLkNoaT03MjI7ZS5EZWx0YT02MTI7ZS5FcHNpbG9uPTYxMTtlLlBoaT03NjM7ZS5HYW1tYT02MDM7ZS5FdGE9NzIyO2UuSW90YT0zMzM7ZS50aGV0YTE9NjMxO2UuS2FwcGE9NzIyO2UuTGFtYmRhPTY4NjtlLk11PTg4OTtlLk51PTcyMjtlLk9taWNyb249NzIyO2UuUGk9NzY4O2UuVGhldGE9NzQxO2UuUmhvPTU1NjtlLlNpZ21hPTU5MjtlLlRhdT02MTE7ZS5VcHNpbG9uPTY5MDtlLnNpZ21hMT00Mzk7ZS5PbWVnYT03Njg7ZS5YaT02NDU7ZS5Qc2k9Nzk1O2UuWmV0YT02MTE7ZS5icmFja2V0bGVmdD0zMzM7ZS50aGVyZWZvcmU9ODYzO2UuYnJhY2tldHJpZ2h0PTMzMztlLnBlcnBlbmRpY3VsYXI9NjU4O2UudW5kZXJzY29yZT01MDA7ZS5yYWRpY2FsZXg9NTAwO2UuYWxwaGE9NjMxO2UuYmV0YT01NDk7ZS5jaGk9NTQ5O2UuZGVsdGE9NDk0O2UuZXBzaWxvbj00Mzk7ZS5waGk9NTIxO2UuZ2FtbWE9NDExO2UuZXRhPTYwMztlLmlvdGE9MzI5O2UucGhpMT02MDM7ZS5rYXBwYT01NDk7ZS5sYW1iZGE9NTQ5O2UubXU9NTc2O2UubnU9NTIxO2Uub21pY3Jvbj01NDk7ZS5waT01NDk7ZS50aGV0YT01MjE7ZS5yaG89NTQ5O2Uuc2lnbWE9NjAzO2UudGF1PTQzOTtlLnVwc2lsb249NTc2O2Uub21lZ2ExPTcxMztlLm9tZWdhPTY4NjtlLnhpPTQ5MztlLnBzaT02ODY7ZS56ZXRhPTQ5NDtlLmJyYWNlbGVmdD00ODA7ZS5iYXI9MjAwO2UuYnJhY2VyaWdodD00ODA7ZS5zaW1pbGFyPTU0OTtlLkV1cm89NzUwO2UuVXBzaWxvbjE9NjIwO2UubWludXRlPTI0NztlLmxlc3NlcXVhbD01NDk7ZS5mcmFjdGlvbj0xNjc7ZS5pbmZpbml0eT03MTM7ZS5mbG9yaW49NTAwO2UuY2x1Yj03NTM7ZS5kaWFtb25kPTc1MztlLmhlYXJ0PTc1MztlLnNwYWRlPTc1MztlLmFycm93Ym90aD0xMDQyO2UuYXJyb3dsZWZ0PTk4NztlLmFycm93dXA9NjAzO2UuYXJyb3dyaWdodD05ODc7ZS5hcnJvd2Rvd249NjAzO2UuZGVncmVlPTQwMDtlLnBsdXNtaW51cz01NDk7ZS5zZWNvbmQ9NDExO2UuZ3JlYXRlcmVxdWFsPTU0OTtlLm11bHRpcGx5PTU0OTtlLnByb3BvcnRpb25hbD03MTM7ZS5wYXJ0aWFsZGlmZj00OTQ7ZS5idWxsZXQ9NDYwO2UuZGl2aWRlPTU0OTtlLm5vdGVxdWFsPTU0OTtlLmVxdWl2YWxlbmNlPTU0OTtlLmFwcHJveGVxdWFsPTU0OTtlLmVsbGlwc2lzPTFlMztlLmFycm93dmVydGV4PTYwMztlLmFycm93aG9yaXpleD0xZTM7ZS5jYXJyaWFnZXJldHVybj02NTg7ZS5hbGVwaD04MjM7ZS5JZnJha3R1cj02ODY7ZS5SZnJha3R1cj03OTU7ZS53ZWllcnN0cmFzcz05ODc7ZS5jaXJjbGVtdWx0aXBseT03Njg7ZS5jaXJjbGVwbHVzPTc2ODtlLmVtcHR5c2V0PTgyMztlLmludGVyc2VjdGlvbj03Njg7ZS51bmlvbj03Njg7ZS5wcm9wZXJzdXBlcnNldD03MTM7ZS5yZWZsZXhzdXBlcnNldD03MTM7ZS5ub3RzdWJzZXQ9NzEzO2UucHJvcGVyc3Vic2V0PTcxMztlLnJlZmxleHN1YnNldD03MTM7ZS5lbGVtZW50PTcxMztlLm5vdGVsZW1lbnQ9NzEzO2UuYW5nbGU9NzY4O2UuZ3JhZGllbnQ9NzEzO2UucmVnaXN0ZXJzZXJpZj03OTA7ZS5jb3B5cmlnaHRzZXJpZj03OTA7ZS50cmFkZW1hcmtzZXJpZj04OTA7ZS5wcm9kdWN0PTgyMztlLnJhZGljYWw9NTQ5O2UuZG90bWF0aD0yNTA7ZS5sb2dpY2Fsbm90PTcxMztlLmxvZ2ljYWxhbmQ9NjAzO2UubG9naWNhbG9yPTYwMztlLmFycm93ZGJsYm90aD0xMDQyO2UuYXJyb3dkYmxsZWZ0PTk4NztlLmFycm93ZGJsdXA9NjAzO2UuYXJyb3dkYmxyaWdodD05ODc7ZS5hcnJvd2RibGRvd249NjAzO2UubG96ZW5nZT00OTQ7ZS5hbmdsZWxlZnQ9MzI5O2UucmVnaXN0ZXJzYW5zPTc5MDtlLmNvcHlyaWdodHNhbnM9NzkwO2UudHJhZGVtYXJrc2Fucz03ODY7ZS5zdW1tYXRpb249NzEzO2UucGFyZW5sZWZ0dHA9Mzg0O2UucGFyZW5sZWZ0ZXg9Mzg0O2UucGFyZW5sZWZ0YnQ9Mzg0O2UuYnJhY2tldGxlZnR0cD0zODQ7ZS5icmFja2V0bGVmdGV4PTM4NDtlLmJyYWNrZXRsZWZ0YnQ9Mzg0O2UuYnJhY2VsZWZ0dHA9NDk0O2UuYnJhY2VsZWZ0bWlkPTQ5NDtlLmJyYWNlbGVmdGJ0PTQ5NDtlLmJyYWNlZXg9NDk0O2UuYW5nbGVyaWdodD0zMjk7ZS5pbnRlZ3JhbD0yNzQ7ZS5pbnRlZ3JhbHRwPTY4NjtlLmludGVncmFsZXg9Njg2O2UuaW50ZWdyYWxidD02ODY7ZS5wYXJlbnJpZ2h0dHA9Mzg0O2UucGFyZW5yaWdodGV4PTM4NDtlLnBhcmVucmlnaHRidD0zODQ7ZS5icmFja2V0cmlnaHR0cD0zODQ7ZS5icmFja2V0cmlnaHRleD0zODQ7ZS5icmFja2V0cmlnaHRidD0zODQ7ZS5icmFjZXJpZ2h0dHA9NDk0O2UuYnJhY2VyaWdodG1pZD00OTQ7ZS5icmFjZXJpZ2h0YnQ9NDk0O2UuYXBwbGU9NzkwfSkpO2VbIlRpbWVzLVJvbWFuIl09Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlLnNwYWNlPTI1MDtlLmV4Y2xhbT0zMzM7ZS5xdW90ZWRibD00MDg7ZS5udW1iZXJzaWduPTUwMDtlLmRvbGxhcj01MDA7ZS5wZXJjZW50PTgzMztlLmFtcGVyc2FuZD03Nzg7ZS5xdW90ZXJpZ2h0PTMzMztlLnBhcmVubGVmdD0zMzM7ZS5wYXJlbnJpZ2h0PTMzMztlLmFzdGVyaXNrPTUwMDtlLnBsdXM9NTY0O2UuY29tbWE9MjUwO2UuaHlwaGVuPTMzMztlLnBlcmlvZD0yNTA7ZS5zbGFzaD0yNzg7ZS56ZXJvPTUwMDtlLm9uZT01MDA7ZS50d289NTAwO2UudGhyZWU9NTAwO2UuZm91cj01MDA7ZS5maXZlPTUwMDtlLnNpeD01MDA7ZS5zZXZlbj01MDA7ZS5laWdodD01MDA7ZS5uaW5lPTUwMDtlLmNvbG9uPTI3ODtlLnNlbWljb2xvbj0yNzg7ZS5sZXNzPTU2NDtlLmVxdWFsPTU2NDtlLmdyZWF0ZXI9NTY0O2UucXVlc3Rpb249NDQ0O2UuYXQ9OTIxO2UuQT03MjI7ZS5CPTY2NztlLkM9NjY3O2UuRD03MjI7ZS5FPTYxMTtlLkY9NTU2O2UuRz03MjI7ZS5IPTcyMjtlLkk9MzMzO2UuSj0zODk7ZS5LPTcyMjtlLkw9NjExO2UuTT04ODk7ZS5OPTcyMjtlLk89NzIyO2UuUD01NTY7ZS5RPTcyMjtlLlI9NjY3O2UuUz01NTY7ZS5UPTYxMTtlLlU9NzIyO2UuVj03MjI7ZS5XPTk0NDtlLlg9NzIyO2UuWT03MjI7ZS5aPTYxMTtlLmJyYWNrZXRsZWZ0PTMzMztlLmJhY2tzbGFzaD0yNzg7ZS5icmFja2V0cmlnaHQ9MzMzO2UuYXNjaWljaXJjdW09NDY5O2UudW5kZXJzY29yZT01MDA7ZS5xdW90ZWxlZnQ9MzMzO2UuYT00NDQ7ZS5iPTUwMDtlLmM9NDQ0O2UuZD01MDA7ZS5lPTQ0NDtlLmY9MzMzO2UuZz01MDA7ZS5oPTUwMDtlLmk9Mjc4O2Uuaj0yNzg7ZS5rPTUwMDtlLmw9Mjc4O2UubT03Nzg7ZS5uPTUwMDtlLm89NTAwO2UucD01MDA7ZS5xPTUwMDtlLnI9MzMzO2Uucz0zODk7ZS50PTI3ODtlLnU9NTAwO2Uudj01MDA7ZS53PTcyMjtlLng9NTAwO2UueT01MDA7ZS56PTQ0NDtlLmJyYWNlbGVmdD00ODA7ZS5iYXI9MjAwO2UuYnJhY2VyaWdodD00ODA7ZS5hc2NpaXRpbGRlPTU0MTtlLmV4Y2xhbWRvd249MzMzO2UuY2VudD01MDA7ZS5zdGVybGluZz01MDA7ZS5mcmFjdGlvbj0xNjc7ZS55ZW49NTAwO2UuZmxvcmluPTUwMDtlLnNlY3Rpb249NTAwO2UuY3VycmVuY3k9NTAwO2UucXVvdGVzaW5nbGU9MTgwO2UucXVvdGVkYmxsZWZ0PTQ0NDtlLmd1aWxsZW1vdGxlZnQ9NTAwO2UuZ3VpbHNpbmdsbGVmdD0zMzM7ZS5ndWlsc2luZ2xyaWdodD0zMzM7ZS5maT01NTY7ZS5mbD01NTY7ZS5lbmRhc2g9NTAwO2UuZGFnZ2VyPTUwMDtlLmRhZ2dlcmRibD01MDA7ZS5wZXJpb2RjZW50ZXJlZD0yNTA7ZS5wYXJhZ3JhcGg9NDUzO2UuYnVsbGV0PTM1MDtlLnF1b3Rlc2luZ2xiYXNlPTMzMztlLnF1b3RlZGJsYmFzZT00NDQ7ZS5xdW90ZWRibHJpZ2h0PTQ0NDtlLmd1aWxsZW1vdHJpZ2h0PTUwMDtlLmVsbGlwc2lzPTFlMztlLnBlcnRob3VzYW5kPTFlMztlLnF1ZXN0aW9uZG93bj00NDQ7ZS5ncmF2ZT0zMzM7ZS5hY3V0ZT0zMzM7ZS5jaXJjdW1mbGV4PTMzMztlLnRpbGRlPTMzMztlLm1hY3Jvbj0zMzM7ZS5icmV2ZT0zMzM7ZS5kb3RhY2NlbnQ9MzMzO2UuZGllcmVzaXM9MzMzO2UucmluZz0zMzM7ZS5jZWRpbGxhPTMzMztlLmh1bmdhcnVtbGF1dD0zMzM7ZS5vZ29uZWs9MzMzO2UuY2Fyb249MzMzO2UuZW1kYXNoPTFlMztlLkFFPTg4OTtlLm9yZGZlbWluaW5lPTI3NjtlLkxzbGFzaD02MTE7ZS5Pc2xhc2g9NzIyO2UuT0U9ODg5O2Uub3JkbWFzY3VsaW5lPTMxMDtlLmFlPTY2NztlLmRvdGxlc3NpPTI3ODtlLmxzbGFzaD0yNzg7ZS5vc2xhc2g9NTAwO2Uub2U9NzIyO2UuZ2VybWFuZGJscz01MDA7ZS5JZGllcmVzaXM9MzMzO2UuZWFjdXRlPTQ0NDtlLmFicmV2ZT00NDQ7ZS51aHVuZ2FydW1sYXV0PTUwMDtlLmVjYXJvbj00NDQ7ZS5ZZGllcmVzaXM9NzIyO2UuZGl2aWRlPTU2NDtlLllhY3V0ZT03MjI7ZS5BY2lyY3VtZmxleD03MjI7ZS5hYWN1dGU9NDQ0O2UuVWNpcmN1bWZsZXg9NzIyO2UueWFjdXRlPTUwMDtlLnNjb21tYWFjY2VudD0zODk7ZS5lY2lyY3VtZmxleD00NDQ7ZS5VcmluZz03MjI7ZS5VZGllcmVzaXM9NzIyO2UuYW9nb25laz00NDQ7ZS5VYWN1dGU9NzIyO2UudW9nb25laz01MDA7ZS5FZGllcmVzaXM9NjExO2UuRGNyb2F0PTcyMjtlLmNvbW1hYWNjZW50PTI1MDtlLmNvcHlyaWdodD03NjA7ZS5FbWFjcm9uPTYxMTtlLmNjYXJvbj00NDQ7ZS5hcmluZz00NDQ7ZS5OY29tbWFhY2NlbnQ9NzIyO2UubGFjdXRlPTI3ODtlLmFncmF2ZT00NDQ7ZS5UY29tbWFhY2NlbnQ9NjExO2UuQ2FjdXRlPTY2NztlLmF0aWxkZT00NDQ7ZS5FZG90YWNjZW50PTYxMTtlLnNjYXJvbj0zODk7ZS5zY2VkaWxsYT0zODk7ZS5pYWN1dGU9Mjc4O2UubG96ZW5nZT00NzE7ZS5SY2Fyb249NjY3O2UuR2NvbW1hYWNjZW50PTcyMjtlLnVjaXJjdW1mbGV4PTUwMDtlLmFjaXJjdW1mbGV4PTQ0NDtlLkFtYWNyb249NzIyO2UucmNhcm9uPTMzMztlLmNjZWRpbGxhPTQ0NDtlLlpkb3RhY2NlbnQ9NjExO2UuVGhvcm49NTU2O2UuT21hY3Jvbj03MjI7ZS5SYWN1dGU9NjY3O2UuU2FjdXRlPTU1NjtlLmRjYXJvbj01ODg7ZS5VbWFjcm9uPTcyMjtlLnVyaW5nPTUwMDtlLnRocmVlc3VwZXJpb3I9MzAwO2UuT2dyYXZlPTcyMjtlLkFncmF2ZT03MjI7ZS5BYnJldmU9NzIyO2UubXVsdGlwbHk9NTY0O2UudWFjdXRlPTUwMDtlLlRjYXJvbj02MTE7ZS5wYXJ0aWFsZGlmZj00NzY7ZS55ZGllcmVzaXM9NTAwO2UuTmFjdXRlPTcyMjtlLmljaXJjdW1mbGV4PTI3ODtlLkVjaXJjdW1mbGV4PTYxMTtlLmFkaWVyZXNpcz00NDQ7ZS5lZGllcmVzaXM9NDQ0O2UuY2FjdXRlPTQ0NDtlLm5hY3V0ZT01MDA7ZS51bWFjcm9uPTUwMDtlLk5jYXJvbj03MjI7ZS5JYWN1dGU9MzMzO2UucGx1c21pbnVzPTU2NDtlLmJyb2tlbmJhcj0yMDA7ZS5yZWdpc3RlcmVkPTc2MDtlLkdicmV2ZT03MjI7ZS5JZG90YWNjZW50PTMzMztlLnN1bW1hdGlvbj02MDA7ZS5FZ3JhdmU9NjExO2UucmFjdXRlPTMzMztlLm9tYWNyb249NTAwO2UuWmFjdXRlPTYxMTtlLlpjYXJvbj02MTE7ZS5ncmVhdGVyZXF1YWw9NTQ5O2UuRXRoPTcyMjtlLkNjZWRpbGxhPTY2NztlLmxjb21tYWFjY2VudD0yNzg7ZS50Y2Fyb249MzI2O2UuZW9nb25laz00NDQ7ZS5Vb2dvbmVrPTcyMjtlLkFhY3V0ZT03MjI7ZS5BZGllcmVzaXM9NzIyO2UuZWdyYXZlPTQ0NDtlLnphY3V0ZT00NDQ7ZS5pb2dvbmVrPTI3ODtlLk9hY3V0ZT03MjI7ZS5vYWN1dGU9NTAwO2UuYW1hY3Jvbj00NDQ7ZS5zYWN1dGU9Mzg5O2UuaWRpZXJlc2lzPTI3ODtlLk9jaXJjdW1mbGV4PTcyMjtlLlVncmF2ZT03MjI7ZS5EZWx0YT02MTI7ZS50aG9ybj01MDA7ZS50d29zdXBlcmlvcj0zMDA7ZS5PZGllcmVzaXM9NzIyO2UubXU9NTAwO2UuaWdyYXZlPTI3ODtlLm9odW5nYXJ1bWxhdXQ9NTAwO2UuRW9nb25laz02MTE7ZS5kY3JvYXQ9NTAwO2UudGhyZWVxdWFydGVycz03NTA7ZS5TY2VkaWxsYT01NTY7ZS5sY2Fyb249MzQ0O2UuS2NvbW1hYWNjZW50PTcyMjtlLkxhY3V0ZT02MTE7ZS50cmFkZW1hcms9OTgwO2UuZWRvdGFjY2VudD00NDQ7ZS5JZ3JhdmU9MzMzO2UuSW1hY3Jvbj0zMzM7ZS5MY2Fyb249NjExO2Uub25laGFsZj03NTA7ZS5sZXNzZXF1YWw9NTQ5O2Uub2NpcmN1bWZsZXg9NTAwO2UubnRpbGRlPTUwMDtlLlVodW5nYXJ1bWxhdXQ9NzIyO2UuRWFjdXRlPTYxMTtlLmVtYWNyb249NDQ0O2UuZ2JyZXZlPTUwMDtlLm9uZXF1YXJ0ZXI9NzUwO2UuU2Nhcm9uPTU1NjtlLlNjb21tYWFjY2VudD01NTY7ZS5PaHVuZ2FydW1sYXV0PTcyMjtlLmRlZ3JlZT00MDA7ZS5vZ3JhdmU9NTAwO2UuQ2Nhcm9uPTY2NztlLnVncmF2ZT01MDA7ZS5yYWRpY2FsPTQ1MztlLkRjYXJvbj03MjI7ZS5yY29tbWFhY2NlbnQ9MzMzO2UuTnRpbGRlPTcyMjtlLm90aWxkZT01MDA7ZS5SY29tbWFhY2NlbnQ9NjY3O2UuTGNvbW1hYWNjZW50PTYxMTtlLkF0aWxkZT03MjI7ZS5Bb2dvbmVrPTcyMjtlLkFyaW5nPTcyMjtlLk90aWxkZT03MjI7ZS56ZG90YWNjZW50PTQ0NDtlLkVjYXJvbj02MTE7ZS5Jb2dvbmVrPTMzMztlLmtjb21tYWFjY2VudD01MDA7ZS5taW51cz01NjQ7ZS5JY2lyY3VtZmxleD0zMzM7ZS5uY2Fyb249NTAwO2UudGNvbW1hYWNjZW50PTI3ODtlLmxvZ2ljYWxub3Q9NTY0O2Uub2RpZXJlc2lzPTUwMDtlLnVkaWVyZXNpcz01MDA7ZS5ub3RlcXVhbD01NDk7ZS5nY29tbWFhY2NlbnQ9NTAwO2UuZXRoPTUwMDtlLnpjYXJvbj00NDQ7ZS5uY29tbWFhY2NlbnQ9NTAwO2Uub25lc3VwZXJpb3I9MzAwO2UuaW1hY3Jvbj0yNzg7ZS5FdXJvPTUwMH0pKTtlWyJUaW1lcy1Cb2xkIl09Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlLnNwYWNlPTI1MDtlLmV4Y2xhbT0zMzM7ZS5xdW90ZWRibD01NTU7ZS5udW1iZXJzaWduPTUwMDtlLmRvbGxhcj01MDA7ZS5wZXJjZW50PTFlMztlLmFtcGVyc2FuZD04MzM7ZS5xdW90ZXJpZ2h0PTMzMztlLnBhcmVubGVmdD0zMzM7ZS5wYXJlbnJpZ2h0PTMzMztlLmFzdGVyaXNrPTUwMDtlLnBsdXM9NTcwO2UuY29tbWE9MjUwO2UuaHlwaGVuPTMzMztlLnBlcmlvZD0yNTA7ZS5zbGFzaD0yNzg7ZS56ZXJvPTUwMDtlLm9uZT01MDA7ZS50d289NTAwO2UudGhyZWU9NTAwO2UuZm91cj01MDA7ZS5maXZlPTUwMDtlLnNpeD01MDA7ZS5zZXZlbj01MDA7ZS5laWdodD01MDA7ZS5uaW5lPTUwMDtlLmNvbG9uPTMzMztlLnNlbWljb2xvbj0zMzM7ZS5sZXNzPTU3MDtlLmVxdWFsPTU3MDtlLmdyZWF0ZXI9NTcwO2UucXVlc3Rpb249NTAwO2UuYXQ9OTMwO2UuQT03MjI7ZS5CPTY2NztlLkM9NzIyO2UuRD03MjI7ZS5FPTY2NztlLkY9NjExO2UuRz03Nzg7ZS5IPTc3ODtlLkk9Mzg5O2UuSj01MDA7ZS5LPTc3ODtlLkw9NjY3O2UuTT05NDQ7ZS5OPTcyMjtlLk89Nzc4O2UuUD02MTE7ZS5RPTc3ODtlLlI9NzIyO2UuUz01NTY7ZS5UPTY2NztlLlU9NzIyO2UuVj03MjI7ZS5XPTFlMztlLlg9NzIyO2UuWT03MjI7ZS5aPTY2NztlLmJyYWNrZXRsZWZ0PTMzMztlLmJhY2tzbGFzaD0yNzg7ZS5icmFja2V0cmlnaHQ9MzMzO2UuYXNjaWljaXJjdW09NTgxO2UudW5kZXJzY29yZT01MDA7ZS5xdW90ZWxlZnQ9MzMzO2UuYT01MDA7ZS5iPTU1NjtlLmM9NDQ0O2UuZD01NTY7ZS5lPTQ0NDtlLmY9MzMzO2UuZz01MDA7ZS5oPTU1NjtlLmk9Mjc4O2Uuaj0zMzM7ZS5rPTU1NjtlLmw9Mjc4O2UubT04MzM7ZS5uPTU1NjtlLm89NTAwO2UucD01NTY7ZS5xPTU1NjtlLnI9NDQ0O2Uucz0zODk7ZS50PTMzMztlLnU9NTU2O2Uudj01MDA7ZS53PTcyMjtlLng9NTAwO2UueT01MDA7ZS56PTQ0NDtlLmJyYWNlbGVmdD0zOTQ7ZS5iYXI9MjIwO2UuYnJhY2VyaWdodD0zOTQ7ZS5hc2NpaXRpbGRlPTUyMDtlLmV4Y2xhbWRvd249MzMzO2UuY2VudD01MDA7ZS5zdGVybGluZz01MDA7ZS5mcmFjdGlvbj0xNjc7ZS55ZW49NTAwO2UuZmxvcmluPTUwMDtlLnNlY3Rpb249NTAwO2UuY3VycmVuY3k9NTAwO2UucXVvdGVzaW5nbGU9Mjc4O2UucXVvdGVkYmxsZWZ0PTUwMDtlLmd1aWxsZW1vdGxlZnQ9NTAwO2UuZ3VpbHNpbmdsbGVmdD0zMzM7ZS5ndWlsc2luZ2xyaWdodD0zMzM7ZS5maT01NTY7ZS5mbD01NTY7ZS5lbmRhc2g9NTAwO2UuZGFnZ2VyPTUwMDtlLmRhZ2dlcmRibD01MDA7ZS5wZXJpb2RjZW50ZXJlZD0yNTA7ZS5wYXJhZ3JhcGg9NTQwO2UuYnVsbGV0PTM1MDtlLnF1b3Rlc2luZ2xiYXNlPTMzMztlLnF1b3RlZGJsYmFzZT01MDA7ZS5xdW90ZWRibHJpZ2h0PTUwMDtlLmd1aWxsZW1vdHJpZ2h0PTUwMDtlLmVsbGlwc2lzPTFlMztlLnBlcnRob3VzYW5kPTFlMztlLnF1ZXN0aW9uZG93bj01MDA7ZS5ncmF2ZT0zMzM7ZS5hY3V0ZT0zMzM7ZS5jaXJjdW1mbGV4PTMzMztlLnRpbGRlPTMzMztlLm1hY3Jvbj0zMzM7ZS5icmV2ZT0zMzM7ZS5kb3RhY2NlbnQ9MzMzO2UuZGllcmVzaXM9MzMzO2UucmluZz0zMzM7ZS5jZWRpbGxhPTMzMztlLmh1bmdhcnVtbGF1dD0zMzM7ZS5vZ29uZWs9MzMzO2UuY2Fyb249MzMzO2UuZW1kYXNoPTFlMztlLkFFPTFlMztlLm9yZGZlbWluaW5lPTMwMDtlLkxzbGFzaD02Njc7ZS5Pc2xhc2g9Nzc4O2UuT0U9MWUzO2Uub3JkbWFzY3VsaW5lPTMzMDtlLmFlPTcyMjtlLmRvdGxlc3NpPTI3ODtlLmxzbGFzaD0yNzg7ZS5vc2xhc2g9NTAwO2Uub2U9NzIyO2UuZ2VybWFuZGJscz01NTY7ZS5JZGllcmVzaXM9Mzg5O2UuZWFjdXRlPTQ0NDtlLmFicmV2ZT01MDA7ZS51aHVuZ2FydW1sYXV0PTU1NjtlLmVjYXJvbj00NDQ7ZS5ZZGllcmVzaXM9NzIyO2UuZGl2aWRlPTU3MDtlLllhY3V0ZT03MjI7ZS5BY2lyY3VtZmxleD03MjI7ZS5hYWN1dGU9NTAwO2UuVWNpcmN1bWZsZXg9NzIyO2UueWFjdXRlPTUwMDtlLnNjb21tYWFjY2VudD0zODk7ZS5lY2lyY3VtZmxleD00NDQ7ZS5VcmluZz03MjI7ZS5VZGllcmVzaXM9NzIyO2UuYW9nb25laz01MDA7ZS5VYWN1dGU9NzIyO2UudW9nb25laz01NTY7ZS5FZGllcmVzaXM9NjY3O2UuRGNyb2F0PTcyMjtlLmNvbW1hYWNjZW50PTI1MDtlLmNvcHlyaWdodD03NDc7ZS5FbWFjcm9uPTY2NztlLmNjYXJvbj00NDQ7ZS5hcmluZz01MDA7ZS5OY29tbWFhY2NlbnQ9NzIyO2UubGFjdXRlPTI3ODtlLmFncmF2ZT01MDA7ZS5UY29tbWFhY2NlbnQ9NjY3O2UuQ2FjdXRlPTcyMjtlLmF0aWxkZT01MDA7ZS5FZG90YWNjZW50PTY2NztlLnNjYXJvbj0zODk7ZS5zY2VkaWxsYT0zODk7ZS5pYWN1dGU9Mjc4O2UubG96ZW5nZT00OTQ7ZS5SY2Fyb249NzIyO2UuR2NvbW1hYWNjZW50PTc3ODtlLnVjaXJjdW1mbGV4PTU1NjtlLmFjaXJjdW1mbGV4PTUwMDtlLkFtYWNyb249NzIyO2UucmNhcm9uPTQ0NDtlLmNjZWRpbGxhPTQ0NDtlLlpkb3RhY2NlbnQ9NjY3O2UuVGhvcm49NjExO2UuT21hY3Jvbj03Nzg7ZS5SYWN1dGU9NzIyO2UuU2FjdXRlPTU1NjtlLmRjYXJvbj02NzI7ZS5VbWFjcm9uPTcyMjtlLnVyaW5nPTU1NjtlLnRocmVlc3VwZXJpb3I9MzAwO2UuT2dyYXZlPTc3ODtlLkFncmF2ZT03MjI7ZS5BYnJldmU9NzIyO2UubXVsdGlwbHk9NTcwO2UudWFjdXRlPTU1NjtlLlRjYXJvbj02Njc7ZS5wYXJ0aWFsZGlmZj00OTQ7ZS55ZGllcmVzaXM9NTAwO2UuTmFjdXRlPTcyMjtlLmljaXJjdW1mbGV4PTI3ODtlLkVjaXJjdW1mbGV4PTY2NztlLmFkaWVyZXNpcz01MDA7ZS5lZGllcmVzaXM9NDQ0O2UuY2FjdXRlPTQ0NDtlLm5hY3V0ZT01NTY7ZS51bWFjcm9uPTU1NjtlLk5jYXJvbj03MjI7ZS5JYWN1dGU9Mzg5O2UucGx1c21pbnVzPTU3MDtlLmJyb2tlbmJhcj0yMjA7ZS5yZWdpc3RlcmVkPTc0NztlLkdicmV2ZT03Nzg7ZS5JZG90YWNjZW50PTM4OTtlLnN1bW1hdGlvbj02MDA7ZS5FZ3JhdmU9NjY3O2UucmFjdXRlPTQ0NDtlLm9tYWNyb249NTAwO2UuWmFjdXRlPTY2NztlLlpjYXJvbj02Njc7ZS5ncmVhdGVyZXF1YWw9NTQ5O2UuRXRoPTcyMjtlLkNjZWRpbGxhPTcyMjtlLmxjb21tYWFjY2VudD0yNzg7ZS50Y2Fyb249NDE2O2UuZW9nb25laz00NDQ7ZS5Vb2dvbmVrPTcyMjtlLkFhY3V0ZT03MjI7ZS5BZGllcmVzaXM9NzIyO2UuZWdyYXZlPTQ0NDtlLnphY3V0ZT00NDQ7ZS5pb2dvbmVrPTI3ODtlLk9hY3V0ZT03Nzg7ZS5vYWN1dGU9NTAwO2UuYW1hY3Jvbj01MDA7ZS5zYWN1dGU9Mzg5O2UuaWRpZXJlc2lzPTI3ODtlLk9jaXJjdW1mbGV4PTc3ODtlLlVncmF2ZT03MjI7ZS5EZWx0YT02MTI7ZS50aG9ybj01NTY7ZS50d29zdXBlcmlvcj0zMDA7ZS5PZGllcmVzaXM9Nzc4O2UubXU9NTU2O2UuaWdyYXZlPTI3ODtlLm9odW5nYXJ1bWxhdXQ9NTAwO2UuRW9nb25laz02Njc7ZS5kY3JvYXQ9NTU2O2UudGhyZWVxdWFydGVycz03NTA7ZS5TY2VkaWxsYT01NTY7ZS5sY2Fyb249Mzk0O2UuS2NvbW1hYWNjZW50PTc3ODtlLkxhY3V0ZT02Njc7ZS50cmFkZW1hcms9MWUzO2UuZWRvdGFjY2VudD00NDQ7ZS5JZ3JhdmU9Mzg5O2UuSW1hY3Jvbj0zODk7ZS5MY2Fyb249NjY3O2Uub25laGFsZj03NTA7ZS5sZXNzZXF1YWw9NTQ5O2Uub2NpcmN1bWZsZXg9NTAwO2UubnRpbGRlPTU1NjtlLlVodW5nYXJ1bWxhdXQ9NzIyO2UuRWFjdXRlPTY2NztlLmVtYWNyb249NDQ0O2UuZ2JyZXZlPTUwMDtlLm9uZXF1YXJ0ZXI9NzUwO2UuU2Nhcm9uPTU1NjtlLlNjb21tYWFjY2VudD01NTY7ZS5PaHVuZ2FydW1sYXV0PTc3ODtlLmRlZ3JlZT00MDA7ZS5vZ3JhdmU9NTAwO2UuQ2Nhcm9uPTcyMjtlLnVncmF2ZT01NTY7ZS5yYWRpY2FsPTU0OTtlLkRjYXJvbj03MjI7ZS5yY29tbWFhY2NlbnQ9NDQ0O2UuTnRpbGRlPTcyMjtlLm90aWxkZT01MDA7ZS5SY29tbWFhY2NlbnQ9NzIyO2UuTGNvbW1hYWNjZW50PTY2NztlLkF0aWxkZT03MjI7ZS5Bb2dvbmVrPTcyMjtlLkFyaW5nPTcyMjtlLk90aWxkZT03Nzg7ZS56ZG90YWNjZW50PTQ0NDtlLkVjYXJvbj02Njc7ZS5Jb2dvbmVrPTM4OTtlLmtjb21tYWFjY2VudD01NTY7ZS5taW51cz01NzA7ZS5JY2lyY3VtZmxleD0zODk7ZS5uY2Fyb249NTU2O2UudGNvbW1hYWNjZW50PTMzMztlLmxvZ2ljYWxub3Q9NTcwO2Uub2RpZXJlc2lzPTUwMDtlLnVkaWVyZXNpcz01NTY7ZS5ub3RlcXVhbD01NDk7ZS5nY29tbWFhY2NlbnQ9NTAwO2UuZXRoPTUwMDtlLnpjYXJvbj00NDQ7ZS5uY29tbWFhY2NlbnQ9NTU2O2Uub25lc3VwZXJpb3I9MzAwO2UuaW1hY3Jvbj0yNzg7ZS5FdXJvPTUwMH0pKTtlWyJUaW1lcy1Cb2xkSXRhbGljIl09Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlLnNwYWNlPTI1MDtlLmV4Y2xhbT0zODk7ZS5xdW90ZWRibD01NTU7ZS5udW1iZXJzaWduPTUwMDtlLmRvbGxhcj01MDA7ZS5wZXJjZW50PTgzMztlLmFtcGVyc2FuZD03Nzg7ZS5xdW90ZXJpZ2h0PTMzMztlLnBhcmVubGVmdD0zMzM7ZS5wYXJlbnJpZ2h0PTMzMztlLmFzdGVyaXNrPTUwMDtlLnBsdXM9NTcwO2UuY29tbWE9MjUwO2UuaHlwaGVuPTMzMztlLnBlcmlvZD0yNTA7ZS5zbGFzaD0yNzg7ZS56ZXJvPTUwMDtlLm9uZT01MDA7ZS50d289NTAwO2UudGhyZWU9NTAwO2UuZm91cj01MDA7ZS5maXZlPTUwMDtlLnNpeD01MDA7ZS5zZXZlbj01MDA7ZS5laWdodD01MDA7ZS5uaW5lPTUwMDtlLmNvbG9uPTMzMztlLnNlbWljb2xvbj0zMzM7ZS5sZXNzPTU3MDtlLmVxdWFsPTU3MDtlLmdyZWF0ZXI9NTcwO2UucXVlc3Rpb249NTAwO2UuYXQ9ODMyO2UuQT02Njc7ZS5CPTY2NztlLkM9NjY3O2UuRD03MjI7ZS5FPTY2NztlLkY9NjY3O2UuRz03MjI7ZS5IPTc3ODtlLkk9Mzg5O2UuSj01MDA7ZS5LPTY2NztlLkw9NjExO2UuTT04ODk7ZS5OPTcyMjtlLk89NzIyO2UuUD02MTE7ZS5RPTcyMjtlLlI9NjY3O2UuUz01NTY7ZS5UPTYxMTtlLlU9NzIyO2UuVj02Njc7ZS5XPTg4OTtlLlg9NjY3O2UuWT02MTE7ZS5aPTYxMTtlLmJyYWNrZXRsZWZ0PTMzMztlLmJhY2tzbGFzaD0yNzg7ZS5icmFja2V0cmlnaHQ9MzMzO2UuYXNjaWljaXJjdW09NTcwO2UudW5kZXJzY29yZT01MDA7ZS5xdW90ZWxlZnQ9MzMzO2UuYT01MDA7ZS5iPTUwMDtlLmM9NDQ0O2UuZD01MDA7ZS5lPTQ0NDtlLmY9MzMzO2UuZz01MDA7ZS5oPTU1NjtlLmk9Mjc4O2Uuaj0yNzg7ZS5rPTUwMDtlLmw9Mjc4O2UubT03Nzg7ZS5uPTU1NjtlLm89NTAwO2UucD01MDA7ZS5xPTUwMDtlLnI9Mzg5O2Uucz0zODk7ZS50PTI3ODtlLnU9NTU2O2Uudj00NDQ7ZS53PTY2NztlLng9NTAwO2UueT00NDQ7ZS56PTM4OTtlLmJyYWNlbGVmdD0zNDg7ZS5iYXI9MjIwO2UuYnJhY2VyaWdodD0zNDg7ZS5hc2NpaXRpbGRlPTU3MDtlLmV4Y2xhbWRvd249Mzg5O2UuY2VudD01MDA7ZS5zdGVybGluZz01MDA7ZS5mcmFjdGlvbj0xNjc7ZS55ZW49NTAwO2UuZmxvcmluPTUwMDtlLnNlY3Rpb249NTAwO2UuY3VycmVuY3k9NTAwO2UucXVvdGVzaW5nbGU9Mjc4O2UucXVvdGVkYmxsZWZ0PTUwMDtlLmd1aWxsZW1vdGxlZnQ9NTAwO2UuZ3VpbHNpbmdsbGVmdD0zMzM7ZS5ndWlsc2luZ2xyaWdodD0zMzM7ZS5maT01NTY7ZS5mbD01NTY7ZS5lbmRhc2g9NTAwO2UuZGFnZ2VyPTUwMDtlLmRhZ2dlcmRibD01MDA7ZS5wZXJpb2RjZW50ZXJlZD0yNTA7ZS5wYXJhZ3JhcGg9NTAwO2UuYnVsbGV0PTM1MDtlLnF1b3Rlc2luZ2xiYXNlPTMzMztlLnF1b3RlZGJsYmFzZT01MDA7ZS5xdW90ZWRibHJpZ2h0PTUwMDtlLmd1aWxsZW1vdHJpZ2h0PTUwMDtlLmVsbGlwc2lzPTFlMztlLnBlcnRob3VzYW5kPTFlMztlLnF1ZXN0aW9uZG93bj01MDA7ZS5ncmF2ZT0zMzM7ZS5hY3V0ZT0zMzM7ZS5jaXJjdW1mbGV4PTMzMztlLnRpbGRlPTMzMztlLm1hY3Jvbj0zMzM7ZS5icmV2ZT0zMzM7ZS5kb3RhY2NlbnQ9MzMzO2UuZGllcmVzaXM9MzMzO2UucmluZz0zMzM7ZS5jZWRpbGxhPTMzMztlLmh1bmdhcnVtbGF1dD0zMzM7ZS5vZ29uZWs9MzMzO2UuY2Fyb249MzMzO2UuZW1kYXNoPTFlMztlLkFFPTk0NDtlLm9yZGZlbWluaW5lPTI2NjtlLkxzbGFzaD02MTE7ZS5Pc2xhc2g9NzIyO2UuT0U9OTQ0O2Uub3JkbWFzY3VsaW5lPTMwMDtlLmFlPTcyMjtlLmRvdGxlc3NpPTI3ODtlLmxzbGFzaD0yNzg7ZS5vc2xhc2g9NTAwO2Uub2U9NzIyO2UuZ2VybWFuZGJscz01MDA7ZS5JZGllcmVzaXM9Mzg5O2UuZWFjdXRlPTQ0NDtlLmFicmV2ZT01MDA7ZS51aHVuZ2FydW1sYXV0PTU1NjtlLmVjYXJvbj00NDQ7ZS5ZZGllcmVzaXM9NjExO2UuZGl2aWRlPTU3MDtlLllhY3V0ZT02MTE7ZS5BY2lyY3VtZmxleD02Njc7ZS5hYWN1dGU9NTAwO2UuVWNpcmN1bWZsZXg9NzIyO2UueWFjdXRlPTQ0NDtlLnNjb21tYWFjY2VudD0zODk7ZS5lY2lyY3VtZmxleD00NDQ7ZS5VcmluZz03MjI7ZS5VZGllcmVzaXM9NzIyO2UuYW9nb25laz01MDA7ZS5VYWN1dGU9NzIyO2UudW9nb25laz01NTY7ZS5FZGllcmVzaXM9NjY3O2UuRGNyb2F0PTcyMjtlLmNvbW1hYWNjZW50PTI1MDtlLmNvcHlyaWdodD03NDc7ZS5FbWFjcm9uPTY2NztlLmNjYXJvbj00NDQ7ZS5hcmluZz01MDA7ZS5OY29tbWFhY2NlbnQ9NzIyO2UubGFjdXRlPTI3ODtlLmFncmF2ZT01MDA7ZS5UY29tbWFhY2NlbnQ9NjExO2UuQ2FjdXRlPTY2NztlLmF0aWxkZT01MDA7ZS5FZG90YWNjZW50PTY2NztlLnNjYXJvbj0zODk7ZS5zY2VkaWxsYT0zODk7ZS5pYWN1dGU9Mjc4O2UubG96ZW5nZT00OTQ7ZS5SY2Fyb249NjY3O2UuR2NvbW1hYWNjZW50PTcyMjtlLnVjaXJjdW1mbGV4PTU1NjtlLmFjaXJjdW1mbGV4PTUwMDtlLkFtYWNyb249NjY3O2UucmNhcm9uPTM4OTtlLmNjZWRpbGxhPTQ0NDtlLlpkb3RhY2NlbnQ9NjExO2UuVGhvcm49NjExO2UuT21hY3Jvbj03MjI7ZS5SYWN1dGU9NjY3O2UuU2FjdXRlPTU1NjtlLmRjYXJvbj02MDg7ZS5VbWFjcm9uPTcyMjtlLnVyaW5nPTU1NjtlLnRocmVlc3VwZXJpb3I9MzAwO2UuT2dyYXZlPTcyMjtlLkFncmF2ZT02Njc7ZS5BYnJldmU9NjY3O2UubXVsdGlwbHk9NTcwO2UudWFjdXRlPTU1NjtlLlRjYXJvbj02MTE7ZS5wYXJ0aWFsZGlmZj00OTQ7ZS55ZGllcmVzaXM9NDQ0O2UuTmFjdXRlPTcyMjtlLmljaXJjdW1mbGV4PTI3ODtlLkVjaXJjdW1mbGV4PTY2NztlLmFkaWVyZXNpcz01MDA7ZS5lZGllcmVzaXM9NDQ0O2UuY2FjdXRlPTQ0NDtlLm5hY3V0ZT01NTY7ZS51bWFjcm9uPTU1NjtlLk5jYXJvbj03MjI7ZS5JYWN1dGU9Mzg5O2UucGx1c21pbnVzPTU3MDtlLmJyb2tlbmJhcj0yMjA7ZS5yZWdpc3RlcmVkPTc0NztlLkdicmV2ZT03MjI7ZS5JZG90YWNjZW50PTM4OTtlLnN1bW1hdGlvbj02MDA7ZS5FZ3JhdmU9NjY3O2UucmFjdXRlPTM4OTtlLm9tYWNyb249NTAwO2UuWmFjdXRlPTYxMTtlLlpjYXJvbj02MTE7ZS5ncmVhdGVyZXF1YWw9NTQ5O2UuRXRoPTcyMjtlLkNjZWRpbGxhPTY2NztlLmxjb21tYWFjY2VudD0yNzg7ZS50Y2Fyb249MzY2O2UuZW9nb25laz00NDQ7ZS5Vb2dvbmVrPTcyMjtlLkFhY3V0ZT02Njc7ZS5BZGllcmVzaXM9NjY3O2UuZWdyYXZlPTQ0NDtlLnphY3V0ZT0zODk7ZS5pb2dvbmVrPTI3ODtlLk9hY3V0ZT03MjI7ZS5vYWN1dGU9NTAwO2UuYW1hY3Jvbj01MDA7ZS5zYWN1dGU9Mzg5O2UuaWRpZXJlc2lzPTI3ODtlLk9jaXJjdW1mbGV4PTcyMjtlLlVncmF2ZT03MjI7ZS5EZWx0YT02MTI7ZS50aG9ybj01MDA7ZS50d29zdXBlcmlvcj0zMDA7ZS5PZGllcmVzaXM9NzIyO2UubXU9NTc2O2UuaWdyYXZlPTI3ODtlLm9odW5nYXJ1bWxhdXQ9NTAwO2UuRW9nb25laz02Njc7ZS5kY3JvYXQ9NTAwO2UudGhyZWVxdWFydGVycz03NTA7ZS5TY2VkaWxsYT01NTY7ZS5sY2Fyb249MzgyO2UuS2NvbW1hYWNjZW50PTY2NztlLkxhY3V0ZT02MTE7ZS50cmFkZW1hcms9MWUzO2UuZWRvdGFjY2VudD00NDQ7ZS5JZ3JhdmU9Mzg5O2UuSW1hY3Jvbj0zODk7ZS5MY2Fyb249NjExO2Uub25laGFsZj03NTA7ZS5sZXNzZXF1YWw9NTQ5O2Uub2NpcmN1bWZsZXg9NTAwO2UubnRpbGRlPTU1NjtlLlVodW5nYXJ1bWxhdXQ9NzIyO2UuRWFjdXRlPTY2NztlLmVtYWNyb249NDQ0O2UuZ2JyZXZlPTUwMDtlLm9uZXF1YXJ0ZXI9NzUwO2UuU2Nhcm9uPTU1NjtlLlNjb21tYWFjY2VudD01NTY7ZS5PaHVuZ2FydW1sYXV0PTcyMjtlLmRlZ3JlZT00MDA7ZS5vZ3JhdmU9NTAwO2UuQ2Nhcm9uPTY2NztlLnVncmF2ZT01NTY7ZS5yYWRpY2FsPTU0OTtlLkRjYXJvbj03MjI7ZS5yY29tbWFhY2NlbnQ9Mzg5O2UuTnRpbGRlPTcyMjtlLm90aWxkZT01MDA7ZS5SY29tbWFhY2NlbnQ9NjY3O2UuTGNvbW1hYWNjZW50PTYxMTtlLkF0aWxkZT02Njc7ZS5Bb2dvbmVrPTY2NztlLkFyaW5nPTY2NztlLk90aWxkZT03MjI7ZS56ZG90YWNjZW50PTM4OTtlLkVjYXJvbj02Njc7ZS5Jb2dvbmVrPTM4OTtlLmtjb21tYWFjY2VudD01MDA7ZS5taW51cz02MDY7ZS5JY2lyY3VtZmxleD0zODk7ZS5uY2Fyb249NTU2O2UudGNvbW1hYWNjZW50PTI3ODtlLmxvZ2ljYWxub3Q9NjA2O2Uub2RpZXJlc2lzPTUwMDtlLnVkaWVyZXNpcz01NTY7ZS5ub3RlcXVhbD01NDk7ZS5nY29tbWFhY2NlbnQ9NTAwO2UuZXRoPTUwMDtlLnpjYXJvbj0zODk7ZS5uY29tbWFhY2NlbnQ9NTU2O2Uub25lc3VwZXJpb3I9MzAwO2UuaW1hY3Jvbj0yNzg7ZS5FdXJvPTUwMH0pKTtlWyJUaW1lcy1JdGFsaWMiXT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2Uuc3BhY2U9MjUwO2UuZXhjbGFtPTMzMztlLnF1b3RlZGJsPTQyMDtlLm51bWJlcnNpZ249NTAwO2UuZG9sbGFyPTUwMDtlLnBlcmNlbnQ9ODMzO2UuYW1wZXJzYW5kPTc3ODtlLnF1b3RlcmlnaHQ9MzMzO2UucGFyZW5sZWZ0PTMzMztlLnBhcmVucmlnaHQ9MzMzO2UuYXN0ZXJpc2s9NTAwO2UucGx1cz02NzU7ZS5jb21tYT0yNTA7ZS5oeXBoZW49MzMzO2UucGVyaW9kPTI1MDtlLnNsYXNoPTI3ODtlLnplcm89NTAwO2Uub25lPTUwMDtlLnR3bz01MDA7ZS50aHJlZT01MDA7ZS5mb3VyPTUwMDtlLmZpdmU9NTAwO2Uuc2l4PTUwMDtlLnNldmVuPTUwMDtlLmVpZ2h0PTUwMDtlLm5pbmU9NTAwO2UuY29sb249MzMzO2Uuc2VtaWNvbG9uPTMzMztlLmxlc3M9Njc1O2UuZXF1YWw9Njc1O2UuZ3JlYXRlcj02NzU7ZS5xdWVzdGlvbj01MDA7ZS5hdD05MjA7ZS5BPTYxMTtlLkI9NjExO2UuQz02Njc7ZS5EPTcyMjtlLkU9NjExO2UuRj02MTE7ZS5HPTcyMjtlLkg9NzIyO2UuST0zMzM7ZS5KPTQ0NDtlLks9NjY3O2UuTD01NTY7ZS5NPTgzMztlLk49NjY3O2UuTz03MjI7ZS5QPTYxMTtlLlE9NzIyO2UuUj02MTE7ZS5TPTUwMDtlLlQ9NTU2O2UuVT03MjI7ZS5WPTYxMTtlLlc9ODMzO2UuWD02MTE7ZS5ZPTU1NjtlLlo9NTU2O2UuYnJhY2tldGxlZnQ9Mzg5O2UuYmFja3NsYXNoPTI3ODtlLmJyYWNrZXRyaWdodD0zODk7ZS5hc2NpaWNpcmN1bT00MjI7ZS51bmRlcnNjb3JlPTUwMDtlLnF1b3RlbGVmdD0zMzM7ZS5hPTUwMDtlLmI9NTAwO2UuYz00NDQ7ZS5kPTUwMDtlLmU9NDQ0O2UuZj0yNzg7ZS5nPTUwMDtlLmg9NTAwO2UuaT0yNzg7ZS5qPTI3ODtlLms9NDQ0O2UubD0yNzg7ZS5tPTcyMjtlLm49NTAwO2Uubz01MDA7ZS5wPTUwMDtlLnE9NTAwO2Uucj0zODk7ZS5zPTM4OTtlLnQ9Mjc4O2UudT01MDA7ZS52PTQ0NDtlLnc9NjY3O2UueD00NDQ7ZS55PTQ0NDtlLno9Mzg5O2UuYnJhY2VsZWZ0PTQwMDtlLmJhcj0yNzU7ZS5icmFjZXJpZ2h0PTQwMDtlLmFzY2lpdGlsZGU9NTQxO2UuZXhjbGFtZG93bj0zODk7ZS5jZW50PTUwMDtlLnN0ZXJsaW5nPTUwMDtlLmZyYWN0aW9uPTE2NztlLnllbj01MDA7ZS5mbG9yaW49NTAwO2Uuc2VjdGlvbj01MDA7ZS5jdXJyZW5jeT01MDA7ZS5xdW90ZXNpbmdsZT0yMTQ7ZS5xdW90ZWRibGxlZnQ9NTU2O2UuZ3VpbGxlbW90bGVmdD01MDA7ZS5ndWlsc2luZ2xsZWZ0PTMzMztlLmd1aWxzaW5nbHJpZ2h0PTMzMztlLmZpPTUwMDtlLmZsPTUwMDtlLmVuZGFzaD01MDA7ZS5kYWdnZXI9NTAwO2UuZGFnZ2VyZGJsPTUwMDtlLnBlcmlvZGNlbnRlcmVkPTI1MDtlLnBhcmFncmFwaD01MjM7ZS5idWxsZXQ9MzUwO2UucXVvdGVzaW5nbGJhc2U9MzMzO2UucXVvdGVkYmxiYXNlPTU1NjtlLnF1b3RlZGJscmlnaHQ9NTU2O2UuZ3VpbGxlbW90cmlnaHQ9NTAwO2UuZWxsaXBzaXM9ODg5O2UucGVydGhvdXNhbmQ9MWUzO2UucXVlc3Rpb25kb3duPTUwMDtlLmdyYXZlPTMzMztlLmFjdXRlPTMzMztlLmNpcmN1bWZsZXg9MzMzO2UudGlsZGU9MzMzO2UubWFjcm9uPTMzMztlLmJyZXZlPTMzMztlLmRvdGFjY2VudD0zMzM7ZS5kaWVyZXNpcz0zMzM7ZS5yaW5nPTMzMztlLmNlZGlsbGE9MzMzO2UuaHVuZ2FydW1sYXV0PTMzMztlLm9nb25laz0zMzM7ZS5jYXJvbj0zMzM7ZS5lbWRhc2g9ODg5O2UuQUU9ODg5O2Uub3JkZmVtaW5pbmU9Mjc2O2UuTHNsYXNoPTU1NjtlLk9zbGFzaD03MjI7ZS5PRT05NDQ7ZS5vcmRtYXNjdWxpbmU9MzEwO2UuYWU9NjY3O2UuZG90bGVzc2k9Mjc4O2UubHNsYXNoPTI3ODtlLm9zbGFzaD01MDA7ZS5vZT02Njc7ZS5nZXJtYW5kYmxzPTUwMDtlLklkaWVyZXNpcz0zMzM7ZS5lYWN1dGU9NDQ0O2UuYWJyZXZlPTUwMDtlLnVodW5nYXJ1bWxhdXQ9NTAwO2UuZWNhcm9uPTQ0NDtlLllkaWVyZXNpcz01NTY7ZS5kaXZpZGU9Njc1O2UuWWFjdXRlPTU1NjtlLkFjaXJjdW1mbGV4PTYxMTtlLmFhY3V0ZT01MDA7ZS5VY2lyY3VtZmxleD03MjI7ZS55YWN1dGU9NDQ0O2Uuc2NvbW1hYWNjZW50PTM4OTtlLmVjaXJjdW1mbGV4PTQ0NDtlLlVyaW5nPTcyMjtlLlVkaWVyZXNpcz03MjI7ZS5hb2dvbmVrPTUwMDtlLlVhY3V0ZT03MjI7ZS51b2dvbmVrPTUwMDtlLkVkaWVyZXNpcz02MTE7ZS5EY3JvYXQ9NzIyO2UuY29tbWFhY2NlbnQ9MjUwO2UuY29weXJpZ2h0PTc2MDtlLkVtYWNyb249NjExO2UuY2Nhcm9uPTQ0NDtlLmFyaW5nPTUwMDtlLk5jb21tYWFjY2VudD02Njc7ZS5sYWN1dGU9Mjc4O2UuYWdyYXZlPTUwMDtlLlRjb21tYWFjY2VudD01NTY7ZS5DYWN1dGU9NjY3O2UuYXRpbGRlPTUwMDtlLkVkb3RhY2NlbnQ9NjExO2Uuc2Nhcm9uPTM4OTtlLnNjZWRpbGxhPTM4OTtlLmlhY3V0ZT0yNzg7ZS5sb3plbmdlPTQ3MTtlLlJjYXJvbj02MTE7ZS5HY29tbWFhY2NlbnQ9NzIyO2UudWNpcmN1bWZsZXg9NTAwO2UuYWNpcmN1bWZsZXg9NTAwO2UuQW1hY3Jvbj02MTE7ZS5yY2Fyb249Mzg5O2UuY2NlZGlsbGE9NDQ0O2UuWmRvdGFjY2VudD01NTY7ZS5UaG9ybj02MTE7ZS5PbWFjcm9uPTcyMjtlLlJhY3V0ZT02MTE7ZS5TYWN1dGU9NTAwO2UuZGNhcm9uPTU0NDtlLlVtYWNyb249NzIyO2UudXJpbmc9NTAwO2UudGhyZWVzdXBlcmlvcj0zMDA7ZS5PZ3JhdmU9NzIyO2UuQWdyYXZlPTYxMTtlLkFicmV2ZT02MTE7ZS5tdWx0aXBseT02NzU7ZS51YWN1dGU9NTAwO2UuVGNhcm9uPTU1NjtlLnBhcnRpYWxkaWZmPTQ3NjtlLnlkaWVyZXNpcz00NDQ7ZS5OYWN1dGU9NjY3O2UuaWNpcmN1bWZsZXg9Mjc4O2UuRWNpcmN1bWZsZXg9NjExO2UuYWRpZXJlc2lzPTUwMDtlLmVkaWVyZXNpcz00NDQ7ZS5jYWN1dGU9NDQ0O2UubmFjdXRlPTUwMDtlLnVtYWNyb249NTAwO2UuTmNhcm9uPTY2NztlLklhY3V0ZT0zMzM7ZS5wbHVzbWludXM9Njc1O2UuYnJva2VuYmFyPTI3NTtlLnJlZ2lzdGVyZWQ9NzYwO2UuR2JyZXZlPTcyMjtlLklkb3RhY2NlbnQ9MzMzO2Uuc3VtbWF0aW9uPTYwMDtlLkVncmF2ZT02MTE7ZS5yYWN1dGU9Mzg5O2Uub21hY3Jvbj01MDA7ZS5aYWN1dGU9NTU2O2UuWmNhcm9uPTU1NjtlLmdyZWF0ZXJlcXVhbD01NDk7ZS5FdGg9NzIyO2UuQ2NlZGlsbGE9NjY3O2UubGNvbW1hYWNjZW50PTI3ODtlLnRjYXJvbj0zMDA7ZS5lb2dvbmVrPTQ0NDtlLlVvZ29uZWs9NzIyO2UuQWFjdXRlPTYxMTtlLkFkaWVyZXNpcz02MTE7ZS5lZ3JhdmU9NDQ0O2UuemFjdXRlPTM4OTtlLmlvZ29uZWs9Mjc4O2UuT2FjdXRlPTcyMjtlLm9hY3V0ZT01MDA7ZS5hbWFjcm9uPTUwMDtlLnNhY3V0ZT0zODk7ZS5pZGllcmVzaXM9Mjc4O2UuT2NpcmN1bWZsZXg9NzIyO2UuVWdyYXZlPTcyMjtlLkRlbHRhPTYxMjtlLnRob3JuPTUwMDtlLnR3b3N1cGVyaW9yPTMwMDtlLk9kaWVyZXNpcz03MjI7ZS5tdT01MDA7ZS5pZ3JhdmU9Mjc4O2Uub2h1bmdhcnVtbGF1dD01MDA7ZS5Fb2dvbmVrPTYxMTtlLmRjcm9hdD01MDA7ZS50aHJlZXF1YXJ0ZXJzPTc1MDtlLlNjZWRpbGxhPTUwMDtlLmxjYXJvbj0zMDA7ZS5LY29tbWFhY2NlbnQ9NjY3O2UuTGFjdXRlPTU1NjtlLnRyYWRlbWFyaz05ODA7ZS5lZG90YWNjZW50PTQ0NDtlLklncmF2ZT0zMzM7ZS5JbWFjcm9uPTMzMztlLkxjYXJvbj02MTE7ZS5vbmVoYWxmPTc1MDtlLmxlc3NlcXVhbD01NDk7ZS5vY2lyY3VtZmxleD01MDA7ZS5udGlsZGU9NTAwO2UuVWh1bmdhcnVtbGF1dD03MjI7ZS5FYWN1dGU9NjExO2UuZW1hY3Jvbj00NDQ7ZS5nYnJldmU9NTAwO2Uub25lcXVhcnRlcj03NTA7ZS5TY2Fyb249NTAwO2UuU2NvbW1hYWNjZW50PTUwMDtlLk9odW5nYXJ1bWxhdXQ9NzIyO2UuZGVncmVlPTQwMDtlLm9ncmF2ZT01MDA7ZS5DY2Fyb249NjY3O2UudWdyYXZlPTUwMDtlLnJhZGljYWw9NDUzO2UuRGNhcm9uPTcyMjtlLnJjb21tYWFjY2VudD0zODk7ZS5OdGlsZGU9NjY3O2Uub3RpbGRlPTUwMDtlLlJjb21tYWFjY2VudD02MTE7ZS5MY29tbWFhY2NlbnQ9NTU2O2UuQXRpbGRlPTYxMTtlLkFvZ29uZWs9NjExO2UuQXJpbmc9NjExO2UuT3RpbGRlPTcyMjtlLnpkb3RhY2NlbnQ9Mzg5O2UuRWNhcm9uPTYxMTtlLklvZ29uZWs9MzMzO2Uua2NvbW1hYWNjZW50PTQ0NDtlLm1pbnVzPTY3NTtlLkljaXJjdW1mbGV4PTMzMztlLm5jYXJvbj01MDA7ZS50Y29tbWFhY2NlbnQ9Mjc4O2UubG9naWNhbG5vdD02NzU7ZS5vZGllcmVzaXM9NTAwO2UudWRpZXJlc2lzPTUwMDtlLm5vdGVxdWFsPTU0OTtlLmdjb21tYWFjY2VudD01MDA7ZS5ldGg9NTAwO2UuemNhcm9uPTM4OTtlLm5jb21tYWFjY2VudD01MDA7ZS5vbmVzdXBlcmlvcj0zMDA7ZS5pbWFjcm9uPTI3ODtlLkV1cm89NTAwfSkpO2UuWmFwZkRpbmdiYXRzPWdldExvb2t1cFRhYmxlRmFjdG9yeSgoZnVuY3Rpb24oZSl7ZS5zcGFjZT0yNzg7ZS5hMT05NzQ7ZS5hMj05NjE7ZS5hMjAyPTk3NDtlLmEzPTk4MDtlLmE0PTcxOTtlLmE1PTc4OTtlLmExMTk9NzkwO2UuYTExOD03OTE7ZS5hMTE3PTY5MDtlLmExMT05NjA7ZS5hMTI9OTM5O2UuYTEzPTU0OTtlLmExND04NTU7ZS5hMTU9OTExO2UuYTE2PTkzMztlLmExMDU9OTExO2UuYTE3PTk0NTtlLmExOD05NzQ7ZS5hMTk9NzU1O2UuYTIwPTg0NjtlLmEyMT03NjI7ZS5hMjI9NzYxO2UuYTIzPTU3MTtlLmEyND02Nzc7ZS5hMjU9NzYzO2UuYTI2PTc2MDtlLmEyNz03NTk7ZS5hMjg9NzU0O2UuYTY9NDk0O2UuYTc9NTUyO2UuYTg9NTM3O2UuYTk9NTc3O2UuYTEwPTY5MjtlLmEyOT03ODY7ZS5hMzA9Nzg4O2UuYTMxPTc4ODtlLmEzMj03OTA7ZS5hMzM9NzkzO2UuYTM0PTc5NDtlLmEzNT04MTY7ZS5hMzY9ODIzO2UuYTM3PTc4OTtlLmEzOD04NDE7ZS5hMzk9ODIzO2UuYTQwPTgzMztlLmE0MT04MTY7ZS5hNDI9ODMxO2UuYTQzPTkyMztlLmE0ND03NDQ7ZS5hNDU9NzIzO2UuYTQ2PTc0OTtlLmE0Nz03OTA7ZS5hNDg9NzkyO2UuYTQ5PTY5NTtlLmE1MD03NzY7ZS5hNTE9NzY4O2UuYTUyPTc5MjtlLmE1Mz03NTk7ZS5hNTQ9NzA3O2UuYTU1PTcwODtlLmE1Nj02ODI7ZS5hNTc9NzAxO2UuYTU4PTgyNjtlLmE1OT04MTU7ZS5hNjA9Nzg5O2UuYTYxPTc4OTtlLmE2Mj03MDc7ZS5hNjM9Njg3O2UuYTY0PTY5NjtlLmE2NT02ODk7ZS5hNjY9Nzg2O2UuYTY3PTc4NztlLmE2OD03MTM7ZS5hNjk9NzkxO2UuYTcwPTc4NTtlLmE3MT03OTE7ZS5hNzI9ODczO2UuYTczPTc2MTtlLmE3ND03NjI7ZS5hMjAzPTc2MjtlLmE3NT03NTk7ZS5hMjA0PTc1OTtlLmE3Nj04OTI7ZS5hNzc9ODkyO2UuYTc4PTc4ODtlLmE3OT03ODQ7ZS5hODE9NDM4O2UuYTgyPTEzODtlLmE4Mz0yNzc7ZS5hODQ9NDE1O2UuYTk3PTM5MjtlLmE5OD0zOTI7ZS5hOTk9NjY4O2UuYTEwMD02Njg7ZS5hODk9MzkwO2UuYTkwPTM5MDtlLmE5Mz0zMTc7ZS5hOTQ9MzE3O2UuYTkxPTI3NjtlLmE5Mj0yNzY7ZS5hMjA1PTUwOTtlLmE4NT01MDk7ZS5hMjA2PTQxMDtlLmE4Nj00MTA7ZS5hODc9MjM0O2UuYTg4PTIzNDtlLmE5NT0zMzQ7ZS5hOTY9MzM0O2UuYTEwMT03MzI7ZS5hMTAyPTU0NDtlLmExMDM9NTQ0O2UuYTEwND05MTA7ZS5hMTA2PTY2NztlLmExMDc9NzYwO2UuYTEwOD03NjA7ZS5hMTEyPTc3NjtlLmExMTE9NTk1O2UuYTExMD02OTQ7ZS5hMTA5PTYyNjtlLmExMjA9Nzg4O2UuYTEyMT03ODg7ZS5hMTIyPTc4ODtlLmExMjM9Nzg4O2UuYTEyND03ODg7ZS5hMTI1PTc4ODtlLmExMjY9Nzg4O2UuYTEyNz03ODg7ZS5hMTI4PTc4ODtlLmExMjk9Nzg4O2UuYTEzMD03ODg7ZS5hMTMxPTc4ODtlLmExMzI9Nzg4O2UuYTEzMz03ODg7ZS5hMTM0PTc4ODtlLmExMzU9Nzg4O2UuYTEzNj03ODg7ZS5hMTM3PTc4ODtlLmExMzg9Nzg4O2UuYTEzOT03ODg7ZS5hMTQwPTc4ODtlLmExNDE9Nzg4O2UuYTE0Mj03ODg7ZS5hMTQzPTc4ODtlLmExNDQ9Nzg4O2UuYTE0NT03ODg7ZS5hMTQ2PTc4ODtlLmExNDc9Nzg4O2UuYTE0OD03ODg7ZS5hMTQ5PTc4ODtlLmExNTA9Nzg4O2UuYTE1MT03ODg7ZS5hMTUyPTc4ODtlLmExNTM9Nzg4O2UuYTE1ND03ODg7ZS5hMTU1PTc4ODtlLmExNTY9Nzg4O2UuYTE1Nz03ODg7ZS5hMTU4PTc4ODtlLmExNTk9Nzg4O2UuYTE2MD04OTQ7ZS5hMTYxPTgzODtlLmExNjM9MTAxNjtlLmExNjQ9NDU4O2UuYTE5Nj03NDg7ZS5hMTY1PTkyNDtlLmExOTI9NzQ4O2UuYTE2Nj05MTg7ZS5hMTY3PTkyNztlLmExNjg9OTI4O2UuYTE2OT05Mjg7ZS5hMTcwPTgzNDtlLmExNzE9ODczO2UuYTE3Mj04Mjg7ZS5hMTczPTkyNDtlLmExNjI9OTI0O2UuYTE3ND05MTc7ZS5hMTc1PTkzMDtlLmExNzY9OTMxO2UuYTE3Nz00NjM7ZS5hMTc4PTg4MztlLmExNzk9ODM2O2UuYTE5Mz04MzY7ZS5hMTgwPTg2NztlLmExOTk9ODY3O2UuYTE4MT02OTY7ZS5hMjAwPTY5NjtlLmExODI9ODc0O2UuYTIwMT04NzQ7ZS5hMTgzPTc2MDtlLmExODQ9OTQ2O2UuYTE5Nz03NzE7ZS5hMTg1PTg2NTtlLmExOTQ9NzcxO2UuYTE5OD04ODg7ZS5hMTg2PTk2NztlLmExOTU9ODg4O2UuYTE4Nz04MzE7ZS5hMTg4PTg3MztlLmExODk9OTI3O2UuYTE5MD05NzA7ZS5hMTkxPTkxOH0pKX0pKSxlYT1nZXRMb29rdXBUYWJsZUZhY3RvcnkoKGZ1bmN0aW9uKGUpe2UuQ291cmllcj17YXNjZW50OjYyOSxkZXNjZW50Oi0xNTcsY2FwSGVpZ2h0OjU2Mix4SGVpZ2h0Oi00MjZ9O2VbIkNvdXJpZXItQm9sZCJdPXthc2NlbnQ6NjI5LGRlc2NlbnQ6LTE1NyxjYXBIZWlnaHQ6NTYyLHhIZWlnaHQ6NDM5fTtlWyJDb3VyaWVyLU9ibGlxdWUiXT17YXNjZW50OjYyOSxkZXNjZW50Oi0xNTcsY2FwSGVpZ2h0OjU2Mix4SGVpZ2h0OjQyNn07ZVsiQ291cmllci1Cb2xkT2JsaXF1ZSJdPXthc2NlbnQ6NjI5LGRlc2NlbnQ6LTE1NyxjYXBIZWlnaHQ6NTYyLHhIZWlnaHQ6NDI2fTtlLkhlbHZldGljYT17YXNjZW50OjcxOCxkZXNjZW50Oi0yMDcsY2FwSGVpZ2h0OjcxOCx4SGVpZ2h0OjUyM307ZVsiSGVsdmV0aWNhLUJvbGQiXT17YXNjZW50OjcxOCxkZXNjZW50Oi0yMDcsY2FwSGVpZ2h0OjcxOCx4SGVpZ2h0OjUzMn07ZVsiSGVsdmV0aWNhLU9ibGlxdWUiXT17YXNjZW50OjcxOCxkZXNjZW50Oi0yMDcsY2FwSGVpZ2h0OjcxOCx4SGVpZ2h0OjUyM307ZVsiSGVsdmV0aWNhLUJvbGRPYmxpcXVlIl09e2FzY2VudDo3MTgsZGVzY2VudDotMjA3LGNhcEhlaWdodDo3MTgseEhlaWdodDo1MzJ9O2VbIlRpbWVzLVJvbWFuIl09e2FzY2VudDo2ODMsZGVzY2VudDotMjE3LGNhcEhlaWdodDo2NjIseEhlaWdodDo0NTB9O2VbIlRpbWVzLUJvbGQiXT17YXNjZW50OjY4MyxkZXNjZW50Oi0yMTcsY2FwSGVpZ2h0OjY3Nix4SGVpZ2h0OjQ2MX07ZVsiVGltZXMtSXRhbGljIl09e2FzY2VudDo2ODMsZGVzY2VudDotMjE3LGNhcEhlaWdodDo2NTMseEhlaWdodDo0NDF9O2VbIlRpbWVzLUJvbGRJdGFsaWMiXT17YXNjZW50OjY4MyxkZXNjZW50Oi0yMTcsY2FwSGVpZ2h0OjY2OSx4SGVpZ2h0OjQ2Mn07ZS5TeW1ib2w9e2FzY2VudDpNYXRoLk5hTixkZXNjZW50Ok1hdGguTmFOLGNhcEhlaWdodDpNYXRoLk5hTix4SGVpZ2h0Ok1hdGguTmFOfTtlLlphcGZEaW5nYmF0cz17YXNjZW50Ok1hdGguTmFOLGRlc2NlbnQ6TWF0aC5OYU4sY2FwSGVpZ2h0Ok1hdGguTmFOLHhIZWlnaHQ6TWF0aC5OYU59fSkpO2NsYXNzIEdseWZUYWJsZXtjb25zdHJ1Y3Rvcih7Z2x5ZlRhYmxlOmUsaXNHbHlwaExvY2F0aW9uc0xvbmc6dCxsb2NhVGFibGU6aSxudW1HbHlwaHM6YX0pe3RoaXMuZ2x5cGhzPVtdO2NvbnN0IHM9bmV3IERhdGFWaWV3KGkuYnVmZmVyLGkuYnl0ZU9mZnNldCxpLmJ5dGVMZW5ndGgpLHI9bmV3IERhdGFWaWV3KGUuYnVmZmVyLGUuYnl0ZU9mZnNldCxlLmJ5dGVMZW5ndGgpLG49dD80OjI7bGV0IG89dD9zLmdldFVpbnQzMigwKToyKnMuZ2V0VWludDE2KDApLGc9MDtmb3IobGV0IGU9MDtlPGE7ZSsrKXtnKz1uO2NvbnN0IGU9dD9zLmdldFVpbnQzMihnKToyKnMuZ2V0VWludDE2KGcpO2lmKGU9PT1vKXt0aGlzLmdseXBocy5wdXNoKG5ldyBHbHlwaCh7fSkpO2NvbnRpbnVlfWNvbnN0IGk9R2x5cGgucGFyc2UobyxyKTt0aGlzLmdseXBocy5wdXNoKGkpO289ZX19Z2V0U2l6ZSgpe3JldHVybiB0aGlzLmdseXBocy5yZWR1Y2UoKChlLHQpPT5lKyh0LmdldFNpemUoKSszJi00KSksMCl9d3JpdGUoKXtjb25zdCBlPXRoaXMuZ2V0U2l6ZSgpLHQ9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcihlKSksaT1lPjEzMTA3MCxhPWk/NDoyLHM9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigodGhpcy5nbHlwaHMubGVuZ3RoKzEpKmEpKTtpP3Muc2V0VWludDMyKDAsMCk6cy5zZXRVaW50MTYoMCwwKTtsZXQgcj0wLG49MDtmb3IoY29uc3QgZSBvZiB0aGlzLmdseXBocyl7cis9ZS53cml0ZShyLHQpO3I9ciszJi00O24rPWE7aT9zLnNldFVpbnQzMihuLHIpOnMuc2V0VWludDE2KG4scj4+MSl9cmV0dXJue2lzTG9jYXRpb25Mb25nOmksbG9jYTpuZXcgVWludDhBcnJheShzLmJ1ZmZlciksZ2x5ZjpuZXcgVWludDhBcnJheSh0LmJ1ZmZlcil9fXNjYWxlKGUpe2ZvcihsZXQgdD0wLGk9dGhpcy5nbHlwaHMubGVuZ3RoO3Q8aTt0KyspdGhpcy5nbHlwaHNbdF0uc2NhbGUoZVt0XSl9fWNsYXNzIEdseXBoe2NvbnN0cnVjdG9yKHtoZWFkZXI6ZT1udWxsLHNpbXBsZTp0PW51bGwsY29tcG9zaXRlczppPW51bGx9KXt0aGlzLmhlYWRlcj1lO3RoaXMuc2ltcGxlPXQ7dGhpcy5jb21wb3NpdGVzPWl9c3RhdGljIHBhcnNlKGUsdCl7Y29uc3RbaSxhXT1HbHlwaEhlYWRlci5wYXJzZShlLHQpO2UrPWk7aWYoYS5udW1iZXJPZkNvbnRvdXJzPDApe2NvbnN0IGk9W107Zm9yKDs7KXtjb25zdFthLHNdPUNvbXBvc2l0ZUdseXBoLnBhcnNlKGUsdCk7ZSs9YTtpLnB1c2gocyk7aWYoISgzMiZzLmZsYWdzKSlicmVha31yZXR1cm4gbmV3IEdseXBoKHtoZWFkZXI6YSxjb21wb3NpdGVzOml9KX1jb25zdCBzPVNpbXBsZUdseXBoLnBhcnNlKGUsdCxhLm51bWJlck9mQ29udG91cnMpO3JldHVybiBuZXcgR2x5cGgoe2hlYWRlcjphLHNpbXBsZTpzfSl9Z2V0U2l6ZSgpe2lmKCF0aGlzLmhlYWRlcilyZXR1cm4gMDtjb25zdCBlPXRoaXMuc2ltcGxlP3RoaXMuc2ltcGxlLmdldFNpemUoKTp0aGlzLmNvbXBvc2l0ZXMucmVkdWNlKCgoZSx0KT0+ZSt0LmdldFNpemUoKSksMCk7cmV0dXJuIHRoaXMuaGVhZGVyLmdldFNpemUoKStlfXdyaXRlKGUsdCl7aWYoIXRoaXMuaGVhZGVyKXJldHVybiAwO2NvbnN0IGk9ZTtlKz10aGlzLmhlYWRlci53cml0ZShlLHQpO2lmKHRoaXMuc2ltcGxlKWUrPXRoaXMuc2ltcGxlLndyaXRlKGUsdCk7ZWxzZSBmb3IoY29uc3QgaSBvZiB0aGlzLmNvbXBvc2l0ZXMpZSs9aS53cml0ZShlLHQpO3JldHVybiBlLWl9c2NhbGUoZSl7aWYoIXRoaXMuaGVhZGVyKXJldHVybjtjb25zdCB0PSh0aGlzLmhlYWRlci54TWluK3RoaXMuaGVhZGVyLnhNYXgpLzI7dGhpcy5oZWFkZXIuc2NhbGUodCxlKTtpZih0aGlzLnNpbXBsZSl0aGlzLnNpbXBsZS5zY2FsZSh0LGUpO2Vsc2UgZm9yKGNvbnN0IGkgb2YgdGhpcy5jb21wb3NpdGVzKWkuc2NhbGUodCxlKX19Y2xhc3MgR2x5cGhIZWFkZXJ7Y29uc3RydWN0b3Ioe251bWJlck9mQ29udG91cnM6ZSx4TWluOnQseU1pbjppLHhNYXg6YSx5TWF4OnN9KXt0aGlzLm51bWJlck9mQ29udG91cnM9ZTt0aGlzLnhNaW49dDt0aGlzLnlNaW49aTt0aGlzLnhNYXg9YTt0aGlzLnlNYXg9c31zdGF0aWMgcGFyc2UoZSx0KXtyZXR1cm5bMTAsbmV3IEdseXBoSGVhZGVyKHtudW1iZXJPZkNvbnRvdXJzOnQuZ2V0SW50MTYoZSkseE1pbjp0LmdldEludDE2KGUrMikseU1pbjp0LmdldEludDE2KGUrNCkseE1heDp0LmdldEludDE2KGUrNikseU1heDp0LmdldEludDE2KGUrOCl9KV19Z2V0U2l6ZSgpe3JldHVybiAxMH13cml0ZShlLHQpe3Quc2V0SW50MTYoZSx0aGlzLm51bWJlck9mQ29udG91cnMpO3Quc2V0SW50MTYoZSsyLHRoaXMueE1pbik7dC5zZXRJbnQxNihlKzQsdGhpcy55TWluKTt0LnNldEludDE2KGUrNix0aGlzLnhNYXgpO3Quc2V0SW50MTYoZSs4LHRoaXMueU1heCk7cmV0dXJuIDEwfXNjYWxlKGUsdCl7dGhpcy54TWluPU1hdGgucm91bmQoZSsodGhpcy54TWluLWUpKnQpO3RoaXMueE1heD1NYXRoLnJvdW5kKGUrKHRoaXMueE1heC1lKSp0KX19Y2xhc3MgQ29udG91cntjb25zdHJ1Y3Rvcih7ZmxhZ3M6ZSx4Q29vcmRpbmF0ZXM6dCx5Q29vcmRpbmF0ZXM6aX0pe3RoaXMueENvb3JkaW5hdGVzPXQ7dGhpcy55Q29vcmRpbmF0ZXM9aTt0aGlzLmZsYWdzPWV9fWNsYXNzIFNpbXBsZUdseXBoe2NvbnN0cnVjdG9yKHtjb250b3VyczplLGluc3RydWN0aW9uczp0fSl7dGhpcy5jb250b3Vycz1lO3RoaXMuaW5zdHJ1Y3Rpb25zPXR9c3RhdGljIHBhcnNlKGUsdCxpKXtjb25zdCBhPVtdO2ZvcihsZXQgcz0wO3M8aTtzKyspe2NvbnN0IGk9dC5nZXRVaW50MTYoZSk7ZSs9MjthLnB1c2goaSl9Y29uc3Qgcz1hW2ktMV0rMSxyPXQuZ2V0VWludDE2KGUpO2UrPTI7Y29uc3Qgbj1uZXcgVWludDhBcnJheSh0KS5zbGljZShlLGUrcik7ZSs9cjtjb25zdCBvPVtdO2ZvcihsZXQgaT0wO2k8cztlKyssaSsrKXtsZXQgYT10LmdldFVpbnQ4KGUpO28ucHVzaChhKTtpZig4JmEpe2NvbnN0IHM9dC5nZXRVaW50OCgrK2UpO2FePTg7Zm9yKGxldCBlPTA7ZTxzO2UrKylvLnB1c2goYSk7aSs9c319Y29uc3QgZz1bXTtsZXQgYz1bXSxoPVtdLGw9W107Y29uc3QgQz1bXTtsZXQgUT0wLEU9MDtmb3IobGV0IGk9MDtpPHM7aSsrKXtjb25zdCBzPW9baV07aWYoMiZzKXtjb25zdCBpPXQuZ2V0VWludDgoZSsrKTtFKz0xNiZzP2k6LWk7Yy5wdXNoKEUpfWVsc2UgaWYoMTYmcyljLnB1c2goRSk7ZWxzZXtFKz10LmdldEludDE2KGUpO2UrPTI7Yy5wdXNoKEUpfWlmKGFbUV09PT1pKXtRKys7Zy5wdXNoKGMpO2M9W119fUU9MDtRPTA7Zm9yKGxldCBpPTA7aTxzO2krKyl7Y29uc3Qgcz1vW2ldO2lmKDQmcyl7Y29uc3QgaT10LmdldFVpbnQ4KGUrKyk7RSs9MzImcz9pOi1pO2gucHVzaChFKX1lbHNlIGlmKDMyJnMpaC5wdXNoKEUpO2Vsc2V7RSs9dC5nZXRJbnQxNihlKTtlKz0yO2gucHVzaChFKX1sLnB1c2goMSZzfDY0JnMpO2lmKGFbUV09PT1pKXtjPWdbUV07USsrO0MucHVzaChuZXcgQ29udG91cih7ZmxhZ3M6bCx4Q29vcmRpbmF0ZXM6Yyx5Q29vcmRpbmF0ZXM6aH0pKTtoPVtdO2w9W119fXJldHVybiBuZXcgU2ltcGxlR2x5cGgoe2NvbnRvdXJzOkMsaW5zdHJ1Y3Rpb25zOm59KX1nZXRTaXplKCl7bGV0IGU9Mip0aGlzLmNvbnRvdXJzLmxlbmd0aCsyK3RoaXMuaW5zdHJ1Y3Rpb25zLmxlbmd0aCx0PTAsaT0wO2Zvcihjb25zdCBhIG9mIHRoaXMuY29udG91cnMpe2UrPWEuZmxhZ3MubGVuZ3RoO2ZvcihsZXQgcz0wLHI9YS54Q29vcmRpbmF0ZXMubGVuZ3RoO3M8cjtzKyspe2NvbnN0IHI9YS54Q29vcmRpbmF0ZXNbc10sbj1hLnlDb29yZGluYXRlc1tzXTtsZXQgbz1NYXRoLmFicyhyLXQpO28+MjU1P2UrPTI6bz4wJiYoZSs9MSk7dD1yO289TWF0aC5hYnMobi1pKTtvPjI1NT9lKz0yOm8+MCYmKGUrPTEpO2k9bn19cmV0dXJuIGV9d3JpdGUoZSx0KXtjb25zdCBpPWUsYT1bXSxzPVtdLHI9W107bGV0IG49MCxvPTA7Zm9yKGNvbnN0IGkgb2YgdGhpcy5jb250b3Vycyl7Zm9yKGxldCBlPTAsdD1pLnhDb29yZGluYXRlcy5sZW5ndGg7ZTx0O2UrKyl7bGV0IHQ9aS5mbGFnc1tlXTtjb25zdCBnPWkueENvb3JkaW5hdGVzW2VdO2xldCBjPWctbjtpZigwPT09Yyl7dHw9MTY7YS5wdXNoKDApfWVsc2V7Y29uc3QgZT1NYXRoLmFicyhjKTtpZihlPD0yNTUpe3R8PWM+PTA/MTg6MjthLnB1c2goZSl9ZWxzZSBhLnB1c2goYyl9bj1nO2NvbnN0IGg9aS55Q29vcmRpbmF0ZXNbZV07Yz1oLW87aWYoMD09PWMpe3R8PTMyO3MucHVzaCgwKX1lbHNle2NvbnN0IGU9TWF0aC5hYnMoYyk7aWYoZTw9MjU1KXt0fD1jPj0wPzM2OjQ7cy5wdXNoKGUpfWVsc2Ugcy5wdXNoKGMpfW89aDtyLnB1c2godCl9dC5zZXRVaW50MTYoZSxhLmxlbmd0aC0xKTtlKz0yfXQuc2V0VWludDE2KGUsdGhpcy5pbnN0cnVjdGlvbnMubGVuZ3RoKTtlKz0yO2lmKHRoaXMuaW5zdHJ1Y3Rpb25zLmxlbmd0aCl7bmV3IFVpbnQ4QXJyYXkodC5idWZmZXIsMCx0LmJ1ZmZlci5ieXRlTGVuZ3RoKS5zZXQodGhpcy5pbnN0cnVjdGlvbnMsZSk7ZSs9dGhpcy5pbnN0cnVjdGlvbnMubGVuZ3RofWZvcihjb25zdCBpIG9mIHIpdC5zZXRVaW50OChlKyssaSk7Zm9yKGxldCBpPTAscz1hLmxlbmd0aDtpPHM7aSsrKXtjb25zdCBzPWFbaV0sbj1yW2ldO2lmKDImbil0LnNldFVpbnQ4KGUrKyxzKTtlbHNlIGlmKCEoMTYmbikpe3Quc2V0SW50MTYoZSxzKTtlKz0yfX1mb3IobGV0IGk9MCxhPXMubGVuZ3RoO2k8YTtpKyspe2NvbnN0IGE9c1tpXSxuPXJbaV07aWYoNCZuKXQuc2V0VWludDgoZSsrLGEpO2Vsc2UgaWYoISgzMiZuKSl7dC5zZXRJbnQxNihlLGEpO2UrPTJ9fXJldHVybiBlLWl9c2NhbGUoZSx0KXtmb3IoY29uc3QgaSBvZiB0aGlzLmNvbnRvdXJzKWlmKDAhPT1pLnhDb29yZGluYXRlcy5sZW5ndGgpZm9yKGxldCBhPTAscz1pLnhDb29yZGluYXRlcy5sZW5ndGg7YTxzO2ErKylpLnhDb29yZGluYXRlc1thXT1NYXRoLnJvdW5kKGUrKGkueENvb3JkaW5hdGVzW2FdLWUpKnQpfX1jbGFzcyBDb21wb3NpdGVHbHlwaHtjb25zdHJ1Y3Rvcih7ZmxhZ3M6ZSxnbHlwaEluZGV4OnQsYXJndW1lbnQxOmksYXJndW1lbnQyOmEsdHJhbnNmOnMsaW5zdHJ1Y3Rpb25zOnJ9KXt0aGlzLmZsYWdzPWU7dGhpcy5nbHlwaEluZGV4PXQ7dGhpcy5hcmd1bWVudDE9aTt0aGlzLmFyZ3VtZW50Mj1hO3RoaXMudHJhbnNmPXM7dGhpcy5pbnN0cnVjdGlvbnM9cn1zdGF0aWMgcGFyc2UoZSx0KXtjb25zdCBpPWUsYT1bXTtsZXQgcz10LmdldFVpbnQxNihlKTtjb25zdCByPXQuZ2V0VWludDE2KGUrMik7ZSs9NDtsZXQgbixvO2lmKDEmcyl7aWYoMiZzKXtuPXQuZ2V0SW50MTYoZSk7bz10LmdldEludDE2KGUrMil9ZWxzZXtuPXQuZ2V0VWludDE2KGUpO289dC5nZXRVaW50MTYoZSsyKX1lKz00O3NePTF9ZWxzZXtpZigyJnMpe249dC5nZXRJbnQ4KGUpO289dC5nZXRJbnQ4KGUrMSl9ZWxzZXtuPXQuZ2V0VWludDgoZSk7bz10LmdldFVpbnQ4KGUrMSl9ZSs9Mn1pZig4JnMpe2EucHVzaCh0LmdldFVpbnQxNihlKSk7ZSs9Mn1lbHNlIGlmKDY0JnMpe2EucHVzaCh0LmdldFVpbnQxNihlKSx0LmdldFVpbnQxNihlKzIpKTtlKz00fWVsc2UgaWYoMTI4JnMpe2EucHVzaCh0LmdldFVpbnQxNihlKSx0LmdldFVpbnQxNihlKzIpLHQuZ2V0VWludDE2KGUrNCksdC5nZXRVaW50MTYoZSs2KSk7ZSs9OH1sZXQgZz1udWxsO2lmKDI1NiZzKXtjb25zdCBpPXQuZ2V0VWludDE2KGUpO2UrPTI7Zz1uZXcgVWludDhBcnJheSh0KS5zbGljZShlLGUraSk7ZSs9aX1yZXR1cm5bZS1pLG5ldyBDb21wb3NpdGVHbHlwaCh7ZmxhZ3M6cyxnbHlwaEluZGV4OnIsYXJndW1lbnQxOm4sYXJndW1lbnQyOm8sdHJhbnNmOmEsaW5zdHJ1Y3Rpb25zOmd9KV19Z2V0U2l6ZSgpe2xldCBlPTQrMip0aGlzLnRyYW5zZi5sZW5ndGg7MjU2JnRoaXMuZmxhZ3MmJihlKz0yK3RoaXMuaW5zdHJ1Y3Rpb25zLmxlbmd0aCk7ZSs9MjsyJnRoaXMuZmxhZ3M/dGhpcy5hcmd1bWVudDE+PS0xMjgmJnRoaXMuYXJndW1lbnQxPD0xMjcmJnRoaXMuYXJndW1lbnQyPj0tMTI4JiZ0aGlzLmFyZ3VtZW50Mjw9MTI3fHwoZSs9Mik6dGhpcy5hcmd1bWVudDE+PTAmJnRoaXMuYXJndW1lbnQxPD0yNTUmJnRoaXMuYXJndW1lbnQyPj0wJiZ0aGlzLmFyZ3VtZW50Mjw9MjU1fHwoZSs9Mik7cmV0dXJuIGV9d3JpdGUoZSx0KXtjb25zdCBpPWU7MiZ0aGlzLmZsYWdzP3RoaXMuYXJndW1lbnQxPj0tMTI4JiZ0aGlzLmFyZ3VtZW50MTw9MTI3JiZ0aGlzLmFyZ3VtZW50Mj49LTEyOCYmdGhpcy5hcmd1bWVudDI8PTEyN3x8KHRoaXMuZmxhZ3N8PTEpOnRoaXMuYXJndW1lbnQxPj0wJiZ0aGlzLmFyZ3VtZW50MTw9MjU1JiZ0aGlzLmFyZ3VtZW50Mj49MCYmdGhpcy5hcmd1bWVudDI8PTI1NXx8KHRoaXMuZmxhZ3N8PTEpO3Quc2V0VWludDE2KGUsdGhpcy5mbGFncyk7dC5zZXRVaW50MTYoZSsyLHRoaXMuZ2x5cGhJbmRleCk7ZSs9NDtpZigxJnRoaXMuZmxhZ3Mpe2lmKDImdGhpcy5mbGFncyl7dC5zZXRJbnQxNihlLHRoaXMuYXJndW1lbnQxKTt0LnNldEludDE2KGUrMix0aGlzLmFyZ3VtZW50Mil9ZWxzZXt0LnNldFVpbnQxNihlLHRoaXMuYXJndW1lbnQxKTt0LnNldFVpbnQxNihlKzIsdGhpcy5hcmd1bWVudDIpfWUrPTR9ZWxzZXt0LnNldFVpbnQ4KGUsdGhpcy5hcmd1bWVudDEpO3Quc2V0VWludDgoZSsxLHRoaXMuYXJndW1lbnQyKTtlKz0yfWlmKDI1NiZ0aGlzLmZsYWdzKXt0LnNldFVpbnQxNihlLHRoaXMuaW5zdHJ1Y3Rpb25zLmxlbmd0aCk7ZSs9MjtpZih0aGlzLmluc3RydWN0aW9ucy5sZW5ndGgpe25ldyBVaW50OEFycmF5KHQuYnVmZmVyLDAsdC5idWZmZXIuYnl0ZUxlbmd0aCkuc2V0KHRoaXMuaW5zdHJ1Y3Rpb25zLGUpO2UrPXRoaXMuaW5zdHJ1Y3Rpb25zLmxlbmd0aH19cmV0dXJuIGUtaX1zY2FsZShlLHQpe319ZnVuY3Rpb24gd3JpdGVJbnQxNihlLHQsaSl7ZVt0XT1pPj44JjI1NTtlW3QrMV09MjU1Jml9ZnVuY3Rpb24gd3JpdGVJbnQzMihlLHQsaSl7ZVt0XT1pPj4yNCYyNTU7ZVt0KzFdPWk+PjE2JjI1NTtlW3QrMl09aT4+OCYyNTU7ZVt0KzNdPTI1NSZpfWZ1bmN0aW9uIHdyaXRlRGF0YShlLHQsaSl7aWYoaSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpZS5zZXQoaSx0KTtlbHNlIGlmKCJzdHJpbmciPT10eXBlb2YgaSlmb3IobGV0IGE9MCxzPWkubGVuZ3RoO2E8czthKyspZVt0KytdPTI1NSZpLmNoYXJDb2RlQXQoYSk7ZWxzZSBmb3IoY29uc3QgYSBvZiBpKWVbdCsrXT0yNTUmYX1jbGFzcyBPcGVuVHlwZUZpbGVCdWlsZGVye2NvbnN0cnVjdG9yKGUpe3RoaXMuc2ZudD1lO3RoaXMudGFibGVzPU9iamVjdC5jcmVhdGUobnVsbCl9c3RhdGljIGdldFNlYXJjaFBhcmFtcyhlLHQpe2xldCBpPTEsYT0wO2Zvcig7KGleZSk+aTspe2k8PD0xO2ErK31jb25zdCBzPWkqdDtyZXR1cm57cmFuZ2U6cyxlbnRyeTphLHJhbmdlU2hpZnQ6dCplLXN9fXRvQXJyYXkoKXtsZXQgZT10aGlzLnNmbnQ7Y29uc3QgdD10aGlzLnRhYmxlcyxpPU9iamVjdC5rZXlzKHQpO2kuc29ydCgpO2NvbnN0IGE9aS5sZW5ndGg7bGV0IHMscixuLG8sZyxjPTEyKzE2KmE7Y29uc3QgaD1bY107Zm9yKHM9MDtzPGE7cysrKXtvPXRbaVtzXV07Yys9KG8ubGVuZ3RoKzMmLTQpPj4+MDtoLnB1c2goYyl9Y29uc3QgbD1uZXcgVWludDhBcnJheShjKTtmb3Iocz0wO3M8YTtzKyspe289dFtpW3NdXTt3cml0ZURhdGEobCxoW3NdLG8pfSJ0cnVlIj09PWUmJihlPXN0cmluZzMyKDY1NTM2KSk7bFswXT0yNTUmZS5jaGFyQ29kZUF0KDApO2xbMV09MjU1JmUuY2hhckNvZGVBdCgxKTtsWzJdPTI1NSZlLmNoYXJDb2RlQXQoMik7bFszXT0yNTUmZS5jaGFyQ29kZUF0KDMpO3dyaXRlSW50MTYobCw0LGEpO2NvbnN0IEM9T3BlblR5cGVGaWxlQnVpbGRlci5nZXRTZWFyY2hQYXJhbXMoYSwxNik7d3JpdGVJbnQxNihsLDYsQy5yYW5nZSk7d3JpdGVJbnQxNihsLDgsQy5lbnRyeSk7d3JpdGVJbnQxNihsLDEwLEMucmFuZ2VTaGlmdCk7Yz0xMjtmb3Iocz0wO3M8YTtzKyspe2c9aVtzXTtsW2NdPTI1NSZnLmNoYXJDb2RlQXQoMCk7bFtjKzFdPTI1NSZnLmNoYXJDb2RlQXQoMSk7bFtjKzJdPTI1NSZnLmNoYXJDb2RlQXQoMik7bFtjKzNdPTI1NSZnLmNoYXJDb2RlQXQoMyk7bGV0IGU9MDtmb3Iocj1oW3NdLG49aFtzKzFdO3I8bjtyKz00KXtlPWUrcmVhZFVpbnQzMihsLHIpPj4+MH13cml0ZUludDMyKGwsYys0LGUpO3dyaXRlSW50MzIobCxjKzgsaFtzXSk7d3JpdGVJbnQzMihsLGMrMTIsdFtnXS5sZW5ndGgpO2MrPTE2fXJldHVybiBsfWFkZFRhYmxlKGUsdCl7aWYoZSBpbiB0aGlzLnRhYmxlcyl0aHJvdyBuZXcgRXJyb3IoIlRhYmxlICIrZSsiIGFscmVhZHkgZXhpc3RzIik7dGhpcy50YWJsZXNbZV09dH19Y29uc3QgdGE9WzRdLGlhPVs1XSxhYT1bNl0sc2E9WzddLHJhPVs4XSxuYT1bMTIsMzVdLG9hPVsxNF0sZ2E9WzIxXSxJYT1bMjJdLGNhPVszMF0saGE9WzMxXTtjbGFzcyBUeXBlMUNoYXJTdHJpbmd7Y29uc3RydWN0b3IoKXt0aGlzLndpZHRoPTA7dGhpcy5sc2I9MDt0aGlzLmZsZXhpbmc9ITE7dGhpcy5vdXRwdXQ9W107dGhpcy5zdGFjaz1bXX1jb252ZXJ0KGUsdCxpKXtjb25zdCBhPWUubGVuZ3RoO2xldCBzLHIsbixvPSExO2ZvcihsZXQgZz0wO2c8YTtnKyspe2xldCBhPWVbZ107aWYoYTwzMil7MTI9PT1hJiYoYT0oYTw8OCkrZVsrK2ddKTtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMzpjYXNlIDk6Y2FzZSAzMDcyOmNhc2UgMzA3MzpjYXNlIDMwNzQ6Y2FzZSAzMTA1OnRoaXMuc3RhY2s9W107YnJlYWs7Y2FzZSA0OmlmKHRoaXMuZmxleGluZyl7aWYodGhpcy5zdGFjay5sZW5ndGg8MSl7bz0hMDticmVha31jb25zdCBlPXRoaXMuc3RhY2sucG9wKCk7dGhpcy5zdGFjay5wdXNoKDAsZSk7YnJlYWt9bz10aGlzLmV4ZWN1dGVDb21tYW5kKDEsdGEpO2JyZWFrO2Nhc2UgNTpvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoMixpYSk7YnJlYWs7Y2FzZSA2Om89dGhpcy5leGVjdXRlQ29tbWFuZCgxLGFhKTticmVhaztjYXNlIDc6bz10aGlzLmV4ZWN1dGVDb21tYW5kKDEsc2EpO2JyZWFrO2Nhc2UgODpvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoNixyYSk7YnJlYWs7Y2FzZSAxMDppZih0aGlzLnN0YWNrLmxlbmd0aDwxKXtvPSEwO2JyZWFrfW49dGhpcy5zdGFjay5wb3AoKTtpZighdFtuXSl7bz0hMDticmVha31vPXRoaXMuY29udmVydCh0W25dLHQsaSk7YnJlYWs7Y2FzZSAxMTpyZXR1cm4gbztjYXNlIDEzOmlmKHRoaXMuc3RhY2subGVuZ3RoPDIpe289ITA7YnJlYWt9cz10aGlzLnN0YWNrLnBvcCgpO3I9dGhpcy5zdGFjay5wb3AoKTt0aGlzLmxzYj1yO3RoaXMud2lkdGg9czt0aGlzLnN0YWNrLnB1c2gocyxyKTtvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoMixJYSk7YnJlYWs7Y2FzZSAxNDp0aGlzLm91dHB1dC5wdXNoKG9hWzBdKTticmVhaztjYXNlIDIxOmlmKHRoaXMuZmxleGluZylicmVhaztvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoMixnYSk7YnJlYWs7Y2FzZSAyMjppZih0aGlzLmZsZXhpbmcpe3RoaXMuc3RhY2sucHVzaCgwKTticmVha31vPXRoaXMuZXhlY3V0ZUNvbW1hbmQoMSxJYSk7YnJlYWs7Y2FzZSAzMDpvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoNCxjYSk7YnJlYWs7Y2FzZSAzMTpvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoNCxoYSk7YnJlYWs7Y2FzZSAzMDc4OmlmKGkpe2NvbnN0IGU9dGhpcy5zdGFjay5hdCgtNSk7dGhpcy5zZWFjPXRoaXMuc3RhY2suc3BsaWNlKC00LDQpO3RoaXMuc2VhY1swXSs9dGhpcy5sc2ItZTtvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoMCxvYSl9ZWxzZSBvPXRoaXMuZXhlY3V0ZUNvbW1hbmQoNCxvYSk7YnJlYWs7Y2FzZSAzMDc5OmlmKHRoaXMuc3RhY2subGVuZ3RoPDQpe289ITA7YnJlYWt9dGhpcy5zdGFjay5wb3AoKTtzPXRoaXMuc3RhY2sucG9wKCk7Y29uc3QgZT10aGlzLnN0YWNrLnBvcCgpO3I9dGhpcy5zdGFjay5wb3AoKTt0aGlzLmxzYj1yO3RoaXMud2lkdGg9czt0aGlzLnN0YWNrLnB1c2gocyxyLGUpO289dGhpcy5leGVjdXRlQ29tbWFuZCgzLGdhKTticmVhaztjYXNlIDMwODQ6aWYodGhpcy5zdGFjay5sZW5ndGg8Mil7bz0hMDticmVha31jb25zdCBnPXRoaXMuc3RhY2sucG9wKCksYz10aGlzLnN0YWNrLnBvcCgpO3RoaXMuc3RhY2sucHVzaChjL2cpO2JyZWFrO2Nhc2UgMzA4ODppZih0aGlzLnN0YWNrLmxlbmd0aDwyKXtvPSEwO2JyZWFrfW49dGhpcy5zdGFjay5wb3AoKTtjb25zdCBoPXRoaXMuc3RhY2sucG9wKCk7aWYoMD09PW4mJjM9PT1oKXtjb25zdCBlPXRoaXMuc3RhY2suc3BsaWNlKC0xNywxNyk7dGhpcy5zdGFjay5wdXNoKGVbMl0rZVswXSxlWzNdK2VbMV0sZVs0XSxlWzVdLGVbNl0sZVs3XSxlWzhdLGVbOV0sZVsxMF0sZVsxMV0sZVsxMl0sZVsxM10sZVsxNF0pO289dGhpcy5leGVjdXRlQ29tbWFuZCgxMyxuYSwhMCk7dGhpcy5mbGV4aW5nPSExO3RoaXMuc3RhY2sucHVzaChlWzE1XSxlWzE2XSl9ZWxzZSAxPT09biYmMD09PWgmJih0aGlzLmZsZXhpbmc9ITApO2JyZWFrO2Nhc2UgMzA4OTpicmVhaztkZWZhdWx0Ondhcm4oJ1Vua25vd24gdHlwZSAxIGNoYXJzdHJpbmcgY29tbWFuZCBvZiAiJythKyciJyl9aWYobylicmVha31lbHNle2E8PTI0Nj9hLT0xMzk6YT1hPD0yNTA/MjU2KihhLTI0NykrZVsrK2ddKzEwODphPD0yNTQ/LTI1NiooYS0yNTEpLWVbKytnXS0xMDg6KDI1NSZlWysrZ10pPDwyNHwoMjU1JmVbKytnXSk8PDE2fCgyNTUmZVsrK2ddKTw8OHwyNTUmZVsrK2ddO3RoaXMuc3RhY2sucHVzaChhKX19cmV0dXJuIG99ZXhlY3V0ZUNvbW1hbmQoZSx0LGkpe2NvbnN0IGE9dGhpcy5zdGFjay5sZW5ndGg7aWYoZT5hKXJldHVybiEwO2NvbnN0IHM9YS1lO2ZvcihsZXQgZT1zO2U8YTtlKyspe2xldCB0PXRoaXMuc3RhY2tbZV07aWYoTnVtYmVyLmlzSW50ZWdlcih0KSl0aGlzLm91dHB1dC5wdXNoKDI4LHQ+PjgmMjU1LDI1NSZ0KTtlbHNle3Q9NjU1MzYqdHwwO3RoaXMub3V0cHV0LnB1c2goMjU1LHQ+PjI0JjI1NSx0Pj4xNiYyNTUsdD4+OCYyNTUsMjU1JnQpfX10aGlzLm91dHB1dC5wdXNoKC4uLnQpO2k/dGhpcy5zdGFjay5zcGxpY2UocyxlKTp0aGlzLnN0YWNrLmxlbmd0aD0wO3JldHVybiExfX1mdW5jdGlvbiBpc0hleERpZ2l0KGUpe3JldHVybiBlPj00OCYmZTw9NTd8fGU+PTY1JiZlPD03MHx8ZT49OTcmJmU8PTEwMn1mdW5jdGlvbiBkZWNyeXB0KGUsdCxpKXtpZihpPj1lLmxlbmd0aClyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCk7bGV0IGEscyxyPTB8dDtmb3IoYT0wO2E8aTthKyspcj01Mjg0NSooZVthXStyKSsyMjcxOSY2NTUzNTtjb25zdCBuPWUubGVuZ3RoLWksbz1uZXcgVWludDhBcnJheShuKTtmb3IoYT1pLHM9MDtzPG47YSsrLHMrKyl7Y29uc3QgdD1lW2FdO29bc109dF5yPj44O3I9NTI4NDUqKHQrcikrMjI3MTkmNjU1MzV9cmV0dXJuIG99ZnVuY3Rpb24gaXNTcGVjaWFsKGUpe3JldHVybiA0Nz09PWV8fDkxPT09ZXx8OTM9PT1lfHwxMjM9PT1lfHwxMjU9PT1lfHw0MD09PWV8fDQxPT09ZX1jbGFzcyBUeXBlMVBhcnNlcntjb25zdHJ1Y3RvcihlLHQsaSl7aWYodCl7Y29uc3QgdD1lLmdldEJ5dGVzKCksaT0hKChpc0hleERpZ2l0KHRbMF0pfHxpc1doaXRlU3BhY2UodFswXSkpJiZpc0hleERpZ2l0KHRbMV0pJiZpc0hleERpZ2l0KHRbMl0pJiZpc0hleERpZ2l0KHRbM10pJiZpc0hleERpZ2l0KHRbNF0pJiZpc0hleERpZ2l0KHRbNV0pJiZpc0hleERpZ2l0KHRbNl0pJiZpc0hleERpZ2l0KHRbN10pKTtlPW5ldyBTdHJlYW0oaT9kZWNyeXB0KHQsNTU2NjUsNCk6ZnVuY3Rpb24gZGVjcnlwdEFzY2lpKGUsdCxpKXtsZXQgYT0wfHQ7Y29uc3Qgcz1lLmxlbmd0aCxyPW5ldyBVaW50OEFycmF5KHM+Pj4xKTtsZXQgbixvO2ZvcihuPTAsbz0wO248cztuKyspe2NvbnN0IHQ9ZVtuXTtpZighaXNIZXhEaWdpdCh0KSljb250aW51ZTtuKys7bGV0IGk7Zm9yKDtuPHMmJiFpc0hleERpZ2l0KGk9ZVtuXSk7KW4rKztpZihuPHMpe2NvbnN0IGU9cGFyc2VJbnQoU3RyaW5nLmZyb21DaGFyQ29kZSh0LGkpLDE2KTtyW28rK109ZV5hPj44O2E9NTI4NDUqKGUrYSkrMjI3MTkmNjU1MzV9fXJldHVybiByLnNsaWNlKGksbyl9KHQsNTU2NjUsNCkpfXRoaXMuc2VhY0FuYWx5c2lzRW5hYmxlZD0hIWk7dGhpcy5zdHJlYW09ZTt0aGlzLm5leHRDaGFyKCl9cmVhZE51bWJlckFycmF5KCl7dGhpcy5nZXRUb2tlbigpO2NvbnN0IGU9W107Zm9yKDs7KXtjb25zdCB0PXRoaXMuZ2V0VG9rZW4oKTtpZihudWxsPT09dHx8Il0iPT09dHx8In0iPT09dClicmVhaztlLnB1c2gocGFyc2VGbG9hdCh0fHwwKSl9cmV0dXJuIGV9cmVhZE51bWJlcigpe2NvbnN0IGU9dGhpcy5nZXRUb2tlbigpO3JldHVybiBwYXJzZUZsb2F0KGV8fDApfXJlYWRJbnQoKXtjb25zdCBlPXRoaXMuZ2V0VG9rZW4oKTtyZXR1cm4gMHxwYXJzZUludChlfHwwLDEwKX1yZWFkQm9vbGVhbigpe3JldHVybiJ0cnVlIj09PXRoaXMuZ2V0VG9rZW4oKT8xOjB9bmV4dENoYXIoKXtyZXR1cm4gdGhpcy5jdXJyZW50Q2hhcj10aGlzLnN0cmVhbS5nZXRCeXRlKCl9cHJldkNoYXIoKXt0aGlzLnN0cmVhbS5za2lwKC0yKTtyZXR1cm4gdGhpcy5jdXJyZW50Q2hhcj10aGlzLnN0cmVhbS5nZXRCeXRlKCl9Z2V0VG9rZW4oKXtsZXQgZT0hMSx0PXRoaXMuY3VycmVudENoYXI7Zm9yKDs7KXtpZigtMT09PXQpcmV0dXJuIG51bGw7aWYoZSkxMCE9PXQmJjEzIT09dHx8KGU9ITEpO2Vsc2UgaWYoMzc9PT10KWU9ITA7ZWxzZSBpZighaXNXaGl0ZVNwYWNlKHQpKWJyZWFrO3Q9dGhpcy5uZXh0Q2hhcigpfWlmKGlzU3BlY2lhbCh0KSl7dGhpcy5uZXh0Q2hhcigpO3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHQpfWxldCBpPSIiO2Rve2krPVN0cmluZy5mcm9tQ2hhckNvZGUodCk7dD10aGlzLm5leHRDaGFyKCl9d2hpbGUodD49MCYmIWlzV2hpdGVTcGFjZSh0KSYmIWlzU3BlY2lhbCh0KSk7cmV0dXJuIGl9cmVhZENoYXJTdHJpbmdzKGUsdCl7cmV0dXJuLTE9PT10P2U6ZGVjcnlwdChlLDQzMzAsdCl9ZXh0cmFjdEZvbnRQcm9ncmFtKGUpe2NvbnN0IHQ9dGhpcy5zdHJlYW0saT1bXSxhPVtdLHM9T2JqZWN0LmNyZWF0ZShudWxsKTtzLmxlbklWPTQ7Y29uc3Qgcj17c3VicnM6W10sY2hhcnN0cmluZ3M6W10scHJvcGVydGllczp7cHJpdmF0ZURhdGE6c319O2xldCBuLG8sZyxjO2Zvcig7bnVsbCE9PShuPXRoaXMuZ2V0VG9rZW4oKSk7KWlmKCIvIj09PW4pe249dGhpcy5nZXRUb2tlbigpO3N3aXRjaChuKXtjYXNlIkNoYXJTdHJpbmdzIjp0aGlzLmdldFRva2VuKCk7dGhpcy5nZXRUb2tlbigpO3RoaXMuZ2V0VG9rZW4oKTt0aGlzLmdldFRva2VuKCk7Zm9yKDs7KXtuPXRoaXMuZ2V0VG9rZW4oKTtpZihudWxsPT09bnx8ImVuZCI9PT1uKWJyZWFrO2lmKCIvIiE9PW4pY29udGludWU7Y29uc3QgZT10aGlzLmdldFRva2VuKCk7bz10aGlzLnJlYWRJbnQoKTt0aGlzLmdldFRva2VuKCk7Zz1vPjA/dC5nZXRCeXRlcyhvKTpuZXcgVWludDhBcnJheSgwKTtjPXIucHJvcGVydGllcy5wcml2YXRlRGF0YS5sZW5JVjtjb25zdCBpPXRoaXMucmVhZENoYXJTdHJpbmdzKGcsYyk7dGhpcy5uZXh0Q2hhcigpO249dGhpcy5nZXRUb2tlbigpOyJub2FjY2VzcyI9PT1uP3RoaXMuZ2V0VG9rZW4oKToiLyI9PT1uJiZ0aGlzLnByZXZDaGFyKCk7YS5wdXNoKHtnbHlwaDplLGVuY29kZWQ6aX0pfWJyZWFrO2Nhc2UiU3VicnMiOnRoaXMucmVhZEludCgpO3RoaXMuZ2V0VG9rZW4oKTtmb3IoOyJkdXAiPT09dGhpcy5nZXRUb2tlbigpOyl7Y29uc3QgZT10aGlzLnJlYWRJbnQoKTtvPXRoaXMucmVhZEludCgpO3RoaXMuZ2V0VG9rZW4oKTtnPW8+MD90LmdldEJ5dGVzKG8pOm5ldyBVaW50OEFycmF5KDApO2M9ci5wcm9wZXJ0aWVzLnByaXZhdGVEYXRhLmxlbklWO2NvbnN0IGE9dGhpcy5yZWFkQ2hhclN0cmluZ3MoZyxjKTt0aGlzLm5leHRDaGFyKCk7bj10aGlzLmdldFRva2VuKCk7Im5vYWNjZXNzIj09PW4mJnRoaXMuZ2V0VG9rZW4oKTtpW2VdPWF9YnJlYWs7Y2FzZSJCbHVlVmFsdWVzIjpjYXNlIk90aGVyQmx1ZXMiOmNhc2UiRmFtaWx5Qmx1ZXMiOmNhc2UiRmFtaWx5T3RoZXJCbHVlcyI6Y29uc3QgZT10aGlzLnJlYWROdW1iZXJBcnJheSgpO2UubGVuZ3RoPjAmJmUubGVuZ3RoLDA7YnJlYWs7Y2FzZSJTdGVtU25hcEgiOmNhc2UiU3RlbVNuYXBWIjpyLnByb3BlcnRpZXMucHJpdmF0ZURhdGFbbl09dGhpcy5yZWFkTnVtYmVyQXJyYXkoKTticmVhaztjYXNlIlN0ZEhXIjpjYXNlIlN0ZFZXIjpyLnByb3BlcnRpZXMucHJpdmF0ZURhdGFbbl09dGhpcy5yZWFkTnVtYmVyQXJyYXkoKVswXTticmVhaztjYXNlIkJsdWVTaGlmdCI6Y2FzZSJsZW5JViI6Y2FzZSJCbHVlRnV6eiI6Y2FzZSJCbHVlU2NhbGUiOmNhc2UiTGFuZ3VhZ2VHcm91cCI6ci5wcm9wZXJ0aWVzLnByaXZhdGVEYXRhW25dPXRoaXMucmVhZE51bWJlcigpO2JyZWFrO2Nhc2UiRXhwYW5zaW9uRmFjdG9yIjpyLnByb3BlcnRpZXMucHJpdmF0ZURhdGFbbl09dGhpcy5yZWFkTnVtYmVyKCl8fC4wNjticmVhaztjYXNlIkZvcmNlQm9sZCI6ci5wcm9wZXJ0aWVzLnByaXZhdGVEYXRhW25dPXRoaXMucmVhZEJvb2xlYW4oKX19Zm9yKGNvbnN0e2VuY29kZWQ6dCxnbHlwaDpzfW9mIGEpe2NvbnN0IGE9bmV3IFR5cGUxQ2hhclN0cmluZyxuPWEuY29udmVydCh0LGksdGhpcy5zZWFjQW5hbHlzaXNFbmFibGVkKTtsZXQgbz1hLm91dHB1dDtuJiYobz1bMTRdKTtjb25zdCBnPXtnbHlwaE5hbWU6cyxjaGFyc3RyaW5nOm8sd2lkdGg6YS53aWR0aCxsc2I6YS5sc2Isc2VhYzphLnNlYWN9OyIubm90ZGVmIj09PXM/ci5jaGFyc3RyaW5ncy51bnNoaWZ0KGcpOnIuY2hhcnN0cmluZ3MucHVzaChnKTtpZihlLmJ1aWx0SW5FbmNvZGluZyl7Y29uc3QgdD1lLmJ1aWx0SW5FbmNvZGluZy5pbmRleE9mKHMpO3Q+LTEmJnZvaWQgMD09PWUud2lkdGhzW3RdJiZ0Pj1lLmZpcnN0Q2hhciYmdDw9ZS5sYXN0Q2hhciYmKGUud2lkdGhzW3RdPWEud2lkdGgpfX1yZXR1cm4gcn1leHRyYWN0Rm9udEhlYWRlcihlKXtsZXQgdDtmb3IoO251bGwhPT0odD10aGlzLmdldFRva2VuKCkpOylpZigiLyI9PT10KXt0PXRoaXMuZ2V0VG9rZW4oKTtzd2l0Y2godCl7Y2FzZSJGb250TWF0cml4Ijpjb25zdCBpPXRoaXMucmVhZE51bWJlckFycmF5KCk7ZS5mb250TWF0cml4PWk7YnJlYWs7Y2FzZSJFbmNvZGluZyI6Y29uc3QgYT10aGlzLmdldFRva2VuKCk7bGV0IHM7aWYoL15cZCskLy50ZXN0KGEpKXtzPVtdO2NvbnN0IGU9MHxwYXJzZUludChhLDEwKTt0aGlzLmdldFRva2VuKCk7Zm9yKGxldCBpPTA7aTxlO2krKyl7dD10aGlzLmdldFRva2VuKCk7Zm9yKDsiZHVwIiE9PXQmJiJkZWYiIT09dDspe3Q9dGhpcy5nZXRUb2tlbigpO2lmKG51bGw9PT10KXJldHVybn1pZigiZGVmIj09PXQpYnJlYWs7Y29uc3QgZT10aGlzLnJlYWRJbnQoKTt0aGlzLmdldFRva2VuKCk7Y29uc3QgaT10aGlzLmdldFRva2VuKCk7c1tlXT1pO3RoaXMuZ2V0VG9rZW4oKX19ZWxzZSBzPWdldEVuY29kaW5nKGEpO2UuYnVpbHRJbkVuY29kaW5nPXM7YnJlYWs7Y2FzZSJGb250QkJveCI6Y29uc3Qgcj10aGlzLnJlYWROdW1iZXJBcnJheSgpO2UuYXNjZW50PU1hdGgubWF4KHJbM10sclsxXSk7ZS5kZXNjZW50PU1hdGgubWluKHJbMV0sclszXSk7ZS5hc2NlbnRTY2FsZWQ9ITB9fX19ZnVuY3Rpb24gZmluZEJsb2NrKGUsdCxpKXtjb25zdCBhPWUubGVuZ3RoLHM9dC5sZW5ndGgscj1hLXM7bGV0IG49aSxvPSExO2Zvcig7bjxyOyl7bGV0IGk9MDtmb3IoO2k8cyYmZVtuK2ldPT09dFtpXTspaSsrO2lmKGk+PXMpe24rPWk7Zm9yKDtuPGEmJmlzV2hpdGVTcGFjZShlW25dKTspbisrO289ITA7YnJlYWt9bisrfXJldHVybntmb3VuZDpvLGxlbmd0aDpufX1jbGFzcyBUeXBlMUZvbnR7Y29uc3RydWN0b3IoZSx0LGkpe2xldCBhPWkubGVuZ3RoMSxzPWkubGVuZ3RoMixyPXQucGVla0J5dGVzKDYpO2NvbnN0IG49MTI4PT09clswXSYmMT09PXJbMV07aWYobil7dC5za2lwKDYpO2E9cls1XTw8MjR8cls0XTw8MTZ8clszXTw8OHxyWzJdfWNvbnN0IG89ZnVuY3Rpb24gZ2V0SGVhZGVyQmxvY2soZSx0KXtjb25zdCBpPVsxMDEsMTAxLDEyMCwxMDEsOTldLGE9ZS5wb3M7bGV0IHMscixuLG87dHJ5e3M9ZS5nZXRCeXRlcyh0KTtyPXMubGVuZ3RofWNhdGNoe31pZihyPT09dCl7bj1maW5kQmxvY2socyxpLHQtMippLmxlbmd0aCk7aWYobi5mb3VuZCYmbi5sZW5ndGg9PT10KXJldHVybntzdHJlYW06bmV3IFN0cmVhbShzKSxsZW5ndGg6dH19d2FybignSW52YWxpZCAiTGVuZ3RoMSIgcHJvcGVydHkgaW4gVHlwZTEgZm9udCAtLSB0cnlpbmcgdG8gcmVjb3Zlci4nKTtlLnBvcz1hO2Zvcig7Oyl7bj1maW5kQmxvY2soZS5wZWVrQnl0ZXMoMjA0OCksaSwwKTtpZigwPT09bi5sZW5ndGgpYnJlYWs7ZS5wb3MrPW4ubGVuZ3RoO2lmKG4uZm91bmQpe289ZS5wb3MtYTticmVha319ZS5wb3M9YTtpZihvKXJldHVybntzdHJlYW06bmV3IFN0cmVhbShlLmdldEJ5dGVzKG8pKSxsZW5ndGg6b307d2FybignVW5hYmxlIHRvIHJlY292ZXIgIkxlbmd0aDEiIHByb3BlcnR5IGluIFR5cGUxIGZvbnQgLS0gdXNpbmcgYXMgaXMuJyk7cmV0dXJue3N0cmVhbTpuZXcgU3RyZWFtKGUuZ2V0Qnl0ZXModCkpLGxlbmd0aDp0fX0odCxhKTtuZXcgVHlwZTFQYXJzZXIoby5zdHJlYW0sITEsWWkpLmV4dHJhY3RGb250SGVhZGVyKGkpO2lmKG4pe3I9dC5nZXRCeXRlcyg2KTtzPXJbNV08PDI0fHJbNF08PDE2fHJbM108PDh8clsyXX1jb25zdCBnPWZ1bmN0aW9uIGdldEVleGVjQmxvY2soZSx0KXtjb25zdCBpPWUuZ2V0Qnl0ZXMoKTtpZigwPT09aS5sZW5ndGgpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJnZXRFZXhlY0Jsb2NrIC0gbm8gZm9udCBwcm9ncmFtIGZvdW5kLiIpO3JldHVybntzdHJlYW06bmV3IFN0cmVhbShpKSxsZW5ndGg6aS5sZW5ndGh9fSh0KSxjPW5ldyBUeXBlMVBhcnNlcihnLnN0cmVhbSwhMCxZaSkuZXh0cmFjdEZvbnRQcm9ncmFtKGkpO2Zvcihjb25zdCBlIGluIGMucHJvcGVydGllcylpW2VdPWMucHJvcGVydGllc1tlXTtjb25zdCBoPWMuY2hhcnN0cmluZ3MsbD10aGlzLmdldFR5cGUyQ2hhcnN0cmluZ3MoaCksQz10aGlzLmdldFR5cGUyU3VicnMoYy5zdWJycyk7dGhpcy5jaGFyc3RyaW5ncz1oO3RoaXMuZGF0YT10aGlzLndyYXAoZSxsLHRoaXMuY2hhcnN0cmluZ3MsQyxpKTt0aGlzLnNlYWNzPXRoaXMuZ2V0U2VhY3MoYy5jaGFyc3RyaW5ncyl9Z2V0IG51bUdseXBocygpe3JldHVybiB0aGlzLmNoYXJzdHJpbmdzLmxlbmd0aCsxfWdldENoYXJzZXQoKXtjb25zdCBlPVsiLm5vdGRlZiJdO2Zvcihjb25zdHtnbHlwaE5hbWU6dH1vZiB0aGlzLmNoYXJzdHJpbmdzKWUucHVzaCh0KTtyZXR1cm4gZX1nZXRHbHlwaE1hcHBpbmcoZSl7Y29uc3QgdD10aGlzLmNoYXJzdHJpbmdzO2lmKGUuY29tcG9zaXRlKXtjb25zdCBpPU9iamVjdC5jcmVhdGUobnVsbCk7Zm9yKGxldCBhPTAscz10Lmxlbmd0aDthPHM7YSsrKXtpW2UuY01hcC5jaGFyQ29kZU9mKGEpXT1hKzF9cmV0dXJuIGl9Y29uc3QgaT1bIi5ub3RkZWYiXTtsZXQgYSxzO2ZvcihzPTA7czx0Lmxlbmd0aDtzKyspaS5wdXNoKHRbc10uZ2x5cGhOYW1lKTtjb25zdCByPWUuYnVpbHRJbkVuY29kaW5nO2lmKHIpe2E9T2JqZWN0LmNyZWF0ZShudWxsKTtmb3IoY29uc3QgZSBpbiByKXtzPWkuaW5kZXhPZihyW2VdKTtzPj0wJiYoYVtlXT1zKX19cmV0dXJuIHR5cGUxRm9udEdseXBoTWFwcGluZyhlLGEsaSl9aGFzR2x5cGhJZChlKXtpZihlPDB8fGU+PXRoaXMubnVtR2x5cGhzKXJldHVybiExO2lmKDA9PT1lKXJldHVybiEwO3JldHVybiB0aGlzLmNoYXJzdHJpbmdzW2UtMV0uY2hhcnN0cmluZy5sZW5ndGg+MH1nZXRTZWFjcyhlKXtjb25zdCB0PVtdO2ZvcihsZXQgaT0wLGE9ZS5sZW5ndGg7aTxhO2krKyl7Y29uc3QgYT1lW2ldO2Euc2VhYyYmKHRbaSsxXT1hLnNlYWMpfXJldHVybiB0fWdldFR5cGUyQ2hhcnN0cmluZ3MoZSl7Y29uc3QgdD1bXTtmb3IoY29uc3QgaSBvZiBlKXQucHVzaChpLmNoYXJzdHJpbmcpO3JldHVybiB0fWdldFR5cGUyU3VicnMoZSl7bGV0IHQ9MDtjb25zdCBpPWUubGVuZ3RoO3Q9aTwxMTMzPzEwNzppPDMzNzY5PzExMzE6MzI3Njg7Y29uc3QgYT1bXTtsZXQgcztmb3Iocz0wO3M8dDtzKyspYS5wdXNoKFsxMV0pO2ZvcihzPTA7czxpO3MrKylhLnB1c2goZVtzXSk7cmV0dXJuIGF9d3JhcChlLHQsaSxhLHMpe2NvbnN0IHI9bmV3IENGRjtyLmhlYWRlcj1uZXcgQ0ZGSGVhZGVyKDEsMCw0LDQpO3IubmFtZXM9W2VdO2NvbnN0IG49bmV3IENGRlRvcERpY3Q7bi5zZXRCeU5hbWUoInZlcnNpb24iLDM5MSk7bi5zZXRCeU5hbWUoIk5vdGljZSIsMzkyKTtuLnNldEJ5TmFtZSgiRnVsbE5hbWUiLDM5Myk7bi5zZXRCeU5hbWUoIkZhbWlseU5hbWUiLDM5NCk7bi5zZXRCeU5hbWUoIldlaWdodCIsMzk1KTtuLnNldEJ5TmFtZSgiRW5jb2RpbmciLG51bGwpO24uc2V0QnlOYW1lKCJGb250TWF0cml4IixzLmZvbnRNYXRyaXgpO24uc2V0QnlOYW1lKCJGb250QkJveCIscy5iYm94KTtuLnNldEJ5TmFtZSgiY2hhcnNldCIsbnVsbCk7bi5zZXRCeU5hbWUoIkNoYXJTdHJpbmdzIixudWxsKTtuLnNldEJ5TmFtZSgiUHJpdmF0ZSIsbnVsbCk7ci50b3BEaWN0PW47Y29uc3Qgbz1uZXcgQ0ZGU3RyaW5ncztvLmFkZCgiVmVyc2lvbiAwLjExIik7by5hZGQoIlNlZSBvcmlnaW5hbCBub3RpY2UiKTtvLmFkZChlKTtvLmFkZChlKTtvLmFkZCgiTWVkaXVtIik7ci5zdHJpbmdzPW87ci5nbG9iYWxTdWJySW5kZXg9bmV3IENGRkluZGV4O2NvbnN0IGc9dC5sZW5ndGgsYz1bIi5ub3RkZWYiXTtsZXQgaCxsO2ZvcihoPTA7aDxnO2grKyl7Y29uc3QgZT1pW2hdLmdseXBoTmFtZTstMT09PXdpLmluZGV4T2YoZSkmJm8uYWRkKGUpO2MucHVzaChlKX1yLmNoYXJzZXQ9bmV3IENGRkNoYXJzZXQoITEsMCxjKTtjb25zdCBDPW5ldyBDRkZJbmRleDtDLmFkZChbMTM5LDE0XSk7Zm9yKGg9MDtoPGc7aCsrKUMuYWRkKHRbaF0pO3IuY2hhclN0cmluZ3M9Qztjb25zdCBRPW5ldyBDRkZQcml2YXRlRGljdDtRLnNldEJ5TmFtZSgiU3VicnMiLG51bGwpO2NvbnN0IEU9WyJCbHVlVmFsdWVzIiwiT3RoZXJCbHVlcyIsIkZhbWlseUJsdWVzIiwiRmFtaWx5T3RoZXJCbHVlcyIsIlN0ZW1TbmFwSCIsIlN0ZW1TbmFwViIsIkJsdWVTaGlmdCIsIkJsdWVGdXp6IiwiQmx1ZVNjYWxlIiwiTGFuZ3VhZ2VHcm91cCIsIkV4cGFuc2lvbkZhY3RvciIsIkZvcmNlQm9sZCIsIlN0ZEhXIiwiU3RkVlciXTtmb3IoaD0wLGw9RS5sZW5ndGg7aDxsO2grKyl7Y29uc3QgZT1FW2hdO2lmKCEoZSBpbiBzLnByaXZhdGVEYXRhKSljb250aW51ZTtjb25zdCB0PXMucHJpdmF0ZURhdGFbZV07aWYoQXJyYXkuaXNBcnJheSh0KSlmb3IobGV0IGU9dC5sZW5ndGgtMTtlPjA7ZS0tKXRbZV0tPXRbZS0xXTtRLnNldEJ5TmFtZShlLHQpfXIudG9wRGljdC5wcml2YXRlRGljdD1RO2NvbnN0IHU9bmV3IENGRkluZGV4O2ZvcihoPTAsbD1hLmxlbmd0aDtoPGw7aCsrKXUuYWRkKGFbaF0pO1Euc3VicnNJbmRleD11O3JldHVybiBuZXcgQ0ZGQ29tcGlsZXIocikuY29tcGlsZSgpfX1jb25zdCBsYT1bWzU3MzQ0LDYzNzQzXSxbMTA0ODU3NiwxMTE0MTA5XV0sQ2E9MWUzLEJhPVsiYXNjZW50IiwiYmJveCIsImJsYWNrIiwiYm9sZCIsImNoYXJQcm9jT3BlcmF0b3JMaXN0IiwiY29tcG9zaXRlIiwiY3NzRm9udEluZm8iLCJkYXRhIiwiZGVmYXVsdFZNZXRyaWNzIiwiZGVmYXVsdFdpZHRoIiwiZGVzY2VudCIsImZhbGxiYWNrTmFtZSIsImZvbnRNYXRyaXgiLCJpc0ludmFsaWRQREZqc0ZvbnQiLCJpc1R5cGUzRm9udCIsIml0YWxpYyIsImxvYWRlZE5hbWUiLCJtaW1ldHlwZSIsIm1pc3NpbmdGaWxlIiwibmFtZSIsInJlbWVhc3VyZSIsInN1YnR5cGUiLCJzeXN0ZW1Gb250SW5mbyIsInR5cGUiLCJ2ZXJ0aWNhbCJdLFFhPVsiY01hcCIsImRlZmF1bHRFbmNvZGluZyIsImRpZmZlcmVuY2VzIiwiaXNNb25vc3BhY2UiLCJpc1NlcmlmRm9udCIsImlzU3ltYm9saWNGb250Iiwic2VhY01hcCIsInRvRm9udENoYXIiLCJ0b1VuaWNvZGUiLCJ2bWV0cmljcyIsIndpZHRocyJdO2Z1bmN0aW9uIGFkanVzdFdpZHRocyhlKXtpZighZS5mb250TWF0cml4KXJldHVybjtpZihlLmZvbnRNYXRyaXhbMF09PT1hWzBdKXJldHVybjtjb25zdCB0PS4wMDEvZS5mb250TWF0cml4WzBdLGk9ZS53aWR0aHM7Zm9yKGNvbnN0IGUgaW4gaSlpW2VdKj10O2UuZGVmYXVsdFdpZHRoKj10fWZ1bmN0aW9uIGFtZW5kRmFsbGJhY2tUb1VuaWNvZGUoZSl7aWYoIWUuZmFsbGJhY2tUb1VuaWNvZGUpcmV0dXJuO2lmKGUudG9Vbmljb2RlIGluc3RhbmNlb2YgSWRlbnRpdHlUb1VuaWNvZGVNYXApcmV0dXJuO2NvbnN0IHQ9W107Zm9yKGNvbnN0IGkgaW4gZS5mYWxsYmFja1RvVW5pY29kZSllLnRvVW5pY29kZS5oYXMoaSl8fCh0W2ldPWUuZmFsbGJhY2tUb1VuaWNvZGVbaV0pO3QubGVuZ3RoPjAmJmUudG9Vbmljb2RlLmFtZW5kKHQpfWNsYXNzIGZvbnRzX0dseXBoe2NvbnN0cnVjdG9yKGUsdCxpLGEscyxyLG4sbyxnKXt0aGlzLm9yaWdpbmFsQ2hhckNvZGU9ZTt0aGlzLmZvbnRDaGFyPXQ7dGhpcy51bmljb2RlPWk7dGhpcy5hY2NlbnQ9YTt0aGlzLndpZHRoPXM7dGhpcy52bWV0cmljPXI7dGhpcy5vcGVyYXRvckxpc3RJZD1uO3RoaXMuaXNTcGFjZT1vO3RoaXMuaXNJbkZvbnQ9Z31nZXQgY2F0ZWdvcnkoKXtyZXR1cm4gc2hhZG93KHRoaXMsImNhdGVnb3J5IixmdW5jdGlvbiBnZXRDaGFyVW5pY29kZUNhdGVnb3J5KGUpe2NvbnN0IHQ9SGkuZ2V0KGUpO2lmKHQpcmV0dXJuIHQ7Y29uc3QgaT1lLm1hdGNoKEppKSxhPXtpc1doaXRlc3BhY2U6ISFpPy5bMV0saXNaZXJvV2lkdGhEaWFjcml0aWM6ISFpPy5bMl0saXNJbnZpc2libGVGb3JtYXRNYXJrOiEhaT8uWzNdfTtIaS5zZXQoZSxhKTtyZXR1cm4gYX0odGhpcy51bmljb2RlKSwhMCl9fWZ1bmN0aW9uIGludDE2KGUsdCl7cmV0dXJuKGU8PDgpK3R9ZnVuY3Rpb24gd3JpdGVTaWduZWRJbnQxNihlLHQsaSl7ZVt0KzFdPWk7ZVt0XT1pPj4+OH1mdW5jdGlvbiBzaWduZWRJbnQxNihlLHQpe2NvbnN0IGk9KGU8PDgpK3Q7cmV0dXJuIDMyNzY4Jmk/aS02NTUzNjppfWZ1bmN0aW9uIHN0cmluZzE2KGUpe3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGU+PjgmMjU1LDI1NSZlKX1mdW5jdGlvbiBzYWZlU3RyaW5nMTYoZSl7ZT4zMjc2Nz9lPTMyNzY3OmU8LTMyNzY4JiYoZT0tMzI3NjgpO3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGU+PjgmMjU1LDI1NSZlKX1mdW5jdGlvbiBpc1RydWVUeXBlQ29sbGVjdGlvbkZpbGUoZSl7cmV0dXJuInR0Y2YiPT09Ynl0ZXNUb1N0cmluZyhlLnBlZWtCeXRlcyg0KSl9ZnVuY3Rpb24gZ2V0Rm9udEZpbGVUeXBlKGUse3R5cGU6dCxzdWJ0eXBlOmksY29tcG9zaXRlOmF9KXtsZXQgcyxyO2lmKGZ1bmN0aW9uIGlzVHJ1ZVR5cGVGaWxlKGUpe2NvbnN0IHQ9ZS5wZWVrQnl0ZXMoNCk7cmV0dXJuIDY1NTM2PT09cmVhZFVpbnQzMih0LDApfHwidHJ1ZSI9PT1ieXRlc1RvU3RyaW5nKHQpfShlKXx8aXNUcnVlVHlwZUNvbGxlY3Rpb25GaWxlKGUpKXM9YT8iQ0lERm9udFR5cGUyIjoiVHJ1ZVR5cGUiO2Vsc2UgaWYoZnVuY3Rpb24gaXNPcGVuVHlwZUZpbGUoZSl7cmV0dXJuIk9UVE8iPT09Ynl0ZXNUb1N0cmluZyhlLnBlZWtCeXRlcyg0KSl9KGUpKXM9YT8iQ0lERm9udFR5cGUyIjoiT3BlblR5cGUiO2Vsc2UgaWYoZnVuY3Rpb24gaXNUeXBlMUZpbGUoZSl7Y29uc3QgdD1lLnBlZWtCeXRlcygyKTtyZXR1cm4gMzc9PT10WzBdJiYzMz09PXRbMV18fDEyOD09PXRbMF0mJjE9PT10WzFdfShlKSlzPWE/IkNJREZvbnRUeXBlMCI6Ik1NVHlwZTEiPT09dD8iTU1UeXBlMSI6IlR5cGUxIjtlbHNlIGlmKGZ1bmN0aW9uIGlzQ0ZGRmlsZShlKXtjb25zdCB0PWUucGVla0J5dGVzKDQpO3JldHVybiB0WzBdPj0xJiZ0WzNdPj0xJiZ0WzNdPD00fShlKSlpZihhKXtzPSJDSURGb250VHlwZTAiO3I9IkNJREZvbnRUeXBlMEMifWVsc2V7cz0iTU1UeXBlMSI9PT10PyJNTVR5cGUxIjoiVHlwZTEiO3I9IlR5cGUxQyJ9ZWxzZXt3YXJuKCJnZXRGb250RmlsZVR5cGU6IFVuYWJsZSB0byBkZXRlY3QgY29ycmVjdCBmb250IGZpbGUgVHlwZS9TdWJ0eXBlLiIpO3M9dDtyPWl9cmV0dXJuW3Mscl19ZnVuY3Rpb24gYXBwbHlTdGFuZGFyZEZvbnRHbHlwaE1hcChlLHQpe2Zvcihjb25zdCBpIGluIHQpZVsraV09dFtpXX1mdW5jdGlvbiBidWlsZFRvRm9udENoYXIoZSx0LGkpe2NvbnN0IGE9W107bGV0IHM7Zm9yKGxldCBpPTAscj1lLmxlbmd0aDtpPHI7aSsrKXtzPWdldFVuaWNvZGVGb3JHbHlwaChlW2ldLHQpOy0xIT09cyYmKGFbaV09cyl9Zm9yKGNvbnN0IGUgaW4gaSl7cz1nZXRVbmljb2RlRm9yR2x5cGgoaVtlXSx0KTstMSE9PXMmJihhWytlXT1zKX1yZXR1cm4gYX1mdW5jdGlvbiBpc01hY05hbWVSZWNvcmQoZSl7cmV0dXJuIDE9PT1lLnBsYXRmb3JtJiYwPT09ZS5lbmNvZGluZyYmMD09PWUubGFuZ3VhZ2V9ZnVuY3Rpb24gaXNXaW5OYW1lUmVjb3JkKGUpe3JldHVybiAzPT09ZS5wbGF0Zm9ybSYmMT09PWUuZW5jb2RpbmcmJjEwMzM9PT1lLmxhbmd1YWdlfWZ1bmN0aW9uIGNvbnZlcnRDaWRTdHJpbmcoZSx0LGk9ITEpe3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAxOnJldHVybiB0LmNoYXJDb2RlQXQoMCk7Y2FzZSAyOnJldHVybiB0LmNoYXJDb2RlQXQoMCk8PDh8dC5jaGFyQ29kZUF0KDEpfWNvbnN0IGE9YFVuc3VwcG9ydGVkIENJRCBzdHJpbmcgKGNoYXJDb2RlICR7ZX0pOiAiJHt0fSIuYDtpZihpKXRocm93IG5ldyBGb3JtYXRFcnJvcihhKTt3YXJuKGEpO3JldHVybiB0fWZ1bmN0aW9uIGFkanVzdE1hcHBpbmcoZSx0LGksYSl7Y29uc3Qgcz1PYmplY3QuY3JlYXRlKG51bGwpLHI9bmV3IE1hcCxuPVtdLG89bmV3IFNldDtsZXQgZz0wO2xldCBjPWxhW2ddWzBdLGg9bGFbZ11bMV07Zm9yKGxldCBDIGluIGUpe0N8PTA7bGV0IFE9ZVtDXTtpZighdChRKSljb250aW51ZTtpZihjPmgpe2crKztpZihnPj1sYS5sZW5ndGgpe3dhcm4oIlJhbiBvdXQgb2Ygc3BhY2UgaW4gZm9udCBwcml2YXRlIHVzZSBhcmVhLiIpO2JyZWFrfWM9bGFbZ11bMF07aD1sYVtnXVsxXX1jb25zdCBFPWMrKzswPT09USYmKFE9aSk7bGV0IHU9YS5nZXQoQyk7InN0cmluZyI9PXR5cGVvZiB1JiYodT11LmNvZGVQb2ludEF0KDApKTtpZih1JiYhKGw9dSxsYVswXVswXTw9bCYmbDw9bGFbMF1bMV18fGxhWzFdWzBdPD1sJiZsPD1sYVsxXVsxXSkmJiFvLmhhcyhRKSl7ci5zZXQodSxRKTtvLmFkZChRKX1zW0VdPVE7bltDXT1FfXZhciBsO3JldHVybnt0b0ZvbnRDaGFyOm4sY2hhckNvZGVUb0dseXBoSWQ6cyx0b1VuaWNvZGVFeHRyYU1hcDpyLG5leHRBdmFpbGFibGVGb250Q2hhckNvZGU6Y319ZnVuY3Rpb24gY3JlYXRlQ21hcFRhYmxlKGUsdCxpKXtjb25zdCBhPWZ1bmN0aW9uIGdldFJhbmdlcyhlLHQsaSl7Y29uc3QgYT1bXTtmb3IoY29uc3QgdCBpbiBlKWVbdF0+PWl8fGEucHVzaCh7Zm9udENoYXJDb2RlOjB8dCxnbHlwaElkOmVbdF19KTtpZih0KWZvcihjb25zdFtlLHNdb2YgdClzPj1pfHxhLnB1c2goe2ZvbnRDaGFyQ29kZTplLGdseXBoSWQ6c30pOzA9PT1hLmxlbmd0aCYmYS5wdXNoKHtmb250Q2hhckNvZGU6MCxnbHlwaElkOjB9KTthLnNvcnQoKGZ1bmN0aW9uIGZvbnRHZXRSYW5nZXNTb3J0KGUsdCl7cmV0dXJuIGUuZm9udENoYXJDb2RlLXQuZm9udENoYXJDb2RlfSkpO2NvbnN0IHM9W10scj1hLmxlbmd0aDtmb3IobGV0IGU9MDtlPHI7KXtjb25zdCB0PWFbZV0uZm9udENoYXJDb2RlLGk9W2FbZV0uZ2x5cGhJZF07KytlO2xldCBuPXQ7Zm9yKDtlPHImJm4rMT09PWFbZV0uZm9udENoYXJDb2RlOyl7aS5wdXNoKGFbZV0uZ2x5cGhJZCk7KytuOysrZTtpZig2NTUzNT09PW4pYnJlYWt9cy5wdXNoKFt0LG4saV0pfXJldHVybiBzfShlLHQsaSkscz1hLmF0KC0xKVsxXT42NTUzNT8yOjE7bGV0IHIsbixvLGcsYz0iXDBcMCIrc3RyaW5nMTYocykrIlwwA1wwASIrc3RyaW5nMzIoNCs4KnMpO2ZvcihyPWEubGVuZ3RoLTE7cj49MCYmIShhW3JdWzBdPD02NTUzNSk7LS1yKTtjb25zdCBoPXIrMTthW3JdWzBdPDY1NTM1JiY2NTUzNT09PWFbcl1bMV0mJihhW3JdWzFdPTY1NTM0KTtjb25zdCBsPWFbcl1bMV08NjU1MzU/MTowLEM9aCtsLFE9T3BlblR5cGVGaWxlQnVpbGRlci5nZXRTZWFyY2hQYXJhbXMoQywyKTtsZXQgRSx1LGQsZixwPSIiLG09IiIseT0iIix3PSIiLGI9IiIsRD0wO2ZvcihyPTAsbj1oO3I8bjtyKyspe0U9YVtyXTt1PUVbMF07ZD1FWzFdO3ArPXN0cmluZzE2KHUpO20rPXN0cmluZzE2KGQpO2Y9RVsyXTtsZXQgZT0hMDtmb3Iobz0xLGc9Zi5sZW5ndGg7bzxnOysrbylpZihmW29dIT09ZltvLTFdKzEpe2U9ITE7YnJlYWt9aWYoZSl7eSs9c3RyaW5nMTYoZlswXS11JjY1NTM1KTt3Kz1zdHJpbmcxNigwKX1lbHNle2NvbnN0IGU9MiooQy1yKSsyKkQ7RCs9ZC11KzE7eSs9c3RyaW5nMTYoMCk7dys9c3RyaW5nMTYoZSk7Zm9yKG89MCxnPWYubGVuZ3RoO288ZzsrK28pYis9c3RyaW5nMTYoZltvXSl9fWlmKGw+MCl7bSs9IsO/w78iO3ArPSLDv8O/Ijt5Kz0iXDABIjt3Kz0iXDBcMCJ9Y29uc3QgRj0iXDBcMCIrc3RyaW5nMTYoMipDKStzdHJpbmcxNihRLnJhbmdlKStzdHJpbmcxNihRLmVudHJ5KStzdHJpbmcxNihRLnJhbmdlU2hpZnQpK20rIlwwXDAiK3AreSt3K2I7bGV0IFM9IiIsaz0iIjtpZihzPjEpe2MrPSJcMANcMFxuIitzdHJpbmczMig0Kzgqcys0K0YubGVuZ3RoKTtTPSIiO2ZvcihyPTAsbj1hLmxlbmd0aDtyPG47cisrKXtFPWFbcl07dT1FWzBdO2Y9RVsyXTtsZXQgZT1mWzBdO2ZvcihvPTEsZz1mLmxlbmd0aDtvPGc7KytvKWlmKGZbb10hPT1mW28tMV0rMSl7ZD1FWzBdK28tMTtTKz1zdHJpbmczMih1KStzdHJpbmczMihkKStzdHJpbmczMihlKTt1PWQrMTtlPWZbb119Uys9c3RyaW5nMzIodSkrc3RyaW5nMzIoRVsxXSkrc3RyaW5nMzIoZSl9az0iXDBcZlwwXDAiK3N0cmluZzMyKFMubGVuZ3RoKzE2KSsiXDBcMFwwXDAiK3N0cmluZzMyKFMubGVuZ3RoLzEyKX1yZXR1cm4gYysiXDAEIitzdHJpbmcxNihGLmxlbmd0aCs0KStGK2srU31mdW5jdGlvbiBjcmVhdGVPUzJUYWJsZShlLHQsaSl7aXx8PXt1bml0c1BlckVtOjAseU1heDowLHlNaW46MCxhc2NlbnQ6MCxkZXNjZW50OjB9O2xldCBzPTAscj0wLG49MCxvPTAsZz1udWxsLGM9MCxoPS0xO2lmKHQpe2ZvcihsZXQgZSBpbiB0KXtlfD0wOyhnPmV8fCFnKSYmKGc9ZSk7YzxlJiYoYz1lKTtoPWdldFVuaWNvZGVSYW5nZUZvcihlLGgpO2lmKGg8MzIpc3w9MTw8aDtlbHNlIGlmKGg8NjQpcnw9MTw8aC0zMjtlbHNlIGlmKGg8OTYpbnw9MTw8aC02NDtlbHNle2lmKCEoaDwxMjMpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiVW5pY29kZSByYW5nZXMgQml0cyA+IDEyMyBhcmUgcmVzZXJ2ZWQgZm9yIGludGVybmFsIHVzYWdlIik7b3w9MTw8aC05Nn19Yz42NTUzNSYmKGM9NjU1MzUpfWVsc2V7Zz0wO2M9MjU1fWNvbnN0IGw9ZS5iYm94fHxbMCwwLDAsMF0sQz1pLnVuaXRzUGVyRW18fDEvKGUuZm9udE1hdHJpeHx8YSlbMF0sUT1lLmFzY2VudFNjYWxlZD8xOkMvQ2EsRT1pLmFzY2VudHx8TWF0aC5yb3VuZChRKihlLmFzY2VudHx8bFszXSkpO2xldCB1PWkuZGVzY2VudHx8TWF0aC5yb3VuZChRKihlLmRlc2NlbnR8fGxbMV0pKTt1PjAmJmUuZGVzY2VudD4wJiZsWzFdPDAmJih1PS11KTtjb25zdCBkPWkueU1heHx8RSxmPS1pLnlNaW58fC11O3JldHVybiJcMAMCJAHDtFwwBVwwXDACwooCwrtcMFwwXDDCjALCigLCu1wwXDABw59ceDAwMQECXDBcMFwwXDAGIitTdHJpbmcuZnJvbUNoYXJDb2RlKGUuZml4ZWRQaXRjaD85OjApKyJcMFwwXDBcMFwwXDAiK3N0cmluZzMyKHMpK3N0cmluZzMyKHIpK3N0cmluZzMyKG4pK3N0cmluZzMyKG8pKyIqMjEqIitzdHJpbmcxNihlLml0YWxpY0FuZ2xlPzE6MCkrc3RyaW5nMTYoZ3x8ZS5maXJzdENoYXIpK3N0cmluZzE2KGN8fGUubGFzdENoYXIpK3N0cmluZzE2KEUpK3N0cmluZzE2KHUpKyJcMGQiK3N0cmluZzE2KGQpK3N0cmluZzE2KGYpKyJcMFwwXDBcMFwwXDBcMFwwIitzdHJpbmcxNihlLnhIZWlnaHQpK3N0cmluZzE2KGUuY2FwSGVpZ2h0KStzdHJpbmcxNigwKStzdHJpbmcxNihnfHxlLmZpcnN0Q2hhcikrIlwwAyJ9ZnVuY3Rpb24gY3JlYXRlUG9zdFRhYmxlKGUpe3JldHVybiJcMANcMFwwIitzdHJpbmczMihNYXRoLmZsb29yKDY1NTM2KmUuaXRhbGljQW5nbGUpKSsiXDBcMFwwXDAiK3N0cmluZzMyKGUuZml4ZWRQaXRjaD8xOjApKyJcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMCJ9ZnVuY3Rpb24gY3JlYXRlUG9zdHNjcmlwdE5hbWUoZSl7cmV0dXJuIGUucmVwbGFjZUFsbCgvW15ceDIxLVx4N0VdfFtbXF0oKXt9PD4vJV0vZywiIikuc2xpY2UoMCw2Myl9ZnVuY3Rpb24gY3JlYXRlTmFtZVRhYmxlKGUsdCl7dHx8KHQ9W1tdLFtdXSk7Y29uc3QgaT1bdFswXVswXXx8Ik9yaWdpbmFsIGxpY2VuY2UiLHRbMF1bMV18fGUsdFswXVsyXXx8IlVua25vd24iLHRbMF1bM118fCJ1bmlxdWVJRCIsdFswXVs0XXx8ZSx0WzBdWzVdfHwiVmVyc2lvbiAwLjExIix0WzBdWzZdfHxjcmVhdGVQb3N0c2NyaXB0TmFtZShlKSx0WzBdWzddfHwiVW5rbm93biIsdFswXVs4XXx8IlVua25vd24iLHRbMF1bOV18fCJVbmtub3duIl0sYT1bXTtsZXQgcyxyLG4sbyxnO2ZvcihzPTAscj1pLmxlbmd0aDtzPHI7cysrKXtnPXRbMV1bc118fGlbc107Y29uc3QgZT1bXTtmb3Iobj0wLG89Zy5sZW5ndGg7bjxvO24rKyllLnB1c2goc3RyaW5nMTYoZy5jaGFyQ29kZUF0KG4pKSk7YS5wdXNoKGUuam9pbigiIikpfWNvbnN0IGM9W2ksYV0saD1bIlwwASIsIlwwAyJdLGw9WyJcMFwwIiwiXDABIl0sQz1bIlwwXDAiLCIEXHQiXSxRPWkubGVuZ3RoKmgubGVuZ3RoO2xldCBFPSJcMFwwIitzdHJpbmcxNihRKStzdHJpbmcxNigxMipRKzYpLHU9MDtmb3Iocz0wLHI9aC5sZW5ndGg7czxyO3MrKyl7Y29uc3QgZT1jW3NdO2ZvcihuPTAsbz1lLmxlbmd0aDtuPG87bisrKXtnPWVbbl07RSs9aFtzXStsW3NdK0Nbc10rc3RyaW5nMTYobikrc3RyaW5nMTYoZy5sZW5ndGgpK3N0cmluZzE2KHUpO3UrPWcubGVuZ3RofX1FKz1pLmpvaW4oIiIpK2Euam9pbigiIik7cmV0dXJuIEV9Y2xhc3MgRm9udHtjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5uYW1lPWU7dGhpcy5wc05hbWU9bnVsbDt0aGlzLm1pbWV0eXBlPW51bGw7dGhpcy5kaXNhYmxlRm9udEZhY2U9ITE7dGhpcy5sb2FkZWROYW1lPWkubG9hZGVkTmFtZTt0aGlzLmlzVHlwZTNGb250PWkuaXNUeXBlM0ZvbnQ7dGhpcy5taXNzaW5nRmlsZT0hMTt0aGlzLmNzc0ZvbnRJbmZvPWkuY3NzRm9udEluZm87dGhpcy5fY2hhcnNDYWNoZT1PYmplY3QuY3JlYXRlKG51bGwpO3RoaXMuX2dseXBoQ2FjaGU9T2JqZWN0LmNyZWF0ZShudWxsKTtsZXQgYT0hIShpLmZsYWdzJktpKTtpZighYSYmIWkuaXNTaW11bGF0ZWRGbGFncyl7Y29uc3QgdD1lLnJlcGxhY2VBbGwoL1ssX10vZywiLSIpLnNwbGl0KCItIiwxKVswXSxpPWppKCk7Zm9yKGNvbnN0IGUgb2YgdC5zcGxpdCgiKyIpKWlmKGlbZV0pe2E9ITA7YnJlYWt9fXRoaXMuaXNTZXJpZkZvbnQ9YTt0aGlzLmlzU3ltYm9saWNGb250PSEhKGkuZmxhZ3MmVGkpO3RoaXMuaXNNb25vc3BhY2U9ISEoaS5mbGFncyZ2aSk7bGV0e3R5cGU6cyxzdWJ0eXBlOnJ9PWk7dGhpcy50eXBlPXM7dGhpcy5zdWJ0eXBlPXI7dGhpcy5zeXN0ZW1Gb250SW5mbz1pLnN5c3RlbUZvbnRJbmZvO2NvbnN0IG49ZS5tYXRjaCgvXkludmFsaWRQREZqc0ZvbnRfKC4qKV9cZCskLyk7dGhpcy5pc0ludmFsaWRQREZqc0ZvbnQ9ISFuO3RoaXMuaXNJbnZhbGlkUERGanNGb250P3RoaXMuZmFsbGJhY2tOYW1lPW5bMV06dGhpcy5pc01vbm9zcGFjZT90aGlzLmZhbGxiYWNrTmFtZT0ibW9ub3NwYWNlIjp0aGlzLmlzU2VyaWZGb250P3RoaXMuZmFsbGJhY2tOYW1lPSJzZXJpZiI6dGhpcy5mYWxsYmFja05hbWU9InNhbnMtc2VyaWYiO2lmKHRoaXMuc3lzdGVtRm9udEluZm8/Lmd1ZXNzRmFsbGJhY2spe3RoaXMuc3lzdGVtRm9udEluZm8uZ3Vlc3NGYWxsYmFjaz0hMTt0aGlzLnN5c3RlbUZvbnRJbmZvLmNzcys9YCwke3RoaXMuZmFsbGJhY2tOYW1lfWB9dGhpcy5kaWZmZXJlbmNlcz1pLmRpZmZlcmVuY2VzO3RoaXMud2lkdGhzPWkud2lkdGhzO3RoaXMuZGVmYXVsdFdpZHRoPWkuZGVmYXVsdFdpZHRoO3RoaXMuY29tcG9zaXRlPWkuY29tcG9zaXRlO3RoaXMuY01hcD1pLmNNYXA7dGhpcy5jYXBIZWlnaHQ9aS5jYXBIZWlnaHQvQ2E7dGhpcy5hc2NlbnQ9aS5hc2NlbnQvQ2E7dGhpcy5kZXNjZW50PWkuZGVzY2VudC9DYTt0aGlzLmxpbmVIZWlnaHQ9dGhpcy5hc2NlbnQtdGhpcy5kZXNjZW50O3RoaXMuZm9udE1hdHJpeD1pLmZvbnRNYXRyaXg7dGhpcy5iYm94PWkuYmJveDt0aGlzLmRlZmF1bHRFbmNvZGluZz1pLmRlZmF1bHRFbmNvZGluZzt0aGlzLnRvVW5pY29kZT1pLnRvVW5pY29kZTt0aGlzLnRvRm9udENoYXI9W107aWYoIlR5cGUzIj09PWkudHlwZSl7Zm9yKGxldCBlPTA7ZTwyNTY7ZSsrKXRoaXMudG9Gb250Q2hhcltlXT10aGlzLmRpZmZlcmVuY2VzW2VdfHxpLmRlZmF1bHRFbmNvZGluZ1tlXTtyZXR1cm59dGhpcy5jaWRFbmNvZGluZz1pLmNpZEVuY29kaW5nfHwiIjt0aGlzLnZlcnRpY2FsPSEhaS52ZXJ0aWNhbDtpZih0aGlzLnZlcnRpY2FsKXt0aGlzLnZtZXRyaWNzPWkudm1ldHJpY3M7dGhpcy5kZWZhdWx0Vk1ldHJpY3M9aS5kZWZhdWx0Vk1ldHJpY3N9aWYoIXR8fHQuaXNFbXB0eSl7dCYmd2FybignRm9udCBmaWxlIGlzIGVtcHR5IGluICInK2UrJyIgKCcrdGhpcy5sb2FkZWROYW1lKyIpIik7dGhpcy5mYWxsYmFja1RvU3lzdGVtRm9udChpKTtyZXR1cm59W3Mscl09Z2V0Rm9udEZpbGVUeXBlKHQsaSk7cz09PXRoaXMudHlwZSYmcj09PXRoaXMuc3VidHlwZXx8aW5mbyhgSW5jb25zaXN0ZW50IGZvbnQgZmlsZSBUeXBlL1N1YlR5cGUsIGV4cGVjdGVkOiAke3RoaXMudHlwZX0vJHt0aGlzLnN1YnR5cGV9IGJ1dCBmb3VuZDogJHtzfS8ke3J9LmApO2xldCBvO3RyeXtzd2l0Y2gocyl7Y2FzZSJNTVR5cGUxIjppbmZvKCJNTVR5cGUxIGZvbnQgKCIrZSsiKSwgZmFsbGluZyBiYWNrIHRvIFR5cGUxLiIpO2Nhc2UiVHlwZTEiOmNhc2UiQ0lERm9udFR5cGUwIjp0aGlzLm1pbWV0eXBlPSJmb250L29wZW50eXBlIjtjb25zdCBhPSJUeXBlMUMiPT09cnx8IkNJREZvbnRUeXBlMEMiPT09cj9uZXcgQ0ZGRm9udCh0LGkpOm5ldyBUeXBlMUZvbnQoZSx0LGkpO2FkanVzdFdpZHRocyhpKTtvPXRoaXMuY29udmVydChlLGEsaSk7YnJlYWs7Y2FzZSJPcGVuVHlwZSI6Y2FzZSJUcnVlVHlwZSI6Y2FzZSJDSURGb250VHlwZTIiOnRoaXMubWltZXR5cGU9ImZvbnQvb3BlbnR5cGUiO289dGhpcy5jaGVja0FuZFJlcGFpcihlLHQsaSk7aWYodGhpcy5pc09wZW5UeXBlKXthZGp1c3RXaWR0aHMoaSk7cz0iT3BlblR5cGUifWJyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEZvcm1hdEVycm9yKGBGb250ICR7c30gaXMgbm90IHN1cHBvcnRlZGApfX1jYXRjaChlKXt3YXJuKGUpO3RoaXMuZmFsbGJhY2tUb1N5c3RlbUZvbnQoaSk7cmV0dXJufWFtZW5kRmFsbGJhY2tUb1VuaWNvZGUoaSk7dGhpcy5kYXRhPW87dGhpcy50eXBlPXM7dGhpcy5zdWJ0eXBlPXI7dGhpcy5mb250TWF0cml4PWkuZm9udE1hdHJpeDt0aGlzLndpZHRocz1pLndpZHRoczt0aGlzLmRlZmF1bHRXaWR0aD1pLmRlZmF1bHRXaWR0aDt0aGlzLnRvVW5pY29kZT1pLnRvVW5pY29kZTt0aGlzLnNlYWNNYXA9aS5zZWFjTWFwfWdldCByZW5kZXJlcigpe3JldHVybiBzaGFkb3codGhpcywicmVuZGVyZXIiLEZvbnRSZW5kZXJlckZhY3RvcnkuY3JlYXRlKHRoaXMsWWkpKX1leHBvcnREYXRhKGU9ITEpe2NvbnN0IHQ9ZT9bLi4uQmEsLi4uUWFdOkJhLGk9T2JqZWN0LmNyZWF0ZShudWxsKTtsZXQgYSxzO2ZvcihhIG9mIHQpe3M9dGhpc1thXTt2b2lkIDAhPT1zJiYoaVthXT1zKX1yZXR1cm4gaX1mYWxsYmFja1RvU3lzdGVtRm9udChlKXt0aGlzLm1pc3NpbmdGaWxlPSEwO2NvbnN0e25hbWU6dCx0eXBlOml9PXRoaXM7bGV0IGE9bm9ybWFsaXplRm9udE5hbWUodCk7Y29uc3Qgcz1QaSgpLHI9WGkoKSxuPSEhc1thXSxvPSEoIXJbYV18fCFzW3JbYV1dKTthPXNbYV18fHJbYV18fGE7Y29uc3QgZz1lYSgpW2FdO2lmKGcpe2lzTmFOKHRoaXMuYXNjZW50KSYmKHRoaXMuYXNjZW50PWcuYXNjZW50L0NhKTtpc05hTih0aGlzLmRlc2NlbnQpJiYodGhpcy5kZXNjZW50PWcuZGVzY2VudC9DYSk7aXNOYU4odGhpcy5jYXBIZWlnaHQpJiYodGhpcy5jYXBIZWlnaHQ9Zy5jYXBIZWlnaHQvQ2EpfXRoaXMuYm9sZD0vYm9sZC9naS50ZXN0KGEpO3RoaXMuaXRhbGljPS9vYmxpcXVlfGl0YWxpYy9naS50ZXN0KGEpO3RoaXMuYmxhY2s9L0JsYWNrL2cudGVzdCh0KTtjb25zdCBjPS9OYXJyb3cvZy50ZXN0KHQpO3RoaXMucmVtZWFzdXJlPSghbnx8YykmJk9iamVjdC5rZXlzKHRoaXMud2lkdGhzKS5sZW5ndGg+MDtpZigobnx8bykmJiJDSURGb250VHlwZTIiPT09aSYmdGhpcy5jaWRFbmNvZGluZy5zdGFydHNXaXRoKCJJZGVudGl0eS0iKSl7Y29uc3QgaT1lLmNpZFRvR2lkTWFwLGE9W107YXBwbHlTdGFuZGFyZEZvbnRHbHlwaE1hcChhLFZpKCkpOy9BcmlhbC0/QmxhY2svaS50ZXN0KHQpP2FwcGx5U3RhbmRhcmRGb250R2x5cGhNYXAoYSx6aSgpKTovQ2FsaWJyaS9pLnRlc3QodCkmJmFwcGx5U3RhbmRhcmRGb250R2x5cGhNYXAoYSxfaSgpKTtpZihpKXtmb3IoY29uc3QgZSBpbiBhKXtjb25zdCB0PWFbZV07dm9pZCAwIT09aVt0XSYmKGFbK2VdPWlbdF0pfWkubGVuZ3RoIT09dGhpcy50b1VuaWNvZGUubGVuZ3RoJiZlLmhhc0luY2x1ZGVkVG9Vbmljb2RlTWFwJiZ0aGlzLnRvVW5pY29kZSBpbnN0YW5jZW9mIElkZW50aXR5VG9Vbmljb2RlTWFwJiZ0aGlzLnRvVW5pY29kZS5mb3JFYWNoKChmdW5jdGlvbihlLHQpe2NvbnN0IHM9YVtlXTt2b2lkIDA9PT1pW3NdJiYoYVsrZV09dCl9KSl9dGhpcy50b1VuaWNvZGUgaW5zdGFuY2VvZiBJZGVudGl0eVRvVW5pY29kZU1hcHx8dGhpcy50b1VuaWNvZGUuZm9yRWFjaCgoZnVuY3Rpb24oZSx0KXthWytlXT10fSkpO3RoaXMudG9Gb250Q2hhcj1hO3RoaXMudG9Vbmljb2RlPW5ldyBUb1VuaWNvZGVNYXAoYSl9ZWxzZSBpZigvU3ltYm9sL2kudGVzdChhKSl0aGlzLnRvRm9udENoYXI9YnVpbGRUb0ZvbnRDaGFyKG1pLE5pKCksdGhpcy5kaWZmZXJlbmNlcyk7ZWxzZSBpZigvRGluZ2JhdHMvaS50ZXN0KGEpKXRoaXMudG9Gb250Q2hhcj1idWlsZFRvRm9udENoYXIoeWksR2koKSx0aGlzLmRpZmZlcmVuY2VzKTtlbHNlIGlmKG4pe2NvbnN0IGU9YnVpbGRUb0ZvbnRDaGFyKHRoaXMuZGVmYXVsdEVuY29kaW5nLE5pKCksdGhpcy5kaWZmZXJlbmNlcyk7IkNJREZvbnRUeXBlMiIhPT1pfHx0aGlzLmNpZEVuY29kaW5nLnN0YXJ0c1dpdGgoIklkZW50aXR5LSIpfHx0aGlzLnRvVW5pY29kZSBpbnN0YW5jZW9mIElkZW50aXR5VG9Vbmljb2RlTWFwfHx0aGlzLnRvVW5pY29kZS5mb3JFYWNoKChmdW5jdGlvbih0LGkpe2VbK3RdPWl9KSk7dGhpcy50b0ZvbnRDaGFyPWV9ZWxzZXtjb25zdCBlPU5pKCksaT1bXTt0aGlzLnRvVW5pY29kZS5mb3JFYWNoKCgodCxhKT0+e2lmKCF0aGlzLmNvbXBvc2l0ZSl7Y29uc3QgaT1nZXRVbmljb2RlRm9yR2x5cGgodGhpcy5kaWZmZXJlbmNlc1t0XXx8dGhpcy5kZWZhdWx0RW5jb2RpbmdbdF0sZSk7LTEhPT1pJiYoYT1pKX1pWyt0XT1hfSkpO3RoaXMuY29tcG9zaXRlJiZ0aGlzLnRvVW5pY29kZSBpbnN0YW5jZW9mIElkZW50aXR5VG9Vbmljb2RlTWFwJiYvVGFob21hfFZlcmRhbmEvaS50ZXN0KHQpJiZhcHBseVN0YW5kYXJkRm9udEdseXBoTWFwKGksVmkoKSk7dGhpcy50b0ZvbnRDaGFyPWl9YW1lbmRGYWxsYmFja1RvVW5pY29kZShlKTt0aGlzLmxvYWRlZE5hbWU9YS5zcGxpdCgiLSIsMSlbMF19Y2hlY2tBbmRSZXBhaXIoZSx0LGkpe2NvbnN0IGE9WyJPUy8yIiwiY21hcCIsImhlYWQiLCJoaGVhIiwiaG10eCIsIm1heHAiLCJuYW1lIiwicG9zdCIsImxvY2EiLCJnbHlmIiwiZnBnbSIsInByZXAiLCJjdnQgIiwiQ0ZGICJdO2Z1bmN0aW9uIHJlYWRUYWJsZXMoZSx0KXtjb25zdCBpPU9iamVjdC5jcmVhdGUobnVsbCk7aVsiT1MvMiJdPW51bGw7aS5jbWFwPW51bGw7aS5oZWFkPW51bGw7aS5oaGVhPW51bGw7aS5obXR4PW51bGw7aS5tYXhwPW51bGw7aS5uYW1lPW51bGw7aS5wb3N0PW51bGw7Zm9yKGxldCBzPTA7czx0O3MrKyl7Y29uc3QgdD1yZWFkVGFibGVFbnRyeShlKTthLmluY2x1ZGVzKHQudGFnKSYmKDAhPT10Lmxlbmd0aCYmKGlbdC50YWddPXQpKX1yZXR1cm4gaX1mdW5jdGlvbiByZWFkVGFibGVFbnRyeShlKXtjb25zdCB0PWUuZ2V0U3RyaW5nKDQpLGk9ZS5nZXRJbnQzMigpPj4+MCxhPWUuZ2V0SW50MzIoKT4+PjAscz1lLmdldEludDMyKCk+Pj4wLHI9ZS5wb3M7ZS5wb3M9ZS5zdGFydHx8MDtlLnNraXAoYSk7Y29uc3Qgbj1lLmdldEJ5dGVzKHMpO2UucG9zPXI7aWYoImhlYWQiPT09dCl7bls4XT1uWzldPW5bMTBdPW5bMTFdPTA7blsxN118PTMyfXJldHVybnt0YWc6dCxjaGVja3N1bTppLGxlbmd0aDpzLG9mZnNldDphLGRhdGE6bn19ZnVuY3Rpb24gcmVhZE9wZW5UeXBlSGVhZGVyKGUpe3JldHVybnt2ZXJzaW9uOmUuZ2V0U3RyaW5nKDQpLG51bVRhYmxlczplLmdldFVpbnQxNigpLHNlYXJjaFJhbmdlOmUuZ2V0VWludDE2KCksZW50cnlTZWxlY3RvcjplLmdldFVpbnQxNigpLHJhbmdlU2hpZnQ6ZS5nZXRVaW50MTYoKX19ZnVuY3Rpb24gc2FuaXRpemVHbHlwaChlLHQsaSxhLHMscil7Y29uc3Qgbj17bGVuZ3RoOjAsc2l6ZU9mSW5zdHJ1Y3Rpb25zOjB9O2lmKHQ8MHx8dD49ZS5sZW5ndGh8fGk+ZS5sZW5ndGh8fGktdDw9MTIpcmV0dXJuIG47Y29uc3Qgbz1lLnN1YmFycmF5KHQsaSksZz1zaWduZWRJbnQxNihvWzJdLG9bM10pLGM9c2lnbmVkSW50MTYob1s0XSxvWzVdKSxoPXNpZ25lZEludDE2KG9bNl0sb1s3XSksbD1zaWduZWRJbnQxNihvWzhdLG9bOV0pO2lmKGc+aCl7d3JpdGVTaWduZWRJbnQxNihvLDIsaCk7d3JpdGVTaWduZWRJbnQxNihvLDYsZyl9aWYoYz5sKXt3cml0ZVNpZ25lZEludDE2KG8sNCxsKTt3cml0ZVNpZ25lZEludDE2KG8sOCxjKX1jb25zdCBDPXNpZ25lZEludDE2KG9bMF0sb1sxXSk7aWYoQzwwKXtpZihDPC0xKXJldHVybiBuO2Euc2V0KG8scyk7bi5sZW5ndGg9by5sZW5ndGg7cmV0dXJuIG59bGV0IFEsRT0xMCx1PTA7Zm9yKFE9MDtRPEM7USsrKXt1PShvW0VdPDw4fG9bRSsxXSkrMTtFKz0yfWNvbnN0IGQ9RSxmPW9bRV08PDh8b1tFKzFdO24uc2l6ZU9mSW5zdHJ1Y3Rpb25zPWY7RSs9MitmO2NvbnN0IHA9RTtsZXQgbT0wO2ZvcihRPTA7UTx1O1ErKyl7Y29uc3QgZT1vW0UrK107MTkyJmUmJihvW0UtMV09NjMmZSk7bGV0IHQ9MjsyJmU/dD0xOjE2JmUmJih0PTApO2xldCBpPTI7NCZlP2k9MTozMiZlJiYoaT0wKTtjb25zdCBhPXQraTttKz1hO2lmKDgmZSl7Y29uc3QgZT1vW0UrK107MD09PWUmJihvW0UtMV1ePTgpO1ErPWU7bSs9ZSphfX1pZigwPT09bSlyZXR1cm4gbjtsZXQgeT1FK207aWYoeT5vLmxlbmd0aClyZXR1cm4gbjtpZighciYmZj4wKXthLnNldChvLnN1YmFycmF5KDAsZCkscyk7YS5zZXQoWzAsMF0scytkKTthLnNldChvLnN1YmFycmF5KHAseSkscytkKzIpO3ktPWY7by5sZW5ndGgteT4zJiYoeT15KzMmLTQpO24ubGVuZ3RoPXk7cmV0dXJuIG59aWYoby5sZW5ndGgteT4zKXt5PXkrMyYtNDthLnNldChvLnN1YmFycmF5KDAseSkscyk7bi5sZW5ndGg9eTtyZXR1cm4gbn1hLnNldChvLHMpO24ubGVuZ3RoPW8ubGVuZ3RoO3JldHVybiBufWZ1bmN0aW9uIHJlYWROYW1lVGFibGUoZSl7Y29uc3QgaT0odC5zdGFydHx8MCkrZS5vZmZzZXQ7dC5wb3M9aTtjb25zdCBhPVtbXSxbXV0scz1bXSxyPWUubGVuZ3RoLG49aStyO2lmKDAhPT10LmdldFVpbnQxNigpfHxyPDYpcmV0dXJuW2Esc107Y29uc3Qgbz10LmdldFVpbnQxNigpLGc9dC5nZXRVaW50MTYoKTtsZXQgYyxoO2ZvcihjPTA7YzxvJiZ0LnBvcysxMjw9bjtjKyspe2NvbnN0IGU9e3BsYXRmb3JtOnQuZ2V0VWludDE2KCksZW5jb2Rpbmc6dC5nZXRVaW50MTYoKSxsYW5ndWFnZTp0LmdldFVpbnQxNigpLG5hbWU6dC5nZXRVaW50MTYoKSxsZW5ndGg6dC5nZXRVaW50MTYoKSxvZmZzZXQ6dC5nZXRVaW50MTYoKX07KGlzTWFjTmFtZVJlY29yZChlKXx8aXNXaW5OYW1lUmVjb3JkKGUpKSYmcy5wdXNoKGUpfWZvcihjPTAsaD1zLmxlbmd0aDtjPGg7YysrKXtjb25zdCBlPXNbY107aWYoZS5sZW5ndGg8PTApY29udGludWU7Y29uc3Qgcj1pK2crZS5vZmZzZXQ7aWYocitlLmxlbmd0aD5uKWNvbnRpbnVlO3QucG9zPXI7Y29uc3Qgbz1lLm5hbWU7aWYoZS5lbmNvZGluZyl7bGV0IGk9IiI7Zm9yKGxldCBhPTAscz1lLmxlbmd0aDthPHM7YSs9MilpKz1TdHJpbmcuZnJvbUNoYXJDb2RlKHQuZ2V0VWludDE2KCkpO2FbMV1bb109aX1lbHNlIGFbMF1bb109dC5nZXRTdHJpbmcoZS5sZW5ndGgpfXJldHVyblthLHNdfWNvbnN0IHM9WzAsMCwwLDAsMCwwLDAsMCwtMiwtMiwtMiwtMiwwLDAsLTIsLTUsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsMCwwLC0xLDAsLTEsLTEsLTEsLTEsMSwtMSwtOTk5LDAsMSwwLC0xLC0yLDAsLTEsLTIsLTEsLTEsMCwtMSwtMSwwLDAsLTk5OSwtOTk5LC0xLC0xLC0xLC0xLC0yLC05OTksLTIsLTIsLTk5OSwwLC0yLC0yLDAsMCwtMiwwLC0yLDAsMCwwLC0yLC0xLC0xLDEsMSwwLDAsLTEsLTEsLTEsLTEsLTEsLTEsLTEsMCwwLC0xLDAsLTEsLTEsMCwtOTk5LC0xLC0xLC0xLC0xLC0xLC0xLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLC0yLC05OTksLTk5OSwtOTk5LC05OTksLTk5OSwtMSwtMSwtMiwtMiwwLDAsMCwwLC0xLC0xLC05OTksLTIsLTIsMCwwLC0xLC0yLC0yLDAsMCwwLC0xLC0xLC0xLC0yXTtmdW5jdGlvbiBzYW5pdGl6ZVRUUHJvZ3JhbShlLHQpe2xldCBpLGEscixuLG8sZz1lLmRhdGEsYz0wLGg9MCxsPTA7Y29uc3QgQz1bXSxRPVtdLEU9W107bGV0IHU9dC50b29Db21wbGV4VG9Gb2xsb3dGdW5jdGlvbnMsZD0hMSxmPTAscD0wO2ZvcihsZXQgZT1nLmxlbmd0aDtjPGU7KXtjb25zdCBlPWdbYysrXTtpZig2ND09PWUpe2E9Z1tjKytdO2lmKGR8fHApYys9YTtlbHNlIGZvcihpPTA7aTxhO2krKylDLnB1c2goZ1tjKytdKX1lbHNlIGlmKDY1PT09ZSl7YT1nW2MrK107aWYoZHx8cCljKz0yKmE7ZWxzZSBmb3IoaT0wO2k8YTtpKyspe3I9Z1tjKytdO0MucHVzaChyPDw4fGdbYysrXSl9fWVsc2UgaWYoMTc2PT0oMjQ4JmUpKXthPWUtMTc2KzE7aWYoZHx8cCljKz1hO2Vsc2UgZm9yKGk9MDtpPGE7aSsrKUMucHVzaChnW2MrK10pfWVsc2UgaWYoMTg0PT0oMjQ4JmUpKXthPWUtMTg0KzE7aWYoZHx8cCljKz0yKmE7ZWxzZSBmb3IoaT0wO2k8YTtpKyspe3I9Z1tjKytdO0MucHVzaChyPDw4fGdbYysrXSl9fWVsc2UgaWYoNDMhPT1lfHx1KWlmKDQ0IT09ZXx8dSl7aWYoNDU9PT1lKWlmKGQpe2Q9ITE7aD1jfWVsc2V7bz1RLnBvcCgpO2lmKCFvKXt3YXJuKCJUVDogRU5ERiBiYWQgc3RhY2siKTt0LmhpbnRzVmFsaWQ9ITE7cmV0dXJufW49RS5wb3AoKTtnPW8uZGF0YTtjPW8uaTt0LmZ1bmN0aW9uc1N0YWNrRGVsdGFzW25dPUMubGVuZ3RoLW8uc3RhY2tUb3B9ZWxzZSBpZigxMzc9PT1lKXtpZihkfHxwKXt3YXJuKCJUVDogbmVzdGVkIElERUZzIG5vdCBhbGxvd2VkIik7dT0hMH1kPSEwO2w9Y31lbHNlIGlmKDg4PT09ZSkrK2Y7ZWxzZSBpZigyNz09PWUpcD1mO2Vsc2UgaWYoODk9PT1lKXtwPT09ZiYmKHA9MCk7LS1mfWVsc2UgaWYoMjg9PT1lJiYhZCYmIXApe2NvbnN0IGU9Qy5hdCgtMSk7ZT4wJiYoYys9ZS0xKX19ZWxzZXtpZihkfHxwKXt3YXJuKCJUVDogbmVzdGVkIEZERUZzIG5vdCBhbGxvd2VkIik7dT0hMH1kPSEwO2w9YztuPUMucG9wKCk7dC5mdW5jdGlvbnNEZWZpbmVkW25dPXtkYXRhOmcsaTpjfX1lbHNlIGlmKCFkJiYhcCl7bj1DLmF0KC0xKTtpZihpc05hTihuKSlpbmZvKCJUVDogQ0FMTCBlbXB0eSBzdGFjayAob3IgaW52YWxpZCBlbnRyeSkuIik7ZWxzZXt0LmZ1bmN0aW9uc1VzZWRbbl09ITA7aWYobiBpbiB0LmZ1bmN0aW9uc1N0YWNrRGVsdGFzKXtjb25zdCBlPUMubGVuZ3RoK3QuZnVuY3Rpb25zU3RhY2tEZWx0YXNbbl07aWYoZTwwKXt3YXJuKCJUVDogQ0FMTCBpbnZhbGlkIGZ1bmN0aW9ucyBzdGFjayBkZWx0YS4iKTt0LmhpbnRzVmFsaWQ9ITE7cmV0dXJufUMubGVuZ3RoPWV9ZWxzZSBpZihuIGluIHQuZnVuY3Rpb25zRGVmaW5lZCYmIUUuaW5jbHVkZXMobikpe1EucHVzaCh7ZGF0YTpnLGk6YyxzdGFja1RvcDpDLmxlbmd0aC0xfSk7RS5wdXNoKG4pO289dC5mdW5jdGlvbnNEZWZpbmVkW25dO2lmKCFvKXt3YXJuKCJUVDogQ0FMTCBub24tZXhpc3RlbnQgZnVuY3Rpb24iKTt0LmhpbnRzVmFsaWQ9ITE7cmV0dXJufWc9by5kYXRhO2M9by5pfX19aWYoIWQmJiFwKXtsZXQgdD0wO2U8PTE0Mj90PXNbZV06ZT49MTkyJiZlPD0yMjM/dD0tMTplPj0yMjQmJih0PS0yKTtpZihlPj0xMTMmJmU8PTExNyl7YT1DLnBvcCgpO2lzTmFOKGEpfHwodD0yKi1hKX1mb3IoO3Q8MCYmQy5sZW5ndGg+MDspe0MucG9wKCk7dCsrfWZvcig7dD4wOyl7Qy5wdXNoKE5hTik7dC0tfX19dC50b29Db21wbGV4VG9Gb2xsb3dGdW5jdGlvbnM9dTtjb25zdCBtPVtnXTtjPmcubGVuZ3RoJiZtLnB1c2gobmV3IFVpbnQ4QXJyYXkoYy1nLmxlbmd0aCkpO2lmKGw+aCl7d2FybigiVFQ6IGNvbXBsZW1lbnRpbmcgYSBtaXNzaW5nIGZ1bmN0aW9uIHRhaWwiKTttLnB1c2gobmV3IFVpbnQ4QXJyYXkoWzM0LDQ1XSkpfSFmdW5jdGlvbiBmb2xkVFRUYWJsZShlLHQpe2lmKHQubGVuZ3RoPjEpe2xldCBpLGEscz0wO2ZvcihpPTAsYT10Lmxlbmd0aDtpPGE7aSsrKXMrPXRbaV0ubGVuZ3RoO3M9cyszJi00O2NvbnN0IHI9bmV3IFVpbnQ4QXJyYXkocyk7bGV0IG49MDtmb3IoaT0wLGE9dC5sZW5ndGg7aTxhO2krKyl7ci5zZXQodFtpXSxuKTtuKz10W2ldLmxlbmd0aH1lLmRhdGE9cjtlLmxlbmd0aD1zfX0oZSxtKX1sZXQgcixuLG8sZztpZihpc1RydWVUeXBlQ29sbGVjdGlvbkZpbGUodD1uZXcgU3RyZWFtKG5ldyBVaW50OEFycmF5KHQuZ2V0Qnl0ZXMoKSkpKSl7Y29uc3QgZT1mdW5jdGlvbiByZWFkVHJ1ZVR5cGVDb2xsZWN0aW9uRGF0YShlLHQpe2NvbnN0e251bUZvbnRzOmksb2Zmc2V0VGFibGU6YX09ZnVuY3Rpb24gcmVhZFRydWVUeXBlQ29sbGVjdGlvbkhlYWRlcihlKXtjb25zdCB0PWUuZ2V0U3RyaW5nKDQpO2Fzc2VydCgidHRjZiI9PT10LCJNdXN0IGJlIGEgVHJ1ZVR5cGUgQ29sbGVjdGlvbiBmb250LiIpO2NvbnN0IGk9ZS5nZXRVaW50MTYoKSxhPWUuZ2V0VWludDE2KCkscz1lLmdldEludDMyKCk+Pj4wLHI9W107Zm9yKGxldCB0PTA7dDxzO3QrKylyLnB1c2goZS5nZXRJbnQzMigpPj4+MCk7Y29uc3Qgbj17dHRjVGFnOnQsbWFqb3JWZXJzaW9uOmksbWlub3JWZXJzaW9uOmEsbnVtRm9udHM6cyxvZmZzZXRUYWJsZTpyfTtzd2l0Y2goaSl7Y2FzZSAxOnJldHVybiBuO2Nhc2UgMjpuLmRzaWdUYWc9ZS5nZXRJbnQzMigpPj4+MDtuLmRzaWdMZW5ndGg9ZS5nZXRJbnQzMigpPj4+MDtuLmRzaWdPZmZzZXQ9ZS5nZXRJbnQzMigpPj4+MDtyZXR1cm4gbn10aHJvdyBuZXcgRm9ybWF0RXJyb3IoYEludmFsaWQgVHJ1ZVR5cGUgQ29sbGVjdGlvbiBtYWpvclZlcnNpb246ICR7aX0uYCl9KGUpLHM9dC5zcGxpdCgiKyIpO2xldCByO2ZvcihsZXQgbj0wO248aTtuKyspe2UucG9zPShlLnN0YXJ0fHwwKSthW25dO2NvbnN0IGk9cmVhZE9wZW5UeXBlSGVhZGVyKGUpLG89cmVhZFRhYmxlcyhlLGkubnVtVGFibGVzKTtpZighby5uYW1lKXRocm93IG5ldyBGb3JtYXRFcnJvcignVHJ1ZVR5cGUgQ29sbGVjdGlvbiBmb250IG11c3QgY29udGFpbiBhICJuYW1lIiB0YWJsZS4nKTtjb25zdFtnXT1yZWFkTmFtZVRhYmxlKG8ubmFtZSk7Zm9yKGxldCBlPTAsYT1nLmxlbmd0aDtlPGE7ZSsrKWZvcihsZXQgYT0wLG49Z1tlXS5sZW5ndGg7YTxuO2ErKyl7Y29uc3Qgbj1nW2VdW2FdPy5yZXBsYWNlQWxsKC9ccy9nLCIiKTtpZihuKXtpZihuPT09dClyZXR1cm57aGVhZGVyOmksdGFibGVzOm99O2lmKCEocy5sZW5ndGg8MikpZm9yKGNvbnN0IGUgb2YgcyluPT09ZSYmKHI9e25hbWU6ZSxoZWFkZXI6aSx0YWJsZXM6b30pfX19aWYocil7d2FybihgVHJ1ZVR5cGUgQ29sbGVjdGlvbiBkb2VzIG5vdCBjb250YWluICIke3R9IiBmb250LCBmYWxsaW5nIGJhY2sgdG8gIiR7ci5uYW1lfSIgZm9udCBpbnN0ZWFkLmApO3JldHVybntoZWFkZXI6ci5oZWFkZXIsdGFibGVzOnIudGFibGVzfX10aHJvdyBuZXcgRm9ybWF0RXJyb3IoYFRydWVUeXBlIENvbGxlY3Rpb24gZG9lcyBub3QgY29udGFpbiAiJHt0fSIgZm9udC5gKX0odCx0aGlzLm5hbWUpO3I9ZS5oZWFkZXI7bj1lLnRhYmxlc31lbHNle3I9cmVhZE9wZW5UeXBlSGVhZGVyKHQpO249cmVhZFRhYmxlcyh0LHIubnVtVGFibGVzKX1jb25zdCBjPSFuWyJDRkYgIl07aWYoYyl7aWYoIW4ubG9jYSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoJ1JlcXVpcmVkICJsb2NhIiB0YWJsZSBpcyBub3QgZm91bmQnKTtpZighbi5nbHlmKXt3YXJuKCdSZXF1aXJlZCAiZ2x5ZiIgdGFibGUgaXMgbm90IGZvdW5kIC0tIHRyeWluZyB0byByZWNvdmVyLicpO24uZ2x5Zj17dGFnOiJnbHlmIixkYXRhOm5ldyBVaW50OEFycmF5KDApfX10aGlzLmlzT3BlblR5cGU9ITF9ZWxzZXtjb25zdCB0PWkuY29tcG9zaXRlJiYoaS5jaWRUb0dpZE1hcD8ubGVuZ3RoPjB8fCEoaS5jTWFwIGluc3RhbmNlb2YgSWRlbnRpdHlDTWFwKSk7aWYoIk9UVE8iPT09ci52ZXJzaW9uJiYhdHx8IW4uaGVhZHx8IW4uaGhlYXx8IW4ubWF4cHx8IW4ucG9zdCl7Zz1uZXcgU3RyZWFtKG5bIkNGRiAiXS5kYXRhKTtvPW5ldyBDRkZGb250KGcsaSk7YWRqdXN0V2lkdGhzKGkpO3JldHVybiB0aGlzLmNvbnZlcnQoZSxvLGkpfWRlbGV0ZSBuLmdseWY7ZGVsZXRlIG4ubG9jYTtkZWxldGUgbi5mcGdtO2RlbGV0ZSBuLnByZXA7ZGVsZXRlIG5bImN2dCAiXTt0aGlzLmlzT3BlblR5cGU9ITB9aWYoIW4ubWF4cCl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoJ1JlcXVpcmVkICJtYXhwIiB0YWJsZSBpcyBub3QgZm91bmQnKTt0LnBvcz0odC5zdGFydHx8MCkrbi5tYXhwLm9mZnNldDtsZXQgaD10LmdldEludDMyKCk7Y29uc3QgbD10LmdldFVpbnQxNigpO2lmKDY1NTM2IT09aCYmMjA0ODAhPT1oKXtpZig2PT09bi5tYXhwLmxlbmd0aCloPTIwNDgwO2Vsc2V7aWYoIShuLm1heHAubGVuZ3RoPj0zMikpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCcibWF4cCIgdGFibGUgaGFzIGEgd3JvbmcgdmVyc2lvbiBudW1iZXInKTtoPTY1NTM2fSFmdW5jdGlvbiB3cml0ZVVpbnQzMihlLHQsaSl7ZVt0KzNdPTI1NSZpO2VbdCsyXT1pPj4+ODtlW3QrMV09aT4+PjE2O2VbdF09aT4+PjI0fShuLm1heHAuZGF0YSwwLGgpfWlmKGkuc2NhbGVGYWN0b3JzPy5sZW5ndGg9PT1sJiZjKXtjb25zdHtzY2FsZUZhY3RvcnM6ZX09aSx0PWludDE2KG4uaGVhZC5kYXRhWzUwXSxuLmhlYWQuZGF0YVs1MV0pLGE9bmV3IEdseWZUYWJsZSh7Z2x5ZlRhYmxlOm4uZ2x5Zi5kYXRhLGlzR2x5cGhMb2NhdGlvbnNMb25nOnQsbG9jYVRhYmxlOm4ubG9jYS5kYXRhLG51bUdseXBoczpsfSk7YS5zY2FsZShlKTtjb25zdHtnbHlmOnMsbG9jYTpyLGlzTG9jYXRpb25Mb25nOm99PWEud3JpdGUoKTtuLmdseWYuZGF0YT1zO24ubG9jYS5kYXRhPXI7aWYobyE9PSEhdCl7bi5oZWFkLmRhdGFbNTBdPTA7bi5oZWFkLmRhdGFbNTFdPW8/MTowfWNvbnN0IGc9bi5obXR4LmRhdGE7Zm9yKGxldCB0PTA7dDxsO3QrKyl7Y29uc3QgaT00KnQsYT1NYXRoLnJvdW5kKGVbdF0qaW50MTYoZ1tpXSxnW2krMV0pKTtnW2ldPWE+PjgmMjU1O2dbaSsxXT0yNTUmYTt3cml0ZVNpZ25lZEludDE2KGcsaSsyLE1hdGgucm91bmQoZVt0XSpzaWduZWRJbnQxNihnW2krMl0sZ1tpKzNdKSkpfX1sZXQgQz1sKzEsUT0hMDtpZihDPjY1NTM1KXtRPSExO0M9bDt3YXJuKCJOb3QgZW5vdWdoIHNwYWNlIGluIGdseWZzIHRvIGR1cGxpY2F0ZSBmaXJzdCBnbHlwaC4iKX1sZXQgRT0wLHU9MDtpZihoPj02NTUzNiYmbi5tYXhwLmxlbmd0aD49MzIpe3QucG9zKz04O2lmKHQuZ2V0VWludDE2KCk+Mil7bi5tYXhwLmRhdGFbMTRdPTA7bi5tYXhwLmRhdGFbMTVdPTJ9dC5wb3MrPTQ7RT10LmdldFVpbnQxNigpO3QucG9zKz00O3U9dC5nZXRVaW50MTYoKX1uLm1heHAuZGF0YVs0XT1DPj44O24ubWF4cC5kYXRhWzVdPTI1NSZDO2NvbnN0IGQ9ZnVuY3Rpb24gc2FuaXRpemVUVFByb2dyYW1zKGUsdCxpLGEpe2NvbnN0IHM9e2Z1bmN0aW9uc0RlZmluZWQ6W10sZnVuY3Rpb25zVXNlZDpbXSxmdW5jdGlvbnNTdGFja0RlbHRhczpbXSx0b29Db21wbGV4VG9Gb2xsb3dGdW5jdGlvbnM6ITEsaGludHNWYWxpZDohMH07ZSYmc2FuaXRpemVUVFByb2dyYW0oZSxzKTt0JiZzYW5pdGl6ZVRUUHJvZ3JhbSh0LHMpO2UmJmZ1bmN0aW9uIGNoZWNrSW52YWxpZEZ1bmN0aW9ucyhlLHQpe2lmKCFlLnRvb0NvbXBsZXhUb0ZvbGxvd0Z1bmN0aW9ucylpZihlLmZ1bmN0aW9uc0RlZmluZWQubGVuZ3RoPnQpe3dhcm4oIlRUOiBtb3JlIGZ1bmN0aW9ucyBkZWZpbmVkIHRoYW4gZXhwZWN0ZWQiKTtlLmhpbnRzVmFsaWQ9ITF9ZWxzZSBmb3IobGV0IGk9MCxhPWUuZnVuY3Rpb25zVXNlZC5sZW5ndGg7aTxhO2krKyl7aWYoaT50KXt3YXJuKCJUVDogaW52YWxpZCBmdW5jdGlvbiBpZDogIitpKTtlLmhpbnRzVmFsaWQ9ITE7cmV0dXJufWlmKGUuZnVuY3Rpb25zVXNlZFtpXSYmIWUuZnVuY3Rpb25zRGVmaW5lZFtpXSl7d2FybigiVFQ6IHVuZGVmaW5lZCBmdW5jdGlvbjogIitpKTtlLmhpbnRzVmFsaWQ9ITE7cmV0dXJufX19KHMsYSk7aWYoaSYmMSZpLmxlbmd0aCl7Y29uc3QgZT1uZXcgVWludDhBcnJheShpLmxlbmd0aCsxKTtlLnNldChpLmRhdGEpO2kuZGF0YT1lfXJldHVybiBzLmhpbnRzVmFsaWR9KG4uZnBnbSxuLnByZXAsblsiY3Z0ICJdLEUpO2lmKCFkKXtkZWxldGUgbi5mcGdtO2RlbGV0ZSBuLnByZXA7ZGVsZXRlIG5bImN2dCAiXX0hZnVuY3Rpb24gc2FuaXRpemVNZXRyaWNzKGUsdCxpLGEscyxyKXtpZighdCl7aSYmKGkuZGF0YT1udWxsKTtyZXR1cm59ZS5wb3M9KGUuc3RhcnR8fDApK3Qub2Zmc2V0O2UucG9zKz00O2UucG9zKz0yO2UucG9zKz0yO2UucG9zKz0yO2UucG9zKz0yO2UucG9zKz0yO2UucG9zKz0yO2UucG9zKz0yO2UucG9zKz0yO2UucG9zKz0yO2NvbnN0IG49ZS5nZXRVaW50MTYoKTtlLnBvcys9ODtlLnBvcys9MjtsZXQgbz1lLmdldFVpbnQxNigpO2lmKDAhPT1uKXtpZighKDImaW50MTYoYS5kYXRhWzQ0XSxhLmRhdGFbNDVdKSkpe3QuZGF0YVsyMl09MDt0LmRhdGFbMjNdPTB9fWlmKG8+cyl7aW5mbyhgVGhlIG51bU9mTWV0cmljcyAoJHtvfSkgc2hvdWxkIG5vdCBiZSBncmVhdGVyIHRoYW4gdGhlIG51bUdseXBocyAoJHtzfSkuYCk7bz1zO3QuZGF0YVszNF09KDY1MjgwJm8pPj44O3QuZGF0YVszNV09MjU1Jm99Y29uc3QgZz1zLW8tKGkubGVuZ3RoLTQqbz4+MSk7aWYoZz4wKXtjb25zdCBlPW5ldyBVaW50OEFycmF5KGkubGVuZ3RoKzIqZyk7ZS5zZXQoaS5kYXRhKTtpZihyKXtlW2kubGVuZ3RoXT1pLmRhdGFbMl07ZVtpLmxlbmd0aCsxXT1pLmRhdGFbM119aS5kYXRhPWV9fSh0LG4uaGhlYSxuLmhtdHgsbi5oZWFkLEMsUSk7aWYoIW4uaGVhZCl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoJ1JlcXVpcmVkICJoZWFkIiB0YWJsZSBpcyBub3QgZm91bmQnKTshZnVuY3Rpb24gc2FuaXRpemVIZWFkKGUsdCxpKXtjb25zdCBhPWUuZGF0YSxzPWZ1bmN0aW9uIGludDMyKGUsdCxpLGEpe3JldHVybihlPDwyNCkrKHQ8PDE2KSsoaTw8OCkrYX0oYVswXSxhWzFdLGFbMl0sYVszXSk7aWYocz4+MTYhPTEpe2luZm8oIkF0dGVtcHRpbmcgdG8gZml4IGludmFsaWQgdmVyc2lvbiBpbiBoZWFkIHRhYmxlOiAiK3MpO2FbMF09MDthWzFdPTE7YVsyXT0wO2FbM109MH1jb25zdCByPWludDE2KGFbNTBdLGFbNTFdKTtpZihyPDB8fHI+MSl7aW5mbygiQXR0ZW1wdGluZyB0byBmaXggaW52YWxpZCBpbmRleFRvTG9jRm9ybWF0IGluIGhlYWQgdGFibGU6ICIrcik7Y29uc3QgZT10KzE7aWYoaT09PWU8PDEpe2FbNTBdPTA7YVs1MV09MH1lbHNle2lmKGkhPT1lPDwyKXRocm93IG5ldyBGb3JtYXRFcnJvcigiQ291bGQgbm90IGZpeCBpbmRleFRvTG9jRm9ybWF0OiAiK3IpO2FbNTBdPTA7YVs1MV09MX19fShuLmhlYWQsbCxjP24ubG9jYS5sZW5ndGg6MCk7bGV0IGY9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihjKXtjb25zdCBlPWludDE2KG4uaGVhZC5kYXRhWzUwXSxuLmhlYWQuZGF0YVs1MV0pLHQ9ZnVuY3Rpb24gc2FuaXRpemVHbHlwaExvY2F0aW9ucyhlLHQsaSxhLHMscixuKXtsZXQgbyxnLGM7aWYoYSl7bz00O2c9ZnVuY3Rpb24gZm9udEl0ZW1EZWNvZGVMb25nKGUsdCl7cmV0dXJuIGVbdF08PDI0fGVbdCsxXTw8MTZ8ZVt0KzJdPDw4fGVbdCszXX07Yz1mdW5jdGlvbiBmb250SXRlbUVuY29kZUxvbmcoZSx0LGkpe2VbdF09aT4+PjI0JjI1NTtlW3QrMV09aT4+MTYmMjU1O2VbdCsyXT1pPj44JjI1NTtlW3QrM109MjU1Jml9fWVsc2V7bz0yO2c9ZnVuY3Rpb24gZm9udEl0ZW1EZWNvZGUoZSx0KXtyZXR1cm4gZVt0XTw8OXxlW3QrMV08PDF9O2M9ZnVuY3Rpb24gZm9udEl0ZW1FbmNvZGUoZSx0LGkpe2VbdF09aT4+OSYyNTU7ZVt0KzFdPWk+PjEmMjU1fX1jb25zdCBoPXI/aSsxOmksbD1vKigxK2gpLEM9bmV3IFVpbnQ4QXJyYXkobCk7Qy5zZXQoZS5kYXRhLnN1YmFycmF5KDAsbCkpO2UuZGF0YT1DO2NvbnN0IFE9dC5kYXRhLEU9US5sZW5ndGgsdT1uZXcgVWludDhBcnJheShFKTtsZXQgZCxmO2NvbnN0IHA9W107Zm9yKGQ9MCxmPTA7ZDxpKzE7ZCsrLGYrPW8pe2xldCBlPWcoQyxmKTtlPkUmJihlPUUpO3AucHVzaCh7aW5kZXg6ZCxvZmZzZXQ6ZSxlbmRPZmZzZXQ6MH0pfXAuc29ydCgoKGUsdCk9PmUub2Zmc2V0LXQub2Zmc2V0KSk7Zm9yKGQ9MDtkPGk7ZCsrKXBbZF0uZW5kT2Zmc2V0PXBbZCsxXS5vZmZzZXQ7cC5zb3J0KCgoZSx0KT0+ZS5pbmRleC10LmluZGV4KSk7Zm9yKGQ9MDtkPGk7ZCsrKXtjb25zdHtvZmZzZXQ6ZSxlbmRPZmZzZXQ6dH09cFtkXTtpZigwIT09ZXx8MCE9PXQpYnJlYWs7Y29uc3QgaT1wW2QrMV0ub2Zmc2V0O2lmKDAhPT1pKXtwW2RdLmVuZE9mZnNldD1pO2JyZWFrfX1jb25zdCBtPXAuYXQoLTIpOzAhPT1tLm9mZnNldCYmMD09PW0uZW5kT2Zmc2V0JiYobS5lbmRPZmZzZXQ9RSk7Y29uc3QgeT1PYmplY3QuY3JlYXRlKG51bGwpO2xldCB3PTA7YyhDLDAsdyk7Zm9yKGQ9MCxmPW87ZDxpO2QrKyxmKz1vKXtjb25zdCBlPXNhbml0aXplR2x5cGgoUSxwW2RdLm9mZnNldCxwW2RdLmVuZE9mZnNldCx1LHcscyksdD1lLmxlbmd0aDswPT09dCYmKHlbZF09ITApO2Uuc2l6ZU9mSW5zdHJ1Y3Rpb25zPm4mJihuPWUuc2l6ZU9mSW5zdHJ1Y3Rpb25zKTt3Kz10O2MoQyxmLHcpfWlmKDA9PT13KXtjb25zdCBlPW5ldyBVaW50OEFycmF5KFswLDEsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsNDksMF0pO2ZvcihkPTAsZj1vO2Q8aDtkKyssZis9byljKEMsZixlLmxlbmd0aCk7dC5kYXRhPWV9ZWxzZSBpZihyKXtjb25zdCBpPWcoQyxvKTtpZih1Lmxlbmd0aD5pK3cpdC5kYXRhPXUuc3ViYXJyYXkoMCxpK3cpO2Vsc2V7dC5kYXRhPW5ldyBVaW50OEFycmF5KGkrdyk7dC5kYXRhLnNldCh1LnN1YmFycmF5KDAsdykpfXQuZGF0YS5zZXQodS5zdWJhcnJheSgwLGkpLHcpO2MoZS5kYXRhLEMubGVuZ3RoLW8sdytpKX1lbHNlIHQuZGF0YT11LnN1YmFycmF5KDAsdyk7cmV0dXJue21pc3NpbmdHbHlwaHM6eSxtYXhTaXplT2ZJbnN0cnVjdGlvbnM6bn19KG4ubG9jYSxuLmdseWYsbCxlLGQsUSx1KTtmPXQubWlzc2luZ0dseXBocztpZihoPj02NTUzNiYmbi5tYXhwLmxlbmd0aD49MzIpe24ubWF4cC5kYXRhWzI2XT10Lm1heFNpemVPZkluc3RydWN0aW9ucz4+ODtuLm1heHAuZGF0YVsyN109MjU1JnQubWF4U2l6ZU9mSW5zdHJ1Y3Rpb25zfX1pZighbi5oaGVhKXRocm93IG5ldyBGb3JtYXRFcnJvcignUmVxdWlyZWQgImhoZWEiIHRhYmxlIGlzIG5vdCBmb3VuZCcpO2lmKDA9PT1uLmhoZWEuZGF0YVsxMF0mJjA9PT1uLmhoZWEuZGF0YVsxMV0pe24uaGhlYS5kYXRhWzEwXT0yNTU7bi5oaGVhLmRhdGFbMTFdPTI1NX1jb25zdCBwPXt1bml0c1BlckVtOmludDE2KG4uaGVhZC5kYXRhWzE4XSxuLmhlYWQuZGF0YVsxOV0pLHlNYXg6c2lnbmVkSW50MTYobi5oZWFkLmRhdGFbNDJdLG4uaGVhZC5kYXRhWzQzXSkseU1pbjpzaWduZWRJbnQxNihuLmhlYWQuZGF0YVszOF0sbi5oZWFkLmRhdGFbMzldKSxhc2NlbnQ6c2lnbmVkSW50MTYobi5oaGVhLmRhdGFbNF0sbi5oaGVhLmRhdGFbNV0pLGRlc2NlbnQ6c2lnbmVkSW50MTYobi5oaGVhLmRhdGFbNl0sbi5oaGVhLmRhdGFbN10pLGxpbmVHYXA6c2lnbmVkSW50MTYobi5oaGVhLmRhdGFbOF0sbi5oaGVhLmRhdGFbOV0pfTt0aGlzLmFzY2VudD1wLmFzY2VudC9wLnVuaXRzUGVyRW07dGhpcy5kZXNjZW50PXAuZGVzY2VudC9wLnVuaXRzUGVyRW07dGhpcy5saW5lR2FwPXAubGluZUdhcC9wLnVuaXRzUGVyRW07aWYodGhpcy5jc3NGb250SW5mbz8ubGluZUhlaWdodCl7dGhpcy5saW5lSGVpZ2h0PXRoaXMuY3NzRm9udEluZm8ubWV0cmljcy5saW5lSGVpZ2h0O3RoaXMubGluZUdhcD10aGlzLmNzc0ZvbnRJbmZvLm1ldHJpY3MubGluZUdhcH1lbHNlIHRoaXMubGluZUhlaWdodD10aGlzLmFzY2VudC10aGlzLmRlc2NlbnQrdGhpcy5saW5lR2FwO24ucG9zdCYmZnVuY3Rpb24gcmVhZFBvc3RTY3JpcHRUYWJsZShlLGksYSl7Y29uc3Qgcz0odC5zdGFydHx8MCkrZS5vZmZzZXQ7dC5wb3M9cztjb25zdCByPXMrZS5sZW5ndGgsbj10LmdldEludDMyKCk7dC5za2lwKDI4KTtsZXQgbyxnLGM9ITA7c3dpdGNoKG4pe2Nhc2UgNjU1MzY6bz1PaTticmVhaztjYXNlIDEzMTA3Mjpjb25zdCBlPXQuZ2V0VWludDE2KCk7aWYoZSE9PWEpe2M9ITE7YnJlYWt9Y29uc3Qgcz1bXTtmb3IoZz0wO2c8ZTsrK2cpe2NvbnN0IGU9dC5nZXRVaW50MTYoKTtpZihlPj0zMjc2OCl7Yz0hMTticmVha31zLnB1c2goZSl9aWYoIWMpYnJlYWs7Y29uc3QgaD1bXSxsPVtdO2Zvcig7dC5wb3M8cjspe2NvbnN0IGU9dC5nZXRCeXRlKCk7bC5sZW5ndGg9ZTtmb3IoZz0wO2c8ZTsrK2cpbFtnXT1TdHJpbmcuZnJvbUNoYXJDb2RlKHQuZ2V0Qnl0ZSgpKTtoLnB1c2gobC5qb2luKCIiKSl9bz1bXTtmb3IoZz0wO2c8ZTsrK2cpe2NvbnN0IGU9c1tnXTtlPDI1OD9vLnB1c2goT2lbZV0pOm8ucHVzaChoW2UtMjU4XSl9YnJlYWs7Y2FzZSAxOTY2MDg6YnJlYWs7ZGVmYXVsdDp3YXJuKCJVbmtub3duL3Vuc3VwcG9ydGVkIHBvc3QgdGFibGUgdmVyc2lvbiAiK24pO2M9ITE7aS5kZWZhdWx0RW5jb2RpbmcmJihvPWkuZGVmYXVsdEVuY29kaW5nKX1pLmdseXBoTmFtZXM9bztyZXR1cm4gY30obi5wb3N0LGksbCk7bi5wb3N0PXt0YWc6InBvc3QiLGRhdGE6Y3JlYXRlUG9zdFRhYmxlKGkpfTtjb25zdCBtPVtdO2Z1bmN0aW9uIGhhc0dseXBoKGUpe3JldHVybiFmW2VdfWlmKGkuY29tcG9zaXRlKXtjb25zdCBlPWkuY2lkVG9HaWRNYXB8fFtdLHQ9MD09PWUubGVuZ3RoO2kuY01hcC5mb3JFYWNoKChmdW5jdGlvbihpLGEpeyJzdHJpbmciPT10eXBlb2YgYSYmKGE9Y29udmVydENpZFN0cmluZyhpLGEsITApKTtpZihhPjY1NTM1KXRocm93IG5ldyBGb3JtYXRFcnJvcigiTWF4IHNpemUgb2YgQ0lEIGlzIDY1LDUzNSIpO2xldCBzPS0xO3Q/cz1hOnZvaWQgMCE9PWVbYV0mJihzPWVbYV0pO3M+PTAmJnM8bCYmaGFzR2x5cGgocykmJihtW2ldPXMpfSkpfWVsc2V7Y29uc3QgZT1mdW5jdGlvbiByZWFkQ21hcFRhYmxlKGUsdCxpLGEpe2lmKCFlKXt3YXJuKCJObyBjbWFwIHRhYmxlIGF2YWlsYWJsZS4iKTtyZXR1cm57cGxhdGZvcm1JZDotMSxlbmNvZGluZ0lkOi0xLG1hcHBpbmdzOltdLGhhc1Nob3J0Q21hcDohMX19bGV0IHMscj0odC5zdGFydHx8MCkrZS5vZmZzZXQ7dC5wb3M9cjt0LnNraXAoMik7Y29uc3Qgbj10LmdldFVpbnQxNigpO2xldCBvLGc9ITE7Zm9yKGxldCBlPTA7ZTxuO2UrKyl7Y29uc3Qgcz10LmdldFVpbnQxNigpLHI9dC5nZXRVaW50MTYoKSxjPXQuZ2V0SW50MzIoKT4+PjA7bGV0IGg9ITE7aWYobz8ucGxhdGZvcm1JZCE9PXN8fG8/LmVuY29kaW5nSWQhPT1yKXtpZigwIT09c3x8MCE9PXImJjEhPT1yJiYzIT09cilpZigxPT09cyYmMD09PXIpaD0hMDtlbHNlIGlmKDMhPT1zfHwxIT09cnx8IWEmJm8pe2lmKGkmJjM9PT1zJiYwPT09cil7aD0hMDtsZXQgaT0hMDtpZihlPG4tMSl7Y29uc3QgZT10LnBlZWtCeXRlcygyKTtpbnQxNihlWzBdLGVbMV0pPHMmJihpPSExKX1pJiYoZz0hMCl9fWVsc2V7aD0hMDtpfHwoZz0hMCl9ZWxzZSBoPSEwO2gmJihvPXtwbGF0Zm9ybUlkOnMsZW5jb2RpbmdJZDpyLG9mZnNldDpjfSk7aWYoZylicmVha319byYmKHQucG9zPXIrby5vZmZzZXQpO2lmKCFvfHwtMT09PXQucGVla0J5dGUoKSl7d2FybigiQ291bGQgbm90IGZpbmQgYSBwcmVmZXJyZWQgY21hcCB0YWJsZS4iKTtyZXR1cm57cGxhdGZvcm1JZDotMSxlbmNvZGluZ0lkOi0xLG1hcHBpbmdzOltdLGhhc1Nob3J0Q21hcDohMX19Y29uc3QgYz10LmdldFVpbnQxNigpO2xldCBoPSExO2NvbnN0IGw9W107bGV0IEMsUTtpZigwPT09Yyl7dC5za2lwKDQpO2ZvcihDPTA7QzwyNTY7QysrKXtjb25zdCBlPXQuZ2V0Qnl0ZSgpO2UmJmwucHVzaCh7Y2hhckNvZGU6QyxnbHlwaElkOmV9KX1oPSEwfWVsc2UgaWYoMj09PWMpe3Quc2tpcCg0KTtjb25zdCBlPVtdO2xldCBpPTA7Zm9yKGxldCBhPTA7YTwyNTY7YSsrKXtjb25zdCBhPXQuZ2V0VWludDE2KCk+PjM7ZS5wdXNoKGEpO2k9TWF0aC5tYXgoYSxpKX1jb25zdCBhPVtdO2ZvcihsZXQgZT0wO2U8PWk7ZSsrKWEucHVzaCh7Zmlyc3RDb2RlOnQuZ2V0VWludDE2KCksZW50cnlDb3VudDp0LmdldFVpbnQxNigpLGlkRGVsdGE6c2lnbmVkSW50MTYodC5nZXRCeXRlKCksdC5nZXRCeXRlKCkpLGlkUmFuZ2VQb3M6dC5wb3MrdC5nZXRVaW50MTYoKX0pO2ZvcihsZXQgaT0wO2k8MjU2O2krKylpZigwPT09ZVtpXSl7dC5wb3M9YVswXS5pZFJhbmdlUG9zKzIqaTtRPXQuZ2V0VWludDE2KCk7bC5wdXNoKHtjaGFyQ29kZTppLGdseXBoSWQ6UX0pfWVsc2V7Y29uc3Qgcz1hW2VbaV1dO2ZvcihDPTA7QzxzLmVudHJ5Q291bnQ7QysrKXtjb25zdCBlPShpPDw4KStDK3MuZmlyc3RDb2RlO3QucG9zPXMuaWRSYW5nZVBvcysyKkM7UT10LmdldFVpbnQxNigpOzAhPT1RJiYoUT0oUStzLmlkRGVsdGEpJTY1NTM2KTtsLnB1c2goe2NoYXJDb2RlOmUsZ2x5cGhJZDpRfSl9fX1lbHNlIGlmKDQ9PT1jKXt0LnNraXAoNCk7Y29uc3QgZT10LmdldFVpbnQxNigpPj4xO3Quc2tpcCg2KTtjb25zdCBpPVtdO2xldCBhO2ZvcihhPTA7YTxlO2ErKylpLnB1c2goe2VuZDp0LmdldFVpbnQxNigpfSk7dC5za2lwKDIpO2ZvcihhPTA7YTxlO2ErKylpW2FdLnN0YXJ0PXQuZ2V0VWludDE2KCk7Zm9yKGE9MDthPGU7YSsrKWlbYV0uZGVsdGE9dC5nZXRVaW50MTYoKTtsZXQgbixvPTA7Zm9yKGE9MDthPGU7YSsrKXtzPWlbYV07Y29uc3Qgcj10LmdldFVpbnQxNigpO2lmKHIpe249KHI+PjEpLShlLWEpO3Mub2Zmc2V0SW5kZXg9bjtvPU1hdGgubWF4KG8sbitzLmVuZC1zLnN0YXJ0KzEpfWVsc2Ugcy5vZmZzZXRJbmRleD0tMX1jb25zdCBnPVtdO2ZvcihDPTA7QzxvO0MrKylnLnB1c2godC5nZXRVaW50MTYoKSk7Zm9yKGE9MDthPGU7YSsrKXtzPWlbYV07cj1zLnN0YXJ0O2NvbnN0IGU9cy5lbmQsdD1zLmRlbHRhO249cy5vZmZzZXRJbmRleDtmb3IoQz1yO0M8PWU7QysrKWlmKDY1NTM1IT09Qyl7UT1uPDA/QzpnW24rQy1yXTtRPVErdCY2NTUzNTtsLnB1c2goe2NoYXJDb2RlOkMsZ2x5cGhJZDpRfSl9fX1lbHNlIGlmKDY9PT1jKXt0LnNraXAoNCk7Y29uc3QgZT10LmdldFVpbnQxNigpLGk9dC5nZXRVaW50MTYoKTtmb3IoQz0wO0M8aTtDKyspe1E9dC5nZXRVaW50MTYoKTtjb25zdCBpPWUrQztsLnB1c2goe2NoYXJDb2RlOmksZ2x5cGhJZDpRfSl9fWVsc2V7aWYoMTIhPT1jKXt3YXJuKCJjbWFwIHRhYmxlIGhhcyB1bnN1cHBvcnRlZCBmb3JtYXQ6ICIrYyk7cmV0dXJue3BsYXRmb3JtSWQ6LTEsZW5jb2RpbmdJZDotMSxtYXBwaW5nczpbXSxoYXNTaG9ydENtYXA6ITF9fXt0LnNraXAoMTApO2NvbnN0IGU9dC5nZXRJbnQzMigpPj4+MDtmb3IoQz0wO0M8ZTtDKyspe2NvbnN0IGU9dC5nZXRJbnQzMigpPj4+MCxpPXQuZ2V0SW50MzIoKT4+PjA7bGV0IGE9dC5nZXRJbnQzMigpPj4+MDtmb3IobGV0IHQ9ZTt0PD1pO3QrKylsLnB1c2goe2NoYXJDb2RlOnQsZ2x5cGhJZDphKyt9KX19fWwuc29ydCgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5jaGFyQ29kZS10LmNoYXJDb2RlfSkpO2ZvcihsZXQgZT0xO2U8bC5sZW5ndGg7ZSsrKWlmKGxbZS0xXS5jaGFyQ29kZT09PWxbZV0uY2hhckNvZGUpe2wuc3BsaWNlKGUsMSk7ZS0tfXJldHVybntwbGF0Zm9ybUlkOm8ucGxhdGZvcm1JZCxlbmNvZGluZ0lkOm8uZW5jb2RpbmdJZCxtYXBwaW5nczpsLGhhc1Nob3J0Q21hcDpofX0obi5jbWFwLHQsdGhpcy5pc1N5bWJvbGljRm9udCxpLmhhc0VuY29kaW5nKSxhPWUucGxhdGZvcm1JZCxzPWUuZW5jb2RpbmdJZCxyPWUubWFwcGluZ3M7bGV0IG89W10sZz0hMTshaS5oYXNFbmNvZGluZ3x8Ik1hY1JvbWFuRW5jb2RpbmciIT09aS5iYXNlRW5jb2RpbmdOYW1lJiYiV2luQW5zaUVuY29kaW5nIiE9PWkuYmFzZUVuY29kaW5nTmFtZXx8KG89Z2V0RW5jb2RpbmcoaS5iYXNlRW5jb2RpbmdOYW1lKSk7aWYoaS5oYXNFbmNvZGluZyYmIXRoaXMuaXNTeW1ib2xpY0ZvbnQmJigzPT09YSYmMT09PXN8fDE9PT1hJiYwPT09cykpe2NvbnN0IGU9TmkoKTtmb3IobGV0IHQ9MDt0PDI1Njt0Kyspe2xldCBuO249dm9pZCAwIT09dGhpcy5kaWZmZXJlbmNlc1t0XT90aGlzLmRpZmZlcmVuY2VzW3RdOm8ubGVuZ3RoJiYiIiE9PW9bdF0/b1t0XTpmaVt0XTtpZighbiljb250aW51ZTtjb25zdCBnPXJlY292ZXJHbHlwaE5hbWUobixlKTtsZXQgYzszPT09YSYmMT09PXM/Yz1lW2ddOjE9PT1hJiYwPT09cyYmKGM9ZGkuaW5kZXhPZihnKSk7aWYodm9pZCAwPT09Yyl7aWYoIWkuZ2x5cGhOYW1lcyYmaS5oYXNJbmNsdWRlZFRvVW5pY29kZU1hcCYmISh0aGlzLnRvVW5pY29kZSBpbnN0YW5jZW9mIElkZW50aXR5VG9Vbmljb2RlTWFwKSl7Y29uc3QgZT10aGlzLnRvVW5pY29kZS5nZXQodCk7ZSYmKGM9ZS5jb2RlUG9pbnRBdCgwKSl9aWYodm9pZCAwPT09Yyljb250aW51ZX1mb3IoY29uc3QgZSBvZiByKWlmKGUuY2hhckNvZGU9PT1jKXttW3RdPWUuZ2x5cGhJZDticmVha319fWVsc2UgaWYoMD09PWEpe2Zvcihjb25zdCBlIG9mIHIpbVtlLmNoYXJDb2RlXT1lLmdseXBoSWQ7Zz0hMH1lbHNlIGlmKDM9PT1hJiYwPT09cylmb3IoY29uc3QgZSBvZiByKXtsZXQgdD1lLmNoYXJDb2RlO3Q+PTYxNDQwJiZ0PD02MTY5NSYmKHQmPTI1NSk7bVt0XT1lLmdseXBoSWR9ZWxzZSBmb3IoY29uc3QgZSBvZiByKW1bZS5jaGFyQ29kZV09ZS5nbHlwaElkO2lmKGkuZ2x5cGhOYW1lcyYmKG8ubGVuZ3RofHx0aGlzLmRpZmZlcmVuY2VzLmxlbmd0aCkpZm9yKGxldCBlPTA7ZTwyNTY7KytlKXtpZighZyYmdm9pZCAwIT09bVtlXSljb250aW51ZTtjb25zdCB0PXRoaXMuZGlmZmVyZW5jZXNbZV18fG9bZV07aWYoIXQpY29udGludWU7Y29uc3QgYT1pLmdseXBoTmFtZXMuaW5kZXhPZih0KTthPjAmJmhhc0dseXBoKGEpJiYobVtlXT1hKX19MD09PW0ubGVuZ3RoJiYobVswXT0wKTtsZXQgeT1DLTE7UXx8KHk9MCk7aWYoIWkuY3NzRm9udEluZm8pe2NvbnN0IGU9YWRqdXN0TWFwcGluZyhtLGhhc0dseXBoLHksdGhpcy50b1VuaWNvZGUpO3RoaXMudG9Gb250Q2hhcj1lLnRvRm9udENoYXI7bi5jbWFwPXt0YWc6ImNtYXAiLGRhdGE6Y3JlYXRlQ21hcFRhYmxlKGUuY2hhckNvZGVUb0dseXBoSWQsZS50b1VuaWNvZGVFeHRyYU1hcCxDKX07blsiT1MvMiJdJiZmdW5jdGlvbiB2YWxpZGF0ZU9TMlRhYmxlKGUsdCl7dC5wb3M9KHQuc3RhcnR8fDApK2Uub2Zmc2V0O2NvbnN0IGk9dC5nZXRVaW50MTYoKTt0LnNraXAoNjApO2NvbnN0IGE9dC5nZXRVaW50MTYoKTtpZihpPDQmJjc2OCZhKXJldHVybiExO2lmKHQuZ2V0VWludDE2KCk+dC5nZXRVaW50MTYoKSlyZXR1cm4hMTt0LnNraXAoNik7aWYoMD09PXQuZ2V0VWludDE2KCkpcmV0dXJuITE7ZS5kYXRhWzhdPWUuZGF0YVs5XT0wO3JldHVybiEwfShuWyJPUy8yIl0sdCl8fChuWyJPUy8yIl09e3RhZzoiT1MvMiIsZGF0YTpjcmVhdGVPUzJUYWJsZShpLGUuY2hhckNvZGVUb0dseXBoSWQscCl9KX1pZighYyl0cnl7Zz1uZXcgU3RyZWFtKG5bIkNGRiAiXS5kYXRhKTtvPW5ldyBDRkZQYXJzZXIoZyxpLFlpKS5wYXJzZSgpO28uZHVwbGljYXRlRmlyc3RHbHlwaCgpO2NvbnN0IGU9bmV3IENGRkNvbXBpbGVyKG8pO25bIkNGRiAiXS5kYXRhPWUuY29tcGlsZSgpfWNhdGNoe3dhcm4oIkZhaWxlZCB0byBjb21waWxlIGZvbnQgIitpLmxvYWRlZE5hbWUpfWlmKG4ubmFtZSl7Y29uc3RbdCxhXT1yZWFkTmFtZVRhYmxlKG4ubmFtZSk7bi5uYW1lLmRhdGE9Y3JlYXRlTmFtZVRhYmxlKGUsdCk7dGhpcy5wc05hbWU9dFswXVs2XXx8bnVsbDtpLmNvbXBvc2l0ZXx8ZnVuY3Rpb24gYWRqdXN0VHJ1ZVR5cGVUb1VuaWNvZGUoZSx0LGkpe2lmKGUuaXNJbnRlcm5hbEZvbnQpcmV0dXJuO2lmKGUuaGFzSW5jbHVkZWRUb1VuaWNvZGVNYXApcmV0dXJuO2lmKGUuaGFzRW5jb2RpbmcpcmV0dXJuO2lmKGUudG9Vbmljb2RlIGluc3RhbmNlb2YgSWRlbnRpdHlUb1VuaWNvZGVNYXApcmV0dXJuO2lmKCF0KXJldHVybjtpZigwPT09aS5sZW5ndGgpcmV0dXJuO2lmKGUuZGVmYXVsdEVuY29kaW5nPT09cGkpcmV0dXJuO2Zvcihjb25zdCBlIG9mIGkpaWYoIWlzV2luTmFtZVJlY29yZChlKSlyZXR1cm47Y29uc3QgYT1waSxzPVtdLHI9TmkoKTtmb3IoY29uc3QgZSBpbiBhKXtjb25zdCB0PWFbZV07aWYoIiI9PT10KWNvbnRpbnVlO2NvbnN0IGk9clt0XTt2b2lkIDAhPT1pJiYoc1tlXT1TdHJpbmcuZnJvbUNoYXJDb2RlKGkpKX1zLmxlbmd0aD4wJiZlLnRvVW5pY29kZS5hbWVuZChzKX0oaSx0aGlzLmlzU3ltYm9saWNGb250LGEpfWVsc2Ugbi5uYW1lPXt0YWc6Im5hbWUiLGRhdGE6Y3JlYXRlTmFtZVRhYmxlKHRoaXMubmFtZSl9O2NvbnN0IHc9bmV3IE9wZW5UeXBlRmlsZUJ1aWxkZXIoci52ZXJzaW9uKTtmb3IoY29uc3QgZSBpbiBuKXcuYWRkVGFibGUoZSxuW2VdLmRhdGEpO3JldHVybiB3LnRvQXJyYXkoKX1jb252ZXJ0KGUsdCxpKXtpLmZpeGVkUGl0Y2g9ITE7aS5idWlsdEluRW5jb2RpbmcmJmZ1bmN0aW9uIGFkanVzdFR5cGUxVG9Vbmljb2RlKGUsdCl7aWYoZS5pc0ludGVybmFsRm9udClyZXR1cm47aWYoZS5oYXNJbmNsdWRlZFRvVW5pY29kZU1hcClyZXR1cm47aWYodD09PWUuZGVmYXVsdEVuY29kaW5nKXJldHVybjtpZihlLnRvVW5pY29kZSBpbnN0YW5jZW9mIElkZW50aXR5VG9Vbmljb2RlTWFwKXJldHVybjtjb25zdCBpPVtdLGE9TmkoKTtmb3IoY29uc3QgcyBpbiB0KXtpZihlLmhhc0VuY29kaW5nJiYoZS5iYXNlRW5jb2RpbmdOYW1lfHx2b2lkIDAhPT1lLmRpZmZlcmVuY2VzW3NdKSljb250aW51ZTtjb25zdCByPWdldFVuaWNvZGVGb3JHbHlwaCh0W3NdLGEpOy0xIT09ciYmKGlbc109U3RyaW5nLmZyb21DaGFyQ29kZShyKSl9aS5sZW5ndGg+MCYmZS50b1VuaWNvZGUuYW1lbmQoaSl9KGksaS5idWlsdEluRW5jb2RpbmcpO2xldCBzPTE7dCBpbnN0YW5jZW9mIENGRkZvbnQmJihzPXQubnVtR2x5cGhzLTEpO2NvbnN0IHI9dC5nZXRHbHlwaE1hcHBpbmcoaSk7bGV0IG49bnVsbCxvPXIsZz1udWxsO2lmKCFpLmNzc0ZvbnRJbmZvKXtuPWFkanVzdE1hcHBpbmcocix0Lmhhc0dseXBoSWQuYmluZCh0KSxzLHRoaXMudG9Vbmljb2RlKTt0aGlzLnRvRm9udENoYXI9bi50b0ZvbnRDaGFyO289bi5jaGFyQ29kZVRvR2x5cGhJZDtnPW4udG9Vbmljb2RlRXh0cmFNYXB9Y29uc3QgYz10Lm51bUdseXBocztmdW5jdGlvbiBnZXRDaGFyQ29kZXMoZSx0KXtsZXQgaT1udWxsO2Zvcihjb25zdCBhIGluIGUpdD09PWVbYV0mJihpfHw9W10pLnB1c2goMHxhKTtyZXR1cm4gaX1mdW5jdGlvbiBjcmVhdGVDaGFyQ29kZShlLHQpe2Zvcihjb25zdCBpIGluIGUpaWYodD09PWVbaV0pcmV0dXJuIDB8aTtuLmNoYXJDb2RlVG9HbHlwaElkW24ubmV4dEF2YWlsYWJsZUZvbnRDaGFyQ29kZV09dDtyZXR1cm4gbi5uZXh0QXZhaWxhYmxlRm9udENoYXJDb2RlKyt9Y29uc3QgaD10LnNlYWNzO2lmKG4mJmg/Lmxlbmd0aCl7Y29uc3QgZT1pLmZvbnRNYXRyaXh8fGEscz10LmdldENoYXJzZXQoKSxvPU9iamVjdC5jcmVhdGUobnVsbCk7Zm9yKGxldCB0IGluIGgpe3R8PTA7Y29uc3QgaT1oW3RdLGE9ZmlbaVsyXV0sZz1maVtpWzNdXSxjPXMuaW5kZXhPZihhKSxsPXMuaW5kZXhPZihnKTtpZihjPDB8fGw8MCljb250aW51ZTtjb25zdCBDPXt4OmlbMF0qZVswXStpWzFdKmVbMl0rZVs0XSx5OmlbMF0qZVsxXStpWzFdKmVbM10rZVs1XX0sUT1nZXRDaGFyQ29kZXMocix0KTtpZihRKWZvcihjb25zdCBlIG9mIFEpe2NvbnN0IHQ9bi5jaGFyQ29kZVRvR2x5cGhJZCxpPWNyZWF0ZUNoYXJDb2RlKHQsYyksYT1jcmVhdGVDaGFyQ29kZSh0LGwpO29bZV09e2Jhc2VGb250Q2hhckNvZGU6aSxhY2NlbnRGb250Q2hhckNvZGU6YSxhY2NlbnRPZmZzZXQ6Q319fWkuc2VhY01hcD1vfWNvbnN0IGw9MS8oaS5mb250TWF0cml4fHxhKVswXSxDPW5ldyBPcGVuVHlwZUZpbGVCdWlsZGVyKCJPVFRPIik7Qy5hZGRUYWJsZSgiQ0ZGICIsdC5kYXRhKTtDLmFkZFRhYmxlKCJPUy8yIixjcmVhdGVPUzJUYWJsZShpLG8pKTtDLmFkZFRhYmxlKCJjbWFwIixjcmVhdGVDbWFwVGFibGUobyxnLGMpKTtDLmFkZFRhYmxlKCJoZWFkIiwiXDABXDBcMFwwXDAQXDBcMFwwXDBcMF8PPMO1XDBcMCIrc2FmZVN0cmluZzE2KGwpKyJcMFwwXDBcMMKeXHZ+J1wwXDBcMFwwwp5cdn4nXDBcMCIrc2FmZVN0cmluZzE2KGkuZGVzY2VudCkrIg/DvyIrc2FmZVN0cmluZzE2KGkuYXNjZW50KStzdHJpbmcxNihpLml0YWxpY0FuZ2xlPzI6MCkrIlwwEVwwXDBcMFwwXDBcMCIpO0MuYWRkVGFibGUoImhoZWEiLCJcMAFcMFwwIitzYWZlU3RyaW5nMTYoaS5hc2NlbnQpK3NhZmVTdHJpbmcxNihpLmRlc2NlbnQpKyJcMFwww7/Dv1wwXDBcMFwwXDBcMCIrc2FmZVN0cmluZzE2KGkuY2FwSGVpZ2h0KStzYWZlU3RyaW5nMTYoTWF0aC50YW4oaS5pdGFsaWNBbmdsZSkqaS54SGVpZ2h0KSsiXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwIitzdHJpbmcxNihjKSk7Qy5hZGRUYWJsZSgiaG10eCIsZnVuY3Rpb24gZm9udEZpZWxkc0htdHgoKXtjb25zdCBlPXQuY2hhcnN0cmluZ3MsaT10LmNmZj90LmNmZi53aWR0aHM6bnVsbDtsZXQgYT0iXDBcMFwwXDAiO2ZvcihsZXQgdD0xLHM9Yzt0PHM7dCsrKXtsZXQgcz0wO2lmKGUpe2NvbnN0IGk9ZVt0LTFdO3M9IndpZHRoImluIGk/aS53aWR0aDowfWVsc2UgaSYmKHM9TWF0aC5jZWlsKGlbdF18fDApKTthKz1zdHJpbmcxNihzKStzdHJpbmcxNigwKX1yZXR1cm4gYX0oKSk7Qy5hZGRUYWJsZSgibWF4cCIsIlwwXDBQXDAiK3N0cmluZzE2KGMpKTtDLmFkZFRhYmxlKCJuYW1lIixjcmVhdGVOYW1lVGFibGUoZSkpO0MuYWRkVGFibGUoInBvc3QiLGNyZWF0ZVBvc3RUYWJsZShpKSk7cmV0dXJuIEMudG9BcnJheSgpfV9jaGFyVG9HbHlwaChlLHQ9ITEpe2xldCBpLGEscyxyPXRoaXMuX2dseXBoQ2FjaGVbZV07aWYocj8uaXNTcGFjZT09PXQpcmV0dXJuIHI7bGV0IG49ZTtpZih0aGlzLmNNYXA/LmNvbnRhaW5zKGUpKXtuPXRoaXMuY01hcC5sb29rdXAoZSk7InN0cmluZyI9PXR5cGVvZiBuJiYobj1jb252ZXJ0Q2lkU3RyaW5nKGUsbikpfWE9dGhpcy53aWR0aHNbbl07Im51bWJlciIhPXR5cGVvZiBhJiYoYT10aGlzLmRlZmF1bHRXaWR0aCk7Y29uc3Qgbz10aGlzLnZtZXRyaWNzPy5bbl07bGV0IGc9dGhpcy50b1VuaWNvZGUuZ2V0KGUpfHxlOyJudW1iZXIiPT10eXBlb2YgZyYmKGc9U3RyaW5nLmZyb21DaGFyQ29kZShnKSk7bGV0IGM9dm9pZCAwIT09dGhpcy50b0ZvbnRDaGFyW2VdO2k9dGhpcy50b0ZvbnRDaGFyW2VdfHxlO2lmKHRoaXMubWlzc2luZ0ZpbGUpe2NvbnN0IHQ9dGhpcy5kaWZmZXJlbmNlc1tlXXx8dGhpcy5kZWZhdWx0RW5jb2RpbmdbZV07Ii5ub3RkZWYiIT09dCYmIiIhPT10fHwiVHlwZTEiIT09dGhpcy50eXBlfHwoaT0zMik7aT1mdW5jdGlvbiBtYXBTcGVjaWFsVW5pY29kZVZhbHVlcyhlKXtyZXR1cm4gZT49NjU1MjAmJmU8PTY1NTM1PzA6ZT49NjI5NzYmJmU8PTYzNzQzP3hpKClbZV18fGU6MTczPT09ZT80NTplfShpKX10aGlzLmlzVHlwZTNGb250JiYocz1pKTtsZXQgaD1udWxsO2lmKHRoaXMuc2VhY01hcD8uW2VdKXtjPSEwO2NvbnN0IHQ9dGhpcy5zZWFjTWFwW2VdO2k9dC5iYXNlRm9udENoYXJDb2RlO2g9e2ZvbnRDaGFyOlN0cmluZy5mcm9tQ29kZVBvaW50KHQuYWNjZW50Rm9udENoYXJDb2RlKSxvZmZzZXQ6dC5hY2NlbnRPZmZzZXR9fWxldCBsPSIiOyJudW1iZXIiPT10eXBlb2YgaSYmKGk8PTExMTQxMTE/bD1TdHJpbmcuZnJvbUNvZGVQb2ludChpKTp3YXJuKGBjaGFyVG9HbHlwaCAtIGludmFsaWQgZm9udENoYXJDb2RlOiAke2l9YCkpO3I9bmV3IGZvbnRzX0dseXBoKGUsbCxnLGgsYSxvLHMsdCxjKTtyZXR1cm4gdGhpcy5fZ2x5cGhDYWNoZVtlXT1yfWNoYXJzVG9HbHlwaHMoZSl7bGV0IHQ9dGhpcy5fY2hhcnNDYWNoZVtlXTtpZih0KXJldHVybiB0O3Q9W107aWYodGhpcy5jTWFwKXtjb25zdCBpPU9iamVjdC5jcmVhdGUobnVsbCksYT1lLmxlbmd0aDtsZXQgcz0wO2Zvcig7czxhOyl7dGhpcy5jTWFwLnJlYWRDaGFyQ29kZShlLHMsaSk7Y29uc3R7Y2hhcmNvZGU6YSxsZW5ndGg6cn09aTtzKz1yO2NvbnN0IG49dGhpcy5fY2hhclRvR2x5cGgoYSwxPT09ciYmMzI9PT1lLmNoYXJDb2RlQXQocy0xKSk7dC5wdXNoKG4pfX1lbHNlIGZvcihsZXQgaT0wLGE9ZS5sZW5ndGg7aTxhOysraSl7Y29uc3QgYT1lLmNoYXJDb2RlQXQoaSkscz10aGlzLl9jaGFyVG9HbHlwaChhLDMyPT09YSk7dC5wdXNoKHMpfXJldHVybiB0aGlzLl9jaGFyc0NhY2hlW2VdPXR9Z2V0Q2hhclBvc2l0aW9ucyhlKXtjb25zdCB0PVtdO2lmKHRoaXMuY01hcCl7Y29uc3QgaT1PYmplY3QuY3JlYXRlKG51bGwpO2xldCBhPTA7Zm9yKDthPGUubGVuZ3RoOyl7dGhpcy5jTWFwLnJlYWRDaGFyQ29kZShlLGEsaSk7Y29uc3Qgcz1pLmxlbmd0aDt0LnB1c2goW2EsYStzXSk7YSs9c319ZWxzZSBmb3IobGV0IGk9MCxhPWUubGVuZ3RoO2k8YTsrK2kpdC5wdXNoKFtpLGkrMV0pO3JldHVybiB0fWdldCBnbHlwaENhY2hlVmFsdWVzKCl7cmV0dXJuIE9iamVjdC52YWx1ZXModGhpcy5fZ2x5cGhDYWNoZSl9ZW5jb2RlU3RyaW5nKGUpe2NvbnN0IHQ9W10saT1bXSxoYXNDdXJyZW50QnVmRXJyb3JzPSgpPT50Lmxlbmd0aCUyPT0xLGE9dGhpcy50b1VuaWNvZGUgaW5zdGFuY2VvZiBJZGVudGl0eVRvVW5pY29kZU1hcD9lPT50aGlzLnRvVW5pY29kZS5jaGFyQ29kZU9mKGUpOmU9PnRoaXMudG9Vbmljb2RlLmNoYXJDb2RlT2YoU3RyaW5nLmZyb21Db2RlUG9pbnQoZSkpO2ZvcihsZXQgcz0wLHI9ZS5sZW5ndGg7czxyO3MrKyl7Y29uc3Qgcj1lLmNvZGVQb2ludEF0KHMpO3I+NTUyOTUmJihyPDU3MzQ0fHxyPjY1NTMzKSYmcysrO2lmKHRoaXMudG9Vbmljb2RlKXtjb25zdCBlPWEocik7aWYoLTEhPT1lKXtpZihoYXNDdXJyZW50QnVmRXJyb3JzKCkpe3QucHVzaChpLmpvaW4oIiIpKTtpLmxlbmd0aD0wfWZvcihsZXQgdD0odGhpcy5jTWFwP3RoaXMuY01hcC5nZXRDaGFyQ29kZUxlbmd0aChlKToxKS0xO3Q+PTA7dC0tKWkucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGU+PjgqdCYyNTUpKTtjb250aW51ZX19aWYoIWhhc0N1cnJlbnRCdWZFcnJvcnMoKSl7dC5wdXNoKGkuam9pbigiIikpO2kubGVuZ3RoPTB9aS5wdXNoKFN0cmluZy5mcm9tQ29kZVBvaW50KHIpKX10LnB1c2goaS5qb2luKCIiKSk7cmV0dXJuIHR9fWNsYXNzIEVycm9yRm9udHtjb25zdHJ1Y3RvcihlKXt0aGlzLmVycm9yPWU7dGhpcy5sb2FkZWROYW1lPSJnX2ZvbnRfZXJyb3IiO3RoaXMubWlzc2luZ0ZpbGU9ITB9Y2hhcnNUb0dseXBocygpe3JldHVybltdfWVuY29kZVN0cmluZyhlKXtyZXR1cm5bZV19ZXhwb3J0RGF0YShlPSExKXtyZXR1cm57ZXJyb3I6dGhpcy5lcnJvcn19fWNvbnN0IEVhPTIsdWE9MyxkYT00LGZhPTUscGE9NixtYT03O2NsYXNzIFBhdHRlcm57Y29uc3RydWN0b3IoKXt1bnJlYWNoYWJsZSgiQ2Fubm90IGluaXRpYWxpemUgUGF0dGVybi4iKX1zdGF0aWMgcGFyc2VTaGFkaW5nKGUsdCxpLGEscyl7Y29uc3Qgcj1lIGluc3RhbmNlb2YgQmFzZVN0cmVhbT9lLmRpY3Q6ZSxuPXIuZ2V0KCJTaGFkaW5nVHlwZSIpO3RyeXtzd2l0Y2gobil7Y2FzZSBFYTpjYXNlIHVhOnJldHVybiBuZXcgUmFkaWFsQXhpYWxTaGFkaW5nKHIsdCxpLGEscyk7Y2FzZSBkYTpjYXNlIGZhOmNhc2UgcGE6Y2FzZSBtYTpyZXR1cm4gbmV3IE1lc2hTaGFkaW5nKGUsdCxpLGEscyk7ZGVmYXVsdDp0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlVuc3VwcG9ydGVkIFNoYWRpbmdUeXBlOiAiK24pfX1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pdGhyb3cgZTt3YXJuKGUpO3JldHVybiBuZXcgRHVtbXlTaGFkaW5nfX19Y2xhc3MgQmFzZVNoYWRpbmd7c3RhdGljIFNNQUxMX05VTUJFUj0xZS02O2NvbnN0cnVjdG9yKCl7dGhpcy5jb25zdHJ1Y3Rvcj09PUJhc2VTaGFkaW5nJiZ1bnJlYWNoYWJsZSgiQ2Fubm90IGluaXRpYWxpemUgQmFzZVNoYWRpbmcuIil9Z2V0SVIoKXt1bnJlYWNoYWJsZSgiQWJzdHJhY3QgbWV0aG9kIGBnZXRJUmAgY2FsbGVkLiIpfX1jbGFzcyBSYWRpYWxBeGlhbFNoYWRpbmcgZXh0ZW5kcyBCYXNlU2hhZGluZ3tjb25zdHJ1Y3RvcihlLHQsaSxhLHMpe3N1cGVyKCk7dGhpcy5zaGFkaW5nVHlwZT1lLmdldCgiU2hhZGluZ1R5cGUiKTtsZXQgcj0wO3RoaXMuc2hhZGluZ1R5cGU9PT1FYT9yPTQ6dGhpcy5zaGFkaW5nVHlwZT09PXVhJiYocj02KTt0aGlzLmNvb3Jkc0Fycj1lLmdldEFycmF5KCJDb29yZHMiKTtpZighaXNOdW1iZXJBcnJheSh0aGlzLmNvb3Jkc0FycixyKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlJhZGlhbEF4aWFsU2hhZGluZzogSW52YWxpZCAvQ29vcmRzIGFycmF5LiIpO2NvbnN0IG49Q29sb3JTcGFjZS5wYXJzZSh7Y3M6ZS5nZXRSYXcoIkNTIil8fGUuZ2V0UmF3KCJDb2xvclNwYWNlIikseHJlZjp0LHJlc291cmNlczppLHBkZkZ1bmN0aW9uRmFjdG9yeTphLGxvY2FsQ29sb3JTcGFjZUNhY2hlOnN9KTt0aGlzLmJib3g9bG9va3VwTm9ybWFsUmVjdChlLmdldEFycmF5KCJCQm94IiksbnVsbCk7bGV0IG89MCxnPTE7Y29uc3QgYz1lLmdldEFycmF5KCJEb21haW4iKTtpc051bWJlckFycmF5KGMsMikmJihbbyxnXT1jKTtsZXQgaD0hMSxsPSExO2NvbnN0IEM9ZS5nZXRBcnJheSgiRXh0ZW5kIik7KGZ1bmN0aW9uIGlzQm9vbGVhbkFycmF5KGUsdCl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSkmJihudWxsPT09dHx8ZS5sZW5ndGg9PT10KSYmZS5ldmVyeSgoZT0+ImJvb2xlYW4iPT10eXBlb2YgZSkpfSkoQywyKSYmKFtoLGxdPUMpO2lmKCEodGhpcy5zaGFkaW5nVHlwZSE9PXVhfHxoJiZsKSl7Y29uc3RbZSx0LGksYSxzLHJdPXRoaXMuY29vcmRzQXJyLG49TWF0aC5oeXBvdChlLWEsdC1zKTtpPD1yK24mJnI8PWkrbiYmd2FybigiVW5zdXBwb3J0ZWQgcmFkaWFsIGdyYWRpZW50LiIpfXRoaXMuZXh0ZW5kU3RhcnQ9aDt0aGlzLmV4dGVuZEVuZD1sO2NvbnN0IFE9ZS5nZXRSYXcoIkZ1bmN0aW9uIiksRT1hLmNyZWF0ZUZyb21BcnJheShRKSx1PShnLW8pLzg0MCxkPXRoaXMuY29sb3JTdG9wcz1bXTtpZihvPj1nfHx1PD0wKXtpbmZvKCJCYWQgc2hhZGluZyBkb21haW4uIik7cmV0dXJufWNvbnN0IGY9bmV3IEZsb2F0MzJBcnJheShuLm51bUNvbXBzKSxwPW5ldyBGbG9hdDMyQXJyYXkoMSk7bGV0IG0seT0wO3BbMF09bztFKHAsMCxmLDApO2xldCB3PW4uZ2V0UmdiKGYsMCk7Y29uc3QgYj1VdGlsLm1ha2VIZXhDb2xvcih3WzBdLHdbMV0sd1syXSk7ZC5wdXNoKFswLGJdKTtsZXQgRD0xO3BbMF09byt1O0UocCwwLGYsMCk7bGV0IEY9bi5nZXRSZ2IoZiwwKSxTPUZbMF0td1swXSsxLGs9RlsxXS13WzFdKzEsUj1GWzJdLXdbMl0rMSxOPUZbMF0td1swXS0xLEc9RlsxXS13WzFdLTEseD1GWzJdLXdbMl0tMTtmb3IobGV0IGU9MjtlPDg0MDtlKyspe3BbMF09bytlKnU7RShwLDAsZiwwKTttPW4uZ2V0UmdiKGYsMCk7Y29uc3QgdD1lLXk7Uz1NYXRoLm1pbihTLChtWzBdLXdbMF0rMSkvdCk7az1NYXRoLm1pbihrLChtWzFdLXdbMV0rMSkvdCk7Uj1NYXRoLm1pbihSLChtWzJdLXdbMl0rMSkvdCk7Tj1NYXRoLm1heChOLChtWzBdLXdbMF0tMSkvdCk7Rz1NYXRoLm1heChHLChtWzFdLXdbMV0tMSkvdCk7eD1NYXRoLm1heCh4LChtWzJdLXdbMl0tMSkvdCk7aWYoIShOPD1TJiZHPD1rJiZ4PD1SKSl7Y29uc3QgZT1VdGlsLm1ha2VIZXhDb2xvcihGWzBdLEZbMV0sRlsyXSk7ZC5wdXNoKFtELzg0MCxlXSk7Uz1tWzBdLUZbMF0rMTtrPW1bMV0tRlsxXSsxO1I9bVsyXS1GWzJdKzE7Tj1tWzBdLUZbMF0tMTtHPW1bMV0tRlsxXS0xO3g9bVsyXS1GWzJdLTE7eT1EO3c9Rn1EPWU7Rj1tfWNvbnN0IE09VXRpbC5tYWtlSGV4Q29sb3IoRlswXSxGWzFdLEZbMl0pO2QucHVzaChbMSxNXSk7bGV0IFU9InRyYW5zcGFyZW50IjtpZihlLmhhcygiQmFja2dyb3VuZCIpKXttPW4uZ2V0UmdiKGUuZ2V0KCJCYWNrZ3JvdW5kIiksMCk7VT1VdGlsLm1ha2VIZXhDb2xvcihtWzBdLG1bMV0sbVsyXSl9aWYoIWgpe2QudW5zaGlmdChbMCxVXSk7ZFsxXVswXSs9QmFzZVNoYWRpbmcuU01BTExfTlVNQkVSfWlmKCFsKXtkLmF0KC0xKVswXS09QmFzZVNoYWRpbmcuU01BTExfTlVNQkVSO2QucHVzaChbMSxVXSl9dGhpcy5jb2xvclN0b3BzPWR9Z2V0SVIoKXtjb25zdHtjb29yZHNBcnI6ZSxzaGFkaW5nVHlwZTp0fT10aGlzO2xldCBpLGEscyxyLG47aWYodD09PUVhKXthPVtlWzBdLGVbMV1dO3M9W2VbMl0sZVszXV07cj1udWxsO249bnVsbDtpPSJheGlhbCJ9ZWxzZSBpZih0PT09dWEpe2E9W2VbMF0sZVsxXV07cz1bZVszXSxlWzRdXTtyPWVbMl07bj1lWzVdO2k9InJhZGlhbCJ9ZWxzZSB1bnJlYWNoYWJsZShgZ2V0UGF0dGVybiB0eXBlIHVua25vd246ICR7dH1gKTtyZXR1cm5bIlJhZGlhbEF4aWFsIixpLHRoaXMuYmJveCx0aGlzLmNvbG9yU3RvcHMsYSxzLHIsbl19fWNsYXNzIE1lc2hTdHJlYW1SZWFkZXJ7Y29uc3RydWN0b3IoZSx0KXt0aGlzLnN0cmVhbT1lO3RoaXMuY29udGV4dD10O3RoaXMuYnVmZmVyPTA7dGhpcy5idWZmZXJMZW5ndGg9MDtjb25zdCBpPXQubnVtQ29tcHM7dGhpcy50bXBDb21wc0J1Zj1uZXcgRmxvYXQzMkFycmF5KGkpO2NvbnN0IGE9dC5jb2xvclNwYWNlLm51bUNvbXBzO3RoaXMudG1wQ3NDb21wc0J1Zj10LmNvbG9yRm4/bmV3IEZsb2F0MzJBcnJheShhKTp0aGlzLnRtcENvbXBzQnVmfWdldCBoYXNEYXRhKCl7aWYodGhpcy5zdHJlYW0uZW5kKXJldHVybiB0aGlzLnN0cmVhbS5wb3M8dGhpcy5zdHJlYW0uZW5kO2lmKHRoaXMuYnVmZmVyTGVuZ3RoPjApcmV0dXJuITA7Y29uc3QgZT10aGlzLnN0cmVhbS5nZXRCeXRlKCk7aWYoZTwwKXJldHVybiExO3RoaXMuYnVmZmVyPWU7dGhpcy5idWZmZXJMZW5ndGg9ODtyZXR1cm4hMH1yZWFkQml0cyhlKXtsZXQgdD10aGlzLmJ1ZmZlcixpPXRoaXMuYnVmZmVyTGVuZ3RoO2lmKDMyPT09ZSl7aWYoMD09PWkpcmV0dXJuKHRoaXMuc3RyZWFtLmdldEJ5dGUoKTw8MjR8dGhpcy5zdHJlYW0uZ2V0Qnl0ZSgpPDwxNnx0aGlzLnN0cmVhbS5nZXRCeXRlKCk8PDh8dGhpcy5zdHJlYW0uZ2V0Qnl0ZSgpKT4+PjA7dD10PDwyNHx0aGlzLnN0cmVhbS5nZXRCeXRlKCk8PDE2fHRoaXMuc3RyZWFtLmdldEJ5dGUoKTw8OHx0aGlzLnN0cmVhbS5nZXRCeXRlKCk7Y29uc3QgZT10aGlzLnN0cmVhbS5nZXRCeXRlKCk7dGhpcy5idWZmZXI9ZSYoMTw8aSktMTtyZXR1cm4odDw8OC1pfCgyNTUmZSk+PmkpPj4+MH1pZig4PT09ZSYmMD09PWkpcmV0dXJuIHRoaXMuc3RyZWFtLmdldEJ5dGUoKTtmb3IoO2k8ZTspe3Q9dDw8OHx0aGlzLnN0cmVhbS5nZXRCeXRlKCk7aSs9OH1pLT1lO3RoaXMuYnVmZmVyTGVuZ3RoPWk7dGhpcy5idWZmZXI9dCYoMTw8aSktMTtyZXR1cm4gdD4+aX1hbGlnbigpe3RoaXMuYnVmZmVyPTA7dGhpcy5idWZmZXJMZW5ndGg9MH1yZWFkRmxhZygpe3JldHVybiB0aGlzLnJlYWRCaXRzKHRoaXMuY29udGV4dC5iaXRzUGVyRmxhZyl9cmVhZENvb3JkaW5hdGUoKXtjb25zdCBlPXRoaXMuY29udGV4dC5iaXRzUGVyQ29vcmRpbmF0ZSx0PXRoaXMucmVhZEJpdHMoZSksaT10aGlzLnJlYWRCaXRzKGUpLGE9dGhpcy5jb250ZXh0LmRlY29kZSxzPWU8MzI/MS8oKDE8PGUpLTEpOjIuMzI4MzA2NDM2NTM4Njk2M2UtMTA7cmV0dXJuW3QqcyooYVsxXS1hWzBdKSthWzBdLGkqcyooYVszXS1hWzJdKSthWzJdXX1yZWFkQ29tcG9uZW50cygpe2NvbnN0IGU9dGhpcy5jb250ZXh0Lm51bUNvbXBzLHQ9dGhpcy5jb250ZXh0LmJpdHNQZXJDb21wb25lbnQsaT10PDMyPzEvKCgxPDx0KS0xKToyLjMyODMwNjQzNjUzODY5NjNlLTEwLGE9dGhpcy5jb250ZXh0LmRlY29kZSxzPXRoaXMudG1wQ29tcHNCdWY7Zm9yKGxldCByPTAsbj00O3I8ZTtyKyssbis9Mil7Y29uc3QgZT10aGlzLnJlYWRCaXRzKHQpO3Nbcl09ZSppKihhW24rMV0tYVtuXSkrYVtuXX1jb25zdCByPXRoaXMudG1wQ3NDb21wc0J1Zjt0aGlzLmNvbnRleHQuY29sb3JGbiYmdGhpcy5jb250ZXh0LmNvbG9yRm4ocywwLHIsMCk7cmV0dXJuIHRoaXMuY29udGV4dC5jb2xvclNwYWNlLmdldFJnYihyLDApfX1sZXQgeWE9T2JqZWN0LmNyZWF0ZShudWxsKTtmdW5jdGlvbiBnZXRCKGUpe3JldHVybiB5YVtlXXx8PWZ1bmN0aW9uIGJ1aWxkQihlKXtjb25zdCB0PVtdO2ZvcihsZXQgaT0wO2k8PWU7aSsrKXtjb25zdCBhPWkvZSxzPTEtYTt0LnB1c2gobmV3IEZsb2F0MzJBcnJheShbcyoqMywzKmEqcyoqMiwzKmEqKjIqcyxhKiozXSkpfXJldHVybiB0fShlKX1jbGFzcyBNZXNoU2hhZGluZyBleHRlbmRzIEJhc2VTaGFkaW5ne3N0YXRpYyBNSU5fU1BMSVRfUEFUQ0hfQ0hVTktTX0FNT1VOVD0zO3N0YXRpYyBNQVhfU1BMSVRfUEFUQ0hfQ0hVTktTX0FNT1VOVD0yMDtzdGF0aWMgVFJJQU5HTEVfREVOU0lUWT0yMDtjb25zdHJ1Y3RvcihlLHQsaSxhLHMpe3N1cGVyKCk7aWYoIShlIGluc3RhbmNlb2YgQmFzZVN0cmVhbSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJNZXNoIGRhdGEgaXMgbm90IGEgc3RyZWFtIik7Y29uc3Qgcj1lLmRpY3Q7dGhpcy5zaGFkaW5nVHlwZT1yLmdldCgiU2hhZGluZ1R5cGUiKTt0aGlzLmJib3g9bG9va3VwTm9ybWFsUmVjdChyLmdldEFycmF5KCJCQm94IiksbnVsbCk7Y29uc3Qgbj1Db2xvclNwYWNlLnBhcnNlKHtjczpyLmdldFJhdygiQ1MiKXx8ci5nZXRSYXcoIkNvbG9yU3BhY2UiKSx4cmVmOnQscmVzb3VyY2VzOmkscGRmRnVuY3Rpb25GYWN0b3J5OmEsbG9jYWxDb2xvclNwYWNlQ2FjaGU6c30pO3RoaXMuYmFja2dyb3VuZD1yLmhhcygiQmFja2dyb3VuZCIpP24uZ2V0UmdiKHIuZ2V0KCJCYWNrZ3JvdW5kIiksMCk6bnVsbDtjb25zdCBvPXIuZ2V0UmF3KCJGdW5jdGlvbiIpLGc9bz9hLmNyZWF0ZUZyb21BcnJheShvKTpudWxsO3RoaXMuY29vcmRzPVtdO3RoaXMuY29sb3JzPVtdO3RoaXMuZmlndXJlcz1bXTtjb25zdCBjPXtiaXRzUGVyQ29vcmRpbmF0ZTpyLmdldCgiQml0c1BlckNvb3JkaW5hdGUiKSxiaXRzUGVyQ29tcG9uZW50OnIuZ2V0KCJCaXRzUGVyQ29tcG9uZW50IiksYml0c1BlckZsYWc6ci5nZXQoIkJpdHNQZXJGbGFnIiksZGVjb2RlOnIuZ2V0QXJyYXkoIkRlY29kZSIpLGNvbG9yRm46Zyxjb2xvclNwYWNlOm4sbnVtQ29tcHM6Zz8xOm4ubnVtQ29tcHN9LGg9bmV3IE1lc2hTdHJlYW1SZWFkZXIoZSxjKTtsZXQgbD0hMTtzd2l0Y2godGhpcy5zaGFkaW5nVHlwZSl7Y2FzZSBkYTp0aGlzLl9kZWNvZGVUeXBlNFNoYWRpbmcoaCk7YnJlYWs7Y2FzZSBmYTpjb25zdCBlPTB8ci5nZXQoIlZlcnRpY2VzUGVyUm93Iik7aWYoZTwyKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBWZXJ0aWNlc1BlclJvdyIpO3RoaXMuX2RlY29kZVR5cGU1U2hhZGluZyhoLGUpO2JyZWFrO2Nhc2UgcGE6dGhpcy5fZGVjb2RlVHlwZTZTaGFkaW5nKGgpO2w9ITA7YnJlYWs7Y2FzZSBtYTp0aGlzLl9kZWNvZGVUeXBlN1NoYWRpbmcoaCk7bD0hMDticmVhaztkZWZhdWx0OnVucmVhY2hhYmxlKCJVbnN1cHBvcnRlZCBtZXNoIHR5cGUuIil9aWYobCl7dGhpcy5fdXBkYXRlQm91bmRzKCk7Zm9yKGxldCBlPTAsdD10aGlzLmZpZ3VyZXMubGVuZ3RoO2U8dDtlKyspdGhpcy5fYnVpbGRGaWd1cmVGcm9tUGF0Y2goZSl9dGhpcy5fdXBkYXRlQm91bmRzKCk7dGhpcy5fcGFja0RhdGEoKX1fZGVjb2RlVHlwZTRTaGFkaW5nKGUpe2NvbnN0IHQ9dGhpcy5jb29yZHMsaT10aGlzLmNvbG9ycyxhPVtdLHM9W107bGV0IHI9MDtmb3IoO2UuaGFzRGF0YTspe2NvbnN0IG49ZS5yZWFkRmxhZygpLG89ZS5yZWFkQ29vcmRpbmF0ZSgpLGc9ZS5yZWFkQ29tcG9uZW50cygpO2lmKDA9PT1yKXtpZighKDA8PW4mJm48PTIpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiVW5rbm93biB0eXBlNCBmbGFnIik7c3dpdGNoKG4pe2Nhc2UgMDpyPTM7YnJlYWs7Y2FzZSAxOnMucHVzaChzLmF0KC0yKSxzLmF0KC0xKSk7cj0xO2JyZWFrO2Nhc2UgMjpzLnB1c2gocy5hdCgtMykscy5hdCgtMSkpO3I9MX1hLnB1c2gobil9cy5wdXNoKHQubGVuZ3RoKTt0LnB1c2gobyk7aS5wdXNoKGcpO3ItLTtlLmFsaWduKCl9dGhpcy5maWd1cmVzLnB1c2goe3R5cGU6InRyaWFuZ2xlcyIsY29vcmRzOm5ldyBJbnQzMkFycmF5KHMpLGNvbG9yczpuZXcgSW50MzJBcnJheShzKX0pfV9kZWNvZGVUeXBlNVNoYWRpbmcoZSx0KXtjb25zdCBpPXRoaXMuY29vcmRzLGE9dGhpcy5jb2xvcnMscz1bXTtmb3IoO2UuaGFzRGF0YTspe2NvbnN0IHQ9ZS5yZWFkQ29vcmRpbmF0ZSgpLHI9ZS5yZWFkQ29tcG9uZW50cygpO3MucHVzaChpLmxlbmd0aCk7aS5wdXNoKHQpO2EucHVzaChyKX10aGlzLmZpZ3VyZXMucHVzaCh7dHlwZToibGF0dGljZSIsY29vcmRzOm5ldyBJbnQzMkFycmF5KHMpLGNvbG9yczpuZXcgSW50MzJBcnJheShzKSx2ZXJ0aWNlc1BlclJvdzp0fSl9X2RlY29kZVR5cGU2U2hhZGluZyhlKXtjb25zdCB0PXRoaXMuY29vcmRzLGk9dGhpcy5jb2xvcnMsYT1uZXcgSW50MzJBcnJheSgxNikscz1uZXcgSW50MzJBcnJheSg0KTtmb3IoO2UuaGFzRGF0YTspe2NvbnN0IHI9ZS5yZWFkRmxhZygpO2lmKCEoMDw9ciYmcjw9MykpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJVbmtub3duIHR5cGU2IGZsYWciKTtjb25zdCBuPXQubGVuZ3RoO2ZvcihsZXQgaT0wLGE9MCE9PXI/ODoxMjtpPGE7aSsrKXQucHVzaChlLnJlYWRDb29yZGluYXRlKCkpO2NvbnN0IG89aS5sZW5ndGg7Zm9yKGxldCB0PTAsYT0wIT09cj8yOjQ7dDxhO3QrKylpLnB1c2goZS5yZWFkQ29tcG9uZW50cygpKTtsZXQgZyxjLGgsbDtzd2l0Y2gocil7Y2FzZSAwOmFbMTJdPW4rMzthWzEzXT1uKzQ7YVsxNF09bis1O2FbMTVdPW4rNjthWzhdPW4rMjthWzExXT1uKzc7YVs0XT1uKzE7YVs3XT1uKzg7YVswXT1uO2FbMV09bisxMTthWzJdPW4rMTA7YVszXT1uKzk7c1syXT1vKzE7c1szXT1vKzI7c1swXT1vO3NbMV09byszO2JyZWFrO2Nhc2UgMTpnPWFbMTJdO2M9YVsxM107aD1hWzE0XTtsPWFbMTVdO2FbMTJdPWw7YVsxM109biswO2FbMTRdPW4rMTthWzE1XT1uKzI7YVs4XT1oO2FbMTFdPW4rMzthWzRdPWM7YVs3XT1uKzQ7YVswXT1nO2FbMV09bis3O2FbMl09bis2O2FbM109bis1O2c9c1syXTtjPXNbM107c1syXT1jO3NbM109bztzWzBdPWc7c1sxXT1vKzE7YnJlYWs7Y2FzZSAyOmc9YVsxNV07Yz1hWzExXTthWzEyXT1hWzNdO2FbMTNdPW4rMDthWzE0XT1uKzE7YVsxNV09bisyO2FbOF09YVs3XTthWzExXT1uKzM7YVs0XT1jO2FbN109bis0O2FbMF09ZzthWzFdPW4rNzthWzJdPW4rNjthWzNdPW4rNTtnPXNbM107c1syXT1zWzFdO3NbM109bztzWzBdPWc7c1sxXT1vKzE7YnJlYWs7Y2FzZSAzOmFbMTJdPWFbMF07YVsxM109biswO2FbMTRdPW4rMTthWzE1XT1uKzI7YVs4XT1hWzFdO2FbMTFdPW4rMzthWzRdPWFbMl07YVs3XT1uKzQ7YVswXT1hWzNdO2FbMV09bis3O2FbMl09bis2O2FbM109bis1O3NbMl09c1swXTtzWzNdPW87c1swXT1zWzFdO3NbMV09bysxfWFbNV09dC5sZW5ndGg7dC5wdXNoKFsoLTQqdFthWzBdXVswXS10W2FbMTVdXVswXSs2Kih0W2FbNF1dWzBdK3RbYVsxXV1bMF0pLTIqKHRbYVsxMl1dWzBdK3RbYVszXV1bMF0pKzMqKHRbYVsxM11dWzBdK3RbYVs3XV1bMF0pKS85LCgtNCp0W2FbMF1dWzFdLXRbYVsxNV1dWzFdKzYqKHRbYVs0XV1bMV0rdFthWzFdXVsxXSktMioodFthWzEyXV1bMV0rdFthWzNdXVsxXSkrMyoodFthWzEzXV1bMV0rdFthWzddXVsxXSkpLzldKTthWzZdPXQubGVuZ3RoO3QucHVzaChbKC00KnRbYVszXV1bMF0tdFthWzEyXV1bMF0rNioodFthWzJdXVswXSt0W2FbN11dWzBdKS0yKih0W2FbMF1dWzBdK3RbYVsxNV1dWzBdKSszKih0W2FbNF1dWzBdK3RbYVsxNF1dWzBdKSkvOSwoLTQqdFthWzNdXVsxXS10W2FbMTJdXVsxXSs2Kih0W2FbMl1dWzFdK3RbYVs3XV1bMV0pLTIqKHRbYVswXV1bMV0rdFthWzE1XV1bMV0pKzMqKHRbYVs0XV1bMV0rdFthWzE0XV1bMV0pKS85XSk7YVs5XT10Lmxlbmd0aDt0LnB1c2goWygtNCp0W2FbMTJdXVswXS10W2FbM11dWzBdKzYqKHRbYVs4XV1bMF0rdFthWzEzXV1bMF0pLTIqKHRbYVswXV1bMF0rdFthWzE1XV1bMF0pKzMqKHRbYVsxMV1dWzBdK3RbYVsxXV1bMF0pKS85LCgtNCp0W2FbMTJdXVsxXS10W2FbM11dWzFdKzYqKHRbYVs4XV1bMV0rdFthWzEzXV1bMV0pLTIqKHRbYVswXV1bMV0rdFthWzE1XV1bMV0pKzMqKHRbYVsxMV1dWzFdK3RbYVsxXV1bMV0pKS85XSk7YVsxMF09dC5sZW5ndGg7dC5wdXNoKFsoLTQqdFthWzE1XV1bMF0tdFthWzBdXVswXSs2Kih0W2FbMTFdXVswXSt0W2FbMTRdXVswXSktMioodFthWzEyXV1bMF0rdFthWzNdXVswXSkrMyoodFthWzJdXVswXSt0W2FbOF1dWzBdKSkvOSwoLTQqdFthWzE1XV1bMV0tdFthWzBdXVsxXSs2Kih0W2FbMTFdXVsxXSt0W2FbMTRdXVsxXSktMioodFthWzEyXV1bMV0rdFthWzNdXVsxXSkrMyoodFthWzJdXVsxXSt0W2FbOF1dWzFdKSkvOV0pO3RoaXMuZmlndXJlcy5wdXNoKHt0eXBlOiJwYXRjaCIsY29vcmRzOm5ldyBJbnQzMkFycmF5KGEpLGNvbG9yczpuZXcgSW50MzJBcnJheShzKX0pfX1fZGVjb2RlVHlwZTdTaGFkaW5nKGUpe2NvbnN0IHQ9dGhpcy5jb29yZHMsaT10aGlzLmNvbG9ycyxhPW5ldyBJbnQzMkFycmF5KDE2KSxzPW5ldyBJbnQzMkFycmF5KDQpO2Zvcig7ZS5oYXNEYXRhOyl7Y29uc3Qgcj1lLnJlYWRGbGFnKCk7aWYoISgwPD1yJiZyPD0zKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlVua25vd24gdHlwZTcgZmxhZyIpO2NvbnN0IG49dC5sZW5ndGg7Zm9yKGxldCBpPTAsYT0wIT09cj8xMjoxNjtpPGE7aSsrKXQucHVzaChlLnJlYWRDb29yZGluYXRlKCkpO2NvbnN0IG89aS5sZW5ndGg7Zm9yKGxldCB0PTAsYT0wIT09cj8yOjQ7dDxhO3QrKylpLnB1c2goZS5yZWFkQ29tcG9uZW50cygpKTtsZXQgZyxjLGgsbDtzd2l0Y2gocil7Y2FzZSAwOmFbMTJdPW4rMzthWzEzXT1uKzQ7YVsxNF09bis1O2FbMTVdPW4rNjthWzhdPW4rMjthWzldPW4rMTM7YVsxMF09bisxNDthWzExXT1uKzc7YVs0XT1uKzE7YVs1XT1uKzEyO2FbNl09bisxNTthWzddPW4rODthWzBdPW47YVsxXT1uKzExO2FbMl09bisxMDthWzNdPW4rOTtzWzJdPW8rMTtzWzNdPW8rMjtzWzBdPW87c1sxXT1vKzM7YnJlYWs7Y2FzZSAxOmc9YVsxMl07Yz1hWzEzXTtoPWFbMTRdO2w9YVsxNV07YVsxMl09bDthWzEzXT1uKzA7YVsxNF09bisxO2FbMTVdPW4rMjthWzhdPWg7YVs5XT1uKzk7YVsxMF09bisxMDthWzExXT1uKzM7YVs0XT1jO2FbNV09bis4O2FbNl09bisxMTthWzddPW4rNDthWzBdPWc7YVsxXT1uKzc7YVsyXT1uKzY7YVszXT1uKzU7Zz1zWzJdO2M9c1szXTtzWzJdPWM7c1szXT1vO3NbMF09ZztzWzFdPW8rMTticmVhaztjYXNlIDI6Zz1hWzE1XTtjPWFbMTFdO2FbMTJdPWFbM107YVsxM109biswO2FbMTRdPW4rMTthWzE1XT1uKzI7YVs4XT1hWzddO2FbOV09bis5O2FbMTBdPW4rMTA7YVsxMV09biszO2FbNF09YzthWzVdPW4rODthWzZdPW4rMTE7YVs3XT1uKzQ7YVswXT1nO2FbMV09bis3O2FbMl09bis2O2FbM109bis1O2c9c1szXTtzWzJdPXNbMV07c1szXT1vO3NbMF09ZztzWzFdPW8rMTticmVhaztjYXNlIDM6YVsxMl09YVswXTthWzEzXT1uKzA7YVsxNF09bisxO2FbMTVdPW4rMjthWzhdPWFbMV07YVs5XT1uKzk7YVsxMF09bisxMDthWzExXT1uKzM7YVs0XT1hWzJdO2FbNV09bis4O2FbNl09bisxMTthWzddPW4rNDthWzBdPWFbM107YVsxXT1uKzc7YVsyXT1uKzY7YVszXT1uKzU7c1syXT1zWzBdO3NbM109bztzWzBdPXNbMV07c1sxXT1vKzF9dGhpcy5maWd1cmVzLnB1c2goe3R5cGU6InBhdGNoIixjb29yZHM6bmV3IEludDMyQXJyYXkoYSksY29sb3JzOm5ldyBJbnQzMkFycmF5KHMpfSl9fV9idWlsZEZpZ3VyZUZyb21QYXRjaChlKXtjb25zdCB0PXRoaXMuZmlndXJlc1tlXTthc3NlcnQoInBhdGNoIj09PXQudHlwZSwiVW5leHBlY3RlZCBwYXRjaCBtZXNoIGZpZ3VyZSIpO2NvbnN0IGk9dGhpcy5jb29yZHMsYT10aGlzLmNvbG9ycyxzPXQuY29vcmRzLHI9dC5jb2xvcnMsbj1NYXRoLm1pbihpW3NbMF1dWzBdLGlbc1szXV1bMF0saVtzWzEyXV1bMF0saVtzWzE1XV1bMF0pLG89TWF0aC5taW4oaVtzWzBdXVsxXSxpW3NbM11dWzFdLGlbc1sxMl1dWzFdLGlbc1sxNV1dWzFdKSxnPU1hdGgubWF4KGlbc1swXV1bMF0saVtzWzNdXVswXSxpW3NbMTJdXVswXSxpW3NbMTVdXVswXSksYz1NYXRoLm1heChpW3NbMF1dWzFdLGlbc1szXV1bMV0saVtzWzEyXV1bMV0saVtzWzE1XV1bMV0pO2xldCBoPU1hdGguY2VpbCgoZy1uKSpNZXNoU2hhZGluZy5UUklBTkdMRV9ERU5TSVRZLyh0aGlzLmJvdW5kc1syXS10aGlzLmJvdW5kc1swXSkpO2g9TWF0aC5tYXgoTWVzaFNoYWRpbmcuTUlOX1NQTElUX1BBVENIX0NIVU5LU19BTU9VTlQsTWF0aC5taW4oTWVzaFNoYWRpbmcuTUFYX1NQTElUX1BBVENIX0NIVU5LU19BTU9VTlQsaCkpO2xldCBsPU1hdGguY2VpbCgoYy1vKSpNZXNoU2hhZGluZy5UUklBTkdMRV9ERU5TSVRZLyh0aGlzLmJvdW5kc1szXS10aGlzLmJvdW5kc1sxXSkpO2w9TWF0aC5tYXgoTWVzaFNoYWRpbmcuTUlOX1NQTElUX1BBVENIX0NIVU5LU19BTU9VTlQsTWF0aC5taW4oTWVzaFNoYWRpbmcuTUFYX1NQTElUX1BBVENIX0NIVU5LU19BTU9VTlQsbCkpO2NvbnN0IEM9aCsxLFE9bmV3IEludDMyQXJyYXkoKGwrMSkqQyksRT1uZXcgSW50MzJBcnJheSgobCsxKSpDKTtsZXQgdT0wO2NvbnN0IGQ9bmV3IFVpbnQ4QXJyYXkoMyksZj1uZXcgVWludDhBcnJheSgzKSxwPWFbclswXV0sbT1hW3JbMV1dLHk9YVtyWzJdXSx3PWFbclszXV0sYj1nZXRCKGwpLEQ9Z2V0QihoKTtmb3IobGV0IGU9MDtlPD1sO2UrKyl7ZFswXT0ocFswXSoobC1lKSt5WzBdKmUpL2x8MDtkWzFdPShwWzFdKihsLWUpK3lbMV0qZSkvbHwwO2RbMl09KHBbMl0qKGwtZSkreVsyXSplKS9sfDA7ZlswXT0obVswXSoobC1lKSt3WzBdKmUpL2x8MDtmWzFdPShtWzFdKihsLWUpK3dbMV0qZSkvbHwwO2ZbMl09KG1bMl0qKGwtZSkrd1syXSplKS9sfDA7Zm9yKGxldCB0PTA7dDw9aDt0KyssdSsrKXtpZighKDAhPT1lJiZlIT09bHx8MCE9PXQmJnQhPT1oKSljb250aW51ZTtsZXQgcj0wLG49MCxvPTA7Zm9yKGxldCBhPTA7YTw9MzthKyspZm9yKGxldCBnPTA7Zzw9MztnKyssbysrKXtjb25zdCBjPWJbZV1bYV0qRFt0XVtnXTtyKz1pW3Nbb11dWzBdKmM7bis9aVtzW29dXVsxXSpjfVFbdV09aS5sZW5ndGg7aS5wdXNoKFtyLG5dKTtFW3VdPWEubGVuZ3RoO2NvbnN0IGc9bmV3IFVpbnQ4QXJyYXkoMyk7Z1swXT0oZFswXSooaC10KStmWzBdKnQpL2h8MDtnWzFdPShkWzFdKihoLXQpK2ZbMV0qdCkvaHwwO2dbMl09KGRbMl0qKGgtdCkrZlsyXSp0KS9ofDA7YS5wdXNoKGcpfX1RWzBdPXNbMF07RVswXT1yWzBdO1FbaF09c1szXTtFW2hdPXJbMV07UVtDKmxdPXNbMTJdO0VbQypsXT1yWzJdO1FbQypsK2hdPXNbMTVdO0VbQypsK2hdPXJbM107dGhpcy5maWd1cmVzW2VdPXt0eXBlOiJsYXR0aWNlIixjb29yZHM6USxjb2xvcnM6RSx2ZXJ0aWNlc1BlclJvdzpDfX1fdXBkYXRlQm91bmRzKCl7bGV0IGU9dGhpcy5jb29yZHNbMF1bMF0sdD10aGlzLmNvb3Jkc1swXVsxXSxpPWUsYT10O2ZvcihsZXQgcz0xLHI9dGhpcy5jb29yZHMubGVuZ3RoO3M8cjtzKyspe2NvbnN0IHI9dGhpcy5jb29yZHNbc11bMF0sbj10aGlzLmNvb3Jkc1tzXVsxXTtlPWU+cj9yOmU7dD10Pm4/bjp0O2k9aTxyP3I6aTthPWE8bj9uOmF9dGhpcy5ib3VuZHM9W2UsdCxpLGFdfV9wYWNrRGF0YSgpe2xldCBlLHQsaSxhO2NvbnN0IHM9dGhpcy5jb29yZHMscj1uZXcgRmxvYXQzMkFycmF5KDIqcy5sZW5ndGgpO2ZvcihlPTAsaT0wLHQ9cy5sZW5ndGg7ZTx0O2UrKyl7Y29uc3QgdD1zW2VdO3JbaSsrXT10WzBdO3JbaSsrXT10WzFdfXRoaXMuY29vcmRzPXI7Y29uc3Qgbj10aGlzLmNvbG9ycyxvPW5ldyBVaW50OEFycmF5KDMqbi5sZW5ndGgpO2ZvcihlPTAsaT0wLHQ9bi5sZW5ndGg7ZTx0O2UrKyl7Y29uc3QgdD1uW2VdO29baSsrXT10WzBdO29baSsrXT10WzFdO29baSsrXT10WzJdfXRoaXMuY29sb3JzPW87Y29uc3QgZz10aGlzLmZpZ3VyZXM7Zm9yKGU9MCx0PWcubGVuZ3RoO2U8dDtlKyspe2NvbnN0IHQ9Z1tlXSxzPXQuY29vcmRzLHI9dC5jb2xvcnM7Zm9yKGk9MCxhPXMubGVuZ3RoO2k8YTtpKyspe3NbaV0qPTI7cltpXSo9M319fWdldElSKCl7Y29uc3R7Ym91bmRzOmV9PXRoaXM7aWYoZVsyXS1lWzBdPT0wfHxlWzNdLWVbMV09PTApdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIE1lc2hTaGFkaW5nIGJvdW5kczogWyR7ZX1dLmApO3JldHVyblsiTWVzaCIsdGhpcy5zaGFkaW5nVHlwZSx0aGlzLmNvb3Jkcyx0aGlzLmNvbG9ycyx0aGlzLmZpZ3VyZXMsZSx0aGlzLmJib3gsdGhpcy5iYWNrZ3JvdW5kXX19Y2xhc3MgRHVtbXlTaGFkaW5nIGV4dGVuZHMgQmFzZVNoYWRpbmd7Z2V0SVIoKXtyZXR1cm5bIkR1bW15Il19fWZ1bmN0aW9uIGdldFRpbGluZ1BhdHRlcm5JUihlLHQsYSl7Y29uc3Qgcz1sb29rdXBNYXRyaXgodC5nZXRBcnJheSgiTWF0cml4IiksaSkscj1sb29rdXBOb3JtYWxSZWN0KHQuZ2V0QXJyYXkoIkJCb3giKSxudWxsKTtpZighcnx8clsyXS1yWzBdPT0wfHxyWzNdLXJbMV09PTApdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIGdldFRpbGluZ1BhdHRlcm5JUiAvQkJveCBhcnJheS4iKTtjb25zdCBuPXQuZ2V0KCJYU3RlcCIpO2lmKCJudW1iZXIiIT10eXBlb2Ygbil0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkludmFsaWQgZ2V0VGlsaW5nUGF0dGVybklSIC9YU3RlcCB2YWx1ZS4iKTtjb25zdCBvPXQuZ2V0KCJZU3RlcCIpO2lmKCJudW1iZXIiIT10eXBlb2Ygbyl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkludmFsaWQgZ2V0VGlsaW5nUGF0dGVybklSIC9ZU3RlcCB2YWx1ZS4iKTtjb25zdCBnPXQuZ2V0KCJQYWludFR5cGUiKTtpZighTnVtYmVyLmlzSW50ZWdlcihnKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkludmFsaWQgZ2V0VGlsaW5nUGF0dGVybklSIC9QYWludFR5cGUgdmFsdWUuIik7Y29uc3QgYz10LmdldCgiVGlsaW5nVHlwZSIpO2lmKCFOdW1iZXIuaXNJbnRlZ2VyKGMpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBnZXRUaWxpbmdQYXR0ZXJuSVIgL1RpbGluZ1R5cGUgdmFsdWUuIik7cmV0dXJuWyJUaWxpbmdQYXR0ZXJuIixhLGUscyxyLG4sbyxnLGNdfWNvbnN0IHdhPVsxLjM4NzcsMSwxLDEsLjk3ODAxLC45MjQ4MiwuODk1NTIsLjkxMTMzLC44MTk4OCwuOTc1NjYsLjk4MTUyLC45MzU0OCwuOTM1NDgsMS4yNzk4LC44NTI4NCwuOTI3OTQsMSwuOTYxMzQsMS41NDY1NywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjgyODQ1LC44Mjg0NSwuODUyODQsLjg1Mjg0LC44NTI4NCwuNzU4NTksLjkyMTM4LC44MzkwOCwuNzc2MiwuNzMyOTMsLjg3Mjg5LC43MzEzMywuNzUxNCwuODE5MjEsLjg3MzU2LC45NTk1OCwuNTk1MjYsLjc1NzI3LC42OTIyNSwxLjA0OTI0LC45MTIxLC44Njk0MywuNzk3OTUsLjg4MTk4LC43Nzk1OCwuNzA4NjQsLjgxMDU1LC45MDM5OSwuODg2NTMsLjk2MDE3LC44MjU3NywuNzc4OTIsLjc4MjU3LC45NzUwNywxLjU0NjU3LC45NzUwNywuODUyODQsLjg5NTUyLC45MDE3NiwuODg3NjIsLjg3ODUsLjc1MjQxLC44Nzg1LC45MDUxOCwuOTUwMTUsLjc3NjE4LC44Nzg1LC44ODQwMSwuOTE5MTYsLjg2MzA0LC44ODQwMSwuOTE0ODgsLjg3ODUsLjg4MDEsLjg3ODUsLjg3ODUsLjkxMzQzLC43MTczLDEuMDQxMDYsLjg3ODUsLjg1MDc1LC45NTc5NCwuODI2MTYsLjg1MTYyLC43OTQ5MiwuODgzMzEsMS42OTgwOCwuODgzMzEsLjg1Mjg0LC45NzgwMSwuODk1NTIsLjkxMTMzLC44OTU1MiwuOTExMzMsMS43ODAxLC44OTU1MiwxLjI0NDg3LDEuMTMyNTQsMS4xMjQwMSwuOTY4MzksLjg1Mjg0LC42ODc4NywuNzA2NDUsLjg1NTkyLC45MDc0NywxLjAxNDY2LDEuMDA4OCwuOTAzMjMsMSwxLjA3NDYzLDEsLjkxMDU2LC43NTgwNiwxLjE5MTE4LC45NjgzOSwuNzg4NjQsLjgyODQ1LC44NDEzMywuNzU4NTksLjgzOTA4LC44MzkwOCwuODM5MDgsLjgzOTA4LC44MzkwOCwuODM5MDgsLjc3NTM5LC43MzI5MywuNzMxMzMsLjczMTMzLC43MzEzMywuNzMxMzMsLjk1OTU4LC45NTk1OCwuOTU5NTgsLjk1OTU4LC44ODUwNiwuOTEyMSwuODY5NDMsLjg2OTQzLC44Njk0MywuODY5NDMsLjg2OTQzLC44NTI4NCwuODc1MDgsLjkwMzk5LC45MDM5OSwuOTAzOTksLjkwMzk5LC43Nzg5MiwuNzk3OTUsLjkwODA3LC44ODc2MiwuODg3NjIsLjg4NzYyLC44ODc2MiwuODg3NjIsLjg4NzYyLC44NzE1LC43NTI0MSwuOTA1MTgsLjkwNTE4LC45MDUxOCwuOTA1MTgsLjg4NDAxLC44ODQwMSwuODg0MDEsLjg4NDAxLC44Nzg1LC44Nzg1LC44ODAxLC44ODAxLC44ODAxLC44ODAxLC44ODAxLC45MDc0NywuODkwNDksLjg3ODUsLjg3ODUsLjg3ODUsLjg3ODUsLjg1MTYyLC44Nzg1LC44NTE2MiwuODM5MDgsLjg4NzYyLC44MzkwOCwuODg3NjIsLjgzOTA4LC44ODc2MiwuNzMyOTMsLjc1MjQxLC43MzI5MywuNzUyNDEsLjczMjkzLC43NTI0MSwuNzMyOTMsLjc1MjQxLC44NzI4OSwuODMwMTYsLjg4NTA2LC45MzEyNSwuNzMxMzMsLjkwNTE4LC43MzEzMywuOTA1MTgsLjczMTMzLC45MDUxOCwuNzMxMzMsLjkwNTE4LC43MzEzMywuOTA1MTgsLjgxOTIxLC43NzYxOCwuODE5MjEsLjc3NjE4LC44MTkyMSwuNzc2MTgsMSwxLC44NzM1NiwuODc4NSwuOTEwNzUsLjg5NjA4LC45NTk1OCwuODg0MDEsLjk1OTU4LC44ODQwMSwuOTU5NTgsLjg4NDAxLC45NTk1OCwuODg0MDEsLjk1OTU4LC44ODQwMSwuNzYyMjksLjkwMTY3LC41OTUyNiwuOTE5MTYsMSwxLC44NjMwNCwuNjkyMjUsLjg4NDAxLDEsMSwuNzA0MjQsLjc5NDY4LC45MTkyNiwuODgxNzUsLjcwODIzLC45NDkwMywuOTEyMSwuODc4NSwxLDEsLjkxMjEsLjg3ODUsLjg3ODAyLC44ODY1NiwuODc4NSwuODY5NDMsLjg4MDEsLjg2OTQzLC44ODAxLC44Njk0MywuODgwMSwuODc0MDIsLjg5MjkxLC43Nzk1OCwuOTEzNDMsMSwxLC43Nzk1OCwuOTEzNDMsLjcwODY0LC43MTczLC43MDg2NCwuNzE3MywuNzA4NjQsLjcxNzMsLjcwODY0LC43MTczLDEsMSwuODEwNTUsLjc1ODQxLC44MTA1NSwxLjA2NDUyLC45MDM5OSwuODc4NSwuOTAzOTksLjg3ODUsLjkwMzk5LC44Nzg1LC45MDM5OSwuODc4NSwuOTAzOTksLjg3ODUsLjkwMzk5LC44Nzg1LC45NjAxNywuOTU3OTQsLjc3ODkyLC44NTE2MiwuNzc4OTIsLjc4MjU3LC43OTQ5MiwuNzgyNTcsLjc5NDkyLC43ODI1NywuNzk0OTIsLjkyOTcsLjU2ODkyLC44MzkwOCwuODg3NjIsLjc3NTM5LC44NzE1LC44NzUwOCwuODkwNDksMSwxLC44MTA1NSwxLjA0MTA2LDEuMjA1MjgsMS4yMDUyOCwxLDEuMTU1NDMsLjcwNjc0LC45ODM4NywuOTQ3MjEsMS4zMzQzMSwxLjQ1ODk0LC45NTE2MSwxLjA2MzAzLC44MzkwOCwuODAzNTIsLjU3MTg0LC42OTY1LC41NjI4OSwuODIwMDEsLjU2MDI5LC44MTIzNSwxLjAyOTg4LC44MzkwOCwuNzc2MiwuNjgxNTYsLjgwMzY3LC43MzEzMywuNzgyNTcsLjg3MzU2LC44Njk0MywuOTU5NTgsLjc1NzI3LC44OTAxOSwxLjA0OTI0LC45MTIxLC43NjQ4LC44Njk0MywuODczNTYsLjc5Nzk1LC43ODI3NSwuODEwNTUsLjc3ODkyLC45NzYyLC44MjU3NywuOTk4MTksLjg0ODk2LC45NTk1OCwuNzc4OTIsLjk2MTA4LDEuMDE0MDcsLjg5MDQ5LDEuMDI5ODgsLjk0MjExLC45NjEwOCwuODkzNiwuODQwMjEsLjg3ODQyLC45NjM5OSwuNzkxMDksLjg5MDQ5LDEuMDA4MTMsMS4wMjk4OCwuODYwNzcsLjg3NDQ1LC45MjA5OSwuODQ3MjMsLjg2NTEzLC44ODAxLC43NTYzOCwuODU3MTQsLjc4MjE2LC43OTU4NiwuODc5NjUsLjk0MjExLC45Nzc0NywuNzgyODcsLjk3OTI2LC44NDk3MSwxLjAyOTg4LC45NDIxMSwuODgwMSwuOTQyMTEsLjg0OTcxLC43MzEzMywxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuOTAyNjQsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjkwNTE4LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC45MDU0OCwxLDEsMSwxLDEsMSwuOTYwMTcsLjk1Nzk0LC45NjAxNywuOTU3OTQsLjk2MDE3LC45NTc5NCwuNzc4OTIsLjg1MTYyLDEsMSwuODk1NTIsLjkwNTI3LDEsLjkwMzYzLC45Mjc5NCwuOTI3OTQsLjkyNzk0LC45Mjc5NCwuODcwMTIsLjg3MDEyLC44NzAxMiwuODk1NTIsLjg5NTUyLDEuNDIyNTksLjcxMTQzLDEuMDYxNTIsMSwxLDEuMDMzNzIsMS4wMzM3MiwuOTcxNzEsMS40OTU2LDIuMjgwNywuOTM4MzUsLjgzNDA2LC45MTEzMywuODQxMDcsLjkxMTMzLDEsMSwxLC43MjAyMSwxLDEuMjMxMDgsLjgzNDg5LC44ODUyNSwuODg1MjUsLjgxNDk5LC45MDUyNywxLjgxMDU1LC45MDUyNywxLjgxMDU1LDEuMzEwMDYsMS41MzcxMSwuOTQ0MzQsMS4wODY5NiwxLC45NTAxOCwuNzcxOTIsLjg1Mjg0LC45MDc0NywxLjE3NTM0LC42OTgyNSwuOTcxNiwxLjM3MDc3LC45MDc0NywuOTA3NDcsLjg1MzU2LC45MDc0NywuOTA3NDcsMS40NDk0NywuODUyODQsLjg5NDEsLjg5NDEsLjcwNTcyLC44LC43MDU3MiwuNzA1NzIsLjcwNTcyLC43MDU3MiwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjk5ODYyLC45OTg2MiwxLDEsMSwxLDEsMS4wODAwNCwuOTEwMjcsMSwxLDEsLjk5ODYyLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC45MDcyNywuOTA3MjcsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDFdLGJhPXtsaW5lSGVpZ2h0OjEuMjIwNyxsaW5lR2FwOi4yMjA3fSxEYT1bMS4zODc3LDEsMSwxLC45NzgwMSwuOTI0ODIsLjg5NTUyLC45MTEzMywuODE5ODgsLjk3NTY2LC45ODE1MiwuOTM1NDgsLjkzNTQ4LDEuMjc5OCwuODUyODQsLjkyNzk0LDEsLjk2MTM0LDEuNTYyMzksLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC44Mjg0NSwuODI4NDUsLjg1Mjg0LC44NTI4NCwuODUyODQsLjc1ODU5LC45MjEzOCwuODM5MDgsLjc3NjIsLjcxODA1LC44NzI4OSwuNzMxMzMsLjc1MTQsLjgxOTIxLC44NzM1NiwuOTU5NTgsLjU5NTI2LC43NTcyNywuNjkyMjUsMS4wNDkyNCwuOTA4NzIsLjg1OTM4LC43OTc5NSwuODcwNjgsLjc3OTU4LC42OTc2NiwuODEwNTUsLjkwMzk5LC44ODY1MywuOTYwNjgsLjgyNTc3LC43Nzg5MiwuNzgyNTcsLjk3NTA3LDEuNTI5LC45NzUwNywuODUyODQsLjg5NTUyLC45MDE3NiwuOTQ5MDgsLjg2NDExLC43NDAxMiwuODY0MTEsLjg4MzIzLC45NTAxNSwuODY0MTEsLjg2MzMxLC44ODQwMSwuOTE5MTYsLjg2MzA0LC44ODQwMSwuOTAzOSwuODYzMzEsLjg2MzMxLC44NjQxMSwuODY0MTEsLjkwNDY0LC43MDg1MiwxLjA0MTA2LC44NjMzMSwuODQzNzIsLjk1Nzk0LC44MjYxNiwuODQ1NDgsLjc5NDkyLC44ODMzMSwxLjY5ODA4LC44ODMzMSwuODUyODQsLjk3ODAxLC44OTU1MiwuOTExMzMsLjg5NTUyLC45MTEzMywxLjc4MDEsLjg5NTUyLDEuMjQ0ODcsMS4xMzI1NCwxLjE5MTI5LC45NjgzOSwuODUyODQsLjY4Nzg3LC43MDY0NSwuODU1OTIsLjkwNzQ3LDEuMDE0NjYsMS4wMDg4LC45MDMyMywxLDEuMDc0NjMsMSwuOTEwNTYsLjc1ODA2LDEuMTkxMTgsLjk2ODM5LC43ODg2NCwuODI4NDUsLjg0MTMzLC43NTg1OSwuODM5MDgsLjgzOTA4LC44MzkwOCwuODM5MDgsLjgzOTA4LC44MzkwOCwuNzc1MzksLjcxODA1LC43MzEzMywuNzMxMzMsLjczMTMzLC43MzEzMywuOTU5NTgsLjk1OTU4LC45NTk1OCwuOTU5NTgsLjg4NTA2LC45MDg3MiwuODU5MzgsLjg1OTM4LC44NTkzOCwuODU5MzgsLjg1OTM4LC44NTI4NCwuODcwNjgsLjkwMzk5LC45MDM5OSwuOTAzOTksLjkwMzk5LC43Nzg5MiwuNzk3OTUsLjkwODA3LC45NDkwOCwuOTQ5MDgsLjk0OTA4LC45NDkwOCwuOTQ5MDgsLjk0OTA4LC44NTg4NywuNzQwMTIsLjg4MzIzLC44ODMyMywuODgzMjMsLjg4MzIzLC44ODQwMSwuODg0MDEsLjg4NDAxLC44ODQwMSwuODc4NSwuODYzMzEsLjg2MzMxLC44NjMzMSwuODYzMzEsLjg2MzMxLC44NjMzMSwuOTA3NDcsLjg5MDQ5LC44NjMzMSwuODYzMzEsLjg2MzMxLC44NjMzMSwuODQ1NDgsLjg2NDExLC44NDU0OCwuODM5MDgsLjk0OTA4LC44MzkwOCwuOTQ5MDgsLjgzOTA4LC45NDkwOCwuNzE4MDUsLjc0MDEyLC43MTgwNSwuNzQwMTIsLjcxODA1LC43NDAxMiwuNzE4MDUsLjc0MDEyLC44NzI4OSwuNzk1MzgsLjg4NTA2LC45MjcyNiwuNzMxMzMsLjg4MzIzLC43MzEzMywuODgzMjMsLjczMTMzLC44ODMyMywuNzMxMzMsLjg4MzIzLC43MzEzMywuODgzMjMsLjgxOTIxLC44NjQxMSwuODE5MjEsLjg2NDExLC44MTkyMSwuODY0MTEsMSwxLC44NzM1NiwuODYzMzEsLjkxMDc1LC44Nzc3LC45NTk1OCwuODg0MDEsLjk1OTU4LC44ODQwMSwuOTU5NTgsLjg4NDAxLC45NTk1OCwuODg0MDEsLjk1OTU4LC44ODQwMSwuNzY0NjcsLjkwMTY3LC41OTUyNiwuOTE5MTYsMSwxLC44NjMwNCwuNjkyMjUsLjg4NDAxLDEsMSwuNzA0MjQsLjc3MzEyLC45MTkyNiwuODgxNzUsLjcwODIzLC45NDkwMywuOTA4NzIsLjg2MzMxLDEsMSwuOTA4NzIsLjg2MzMxLC44NjkwNiwuODgxMTYsLjg2MzMxLC44NTkzOCwuODYzMzEsLjg1OTM4LC44NjMzMSwuODU5MzgsLjg2MzMxLC44NzQwMiwuODY1NDksLjc3OTU4LC45MDQ2NCwxLDEsLjc3OTU4LC45MDQ2NCwuNjk3NjYsLjcwODUyLC42OTc2NiwuNzA4NTIsLjY5NzY2LC43MDg1MiwuNjk3NjYsLjcwODUyLDEsMSwuODEwNTUsLjc1ODQxLC44MTA1NSwxLjA2NDUyLC45MDM5OSwuODYzMzEsLjkwMzk5LC44NjMzMSwuOTAzOTksLjg2MzMxLC45MDM5OSwuODYzMzEsLjkwMzk5LC44NjMzMSwuOTAzOTksLjg2MzMxLC45NjA2OCwuOTU3OTQsLjc3ODkyLC44NDU0OCwuNzc4OTIsLjc4MjU3LC43OTQ5MiwuNzgyNTcsLjc5NDkyLC43ODI1NywuNzk0OTIsLjkyOTcsLjU2ODkyLC44MzkwOCwuOTQ5MDgsLjc3NTM5LC44NTg4NywuODcwNjgsLjg5MDQ5LDEsMSwuODEwNTUsMS4wNDEwNiwxLjIwNTI4LDEuMjA1MjgsMSwxLjE1NTQzLC43MDA4OCwuOTgzODcsLjk0NzIxLDEuMzM0MzEsMS40NTg5NCwuOTUxNjEsMS40ODM4NywuODM5MDgsLjgwMzUyLC41NzExOCwuNjk2NSwuNTYzNDcsLjc5MTc5LC41NTg1MywuODAzNDYsMS4wMjk4OCwuODM5MDgsLjc3NjIsLjY3MTc0LC44NjAzNiwuNzMxMzMsLjc4MjU3LC44NzM1NiwuODY0NDEsLjk1OTU4LC43NTcyNywuODkwMTksMS4wNDkyNCwuOTA4NzIsLjc0ODg5LC44NTkzOCwuODc4OTEsLjc5Nzk1LC43OTU3LC44MTA1NSwuNzc4OTIsLjk3NDQ3LC44MjU3NywuOTc0NjYsLjg3MTc5LC45NTk1OCwuNzc4OTIsLjk0MjUyLC45NTYxMiwuODc1MywxLjAyOTg4LC45MjczMywuOTQyNTIsLjg3NDExLC44NDAyMSwuODcyOCwuOTU2MTIsLjc0MDgxLC44NzUzLDEuMDIxODksMS4wMjk4OCwuODQ4MTQsLjg3NDQ1LC45MTgyMiwuODQ3MjMsLjg1NjY4LC44NjMzMSwuODEzNDQsLjg3NTgxLC43NjQyMiwuODIwNDYsLjk2MDU3LC45MjczMywuOTkzNzUsLjc4MDIyLC45NTQ1MiwuODYwMTUsMS4wMjk4OCwuOTI3MzMsLjg2MzMxLC45MjczMywuODYwMTUsLjczMTMzLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC45MDYzMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuODgzMjMsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjg1MTc0LDEsMSwxLDEsMSwxLC45NjA2OCwuOTU3OTQsLjk2MDY4LC45NTc5NCwuOTYwNjgsLjk1Nzk0LC43Nzg5MiwuODQ1NDgsMSwxLC44OTU1MiwuOTA1MjcsMSwuOTAzNjMsLjkyNzk0LC45Mjc5NCwuOTI3OTQsLjg5ODA3LC44NzAxMiwuODcwMTIsLjg3MDEyLC44OTU1MiwuODk1NTIsMS40MjI1OSwuNzEwOTQsMS4wNjE1MiwxLDEsMS4wMzM3MiwxLjAzMzcyLC45NzE3MSwxLjQ5NTYsMi4yODA3LC45Mjk3MiwuODM0MDYsLjkxMTMzLC44MzMyNiwuOTExMzMsMSwxLDEsLjcyMDIxLDEsMS4yMzEwOCwuODM0ODksLjg4NTI1LC44ODUyNSwuODE0OTksLjkwNjE2LDEuODEwNTUsLjkwNTI3LDEuODEwNTUsMS4zMTA3LDEuNTM3MTEsLjk0NDM0LDEuMDg2OTYsMSwuOTUwMTgsLjc3MTkyLC44NTI4NCwuOTA3NDcsMS4xNzUzNCwuNjk4MjUsLjk3MTYsMS4zNzA3NywuOTA3NDcsLjkwNzQ3LC44NTM1NiwuOTA3NDcsLjkwNzQ3LDEuNDQ5NDcsLjg1Mjg0LC44OTQxLC44OTQxLC43MDU3MiwuOCwuNzA1NzIsLjcwNTcyLC43MDU3MiwuNzA1NzIsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC45OTg2MiwuOTk4NjIsMSwxLDEsMSwxLDEuMDgwMDQsLjkxMDI3LDEsMSwxLC45OTg2MiwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuOTA3MjcsLjkwNzI3LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxXSxGYT17bGluZUhlaWdodDoxLjIyMDcsbGluZUdhcDouMjIwN30sU2E9WzEuMzg3NywxLDEsMSwxLjE3MjIzLDEuMTI5MywuODk1NTIsLjkxMTMzLC44MDM5NSwxLjAyMjY5LDEuMTU2MDEsLjkxMDU2LC45MTA1NiwxLjI3OTgsLjg1Mjg0LC44OTgwNywxLC45MDg2MSwxLjM5NTQzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTYzMDksLjk2MzA5LC44NTI4NCwuODUyODQsLjg1Mjg0LC44MzMxOSwuODgwNzEsLjg2NzUsLjgxNTUyLC43MjM0NiwuODUxOTMsLjczMjA2LC43NTIyLC44MTEwNSwuODYyNzUsLjkwNjg1LC42Mzc3LC43Nzg5MiwuNzU1OTMsMS4wMjYzOCwuODkyNDksLjg0MTE4LC43NzQ1MiwuODUzNzQsLjc1MTg2LC42Nzc4OSwuNzk3NzYsLjg4ODQ0LC44NTA2NiwuOTQzMDksLjc3ODE4LC43MzA2LC43NjY1OSwxLjEwMzY5LDEuMzgzMTMsMS4xMDM2OSwxLjA2MTM5LC44OTU1MiwuODczOSwuOTI0NSwuOTI0NSwuODMyMDMsLjkyNDUsLjg1ODY1LDEuMDk4NDIsLjkyNDUsLjkyNDUsMS4wMzI5NywxLjA3NjkyLC45MDkxOCwxLjAzMjk3LC45NDk1OSwuOTI0NSwuOTIyNzQsLjkyNDUsLjkyNDUsMS4wMjkzMywuNzc4MzIsMS4yMDU2MiwuOTI0NSwuODkxNiwuOTg5ODYsLjg2NjIxLC44OTQ1MywuNzkwMDQsLjk0MTUyLDEuNzcyNTYsLjk0MTUyLC44NTI4NCwuOTc4MDEsLjg5NTUyLC45MTEzMywuODk1NTIsLjkxMTMzLDEuOTE3MjksLjg5NTUyLDEuMTc4ODksMS4xMzI1NCwxLjE2MzU5LC45MjA5OCwuODUyODQsLjY4Nzg3LC43MTM1MywuODQ3MzcsLjkwNzQ3LDEuMDA4OCwxLjAwNDQsLjg3NjgzLDEsMS4wOTA5MSwxLC45MjIyOSwuNzM5LDEuMTU2NDIsLjkyMDk4LC43NjI4OCwuODA1MDQsLjgwOTcyLC43NTg1OSwuODY3NSwuODY3NSwuODY3NSwuODY3NSwuODY3NSwuODY3NSwuNzYzMTgsLjcyMzQ2LC43MzIwNiwuNzMyMDYsLjczMjA2LC43MzIwNiwuOTA2ODUsLjkwNjg1LC45MDY4NSwuOTA2ODUsLjg2NDc3LC44OTI0OSwuODQxMTgsLjg0MTE4LC44NDExOCwuODQxMTgsLjg0MTE4LC44NTI4NCwuODQ1NTcsLjg4ODQ0LC44ODg0NCwuODg4NDQsLjg4ODQ0LC43MzA2LC43NzQ1MiwuODYzMzEsLjkyNDUsLjkyNDUsLjkyNDUsLjkyNDUsLjkyNDUsLjkyNDUsLjg0ODQzLC44MzIwMywuODU4NjUsLjg1ODY1LC44NTg2NSwuODU4NjUsLjgyNjAxLC44MjYwMSwuODI2MDEsLjgyNjAxLC45NDQ2OSwuOTI0NSwuOTIyNzQsLjkyMjc0LC45MjI3NCwuOTIyNzQsLjkyMjc0LC45MDc0NywuODY2NTEsLjkyNDUsLjkyNDUsLjkyNDUsLjkyNDUsLjg5NDUzLC45MjQ1LC44OTQ1MywuODY3NSwuOTI0NSwuODY3NSwuOTI0NSwuODY3NSwuOTI0NSwuNzIzNDYsLjgzMjAzLC43MjM0NiwuODMyMDMsLjcyMzQ2LC44MzIwMywuNzIzNDYsLjgzMjAzLC44NTE5MywuODg3NSwuODY0NzcsLjk5MDM0LC43MzIwNiwuODU4NjUsLjczMjA2LC44NTg2NSwuNzMyMDYsLjg1ODY1LC43MzIwNiwuODU4NjUsLjczMjA2LC44NTg2NSwuODExMDUsLjkyNDUsLjgxMTA1LC45MjQ1LC44MTEwNSwuOTI0NSwxLDEsLjg2Mjc1LC45MjQ1LC45MDg3MiwuOTM1OTEsLjkwNjg1LC44MjYwMSwuOTA2ODUsLjgyNjAxLC45MDY4NSwuODI2MDEsLjkwNjg1LDEuMDMyOTcsLjkwNjg1LC44MjYwMSwuNzc4OTYsMS4wNTYxMSwuNjM3NywxLjA3NjkyLDEsMSwuOTA5MTgsLjc1NTkzLDEuMDMyOTcsMSwxLC43NjAzMiwuOTM3NSwuOTgxNTYsLjkzNDA3LC43NzI2MSwxLjExNDI5LC44OTI0OSwuOTI0NSwxLDEsLjg5MjQ5LC45MjQ1LC45MjUzNCwuODY2OTgsLjkyNDUsLjg0MTE4LC45MjI3NCwuODQxMTgsLjkyMjc0LC44NDExOCwuOTIyNzQsLjg2NjcsLjg2MjkxLC43NTE4NiwxLjAyOTMzLDEsMSwuNzUxODYsMS4wMjkzMywuNjc3ODksLjc3ODMyLC42Nzc4OSwuNzc4MzIsLjY3Nzg5LC43NzgzMiwuNjc3ODksLjc3ODMyLDEsMSwuNzk3NzYsLjk3NjU1LC43OTc3NiwxLjIzMDIzLC44ODg0NCwuOTI0NSwuODg4NDQsLjkyNDUsLjg4ODQ0LC45MjQ1LC44ODg0NCwuOTI0NSwuODg4NDQsLjkyNDUsLjg4ODQ0LC45MjQ1LC45NDMwOSwuOTg5ODYsLjczMDYsLjg5NDUzLC43MzA2LC43NjY1OSwuNzkwMDQsLjc2NjU5LC43OTAwNCwuNzY2NTksLjc5MDA0LDEuMDkyMzEsLjU0ODczLC44Njc1LC45MjQ1LC43NjMxOCwuODQ4NDMsLjg0NTU3LC44NjY1MSwxLDEsLjc5Nzc2LDEuMjA1NjIsMS4xODYyMiwxLjE4NjIyLDEsMS4xNDM3LC42NzAwOSwuOTYzMzQsLjkzNjk1LDEuMzUxOTEsMS40MDkwOSwuOTUxNjEsMS40ODM4NywuODY3NSwuOTA4NjEsLjYxOTIsLjczNjMsLjY0ODI0LC44MjQxMSwuNTYzMjEsLjg1Njk2LDEuMjM1MTYsLjg2NzUsLjgxNTUyLC43Mjg2LC44NDEzNCwuNzMyMDYsLjc2NjU5LC44NjI3NSwuODQzNjksLjkwNjg1LC43Nzg5MiwuODU4NzEsMS4wMjYzOCwuODkyNDksLjc1ODI4LC44NDExOCwuODU5ODQsLjc3NDUyLC43NjQ2NiwuNzk3NzYsLjczMDYsLjkwNzgyLC43NzgxOCwuOTAzLC44NzI5MSwuOTA2ODUsLjczMDYsLjk5MDU4LDEuMDM2NjcsLjk0NjM1LDEuMjM1MTYsLjk4NDksLjk5MDU4LC45MjM5MywuODkxNiwuOTQyLDEuMDM2NjcsLjc1MDI2LC45NDYzNSwxLjAyOTcsMS4yMzUxNiwuOTA5MTgsLjk0MDQ4LC45ODIxNywuODk3NDYsLjg0MTUzLC45MjI3NCwuODI1MDcsLjg4ODMyLC44NDQzOCwuODgxNzgsMS4wMzUyNSwuOTg0OSwxLjAwMjI1LC43ODA4NiwuOTcyNDgsLjg5NDA0LDEuMjM1MTYsLjk4NDksLjkyMjc0LC45ODQ5LC44OTQwNCwuNzMyMDYsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjg5NjkzLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC44NTg2NSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuOTA5MzMsMSwxLDEsMSwxLDEsLjk0MzA5LC45ODk4NiwuOTQzMDksLjk4OTg2LC45NDMwOSwuOTg5ODYsLjczMDYsLjg5NDUzLDEsMSwuODk1NTIsLjkwNTI3LDEsLjkwMTg2LDEuMTIzMDgsMS4xMjMwOCwxLjEyMzA4LDEuMTIzMDgsMS4yNTY2LDEuMjU2NiwxLjI1NjYsLjg5NTUyLC44OTU1MiwxLjQyMjU5LC42ODk5NCwxLjAzODA5LDEsMSwxLjAxNzYsMS4wMTc2LDEuMTE1MjMsMS40OTU2LDIuMDE0NjIsLjk3ODU4LC44MjYxNiwuOTExMzMsLjgzNDM3LC45MTEzMywxLDEsMSwuNzA1MDgsMSwxLjIzMTA4LC43OTgwMSwuODQ0MjYsLjg0NDI2LC43NzQsLjkwNTcyLDEuODEwNTUsLjkwNzQ5LDEuODEwNTUsMS4yODgwOSwxLjU1NDY5LC45NDQzNCwxLjA3ODA2LDEsLjk3MDk0LC43NTg5LC44NTI4NCwuOTA3NDcsMS4xOTY1OCwuNjk4MjUsLjk3NjIyLDEuMzM1MTIsLjkwNzQ3LC45MDc0NywuODUyODQsLjkwNzQ3LC45MDc0NywxLjQ0OTQ3LC44NTI4NCwuODk0MSwuODk0MSwuNzA1NzIsLjgsLjcwNTcyLC43MDU3MiwuNzA1NzIsLjcwNTcyLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuOTk4NjIsLjk5ODYyLDEsMSwxLDEsMSwxLjAzMzYsLjkxMDI3LDEsMSwxLC45OTg2MiwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLjA1ODU5LDEuMDU4NTksMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDFdLGthPXtsaW5lSGVpZ2h0OjEuMjIwNyxsaW5lR2FwOi4yMjA3fSxSYT1bMS4zODc3LDEsMSwxLDEuMTcyMjMsMS4xMjkzLC44OTU1MiwuOTExMzMsLjgwMzk1LDEuMDIyNjksMS4xNTYwMSwuOTEwNTYsLjkxMDU2LDEuMjc5OCwuODUyODQsLjg5ODA3LDEsLjkwODYxLDEuMzkwMTYsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45MTEzMywuOTExMzMsLjkxMTMzLC45NjMwOSwuOTYzMDksLjg1Mjg0LC44NTI4NCwuODUyODQsLjgzMzE5LC44ODA3MSwuODY3NSwuODE1NTIsLjczODM0LC44NTE5MywuNzMyMDYsLjc1MjIsLjgxMTA1LC44NjI3NSwuOTA2ODUsLjYzNzcsLjc3ODkyLC43NTU5MywxLjAyNjM4LC44OTM4NSwuODUxMjIsLjc3NDUyLC44NjUwMywuNzUxODYsLjY4ODg3LC43OTc3NiwuODg4NDQsLjg1MDY2LC45NDI1OCwuNzc4MTgsLjczMDYsLjc2NjU5LDEuMTAzNjksMS4zOTAxNiwxLjEwMzY5LDEuMDYxMzksLjg5NTUyLC44NzM5LC44NjEyOCwuOTQ0NjksLjg0NTcsLjk0NDY5LC44OTQ2NCwxLjA5ODQyLC44NDYzNiwuOTQ0NjksMS4wMzI5NywxLjA3NjkyLC45MDkxOCwxLjAzMjk3LC45NTg5NywuOTQ0NjksLjk0ODIsLjk0NDY5LC45NDQ2OSwxLjA0NjkyLC43ODIyMywxLjIwNTYyLC45NDQ2OSwuOTAzMzIsLjk4OTg2LC44NjYyMSwuOTA1MjcsLjc5MDA0LC45NDE1MiwxLjc3MjU2LC45NDE1MiwuODUyODQsLjk3ODAxLC44OTU1MiwuOTExMzMsLjg5NTUyLC45MTEzMywxLjkxNzI5LC44OTU1MiwxLjE3ODg5LDEuMTMyNTQsMS4wODcwNywuOTIwOTgsLjg1Mjg0LC42ODc4NywuNzEzNTMsLjg0NzM3LC45MDc0NywxLjAwODgsMS4wMDQ0LC44NzY4MywxLDEuMDkwOTEsMSwuOTIyMjksLjczOSwxLjE1NjQyLC45MjA5OCwuNzYyODgsLjgwNTA0LC44MDk3MiwuNzU4NTksLjg2NzUsLjg2NzUsLjg2NzUsLjg2NzUsLjg2NzUsLjg2NzUsLjc2MzE4LC43MzgzNCwuNzMyMDYsLjczMjA2LC43MzIwNiwuNzMyMDYsLjkwNjg1LC45MDY4NSwuOTA2ODUsLjkwNjg1LC44NjQ3NywuODkzODUsLjg1MTIyLC44NTEyMiwuODUxMjIsLjg1MTIyLC44NTEyMiwuODUyODQsLjg1MzExLC44ODg0NCwuODg4NDQsLjg4ODQ0LC44ODg0NCwuNzMwNiwuNzc0NTIsLjg2MzMxLC44NjEyOCwuODYxMjgsLjg2MTI4LC44NjEyOCwuODYxMjgsLjg2MTI4LC44NjkzLC44NDU3LC44OTQ2NCwuODk0NjQsLjg5NDY0LC44OTQ2NCwuODI2MDEsLjgyNjAxLC44MjYwMSwuODI2MDEsLjk0NDY5LC45NDQ2OSwuOTQ4MiwuOTQ4MiwuOTQ4MiwuOTQ4MiwuOTQ4MiwuOTA3NDcsLjg2NjUxLC45NDQ2OSwuOTQ0NjksLjk0NDY5LC45NDQ2OSwuOTA1MjcsLjk0NDY5LC45MDUyNywuODY3NSwuODYxMjgsLjg2NzUsLjg2MTI4LC44Njc1LC44NjEyOCwuNzM4MzQsLjg0NTcsLjczODM0LC44NDU3LC43MzgzNCwuODQ1NywuNzM4MzQsLjg0NTcsLjg1MTkzLC45MjQ1NCwuODY0NzcsLjk5MjEsLjczMjA2LC44OTQ2NCwuNzMyMDYsLjg5NDY0LC43MzIwNiwuODk0NjQsLjczMjA2LC44OTQ2NCwuNzMyMDYsLjg5NDY0LC44MTEwNSwuODQ2MzYsLjgxMTA1LC44NDYzNiwuODExMDUsLjg0NjM2LDEsMSwuODYyNzUsLjk0NDY5LC45MDg3MiwuOTU3ODYsLjkwNjg1LC44MjYwMSwuOTA2ODUsLjgyNjAxLC45MDY4NSwuODI2MDEsLjkwNjg1LDEuMDMyOTcsLjkwNjg1LC44MjYwMSwuNzc3NDEsMS4wNTYxMSwuNjM3NywxLjA3NjkyLDEsMSwuOTA5MTgsLjc1NTkzLDEuMDMyOTcsMSwxLC43NjAzMiwuOTA0NTIsLjk4MTU2LDEuMTE4NDIsLjc3MjYxLDEuMTE0MjksLjg5Mzg1LC45NDQ2OSwxLDEsLjg5Mzg1LC45NDQ2OSwuOTU4NzcsLjg2OTAxLC45NDQ2OSwuODUxMjIsLjk0ODIsLjg1MTIyLC45NDgyLC44NTEyMiwuOTQ4MiwuODY2NywuOTAwMTYsLjc1MTg2LDEuMDQ2OTIsMSwxLC43NTE4NiwxLjA0NjkyLC42ODg4NywuNzgyMjMsLjY4ODg3LC43ODIyMywuNjg4ODcsLjc4MjIzLC42ODg4NywuNzgyMjMsMSwxLC43OTc3NiwuOTIxODgsLjc5Nzc2LDEuMjMwMjMsLjg4ODQ0LC45NDQ2OSwuODg4NDQsLjk0NDY5LC44ODg0NCwuOTQ0NjksLjg4ODQ0LC45NDQ2OSwuODg4NDQsLjk0NDY5LC44ODg0NCwuOTQ0NjksLjk0MjU4LC45ODk4NiwuNzMwNiwuOTA1MjcsLjczMDYsLjc2NjU5LC43OTAwNCwuNzY2NTksLjc5MDA0LC43NjY1OSwuNzkwMDQsMS4wOTIzMSwuNTQ4NzMsLjg2NzUsLjg2MTI4LC43NjMxOCwuODY5MywuODUzMTEsLjg2NjUxLDEsMSwuNzk3NzYsMS4yMDU2MiwxLjE4NjIyLDEuMTg2MjIsMSwxLjE0MzcsLjY3NzQyLC45NjMzNCwuOTM2OTUsMS4zNTE5MSwxLjQwOTA5LC45NTE2MSwxLjQ4Mzg3LC44NjY4NiwuOTA4NjEsLjYyMjY3LC43NDM1OSwuNjU2NDksLjg1NDk4LC41Njk2MywuODgyNTQsMS4yMzUxNiwuODY3NSwuODE1NTIsLjc1NDQzLC44NDUwMywuNzMyMDYsLjc2NjU5LC44NjI3NSwuODUxMjIsLjkwNjg1LC43Nzg5MiwuODU3NDYsMS4wMjYzOCwuODkzODUsLjc1NjU3LC44NTEyMiwuODYyNzUsLjc3NDUyLC43NDE3MSwuNzk3NzYsLjczMDYsLjk1MTY1LC43NzgxOCwuODk3NzIsLjg4ODMxLC45MDY4NSwuNzMwNiwuOTgxNDIsMS4wMjE5MSwuOTY1NzYsMS4yMzUxNiwuOTkwMTgsLjk4MTQyLC45MjM2LC44OTI1OCwuOTQwMzUsMS4wMjE5MSwuNzg4NDgsLjk2NTc2LC45NTYxLDEuMjM1MTYsLjkwOTE4LC45MjU3OCwuOTU0MjQsLjg5NzQ2LC44Mzk2OSwuOTQ4MiwuODAxMTMsLjg5NDQyLC44NTIwOCwuODYxNTUsLjk4MDIyLC45OTAxOCwxLjAwNDUyLC44MTIwOSwuOTkyNDcsLjg5MTgxLDEuMjM1MTYsLjk5MDE4LC45NDgyLC45OTAxOCwuODkxODEsLjczMjA2LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC44ODg0NCwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuODk0NjQsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjk2NzY2LDEsMSwxLDEsMSwxLC45NDI1OCwuOTg5ODYsLjk0MjU4LC45ODk4NiwuOTQyNTgsLjk4OTg2LC43MzA2LC45MDUyNywxLDEsLjg5NTUyLC45MDUyNywxLC45MDE4NiwxLjEyMzA4LDEuMTIzMDgsMS4xMjMwOCwxLjEyMzA4LDEuMjU2NiwxLjI1NjYsMS4yNTY2LC44OTU1MiwuODk1NTIsMS40MjI1OSwuNjkwNDMsMS4wMzgwOSwxLDEsMS4wMTc2LDEuMDE3NiwxLjExNTIzLDEuNDk1NiwyLjAxNDYyLC45OTMzMSwuODI2MTYsLjkxMTMzLC44NDI4NiwuOTExMzMsMSwxLDEsLjcwNTA4LDEsMS4yMzEwOCwuNzk4MDEsLjg0NDI2LC44NDQyNiwuNzc0LC45MDUyNywxLjgxMDU1LC45MDUyNywxLjgxMDU1LDEuMjg4MDksMS41NTQ2OSwuOTQ0MzQsMS4wNzgwNiwxLC45NzA5NCwuNzU4OSwuODUyODQsLjkwNzQ3LDEuMTk2NTgsLjY5ODI1LC45NzYyMiwxLjMzNTEyLC45MDc0NywuOTA3NDcsLjg1MzU2LC45MDc0NywuOTA3NDcsMS40NDk0NywuODUyODQsLjg5NDEsLjg5NDEsLjcwNTcyLC44LC43MDU3MiwuNzA1NzIsLjcwNTcyLC43MDU3MiwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjk5ODYyLC45OTg2MiwxLDEsMSwxLDEsMS4wMzM2LC45MTAyNywxLDEsMSwuOTk4NjIsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS4wNTg1OSwxLjA1ODU5LDEsMSwxLDEuMDcxODUsLjk5NDEzLC45NjMzNCwxLjA4MDY1LDEsMSwxLDEsMSwxLDEsMSwxLDEsMV0sTmE9e2xpbmVIZWlnaHQ6MS4yMjA3LGxpbmVHYXA6LjIyMDd9LEdhPVsuNzYxMTYsMSwxLDEuMDAwNiwuOTk5OTgsLjk5OTc0LC45OTk3MywuOTk5NzMsLjk5OTgyLC45OTk3NywxLjAwMDg3LC45OTk5OCwuOTk5OTgsLjk5OTU5LDEuMDAwMDMsMS4wMDA2LC45OTk5OCwxLjAwMDYsMS4wMDA2LC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5OTgsMSwxLjAwMDAzLDEuMDAwMDMsMS4wMDAwMywxLjAwMDI2LC45OTk5LC45OTk3NywuOTk5NzcsLjk5OTc3LC45OTk3NywxLjAwMDAxLDEuMDAwMjYsMS4wMDAyMiwuOTk5NzcsMS4wMDA2LC45OTk3MywuOTk5NzcsMS4wMDAyNiwuOTk5OTksLjk5OTc3LDEuMDAwMjIsMS4wMDAwMSwxLjAwMDIyLC45OTk3NywxLjAwMDAxLDEuMDAwMjYsLjk5OTc3LDEuMDAwMDEsMS4wMDAxNiwxLjAwMDAxLDEuMDAwMDEsMS4wMDAyNiwuOTk5OTgsMS4wMDA2LC45OTk5OCwxLjAwMDAzLC45OTk3MywuOTk5OTgsLjk5OTczLDEuMDAwMjYsLjk5OTczLDEuMDAwMjYsLjk5OTczLC45OTk5OCwxLjAwMDI2LDEuMDAwMjYsMS4wMDA2LDEuMDAwNiwuOTk5NzMsMS4wMDA2LC45OTk4MiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LC45OTk1OSwuOTk5NzMsLjk5OTk4LDEuMDAwMjYsLjk5OTczLDEuMDAwMjIsLjk5OTczLC45OTk3MywxLC45OTk1OSwxLjAwMDc3LC45OTk1OSwxLjAwMDAzLC45OTk5OCwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsMS4wMDA3NywuOTk5NzMsLjk5OTk4LDEuMDAwMjUsLjk5OTY4LC45OTk3MywxLjAwMDAzLDEuMDAwMjUsLjYwMjk5LDEuMDAwMjQsMS4wNjQwOSwxLDEsLjk5OTk4LDEsLjk5OTczLDEuMDAwNiwuOTk5OTgsMSwuOTk5MzYsLjk5OTczLDEuMDAwMDIsMS4wMDAwMiwxLjAwMDAyLDEuMDAwMjYsLjk5OTc3LC45OTk3NywuOTk5NzcsLjk5OTc3LC45OTk3NywuOTk5NzcsMSwuOTk5NzcsMS4wMDAwMSwxLjAwMDAxLDEuMDAwMDEsMS4wMDAwMSwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsLjk5OTc3LC45OTk3NywxLjAwMDIyLDEuMDAwMjIsMS4wMDAyMiwxLjAwMDIyLDEuMDAwMjIsMS4wMDAwMywxLjAwMDIyLC45OTk3NywuOTk5NzcsLjk5OTc3LC45OTk3NywxLjAwMDAxLDEuMDAwMDEsMS4wMDAyNiwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5ODIsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwxLjA2NDA5LDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwuOTk5NzMsMS4wMDAyNiwuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsMS4wMzM3NCwuOTk5NzcsMS4wMDAyNiwxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDIyLDEuMDAwMjYsMS4wMDAyMiwxLjAwMDI2LDEuMDAwMjIsMS4wMDAyNiwxLjAwMDIyLDEuMDAwMjYsLjk5OTc3LDEuMDAwMjYsLjk5OTc3LDEuMDAwMjYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNDIsLjk5OTczLC45OTk3MywxLjAwMDYsLjk5OTc3LC45OTk3MywuOTk5NzMsMS4wMDAyNiwxLjAwMDYsMS4wMDAyNiwxLjAwMDYsMS4wMDAyNiwxLjAzODI4LDEuMDAwMjYsLjk5OTk5LDEuMDAwMjYsMS4wMDA2LC45OTk3NywxLjAwMDI2LC45OTk3NywxLjAwMDI2LC45OTk3NywxLjAwMDI2LC45OTkzLC45OTk4LDEuMDAwMjYsMS4wMDAyMiwxLjAwMDI2LDEuMDAwMjIsMS4wMDAyNiwxLjAwMDIyLDEuMDAwMjYsMSwxLjAwMDE2LC45OTk3NywuOTk5NTksLjk5OTc3LC45OTk1OSwuOTk5NzcsLjk5OTU5LDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMjYsLjk5OTk4LDEuMDAwMjYsLjgxMjEsMS4wMDAyNiwuOTk5OTgsLjk5OTc3LDEuMDAwMjYsLjk5OTc3LDEuMDAwMjYsLjk5OTc3LDEuMDAwMjYsLjk5OTc3LDEuMDAwMjYsLjk5OTc3LDEuMDAwMjYsLjk5OTc3LDEuMDAwMjYsMS4wMDAxNiwxLjAwMDIyLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsMS4wMDAyNiwxLDEuMDAwMjYsMSwxLjAwMDI2LDEsMS4wMDA2LC45OTk3MywuOTk5NzcsLjk5OTczLDEsLjk5OTgyLDEuMDAwMjIsMS4wMDAyNiwxLjAwMDAxLC45OTk3MywxLjAwMDI2LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsMS4wMDAzNCwuOTk5NzcsMSwuOTk5OTcsMS4wMDAyNiwxLjAwMDc4LDEuMDAwMzYsLjk5OTczLDEuMDAwMTMsMS4wMDA2LC45OTk3NywuOTk5NzcsLjk5OTg4LC44NTE0OCwxLjAwMDAxLDEuMDAwMjYsLjk5OTc3LDEuMDAwMjIsMS4wMDA2LC45OTk3NywxLjAwMDAxLC45OTk5OSwuOTk5NzcsMS4wMDA2OSwxLjAwMDIyLC45OTk3NywxLjAwMDAxLC45OTk4NCwxLjAwMDI2LDEuMDAwMDEsMS4wMDAyNCwxLjAwMDAxLC45OTk5LDEsMS4wMDA2LDEuMDAwMDEsMS4wMDA0MSwuOTk5NjIsMS4wMDAyNiwxLjAwMDYsLjk5OTk1LDEuMDAwNDEsLjk5OTQyLC45OTk3MywuOTk5MjcsMS4wMDA4MiwuOTk5MDIsMS4wMDAyNiwxLjAwMDg3LDEuMDAwNiwxLjAwMDY5LC45OTk3MywuOTk4NjcsLjk5OTczLC45OTkzLDEuMDAwMjYsMS4wMDA0OSwxLjAwMDU2LDEsLjk5OTg4LC45OTkzNSwuOTk5OTUsLjk5OTU0LDEuMDAwNTUsLjk5OTQ1LDEuMDAwMzIsMS4wMDA2LC45OTk5NSwxLjAwMDI2LC45OTk5NSwxLjAwMDMyLDEuMDAwMDEsMS4wMDAwOCwuOTk5NzEsMS4wMDAxOSwuOTk5NCwxLjAwMDAxLDEuMDAwNiwxLjAwMDQ0LC45OTk3MywxLjAwMDIzLDEuMDAwNDcsMSwuOTk5NDIsLjk5NTYxLC45OTk4OSwxLjAwMDM1LC45OTk3NywxLjAwMDM1LC45OTk3NywxLjAwMDE5LC45OTk0NCwxLjAwMDAxLDEuMDAwMjEsLjk5OTI2LDEuMDAwMzUsMS4wMDAzNSwuOTk5NDIsMS4wMDA0OCwuOTk5OTksLjk5OTc3LDEuMDAwMjIsMS4wMDAzNSwxLjAwMDAxLC45OTk3NywxLjAwMDI2LC45OTk4OSwxLjAwMDU3LDEuMDAwMDEsLjk5OTM2LDEuMDAwNTIsMS4wMDAxMiwuOTk5OTYsMS4wMDA0MywxLDEuMDAwMzUsLjk5OTQsLjk5OTc2LDEuMDAwMzUsLjk5OTczLDEuMDAwNTIsMS4wMDA0MSwxLjAwMTE5LDEuMDAwMzcsLjk5OTczLDEuMDAwMDIsLjk5OTg2LDEuMDAwNDEsMS4wMDA0MSwuOTk5MDIsLjk5OTYsMS4wMDAzNCwuOTk5OTksMS4wMDAyNiwuOTk5OTksMS4wMDAyNiwuOTk5NzMsMS4wMDA1MiwuOTk5NzMsMSwuOTk5NzMsMS4wMDA0MSwxLjAwMDc1LC45OTk0LDEuMDAwMywuOTk5OTksMSwxLjAwMDQxLC45OTk1NSwxLC45OTkxNSwuOTk5NzMsLjk5OTczLDEuMDAwMjYsMS4wMDExOSwuOTk5NTUsLjk5OTczLDEuMDAwNiwuOTk5MTEsMS4wMDA2LDEuMDAwMjYsLjk5OTcyLDEuMDAwMjYsLjk5OTAyLDEuMDAwNDEsLjk5OTczLC45OTk5OSwxLDEsMS4wMDAzOCwxLjAwMDUsMS4wMDAxNiwxLjAwMDIyLDEuMDAwMTYsMS4wMDAyMiwxLjAwMDE2LDEuMDAwMjIsMS4wMDAwMSwuOTk5NzMsMSwxLC45OTk3MywxLDEsLjk5OTU1LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLDEsMSwuOTk5NzMsLjk5OTczLC45OTk3MiwxLDEsMS4wMDEwNiwuOTk5OTksLjk5OTk4LC45OTk5OCwuOTk5OTksLjk5OTk4LDEuNjY0NzUsMSwuOTk5NzMsLjk5OTczLDEuMDAwMjMsLjk5OTczLC45OTk3MSwxLjAwMDQ3LDEuMDAwMjMsMSwuOTk5OTEsLjk5OTg0LDEuMDAwMDIsMS4wMDAwMiwxLjAwMDAyLDEuMDAwMDIsMSwxLDEsMSwxLDEsMSwuOTk5NzIsMSwxLjIwOTg1LDEuMzk3MTMsMS4wMDAwMywxLjAwMDMxLDEuMDAwMTUsMSwuOTk1NjEsMS4wMDAyNywxLjAwMDMxLDEuMDAwMzEsLjk5OTE1LDEuMDAwMzEsMS4wMDAzMSwuOTk5OTksMS4wMDAwMywuOTk5OTksLjk5OTk5LDEuNDExNDQsMS42LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MDU3OSwxLjQwNTc5LDEuMzY2MjUsLjk5OTk5LDEsLjk5ODYxLC45OTg2MSwxLDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsLjk5OTcyLC45OTk5OSwuOTk5OTksLjk5OTk5LC45OTk5OSwxLjQwNDgzLDEsLjk5OTc3LDEuMDAwNTQsMSwxLC45OTk1MywuOTk5NjIsMS4wMDA0MiwuOTk5NSwxLDEsMSwxLDEsMSwxLDEsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LDEsMSwxLDEsMSwxLDEsMSwxLDEsMV0seGE9e2xpbmVIZWlnaHQ6MS4yLGxpbmVHYXA6LjJ9LE1hPVsuNzYxMTYsMSwxLDEuMDAwNiwuOTk5OTgsLjk5OTc0LC45OTk3MywuOTk5NzMsLjk5OTgyLC45OTk3NywxLjAwMDg3LC45OTk5OCwuOTk5OTgsLjk5OTU5LDEuMDAwMDMsMS4wMDA2LC45OTk5OCwxLjAwMDYsMS4wMDA2LC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5OTgsMSwxLjAwMDAzLDEuMDAwMDMsMS4wMDAwMywxLjAwMDI2LC45OTk5LC45OTk3NywuOTk5NzcsLjk5OTc3LC45OTk3NywxLjAwMDAxLDEuMDAwMjYsMS4wMDAyMiwuOTk5NzcsMS4wMDA2LC45OTk3MywuOTk5NzcsMS4wMDAyNiwuOTk5OTksLjk5OTc3LDEuMDAwMjIsMS4wMDAwMSwxLjAwMDIyLC45OTk3NywxLjAwMDAxLDEuMDAwMjYsLjk5OTc3LDEuMDAwMDEsMS4wMDAxNiwxLjAwMDAxLDEuMDAwMDEsMS4wMDAyNiwuOTk5OTgsMS4wMDA2LC45OTk5OCwxLjAwMDAzLC45OTk3MywuOTk5OTgsLjk5OTczLDEuMDAwMjYsLjk5OTczLDEuMDAwMjYsLjk5OTczLC45OTk5OCwxLjAwMDI2LDEuMDAwMjYsMS4wMDA2LDEuMDAwNiwuOTk5NzMsMS4wMDA2LC45OTk4MiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LC45OTk1OSwuOTk5NzMsLjk5OTk4LDEuMDAwMjYsLjk5OTczLDEuMDAwMjIsLjk5OTczLC45OTk3MywxLC45OTk1OSwxLjAwMDc3LC45OTk1OSwxLjAwMDAzLC45OTk5OCwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsMS4wMDA3NywuOTk5NzMsLjk5OTk4LDEuMDAwMjUsLjk5OTY4LC45OTk3MywxLjAwMDAzLDEuMDAwMjUsLjYwMjk5LDEuMDAwMjQsMS4wNjQwOSwxLDEsLjk5OTk4LDEsLjk5OTczLDEuMDAwNiwuOTk5OTgsMSwuOTk5MzYsLjk5OTczLDEuMDAwMDIsMS4wMDAwMiwxLjAwMDAyLDEuMDAwMjYsLjk5OTc3LC45OTk3NywuOTk5NzcsLjk5OTc3LC45OTk3NywuOTk5NzcsMSwuOTk5NzcsMS4wMDAwMSwxLjAwMDAxLDEuMDAwMDEsMS4wMDAwMSwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsLjk5OTc3LC45OTk3NywxLjAwMDIyLDEuMDAwMjIsMS4wMDAyMiwxLjAwMDIyLDEuMDAwMjIsMS4wMDAwMywxLjAwMDIyLC45OTk3NywuOTk5NzcsLjk5OTc3LC45OTk3NywxLjAwMDAxLDEuMDAwMDEsMS4wMDAyNiwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5ODIsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwxLjA2NDA5LDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwuOTk5NzMsMS4wMDAyNiwuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsMS4wMDQ0LC45OTk3NywxLjAwMDI2LDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMjIsMS4wMDAyNiwxLjAwMDIyLDEuMDAwMjYsMS4wMDAyMiwxLjAwMDI2LDEuMDAwMjIsMS4wMDAyNiwuOTk5NzcsMS4wMDAyNiwuOTk5NzcsMS4wMDAyNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsLjk5OTcxLC45OTk3MywuOTk5NzMsMS4wMDA2LC45OTk3NywuOTk5NzMsLjk5OTczLDEuMDAwMjYsMS4wMDA2LDEuMDAwMjYsMS4wMDA2LDEuMDAwMjYsMS4wMTAxMSwxLjAwMDI2LC45OTk5OSwxLjAwMDI2LDEuMDAwNiwuOTk5NzcsMS4wMDAyNiwuOTk5NzcsMS4wMDAyNiwuOTk5NzcsMS4wMDAyNiwuOTk5MywuOTk5OCwxLjAwMDI2LDEuMDAwMjIsMS4wMDAyNiwxLjAwMDIyLDEuMDAwMjYsMS4wMDAyMiwxLjAwMDI2LDEsMS4wMDAxNiwuOTk5NzcsLjk5OTU5LC45OTk3NywuOTk5NTksLjk5OTc3LC45OTk1OSwxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDI2LC45OTk5OCwxLjAwMDI2LC44MTIxLDEuMDAwMjYsLjk5OTk4LC45OTk3NywxLjAwMDI2LC45OTk3NywxLjAwMDI2LC45OTk3NywxLjAwMDI2LC45OTk3NywxLjAwMDI2LC45OTk3NywxLjAwMDI2LC45OTk3NywxLjAwMDI2LDEuMDAwMTYsMS4wMDAyMiwxLjAwMDAxLC45OTk3MywxLjAwMDAxLDEuMDAwMjYsMSwxLjAwMDI2LDEsMS4wMDAyNiwxLDEuMDAwNiwuOTk5NzMsLjk5OTc3LC45OTk3MywxLC45OTk4MiwxLjAwMDIyLDEuMDAwMjYsMS4wMDAwMSwuOTk5NzMsMS4wMDAyNiwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5NzcsMSwxLDEuMDAwMjYsLjk5OTY5LC45OTk3MiwuOTk5ODEsLjk5OTgsMS4wMDA2LC45OTk3NywuOTk5NzcsMS4wMDAyMiwuOTExNTUsMS4wMDAwMSwxLjAwMDI2LC45OTk3NywxLjAwMDIyLDEuMDAwNiwuOTk5NzcsMS4wMDAwMSwuOTk5OTksLjk5OTc3LC45OTk2NiwxLjAwMDIyLDEuMDAwMzIsMS4wMDAwMSwuOTk5NDQsMS4wMDAyNiwxLjAwMDAxLC45OTk2OCwxLjAwMDAxLDEuMDAwNDcsMSwxLjAwMDYsMS4wMDAwMSwuOTk5ODEsMS4wMDEwMSwxLjAwMDI2LDEuMDAwNiwuOTk5NDgsLjk5OTgxLDEuMDAwNjQsLjk5OTczLC45OTk0MiwxLjAwMTAxLDEuMDAwNjEsMS4wMDAyNiwxLjAwMDY5LDEuMDAwNiwxLjAwMDE0LC45OTk3MywxLjAxMzIyLC45OTk3MywxLjAwMDY1LDEuMDAwMjYsMS4wMDAxMiwuOTk5MjMsMSwxLjAwMDY0LDEuMDAwNzYsLjk5OTQ4LDEuMDAwNTUsMS4wMDA2MywxLjAwMDA3LC45OTk0MywxLjAwMDYsLjk5OTQ4LDEuMDAwMjYsLjk5OTQ4LC45OTk0MywxLjAwMDAxLDEuMDAwMDEsMS4wMDAyOSwxLjAwMDM4LDEuMDAwMzUsMS4wMDAwMSwxLjAwMDYsMS4wMDA2LC45OTk3MywuOTk5NzgsMS4wMDAwMSwxLjAwMDU3LC45OTk4OSwuOTk5NjcsLjk5OTY0LC45OTk2NywuOTk5NzcsLjk5OTk5LC45OTk3NywxLjAwMDM4LC45OTk3NywxLjAwMDAxLC45OTk3MywxLjAwMDY2LC45OTk2NywuOTk5NjcsMS4wMDA0MSwuOTk5OTgsLjk5OTk5LC45OTk3NywxLjAwMDIyLC45OTk2NywxLjAwMDAxLC45OTk3NywxLjAwMDI2LC45OTk2NCwxLjAwMDMxLDEuMDAwMDEsLjk5OTk5LC45OTk5OSwxLDEuMDAwMjMsMSwxLC45OTk5OSwxLjAwMDM1LDEuMDAwMDEsLjk5OTk5LC45OTk3MywuOTk5NzcsLjk5OTk5LDEuMDAwNTgsLjk5OTczLC45OTk3MywuOTk5NTUsLjk5OTUsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMzIsLjk5OTg5LDEuMDAwMzQsLjk5OTk5LDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LC45OTk3MywuNDU5OTgsLjk5OTczLDEuMDAwMjYsLjk5OTczLDEuMDAwMDEsLjk5OTk5LC45OTk4MiwuOTk5OTQsLjk5OTk2LDEsMS4wMDA0MiwxLjAwMDQ0LDEuMDAwMjksMS4wMDAyMywuOTk5NzMsLjk5OTczLDEuMDAwMjYsLjk5OTQ5LDEuMDAwMDIsLjk5OTczLDEuMDAwNiwxLjAwMDYsMS4wMDA2LC45OTk3NSwxLjAwMDI2LDEuMDAwMjYsMS4wMDAzMiwuOTg2ODUsLjk5OTczLDEuMDAwMjYsMSwxLC45OTk2NiwxLjAwMDQ0LDEuMDAwMTYsMS4wMDAyMiwxLjAwMDE2LDEuMDAwMjIsMS4wMDAxNiwxLjAwMDIyLDEuMDAwMDEsLjk5OTczLDEsMSwuOTk5NzMsMSwxLC45OTk1NSwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMSwxLDEsLjk5OTczLC45OTk3MywuOTk5NzIsMSwxLDEuMDAxMDYsLjk5OTk5LC45OTk5OCwuOTk5OTgsLjk5OTk5LC45OTk5OCwxLjY2NDc1LDEsLjk5OTczLC45OTk3MywxLC45OTk3MywuOTk5NzEsLjk5OTc4LDEsMSwuOTk5OTEsLjk5OTg0LDEuMDAwMDIsMS4wMDAwMiwxLjAwMDAyLDEuMDAwMDIsMS4wMDA5OCwxLDEsMSwxLjAwMDQ5LDEsMSwuOTk5NzIsMSwxLjIwOTg1LDEuMzk3MTMsMS4wMDAwMywxLjAwMDMxLDEuMDAwMTUsMSwuOTk1NjEsMS4wMDAyNywxLjAwMDMxLDEuMDAwMzEsLjk5OTE1LDEuMDAwMzEsMS4wMDAzMSwuOTk5OTksMS4wMDAwMywuOTk5OTksLjk5OTk5LDEuNDExNDQsMS42LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MDU3OSwxLjQwNTc5LDEuMzY2MjUsLjk5OTk5LDEsLjk5ODYxLC45OTg2MSwxLDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsLjk5OTcyLC45OTk5OSwuOTk5OTksLjk5OTk5LC45OTk5OSwxLjQwNDgzLDEsLjk5OTc3LDEuMDAwNTQsMSwxLC45OTk1MywuOTk5NjIsMS4wMDA0MiwuOTk5NSwxLDEsMSwxLDEsMSwxLDEsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LDEsMSwxLDEsMSwxLDEsMSwxLDEsMV0sVWE9e2xpbmVIZWlnaHQ6MS4zNSxsaW5lR2FwOi4yfSxMYT1bLjc2MTE2LDEsMSwxLjAwMDYsMS4wMDA2LDEuMDAwMDYsLjk5OTczLC45OTk3MywuOTk5ODIsMS4wMDAwMSwxLjAwMDQzLC45OTk5OCwuOTk5OTgsLjk5OTU5LDEuMDAwMDMsMS4wMDA2LC45OTk5OCwxLjAwMDYsMS4wMDA2LC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywxLjAwMDYsMSwxLjAwMDAzLDEuMDAwMDMsMS4wMDAwMywuOTk5NzMsLjk5OTg3LDEuMDAwMDEsMS4wMDAwMSwuOTk5NzcsLjk5OTc3LDEuMDAwMDEsMS4wMDAyNiwxLjAwMDIyLC45OTk3NywxLjAwMDYsMSwxLjAwMDAxLC45OTk3MywuOTk5OTksLjk5OTc3LDEuMDAwMjIsMS4wMDAwMSwxLjAwMDIyLC45OTk3NywxLjAwMDAxLDEuMDAwMjYsLjk5OTc3LDEuMDAwMDEsMS4wMDAxNiwxLjAwMDAxLDEuMDAwMDEsMS4wMDAyNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwuOTk5NDksLjk5OTczLC45OTk5OCwuOTk5NzMsLjk5OTczLDEsLjk5OTczLC45OTk3MywxLjAwMDYsLjk5OTczLC45OTk3MywuOTk5MjQsLjk5OTI0LDEsLjk5OTI0LC45OTk5OSwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTk4LDEsMS4wMDA2LC45OTk3MywxLC45OTk3NywxLDEsMSwxLjAwMDA1LDEuMDAwOSwxLjAwMDA1LDEuMDAwMDMsLjk5OTk4LC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywxLjAwMDksLjk5OTczLC45OTk5OCwxLjAwMDI1LC45OTk2OCwuOTk5NzMsMS4wMDAwMywxLjAwMDI1LC42MDI5OSwxLjAwMDI0LDEuMDY0MDksMSwxLC45OTk5OCwxLC45OTk4LDEuMDAwNiwuOTk5OTgsMSwuOTk5MzYsLjk5OTczLDEuMDAwMDIsMS4wMDAwMiwxLjAwMDAyLDEuMDAwMjYsMS4wMDAwMSwxLjAwMDAxLDEuMDAwMDEsMS4wMDAwMSwxLjAwMDAxLDEuMDAwMDEsMSwuOTk5NzcsMS4wMDAwMSwxLjAwMDAxLDEuMDAwMDEsMS4wMDAwMSwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsLjk5OTc3LC45OTk3NywxLjAwMDIyLDEuMDAwMjIsMS4wMDAyMiwxLjAwMDIyLDEuMDAwMjIsMS4wMDAwMywxLjAwMDIyLC45OTk3NywuOTk5NzcsLjk5OTc3LC45OTk3NywxLjAwMDAxLDEuMDAwMDEsMS4wMDAyNiwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5ODIsMSwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywxLjA2NDA5LDEuMDAwMjYsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLDEsLjk5OTczLDEsMS4wMDAwMSwuOTk5NzMsMS4wMDAwMSwuOTk5NzMsMS4wMDAwMSwuOTk5NzMsLjk5OTc3LDEsLjk5OTc3LDEsLjk5OTc3LDEsLjk5OTc3LDEsLjk5OTc3LDEuMDI4OCwuOTk5NzcsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMjIsLjk5OTczLDEuMDAwMjIsLjk5OTczLDEuMDAwMjIsLjk5OTczLDEuMDAwMjIsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsLjk5OTI0LDEuMDAwNiwxLjAwMDYsLjk5OTQ2LDEuMDAwMzQsMSwuOTk5MjQsMS4wMDAwMSwxLDEsLjk5OTczLC45OTkyNCwuOTk5NzMsLjk5OTI0LC45OTk3MywxLjA2MzExLC45OTk3MywxLjAwMDI0LC45OTk3MywuOTk5MjQsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsMS4wMDA0MSwuOTk5OCwuOTk5NzMsMS4wMDAyMiwuOTk5NzMsMS4wMDAyMiwuOTk5NzMsMS4wMDAyMiwuOTk5NzMsMSwxLjAwMDE2LC45OTk3NywuOTk5OTgsLjk5OTc3LC45OTk5OCwuOTk5NzcsLjk5OTk4LDEuMDAwMDEsMSwxLjAwMDAxLDEsMS4wMDAwMSwxLDEuMDAwMDEsMSwxLjAwMDI2LDEuMDAwNiwxLjAwMDI2LC44OTU0NywxLjAwMDI2LDEuMDAwNiwuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywxLjAwMDE2LC45OTk3NywxLjAwMDAxLDEsMS4wMDAwMSwxLjAwMDI2LDEsMS4wMDAyNiwxLDEuMDAwMjYsMSwuOTk5MjQsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEsLjk5OTgyLDEuMDAwMjIsMS4wMDAyNiwxLjAwMDAxLDEsMS4wMDAyNiwxLjAwMDYsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwxLjAwMDAxLDEsMS4wMDA1NCwuOTk5NzcsMS4wMDA4NCwxLjAwMDA3LC45OTk3MywxLjAwMDEzLC45OTkyNCwxLjAwMDAxLDEuMDAwMDEsLjk5OTQ1LC45MTIyMSwxLjAwMDAxLDEuMDAwMjYsLjk5OTc3LDEuMDAwMjIsMS4wMDA2LDEuMDAwMDEsMS4wMDAwMSwuOTk5OTksLjk5OTc3LC45OTkzMywxLjAwMDIyLDEuMDAwNTQsMS4wMDAwMSwxLjAwMDY1LDEuMDAwMjYsMS4wMDAwMSwxLjAwMDEsMS4wMDAwMSwxLjAwMDUyLDEsMS4wMDA2LDEuMDAwMDEsLjk5OTQ1LC45OTg5NywuOTk5NjgsLjk5OTI0LDEuMDAwMzYsLjk5OTQ1LC45OTk0OSwxLDEuMDAwNiwuOTk4OTcsLjk5OTE4LC45OTk2OCwuOTk5MTEsLjk5OTI0LDEsLjk5OTYyLDEuMDE0ODcsMSwxLjAwMDUsLjk5OTczLDEuMDAwMTIsMS4wMDA0MywxLC45OTk5NSwuOTk5OTQsMS4wMDAzNiwuOTk5NDcsMS4wMDAxOSwxLjAwMDYzLDEuMDAwMjUsLjk5OTI0LDEuMDAwMzYsLjk5OTczLDEuMDAwMzYsMS4wMDAyNSwxLjAwMDAxLDEuMDAwMDEsMS4wMDAyNywxLjAwMDEsMS4wMDA2OCwxLjAwMDAxLDEuMDAwNiwxLjAwMDYsMSwxLjAwMDA4LC45OTk1NywuOTk5NzIsLjk5OTQsLjk5OTU0LC45OTk3NSwxLjAwMDUxLDEuMDAwMDEsMS4wMDAxOSwxLjAwMDAxLDEuMDAwMSwuOTk5ODYsMS4wMDAwMSwxLjAwMDAxLDEuMDAwMzgsLjk5OTU0LC45OTk1NCwuOTk5NCwxLjAwMDY2LC45OTk5OSwuOTk5NzcsMS4wMDAyMiwxLjAwMDU0LDEuMDAwMDEsLjk5OTc3LDEuMDAwMjYsLjk5OTc1LDEuMDAwMSwxLjAwMDAxLC45OTk5MywuOTk5NSwuOTk5NTUsMS4wMDAxNiwuOTk5NzgsLjk5OTc0LDEuMDAwMTksMS4wMDAyMiwuOTk5NTUsMS4wMDA1MywuOTk5NzMsMS4wMDA4OSwxLjAwMDA1LC45OTk2NywxLjAwMDQ4LC45OTk3MywxLjAwMDAyLDEuMDAwMzQsLjk5OTczLC45OTk3MywuOTk5NjQsMS4wMDAwNiwxLjAwMDY2LC45OTk0NywuOTk5NzMsLjk4ODk0LC45OTk3MywxLC40NDg5OCwxLC45OTk0NiwxLDEuMDAwMzksMS4wMDA4MiwuOTk5OTEsLjk5OTkxLC45OTk4NSwxLjAwMDIyLDEuMDAwMjMsMS4wMDA2MSwxLjAwMDA2LC45OTk2NiwuOTk5NzMsLjk5OTczLC45OTk3MywxLjAwMDE5LDEuMDAwOCwxLC45OTkyNCwuOTk5MjQsLjk5OTI0LC45OTk4MywxLjAwMDQ0LC45OTk3MywuOTk5NjQsLjk4MzMyLDEsLjk5OTczLDEsMSwuOTk5NjIsLjk5ODk1LDEuMDAwMTYsLjk5OTc3LDEuMDAwMTYsLjk5OTc3LDEuMDAwMTYsLjk5OTc3LDEuMDAwMDEsMSwxLDEsLjk5OTczLDEsMSwuOTk5NTUsLjk5OTI0LC45OTkyNCwuOTk5MjQsLjk5OTI0LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk3MywuOTk5NzMsLjk5OTcyLDEsMSwxLjAwMjY3LC45OTk5OSwuOTk5OTgsLjk5OTk4LDEsLjk5OTk4LDEuNjY0NzUsMSwuOTk5NzMsLjk5OTczLDEuMDAwMjMsLjk5OTczLDEuMDA0MjMsLjk5OTI1LC45OTk5OSwxLC45OTk5MSwuOTk5ODQsMS4wMDAwMiwxLjAwMDAyLDEuMDAwMDIsMS4wMDAwMiwxLjAwMDQ5LDEsMS4wMDI0NSwxLDEsMSwxLC45NjMyOSwxLDEuMjA5ODUsMS4zOTcxMywxLjAwMDAzLC44MjU0LDEuMDAwMTUsMSwxLjAwMDM1LDEuMDAwMjcsMS4wMDAzMSwxLjAwMDMxLDEuMDAwMDMsMS4wMDAzMSwxLjAwMDMxLC45OTk5OSwxLjAwMDAzLC45OTk5OSwuOTk5OTksMS40MTE0NCwxLjYsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQwNTc5LDEuNDA1NzksMS4zNjYyNSwuOTk5OTksMSwuOTk4NjEsLjk5ODYxLDEsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsMS4wMDAyNiwuOTUzMTcsLjk5OTk5LC45OTk5OSwuOTk5OTksLjk5OTk5LDEuNDA0ODMsMSwuOTk5NzcsMS4wMDA1NCwxLDEsLjk5OTUzLC45OTk2MiwxLjAwMDQyLC45OTk1LDEsMSwxLDEsMSwxLDEsMSwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsMSwxLDEsMSwxLDEsMSwxLDEsMSwxXSxKYT17bGluZUhlaWdodDoxLjM1LGxpbmVHYXA6LjJ9LEhhPVsuNzYxMTYsMSwxLDEuMDAwNiwxLjAwMDYsMS4wMDAwNiwuOTk5NzMsLjk5OTczLC45OTk4MiwxLjAwMDAxLDEuMDAwNDMsLjk5OTk4LC45OTk5OCwuOTk5NTksMS4wMDAwMywxLjAwMDYsLjk5OTk4LDEuMDAwNiwxLjAwMDYsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLDEuMDAwNiwxLDEuMDAwMDMsMS4wMDAwMywxLjAwMDAzLC45OTk3MywuOTk5ODcsMS4wMDAwMSwxLjAwMDAxLC45OTk3NywuOTk5NzcsMS4wMDAwMSwxLjAwMDI2LDEuMDAwMjIsLjk5OTc3LDEuMDAwNiwxLDEuMDAwMDEsLjk5OTczLC45OTk5OSwuOTk5NzcsMS4wMDAyMiwxLjAwMDAxLDEuMDAwMjIsLjk5OTc3LDEuMDAwMDEsMS4wMDAyNiwuOTk5NzcsMS4wMDAwMSwxLjAwMDE2LDEuMDAwMDEsMS4wMDAwMSwxLjAwMDI2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LC45OTk0OSwuOTk5NzMsLjk5OTk4LC45OTk3MywuOTk5NzMsMSwuOTk5NzMsLjk5OTczLDEuMDAwNiwuOTk5NzMsLjk5OTczLC45OTkyNCwuOTk5MjQsMSwuOTk5MjQsLjk5OTk5LC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5OTgsMSwxLjAwMDYsLjk5OTczLDEsLjk5OTc3LDEsMSwxLDEuMDAwMDUsMS4wMDA5LDEuMDAwMDUsMS4wMDAwMywuOTk5OTgsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLDEuMDAwOSwuOTk5NzMsLjk5OTk4LDEuMDAwMjUsLjk5OTY4LC45OTk3MywxLjAwMDAzLDEuMDAwMjUsLjYwMjk5LDEuMDAwMjQsMS4wNjQwOSwxLDEsLjk5OTk4LDEsLjk5OTgsMS4wMDA2LC45OTk5OCwxLC45OTkzNiwuOTk5NzMsMS4wMDAwMiwxLjAwMDAyLDEuMDAwMDIsMS4wMDAyNiwxLjAwMDAxLDEuMDAwMDEsMS4wMDAwMSwxLjAwMDAxLDEuMDAwMDEsMS4wMDAwMSwxLC45OTk3NywxLjAwMDAxLDEuMDAwMDEsMS4wMDAwMSwxLjAwMDAxLDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwuOTk5NzcsLjk5OTc3LDEuMDAwMjIsMS4wMDAyMiwxLjAwMDIyLDEuMDAwMjIsMS4wMDAyMiwxLjAwMDAzLDEuMDAwMjIsLjk5OTc3LC45OTk3NywuOTk5NzcsLjk5OTc3LDEuMDAwMDEsMS4wMDAwMSwxLjAwMDI2LC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk4MiwxLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsLjk5OTczLDEuMDY0MDksMS4wMDAyNiwuOTk5NzMsLjk5OTczLC45OTk3MywuOTk5NzMsMSwuOTk5NzMsMSwxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywxLjAwMDAxLC45OTk3MywuOTk5NzcsMSwuOTk5NzcsMSwuOTk5NzcsMSwuOTk5NzcsMSwuOTk5NzcsMS4wNDU5NiwuOTk5NzcsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEuMDAwMjIsLjk5OTczLDEuMDAwMjIsLjk5OTczLDEuMDAwMjIsLjk5OTczLDEuMDAwMjIsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsMS4wMDA2LDEuMDAwNiwxLjAwMDYsLjk5OTI0LDEuMDAwNiwxLjAwMDYsMS4wMDAxOSwxLjAwMDM0LDEsLjk5OTI0LDEuMDAwMDEsMSwxLC45OTk3MywuOTk5MjQsLjk5OTczLC45OTkyNCwuOTk5NzMsMS4wMjU3MiwuOTk5NzMsMS4wMDAwNSwuOTk5NzMsLjk5OTI0LC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk5OSwuOTk5OCwuOTk5NzMsMS4wMDAyMiwuOTk5NzMsMS4wMDAyMiwuOTk5NzMsMS4wMDAyMiwuOTk5NzMsMSwxLjAwMDE2LC45OTk3NywuOTk5OTgsLjk5OTc3LC45OTk5OCwuOTk5NzcsLjk5OTk4LDEuMDAwMDEsMSwxLjAwMDAxLDEsMS4wMDAwMSwxLDEuMDAwMDEsMSwxLjAwMDI2LDEuMDAwNiwxLjAwMDI2LC44NDUzMywxLjAwMDI2LDEuMDAwNiwuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywuOTk5NzcsLjk5OTczLC45OTk3NywuOTk5NzMsLjk5OTc3LC45OTk3MywxLjAwMDE2LC45OTk3NywxLjAwMDAxLDEsMS4wMDAwMSwxLjAwMDI2LDEsMS4wMDAyNiwxLDEuMDAwMjYsMSwuOTk5MjQsLjk5OTczLDEuMDAwMDEsLjk5OTczLDEsLjk5OTgyLDEuMDAwMjIsMS4wMDAyNiwxLjAwMDAxLDEsMS4wMDAyNiwxLjAwMDYsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTk4LC45OTk5OCwuOTk5MjgsMSwuOTk5NzcsMS4wMDAxMywxLjAwMDU1LC45OTk0NywuOTk5NDUsLjk5OTQxLC45OTkyNCwxLjAwMDAxLDEuMDAwMDEsMS4wMDA0LC45MTYyMSwxLjAwMDAxLDEuMDAwMjYsLjk5OTc3LDEuMDAwMjIsMS4wMDA2LDEuMDAwMDEsMS4wMDAwNSwuOTk5OTksLjk5OTc3LDEuMDAwMTUsMS4wMDAyMiwuOTk5NzcsMS4wMDAwMSwuOTk5NzMsMS4wMDAyNiwxLjAwMDAxLDEuMDAwMTksMS4wMDAwMSwuOTk5NDYsMSwxLjAwMDYsMS4wMDAwMSwuOTk5NzgsMS4wMDA0NSwuOTk5NzMsLjk5OTI0LDEuMDAwMjMsLjk5OTc4LC45OTk2NiwxLDEuMDAwNjUsMS4wMDA0NSwxLjAwMDE5LC45OTk3MywuOTk5NzMsLjk5OTI0LDEsMSwuOTY0OTksMSwxLjAwMDU1LC45OTk3MywxLjAwMDA4LDEuMDAwMjcsMSwuOTk5NywuOTk5OTUsMS4wMDAyMywuOTk5MzMsMS4wMDAxOSwxLjAwMDE1LDEuMDAwMzEsLjk5OTI0LDEuMDAwMjMsLjk5OTczLDEuMDAwMjMsMS4wMDAzMSwxLjAwMDAxLC45OTkyOCwxLjAwMDI5LDEuMDAwOTIsMS4wMDAzNSwxLjAwMDAxLDEuMDAwNiwxLjAwMDYsMSwuOTk5ODgsLjk5OTc1LDEsMS4wMDA4MiwuOTk1NjEsLjk5OTYsMS4wMDAzNSwxLjAwMDAxLC45OTk2MiwxLjAwMDAxLDEuMDAwOTIsLjk5OTY0LDEuMDAwMDEsLjk5OTYzLC45OTk5OSwxLjAwMDM1LDEuMDAwMzUsMS4wMDA4MiwuOTk5NjIsLjk5OTk5LC45OTk3NywxLjAwMDIyLDEuMDAwMzUsMS4wMDAwMSwuOTk5NzcsMS4wMDAyNiwuOTk5NiwuOTk5NjcsMS4wMDAwMSwxLjAwMDM0LDEuMDAwNzQsMS4wMDA1NCwxLjAwMDUzLDEuMDAwNjMsLjk5OTcxLC45OTk2MiwxLjAwMDM1LC45OTk3NSwuOTk5NzcsLjk5OTczLDEuMDAwNDMsLjk5OTUzLDEuMDAwNywuOTk5MTUsLjk5OTczLDEuMDAwMDgsLjk5ODkyLDEuMDAwNzMsMS4wMDA3MywxLjAwMTE0LC45OTkxNSwxLjAwMDczLC45OTk1NSwuOTk5NzMsMS4wMDA5MiwuOTk5NzMsMSwuOTk5OTgsMSwxLjAwMDMsMSwxLjAwMDQzLDEuMDAwMDEsLjk5OTY5LDEuMDAwMywxLDEuMDAwMzUsMS4wMDAwMSwuOTk5NSwxLDEuMDAwOTIsLjk5OTczLC45OTk3MywuOTk5NzMsMS4wMDA3LC45OTk1LDEsLjk5OTI0LDEuMDAwNiwuOTk5MjQsLjk5OTcyLDEuMDAwNjIsLjk5OTczLDEuMDAxMTQsMS4wMDA3MywxLC45OTk1NSwxLDEsMS4wMDA0NywuOTk5NjgsMS4wMDAxNiwuOTk5NzcsMS4wMDAxNiwuOTk5NzcsMS4wMDAxNiwuOTk5NzcsMS4wMDAwMSwxLDEsMSwuOTk5NzMsMSwxLC45OTk1NSwuOTk5MjQsLjk5OTI0LC45OTkyNCwuOTk5MjQsLjk5OTk4LC45OTk5OCwuOTk5OTgsLjk5OTczLC45OTk3MywuOTk5NzIsMSwxLDEuMDAyNjcsLjk5OTk5LC45OTk5OCwuOTk5OTgsMSwuOTk5OTgsMS42NjQ3NSwxLC45OTk3MywuOTk5NzMsMS4wMDAyMywuOTk5NzMsLjk5OTcxLC45OTkyNSwxLjAwMDIzLDEsLjk5OTkxLC45OTk4NCwxLjAwMDAyLDEuMDAwMDIsMS4wMDAwMiwxLjAwMDAyLDEsMSwxLDEsMSwxLDEsLjk2MzI5LDEsMS4yMDk4NSwxLjM5NzEzLDEuMDAwMDMsLjgyNTQsMS4wMDAxNSwxLDEuMDAwMzUsMS4wMDAyNywxLjAwMDMxLDEuMDAwMzEsLjk5OTE1LDEuMDAwMzEsMS4wMDAzMSwuOTk5OTksMS4wMDAwMywuOTk5OTksLjk5OTk5LDEuNDExNDQsMS42LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MTE0NCwxLjQxMTQ0LDEuNDExNDQsMS40MDU3OSwxLjQwNTc5LDEuMzY2MjUsLjk5OTk5LDEsLjk5ODYxLC45OTg2MSwxLDEuMDAwMjYsMS4wMDAyNiwxLjAwMDI2LDEuMDAwMjYsLjk1MzE3LC45OTk5OSwuOTk5OTksLjk5OTk5LC45OTk5OSwxLjQwNDgzLDEsLjk5OTc3LDEuMDAwNTQsMSwxLC45OTk1MywuOTk5NjIsMS4wMDA0MiwuOTk5NSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDFdLFlhPXtsaW5lSGVpZ2h0OjEuMixsaW5lR2FwOi4yfSx2YT1bMzY1LDAsMzMzLDI3OCwzMzMsNDc0LDU1Niw1NTYsODg5LDcyMiwyMzgsMzMzLDMzMywzODksNTg0LDI3OCwzMzMsMjc4LDI3OCw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsMzMzLDMzMyw1ODQsNTg0LDU4NCw2MTEsOTc1LDcyMiw3MjIsNzIyLDcyMiw2NjcsNjExLDc3OCw3MjIsMjc4LDU1Niw3MjIsNjExLDgzMyw3MjIsNzc4LDY2Nyw3NzgsNzIyLDY2Nyw2MTEsNzIyLDY2Nyw5NDQsNjY3LDY2Nyw2MTEsMzMzLDI3OCwzMzMsNTg0LDU1NiwzMzMsNTU2LDYxMSw1NTYsNjExLDU1NiwzMzMsNjExLDYxMSwyNzgsMjc4LDU1NiwyNzgsODg5LDYxMSw2MTEsNjExLDYxMSwzODksNTU2LDMzMyw2MTEsNTU2LDc3OCw1NTYsNTU2LDUwMCwzODksMjgwLDM4OSw1ODQsMzMzLDU1Niw1NTYsNTU2LDU1NiwyODAsNTU2LDMzMyw3MzcsMzcwLDU1Niw1ODQsNzM3LDU1Miw0MDAsNTQ5LDMzMywzMzMsMzMzLDU3Niw1NTYsMjc4LDMzMywzMzMsMzY1LDU1Niw4MzQsODM0LDgzNCw2MTEsNzIyLDcyMiw3MjIsNzIyLDcyMiw3MjIsMWUzLDcyMiw2NjcsNjY3LDY2Nyw2NjcsMjc4LDI3OCwyNzgsMjc4LDcyMiw3MjIsNzc4LDc3OCw3NzgsNzc4LDc3OCw1ODQsNzc4LDcyMiw3MjIsNzIyLDcyMiw2NjcsNjY3LDYxMSw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw4ODksNTU2LDU1Niw1NTYsNTU2LDU1NiwyNzgsMjc4LDI3OCwyNzgsNjExLDYxMSw2MTEsNjExLDYxMSw2MTEsNjExLDU0OSw2MTEsNjExLDYxMSw2MTEsNjExLDU1Niw2MTEsNTU2LDcyMiw1NTYsNzIyLDU1Niw3MjIsNTU2LDcyMiw1NTYsNzIyLDU1Niw3MjIsNTU2LDcyMiw1NTYsNzIyLDcxOSw3MjIsNjExLDY2Nyw1NTYsNjY3LDU1Niw2NjcsNTU2LDY2Nyw1NTYsNjY3LDU1Niw3NzgsNjExLDc3OCw2MTEsNzc4LDYxMSw3NzgsNjExLDcyMiw2MTEsNzIyLDYxMSwyNzgsMjc4LDI3OCwyNzgsMjc4LDI3OCwyNzgsMjc4LDI3OCwyNzgsNzg1LDU1Niw1NTYsMjc4LDcyMiw1NTYsNTU2LDYxMSwyNzgsNjExLDI3OCw2MTEsMzg1LDYxMSw0NzksNjExLDI3OCw3MjIsNjExLDcyMiw2MTEsNzIyLDYxMSw3MDgsNzIzLDYxMSw3NzgsNjExLDc3OCw2MTEsNzc4LDYxMSwxZTMsOTQ0LDcyMiwzODksNzIyLDM4OSw3MjIsMzg5LDY2Nyw1NTYsNjY3LDU1Niw2NjcsNTU2LDY2Nyw1NTYsNjExLDMzMyw2MTEsNDc5LDYxMSwzMzMsNzIyLDYxMSw3MjIsNjExLDcyMiw2MTEsNzIyLDYxMSw3MjIsNjExLDcyMiw2MTEsOTQ0LDc3OCw2NjcsNTU2LDY2Nyw2MTEsNTAwLDYxMSw1MDAsNjExLDUwMCwyNzgsNTU2LDcyMiw1NTYsMWUzLDg4OSw3NzgsNjExLDY2Nyw1NTYsNjExLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsNDY1LDcyMiwzMzMsODUzLDkwNiw0NzQsODI1LDkyNyw4MzgsMjc4LDcyMiw3MjIsNjAxLDcxOSw2NjcsNjExLDcyMiw3NzgsMjc4LDcyMiw2NjcsODMzLDcyMiw2NDQsNzc4LDcyMiw2NjcsNjAwLDYxMSw2NjcsODIxLDY2Nyw4MDksODAyLDI3OCw2NjcsNjE1LDQ1MSw2MTEsMjc4LDU4Miw2MTUsNjEwLDU1Niw2MDYsNDc1LDQ2MCw2MTEsNTQxLDI3OCw1NTgsNTU2LDYxMiw1NTYsNDQ1LDYxMSw3NjYsNjE5LDUyMCw2ODQsNDQ2LDU4Miw3MTUsNTc2LDc1Myw4NDUsMjc4LDU4Miw2MTEsNTgyLDg0NSw2NjcsNjY5LDg4NSw1NjcsNzExLDY2NywyNzgsMjc2LDU1NiwxMDk0LDEwNjIsODc1LDYxMCw3MjIsNjIyLDcxOSw3MjIsNzE5LDcyMiw1NjcsNzEyLDY2Nyw5MDQsNjI2LDcxOSw3MTksNjEwLDcwMiw4MzMsNzIyLDc3OCw3MTksNjY3LDcyMiw2MTEsNjIyLDg1NCw2NjcsNzMwLDcwMywxMDA1LDEwMTksODcwLDk3OSw3MTksNzExLDEwMzEsNzE5LDU1Niw2MTgsNjE1LDQxNyw2MzUsNTU2LDcwOSw0OTcsNjE1LDYxNSw1MDAsNjM1LDc0MCw2MDQsNjExLDYwNCw2MTEsNTU2LDQ5MCw1NTYsODc1LDU1Niw2MTUsNTgxLDgzMyw4NDQsNzI5LDg1NCw2MTUsNTUyLDg1NCw1ODMsNTU2LDU1Niw2MTEsNDE3LDU1Miw1NTYsMjc4LDI4MSwyNzgsOTY5LDkwNiw2MTEsNTAwLDYxNSw1NTYsNjA0LDc3OCw2MTEsNDg3LDQ0Nyw5NDQsNzc4LDk0NCw3NzgsOTQ0LDc3OCw2NjcsNTU2LDMzMywzMzMsNTU2LDFlMywxZTMsNTUyLDI3OCwyNzgsMjc4LDI3OCw1MDAsNTAwLDUwMCw1NTYsNTU2LDM1MCwxZTMsMWUzLDI0MCw0NzksMzMzLDMzMyw2MDQsMzMzLDE2NywzOTYsNTU2LDU1NiwxMDk0LDU1Niw4ODUsNDg5LDExMTUsMWUzLDc2OCw2MDAsODM0LDgzNCw4MzQsODM0LDFlMyw1MDAsMWUzLDUwMCwxZTMsNTAwLDUwMCw0OTQsNjEyLDgyMyw3MTMsNTg0LDU0OSw3MTMsOTc5LDcyMiwyNzQsNTQ5LDU0OSw1ODMsNTQ5LDU0OSw2MDQsNTg0LDYwNCw2MDQsNzA4LDYyNSw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MjksNjA0LDYwNCwzNTQsMzU0LDFlMyw5OTAsOTkwLDk5MCw5OTAsNDk0LDYwNCw2MDQsNjA0LDYwNCwzNTQsMTAyMSwxMDUyLDkxNyw3NTAsNzUwLDUzMSw2NTYsNTk0LDUxMCw1MDAsNzUwLDc1MCw2MTEsNjExLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMjIyLDIyMiwzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzXSxLYT1bLTEsLTEsLTEsMzIsMzMsMzQsMzUsMzYsMzcsMzgsMzksNDAsNDEsNDIsNDMsNDQsNDUsNDYsNDcsNDgsNDksNTAsNTEsNTIsNTMsNTQsNTUsNTYsNTcsNTgsNTksNjAsNjEsNjIsNjMsNjQsNjUsNjYsNjcsNjgsNjksNzAsNzEsNzIsNzMsNzQsNzUsNzYsNzcsNzgsNzksODAsODEsODIsODMsODQsODUsODYsODcsODgsODksOTAsOTEsOTIsOTMsOTQsOTUsOTYsOTcsOTgsOTksMTAwLDEwMSwxMDIsMTAzLDEwNCwxMDUsMTA2LDEwNywxMDgsMTA5LDExMCwxMTEsMTEyLDExMywxMTQsMTE1LDExNiwxMTcsMTE4LDExOSwxMjAsMTIxLDEyMiwxMjMsMTI0LDEyNSwxMjYsMTYxLDE2MiwxNjMsMTY0LDE2NSwxNjYsMTY3LDE2OCwxNjksMTcwLDE3MSwxNzIsMTc0LDE3NSwxNzYsMTc3LDE3OCwxNzksMTgwLDE4MSwxODIsMTgzLDE4NCwxODUsMTg2LDE4NywxODgsMTg5LDE5MCwxOTEsMTkyLDE5MywxOTQsMTk1LDE5NiwxOTcsMTk4LDE5OSwyMDAsMjAxLDIwMiwyMDMsMjA0LDIwNSwyMDYsMjA3LDIwOCwyMDksMjEwLDIxMSwyMTIsMjEzLDIxNCwyMTUsMjE2LDIxNywyMTgsMjE5LDIyMCwyMjEsMjIyLDIyMywyMjQsMjI1LDIyNiwyMjcsMjI4LDIyOSwyMzAsMjMxLDIzMiwyMzMsMjM0LDIzNSwyMzYsMjM3LDIzOCwyMzksMjQwLDI0MSwyNDIsMjQzLDI0NCwyNDUsMjQ2LDI0NywyNDgsMjQ5LDI1MCwyNTEsMjUyLDI1MywyNTQsMjU1LDI1NiwyNTcsMjU4LDI1OSwyNjAsMjYxLDI2MiwyNjMsMjY0LDI2NSwyNjYsMjY3LDI2OCwyNjksMjcwLDI3MSwyNzIsMjczLDI3NCwyNzUsMjc2LDI3NywyNzgsMjc5LDI4MCwyODEsMjgyLDI4MywyODQsMjg1LDI4NiwyODcsMjg4LDI4OSwyOTAsMjkxLDI5MiwyOTMsMjk0LDI5NSwyOTYsMjk3LDI5OCwyOTksMzAwLDMwMSwzMDIsMzAzLDMwNCwzMDUsMzA2LDMwNywzMDgsMzA5LDMxMCwzMTEsMzEyLDMxMywzMTQsMzE1LDMxNiwzMTcsMzE4LDMxOSwzMjAsMzIxLDMyMiwzMjMsMzI0LDMyNSwzMjYsMzI3LDMyOCwzMjksMzMwLDMzMSwzMzIsMzMzLDMzNCwzMzUsMzM2LDMzNywzMzgsMzM5LDM0MCwzNDEsMzQyLDM0MywzNDQsMzQ1LDM0NiwzNDcsMzQ4LDM0OSwzNTAsMzUxLDM1MiwzNTMsMzU0LDM1NSwzNTYsMzU3LDM1OCwzNTksMzYwLDM2MSwzNjIsMzYzLDM2NCwzNjUsMzY2LDM2NywzNjgsMzY5LDM3MCwzNzEsMzcyLDM3MywzNzQsMzc1LDM3NiwzNzcsMzc4LDM3OSwzODAsMzgxLDM4MiwzODMsNDAyLDUwNiw1MDcsNTA4LDUwOSw1MTAsNTExLDUzNiw1MzcsNTM4LDUzOSw3MTAsNzExLDcxMyw3MjgsNzI5LDczMCw3MzEsNzMyLDczMyw5MDAsOTAxLDkwMiw5MDMsOTA0LDkwNSw5MDYsOTA4LDkxMCw5MTEsOTEyLDkxMyw5MTQsOTE1LDkxNiw5MTcsOTE4LDkxOSw5MjAsOTIxLDkyMiw5MjMsOTI0LDkyNSw5MjYsOTI3LDkyOCw5MjksOTMxLDkzMiw5MzMsOTM0LDkzNSw5MzYsOTM3LDkzOCw5MzksOTQwLDk0MSw5NDIsOTQzLDk0NCw5NDUsOTQ2LDk0Nyw5NDgsOTQ5LDk1MCw5NTEsOTUyLDk1Myw5NTQsOTU1LDk1Niw5NTcsOTU4LDk1OSw5NjAsOTYxLDk2Miw5NjMsOTY0LDk2NSw5NjYsOTY3LDk2OCw5NjksOTcwLDk3MSw5NzIsOTczLDk3NCwxMDI0LDEwMjUsMTAyNiwxMDI3LDEwMjgsMTAyOSwxMDMwLDEwMzEsMTAzMiwxMDMzLDEwMzQsMTAzNSwxMDM2LDEwMzcsMTAzOCwxMDM5LDEwNDAsMTA0MSwxMDQyLDEwNDMsMTA0NCwxMDQ1LDEwNDYsMTA0NywxMDQ4LDEwNDksMTA1MCwxMDUxLDEwNTIsMTA1MywxMDU0LDEwNTUsMTA1NiwxMDU3LDEwNTgsMTA1OSwxMDYwLDEwNjEsMTA2MiwxMDYzLDEwNjQsMTA2NSwxMDY2LDEwNjcsMTA2OCwxMDY5LDEwNzAsMTA3MSwxMDcyLDEwNzMsMTA3NCwxMDc1LDEwNzYsMTA3NywxMDc4LDEwNzksMTA4MCwxMDgxLDEwODIsMTA4MywxMDg0LDEwODUsMTA4NiwxMDg3LDEwODgsMTA4OSwxMDkwLDEwOTEsMTA5MiwxMDkzLDEwOTQsMTA5NSwxMDk2LDEwOTcsMTA5OCwxMDk5LDExMDAsMTEwMSwxMTAyLDExMDMsMTEwNCwxMTA1LDExMDYsMTEwNywxMTA4LDExMDksMTExMCwxMTExLDExMTIsMTExMywxMTE0LDExMTUsMTExNiwxMTE3LDExMTgsMTExOSwxMTM4LDExMzksMTE2OCwxMTY5LDc4MDgsNzgwOSw3ODEwLDc4MTEsNzgxMiw3ODEzLDc5MjIsNzkyMyw4MjA4LDgyMDksODIxMSw4MjEyLDgyMTMsODIxNSw4MjE2LDgyMTcsODIxOCw4MjE5LDgyMjAsODIyMSw4MjIyLDgyMjQsODIyNSw4MjI2LDgyMzAsODI0MCw4MjQyLDgyNDMsODI0OSw4MjUwLDgyNTIsODI1NCw4MjYwLDgzMTksODM1NSw4MzU2LDgzNTksODM2NCw4NDUzLDg0NjcsODQ3MCw4NDgyLDg0ODYsODQ5NCw4NTM5LDg1NDAsODU0MSw4NTQyLDg1OTIsODU5Myw4NTk0LDg1OTUsODU5Niw4NTk3LDg2MTYsODcwNiw4NzEwLDg3MTksODcyMSw4NzIyLDg3MzAsODczNCw4NzM1LDg3NDUsODc0Nyw4Nzc2LDg4MDAsODgwMSw4ODA0LDg4MDUsODk2Miw4OTc2LDg5OTIsODk5Myw5NDcyLDk0NzQsOTQ4NCw5NDg4LDk0OTIsOTQ5Niw5NTAwLDk1MDgsOTUxNiw5NTI0LDk1MzIsOTU1Miw5NTUzLDk1NTQsOTU1NSw5NTU2LDk1NTcsOTU1OCw5NTU5LDk1NjAsOTU2MSw5NTYyLDk1NjMsOTU2NCw5NTY1LDk1NjYsOTU2Nyw5NTY4LDk1NjksOTU3MCw5NTcxLDk1NzIsOTU3Myw5NTc0LDk1NzUsOTU3Niw5NTc3LDk1NzgsOTU3OSw5NTgwLDk2MDAsOTYwNCw5NjA4LDk2MTIsOTYxNiw5NjE3LDk2MTgsOTYxOSw5NjMyLDk2MzMsOTY0Miw5NjQzLDk2NDQsOTY1MCw5NjU4LDk2NjAsOTY2OCw5Njc0LDk2NzUsOTY3OSw5Njg4LDk2ODksOTcwMiw5Nzg2LDk3ODcsOTc4OCw5NzkyLDk3OTQsOTgyNCw5ODI3LDk4MjksOTgzMCw5ODM0LDk4MzUsOTgzNiw2MTQ0MSw2MTQ0Miw2MTQ0NSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMSwtMV0sVGE9WzM2NSwwLDMzMywyNzgsMzMzLDQ3NCw1NTYsNTU2LDg4OSw3MjIsMjM4LDMzMywzMzMsMzg5LDU4NCwyNzgsMzMzLDI3OCwyNzgsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDMzMywzMzMsNTg0LDU4NCw1ODQsNjExLDk3NSw3MjIsNzIyLDcyMiw3MjIsNjY3LDYxMSw3NzgsNzIyLDI3OCw1NTYsNzIyLDYxMSw4MzMsNzIyLDc3OCw2NjcsNzc4LDcyMiw2NjcsNjExLDcyMiw2NjcsOTQ0LDY2Nyw2NjcsNjExLDMzMywyNzgsMzMzLDU4NCw1NTYsMzMzLDU1Niw2MTEsNTU2LDYxMSw1NTYsMzMzLDYxMSw2MTEsMjc4LDI3OCw1NTYsMjc4LDg4OSw2MTEsNjExLDYxMSw2MTEsMzg5LDU1NiwzMzMsNjExLDU1Niw3NzgsNTU2LDU1Niw1MDAsMzg5LDI4MCwzODksNTg0LDMzMyw1NTYsNTU2LDU1Niw1NTYsMjgwLDU1NiwzMzMsNzM3LDM3MCw1NTYsNTg0LDczNyw1NTIsNDAwLDU0OSwzMzMsMzMzLDMzMyw1NzYsNTU2LDI3OCwzMzMsMzMzLDM2NSw1NTYsODM0LDgzNCw4MzQsNjExLDcyMiw3MjIsNzIyLDcyMiw3MjIsNzIyLDFlMyw3MjIsNjY3LDY2Nyw2NjcsNjY3LDI3OCwyNzgsMjc4LDI3OCw3MjIsNzIyLDc3OCw3NzgsNzc4LDc3OCw3NzgsNTg0LDc3OCw3MjIsNzIyLDcyMiw3MjIsNjY3LDY2Nyw2MTEsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsODg5LDU1Niw1NTYsNTU2LDU1Niw1NTYsMjc4LDI3OCwyNzgsMjc4LDYxMSw2MTEsNjExLDYxMSw2MTEsNjExLDYxMSw1NDksNjExLDYxMSw2MTEsNjExLDYxMSw1NTYsNjExLDU1Niw3MjIsNTU2LDcyMiw1NTYsNzIyLDU1Niw3MjIsNTU2LDcyMiw1NTYsNzIyLDU1Niw3MjIsNTU2LDcyMiw3NDAsNzIyLDYxMSw2NjcsNTU2LDY2Nyw1NTYsNjY3LDU1Niw2NjcsNTU2LDY2Nyw1NTYsNzc4LDYxMSw3NzgsNjExLDc3OCw2MTEsNzc4LDYxMSw3MjIsNjExLDcyMiw2MTEsMjc4LDI3OCwyNzgsMjc4LDI3OCwyNzgsMjc4LDI3OCwyNzgsMjc4LDc4Miw1NTYsNTU2LDI3OCw3MjIsNTU2LDU1Niw2MTEsMjc4LDYxMSwyNzgsNjExLDM5Niw2MTEsNDc5LDYxMSwyNzgsNzIyLDYxMSw3MjIsNjExLDcyMiw2MTEsNzA4LDcyMyw2MTEsNzc4LDYxMSw3NzgsNjExLDc3OCw2MTEsMWUzLDk0NCw3MjIsMzg5LDcyMiwzODksNzIyLDM4OSw2NjcsNTU2LDY2Nyw1NTYsNjY3LDU1Niw2NjcsNTU2LDYxMSwzMzMsNjExLDQ3OSw2MTEsMzMzLDcyMiw2MTEsNzIyLDYxMSw3MjIsNjExLDcyMiw2MTEsNzIyLDYxMSw3MjIsNjExLDk0NCw3NzgsNjY3LDU1Niw2NjcsNjExLDUwMCw2MTEsNTAwLDYxMSw1MDAsMjc4LDU1Niw3MjIsNTU2LDFlMyw4ODksNzc4LDYxMSw2NjcsNTU2LDYxMSwzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMyw3MjIsMzMzLDg1NCw5MDYsNDczLDg0NCw5MzAsODQ3LDI3OCw3MjIsNzIyLDYxMCw2NzEsNjY3LDYxMSw3MjIsNzc4LDI3OCw3MjIsNjY3LDgzMyw3MjIsNjU3LDc3OCw3MTgsNjY3LDU5MCw2MTEsNjY3LDgyMiw2NjcsODI5LDc4MSwyNzgsNjY3LDYyMCw0NzksNjExLDI3OCw1OTEsNjIwLDYyMSw1NTYsNjEwLDQ3OSw0OTIsNjExLDU1OCwyNzgsNTY2LDU1Niw2MDMsNTU2LDQ1MCw2MTEsNzEyLDYwNSw1MzIsNjY0LDQwOSw1OTEsNzA0LDU3OCw3NzMsODM0LDI3OCw1OTEsNjExLDU5MSw4MzQsNjY3LDY2Nyw4ODYsNjE0LDcxOSw2NjcsMjc4LDI3OCw1NTYsMTA5NCwxMDQyLDg1NCw2MjIsNzE5LDY3Nyw3MTksNzIyLDcwOCw3MjIsNjE0LDcyMiw2NjcsOTI3LDY0Myw3MTksNzE5LDYxNSw2ODcsODMzLDcyMiw3NzgsNzE5LDY2Nyw3MjIsNjExLDY3Nyw3ODEsNjY3LDcyOSw3MDgsOTc5LDk4OSw4NTQsMWUzLDcwOCw3MTksMTA0Miw3MjksNTU2LDYxOSw2MDQsNTM0LDYxOCw1NTYsNzM2LDUxMCw2MTEsNjExLDUwNyw2MjIsNzQwLDYwNCw2MTEsNjExLDYxMSw1NTYsODg5LDU1Niw4ODUsNTU2LDY0Niw1ODMsODg5LDkzNSw3MDcsODU0LDU5NCw1NTIsODY1LDU4OSw1NTYsNTU2LDYxMSw0NjksNTYzLDU1NiwyNzgsMjc4LDI3OCw5NjksOTA2LDYxMSw1MDcsNjE5LDU1Niw2MTEsNzc4LDYxMSw1NzUsNDY3LDk0NCw3NzgsOTQ0LDc3OCw5NDQsNzc4LDY2Nyw1NTYsMzMzLDMzMyw1NTYsMWUzLDFlMyw1NTIsMjc4LDI3OCwyNzgsMjc4LDUwMCw1MDAsNTAwLDU1Niw1NTYsMzUwLDFlMywxZTMsMjQwLDQ3OSwzMzMsMzMzLDYwNCwzMzMsMTY3LDM5Niw1NTYsNTU2LDExMDQsNTU2LDg4NSw1MTYsMTE0NiwxZTMsNzY4LDYwMCw4MzQsODM0LDgzNCw4MzQsOTk5LDUwMCwxZTMsNTAwLDFlMyw1MDAsNTAwLDQ5NCw2MTIsODIzLDcxMyw1ODQsNTQ5LDcxMyw5NzksNzIyLDI3NCw1NDksNTQ5LDU4Myw1NDksNTQ5LDYwNCw1ODQsNjA0LDYwNCw3MDgsNjI1LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcyOSw2MDQsNjA0LDM1NCwzNTQsMWUzLDk5MCw5OTAsOTkwLDk5MCw0OTQsNjA0LDYwNCw2MDQsNjA0LDM1NCwxMDIxLDEwNTIsOTE3LDc1MCw3NTAsNTMxLDY1Niw1OTQsNTEwLDUwMCw3NTAsNzUwLDYxMSw2MTEsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywyMjIsMjIyLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzNdLHFhPVstMSwtMSwtMSwzMiwzMywzNCwzNSwzNiwzNywzOCwzOSw0MCw0MSw0Miw0Myw0NCw0NSw0Niw0Nyw0OCw0OSw1MCw1MSw1Miw1Myw1NCw1NSw1Niw1Nyw1OCw1OSw2MCw2MSw2Miw2Myw2NCw2NSw2Niw2Nyw2OCw2OSw3MCw3MSw3Miw3Myw3NCw3NSw3Niw3Nyw3OCw3OSw4MCw4MSw4Miw4Myw4NCw4NSw4Niw4Nyw4OCw4OSw5MCw5MSw5Miw5Myw5NCw5NSw5Niw5Nyw5OCw5OSwxMDAsMTAxLDEwMiwxMDMsMTA0LDEwNSwxMDYsMTA3LDEwOCwxMDksMTEwLDExMSwxMTIsMTEzLDExNCwxMTUsMTE2LDExNywxMTgsMTE5LDEyMCwxMjEsMTIyLDEyMywxMjQsMTI1LDEyNiwxNjEsMTYyLDE2MywxNjQsMTY1LDE2NiwxNjcsMTY4LDE2OSwxNzAsMTcxLDE3MiwxNzQsMTc1LDE3NiwxNzcsMTc4LDE3OSwxODAsMTgxLDE4MiwxODMsMTg0LDE4NSwxODYsMTg3LDE4OCwxODksMTkwLDE5MSwxOTIsMTkzLDE5NCwxOTUsMTk2LDE5NywxOTgsMTk5LDIwMCwyMDEsMjAyLDIwMywyMDQsMjA1LDIwNiwyMDcsMjA4LDIwOSwyMTAsMjExLDIxMiwyMTMsMjE0LDIxNSwyMTYsMjE3LDIxOCwyMTksMjIwLDIyMSwyMjIsMjIzLDIyNCwyMjUsMjI2LDIyNywyMjgsMjI5LDIzMCwyMzEsMjMyLDIzMywyMzQsMjM1LDIzNiwyMzcsMjM4LDIzOSwyNDAsMjQxLDI0MiwyNDMsMjQ0LDI0NSwyNDYsMjQ3LDI0OCwyNDksMjUwLDI1MSwyNTIsMjUzLDI1NCwyNTUsMjU2LDI1NywyNTgsMjU5LDI2MCwyNjEsMjYyLDI2MywyNjQsMjY1LDI2NiwyNjcsMjY4LDI2OSwyNzAsMjcxLDI3MiwyNzMsMjc0LDI3NSwyNzYsMjc3LDI3OCwyNzksMjgwLDI4MSwyODIsMjgzLDI4NCwyODUsMjg2LDI4NywyODgsMjg5LDI5MCwyOTEsMjkyLDI5MywyOTQsMjk1LDI5NiwyOTcsMjk4LDI5OSwzMDAsMzAxLDMwMiwzMDMsMzA0LDMwNSwzMDYsMzA3LDMwOCwzMDksMzEwLDMxMSwzMTIsMzEzLDMxNCwzMTUsMzE2LDMxNywzMTgsMzE5LDMyMCwzMjEsMzIyLDMyMywzMjQsMzI1LDMyNiwzMjcsMzI4LDMyOSwzMzAsMzMxLDMzMiwzMzMsMzM0LDMzNSwzMzYsMzM3LDMzOCwzMzksMzQwLDM0MSwzNDIsMzQzLDM0NCwzNDUsMzQ2LDM0NywzNDgsMzQ5LDM1MCwzNTEsMzUyLDM1MywzNTQsMzU1LDM1NiwzNTcsMzU4LDM1OSwzNjAsMzYxLDM2MiwzNjMsMzY0LDM2NSwzNjYsMzY3LDM2OCwzNjksMzcwLDM3MSwzNzIsMzczLDM3NCwzNzUsMzc2LDM3NywzNzgsMzc5LDM4MCwzODEsMzgyLDM4Myw0MDIsNTA2LDUwNyw1MDgsNTA5LDUxMCw1MTEsNTM2LDUzNyw1MzgsNTM5LDcxMCw3MTEsNzEzLDcyOCw3MjksNzMwLDczMSw3MzIsNzMzLDkwMCw5MDEsOTAyLDkwMyw5MDQsOTA1LDkwNiw5MDgsOTEwLDkxMSw5MTIsOTEzLDkxNCw5MTUsOTE2LDkxNyw5MTgsOTE5LDkyMCw5MjEsOTIyLDkyMyw5MjQsOTI1LDkyNiw5MjcsOTI4LDkyOSw5MzEsOTMyLDkzMyw5MzQsOTM1LDkzNiw5MzcsOTM4LDkzOSw5NDAsOTQxLDk0Miw5NDMsOTQ0LDk0NSw5NDYsOTQ3LDk0OCw5NDksOTUwLDk1MSw5NTIsOTUzLDk1NCw5NTUsOTU2LDk1Nyw5NTgsOTU5LDk2MCw5NjEsOTYyLDk2Myw5NjQsOTY1LDk2Niw5NjcsOTY4LDk2OSw5NzAsOTcxLDk3Miw5NzMsOTc0LDEwMjQsMTAyNSwxMDI2LDEwMjcsMTAyOCwxMDI5LDEwMzAsMTAzMSwxMDMyLDEwMzMsMTAzNCwxMDM1LDEwMzYsMTAzNywxMDM4LDEwMzksMTA0MCwxMDQxLDEwNDIsMTA0MywxMDQ0LDEwNDUsMTA0NiwxMDQ3LDEwNDgsMTA0OSwxMDUwLDEwNTEsMTA1MiwxMDUzLDEwNTQsMTA1NSwxMDU2LDEwNTcsMTA1OCwxMDU5LDEwNjAsMTA2MSwxMDYyLDEwNjMsMTA2NCwxMDY1LDEwNjYsMTA2NywxMDY4LDEwNjksMTA3MCwxMDcxLDEwNzIsMTA3MywxMDc0LDEwNzUsMTA3NiwxMDc3LDEwNzgsMTA3OSwxMDgwLDEwODEsMTA4MiwxMDgzLDEwODQsMTA4NSwxMDg2LDEwODcsMTA4OCwxMDg5LDEwOTAsMTA5MSwxMDkyLDEwOTMsMTA5NCwxMDk1LDEwOTYsMTA5NywxMDk4LDEwOTksMTEwMCwxMTAxLDExMDIsMTEwMywxMTA0LDExMDUsMTEwNiwxMTA3LDExMDgsMTEwOSwxMTEwLDExMTEsMTExMiwxMTEzLDExMTQsMTExNSwxMTE2LDExMTcsMTExOCwxMTE5LDExMzgsMTEzOSwxMTY4LDExNjksNzgwOCw3ODA5LDc4MTAsNzgxMSw3ODEyLDc4MTMsNzkyMiw3OTIzLDgyMDgsODIwOSw4MjExLDgyMTIsODIxMyw4MjE1LDgyMTYsODIxNyw4MjE4LDgyMTksODIyMCw4MjIxLDgyMjIsODIyNCw4MjI1LDgyMjYsODIzMCw4MjQwLDgyNDIsODI0Myw4MjQ5LDgyNTAsODI1Miw4MjU0LDgyNjAsODMxOSw4MzU1LDgzNTYsODM1OSw4MzY0LDg0NTMsODQ2Nyw4NDcwLDg0ODIsODQ4Niw4NDk0LDg1MzksODU0MCw4NTQxLDg1NDIsODU5Miw4NTkzLDg1OTQsODU5NSw4NTk2LDg1OTcsODYxNiw4NzA2LDg3MTAsODcxOSw4NzIxLDg3MjIsODczMCw4NzM0LDg3MzUsODc0NSw4NzQ3LDg3NzYsODgwMCw4ODAxLDg4MDQsODgwNSw4OTYyLDg5NzYsODk5Miw4OTkzLDk0NzIsOTQ3NCw5NDg0LDk0ODgsOTQ5Miw5NDk2LDk1MDAsOTUwOCw5NTE2LDk1MjQsOTUzMiw5NTUyLDk1NTMsOTU1NCw5NTU1LDk1NTYsOTU1Nyw5NTU4LDk1NTksOTU2MCw5NTYxLDk1NjIsOTU2Myw5NTY0LDk1NjUsOTU2Niw5NTY3LDk1NjgsOTU2OSw5NTcwLDk1NzEsOTU3Miw5NTczLDk1NzQsOTU3NSw5NTc2LDk1NzcsOTU3OCw5NTc5LDk1ODAsOTYwMCw5NjA0LDk2MDgsOTYxMiw5NjE2LDk2MTcsOTYxOCw5NjE5LDk2MzIsOTYzMyw5NjQyLDk2NDMsOTY0NCw5NjUwLDk2NTgsOTY2MCw5NjY4LDk2NzQsOTY3NSw5Njc5LDk2ODgsOTY4OSw5NzAyLDk3ODYsOTc4Nyw5Nzg4LDk3OTIsOTc5NCw5ODI0LDk4MjcsOTgyOSw5ODMwLDk4MzQsOTgzNSw5ODM2LDYxNDQxLDYxNDQyLDYxNDQ1LC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xXSxPYT1bMzY1LDAsMzMzLDI3OCwyNzgsMzU1LDU1Niw1NTYsODg5LDY2NywxOTEsMzMzLDMzMywzODksNTg0LDI3OCwzMzMsMjc4LDI3OCw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsMjc4LDI3OCw1ODQsNTg0LDU4NCw1NTYsMTAxNSw2NjcsNjY3LDcyMiw3MjIsNjY3LDYxMSw3NzgsNzIyLDI3OCw1MDAsNjY3LDU1Niw4MzMsNzIyLDc3OCw2NjcsNzc4LDcyMiw2NjcsNjExLDcyMiw2NjcsOTQ0LDY2Nyw2NjcsNjExLDI3OCwyNzgsMjc4LDQ2OSw1NTYsMzMzLDU1Niw1NTYsNTAwLDU1Niw1NTYsMjc4LDU1Niw1NTYsMjIyLDIyMiw1MDAsMjIyLDgzMyw1NTYsNTU2LDU1Niw1NTYsMzMzLDUwMCwyNzgsNTU2LDUwMCw3MjIsNTAwLDUwMCw1MDAsMzM0LDI2MCwzMzQsNTg0LDMzMyw1NTYsNTU2LDU1Niw1NTYsMjYwLDU1NiwzMzMsNzM3LDM3MCw1NTYsNTg0LDczNyw1NTIsNDAwLDU0OSwzMzMsMzMzLDMzMyw1NzYsNTM3LDI3OCwzMzMsMzMzLDM2NSw1NTYsODM0LDgzNCw4MzQsNjExLDY2Nyw2NjcsNjY3LDY2Nyw2NjcsNjY3LDFlMyw3MjIsNjY3LDY2Nyw2NjcsNjY3LDI3OCwyNzgsMjc4LDI3OCw3MjIsNzIyLDc3OCw3NzgsNzc4LDc3OCw3NzgsNTg0LDc3OCw3MjIsNzIyLDcyMiw3MjIsNjY3LDY2Nyw2MTEsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsODg5LDUwMCw1NTYsNTU2LDU1Niw1NTYsMjc4LDI3OCwyNzgsMjc4LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NDksNjExLDU1Niw1NTYsNTU2LDU1Niw1MDAsNTU2LDUwMCw2NjcsNTU2LDY2Nyw1NTYsNjY3LDU1Niw3MjIsNTAwLDcyMiw1MDAsNzIyLDUwMCw3MjIsNTAwLDcyMiw2MjUsNzIyLDU1Niw2NjcsNTU2LDY2Nyw1NTYsNjY3LDU1Niw2NjcsNTU2LDY2Nyw1NTYsNzc4LDU1Niw3NzgsNTU2LDc3OCw1NTYsNzc4LDU1Niw3MjIsNTU2LDcyMiw1NTYsMjc4LDI3OCwyNzgsMjc4LDI3OCwyNzgsMjc4LDIyMiwyNzgsMjc4LDczMyw0NDQsNTAwLDIyMiw2NjcsNTAwLDUwMCw1NTYsMjIyLDU1NiwyMjIsNTU2LDI4MSw1NTYsNDAwLDU1NiwyMjIsNzIyLDU1Niw3MjIsNTU2LDcyMiw1NTYsNjE1LDcyMyw1NTYsNzc4LDU1Niw3NzgsNTU2LDc3OCw1NTYsMWUzLDk0NCw3MjIsMzMzLDcyMiwzMzMsNzIyLDMzMyw2NjcsNTAwLDY2Nyw1MDAsNjY3LDUwMCw2NjcsNTAwLDYxMSwyNzgsNjExLDM1NCw2MTEsMjc4LDcyMiw1NTYsNzIyLDU1Niw3MjIsNTU2LDcyMiw1NTYsNzIyLDU1Niw3MjIsNTU2LDk0NCw3MjIsNjY3LDUwMCw2NjcsNjExLDUwMCw2MTEsNTAwLDYxMSw1MDAsMjIyLDU1Niw2NjcsNTU2LDFlMyw4ODksNzc4LDYxMSw2NjcsNTAwLDYxMSwyNzgsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMyw2NjcsMjc4LDc4OSw4NDYsMzg5LDc5NCw4NjUsNzc1LDIyMiw2NjcsNjY3LDU3MCw2NzEsNjY3LDYxMSw3MjIsNzc4LDI3OCw2NjcsNjY3LDgzMyw3MjIsNjQ4LDc3OCw3MjUsNjY3LDYwMCw2MTEsNjY3LDgzNyw2NjcsODMxLDc2MSwyNzgsNjY3LDU3MCw0MzksNTU1LDIyMiw1NTAsNTcwLDU3MSw1MDAsNTU2LDQzOSw0NjMsNTU1LDU0MiwyMjIsNTAwLDQ5Miw1NDgsNTAwLDQ0Nyw1NTYsNjcwLDU3Myw0ODYsNjAzLDM3NCw1NTAsNjUyLDU0Niw3MjgsNzc5LDIyMiw1NTAsNTU2LDU1MCw3NzksNjY3LDY2Nyw4NDMsNTQ0LDcwOCw2NjcsMjc4LDI3OCw1MDAsMTA2Niw5ODIsODQ0LDU4OSw3MTUsNjM5LDcyNCw2NjcsNjUxLDY2Nyw1NDQsNzA0LDY2Nyw5MTcsNjE0LDcxNSw3MTUsNTg5LDY4Niw4MzMsNzIyLDc3OCw3MjUsNjY3LDcyMiw2MTEsNjM5LDc5NSw2NjcsNzI3LDY3Myw5MjAsOTIzLDgwNSw4ODYsNjUxLDY5NCwxMDIyLDY4Miw1NTYsNTYyLDUyMiw0OTMsNTUzLDU1Niw2ODgsNDY1LDU1Niw1NTYsNDcyLDU2NCw2ODYsNTUwLDU1Niw1NTYsNTU2LDUwMCw4MzMsNTAwLDgzNSw1MDAsNTcyLDUxOCw4MzAsODUxLDYyMSw3MzYsNTI2LDQ5Miw3NTIsNTM0LDU1Niw1NTYsNTU2LDM3OCw0OTYsNTAwLDIyMiwyMjIsMjIyLDkxMCw4MjgsNTU2LDQ3Miw1NjUsNTAwLDU1Niw3NzgsNTU2LDQ5MiwzMzksOTQ0LDcyMiw5NDQsNzIyLDk0NCw3MjIsNjY3LDUwMCwzMzMsMzMzLDU1NiwxZTMsMWUzLDU1MiwyMjIsMjIyLDIyMiwyMjIsMzMzLDMzMywzMzMsNTU2LDU1NiwzNTAsMWUzLDFlMywxODgsMzU0LDMzMywzMzMsNTAwLDMzMywxNjcsMzY1LDU1Niw1NTYsMTA5NCw1NTYsODg1LDMyMywxMDgzLDFlMyw3NjgsNjAwLDgzNCw4MzQsODM0LDgzNCwxZTMsNTAwLDk5OCw1MDAsMWUzLDUwMCw1MDAsNDk0LDYxMiw4MjMsNzEzLDU4NCw1NDksNzEzLDk3OSw3MTksMjc0LDU0OSw1NDksNTg0LDU0OSw1NDksNjA0LDU4NCw2MDQsNjA0LDcwOCw2MjUsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzI5LDYwNCw2MDQsMzU0LDM1NCwxZTMsOTkwLDk5MCw5OTAsOTkwLDQ5NCw2MDQsNjA0LDYwNCw2MDQsMzU0LDEwMjEsMTA1Miw5MTcsNzUwLDc1MCw1MzEsNjU2LDU5NCw1MTAsNTAwLDc1MCw3NTAsNTAwLDUwMCwzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDIyMiwyMjIsMjk0LDI5NCwzMjQsMzI0LDMxNiwzMjgsMzk4LDI4NV0sUGE9Wy0xLC0xLC0xLDMyLDMzLDM0LDM1LDM2LDM3LDM4LDM5LDQwLDQxLDQyLDQzLDQ0LDQ1LDQ2LDQ3LDQ4LDQ5LDUwLDUxLDUyLDUzLDU0LDU1LDU2LDU3LDU4LDU5LDYwLDYxLDYyLDYzLDY0LDY1LDY2LDY3LDY4LDY5LDcwLDcxLDcyLDczLDc0LDc1LDc2LDc3LDc4LDc5LDgwLDgxLDgyLDgzLDg0LDg1LDg2LDg3LDg4LDg5LDkwLDkxLDkyLDkzLDk0LDk1LDk2LDk3LDk4LDk5LDEwMCwxMDEsMTAyLDEwMywxMDQsMTA1LDEwNiwxMDcsMTA4LDEwOSwxMTAsMTExLDExMiwxMTMsMTE0LDExNSwxMTYsMTE3LDExOCwxMTksMTIwLDEyMSwxMjIsMTIzLDEyNCwxMjUsMTI2LDE2MSwxNjIsMTYzLDE2NCwxNjUsMTY2LDE2NywxNjgsMTY5LDE3MCwxNzEsMTcyLDE3NCwxNzUsMTc2LDE3NywxNzgsMTc5LDE4MCwxODEsMTgyLDE4MywxODQsMTg1LDE4NiwxODcsMTg4LDE4OSwxOTAsMTkxLDE5MiwxOTMsMTk0LDE5NSwxOTYsMTk3LDE5OCwxOTksMjAwLDIwMSwyMDIsMjAzLDIwNCwyMDUsMjA2LDIwNywyMDgsMjA5LDIxMCwyMTEsMjEyLDIxMywyMTQsMjE1LDIxNiwyMTcsMjE4LDIxOSwyMjAsMjIxLDIyMiwyMjMsMjI0LDIyNSwyMjYsMjI3LDIyOCwyMjksMjMwLDIzMSwyMzIsMjMzLDIzNCwyMzUsMjM2LDIzNywyMzgsMjM5LDI0MCwyNDEsMjQyLDI0MywyNDQsMjQ1LDI0NiwyNDcsMjQ4LDI0OSwyNTAsMjUxLDI1MiwyNTMsMjU0LDI1NSwyNTYsMjU3LDI1OCwyNTksMjYwLDI2MSwyNjIsMjYzLDI2NCwyNjUsMjY2LDI2NywyNjgsMjY5LDI3MCwyNzEsMjcyLDI3MywyNzQsMjc1LDI3NiwyNzcsMjc4LDI3OSwyODAsMjgxLDI4MiwyODMsMjg0LDI4NSwyODYsMjg3LDI4OCwyODksMjkwLDI5MSwyOTIsMjkzLDI5NCwyOTUsMjk2LDI5NywyOTgsMjk5LDMwMCwzMDEsMzAyLDMwMywzMDQsMzA1LDMwNiwzMDcsMzA4LDMwOSwzMTAsMzExLDMxMiwzMTMsMzE0LDMxNSwzMTYsMzE3LDMxOCwzMTksMzIwLDMyMSwzMjIsMzIzLDMyNCwzMjUsMzI2LDMyNywzMjgsMzI5LDMzMCwzMzEsMzMyLDMzMywzMzQsMzM1LDMzNiwzMzcsMzM4LDMzOSwzNDAsMzQxLDM0MiwzNDMsMzQ0LDM0NSwzNDYsMzQ3LDM0OCwzNDksMzUwLDM1MSwzNTIsMzUzLDM1NCwzNTUsMzU2LDM1NywzNTgsMzU5LDM2MCwzNjEsMzYyLDM2MywzNjQsMzY1LDM2NiwzNjcsMzY4LDM2OSwzNzAsMzcxLDM3MiwzNzMsMzc0LDM3NSwzNzYsMzc3LDM3OCwzNzksMzgwLDM4MSwzODIsMzgzLDQwMiw1MDYsNTA3LDUwOCw1MDksNTEwLDUxMSw1MzYsNTM3LDUzOCw1MzksNzEwLDcxMSw3MTMsNzI4LDcyOSw3MzAsNzMxLDczMiw3MzMsOTAwLDkwMSw5MDIsOTAzLDkwNCw5MDUsOTA2LDkwOCw5MTAsOTExLDkxMiw5MTMsOTE0LDkxNSw5MTYsOTE3LDkxOCw5MTksOTIwLDkyMSw5MjIsOTIzLDkyNCw5MjUsOTI2LDkyNyw5MjgsOTI5LDkzMSw5MzIsOTMzLDkzNCw5MzUsOTM2LDkzNyw5MzgsOTM5LDk0MCw5NDEsOTQyLDk0Myw5NDQsOTQ1LDk0Niw5NDcsOTQ4LDk0OSw5NTAsOTUxLDk1Miw5NTMsOTU0LDk1NSw5NTYsOTU3LDk1OCw5NTksOTYwLDk2MSw5NjIsOTYzLDk2NCw5NjUsOTY2LDk2Nyw5NjgsOTY5LDk3MCw5NzEsOTcyLDk3Myw5NzQsMTAyNCwxMDI1LDEwMjYsMTAyNywxMDI4LDEwMjksMTAzMCwxMDMxLDEwMzIsMTAzMywxMDM0LDEwMzUsMTAzNiwxMDM3LDEwMzgsMTAzOSwxMDQwLDEwNDEsMTA0MiwxMDQzLDEwNDQsMTA0NSwxMDQ2LDEwNDcsMTA0OCwxMDQ5LDEwNTAsMTA1MSwxMDUyLDEwNTMsMTA1NCwxMDU1LDEwNTYsMTA1NywxMDU4LDEwNTksMTA2MCwxMDYxLDEwNjIsMTA2MywxMDY0LDEwNjUsMTA2NiwxMDY3LDEwNjgsMTA2OSwxMDcwLDEwNzEsMTA3MiwxMDczLDEwNzQsMTA3NSwxMDc2LDEwNzcsMTA3OCwxMDc5LDEwODAsMTA4MSwxMDgyLDEwODMsMTA4NCwxMDg1LDEwODYsMTA4NywxMDg4LDEwODksMTA5MCwxMDkxLDEwOTIsMTA5MywxMDk0LDEwOTUsMTA5NiwxMDk3LDEwOTgsMTA5OSwxMTAwLDExMDEsMTEwMiwxMTAzLDExMDQsMTEwNSwxMTA2LDExMDcsMTEwOCwxMTA5LDExMTAsMTExMSwxMTEyLDExMTMsMTExNCwxMTE1LDExMTYsMTExNywxMTE4LDExMTksMTEzOCwxMTM5LDExNjgsMTE2OSw3ODA4LDc4MDksNzgxMCw3ODExLDc4MTIsNzgxMyw3OTIyLDc5MjMsODIwOCw4MjA5LDgyMTEsODIxMiw4MjEzLDgyMTUsODIxNiw4MjE3LDgyMTgsODIxOSw4MjIwLDgyMjEsODIyMiw4MjI0LDgyMjUsODIyNiw4MjMwLDgyNDAsODI0Miw4MjQzLDgyNDksODI1MCw4MjUyLDgyNTQsODI2MCw4MzE5LDgzNTUsODM1Niw4MzU5LDgzNjQsODQ1Myw4NDY3LDg0NzAsODQ4Miw4NDg2LDg0OTQsODUzOSw4NTQwLDg1NDEsODU0Miw4NTkyLDg1OTMsODU5NCw4NTk1LDg1OTYsODU5Nyw4NjE2LDg3MDYsODcxMCw4NzE5LDg3MjEsODcyMiw4NzMwLDg3MzQsODczNSw4NzQ1LDg3NDcsODc3Niw4ODAwLDg4MDEsODgwNCw4ODA1LDg5NjIsODk3Niw4OTkyLDg5OTMsOTQ3Miw5NDc0LDk0ODQsOTQ4OCw5NDkyLDk0OTYsOTUwMCw5NTA4LDk1MTYsOTUyNCw5NTMyLDk1NTIsOTU1Myw5NTU0LDk1NTUsOTU1Niw5NTU3LDk1NTgsOTU1OSw5NTYwLDk1NjEsOTU2Miw5NTYzLDk1NjQsOTU2NSw5NTY2LDk1NjcsOTU2OCw5NTY5LDk1NzAsOTU3MSw5NTcyLDk1NzMsOTU3NCw5NTc1LDk1NzYsOTU3Nyw5NTc4LDk1NzksOTU4MCw5NjAwLDk2MDQsOTYwOCw5NjEyLDk2MTYsOTYxNyw5NjE4LDk2MTksOTYzMiw5NjMzLDk2NDIsOTY0Myw5NjQ0LDk2NTAsOTY1OCw5NjYwLDk2NjgsOTY3NCw5Njc1LDk2NzksOTY4OCw5Njg5LDk3MDIsOTc4Niw5Nzg3LDk3ODgsOTc5Miw5Nzk0LDk4MjQsOTgyNyw5ODI5LDk4MzAsOTgzNCw5ODM1LDk4MzYsNjE0NDEsNjE0NDIsNjE0NDUsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTFdLFdhPVszNjUsMCwzMzMsMjc4LDI3OCwzNTUsNTU2LDU1Niw4ODksNjY3LDE5MSwzMzMsMzMzLDM4OSw1ODQsMjc4LDMzMywyNzgsMjc4LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1NiwyNzgsMjc4LDU4NCw1ODQsNTg0LDU1NiwxMDE1LDY2Nyw2NjcsNzIyLDcyMiw2NjcsNjExLDc3OCw3MjIsMjc4LDUwMCw2NjcsNTU2LDgzMyw3MjIsNzc4LDY2Nyw3NzgsNzIyLDY2Nyw2MTEsNzIyLDY2Nyw5NDQsNjY3LDY2Nyw2MTEsMjc4LDI3OCwyNzgsNDY5LDU1NiwzMzMsNTU2LDU1Niw1MDAsNTU2LDU1NiwyNzgsNTU2LDU1NiwyMjIsMjIyLDUwMCwyMjIsODMzLDU1Niw1NTYsNTU2LDU1NiwzMzMsNTAwLDI3OCw1NTYsNTAwLDcyMiw1MDAsNTAwLDUwMCwzMzQsMjYwLDMzNCw1ODQsMzMzLDU1Niw1NTYsNTU2LDU1NiwyNjAsNTU2LDMzMyw3MzcsMzcwLDU1Niw1ODQsNzM3LDU1Miw0MDAsNTQ5LDMzMywzMzMsMzMzLDU3Niw1MzcsMjc4LDMzMywzMzMsMzY1LDU1Niw4MzQsODM0LDgzNCw2MTEsNjY3LDY2Nyw2NjcsNjY3LDY2Nyw2NjcsMWUzLDcyMiw2NjcsNjY3LDY2Nyw2NjcsMjc4LDI3OCwyNzgsMjc4LDcyMiw3MjIsNzc4LDc3OCw3NzgsNzc4LDc3OCw1ODQsNzc4LDcyMiw3MjIsNzIyLDcyMiw2NjcsNjY3LDYxMSw1NTYsNTU2LDU1Niw1NTYsNTU2LDU1Niw4ODksNTAwLDU1Niw1NTYsNTU2LDU1NiwyNzgsMjc4LDI3OCwyNzgsNTU2LDU1Niw1NTYsNTU2LDU1Niw1NTYsNTU2LDU0OSw2MTEsNTU2LDU1Niw1NTYsNTU2LDUwMCw1NTYsNTAwLDY2Nyw1NTYsNjY3LDU1Niw2NjcsNTU2LDcyMiw1MDAsNzIyLDUwMCw3MjIsNTAwLDcyMiw1MDAsNzIyLDYxNSw3MjIsNTU2LDY2Nyw1NTYsNjY3LDU1Niw2NjcsNTU2LDY2Nyw1NTYsNjY3LDU1Niw3NzgsNTU2LDc3OCw1NTYsNzc4LDU1Niw3NzgsNTU2LDcyMiw1NTYsNzIyLDU1NiwyNzgsMjc4LDI3OCwyNzgsMjc4LDI3OCwyNzgsMjIyLDI3OCwyNzgsNzM1LDQ0NCw1MDAsMjIyLDY2Nyw1MDAsNTAwLDU1NiwyMjIsNTU2LDIyMiw1NTYsMjkyLDU1NiwzMzQsNTU2LDIyMiw3MjIsNTU2LDcyMiw1NTYsNzIyLDU1Niw2MDQsNzIzLDU1Niw3NzgsNTU2LDc3OCw1NTYsNzc4LDU1NiwxZTMsOTQ0LDcyMiwzMzMsNzIyLDMzMyw3MjIsMzMzLDY2Nyw1MDAsNjY3LDUwMCw2NjcsNTAwLDY2Nyw1MDAsNjExLDI3OCw2MTEsMzc1LDYxMSwyNzgsNzIyLDU1Niw3MjIsNTU2LDcyMiw1NTYsNzIyLDU1Niw3MjIsNTU2LDcyMiw1NTYsOTQ0LDcyMiw2NjcsNTAwLDY2Nyw2MTEsNTAwLDYxMSw1MDAsNjExLDUwMCwyMjIsNTU2LDY2Nyw1NTYsMWUzLDg4OSw3NzgsNjExLDY2Nyw1MDAsNjExLDI3OCwzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDY2NywyNzgsNzg0LDgzOCwzODQsNzc0LDg1NSw3NTIsMjIyLDY2Nyw2NjcsNTUxLDY2OCw2NjcsNjExLDcyMiw3NzgsMjc4LDY2Nyw2NjgsODMzLDcyMiw2NTAsNzc4LDcyMiw2NjcsNjE4LDYxMSw2NjcsNzk4LDY2Nyw4MzUsNzQ4LDI3OCw2NjcsNTc4LDQ0Niw1NTYsMjIyLDU0Nyw1NzgsNTc1LDUwMCw1NTcsNDQ2LDQ0MSw1NTYsNTU2LDIyMiw1MDAsNTAwLDU3Niw1MDAsNDQ4LDU1Niw2OTAsNTY5LDQ4Miw2MTcsMzk1LDU0Nyw2NDgsNTI1LDcxMyw3ODEsMjIyLDU0Nyw1NTYsNTQ3LDc4MSw2NjcsNjY3LDg2NSw1NDIsNzE5LDY2NywyNzgsMjc4LDUwMCwxMDU3LDEwMTAsODU0LDU4Myw3MjIsNjM1LDcxOSw2NjcsNjU2LDY2Nyw1NDIsNjc3LDY2Nyw5MjMsNjA0LDcxOSw3MTksNTgzLDY1Niw4MzMsNzIyLDc3OCw3MTksNjY3LDcyMiw2MTEsNjM1LDc2MCw2NjcsNzQwLDY2Nyw5MTcsOTM4LDc5Miw4ODUsNjU2LDcxOSwxMDEwLDcyMiw1NTYsNTczLDUzMSwzNjUsNTgzLDU1Niw2NjksNDU4LDU1OSw1NTksNDM4LDU4Myw2ODgsNTUyLDU1Niw1NDIsNTU2LDUwMCw0NTgsNTAwLDgyMyw1MDAsNTczLDUyMSw4MDIsODIzLDYyNSw3MTksNTIxLDUxMCw3NTAsNTQyLDU1Niw1NTYsNTU2LDM2NSw1MTAsNTAwLDIyMiwyNzgsMjIyLDkwNiw4MTIsNTU2LDQzOCw1NTksNTAwLDU1Miw3NzgsNTU2LDQ4OSw0MTEsOTQ0LDcyMiw5NDQsNzIyLDk0NCw3MjIsNjY3LDUwMCwzMzMsMzMzLDU1NiwxZTMsMWUzLDU1MiwyMjIsMjIyLDIyMiwyMjIsMzMzLDMzMywzMzMsNTU2LDU1NiwzNTAsMWUzLDFlMywxODgsMzU0LDMzMywzMzMsNTAwLDMzMywxNjcsMzY1LDU1Niw1NTYsMTA5NCw1NTYsODg1LDMyMywxMDczLDFlMyw3NjgsNjAwLDgzNCw4MzQsODM0LDgzNCwxZTMsNTAwLDFlMyw1MDAsMWUzLDUwMCw1MDAsNDk0LDYxMiw4MjMsNzEzLDU4NCw1NDksNzEzLDk3OSw3MTksMjc0LDU0OSw1NDksNTgzLDU0OSw1NDksNjA0LDU4NCw2MDQsNjA0LDcwOCw2MjUsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzA4LDcwOCw3MDgsNzI5LDYwNCw2MDQsMzU0LDM1NCwxZTMsOTkwLDk5MCw5OTAsOTkwLDQ5NCw2MDQsNjA0LDYwNCw2MDQsMzU0LDEwMjEsMTA1Miw5MTcsNzUwLDc1MCw1MzEsNjU2LDU5NCw1MTAsNTAwLDc1MCw3NTAsNTAwLDUwMCwzMzMsMzMzLDMzMywzMzMsMzMzLDMzMywzMzMsMzMzLDIyMiwyMjIsMjk0LDI5NCwzMjQsMzI0LDMxNiwzMjgsMzk4LDI4NV0sWGE9Wy0xLC0xLC0xLDMyLDMzLDM0LDM1LDM2LDM3LDM4LDM5LDQwLDQxLDQyLDQzLDQ0LDQ1LDQ2LDQ3LDQ4LDQ5LDUwLDUxLDUyLDUzLDU0LDU1LDU2LDU3LDU4LDU5LDYwLDYxLDYyLDYzLDY0LDY1LDY2LDY3LDY4LDY5LDcwLDcxLDcyLDczLDc0LDc1LDc2LDc3LDc4LDc5LDgwLDgxLDgyLDgzLDg0LDg1LDg2LDg3LDg4LDg5LDkwLDkxLDkyLDkzLDk0LDk1LDk2LDk3LDk4LDk5LDEwMCwxMDEsMTAyLDEwMywxMDQsMTA1LDEwNiwxMDcsMTA4LDEwOSwxMTAsMTExLDExMiwxMTMsMTE0LDExNSwxMTYsMTE3LDExOCwxMTksMTIwLDEyMSwxMjIsMTIzLDEyNCwxMjUsMTI2LDE2MSwxNjIsMTYzLDE2NCwxNjUsMTY2LDE2NywxNjgsMTY5LDE3MCwxNzEsMTcyLDE3NCwxNzUsMTc2LDE3NywxNzgsMTc5LDE4MCwxODEsMTgyLDE4MywxODQsMTg1LDE4NiwxODcsMTg4LDE4OSwxOTAsMTkxLDE5MiwxOTMsMTk0LDE5NSwxOTYsMTk3LDE5OCwxOTksMjAwLDIwMSwyMDIsMjAzLDIwNCwyMDUsMjA2LDIwNywyMDgsMjA5LDIxMCwyMTEsMjEyLDIxMywyMTQsMjE1LDIxNiwyMTcsMjE4LDIxOSwyMjAsMjIxLDIyMiwyMjMsMjI0LDIyNSwyMjYsMjI3LDIyOCwyMjksMjMwLDIzMSwyMzIsMjMzLDIzNCwyMzUsMjM2LDIzNywyMzgsMjM5LDI0MCwyNDEsMjQyLDI0MywyNDQsMjQ1LDI0NiwyNDcsMjQ4LDI0OSwyNTAsMjUxLDI1MiwyNTMsMjU0LDI1NSwyNTYsMjU3LDI1OCwyNTksMjYwLDI2MSwyNjIsMjYzLDI2NCwyNjUsMjY2LDI2NywyNjgsMjY5LDI3MCwyNzEsMjcyLDI3MywyNzQsMjc1LDI3NiwyNzcsMjc4LDI3OSwyODAsMjgxLDI4MiwyODMsMjg0LDI4NSwyODYsMjg3LDI4OCwyODksMjkwLDI5MSwyOTIsMjkzLDI5NCwyOTUsMjk2LDI5NywyOTgsMjk5LDMwMCwzMDEsMzAyLDMwMywzMDQsMzA1LDMwNiwzMDcsMzA4LDMwOSwzMTAsMzExLDMxMiwzMTMsMzE0LDMxNSwzMTYsMzE3LDMxOCwzMTksMzIwLDMyMSwzMjIsMzIzLDMyNCwzMjUsMzI2LDMyNywzMjgsMzI5LDMzMCwzMzEsMzMyLDMzMywzMzQsMzM1LDMzNiwzMzcsMzM4LDMzOSwzNDAsMzQxLDM0MiwzNDMsMzQ0LDM0NSwzNDYsMzQ3LDM0OCwzNDksMzUwLDM1MSwzNTIsMzUzLDM1NCwzNTUsMzU2LDM1NywzNTgsMzU5LDM2MCwzNjEsMzYyLDM2MywzNjQsMzY1LDM2NiwzNjcsMzY4LDM2OSwzNzAsMzcxLDM3MiwzNzMsMzc0LDM3NSwzNzYsMzc3LDM3OCwzNzksMzgwLDM4MSwzODIsMzgzLDQwMiw1MDYsNTA3LDUwOCw1MDksNTEwLDUxMSw1MzYsNTM3LDUzOCw1MzksNzEwLDcxMSw3MTMsNzI4LDcyOSw3MzAsNzMxLDczMiw3MzMsOTAwLDkwMSw5MDIsOTAzLDkwNCw5MDUsOTA2LDkwOCw5MTAsOTExLDkxMiw5MTMsOTE0LDkxNSw5MTYsOTE3LDkxOCw5MTksOTIwLDkyMSw5MjIsOTIzLDkyNCw5MjUsOTI2LDkyNyw5MjgsOTI5LDkzMSw5MzIsOTMzLDkzNCw5MzUsOTM2LDkzNyw5MzgsOTM5LDk0MCw5NDEsOTQyLDk0Myw5NDQsOTQ1LDk0Niw5NDcsOTQ4LDk0OSw5NTAsOTUxLDk1Miw5NTMsOTU0LDk1NSw5NTYsOTU3LDk1OCw5NTksOTYwLDk2MSw5NjIsOTYzLDk2NCw5NjUsOTY2LDk2Nyw5NjgsOTY5LDk3MCw5NzEsOTcyLDk3Myw5NzQsMTAyNCwxMDI1LDEwMjYsMTAyNywxMDI4LDEwMjksMTAzMCwxMDMxLDEwMzIsMTAzMywxMDM0LDEwMzUsMTAzNiwxMDM3LDEwMzgsMTAzOSwxMDQwLDEwNDEsMTA0MiwxMDQzLDEwNDQsMTA0NSwxMDQ2LDEwNDcsMTA0OCwxMDQ5LDEwNTAsMTA1MSwxMDUyLDEwNTMsMTA1NCwxMDU1LDEwNTYsMTA1NywxMDU4LDEwNTksMTA2MCwxMDYxLDEwNjIsMTA2MywxMDY0LDEwNjUsMTA2NiwxMDY3LDEwNjgsMTA2OSwxMDcwLDEwNzEsMTA3MiwxMDczLDEwNzQsMTA3NSwxMDc2LDEwNzcsMTA3OCwxMDc5LDEwODAsMTA4MSwxMDgyLDEwODMsMTA4NCwxMDg1LDEwODYsMTA4NywxMDg4LDEwODksMTA5MCwxMDkxLDEwOTIsMTA5MywxMDk0LDEwOTUsMTA5NiwxMDk3LDEwOTgsMTA5OSwxMTAwLDExMDEsMTEwMiwxMTAzLDExMDQsMTEwNSwxMTA2LDExMDcsMTEwOCwxMTA5LDExMTAsMTExMSwxMTEyLDExMTMsMTExNCwxMTE1LDExMTYsMTExNywxMTE4LDExMTksMTEzOCwxMTM5LDExNjgsMTE2OSw3ODA4LDc4MDksNzgxMCw3ODExLDc4MTIsNzgxMyw3OTIyLDc5MjMsODIwOCw4MjA5LDgyMTEsODIxMiw4MjEzLDgyMTUsODIxNiw4MjE3LDgyMTgsODIxOSw4MjIwLDgyMjEsODIyMiw4MjI0LDgyMjUsODIyNiw4MjMwLDgyNDAsODI0Miw4MjQzLDgyNDksODI1MCw4MjUyLDgyNTQsODI2MCw4MzE5LDgzNTUsODM1Niw4MzU5LDgzNjQsODQ1Myw4NDY3LDg0NzAsODQ4Miw4NDg2LDg0OTQsODUzOSw4NTQwLDg1NDEsODU0Miw4NTkyLDg1OTMsODU5NCw4NTk1LDg1OTYsODU5Nyw4NjE2LDg3MDYsODcxMCw4NzE5LDg3MjEsODcyMiw4NzMwLDg3MzQsODczNSw4NzQ1LDg3NDcsODc3Niw4ODAwLDg4MDEsODgwNCw4ODA1LDg5NjIsODk3Niw4OTkyLDg5OTMsOTQ3Miw5NDc0LDk0ODQsOTQ4OCw5NDkyLDk0OTYsOTUwMCw5NTA4LDk1MTYsOTUyNCw5NTMyLDk1NTIsOTU1Myw5NTU0LDk1NTUsOTU1Niw5NTU3LDk1NTgsOTU1OSw5NTYwLDk1NjEsOTU2Miw5NTYzLDk1NjQsOTU2NSw5NTY2LDk1NjcsOTU2OCw5NTY5LDk1NzAsOTU3MSw5NTcyLDk1NzMsOTU3NCw5NTc1LDk1NzYsOTU3Nyw5NTc4LDk1NzksOTU4MCw5NjAwLDk2MDQsOTYwOCw5NjEyLDk2MTYsOTYxNyw5NjE4LDk2MTksOTYzMiw5NjMzLDk2NDIsOTY0Myw5NjQ0LDk2NTAsOTY1OCw5NjYwLDk2NjgsOTY3NCw5Njc1LDk2NzksOTY4OCw5Njg5LDk3MDIsOTc4Niw5Nzg3LDk3ODgsOTc5Miw5Nzk0LDk4MjQsOTgyNyw5ODI5LDk4MzAsOTgzNCw5ODM1LDk4MzYsNjE0NDEsNjE0NDIsNjE0NDUsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsLTFdLGphPVsxLjM2ODk4LDEsMSwuNzI3MDYsLjgwNDc5LC44MzczNCwuOTg4OTQsLjk5NzkzLC45ODk3LC45Mzg4NCwuODYyMDksLjk0MjkyLC45NDI5MiwxLjE2NjYxLDEuMDIwNTgsLjkzNTgyLC45NjY5NCwuOTM1ODIsMS4xOTEzNywuOTk3OTMsLjk5NzkzLC45OTc5MywuOTk3OTMsLjk5NzkzLC45OTc5MywuOTk3OTMsLjk5NzkzLC45OTc5MywuOTk3OTMsLjc4MDc2LC43ODA3NiwxLjAyMDU4LDEuMDIwNTgsMS4wMjA1OCwuNzI4NTEsLjc4OTY2LC45MDgzOCwuODM2MzcsLjgyMzkxLC45NjM3NiwuODAwNjEsLjg2Mjc1LC44NzY4LC45NTQwNywxLjAyNTgsLjczOTAxLC44NTAyMiwuODM2NTUsMS4wMTU2LC45NTU0NiwuOTIxNzksLjg3MTA3LC45MjE3OSwuODIxMTQsLjgwOTYsLjg5NzEzLC45NDQzOCwuOTUzNTMsLjk0MDgzLC45MTkwNSwuOTA0MDYsLjk0NDYsLjk0MjkyLDEuMTg3NzcsLjk0MjkyLDEuMDIwNTgsLjg5OTAzLC45MDA4OCwuOTQ5MzgsLjk3ODk4LC44MTA5MywuOTc1NzEsLjk0OTM4LDEuMDI0LC45NTc3LC45NTkzMywuOTg2MjEsMS4wNDc0LC45NzQ1NSwuOTg5ODEsLjk2NzIsLjk1OTMzLC45NDQ2LC45Nzg5OCwuOTc0MDcsLjk3NjQ2LC43ODAzNiwxLjEwMjA4LC45NTQ0MiwuOTUyOTgsLjk3NTc5LC45MzMyLC45NDAzOSwuOTM4LC44MDY4NywxLjAxMTQ5LC44MDY4NywxLjAyMDU4LC44MDQ3OSwuOTk3OTMsLjk5NzkzLC45OTc5MywuOTk3OTMsMS4wMTE0OSwxLjAwODcyLC45MDA4OCwuOTE4ODIsMS4wMjEzLC44MzYxLDEuMDIwNTgsLjYyMjk1LC41NDMyNCwuODkwMjIsMS4wODU5NSwxLDEsLjkwMDg4LDEsLjk3NDU1LC45MzU4MiwuOTAwODgsMSwxLjA1Njg2LC44MzYxLC45OTY0MiwuOTk2NDIsLjk5NjQyLC43Mjg1MSwuOTA4MzgsLjkwODM4LC45MDgzOCwuOTA4MzgsLjkwODM4LC45MDgzOCwuODY4LC44MjM5MSwuODAwNjEsLjgwMDYxLC44MDA2MSwuODAwNjEsMS4wMjU4LDEuMDI1OCwxLjAyNTgsMS4wMjU4LC45NzQ4NCwuOTU1NDYsLjkyMTc5LC45MjE3OSwuOTIxNzksLjkyMTc5LC45MjE3OSwxLjAyMDU4LC45MjE3OSwuOTQ0MzgsLjk0NDM4LC45NDQzOCwuOTQ0MzgsLjkwNDA2LC44Njk1OCwuOTgyMjUsLjk0OTM4LC45NDkzOCwuOTQ5MzgsLjk0OTM4LC45NDkzOCwuOTQ5MzgsLjkwMzEsLjgxMDkzLC45NDkzOCwuOTQ5MzgsLjk0OTM4LC45NDkzOCwuOTg2MjEsLjk4NjIxLC45ODYyMSwuOTg2MjEsLjkzOTY5LC45NTkzMywuOTQ0NiwuOTQ0NiwuOTQ0NiwuOTQ0NiwuOTQ0NiwxLjA4NTk1LC45NDQ2LC45NTQ0MiwuOTU0NDIsLjk1NDQyLC45NTQ0MiwuOTQwMzksLjk3ODk4LC45NDAzOSwuOTA4MzgsLjk0OTM4LC45MDgzOCwuOTQ5MzgsLjkwODM4LC45NDkzOCwuODIzOTEsLjgxMDkzLC44MjM5MSwuODEwOTMsLjgyMzkxLC44MTA5MywuODIzOTEsLjgxMDkzLC45NjM3NiwuODQzMTMsLjk3NDg0LC45NzU3MSwuODAwNjEsLjk0OTM4LC44MDA2MSwuOTQ5MzgsLjgwMDYxLC45NDkzOCwuODAwNjEsLjk0OTM4LC44MDA2MSwuOTQ5MzgsLjg3NjgsLjk1NzcsLjg3NjgsLjk1NzcsLjg3NjgsLjk1NzcsMSwxLC45NTQwNywuOTU5MzMsLjk3MDY5LC45NTkzMywxLjAyNTgsLjk4NjIxLDEuMDI1OCwuOTg2MjEsMS4wMjU4LC45ODYyMSwxLjAyNTgsLjk4NjIxLDEuMDI1OCwuOTg2MjEsLjg4NywxLjAxNTkxLC43MzkwMSwxLjA0NzQsMSwxLC45NzQ1NSwuODM2NTUsLjk4OTgxLDEsMSwuODM2NTUsLjczOTc3LC44MzY1NSwuNzM5MDMsLjg0NjM4LDEuMDMzLC45NTU0NiwuOTU5MzMsMSwxLC45NTU0NiwuOTU5MzMsLjgyNzEsLjk1NDE3LC45NTkzMywuOTIxNzksLjk0NDYsLjkyMTc5LC45NDQ2LC45MjE3OSwuOTQ0NiwuOTM2LC45MTk2NCwuODIxMTQsLjk3NjQ2LDEsMSwuODIxMTQsLjk3NjQ2LC44MDk2LC43ODAzNiwuODA5NiwuNzgwMzYsMSwxLC44MDk2LC43ODAzNiwxLDEsLjg5NzEzLC43NzQ1MiwuODk3MTMsMS4xMDIwOCwuOTQ0MzgsLjk1NDQyLC45NDQzOCwuOTU0NDIsLjk0NDM4LC45NTQ0MiwuOTQ0MzgsLjk1NDQyLC45NDQzOCwuOTU0NDIsLjk0NDM4LC45NTQ0MiwuOTQwODMsLjk3NTc5LC45MDQwNiwuOTQwMzksLjkwNDA2LC45NDQ2LC45MzgsLjk0NDYsLjkzOCwuOTQ0NiwuOTM4LDEsLjk5NzkzLC45MDgzOCwuOTQ5MzgsLjg2OCwuOTAzMSwuOTIxNzksLjk0NDYsMSwxLC44OTcxMywxLjEwMjA4LC45MDA4OCwuOTAwODgsLjkwMDg4LC45MDA4OCwuOTAwODgsLjkwMDg4LC45MDA4OCwuOTAwODgsLjkwMDg4LC45MDk4OSwuOTM1OCwuOTE5NDUsLjgzMTgxLC43NTI2MSwuODc5OTIsLjgyOTc2LC45NjAzNCwuODM2ODksLjk3MjY4LDEuMDA3OCwuOTA4MzgsLjgzNjM3LC44MDE5LC45MDE1NywuODAwNjEsLjk0NDYsLjk1NDA3LC45MjQzNiwxLjAyNTgsLjg1MDIyLC45NzE1MywxLjAxNTYsLjk1NTQ2LC44OTE5MiwuOTIxNzksLjkyMzYxLC44NzEwNywuOTYzMTgsLjg5NzEzLC45MzcwNCwuOTU2MzgsLjkxOTA1LC45MTcwOSwuOTI3OTYsMS4wMjU4LC45MzcwNCwuOTQ4MzYsMS4wMzczLC45NTkzMywxLjAwNzgsLjk1ODcxLC45NDgzNiwuOTYxNzQsLjkyNjAxLC45NDk4LC45ODYwNywuOTU3NzYsLjk1OTMzLDEuMDU0NTMsMS4wMDc4LC45ODI3NSwuOTMxNCwuOTU2MTcsLjkxNzAxLDEuMDU5OTMsLjk0NDYsLjc4MzY3LC45NTUzLDEsLjg2ODMyLDEuMDEyOCwuOTU4NzEsLjk5Mzk0LC44NzU0OCwuOTYzNjEsLjg2Nzc0LDEuMDA3OCwuOTU4NzEsLjk0NDYsLjk1ODcxLC44Njc3NCwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC45NDA4MywuOTc1NzksLjk0MDgzLC45NzU3OSwuOTQwODMsLjk3NTc5LC45MDQwNiwuOTQwMzksLjk2Njk0LDEsLjg5OTAzLDEsMSwxLC45MzU4MiwuOTM1ODIsLjkzNTgyLDEsLjkwOCwuOTA4LC45MTgsLjk0MjE5LC45NDIxOSwuOTY1NDQsMSwxLjI4NSwxLDEsLjgxMDc5LC44MTA3OSwxLDEsLjc0ODU0LDEsMSwxLDEsLjk5NzkzLDEsMSwxLC42NSwxLDEuMzYxNDUsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEuMTcxNzMsMSwuODA1MzUsLjc2MTY5LDEuMDIwNTgsMS4wNzMyLDEuMDU0ODYsMSwxLDEuMzA2OTIsMS4wODU5NSwxLjA4NTk1LDEsMS4wODU5NSwxLjA4NTk1LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS4xNjE2MSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxXSxaYT17bGluZUhlaWdodDoxLjIsbGluZUdhcDouMn0sVmE9WzEuMzY4OTgsMSwxLC42NjIyNywuODA3NzksLjgxNjI1LC45NzI3NiwuOTcyNzYsLjk3NzMzLC45MjIyMiwuODMyNjYsLjk0MjkyLC45NDI5MiwxLjE2MTQ4LDEuMDIwNTgsLjkzNTgyLC45NjY5NCwuOTM1ODIsMS4xNzMzNywuOTcyNzYsLjk3Mjc2LC45NzI3NiwuOTcyNzYsLjk3Mjc2LC45NzI3NiwuOTcyNzYsLjk3Mjc2LC45NzI3NiwuOTcyNzYsLjc4MDc2LC43ODA3NiwxLjAyMDU4LDEuMDIwNTgsMS4wMjA1OCwuNzE1NDEsLjc2ODEzLC44NTU3NiwuODA1OTEsLjgwNzI5LC45NDI5OSwuNzc1MTIsLjgzNjU1LC44NjUyMywuOTIyMjIsLjk4NjIxLC43MTc0MywuODE2OTgsLjc5NzI2LC45ODU1OCwuOTIyMjIsLjkwNjM3LC44MzgwOSwuOTA2MzcsLjgwNzI5LC43NjQ2MywuODYyNzUsLjkwNjk5LC45MTYwNSwuOTE1NCwuODUzMDgsLjg1NDU4LC45MDUzMSwuOTQyOTIsMS4yMTI5NiwuOTQyOTIsMS4wMjA1OCwuODk5MDMsMS4xODYxNiwuOTk2MTMsLjkxNjc3LC43ODIxNiwuOTE2NzcsLjkwMDgzLC45ODc5NiwuOTEzNSwuOTIxNjgsLjk1MzgxLC45ODk4MSwuOTUyOTgsLjk1MzgxLC45MzQ1OSwuOTIxNjgsLjkxNTEzLC45MjAwNCwuOTE2NzcsLjk1MDc3LC43NDgsMS4wNDUwMiwuOTE2NzcsLjkyMDYxLC45NDIzNiwuODk1NDQsLjg5MzY0LC45LC44MDY4NywuODU3OCwuODA2ODcsMS4wMjA1OCwuODA3NzksLjk3Mjc2LC45NzI3NiwuOTcyNzYsLjk3Mjc2LC44NTc4LC45OTk3MywxLjE4NjE2LC45MTMzOSwxLjA4MDc0LC44Mjg5MSwxLjAyMDU4LC41NTUwOSwuNzE1MjYsLjg5MDIyLDEuMDg1OTUsMSwxLDEuMTg2MTYsMSwuOTY3MzYsLjkzNTgyLDEuMTg2MTYsMSwxLjA0ODY0LC44MjcxMSwuOTkwNDMsLjk5MDQzLC45OTA0MywuNzE1NDEsLjg1NTc2LC44NTU3NiwuODU1NzYsLjg1NTc2LC44NTU3NiwuODU1NzYsLjg0NSwuODA3MjksLjc3NTEyLC43NzUxMiwuNzc1MTIsLjc3NTEyLC45ODYyMSwuOTg2MjEsLjk4NjIxLC45ODYyMSwuOTU5NjEsLjkyMjIyLC45MDYzNywuOTA2MzcsLjkwNjM3LC45MDYzNywuOTA2MzcsMS4wMjA1OCwuOTAyNTEsLjkwNjk5LC45MDY5OSwuOTA2OTksLjkwNjk5LC44NTQ1OCwuODM2NTksLjk0OTUxLC45OTYxMywuOTk2MTMsLjk5NjEzLC45OTYxMywuOTk2MTMsLjk5NjEzLC44NTgxMSwuNzgyMTYsLjkwMDgzLC45MDA4MywuOTAwODMsLjkwMDgzLC45NTM4MSwuOTUzODEsLjk1MzgxLC45NTM4MSwuOTEzNSwuOTIxNjgsLjkxNTEzLC45MTUxMywuOTE1MTMsLjkxNTEzLC45MTUxMywxLjA4NTk1LC45MTY3NywuOTE2NzcsLjkxNjc3LC45MTY3NywuOTE2NzcsLjg5MzY0LC45MjMzMiwuODkzNjQsLjg1NTc2LC45OTYxMywuODU1NzYsLjk5NjEzLC44NTU3NiwuOTk2MTMsLjgwNzI5LC43ODIxNiwuODA3MjksLjc4MjE2LC44MDcyOSwuNzgyMTYsLjgwNzI5LC43ODIxNiwuOTQyOTksLjc2NzgzLC45NTk2MSwuOTE2NzcsLjc3NTEyLC45MDA4MywuNzc1MTIsLjkwMDgzLC43NzUxMiwuOTAwODMsLjc3NTEyLC45MDA4MywuNzc1MTIsLjkwMDgzLC44NjUyMywuOTEzNSwuODY1MjMsLjkxMzUsLjg2NTIzLC45MTM1LDEsMSwuOTIyMjIsLjkyMTY4LC45MjIyMiwuOTIxNjgsLjk4NjIxLC45NTM4MSwuOTg2MjEsLjk1MzgxLC45ODYyMSwuOTUzODEsLjk4NjIxLC45NTM4MSwuOTg2MjEsLjk1MzgxLC44NjAzNiwuOTcwOTYsLjcxNzQzLC45ODk4MSwxLDEsLjk1Mjk4LC43OTcyNiwuOTUzODEsMSwxLC43OTcyNiwuNjg5NCwuNzk3MjYsLjc0MzIxLC44MTY5MSwxLjAwMDYsLjkyMjIyLC45MjE2OCwxLDEsLjkyMjIyLC45MjE2OCwuNzk0NjQsLjkyMDk4LC45MjE2OCwuOTA2MzcsLjkxNTEzLC45MDYzNywuOTE1MTMsLjkwNjM3LC45MTUxMywuOTA5LC44NzUxNCwuODA3MjksLjk1MDc3LDEsMSwuODA3MjksLjk1MDc3LC43NjQ2MywuNzQ4LC43NjQ2MywuNzQ4LDEsMSwuNzY0NjMsLjc0OCwxLDEsLjg2Mjc1LC43MjY1MSwuODYyNzUsMS4wNDUwMiwuOTA2OTksLjkxNjc3LC45MDY5OSwuOTE2NzcsLjkwNjk5LC45MTY3NywuOTA2OTksLjkxNjc3LC45MDY5OSwuOTE2NzcsLjkwNjk5LC45MTY3NywuOTE1NCwuOTQyMzYsLjg1NDU4LC44OTM2NCwuODU0NTgsLjkwNTMxLC45LC45MDUzMSwuOSwuOTA1MzEsLjksMSwuOTcyNzYsLjg1NTc2LC45OTYxMywuODQ1LC44NTgxMSwuOTAyNTEsLjkxNjc3LDEsMSwuODYyNzUsMS4wNDUwMiwxLjE4NjE2LDEuMTg2MTYsMS4xODYxNiwxLjE4NjE2LDEuMTg2MTYsMS4xODYxNiwxLjE4NjE2LDEuMTg2MTYsMS4xODYxNiwxLjAwODk5LDEuMzA2MjgsLjg1NTc2LC44MDE3OCwuNjY4NjIsLjc5MjcsLjY5MzIzLC44ODEyNywuNzI0NTksLjg5NzExLC45NTM4MSwuODU1NzYsLjgwNTkxLC43ODA1LC45NDcyOSwuNzc1MTIsLjkwNTMxLC45MjIyMiwuOTA2MzcsLjk4NjIxLC44MTY5OCwuOTI2NTUsLjk4NTU4LC45MjIyMiwuODUzNTksLjkwNjM3LC45MDk3NiwuODM4MDksLjk0NTIzLC44NjI3NSwuODM1MDksLjkzMTU3LC44NTMwOCwuODMzOTIsLjkyMzQ2LC45ODYyMSwuODM1MDksLjkyODg2LC45MTMyNCwuOTIxNjgsLjk1MzgxLC45MDY0NiwuOTI4ODYsLjkwNTU3LC44Njg0NywuOTAyNzYsLjkxMzI0LC44Njg0MiwuOTIxNjgsLjk5NTMxLC45NTM4MSwuOTIyNCwuODU0MDgsLjkyNjk5LC44Njg0NywxLjAwNTEsLjkxNTEzLC44MDQ4NywuOTM0ODEsMSwuODgxNTksMS4wNTIxNCwuOTA2NDYsLjk3MzU1LC44MTUzOSwuODkzOTgsLjg1OTIzLC45NTM4MSwuOTA2NDYsLjkxNTEzLC45MDY0NiwuODU5MjMsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuOTE1NCwuOTQyMzYsLjkxNTQsLjk0MjM2LC45MTU0LC45NDIzNiwuODU0NTgsLjg5MzY0LC45NjY5NCwxLC44OTkwMywxLDEsMSwuOTE3ODIsLjkxNzgyLC45MTc4MiwxLC44OTYsLjg5NiwuODk2LC45MzMyLC45MzMyLC45NTk3MywxLDEuMjYsMSwxLC44MDQ3OSwuODAxNzgsMSwxLC44NTYzMywxLDEsMSwxLC45NzI3NiwxLDEsMSwuNjk4LDEsMS4zNjE0NSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS4xNDU0MiwxLC43OTE5OSwuNzg2OTQsMS4wMjA1OCwxLjAzNDkzLDEuMDU0ODYsMSwxLDEuMjMwMjYsMS4wODU5NSwxLjA4NTk1LDEsMS4wODU5NSwxLjA4NTk1LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS4yMDAwNiwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxXSx6YT17bGluZUhlaWdodDoxLjIsbGluZUdhcDouMn0sX2E9WzEuMzY4OTgsMSwxLC42NTUwNywuODQ5NDMsLjg1NjM5LC44ODQ2NSwuODg0NjUsLjg2OTM2LC44ODMwNywuODY5NDgsLjg1MjgzLC44NTI4MywxLjA2MzgzLDEuMDIwNTgsLjc1OTQ1LC45MjE5LC43NTk0NSwxLjE3MzM3LC44ODQ2NSwuODg0NjUsLjg4NDY1LC44ODQ2NSwuODg0NjUsLjg4NDY1LC44ODQ2NSwuODg0NjUsLjg4NDY1LC44ODQ2NSwuNzU5NDUsLjc1OTQ1LDEuMDIwNTgsMS4wMjA1OCwxLjAyMDU4LC42OTA0NiwuNzA5MjYsLjg1MTU4LC43NzgxMiwuNzY4NTIsLjg5NTkxLC43MDQ2NiwuNzYxMjUsLjgwMDk0LC44NjgyMiwuODM4NjQsLjcyOCwuNzcyMTIsLjc5NDc1LC45MzYzNywuODc1MTQsLjg1ODgsLjc2MDEzLC44NTg4LC43MjQyMSwuNjk4NjYsLjc3NTk4LC44NTk5MSwuODA4MTEsLjg3ODMyLC43ODExMiwuNzc1MTIsLjg1NjIsMS4wMjIyLDEuMTg0MTcsMS4wMjIyLDEuMjcwMTQsLjg5OTAzLDEuMTUwMTIsLjkzODU5LC45NDM5OSwuODQ2LC45NDM5OSwuODE0NTMsMS4wMTg2LC45NDIxOSwuOTYwMTcsMS4wMzA3NSwxLjAyMTc1LC45MTIsMS4wMzA3NSwuOTY5OTgsLjk2MDE3LC45Mzg1OSwuOTQzOTksLjk0Mzk5LC45NTQ5MywuNzQ2LDEuMTI2NTgsLjk0NTc4LC45MSwuOTc5LC44ODIsLjg4MiwuODMsLjg1MDM0LC44MzUzNywuODUwMzQsMS4wMjA1OCwuNzA4NjksLjg4NDY1LC44ODQ2NSwuODg0NjUsLjg4NDY1LC44MzUzNywuOTAwODMsMS4xNTAxMiwuOTE2MSwuOTQ1NjUsLjczNTQxLDEuMDIwNTgsLjUzNjA5LC42OTM1MywuNzk1MTksMS4wODU5NSwxLDEsMS4xNTAxMiwxLC45MTk3NCwuNzU5NDUsMS4xNTAxMiwxLC45NDQ2LC43MzM2MSwuOTAwNSwuOTAwNSwuOTAwNSwuNjI4NjQsLjg1MTU4LC44NTE1OCwuODUxNTgsLjg1MTU4LC44NTE1OCwuODUxNTgsLjc3MywuNzY4NTIsLjcwNDY2LC43MDQ2NiwuNzA0NjYsLjcwNDY2LC44Mzg2NCwuODM4NjQsLjgzODY0LC44Mzg2NCwuOTA1NjEsLjg3NTE0LC44NTg4LC44NTg4LC44NTg4LC44NTg4LC44NTg4LDEuMDIwNTgsLjg1NzUxLC44NTk5MSwuODU5OTEsLjg1OTkxLC44NTk5MSwuNzc1MTIsLjc2MDEzLC44ODA3NSwuOTM4NTksLjkzODU5LC45Mzg1OSwuOTM4NTksLjkzODU5LC45Mzg1OSwuODA3NSwuODQ2LC44MTQ1MywuODE0NTMsLjgxNDUzLC44MTQ1MywuODI0MjQsLjgyNDI0LC44MjQyNCwuODI0MjQsLjkyNzgsLjk2MDE3LC45Mzg1OSwuOTM4NTksLjkzODU5LC45Mzg1OSwuOTM4NTksMS4wODU5NSwuODU2MiwuOTQ1NzgsLjk0NTc4LC45NDU3OCwuOTQ1NzgsLjg4MiwuOTQ1NzgsLjg4MiwuODUxNTgsLjkzODU5LC44NTE1OCwuOTM4NTksLjg1MTU4LC45Mzg1OSwuNzY4NTIsLjg0NiwuNzY4NTIsLjg0NiwuNzY4NTIsLjg0NiwuNzY4NTIsLjg0NiwuODk1OTEsLjg1NDQsLjkwNTYxLC45NDM5OSwuNzA0NjYsLjgxNDUzLC43MDQ2NiwuODE0NTMsLjcwNDY2LC44MTQ1MywuNzA0NjYsLjgxNDUzLC43MDQ2NiwuODE0NTMsLjgwMDk0LC45NDIxOSwuODAwOTQsLjk0MjE5LC44MDA5NCwuOTQyMTksMSwxLC44NjgyMiwuOTYwMTcsLjg2ODIyLC45NjAxNywuODM4NjQsLjgyNDI0LC44Mzg2NCwuODI0MjQsLjgzODY0LC44MjQyNCwuODM4NjQsMS4wMzA3NSwuODM4NjQsLjgyNDI0LC44MTQwMiwxLjAyNzM4LC43MjgsMS4wMjE3NSwxLDEsLjkxMiwuNzk0NzUsMS4wMzA3NSwxLDEsLjc5NDc1LC44MzkxMSwuNzk0NzUsLjY2MjY2LC44MDU1MywxLjA2Njc2LC44NzUxNCwuOTYwMTcsMSwxLC44NzUxNCwuOTYwMTcsLjg2ODY1LC44NzM5NiwuOTYwMTcsLjg1ODgsLjkzODU5LC44NTg4LC45Mzg1OSwuODU4OCwuOTM4NTksLjg2NywuODQ3NTksLjcyNDIxLC45NTQ5MywxLDEsLjcyNDIxLC45NTQ5MywuNjk4NjYsLjc0NiwuNjk4NjYsLjc0NiwxLDEsLjY5ODY2LC43NDYsMSwxLC43NzU5OCwuODg0MTcsLjc3NTk4LDEuMTI2NTgsLjg1OTkxLC45NDU3OCwuODU5OTEsLjk0NTc4LC44NTk5MSwuOTQ1NzgsLjg1OTkxLC45NDU3OCwuODU5OTEsLjk0NTc4LC44NTk5MSwuOTQ1NzgsLjg3ODMyLC45NzksLjc3NTEyLC44ODIsLjc3NTEyLC44NTYyLC44MywuODU2MiwuODMsLjg1NjIsLjgzLDEsLjg4NDY1LC44NTE1OCwuOTM4NTksLjc3MywuODA3NSwuODU3NTEsLjg1NjIsMSwxLC43NzU5OCwxLjEyNjU4LDEuMTUwMTIsMS4xNTAxMiwxLjE1MDEyLDEuMTUwMTIsMS4xNTAxMiwxLjE1MzEzLDEuMTUwMTIsMS4xNTAxMiwxLjE1MDEyLDEuMDgxMDYsMS4wMzkwMSwuODUxNTgsLjc3MDI1LC42MjI2NCwuNzY0NiwuNjUzNTEsLjg2MDI2LC42OTQ2MSwuODk5NDcsMS4wMzA3NSwuODUxNTgsLjc3ODEyLC43NjQ0OSwuODg4MzYsLjcwNDY2LC44NTYyLC44NjgyMiwuODU4OCwuODM4NjQsLjc3MjEyLC44NTMwOCwuOTM2MzcsLjg3NTE0LC44MjM1MiwuODU4OCwuODU3MDEsLjc2MDEzLC44OTA1OCwuNzc1OTgsLjgxNTYsLjgyNTY1LC43ODExMiwuNzc4OTksLjg5Mzg2LC44Mzg2NCwuODE1NiwuOTQ4NiwuOTIzODgsLjk2MTg2LDEuMDMwNzUsLjkxMTIzLC45NDg2LC45MzI5OCwuODc4LC45Mzk0MiwuOTIzODgsLjg0NTk2LC45NjE4NiwuOTUxMTksMS4wMzA3NSwuOTIyLC44ODc4NywuOTU4MjksLjg4LC45MzU1OSwuOTM4NTksLjc4ODE1LC45Mzc1OCwxLC44OTIxNywxLjAzNzM3LC45MTEyMywuOTM5NjksLjc3NDg3LC44NTc2OSwuODY3OTksMS4wMzA3NSwuOTExMjMsLjkzODU5LC45MTEyMywuODY3OTksMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuODc4MzIsLjk3OSwuODc4MzIsLjk3OSwuODc4MzIsLjk3OSwuNzc1MTIsLjg4MiwuOTIxOSwxLC44OTkwMywxLDEsMSwuODczMjEsLjg3MzIxLC44NzMyMSwxLDEuMDI3LDEuMDI3LDEuMDI3LC44Njg0NywuODY4NDcsLjc5MTIxLDEsMS4xMjQsMSwxLC43MzU3MiwuNzM1NzIsMSwxLC44NTAzNCwxLDEsMSwxLC44ODQ2NSwxLDEsMSwuNjY5LDEsMS4zNjE0NSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS4wNDgyOCwxLC43NDk0OCwuNzUxODcsMS4wMjA1OCwuOTgzOTEsMS4wMjExOSwxLDEsMS4wNjIzMywxLjA4NTk1LDEuMDg1OTUsMSwxLjA4NTk1LDEuMDg1OTUsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLjA1MjMzLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDFdLCRhPXtsaW5lSGVpZ2h0OjEuMixsaW5lR2FwOi4yfSxBcz1bMS4zNjg5OCwxLDEsLjc2MzA1LC44Mjc4NCwuOTQ5MzUsLjg5MzY0LC45MjI0MSwuODkwNzMsLjkwNzA2LC45ODQ3MiwuODUyODMsLjg1MjgzLDEuMDY2NCwxLjAyMDU4LC43NDUwNSwuOTIxOSwuNzQ1MDUsMS4yMzQ1NiwuOTIyNDEsLjkyMjQxLC45MjI0MSwuOTIyNDEsLjkyMjQxLC45MjI0MSwuOTIyNDEsLjkyMjQxLC45MjI0MSwuOTIyNDEsLjc0NTA1LC43NDUwNSwxLjAyMDU4LDEuMDIwNTgsMS4wMjA1OCwuNzMwMDIsLjcyNjAxLC45MTc1NSwuODEyNiwuODAzMTQsLjkyMjIyLC43Mzc2NCwuNzk3MjYsLjgzMDUxLC45MDI4NCwuODYwMjMsLjc0LC44MTI2LC44NDg2OSwuOTY1MTgsLjkxMTE1LC44ODU4LC43OTc2MSwuODg1OCwuNzQ0OTgsLjczOTE0LC44MTM2MywuODk1OTEsLjgzNjU5LC44OTYzMywuODU2MDgsLjgxMTEsLjkwNTMxLDEuMDIyMiwxLjIyNzM2LDEuMDIyMiwxLjI3MDE0LC44OTkwMywuOTAwODgsLjg2NjY3LDEuMDIzMSwuODk2LDEuMDE0MTEsLjkwMDgzLDEuMDUwOTksMS4wMDUxMiwuOTk3OTMsMS4wNTMyNiwxLjA5Mzc3LC45MzgsMS4wNjIyNiwxLjAwMTE5LC45OTc5MywuOTg3MTQsMS4wMjMxLDEuMDEyMzEsLjk4MTk2LC43OTIsMS4xOTEzNywuOTkwNzQsLjk2MiwxLjAxOTE1LC45MjYsLjk0MiwuODU2LC44NTAzNCwuOTIwMDYsLjg1MDM0LDEuMDIwNTgsLjY5MDY3LC45MjI0MSwuOTIyNDEsLjkyMjQxLC45MjI0MSwuOTIwMDYsLjkzMzIsLjkwMDg4LC45MTg4MiwuOTM0ODQsLjc1MzM5LDEuMDIwNTgsLjU2ODY2LC41NDMyNCwuNzk1MTksMS4wODU5NSwxLDEsLjkwMDg4LDEsLjk1MzI1LC43NDUwNSwuOTAwODgsMSwuOTcxOTgsLjc1MzM5LC45MTAwOSwuOTEwMDksLjkxMDA5LC42NjQ2NiwuOTE3NTUsLjkxNzU1LC45MTc1NSwuOTE3NTUsLjkxNzU1LC45MTc1NSwuNzg4LC44MDMxNCwuNzM3NjQsLjczNzY0LC43Mzc2NCwuNzM3NjQsLjg2MDIzLC44NjAyMywuODYwMjMsLjg2MDIzLC45MjkxNSwuOTExMTUsLjg4NTgsLjg4NTgsLjg4NTgsLjg4NTgsLjg4NTgsMS4wMjA1OCwuODg1OCwuODk1OTEsLjg5NTkxLC44OTU5MSwuODk1OTEsLjgxMTEsLjc5NjExLC44OTcxMywuODY2NjcsLjg2NjY3LC44NjY2NywuODY2NjcsLjg2NjY3LC44NjY2NywuODY5MzYsLjg5NiwuOTAwODMsLjkwMDgzLC45MDA4MywuOTAwODMsLjg0MjI0LC44NDIyNCwuODQyMjQsLjg0MjI0LC45NzI3NiwuOTk3OTMsLjk4NzE0LC45ODcxNCwuOTg3MTQsLjk4NzE0LC45ODcxNCwxLjA4NTk1LC44OTg3NiwuOTkwNzQsLjk5MDc0LC45OTA3NCwuOTkwNzQsLjk0MiwxLjAyMzEsLjk0MiwuOTE3NTUsLjg2NjY3LC45MTc1NSwuODY2NjcsLjkxNzU1LC44NjY2NywuODAzMTQsLjg5NiwuODAzMTQsLjg5NiwuODAzMTQsLjg5NiwuODAzMTQsLjg5NiwuOTIyMjIsLjkzMzcyLC45MjkxNSwxLjAxNDExLC43Mzc2NCwuOTAwODMsLjczNzY0LC45MDA4MywuNzM3NjQsLjkwMDgzLC43Mzc2NCwuOTAwODMsLjczNzY0LC45MDA4MywuODMwNTEsMS4wMDUxMiwuODMwNTEsMS4wMDUxMiwuODMwNTEsMS4wMDUxMiwxLDEsLjkwMjg0LC45OTc5MywuOTA5NzYsLjk5NzkzLC44NjAyMywuODQyMjQsLjg2MDIzLC44NDIyNCwuODYwMjMsLjg0MjI0LC44NjAyMywxLjA1MzI2LC44NjAyMywuODQyMjQsLjgyODczLDEuMDc0NjksLjc0LDEuMDkzNzcsMSwxLC45MzgsLjg0ODY5LDEuMDYyMjYsMSwxLC44NDg2OSwuODM3MDQsLjg0ODY5LC44MTQ0MSwuODU1ODgsMS4wODkyNywuOTExMTUsLjk5NzkzLDEsMSwuOTExMTUsLjk5NzkzLC45MTg4NywuOTA5OTEsLjk5NzkzLC44ODU4LC45ODcxNCwuODg1OCwuOTg3MTQsLjg4NTgsLjk4NzE0LC44OTQsLjkxNDM0LC43NDQ5OCwuOTgxOTYsMSwxLC43NDQ5OCwuOTgxOTYsLjczOTE0LC43OTIsLjczOTE0LC43OTIsMSwxLC43MzkxNCwuNzkyLDEsMSwuODEzNjMsLjkwNCwuODEzNjMsMS4xOTEzNywuODk1OTEsLjk5MDc0LC44OTU5MSwuOTkwNzQsLjg5NTkxLC45OTA3NCwuODk1OTEsLjk5MDc0LC44OTU5MSwuOTkwNzQsLjg5NTkxLC45OTA3NCwuODk2MzMsMS4wMTkxNSwuODExMSwuOTQyLC44MTExLC45MDUzMSwuODU2LC45MDUzMSwuODU2LC45MDUzMSwuODU2LDEsLjkyMjQxLC45MTc1NSwuODY2NjcsLjc4OCwuODY5MzYsLjg4NTgsLjg5ODc2LDEsMSwuODEzNjMsMS4xOTEzNywuOTAwODgsLjkwMDg4LC45MDA4OCwuOTAwODgsLjkwMDg4LC45MDA4OCwuOTAwODgsLjkwMDg4LC45MDA4OCwuOTAzODgsMS4wMzkwMSwuOTIxMzgsLjc4MTA1LC43MTU0LC44NjE2OSwuODA1MTMsLjk0MDA3LC44MjUyOCwuOTg2MTIsMS4wNjIyNiwuOTE3NTUsLjgxMjYsLjgxODg0LC45MjgxOSwuNzM3NjQsLjkwNTMxLC45MDI4NCwuODg1OCwuODYwMjMsLjgxMjYsLjkxMTcyLC45NjUxOCwuOTExMTUsLjgzMDg5LC44ODU4LC44Nzc5MSwuNzk3NjEsLjg5Mjk3LC44MTM2MywuODgxNTcsLjg5OTkyLC44NTYwOCwuODE5OTIsLjk0MzA3LC44NjAyMywuODgxNTcsLjk1MzA4LC45ODY5OSwuOTk3OTMsMS4wNjIyNiwuOTU4MTcsLjk1MzA4LC45NzM1OCwuOTI4LC45ODA4OCwuOTg2OTksLjkyNzYxLC45OTc5MywuOTYwMTcsMS4wNjIyNiwuOTg2LC45NDQsLjk1OTc4LC45MzgsLjk2NzA1LC45ODcxNCwuODA0NDIsLjk4OTcyLDEsLjg5NzYyLDEuMDQ1NTIsLjk1ODE3LC45OTAwNywuODcwNjQsLjkxODc5LC44ODg4OCwxLjA2MjI2LC45NTgxNywuOTg3MTQsLjk1ODE3LC44ODg4OCwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC44OTYzMywxLjAxOTE1LC44OTYzMywxLjAxOTE1LC44OTYzMywxLjAxOTE1LC44MTExLC45NDIsLjkyMTksMSwuODk5MDMsMSwxLDEsLjkzMTczLC45MzE3MywuOTMxNzMsMSwxLjA2MzA0LDEuMDYzMDQsMS4wNjkwNCwuODk5MDMsLjg5OTAzLC44MDU0OSwxLDEuMTU2LDEsMSwuNzY1NzUsLjc2NTc1LDEsMSwuNzI0NTgsMSwxLDEsMSwuOTIyNDEsMSwxLDEsLjYxOSwxLDEuMzYxNDUsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEuMDcyNTcsMSwuNzQ3MDUsLjcxMTE5LDEuMDIwNTgsMS4wMjQsMS4wMjExOSwxLDEsMS4xNTM2LDEuMDg1OTUsMS4wODU5NSwxLDEuMDg1OTUsMS4wODU5NSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEuMDU2MzgsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMV0sZXM9e2xpbmVIZWlnaHQ6MS4yLGxpbmVHYXA6LjJ9LHRzPVsxLjc2NzM4LDEsMSwuOTkyOTcsLjk4MjQsMS4wNDAxNiwxLjA2NDk3LDEuMDM0MjQsLjk3NTI5LDEuMTc2NDcsMS4yMzIwMywxLjEwODUsMS4xMDg1LDEuMTY5MzksMS4yMTA3LC45NzU0LDEuMjE0MDgsLjk3NTQsMS41OTU3OCwxLjAzNDI0LDEuMDM0MjQsMS4wMzQyNCwxLjAzNDI0LDEuMDM0MjQsMS4wMzQyNCwxLjAzNDI0LDEuMDM0MjQsMS4wMzQyNCwxLjAzNDI0LC44MTM3OCwuODEzNzgsMS4yMTA3LDEuMjEwNywxLjIxMDcsLjcxNzAzLC45Nzg0NywuOTczNjMsLjg4Nzc2LC44NjQxLDEuMDIwOTYsLjc5Nzk1LC44NTEzMiwuOTE0LDEuMDYwODUsMS4xNDA2LC44MDA3LC44OTg1OCwuODM2OTMsMS4xNDg4OSwxLjA5Mzk4LC45NzQ4OSwuOTIwOTQsLjk3NDg5LC45MDM5OSwuODQwNDEsLjk1OTIzLDEuMDAxMzUsMSwxLjA2NDY3LC45ODI0MywuOTA5OTYsLjk5MzYxLDEuMTA4NSwxLjU2OTQyLDEuMTA4NSwxLjIxMDcsLjc0NjI3LC45NDI4MiwuOTY3NTIsMS4wMTUxOSwuODYzMDQsMS4wMTM1OSwuOTcyNzgsMS4xNTEwMywxLjAxMzU5LC45ODU2MSwxLjAyMjg1LDEuMDIyODUsMS4wMDUyNywxLjAyMjg1LDEuMDMwMiwuOTkwNDEsMS4wMDA4LDEuMDE1MTksMS4wMTM1OSwxLjAyMjU4LC43OTEwNCwxLjE2ODYyLC45OTA0MSwuOTc0NTQsMS4wMjUxMSwuOTkyOTgsLjk2NzUyLC45NTgwMSwuOTQ4NTYsMS4xNjU3OSwuOTQ4NTYsMS4yMTA3LC45ODI0LDEuMDM0MjQsMS4wMzQyNCwxLDEuMDM0MjQsMS4xNjU3OSwuODcyNywxLjM4NzEsMS4xODYyMiwxLjEwODE4LDEuMDQ0NzgsMS4yMTA3LDEuMTg2MjIsLjc1MTU1LC45NDk5NCwxLjI4ODI2LDEuMjE0MDgsMS4yMTQwOCwuOTEwNTYsMSwuOTE1NzIsLjk3NTQsLjY0NjYzLDEuMTgzMjgsMS4yNDg2NiwxLjA0NDc4LDEuMTQxNjksMS4xNTc0OSwxLjE3Mzg5LC43MTcwMywuOTczNjMsLjk3MzYzLC45NzM2MywuOTczNjMsLjk3MzYzLC45NzM2MywuOTM1MDYsLjg2NDEsLjc5Nzk1LC43OTc5NSwuNzk3OTUsLjc5Nzk1LDEuMTQwNiwxLjE0MDYsMS4xNDA2LDEuMTQwNiwxLjAyMDk2LDEuMDkzOTgsLjk3NDI2LC45NzQyNiwuOTc0MjYsLjk3NDI2LC45NzQyNiwxLjIxMDcsLjk3NDg5LDEuMDAxMzUsMS4wMDEzNSwxLjAwMTM1LDEuMDAxMzUsLjkwOTk2LC45MjA5NCwxLjAyNzk4LC45Njc1MiwuOTY3NTIsLjk2NzUyLC45Njc1MiwuOTY3NTIsLjk2NzUyLC45MzEzNiwuODYzMDQsLjk3Mjc4LC45NzI3OCwuOTcyNzgsLjk3Mjc4LDEuMDIyODUsMS4wMjI4NSwxLjAyMjg1LDEuMDIyODUsLjk3MTIyLC45OTA0MSwxLDEsMSwxLDEsMS4yODgyNiwxLjAwMDgsLjk5MDQxLC45OTA0MSwuOTkwNDEsLjk5MDQxLC45Njc1MiwxLjAxNTE5LC45Njc1MiwuOTczNjMsLjk2NzUyLC45NzM2MywuOTY3NTIsLjk3MzYzLC45Njc1MiwuODY0MSwuODYzMDQsLjg2NDEsLjg2MzA0LC44NjQxLC44NjMwNCwuODY0MSwuODYzMDQsMS4wMjA5NiwxLjAzMDU3LDEuMDIwOTYsMS4wMzUxNywuNzk3OTUsLjk3Mjc4LC43OTc5NSwuOTcyNzgsLjc5Nzk1LC45NzI3OCwuNzk3OTUsLjk3Mjc4LC43OTc5NSwuOTcyNzgsLjkxNCwxLjAxMzU5LC45MTQsMS4wMTM1OSwuOTE0LDEuMDEzNTksMSwxLDEuMDYwODUsLjk4NTYxLDEuMDYwODUsMS4wMDg3OSwxLjE0MDYsMS4wMjI4NSwxLjE0MDYsMS4wMjI4NSwxLjE0MDYsMS4wMjI4NSwxLjE0MDYsMS4wMjI4NSwxLjE0MDYsMS4wMjI4NSwuOTcxMzgsMS4wODY5MiwuODAwNywxLjAyMjg1LDEsMSwxLjAwNTI3LC44MzY5MywxLjAyMjg1LDEsMSwuODM2OTMsLjk0NTUsLjgzNjkzLC45MDQxOCwuODM2OTMsMS4xMzAwNSwxLjA5Mzk4LC45OTA0MSwxLDEsMS4wOTM5OCwuOTkwNDEsLjk2NjkyLDEuMDkyNTEsLjk5MDQxLC45NzQ4OSwxLjAwMDgsLjk3NDg5LDEuMDAwOCwuOTc0ODksMS4wMDA4LC45Mzk5NCwuOTc5MzEsLjkwMzk5LDEuMDIyNTgsMSwxLC45MDM5OSwxLjAyMjU4LC44NDA0MSwuNzkxMDQsLjg0MDQxLC43OTEwNCwuODQwNDEsLjc5MTA0LC44NDA0MSwuNzkxMDQsMSwxLC45NTkyMywxLjA3MDM0LC45NTkyMywxLjE2ODYyLDEuMDAxMzUsLjk5MDQxLDEuMDAxMzUsLjk5MDQxLDEuMDAxMzUsLjk5MDQxLDEuMDAxMzUsLjk5MDQxLDEuMDAxMzUsLjk5MDQxLDEuMDAxMzUsLjk5MDQxLDEuMDY0NjcsMS4wMjUxMSwuOTA5OTYsLjk2NzUyLC45MDk5NiwuOTkzNjEsLjk1ODAxLC45OTM2MSwuOTU4MDEsLjk5MzYxLC45NTgwMSwxLjA3NzMzLDEuMDM0MjQsLjk3MzYzLC45Njc1MiwuOTM1MDYsLjkzMTM2LC45NzQ4OSwxLjAwMDgsMSwxLC45NTkyMywxLjE2ODYyLDEuMTUxMDMsMS4xNTEwMywxLjAxMTczLDEuMDM5NTksLjc1OTUzLC44MTM3OCwuNzk5MTIsMS4xNTEwMywxLjIxOTk0LC45NTE2MSwuODc4MTUsMS4wMTE0OSwuODE1MjUsLjc2NzYsLjk4MTY3LDEuMDExMzQsMS4wMjU0NiwuODQwOTcsMS4wMzA4OSwxLjE4MTAyLC45NzM2MywuODg3NzYsLjg1MTM0LC45NzgyNiwuNzk3OTUsLjk5MzYxLDEuMDYwODUsLjk3NDg5LDEuMTQwNiwuODk4NTgsMS4wMzg4LDEuMTQ4ODksMS4wOTM5OCwuODYwMzksLjk3NDg5LDEuMDU5NSwuOTIwOTQsLjk0NzkzLC45NTkyMywuOTA5OTYsLjk5MzQ2LC45ODI0MywxLjAyMTEyLC45NTQ5MywxLjE0MDYsLjkwOTk2LDEuMDM1NzQsMS4wMjU5NywxLjAwMDgsMS4xODEwMiwxLjA2NjI4LDEuMDM1NzQsMS4wMTkyLDEuMDE5MzIsMS4wMDg4NiwuOTc1MzEsMS4wMTA2LDEuMDAwOCwxLjEzMTg5LDEuMTgxMDIsMS4wMjI3NywuOTg2ODMsMS4wMDE2LC45OTU2MSwxLjA3MjM3LDEuMDAwOCwuOTA0MzQsLjk5OTIxLC45MzgwMywuODk2NSwxLjIzMDg1LDEuMDY2MjgsMS4wNDk4MywuOTYyNjgsMS4wNDk5LC45ODQzOSwxLjE4MTAyLDEuMDY2MjgsMS4wMDA4LDEuMDY2MjgsLjk4NDM5LC43OTc5NSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLjA5NDY2LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC45NzI3OCwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLjAyMDY1LDEsMSwxLDEsMSwxLDEuMDY0NjcsMS4wMjUxMSwxLjA2NDY3LDEuMDI1MTEsMS4wNjQ2NywxLjAyNTExLC45MDk5NiwuOTY3NTIsMSwxLjIxNDA4LC44OTkwMywxLDEsLjc1MTU1LDEuMDQzOTQsMS4wNDM5NCwxLjA0Mzk0LDEuMDQzOTQsLjk4NjMzLC45ODYzMywuOTg2MzMsLjczMDQ3LC43MzA0NywxLjIwNjQyLC45MTIxMSwxLjI1NjM1LDEuMjIyLDEuMDI5NTYsMS4wMzM3MiwxLjAzMzcyLC45NjAzOSwxLjI0NjMzLDEsMS4xMjQ1NCwuOTM1MDMsMS4wMzQyNCwxLjE5Njg3LDEuMDM0MjQsMSwxLDEsLjc3MSwxLDEsMS4xNTc0OSwxLjE1NzQ5LDEuMTU3NDksMS4xMDk0OCwuODYyNzksLjk0NDM0LC44NjI3OSwuOTQ0MzQsLjg2MTgyLDEsMSwxLjE2ODk3LDEsLjk2MDg1LC45MDEzNywxLjIxMDcsMS4xODQxNiwxLjEzOTczLC42OTgyNSwuOTcxNiwyLjEwMzM5LDEuMjkwMDQsMS4yOTAwNCwxLjIxMTcyLDEuMjkwMDQsMS4yOTAwNCwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEuNDI2MDMsMSwuOTk4NjIsLjk5ODYyLDEsLjg3MDI1LC44NzAyNSwuODcwMjUsLjg3MDI1LDEuMTg4NzQsMS40MjYwMywxLDEuNDI2MDMsMS40MjYwMywuOTk4NjIsMSwxLDEsMSwxLDEuMjg4NiwxLjA0MzE1LDEuMTUyOTYsMS4zNDE2MywxLDEsMSwxLjA5MTkzLDEuMDkxOTMsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDFdLGlzPXtsaW5lSGVpZ2h0OjEuMzMwMDgsbGluZUdhcDowfSxhcz1bMS43NjczOCwxLDEsLjk4OTQ2LDEuMDM5NTksMS4wNDAxNiwxLjAyODA5LDEuMDM2LC45NzYzOSwxLjEwOTUzLDEuMjMyMDMsMS4xMTE0NCwxLjExMTQ0LDEuMTY5MzksMS4yMTIzNywuOTc1NCwxLjIxMjYxLC45NzU0LDEuNTk3NTQsMS4wMzYsMS4wMzYsMS4wMzYsMS4wMzYsMS4wMzYsMS4wMzYsMS4wMzYsMS4wMzYsMS4wMzYsMS4wMzYsLjgxMzc4LC44MTM3OCwxLjIxMjM3LDEuMjEyMzcsMS4yMTIzNywuNzM1NDEsLjk3ODQ3LC45NzM2MywuODk3MjMsLjg3ODk3LDEuMDQyNiwuNzk0MjksLjg1MjkyLC45MTE0OSwxLjA1ODE1LDEuMTQwNiwuNzk2MzEsLjkwMTI4LC44Mzg1MywxLjA0Mzk2LDEuMTA2MTUsLjk3NTUyLC45NDQzNiwuOTc1NTIsLjg4NjQxLC44MDUyNywuOTYwODMsMS4wMDEzNSwxLDEuMDY3NzcsLjk4MTcsLjkxMTQyLC45OTM2MSwxLjExMTQ0LDEuNTcyOTMsMS4xMTE0NCwxLjIxMjM3LC43NDYyNywxLjMxODE4LDEuMDY1ODUsLjk3MDQyLC44MzA1NSwuOTcwNDIsLjkzNTAzLDEuMTI2MSwuOTcwNDIsLjk3OTIyLDEuMTQyMzYsLjk0NTUyLDEuMDEwNTQsMS4xNDIzNiwxLjAyNDcxLC45NzkyMiwuOTQxNjUsLjk3MDQyLC45NzA0MiwxLjAyNzYsLjc4OTI5LDEuMTI2MSwuOTc5MjIsLjk1ODc0LDEuMDIxOTcsLjk4NTA3LC45Njc1MiwuOTcxNjgsLjk1MTA3LDEuMTY1NzksLjk1MTA3LDEuMjEyMzcsMS4wMzk1OSwxLjAzNiwxLjAzNiwxLDEuMDM2LDEuMTY1NzksLjg3MzU3LDEuMzE4MTgsMS4xODc1NCwxLjI2NzgxLDEuMDUzNTYsMS4yMTIzNywxLjE4NjIyLC43OTQ4NywuOTQ5OTQsMS4yOTAwNCwxLjI0MDQ3LDEuMjQwNDcsMS4zMTgxOCwxLC45MTQ4NCwuOTc1NCwxLjMxODE4LDEuMTM0OSwxLjI0ODY2LDEuMDUzNTYsMS4xMzkzNCwxLjE1NTc0LDEuMTczODksLjczNTQxLC45NzM2MywuOTczNjMsLjk3MzYzLC45NzM2MywuOTczNjMsLjk3MzYzLC45NDM4NSwuODc4OTcsLjc5NDI5LC43OTQyOSwuNzk0MjksLjc5NDI5LDEuMTQwNiwxLjE0MDYsMS4xNDA2LDEuMTQwNiwxLjA0MjYsMS4xMDYxNSwuOTc1NTIsLjk3NTUyLC45NzU1MiwuOTc1NTIsLjk3NTUyLDEuMjEyMzcsLjk3NTUyLDEuMDAxMzUsMS4wMDEzNSwxLjAwMTM1LDEuMDAxMzUsLjkxMTQyLC45NDQzNiwuOTg3MjEsMS4wNjU4NSwxLjA2NTg1LDEuMDY1ODUsMS4wNjU4NSwxLjA2NTg1LDEuMDY1ODUsLjk2NzA1LC44MzA1NSwuOTM1MDMsLjkzNTAzLC45MzUwMywuOTM1MDMsMS4xNDIzNiwxLjE0MjM2LDEuMTQyMzYsMS4xNDIzNiwuOTMxMjUsLjk3OTIyLC45NDE2NSwuOTQxNjUsLjk0MTY1LC45NDE2NSwuOTQxNjUsMS4yOTAwNCwuOTQxNjUsLjk3OTIyLC45NzkyMiwuOTc5MjIsLjk3OTIyLC45Njc1MiwuOTcwNDIsLjk2NzUyLC45NzM2MywxLjA2NTg1LC45NzM2MywxLjA2NTg1LC45NzM2MywxLjA2NTg1LC44Nzg5NywuODMwNTUsLjg3ODk3LC44MzA1NSwuODc4OTcsLjgzMDU1LC44Nzg5NywuODMwNTUsMS4wNDI2LDEuMDAzMywxLjA0MjYsLjk3MDQyLC43OTQyOSwuOTM1MDMsLjc5NDI5LC45MzUwMywuNzk0MjksLjkzNTAzLC43OTQyOSwuOTM1MDMsLjc5NDI5LC45MzUwMywuOTExNDksLjk3MDQyLC45MTE0OSwuOTcwNDIsLjkxMTQ5LC45NzA0MiwxLDEsMS4wNTgxNSwuOTc5MjIsMS4wNTgxNSwuOTc5MjIsMS4xNDA2LDEuMTQyMzYsMS4xNDA2LDEuMTQyMzYsMS4xNDA2LDEuMTQyMzYsMS4xNDA2LDEuMTQyMzYsMS4xNDA2LDEuMTQyMzYsLjk3NDQxLDEuMDQzMDIsLjc5NjMxLDEuMDE1ODIsMSwxLDEuMDEwNTQsLjgzODUzLDEuMTQyMzYsMSwxLC44Mzg1MywxLjA5MTI1LC44Mzg1MywuOTA0MTgsLjgzODUzLDEuMTk1MDgsMS4xMDYxNSwuOTc5MjIsMSwxLDEuMTA2MTUsLjk3OTIyLDEuMDEwMzQsMS4xMDQ2NiwuOTc5MjIsLjk3NTUyLC45NDE2NSwuOTc1NTIsLjk0MTY1LC45NzU1MiwuOTQxNjUsLjkxNjAyLC45MTk4MSwuODg2NDEsMS4wMjc2LDEsMSwuODg2NDEsMS4wMjc2LC44MDUyNywuNzg5MjksLjgwNTI3LC43ODkyOSwuODA1MjcsLjc4OTI5LC44MDUyNywuNzg5MjksMSwxLC45NjA4MywxLjA1NDAzLC45NTkyMywxLjE2ODYyLDEuMDAxMzUsLjk3OTIyLDEuMDAxMzUsLjk3OTIyLDEuMDAxMzUsLjk3OTIyLDEuMDAxMzUsLjk3OTIyLDEuMDAxMzUsLjk3OTIyLDEuMDAxMzUsLjk3OTIyLDEuMDY3NzcsMS4wMjE5NywuOTExNDIsLjk2NzUyLC45MTE0MiwuOTkzNjEsLjk3MTY4LC45OTM2MSwuOTcxNjgsLjk5MzYxLC45NzE2OCwxLjIzMTk5LDEuMDM2LC45NzM2MywxLjA2NTg1LC45NDM4NSwuOTY3MDUsLjk3NTUyLC45NDE2NSwxLDEsLjk2MDgzLDEuMTI2MSwxLjMxODE4LDEuMzE4MTgsMS4zMTgxOCwxLjMxODE4LDEuMzE4MTgsMS4zMTgxOCwxLjMxODE4LDEuMzE4MTgsMS4zMTgxOCwuOTUxNjEsMS4yNzEyNiwxLjAwODExLC44MzI4NCwuNzc3MDIsLjk5MTM3LC45NTI1MywxLjAzNDcsLjg2MTQyLDEuMDcyMDUsMS4xNDIzNiwuOTczNjMsLjg5NzIzLC44Njg2OSwxLjA5ODE4LC43OTQyOSwuOTkzNjEsMS4wNTgxNSwuOTc1NTIsMS4xNDA2LC45MDEyOCwxLjA2NjYyLDEuMDQzOTYsMS4xMDYxNSwuODQ5MTgsLjk3NTUyLDEuMDQ2OTQsLjk0NDM2LC45ODAxNSwuOTYwODMsLjkxMTQyLDEuMDAzNTYsLjk4MTcsMS4wMTk0NSwuOTg5OTksMS4xNDA2LC45MTE0MiwxLjA0OTYxLC45ODk4LDEuMDA2MzksMS4xNDIzNiwxLjA3NTE0LDEuMDQ5NjEsLjk5NjA3LDEuMDI4OTcsMS4wMDgsLjk4OTgsLjk1MTM0LDEuMDA2MzksMS4xMTEyMSwxLjE0MjM2LDEuMDA1MTgsLjk3OTgxLDEuMDIxODYsMSwxLjA4NTc4LC45NDE2NSwuOTkzMTQsLjk4Mzg3LC45MzAyOCwuOTMzNzcsMS4zNTEyNSwxLjA3NTE0LDEuMTA2ODcsLjkzNDkxLDEuMDQyMzIsMS4wMDM1MSwxLjE0MjM2LDEuMDc1MTQsLjk0MTY1LDEuMDc1MTQsMS4wMDM1MSwuNzk0MjksMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS4wOTA5NywxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwuOTM1MDMsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjk2NjA5LDEsMSwxLDEsMSwxLDEuMDY3NzcsMS4wMjE5NywxLjA2Nzc3LDEuMDIxOTcsMS4wNjc3NywxLjAyMTk3LC45MTE0MiwuOTY3NTIsMSwxLjIxMjYxLC44OTkwMywxLDEsLjc1MTU1LDEuMDQ3NDUsMS4wNDc0NSwxLjA0NzQ1LDEuMDQzOTQsLjk4NjMzLC45ODYzMywuOTg2MzMsLjcyOTU5LC43Mjk1OSwxLjIwNTAyLC45MTQwNiwxLjI2NTE0LDEuMjIyLDEuMDI5NTYsMS4wMzM3MiwxLjAzMzcyLC45NjAzOSwxLjI0NjMzLDEsMS4wOTEyNSwuOTMzMjcsMS4wMzMzNiwxLjE2NTQxLDEuMDM2LDEsMSwxLC43NzEsMSwxLDEuMTU1NzQsMS4xNTU3NCwxLjE1NTc0LDEuMTU1NzQsLjg2MzY0LC45NDQzNCwuODYyNzksLjk0NDM0LC44NjIyNCwxLDEsMS4xNjc5OCwxLC45NjA4NSwuOTAwNjgsMS4yMTIzNywxLjE4NDE2LDEuMTM5MDQsLjY5ODI1LC45NzE2LDIuMTAzMzksMS4yOTAwNCwxLjI5MDA0LDEuMjEzMzksMS4yOTAwNCwxLjI5MDA0LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS40MjYwMywxLC45OTg2MiwuOTk4NjIsMSwuODcwMjUsLjg3MDI1LC44NzAyNSwuODcwMjUsMS4xODc3NSwxLjQyNjAzLDEsMS40MjYwMywxLjQyNjAzLC45OTg2MiwxLDEsMSwxLDEsMS4yODg2LDEuMDQzMTUsMS4xNTI5NiwxLjM0MTYzLDEsMSwxLDEuMTMyNjksMS4xMzI2OSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMV0sc3M9e2xpbmVIZWlnaHQ6MS4zMzAwOCxsaW5lR2FwOjB9LHJzPVsxLjc2NzM4LDEsMSwuOTg5NDYsMS4xNDc2MywxLjA1MzY1LDEuMDYyMzQsLjk2OTI3LC45MjU4NiwxLjE1MzczLDEuMTg0MTQsLjkxMzQ5LC45MTM0OSwxLjA3NDAzLDEuMTczMDgsLjc4MzgzLDEuMjAwODgsLjc4MzgzLDEuNDI1MzEsLjk2OTI3LC45NjkyNywuOTY5MjcsLjk2OTI3LC45NjkyNywuOTY5MjcsLjk2OTI3LC45NjkyNywuOTY5MjcsLjk2OTI3LC43ODM4MywuNzgzODMsMS4xNzMwOCwxLjE3MzA4LDEuMTczMDgsLjc3MzQ5LC45NDU2NSwuOTQ3MjksLjg1OTQ0LC44ODUwNiwuOTg1OCwuNzQ4MTcsLjgwMDE2LC44ODQ0OSwuOTgwMzksLjk1NzgyLC42OTIzOCwuODk4OTgsLjgzMjMxLC45ODE4MywxLjAzOTg5LC45NjkyNCwuODYyMzcsLjk2OTI0LC44MDU5NSwuNzQ1MjQsLjg2MDkxLC45NTQwMiwuOTQxNDMsLjk4NDQ4LC44ODU4LC44MzA4OSwuOTMyODUsMS4wOTQ5LDEuMzkwMTYsMS4wOTQ5LDEuNDU5OTQsLjc0NjI3LDEuMDQ4MzksLjk3NDU0LC45NzQ1NCwuODcyMDcsLjk3NDU0LC44NzUzMywxLjA2MTUxLC45NzQ1NCwxLjAwMTc2LDEuMTY0ODQsMS4wODEzMiwuOTgwNDcsMS4xNjQ4NCwxLjAyOTg5LDEuMDEwNTQsLjk2MjI1LC45NzQ1NCwuOTc0NTQsMS4wNjU5OCwuNzkwMDQsMS4xNjM0NCwxLjAwMzUxLC45NDYyOSwuOTk3MywuOTEwMTYsLjk2Nzc3LC45MDQzLC45MTA4MiwuOTI0ODEsLjkxMDgyLDEuMTczMDgsLjk1NzQ4LC45NjkyNywuOTY5MjcsMSwuOTY5MjcsLjkyNDgxLC44MDU5NywxLjA0ODM5LDEuMjMzOTMsMS4xNzgxLC45MjQ1LDEuMTczMDgsMS4yMDgwOCwuNjMyMTgsLjk0MjYxLDEuMjQ4MjIsMS4wOTk3MSwxLjA5OTcxLDEuMDQ4MzksMSwuODUyNzMsLjc4MDMyLDEuMDQ4MzksMS4wOTk3MSwxLjIyMzI2LC45MjQ1LDEuMDk4MzYsMS4xMzUyNSwxLjE1MjIyLC43MDQyNCwuOTQ3MjksLjk0NzI5LC45NDcyOSwuOTQ3MjksLjk0NzI5LC45NDcyOSwuODU0OTgsLjg4NTA2LC43NDgxNywuNzQ4MTcsLjc0ODE3LC43NDgxNywuOTU3ODIsLjk1NzgyLC45NTc4MiwuOTU3ODIsLjk4NTgsMS4wMzk4OSwuOTY5MjQsLjk2OTI0LC45NjkyNCwuOTY5MjQsLjk2OTI0LDEuMTczMDgsLjk2OTI0LC45NTQwMiwuOTU0MDIsLjk1NDAyLC45NTQwMiwuODMwODksLjg2MjM3LC44ODQwOSwuOTc0NTQsLjk3NDU0LC45NzQ1NCwuOTc0NTQsLjk3NDU0LC45NzQ1NCwuOTI5MTYsLjg3MjA3LC44NzUzMywuODc1MzMsLjg3NTMzLC44NzUzMywuOTMxNDYsLjkzMTQ2LC45MzE0NiwuOTMxNDYsLjkzODU0LDEuMDEwNTQsLjk2MjI1LC45NjIyNSwuOTYyMjUsLjk2MjI1LC45NjIyNSwxLjI0ODIyLC44NzYxLDEuMDAzNTEsMS4wMDM1MSwxLjAwMzUxLDEuMDAzNTEsLjk2Nzc3LC45NzQ1NCwuOTY3NzcsLjk0NzI5LC45NzQ1NCwuOTQ3MjksLjk3NDU0LC45NDcyOSwuOTc0NTQsLjg4NTA2LC44NzIwNywuODg1MDYsLjg3MjA3LC44ODUwNiwuODcyMDcsLjg4NTA2LC44NzIwNywuOTg1OCwuOTUzOTEsLjk4NTgsLjk3NDU0LC43NDgxNywuODc1MzMsLjc0ODE3LC44NzUzMywuNzQ4MTcsLjg3NTMzLC43NDgxNywuODc1MzMsLjc0ODE3LC44NzUzMywuODg0NDksLjk3NDU0LC44ODQ0OSwuOTc0NTQsLjg4NDQ5LC45NzQ1NCwxLDEsLjk4MDM5LDEuMDAxNzYsLjk4MDM5LDEuMDAxNzYsLjk1NzgyLC45MzE0NiwuOTU3ODIsLjkzMTQ2LC45NTc4MiwuOTMxNDYsLjk1NzgyLDEuMTY0ODQsLjk1NzgyLC45MzE0NiwuODQ0MjEsMS4xMjc2MSwuNjkyMzgsMS4wODEzMiwxLDEsLjk4MDQ3LC44MzIzMSwxLjE2NDg0LDEsMSwuODQ3MjMsMS4wNDg2MSwuODQ3MjMsLjc4NzU1LC44MzIzMSwxLjIzNzM2LDEuMDM5ODksMS4wMTA1NCwxLDEsMS4wMzk4OSwxLjAxMDU0LC45ODU3LDEuMDM4NDksMS4wMTA1NCwuOTY5MjQsLjk2MjI1LC45NjkyNCwuOTYyMjUsLjk2OTI0LC45NjIyNSwuOTIzODMsLjkwMTcxLC44MDU5NSwxLjA2NTk4LDEsMSwuODA1OTUsMS4wNjU5OCwuNzQ1MjQsLjc5MDA0LC43NDUyNCwuNzkwMDQsLjc0NTI0LC43OTAwNCwuNzQ1MjQsLjc5MDA0LDEsMSwuODYwOTEsMS4wMjc1OSwuODU3NzEsMS4xNjM0NCwuOTU0MDIsMS4wMDM1MSwuOTU0MDIsMS4wMDM1MSwuOTU0MDIsMS4wMDM1MSwuOTU0MDIsMS4wMDM1MSwuOTU0MDIsMS4wMDM1MSwuOTU0MDIsMS4wMDM1MSwuOTg0NDgsLjk5NzMsLjgzMDg5LC45Njc3NywuODMwODksLjkzMjg1LC45MDQzLC45MzI4NSwuOTA0MywuOTMyODUsLjkwNDMsMS4zMTg2OCwuOTY5MjcsLjk0NzI5LC45NzQ1NCwuODU0OTgsLjkyOTE2LC45NjkyNCwuODc2MSwxLDEsLjg2MDkxLDEuMTYzNDQsMS4wNDgzOSwxLjA0ODM5LDEuMDQ4MzksMS4wNDgzOSwxLjA0ODM5LDEuMDQ4MzksMS4wNDgzOSwxLjA0ODM5LDEuMDQ4MzksLjgxOTY1LC44MTk2NSwuOTQ3MjksLjc4MDMyLC43MTAyMiwuOTA4ODMsLjg0MTcxLC45OTg3NywuNzc1OTYsMS4wNTczNCwxLjIsLjk0NzI5LC44NTk0NCwuODI3OTEsLjk2MDcsLjc0ODE3LC45MzI4NSwuOTgwMzksLjk2OTI0LC45NTc4MiwuODk4OTgsLjk4MzE2LC45ODE4MywxLjAzOTg5LC43ODYxNCwuOTY5MjQsLjk3NjQyLC44NjIzNywuODYwNzUsLjg2MDkxLC44MzA4OSwuOTAwODIsLjg4NTgsLjk3Mjk2LDEuMDEyODQsLjk1NzgyLC44MzA4OSwxLjA5NzYsMS4wNCwxLjAzMzQyLDEuMiwxLjA2NzUsMS4wOTc2LC45ODIwNSwxLjAzODA5LDEuMDUwOTcsMS4wNCwuOTUzNjQsMS4wMzM0MiwxLjA1NDAxLDEuMiwxLjAyMTQ4LDEuMDExOSwxLjA0NzI0LDEuMDEyNywxLjAyNzMyLC45NjIyNSwuODk2NSwuOTc3ODMsLjkzNTc0LC45NDgxOCwxLjMwNjc5LDEuMDY3NSwxLjExODI2LC45OTgyMSwxLjA1NTcsMS4wMzI2LDEuMiwxLjA2NzUsLjk2MjI1LDEuMDY3NSwxLjAzMjYsLjc0ODE3LDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEuMDM3NTQsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjg3NTMzLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLC45ODcwNSwxLDEsMSwxLDEsMSwuOTg0NDgsLjk5NzMsLjk4NDQ4LC45OTczLC45ODQ0OCwuOTk3MywuODMwODksLjk2Nzc3LDEsMS4yMDA4OCwuODk5MDMsMSwxLC43NTE1NSwuOTQ5NDUsLjk0OTQ1LC45NDk0NSwuOTQ5NDUsMS4xMjMxNywxLjEyMzE3LDEuMTIzMTcsLjY3NjAzLC42NzYwMywxLjE1NjIxLC43MzU4NCwxLjIxMTkxLDEuMjIxMzUsMS4wNjQ4MywuOTQ4NjgsLjk0ODY4LC45NTk5NiwxLjI0NjMzLDEsMS4wNzQ5NywuODc3MDksLjk2OTI3LDEuMDE0NzMsLjk2OTI3LDEsMSwxLC43NzI5NSwxLDEsMS4wOTgzNiwxLjA5ODM2LDEuMDk4MzYsMS4wMTUyMiwuODYzMjEsLjk0NDM0LC44NjQ5LC45NDQzNCwuODYxODIsMSwxLDEuMDgzLDEsLjkxNTc4LC44NjQzOCwxLjE3MzA4LDEuMTg0MTYsMS4xNDU4OSwuNjk4MjUsLjk3NjIyLDEuOTY3OTEsMS4yNDgyMiwxLjI0ODIyLDEuMTczMDgsMS4yNDgyMiwxLjI0ODIyLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS40MjYwMywxLC45OTg2MiwuOTk4NjIsMSwuODcwMjUsLjg3MDI1LC44NzAyNSwuODcwMjUsMS4xNzk4NCwxLjQyNjAzLDEsMS40MjYwMywxLjQyNjAzLC45OTg2MiwxLDEsMSwxLDEsMS4yODg2LDEuMDQzMTUsMS4xNTI5NiwxLjM0MTYzLDEsMSwxLDEuMTA3NDIsMS4xMDc0MiwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMV0sbnM9e2xpbmVIZWlnaHQ6MS4zMzAwOCxsaW5lR2FwOjB9LG9zPVsxLjc2NzM4LDEsMSwuOTg1OTQsMS4wMjI4NSwxLjEwNDU0LDEuMDYyMzQsLjk2OTI3LC45MjAzNywxLjE5OTg1LDEuMjA0NiwuOTA2MTYsLjkwNjE2LDEuMDcxNTIsMS4xNzE0LC43ODAzMiwxLjIwMDg4LC43ODAzMiwxLjQwMjQ2LC45NjkyNywuOTY5MjcsLjk2OTI3LC45NjkyNywuOTY5MjcsLjk2OTI3LC45NjkyNywuOTY5MjcsLjk2OTI3LC45NjkyNywuNzgwMzIsLjc4MDMyLDEuMTcxNCwxLjE3MTQsMS4xNzE0LC44MDU5NywuOTQwODQsLjk2NzA2LC44NTk0NCwuODU3MzQsLjk3MDkzLC43NTg0MiwuNzk5MzYsLjg4MTk4LC45ODMxLC45NTc4MiwuNzEzODcsLjg2OTY5LC44NDYzNiwxLjA3Nzk2LDEuMDM1ODQsLjk2OTI0LC44Mzk2OCwuOTY5MjQsLjgyODI2LC43OTY0OSwuODU3NzEsLjk1MTMyLC45MzExOSwuOTg5NjUsLjg4NDMzLC44Mjg3LC45MzM2NSwxLjA4NjEyLDEuMzYzOCwxLjA4NjEyLDEuNDU3ODYsLjc0NjI3LC44MDQ5OSwuOTE0ODQsMS4wNTcwNywuOTIzODMsMS4wNTg4MiwuOTQwMywxLjEyNjU0LDEuMDU4ODIsMS4wMTc1NiwxLjA5MDExLDEuMDkwMTEsLjk5NDE0LDEuMDkwMTEsMS4wMzQsMS4wMTc1NiwxLjA1MzU2LDEuMDU3MDcsMS4wNTg4MiwxLjA0Mzk5LC44NDg2MywxLjIxOTY4LDEuMDE3NTYsLjk1ODAxLDEuMDAwNjgsLjkxNzk3LC45Njc3NywuOTA0MywuOTAzNTEsLjkyMTA1LC45MDM1MSwxLjE3MTQsLjg1MzM3LC45NjkyNywuOTY5MjcsLjk5OTEyLC45NjkyNywuOTIxMDUsLjgwNTk3LDEuMjQzNCwxLjIwODA4LDEuMDU5MzcsLjkwOTU3LDEuMTcxNCwxLjIwODA4LC43NTE1NSwuOTQyNjEsMS4yNDY0NCwxLjA5OTcxLDEuMDk5NzEsLjg0NzUxLDEsLjg1MjczLC43ODAzMiwuNjE1ODQsMS4wNTQyNSwxLjE3OTE0LC45MDk1NywxLjA4NjY1LDEuMTE1OTMsMS4xNDE2OSwuNzMzODEsLjk2NzA2LC45NjcwNiwuOTY3MDYsLjk2NzA2LC45NjcwNiwuOTY3MDYsLjg2MDM1LC44NTczNCwuNzU4NDIsLjc1ODQyLC43NTg0MiwuNzU4NDIsLjk1NzgyLC45NTc4MiwuOTU3ODIsLjk1NzgyLC45NzA5MywxLjAzNTg0LC45NjkyNCwuOTY5MjQsLjk2OTI0LC45NjkyNCwuOTY5MjQsMS4xNzE0LC45NjkyNCwuOTUxMzIsLjk1MTMyLC45NTEzMiwuOTUxMzIsLjgyODcsLjgzOTY4LC44OTA0OSwuOTE0ODQsLjkxNDg0LC45MTQ4NCwuOTE0ODQsLjkxNDg0LC45MTQ4NCwuOTM1NzUsLjkyMzgzLC45NDAzLC45NDAzLC45NDAzLC45NDAzLC44NzE3LC44NzE3LC44NzE3LC44NzE3LDEuMDA1MjcsMS4wMTc1NiwxLjA1MzU2LDEuMDUzNTYsMS4wNTM1NiwxLjA1MzU2LDEuMDUzNTYsMS4yNDY0NCwuOTU5MjMsMS4wMTc1NiwxLjAxNzU2LDEuMDE3NTYsMS4wMTc1NiwuOTY3NzcsMS4wNTcwNywuOTY3NzcsLjk2NzA2LC45MTQ4NCwuOTY3MDYsLjkxNDg0LC45NjcwNiwuOTE0ODQsLjg1NzM0LC45MjM4MywuODU3MzQsLjkyMzgzLC44NTczNCwuOTIzODMsLjg1NzM0LC45MjM4MywuOTcwOTMsMS4wOTY5LC45NzA5MywxLjA1ODgyLC43NTg0MiwuOTQwMywuNzU4NDIsLjk0MDMsLjc1ODQyLC45NDAzLC43NTg0MiwuOTQwMywuNzU4NDIsLjk0MDMsLjg4MTk4LDEuMDU4ODIsLjg4MTk4LDEuMDU4ODIsLjg4MTk4LDEuMDU4ODIsMSwxLC45ODMxLDEuMDE3NTYsLjk4MzEsMS4wMTc1NiwuOTU3ODIsLjg3MTcsLjk1NzgyLC44NzE3LC45NTc4MiwuODcxNywuOTU3ODIsMS4wOTAxMSwuOTU3ODIsLjg3MTcsLjg0Nzg0LDEuMTE1NTEsLjcxMzg3LDEuMDkwMTEsMSwxLC45OTQxNCwuODQ2MzYsMS4wOTAxMSwxLDEsLjg0NjM2LDEuMDUzNiwuODQ2MzYsLjk0Mjk4LC44NDYzNiwxLjIzMjk3LDEuMDM1ODQsMS4wMTc1NiwxLDEsMS4wMzU4NCwxLjAxNzU2LDEuMDAzMjMsMS4wMzQ0NCwxLjAxNzU2LC45NjkyNCwxLjA1MzU2LC45NjkyNCwxLjA1MzU2LC45NjkyNCwxLjA1MzU2LC45MzA2NiwuOTgyOTMsLjgyODI2LDEuMDQzOTksMSwxLC44MjgyNiwxLjA0Mzk5LC43OTY0OSwuODQ4NjMsLjc5NjQ5LC44NDg2MywuNzk2NDksLjg0ODYzLC43OTY0OSwuODQ4NjMsMSwxLC44NTc3MSwxLjE3MzE4LC44NTc3MSwxLjIxOTY4LC45NTEzMiwxLjAxNzU2LC45NTEzMiwxLjAxNzU2LC45NTEzMiwxLjAxNzU2LC45NTEzMiwxLjAxNzU2LC45NTEzMiwxLjAxNzU2LC45NTEzMiwxLjAxNzU2LC45ODk2NSwxLjAwMDY4LC44Mjg3LC45Njc3NywuODI4NywuOTMzNjUsLjkwNDMsLjkzMzY1LC45MDQzLC45MzM2NSwuOTA0MywxLjA4NTcxLC45NjkyNywuOTY3MDYsLjkxNDg0LC44NjAzNSwuOTM1NzUsLjk2OTI0LC45NTkyMywxLDEsLjg1NzcxLDEuMjE5NjgsMS4xMTQzNywxLjExNDM3LC45MzEwOSwuOTEyMDIsLjYwNDExLC44NDE2NCwuNTU1NzIsMS4wMTE3MywuOTczNjEsLjgxODE4LC44MTgxOCwuOTY2MzUsLjc4MDMyLC43MjcyNywuOTIzNjYsLjk4NjAxLDEuMDM0MDUsLjc3OTY4LDEuMDk3OTksMS4yLC45NjcwNiwuODU5NDQsLjg1NjM4LC45NjQ5MSwuNzU4NDIsLjkzMzY1LC45ODMxLC45NjkyNCwuOTU3ODIsLjg2OTY5LC45NDE1MiwxLjA3Nzk2LDEuMDM1ODQsLjc4NDM3LC45NjkyNCwuOTg3MTUsLjgzOTY4LC44MzQ5MSwuODU3NzEsLjgyODcsLjk0NDkyLC44ODQzMywuOTI4NywxLjAwOTgsLjk1NzgyLC44Mjg3LDEuMDYyNSwuOTgyNDgsMS4wMzQyNCwxLjIsMS4wMTA3MSwxLjA2MjUsLjk1MjQ2LDEuMDM4MDksMS4wNDkxMiwuOTgyNDgsMS4wMDIyMSwxLjAzNDI0LDEuMDU0NDMsMS4yLDEuMDQ3ODUsLjk5NjA5LDEuMDAxNjksMS4wNTE3NiwuOTkzNDYsMS4wNTM1NiwuOTA4NywxLjAzMDA0LC45NTU0MiwuOTMxMTcsMS4yMzM2MiwxLjAxMDcxLDEuMDc4MzEsMS4wMjUxMiwxLjA1MjA1LDEuMDM1MDIsMS4yLDEuMDEwNzEsMS4wNTM1NiwxLjAxMDcxLDEuMDM1MDIsLjc1ODQyLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEuMDM3MTksMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsLjk0MDMsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMS4wNDAyMSwxLDEsMSwxLDEsMSwuOTg5NjUsMS4wMDA2OCwuOTg5NjUsMS4wMDA2OCwuOTg5NjUsMS4wMDA2OCwuODI4NywuOTY3NzcsMSwxLjIwMDg4LC44OTkwMywxLDEsLjc1MTU1LDEuMDMwNzcsMS4wMzA3NywxLjAzMDc3LDEuMDMwNzcsMS4xMzE5NiwxLjEzMTk2LDEuMTMxOTYsLjY3NDI4LC42NzQyOCwxLjE2MDM5LC43MzI5MSwxLjIwOTk2LDEuMjIxMzUsMS4wNjQ4MywuOTQ4NjgsLjk0ODY4LC45NTk5NiwxLjI0NjMzLDEsMS4wNzQ5NywuODc3OTYsLjk2OTI3LDEuMDE1MTgsLjk2OTI3LDEsMSwxLC43NzI5NSwxLDEsMS4xMDUzOSwxLjEwNTM5LDEuMTEzNTgsMS4wNjk2NywuODYyNzksLjk0NDM0LC44NjI3OSwuOTQ0MzQsLjg2MTgyLDEsMSwxLjA4MywxLC45MTU3OCwuODY1MDcsMS4xNzE0LDEuMTg0MTYsMS4xNDU4OSwuNjk4MjUsLjk3NjIyLDEuOTY5NywxLjI0ODIyLDEuMjQ4MjIsMS4xNzIzOCwxLjI0ODIyLDEuMjQ4MjIsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLjQyNjAzLDEsLjk5ODYyLC45OTg2MiwxLC44NzAyNSwuODcwMjUsLjg3MDI1LC44NzAyNSwxLjE4MDgzLDEuNDI2MDMsMSwxLjQyNjAzLDEuNDI2MDMsLjk5ODYyLDEsMSwxLDEsMSwxLjI4ODYsMS4wNDMxNSwxLjE1Mjk2LDEuMzQxNjMsMSwxLDEsMS4xMDkzOCwxLjEwOTM4LDEsMSwxLDEuMDU0MjUsMS4wOTk3MSwxLjA5OTcxLDEuMDk5NzEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxXSxncz17bGluZUhlaWdodDoxLjMzMDA4LGxpbmVHYXA6MH0sSXM9Z2V0TG9va3VwVGFibGVGYWN0b3J5KChmdW5jdGlvbihlKXtlWyJNeXJpYWRQcm8tUmVndWxhciJdPWVbIlBkZkpTLUZhbGxiYWNrLVJlZ3VsYXIiXT17bmFtZToiTGliZXJhdGlvblNhbnMtUmVndWxhciIsZmFjdG9yczpBcyxiYXNlV2lkdGhzOldhLGJhc2VNYXBwaW5nOlhhLG1ldHJpY3M6ZXN9O2VbIk15cmlhZFByby1Cb2xkIl09ZVsiUGRmSlMtRmFsbGJhY2stQm9sZCJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1Cb2xkIixmYWN0b3JzOmphLGJhc2VXaWR0aHM6dmEsYmFzZU1hcHBpbmc6S2EsbWV0cmljczpaYX07ZVsiTXlyaWFkUHJvLUl0Il09ZVsiTXlyaWFkUHJvLUl0YWxpYyJdPWVbIlBkZkpTLUZhbGxiYWNrLUl0YWxpYyJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1JdGFsaWMiLGZhY3RvcnM6X2EsYmFzZVdpZHRoczpPYSxiYXNlTWFwcGluZzpQYSxtZXRyaWNzOiRhfTtlWyJNeXJpYWRQcm8tQm9sZEl0Il09ZVsiTXlyaWFkUHJvLUJvbGRJdGFsaWMiXT1lWyJQZGZKUy1GYWxsYmFjay1Cb2xkSXRhbGljIl09e25hbWU6IkxpYmVyYXRpb25TYW5zLUJvbGRJdGFsaWMiLGZhY3RvcnM6VmEsYmFzZVdpZHRoczpUYSxiYXNlTWFwcGluZzpxYSxtZXRyaWNzOnphfTtlLkFyaWFsTVQ9ZS5BcmlhbD1lWyJBcmlhbC1SZWd1bGFyIl09e25hbWU6IkxpYmVyYXRpb25TYW5zLVJlZ3VsYXIiLGJhc2VXaWR0aHM6V2EsYmFzZU1hcHBpbmc6WGF9O2VbIkFyaWFsLUJvbGRNVCJdPWVbIkFyaWFsLUJvbGQiXT17bmFtZToiTGliZXJhdGlvblNhbnMtQm9sZCIsYmFzZVdpZHRoczp2YSxiYXNlTWFwcGluZzpLYX07ZVsiQXJpYWwtSXRhbGljTVQiXT1lWyJBcmlhbC1JdGFsaWMiXT17bmFtZToiTGliZXJhdGlvblNhbnMtSXRhbGljIixiYXNlV2lkdGhzOk9hLGJhc2VNYXBwaW5nOlBhfTtlWyJBcmlhbC1Cb2xkSXRhbGljTVQiXT1lWyJBcmlhbC1Cb2xkSXRhbGljIl09e25hbWU6IkxpYmVyYXRpb25TYW5zLUJvbGRJdGFsaWMiLGJhc2VXaWR0aHM6VGEsYmFzZU1hcHBpbmc6cWF9O2VbIkNhbGlicmktUmVndWxhciJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1SZWd1bGFyIixmYWN0b3JzOlJhLGJhc2VXaWR0aHM6V2EsYmFzZU1hcHBpbmc6WGEsbWV0cmljczpOYX07ZVsiQ2FsaWJyaS1Cb2xkIl09e25hbWU6IkxpYmVyYXRpb25TYW5zLUJvbGQiLGZhY3RvcnM6d2EsYmFzZVdpZHRoczp2YSxiYXNlTWFwcGluZzpLYSxtZXRyaWNzOmJhfTtlWyJDYWxpYnJpLUl0YWxpYyJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1JdGFsaWMiLGZhY3RvcnM6U2EsYmFzZVdpZHRoczpPYSxiYXNlTWFwcGluZzpQYSxtZXRyaWNzOmthfTtlWyJDYWxpYnJpLUJvbGRJdGFsaWMiXT17bmFtZToiTGliZXJhdGlvblNhbnMtQm9sZEl0YWxpYyIsZmFjdG9yczpEYSxiYXNlV2lkdGhzOlRhLGJhc2VNYXBwaW5nOnFhLG1ldHJpY3M6RmF9O2VbIlNlZ29ldWktUmVndWxhciJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1SZWd1bGFyIixmYWN0b3JzOm9zLGJhc2VXaWR0aHM6V2EsYmFzZU1hcHBpbmc6WGEsbWV0cmljczpnc307ZVsiU2Vnb2V1aS1Cb2xkIl09e25hbWU6IkxpYmVyYXRpb25TYW5zLUJvbGQiLGZhY3RvcnM6dHMsYmFzZVdpZHRoczp2YSxiYXNlTWFwcGluZzpLYSxtZXRyaWNzOmlzfTtlWyJTZWdvZXVpLUl0YWxpYyJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1JdGFsaWMiLGZhY3RvcnM6cnMsYmFzZVdpZHRoczpPYSxiYXNlTWFwcGluZzpQYSxtZXRyaWNzOm5zfTtlWyJTZWdvZXVpLUJvbGRJdGFsaWMiXT17bmFtZToiTGliZXJhdGlvblNhbnMtQm9sZEl0YWxpYyIsZmFjdG9yczphcyxiYXNlV2lkdGhzOlRhLGJhc2VNYXBwaW5nOnFhLG1ldHJpY3M6c3N9O2VbIkhlbHZldGljYS1SZWd1bGFyIl09ZS5IZWx2ZXRpY2E9e25hbWU6IkxpYmVyYXRpb25TYW5zLVJlZ3VsYXIiLGZhY3RvcnM6SGEsYmFzZVdpZHRoczpXYSxiYXNlTWFwcGluZzpYYSxtZXRyaWNzOllhfTtlWyJIZWx2ZXRpY2EtQm9sZCJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1Cb2xkIixmYWN0b3JzOkdhLGJhc2VXaWR0aHM6dmEsYmFzZU1hcHBpbmc6S2EsbWV0cmljczp4YX07ZVsiSGVsdmV0aWNhLUl0YWxpYyJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1JdGFsaWMiLGZhY3RvcnM6TGEsYmFzZVdpZHRoczpPYSxiYXNlTWFwcGluZzpQYSxtZXRyaWNzOkphfTtlWyJIZWx2ZXRpY2EtQm9sZEl0YWxpYyJdPXtuYW1lOiJMaWJlcmF0aW9uU2Fucy1Cb2xkSXRhbGljIixmYWN0b3JzOk1hLGJhc2VXaWR0aHM6VGEsYmFzZU1hcHBpbmc6cWEsbWV0cmljczpVYX19KSk7ZnVuY3Rpb24gZ2V0WGZhRm9udE5hbWUoZSl7Y29uc3QgdD1ub3JtYWxpemVGb250TmFtZShlKTtyZXR1cm4gSXMoKVt0XX1mdW5jdGlvbiBnZXRYZmFGb250RGljdChlKXtjb25zdCB0PWZ1bmN0aW9uIGdldFhmYUZvbnRXaWR0aHMoZSl7Y29uc3QgdD1nZXRYZmFGb250TmFtZShlKTtpZighdClyZXR1cm4gbnVsbDtjb25zdHtiYXNlV2lkdGhzOmksYmFzZU1hcHBpbmc6YSxmYWN0b3JzOnN9PXQscj1zP2kubWFwKCgoZSx0KT0+ZSpzW3RdKSk6aTtsZXQgbixvPS0yO2NvbnN0IGc9W107Zm9yKGNvbnN0W2UsdF1vZiBhLm1hcCgoKGUsdCk9PltlLHRdKSkuc29ydCgoKFtlXSxbdF0pPT5lLXQpKSlpZigtMSE9PWUpaWYoZT09PW8rMSl7bi5wdXNoKHJbdF0pO28rPTF9ZWxzZXtvPWU7bj1bclt0XV07Zy5wdXNoKGUsbil9cmV0dXJuIGd9KGUpLGk9bmV3IERpY3QobnVsbCk7aS5zZXQoIkJhc2VGb250IixOYW1lLmdldChlKSk7aS5zZXQoIlR5cGUiLE5hbWUuZ2V0KCJGb250IikpO2kuc2V0KCJTdWJ0eXBlIixOYW1lLmdldCgiQ0lERm9udFR5cGUyIikpO2kuc2V0KCJFbmNvZGluZyIsTmFtZS5nZXQoIklkZW50aXR5LUgiKSk7aS5zZXQoIkNJRFRvR0lETWFwIixOYW1lLmdldCgiSWRlbnRpdHkiKSk7aS5zZXQoIlciLHQpO2kuc2V0KCJGaXJzdENoYXIiLHRbMF0pO2kuc2V0KCJMYXN0Q2hhciIsdC5hdCgtMikrdC5hdCgtMSkubGVuZ3RoLTEpO2NvbnN0IGE9bmV3IERpY3QobnVsbCk7aS5zZXQoIkZvbnREZXNjcmlwdG9yIixhKTtjb25zdCBzPW5ldyBEaWN0KG51bGwpO3Muc2V0KCJPcmRlcmluZyIsIklkZW50aXR5Iik7cy5zZXQoIlJlZ2lzdHJ5IiwiQWRvYmUiKTtzLnNldCgiU3VwcGxlbWVudCIsMCk7aS5zZXQoIkNJRFN5c3RlbUluZm8iLHMpO3JldHVybiBpfWNsYXNzIFBvc3RTY3JpcHRQYXJzZXJ7Y29uc3RydWN0b3IoZSl7dGhpcy5sZXhlcj1lO3RoaXMub3BlcmF0b3JzPVtdO3RoaXMudG9rZW49bnVsbDt0aGlzLnByZXY9bnVsbH1uZXh0VG9rZW4oKXt0aGlzLnByZXY9dGhpcy50b2tlbjt0aGlzLnRva2VuPXRoaXMubGV4ZXIuZ2V0VG9rZW4oKX1hY2NlcHQoZSl7aWYodGhpcy50b2tlbi50eXBlPT09ZSl7dGhpcy5uZXh0VG9rZW4oKTtyZXR1cm4hMH1yZXR1cm4hMX1leHBlY3QoZSl7aWYodGhpcy5hY2NlcHQoZSkpcmV0dXJuITA7dGhyb3cgbmV3IEZvcm1hdEVycm9yKGBVbmV4cGVjdGVkIHN5bWJvbDogZm91bmQgJHt0aGlzLnRva2VuLnR5cGV9IGV4cGVjdGVkICR7ZX0uYCl9cGFyc2UoKXt0aGlzLm5leHRUb2tlbigpO3RoaXMuZXhwZWN0KGNzLkxCUkFDRSk7dGhpcy5wYXJzZUJsb2NrKCk7dGhpcy5leHBlY3QoY3MuUkJSQUNFKTtyZXR1cm4gdGhpcy5vcGVyYXRvcnN9cGFyc2VCbG9jaygpe2Zvcig7OylpZih0aGlzLmFjY2VwdChjcy5OVU1CRVIpKXRoaXMub3BlcmF0b3JzLnB1c2godGhpcy5wcmV2LnZhbHVlKTtlbHNlIGlmKHRoaXMuYWNjZXB0KGNzLk9QRVJBVE9SKSl0aGlzLm9wZXJhdG9ycy5wdXNoKHRoaXMucHJldi52YWx1ZSk7ZWxzZXtpZighdGhpcy5hY2NlcHQoY3MuTEJSQUNFKSlyZXR1cm47dGhpcy5wYXJzZUNvbmRpdGlvbigpfX1wYXJzZUNvbmRpdGlvbigpe2NvbnN0IGU9dGhpcy5vcGVyYXRvcnMubGVuZ3RoO3RoaXMub3BlcmF0b3JzLnB1c2gobnVsbCxudWxsKTt0aGlzLnBhcnNlQmxvY2soKTt0aGlzLmV4cGVjdChjcy5SQlJBQ0UpO2lmKHRoaXMuYWNjZXB0KGNzLklGKSl7dGhpcy5vcGVyYXRvcnNbZV09dGhpcy5vcGVyYXRvcnMubGVuZ3RoO3RoaXMub3BlcmF0b3JzW2UrMV09Imp6In1lbHNle2lmKCF0aGlzLmFjY2VwdChjcy5MQlJBQ0UpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiUFMgRnVuY3Rpb246IGVycm9yIHBhcnNpbmcgY29uZGl0aW9uYWwuIik7e2NvbnN0IHQ9dGhpcy5vcGVyYXRvcnMubGVuZ3RoO3RoaXMub3BlcmF0b3JzLnB1c2gobnVsbCxudWxsKTtjb25zdCBpPXRoaXMub3BlcmF0b3JzLmxlbmd0aDt0aGlzLnBhcnNlQmxvY2soKTt0aGlzLmV4cGVjdChjcy5SQlJBQ0UpO3RoaXMuZXhwZWN0KGNzLklGRUxTRSk7dGhpcy5vcGVyYXRvcnNbdF09dGhpcy5vcGVyYXRvcnMubGVuZ3RoO3RoaXMub3BlcmF0b3JzW3QrMV09ImoiO3RoaXMub3BlcmF0b3JzW2VdPWk7dGhpcy5vcGVyYXRvcnNbZSsxXT0ianoifX19fWNvbnN0IGNzPXtMQlJBQ0U6MCxSQlJBQ0U6MSxOVU1CRVI6MixPUEVSQVRPUjozLElGOjQsSUZFTFNFOjV9O2NsYXNzIFBvc3RTY3JpcHRUb2tlbntzdGF0aWMgZ2V0IG9wQ2FjaGUoKXtyZXR1cm4gc2hhZG93KHRoaXMsIm9wQ2FjaGUiLE9iamVjdC5jcmVhdGUobnVsbCkpfWNvbnN0cnVjdG9yKGUsdCl7dGhpcy50eXBlPWU7dGhpcy52YWx1ZT10fXN0YXRpYyBnZXRPcGVyYXRvcihlKXtyZXR1cm4gUG9zdFNjcmlwdFRva2VuLm9wQ2FjaGVbZV18fD1uZXcgUG9zdFNjcmlwdFRva2VuKGNzLk9QRVJBVE9SLGUpfXN0YXRpYyBnZXQgTEJSQUNFKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJMQlJBQ0UiLG5ldyBQb3N0U2NyaXB0VG9rZW4oY3MuTEJSQUNFLCJ7IikpfXN0YXRpYyBnZXQgUkJSQUNFKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJSQlJBQ0UiLG5ldyBQb3N0U2NyaXB0VG9rZW4oY3MuUkJSQUNFLCJ9IikpfXN0YXRpYyBnZXQgSUYoKXtyZXR1cm4gc2hhZG93KHRoaXMsIklGIixuZXcgUG9zdFNjcmlwdFRva2VuKGNzLklGLCJJRiIpKX1zdGF0aWMgZ2V0IElGRUxTRSgpe3JldHVybiBzaGFkb3codGhpcywiSUZFTFNFIixuZXcgUG9zdFNjcmlwdFRva2VuKGNzLklGRUxTRSwiSUZFTFNFIikpfX1jbGFzcyBQb3N0U2NyaXB0TGV4ZXJ7Y29uc3RydWN0b3IoZSl7dGhpcy5zdHJlYW09ZTt0aGlzLm5leHRDaGFyKCk7dGhpcy5zdHJCdWY9W119bmV4dENoYXIoKXtyZXR1cm4gdGhpcy5jdXJyZW50Q2hhcj10aGlzLnN0cmVhbS5nZXRCeXRlKCl9Z2V0VG9rZW4oKXtsZXQgZT0hMSx0PXRoaXMuY3VycmVudENoYXI7Zm9yKDs7KXtpZih0PDApcmV0dXJuIHB0O2lmKGUpMTAhPT10JiYxMyE9PXR8fChlPSExKTtlbHNlIGlmKDM3PT09dCllPSEwO2Vsc2UgaWYoIWlzV2hpdGVTcGFjZSh0KSlicmVhazt0PXRoaXMubmV4dENoYXIoKX1zd2l0Y2goMHx0KXtjYXNlIDQ4OmNhc2UgNDk6Y2FzZSA1MDpjYXNlIDUxOmNhc2UgNTI6Y2FzZSA1MzpjYXNlIDU0OmNhc2UgNTU6Y2FzZSA1NjpjYXNlIDU3OmNhc2UgNDM6Y2FzZSA0NTpjYXNlIDQ2OnJldHVybiBuZXcgUG9zdFNjcmlwdFRva2VuKGNzLk5VTUJFUix0aGlzLmdldE51bWJlcigpKTtjYXNlIDEyMzp0aGlzLm5leHRDaGFyKCk7cmV0dXJuIFBvc3RTY3JpcHRUb2tlbi5MQlJBQ0U7Y2FzZSAxMjU6dGhpcy5uZXh0Q2hhcigpO3JldHVybiBQb3N0U2NyaXB0VG9rZW4uUkJSQUNFfWNvbnN0IGk9dGhpcy5zdHJCdWY7aS5sZW5ndGg9MDtpWzBdPVN0cmluZy5mcm9tQ2hhckNvZGUodCk7Zm9yKDsodD10aGlzLm5leHRDaGFyKCkpPj0wJiYodD49NjUmJnQ8PTkwfHx0Pj05NyYmdDw9MTIyKTspaS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUodCkpO2NvbnN0IGE9aS5qb2luKCIiKTtzd2l0Y2goYS50b0xvd2VyQ2FzZSgpKXtjYXNlImlmIjpyZXR1cm4gUG9zdFNjcmlwdFRva2VuLklGO2Nhc2UiaWZlbHNlIjpyZXR1cm4gUG9zdFNjcmlwdFRva2VuLklGRUxTRTtkZWZhdWx0OnJldHVybiBQb3N0U2NyaXB0VG9rZW4uZ2V0T3BlcmF0b3IoYSl9fWdldE51bWJlcigpe2xldCBlPXRoaXMuY3VycmVudENoYXI7Y29uc3QgdD10aGlzLnN0ckJ1Zjt0Lmxlbmd0aD0wO3RbMF09U3RyaW5nLmZyb21DaGFyQ29kZShlKTtmb3IoOyhlPXRoaXMubmV4dENoYXIoKSk+PTAmJihlPj00OCYmZTw9NTd8fDQ1PT09ZXx8NDY9PT1lKTspdC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoZSkpO2NvbnN0IGk9cGFyc2VGbG9hdCh0LmpvaW4oIiIpKTtpZihpc05hTihpKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYEludmFsaWQgZmxvYXRpbmcgcG9pbnQgbnVtYmVyOiAke2l9YCk7cmV0dXJuIGl9fWNsYXNzIEJhc2VMb2NhbENhY2hle2NvbnN0cnVjdG9yKGUpe3RoaXMuY29uc3RydWN0b3I9PT1CYXNlTG9jYWxDYWNoZSYmdW5yZWFjaGFibGUoIkNhbm5vdCBpbml0aWFsaXplIEJhc2VMb2NhbENhY2hlLiIpO3RoaXMuX29ubHlSZWZzPSEwPT09ZT8ub25seVJlZnM7aWYoIXRoaXMuX29ubHlSZWZzKXt0aGlzLl9uYW1lUmVmTWFwPW5ldyBNYXA7dGhpcy5faW1hZ2VNYXA9bmV3IE1hcH10aGlzLl9pbWFnZUNhY2hlPW5ldyBSZWZTZXRDYWNoZX1nZXRCeU5hbWUoZSl7dGhpcy5fb25seVJlZnMmJnVucmVhY2hhYmxlKCJTaG91bGQgbm90IGNhbGwgYGdldEJ5TmFtZWAgbWV0aG9kLiIpO2NvbnN0IHQ9dGhpcy5fbmFtZVJlZk1hcC5nZXQoZSk7cmV0dXJuIHQ/dGhpcy5nZXRCeVJlZih0KTp0aGlzLl9pbWFnZU1hcC5nZXQoZSl8fG51bGx9Z2V0QnlSZWYoZSl7cmV0dXJuIHRoaXMuX2ltYWdlQ2FjaGUuZ2V0KGUpfHxudWxsfXNldChlLHQsaSl7dW5yZWFjaGFibGUoIkFic3RyYWN0IG1ldGhvZCBgc2V0YCBjYWxsZWQuIil9fWNsYXNzIExvY2FsSW1hZ2VDYWNoZSBleHRlbmRzIEJhc2VMb2NhbENhY2hle3NldChlLHQ9bnVsbCxpKXtpZigic3RyaW5nIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKCdMb2NhbEltYWdlQ2FjaGUuc2V0IC0gZXhwZWN0ZWQgIm5hbWUiIGFyZ3VtZW50LicpO2lmKHQpe2lmKHRoaXMuX2ltYWdlQ2FjaGUuaGFzKHQpKXJldHVybjt0aGlzLl9uYW1lUmVmTWFwLnNldChlLHQpO3RoaXMuX2ltYWdlQ2FjaGUucHV0KHQsaSl9ZWxzZSB0aGlzLl9pbWFnZU1hcC5oYXMoZSl8fHRoaXMuX2ltYWdlTWFwLnNldChlLGkpfX1jbGFzcyBMb2NhbENvbG9yU3BhY2VDYWNoZSBleHRlbmRzIEJhc2VMb2NhbENhY2hle3NldChlPW51bGwsdD1udWxsLGkpe2lmKCJzdHJpbmciIT10eXBlb2YgZSYmIXQpdGhyb3cgbmV3IEVycm9yKCdMb2NhbENvbG9yU3BhY2VDYWNoZS5zZXQgLSBleHBlY3RlZCAibmFtZSIgYW5kL29yICJyZWYiIGFyZ3VtZW50LicpO2lmKHQpe2lmKHRoaXMuX2ltYWdlQ2FjaGUuaGFzKHQpKXJldHVybjtudWxsIT09ZSYmdGhpcy5fbmFtZVJlZk1hcC5zZXQoZSx0KTt0aGlzLl9pbWFnZUNhY2hlLnB1dCh0LGkpfWVsc2UgdGhpcy5faW1hZ2VNYXAuaGFzKGUpfHx0aGlzLl9pbWFnZU1hcC5zZXQoZSxpKX19Y2xhc3MgTG9jYWxGdW5jdGlvbkNhY2hlIGV4dGVuZHMgQmFzZUxvY2FsQ2FjaGV7Y29uc3RydWN0b3IoZSl7c3VwZXIoe29ubHlSZWZzOiEwfSl9c2V0KGU9bnVsbCx0LGkpe2lmKCF0KXRocm93IG5ldyBFcnJvcignTG9jYWxGdW5jdGlvbkNhY2hlLnNldCAtIGV4cGVjdGVkICJyZWYiIGFyZ3VtZW50LicpO3RoaXMuX2ltYWdlQ2FjaGUuaGFzKHQpfHx0aGlzLl9pbWFnZUNhY2hlLnB1dCh0LGkpfX1jbGFzcyBMb2NhbEdTdGF0ZUNhY2hlIGV4dGVuZHMgQmFzZUxvY2FsQ2FjaGV7c2V0KGUsdD1udWxsLGkpe2lmKCJzdHJpbmciIT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoJ0xvY2FsR1N0YXRlQ2FjaGUuc2V0IC0gZXhwZWN0ZWQgIm5hbWUiIGFyZ3VtZW50LicpO2lmKHQpe2lmKHRoaXMuX2ltYWdlQ2FjaGUuaGFzKHQpKXJldHVybjt0aGlzLl9uYW1lUmVmTWFwLnNldChlLHQpO3RoaXMuX2ltYWdlQ2FjaGUucHV0KHQsaSl9ZWxzZSB0aGlzLl9pbWFnZU1hcC5oYXMoZSl8fHRoaXMuX2ltYWdlTWFwLnNldChlLGkpfX1jbGFzcyBMb2NhbFRpbGluZ1BhdHRlcm5DYWNoZSBleHRlbmRzIEJhc2VMb2NhbENhY2hle2NvbnN0cnVjdG9yKGUpe3N1cGVyKHtvbmx5UmVmczohMH0pfXNldChlPW51bGwsdCxpKXtpZighdCl0aHJvdyBuZXcgRXJyb3IoJ0xvY2FsVGlsaW5nUGF0dGVybkNhY2hlLnNldCAtIGV4cGVjdGVkICJyZWYiIGFyZ3VtZW50LicpO3RoaXMuX2ltYWdlQ2FjaGUuaGFzKHQpfHx0aGlzLl9pbWFnZUNhY2hlLnB1dCh0LGkpfX1jbGFzcyBSZWdpb25hbEltYWdlQ2FjaGUgZXh0ZW5kcyBCYXNlTG9jYWxDYWNoZXtjb25zdHJ1Y3RvcihlKXtzdXBlcih7b25seVJlZnM6ITB9KX1zZXQoZT1udWxsLHQsaSl7aWYoIXQpdGhyb3cgbmV3IEVycm9yKCdSZWdpb25hbEltYWdlQ2FjaGUuc2V0IC0gZXhwZWN0ZWQgInJlZiIgYXJndW1lbnQuJyk7dGhpcy5faW1hZ2VDYWNoZS5oYXModCl8fHRoaXMuX2ltYWdlQ2FjaGUucHV0KHQsaSl9fWNsYXNzIEdsb2JhbEltYWdlQ2FjaGV7c3RhdGljIE5VTV9QQUdFU19USFJFU0hPTEQ9MjtzdGF0aWMgTUlOX0lNQUdFU19UT19DQUNIRT0xMDtzdGF0aWMgTUFYX0JZVEVfU0laRT01ZTc7Y29uc3RydWN0b3IoKXt0aGlzLl9yZWZDYWNoZT1uZXcgUmVmU2V0Q2FjaGU7dGhpcy5faW1hZ2VDYWNoZT1uZXcgUmVmU2V0Q2FjaGV9Z2V0IF9ieXRlU2l6ZSgpe2xldCBlPTA7Zm9yKGNvbnN0IHQgb2YgdGhpcy5faW1hZ2VDYWNoZSllKz10LmJ5dGVTaXplO3JldHVybiBlfWdldCBfY2FjaGVMaW1pdFJlYWNoZWQoKXtyZXR1cm4hKHRoaXMuX2ltYWdlQ2FjaGUuc2l6ZTxHbG9iYWxJbWFnZUNhY2hlLk1JTl9JTUFHRVNfVE9fQ0FDSEUpJiYhKHRoaXMuX2J5dGVTaXplPEdsb2JhbEltYWdlQ2FjaGUuTUFYX0JZVEVfU0laRSl9c2hvdWxkQ2FjaGUoZSx0KXtsZXQgaT10aGlzLl9yZWZDYWNoZS5nZXQoZSk7aWYoIWkpe2k9bmV3IFNldDt0aGlzLl9yZWZDYWNoZS5wdXQoZSxpKX1pLmFkZCh0KTtyZXR1cm4hKGkuc2l6ZTxHbG9iYWxJbWFnZUNhY2hlLk5VTV9QQUdFU19USFJFU0hPTEQpJiYhKCF0aGlzLl9pbWFnZUNhY2hlLmhhcyhlKSYmdGhpcy5fY2FjaGVMaW1pdFJlYWNoZWQpfWFkZEJ5dGVTaXplKGUsdCl7Y29uc3QgaT10aGlzLl9pbWFnZUNhY2hlLmdldChlKTtpJiYoaS5ieXRlU2l6ZXx8KGkuYnl0ZVNpemU9dCkpfWdldERhdGEoZSx0KXtjb25zdCBpPXRoaXMuX3JlZkNhY2hlLmdldChlKTtpZighaSlyZXR1cm4gbnVsbDtpZihpLnNpemU8R2xvYmFsSW1hZ2VDYWNoZS5OVU1fUEFHRVNfVEhSRVNIT0xEKXJldHVybiBudWxsO2NvbnN0IGE9dGhpcy5faW1hZ2VDYWNoZS5nZXQoZSk7aWYoIWEpcmV0dXJuIG51bGw7aS5hZGQodCk7cmV0dXJuIGF9c2V0RGF0YShlLHQpe2lmKCF0aGlzLl9yZWZDYWNoZS5oYXMoZSkpdGhyb3cgbmV3IEVycm9yKCdHbG9iYWxJbWFnZUNhY2hlLnNldERhdGEgLSBleHBlY3RlZCAic2hvdWxkQ2FjaGUiIHRvIGhhdmUgYmVlbiBjYWxsZWQuJyk7dGhpcy5faW1hZ2VDYWNoZS5oYXMoZSl8fCh0aGlzLl9jYWNoZUxpbWl0UmVhY2hlZD93YXJuKCJHbG9iYWxJbWFnZUNhY2hlLnNldERhdGEgLSBjYWNoZSBsaW1pdCByZWFjaGVkLiIpOnRoaXMuX2ltYWdlQ2FjaGUucHV0KGUsdCkpfWNsZWFyKGU9ITEpe2V8fHRoaXMuX3JlZkNhY2hlLmNsZWFyKCk7dGhpcy5faW1hZ2VDYWNoZS5jbGVhcigpfX1jbGFzcyBQREZGdW5jdGlvbkZhY3Rvcnl7Y29uc3RydWN0b3Ioe3hyZWY6ZSxpc0V2YWxTdXBwb3J0ZWQ6dD0hMH0pe3RoaXMueHJlZj1lO3RoaXMuaXNFdmFsU3VwcG9ydGVkPSExIT09dH1jcmVhdGUoZSl7Y29uc3QgdD10aGlzLmdldENhY2hlZChlKTtpZih0KXJldHVybiB0O2NvbnN0IGk9UERGRnVuY3Rpb24ucGFyc2Uoe3hyZWY6dGhpcy54cmVmLGlzRXZhbFN1cHBvcnRlZDp0aGlzLmlzRXZhbFN1cHBvcnRlZCxmbjplIGluc3RhbmNlb2YgUmVmP3RoaXMueHJlZi5mZXRjaChlKTplfSk7dGhpcy5fY2FjaGUoZSxpKTtyZXR1cm4gaX1jcmVhdGVGcm9tQXJyYXkoZSl7Y29uc3QgdD10aGlzLmdldENhY2hlZChlKTtpZih0KXJldHVybiB0O2NvbnN0IGk9UERGRnVuY3Rpb24ucGFyc2VBcnJheSh7eHJlZjp0aGlzLnhyZWYsaXNFdmFsU3VwcG9ydGVkOnRoaXMuaXNFdmFsU3VwcG9ydGVkLGZuT2JqOmUgaW5zdGFuY2VvZiBSZWY/dGhpcy54cmVmLmZldGNoKGUpOmV9KTt0aGlzLl9jYWNoZShlLGkpO3JldHVybiBpfWdldENhY2hlZChlKXtsZXQgdDtlIGluc3RhbmNlb2YgUmVmP3Q9ZTplIGluc3RhbmNlb2YgRGljdD90PWUub2JqSWQ6ZSBpbnN0YW5jZW9mIEJhc2VTdHJlYW0mJih0PWUuZGljdD8ub2JqSWQpO2lmKHQpe2NvbnN0IGU9dGhpcy5fbG9jYWxGdW5jdGlvbkNhY2hlLmdldEJ5UmVmKHQpO2lmKGUpcmV0dXJuIGV9cmV0dXJuIG51bGx9X2NhY2hlKGUsdCl7aWYoIXQpdGhyb3cgbmV3IEVycm9yKCdQREZGdW5jdGlvbkZhY3RvcnkuX2NhY2hlIC0gZXhwZWN0ZWQgInBhcnNlZEZ1bmN0aW9uIiBhcmd1bWVudC4nKTtsZXQgaTtlIGluc3RhbmNlb2YgUmVmP2k9ZTplIGluc3RhbmNlb2YgRGljdD9pPWUub2JqSWQ6ZSBpbnN0YW5jZW9mIEJhc2VTdHJlYW0mJihpPWUuZGljdD8ub2JqSWQpO2kmJnRoaXMuX2xvY2FsRnVuY3Rpb25DYWNoZS5zZXQobnVsbCxpLHQpfWdldCBfbG9jYWxGdW5jdGlvbkNhY2hlKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJfbG9jYWxGdW5jdGlvbkNhY2hlIixuZXcgTG9jYWxGdW5jdGlvbkNhY2hlKX19ZnVuY3Rpb24gdG9OdW1iZXJBcnJheShlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT9pc051bWJlckFycmF5KGUsbnVsbCk/ZTplLm1hcCgoZT0+K2UpKTpudWxsfWNsYXNzIFBERkZ1bmN0aW9ue3N0YXRpYyBnZXRTYW1wbGVBcnJheShlLHQsaSxhKXtsZXQgcyxyLG49MTtmb3Iocz0wLHI9ZS5sZW5ndGg7czxyO3MrKyluKj1lW3NdO24qPXQ7Y29uc3Qgbz1uZXcgQXJyYXkobik7bGV0IGc9MCxjPTA7Y29uc3QgaD0xLygyKippLTEpLGw9YS5nZXRCeXRlcygobippKzcpLzgpO2xldCBDPTA7Zm9yKHM9MDtzPG47cysrKXtmb3IoO2c8aTspe2M8PD04O2N8PWxbQysrXTtnKz04fWctPWk7b1tzXT0oYz4+ZykqaDtjJj0oMTw8ZyktMX1yZXR1cm4gb31zdGF0aWMgcGFyc2Uoe3hyZWY6ZSxpc0V2YWxTdXBwb3J0ZWQ6dCxmbjppfSl7Y29uc3QgYT1pLmRpY3R8fGk7c3dpdGNoKGEuZ2V0KCJGdW5jdGlvblR5cGUiKSl7Y2FzZSAwOnJldHVybiB0aGlzLmNvbnN0cnVjdFNhbXBsZWQoe3hyZWY6ZSxpc0V2YWxTdXBwb3J0ZWQ6dCxmbjppLGRpY3Q6YX0pO2Nhc2UgMTpicmVhaztjYXNlIDI6cmV0dXJuIHRoaXMuY29uc3RydWN0SW50ZXJwb2xhdGVkKHt4cmVmOmUsaXNFdmFsU3VwcG9ydGVkOnQsZGljdDphfSk7Y2FzZSAzOnJldHVybiB0aGlzLmNvbnN0cnVjdFN0aWNoZWQoe3hyZWY6ZSxpc0V2YWxTdXBwb3J0ZWQ6dCxkaWN0OmF9KTtjYXNlIDQ6cmV0dXJuIHRoaXMuY29uc3RydWN0UG9zdFNjcmlwdCh7eHJlZjplLGlzRXZhbFN1cHBvcnRlZDp0LGZuOmksZGljdDphfSl9dGhyb3cgbmV3IEZvcm1hdEVycm9yKCJVbmtub3duIHR5cGUgb2YgZnVuY3Rpb24iKX1zdGF0aWMgcGFyc2VBcnJheSh7eHJlZjplLGlzRXZhbFN1cHBvcnRlZDp0LGZuT2JqOml9KXtpZighQXJyYXkuaXNBcnJheShpKSlyZXR1cm4gdGhpcy5wYXJzZSh7eHJlZjplLGlzRXZhbFN1cHBvcnRlZDp0LGZuOml9KTtjb25zdCBhPVtdO2Zvcihjb25zdCBzIG9mIGkpYS5wdXNoKHRoaXMucGFyc2Uoe3hyZWY6ZSxpc0V2YWxTdXBwb3J0ZWQ6dCxmbjplLmZldGNoSWZSZWYocyl9KSk7cmV0dXJuIGZ1bmN0aW9uKGUsdCxpLHMpe2ZvcihsZXQgcj0wLG49YS5sZW5ndGg7cjxuO3IrKylhW3JdKGUsdCxpLHMrcil9fXN0YXRpYyBjb25zdHJ1Y3RTYW1wbGVkKHt4cmVmOmUsaXNFdmFsU3VwcG9ydGVkOnQsZm46aSxkaWN0OmF9KXtmdW5jdGlvbiB0b011bHRpQXJyYXkoZSl7Y29uc3QgdD1lLmxlbmd0aCxpPVtdO2xldCBhPTA7Zm9yKGxldCBzPTA7czx0O3MrPTIpaVthKytdPVtlW3NdLGVbcysxXV07cmV0dXJuIGl9ZnVuY3Rpb24gaW50ZXJwb2xhdGUoZSx0LGksYSxzKXtyZXR1cm4gYSsocy1hKS8oaS10KSooZS10KX1sZXQgcz10b051bWJlckFycmF5KGEuZ2V0QXJyYXkoIkRvbWFpbiIpKSxyPXRvTnVtYmVyQXJyYXkoYS5nZXRBcnJheSgiUmFuZ2UiKSk7aWYoIXN8fCFyKXRocm93IG5ldyBGb3JtYXRFcnJvcigiTm8gZG9tYWluIG9yIHJhbmdlIik7Y29uc3Qgbj1zLmxlbmd0aC8yLG89ci5sZW5ndGgvMjtzPXRvTXVsdGlBcnJheShzKTtyPXRvTXVsdGlBcnJheShyKTtjb25zdCBnPXRvTnVtYmVyQXJyYXkoYS5nZXRBcnJheSgiU2l6ZSIpKSxjPWEuZ2V0KCJCaXRzUGVyU2FtcGxlIiksaD1hLmdldCgiT3JkZXIiKXx8MTsxIT09aCYmaW5mbygiTm8gc3VwcG9ydCBmb3IgY3ViaWMgc3BsaW5lIGludGVycG9sYXRpb246ICIraCk7bGV0IGw9dG9OdW1iZXJBcnJheShhLmdldEFycmF5KCJFbmNvZGUiKSk7aWYobClsPXRvTXVsdGlBcnJheShsKTtlbHNle2w9W107Zm9yKGxldCBlPTA7ZTxuOysrZSlsLnB1c2goWzAsZ1tlXS0xXSl9bGV0IEM9dG9OdW1iZXJBcnJheShhLmdldEFycmF5KCJEZWNvZGUiKSk7Qz1DP3RvTXVsdGlBcnJheShDKTpyO2NvbnN0IFE9dGhpcy5nZXRTYW1wbGVBcnJheShnLG8sYyxpKTtyZXR1cm4gZnVuY3Rpb24gY29uc3RydWN0U2FtcGxlZEZuKGUsdCxpLGEpe2NvbnN0IGM9MTw8bixoPW5ldyBGbG9hdDY0QXJyYXkoYyksRT1uZXcgVWludDMyQXJyYXkoYyk7bGV0IHUsZDtmb3IoZD0wO2Q8YztkKyspaFtkXT0xO2xldCBmPW8scD0xO2Zvcih1PTA7dTxuOysrdSl7Y29uc3QgaT1zW3VdWzBdLGE9c1t1XVsxXTtsZXQgcj1pbnRlcnBvbGF0ZShNYXRoLm1pbihNYXRoLm1heChlW3QrdV0saSksYSksaSxhLGxbdV1bMF0sbFt1XVsxXSk7Y29uc3Qgbj1nW3VdO3I9TWF0aC5taW4oTWF0aC5tYXgociwwKSxuLTEpO2NvbnN0IG89cjxuLTE/TWF0aC5mbG9vcihyKTpyLTEsQz1vKzEtcixRPXItbyxtPW8qZix5PW0rZjtmb3IoZD0wO2Q8YztkKyspaWYoZCZwKXtoW2RdKj1RO0VbZF0rPXl9ZWxzZXtoW2RdKj1DO0VbZF0rPW19Zio9bjtwPDw9MX1mb3IoZD0wO2Q8bzsrK2Qpe2xldCBlPTA7Zm9yKHU9MDt1PGM7dSsrKWUrPVFbRVt1XStkXSpoW3VdO2U9aW50ZXJwb2xhdGUoZSwwLDEsQ1tkXVswXSxDW2RdWzFdKTtpW2ErZF09TWF0aC5taW4oTWF0aC5tYXgoZSxyW2RdWzBdKSxyW2RdWzFdKX19fXN0YXRpYyBjb25zdHJ1Y3RJbnRlcnBvbGF0ZWQoe3hyZWY6ZSxpc0V2YWxTdXBwb3J0ZWQ6dCxkaWN0Oml9KXtjb25zdCBhPXRvTnVtYmVyQXJyYXkoaS5nZXRBcnJheSgiQzAiKSl8fFswXSxzPXRvTnVtYmVyQXJyYXkoaS5nZXRBcnJheSgiQzEiKSl8fFsxXSxyPWkuZ2V0KCJOIiksbj1bXTtmb3IobGV0IGU9MCx0PWEubGVuZ3RoO2U8dDsrK2Upbi5wdXNoKHNbZV0tYVtlXSk7Y29uc3Qgbz1uLmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24gY29uc3RydWN0SW50ZXJwb2xhdGVkRm4oZSx0LGkscyl7Y29uc3QgZz0xPT09cj9lW3RdOmVbdF0qKnI7Zm9yKGxldCBlPTA7ZTxvOysrZSlpW3MrZV09YVtlXStnKm5bZV19fXN0YXRpYyBjb25zdHJ1Y3RTdGljaGVkKHt4cmVmOmUsaXNFdmFsU3VwcG9ydGVkOnQsZGljdDppfSl7Y29uc3QgYT10b051bWJlckFycmF5KGkuZ2V0QXJyYXkoIkRvbWFpbiIpKTtpZighYSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIk5vIGRvbWFpbiIpO2lmKDEhPT1hLmxlbmd0aC8yKXRocm93IG5ldyBGb3JtYXRFcnJvcigiQmFkIGRvbWFpbiBmb3Igc3RpY2hlZCBmdW5jdGlvbiIpO2NvbnN0IHM9W107Zm9yKGNvbnN0IGEgb2YgaS5nZXQoIkZ1bmN0aW9ucyIpKXMucHVzaCh0aGlzLnBhcnNlKHt4cmVmOmUsaXNFdmFsU3VwcG9ydGVkOnQsZm46ZS5mZXRjaElmUmVmKGEpfSkpO2NvbnN0IHI9dG9OdW1iZXJBcnJheShpLmdldEFycmF5KCJCb3VuZHMiKSksbj10b051bWJlckFycmF5KGkuZ2V0QXJyYXkoIkVuY29kZSIpKSxvPW5ldyBGbG9hdDMyQXJyYXkoMSk7cmV0dXJuIGZ1bmN0aW9uIGNvbnN0cnVjdFN0aWNoZWRGbihlLHQsaSxnKXtjb25zdCBjPWZ1bmN0aW9uIGNvbnN0cnVjdFN0aWNoZWRGcm9tSVJDbGlwKGUsdCxpKXtlPmk/ZT1pOmU8dCYmKGU9dCk7cmV0dXJuIGV9KGVbdF0sYVswXSxhWzFdKSxoPXIubGVuZ3RoO2xldCBsO2ZvcihsPTA7bDxoJiYhKGM8cltsXSk7KytsKTtsZXQgQz1hWzBdO2w+MCYmKEM9cltsLTFdKTtsZXQgUT1hWzFdO2w8ci5sZW5ndGgmJihRPXJbbF0pO2NvbnN0IEU9blsyKmxdLHU9blsyKmwrMV07b1swXT1DPT09UT9FOkUrKGMtQykqKHUtRSkvKFEtQyk7c1tsXShvLDAsaSxnKX19c3RhdGljIGNvbnN0cnVjdFBvc3RTY3JpcHQoe3hyZWY6ZSxpc0V2YWxTdXBwb3J0ZWQ6dCxmbjppLGRpY3Q6YX0pe2NvbnN0IHM9dG9OdW1iZXJBcnJheShhLmdldEFycmF5KCJEb21haW4iKSkscj10b051bWJlckFycmF5KGEuZ2V0QXJyYXkoIlJhbmdlIikpO2lmKCFzKXRocm93IG5ldyBGb3JtYXRFcnJvcigiTm8gZG9tYWluLiIpO2lmKCFyKXRocm93IG5ldyBGb3JtYXRFcnJvcigiTm8gcmFuZ2UuIik7Y29uc3Qgbj1uZXcgUG9zdFNjcmlwdExleGVyKGkpLG89bmV3IFBvc3RTY3JpcHRQYXJzZXIobikucGFyc2UoKTtpZih0JiZGZWF0dXJlVGVzdC5pc0V2YWxTdXBwb3J0ZWQpe2NvbnN0IGU9KG5ldyBQb3N0U2NyaXB0Q29tcGlsZXIpLmNvbXBpbGUobyxzLHIpO2lmKGUpcmV0dXJuIG5ldyBGdW5jdGlvbigic3JjIiwic3JjT2Zmc2V0IiwiZGVzdCIsImRlc3RPZmZzZXQiLGUpfWluZm8oIlVuYWJsZSB0byBjb21waWxlIFBTIGZ1bmN0aW9uIik7Y29uc3QgZz1yLmxlbmd0aD4+MSxjPXMubGVuZ3RoPj4xLGg9bmV3IFBvc3RTY3JpcHRFdmFsdWF0b3IobyksbD1PYmplY3QuY3JlYXRlKG51bGwpO2xldCBDPTgxOTI7Y29uc3QgUT1uZXcgRmxvYXQzMkFycmF5KGMpO3JldHVybiBmdW5jdGlvbiBjb25zdHJ1Y3RQb3N0U2NyaXB0Rm4oZSx0LGksYSl7bGV0IHMsbixvPSIiO2NvbnN0IEU9UTtmb3Iocz0wO3M8YztzKyspe249ZVt0K3NdO0Vbc109bjtvKz1uKyJfIn1jb25zdCB1PWxbb107aWYodm9pZCAwIT09dSl7aS5zZXQodSxhKTtyZXR1cm59Y29uc3QgZD1uZXcgRmxvYXQzMkFycmF5KGcpLGY9aC5leGVjdXRlKEUpLHA9Zi5sZW5ndGgtZztmb3Iocz0wO3M8ZztzKyspe249ZltwK3NdO2xldCBlPXJbMipzXTtpZihuPGUpbj1lO2Vsc2V7ZT1yWzIqcysxXTtuPmUmJihuPWUpfWRbc109bn1pZihDPjApe0MtLTtsW29dPWR9aS5zZXQoZCxhKX19fWZ1bmN0aW9uIGlzUERGRnVuY3Rpb24oZSl7bGV0IHQ7aWYoZSBpbnN0YW5jZW9mIERpY3QpdD1lO2Vsc2V7aWYoIShlIGluc3RhbmNlb2YgQmFzZVN0cmVhbSkpcmV0dXJuITE7dD1lLmRpY3R9cmV0dXJuIHQuaGFzKCJGdW5jdGlvblR5cGUiKX1jbGFzcyBQb3N0U2NyaXB0U3RhY2t7c3RhdGljIE1BWF9TVEFDS19TSVpFPTEwMDtjb25zdHJ1Y3RvcihlKXt0aGlzLnN0YWNrPWU/QXJyYXkuZnJvbShlKTpbXX1wdXNoKGUpe2lmKHRoaXMuc3RhY2subGVuZ3RoPj1Qb3N0U2NyaXB0U3RhY2suTUFYX1NUQUNLX1NJWkUpdGhyb3cgbmV3IEVycm9yKCJQb3N0U2NyaXB0IGZ1bmN0aW9uIHN0YWNrIG92ZXJmbG93LiIpO3RoaXMuc3RhY2sucHVzaChlKX1wb3AoKXtpZih0aGlzLnN0YWNrLmxlbmd0aDw9MCl0aHJvdyBuZXcgRXJyb3IoIlBvc3RTY3JpcHQgZnVuY3Rpb24gc3RhY2sgdW5kZXJmbG93LiIpO3JldHVybiB0aGlzLnN0YWNrLnBvcCgpfWNvcHkoZSl7aWYodGhpcy5zdGFjay5sZW5ndGgrZT49UG9zdFNjcmlwdFN0YWNrLk1BWF9TVEFDS19TSVpFKXRocm93IG5ldyBFcnJvcigiUG9zdFNjcmlwdCBmdW5jdGlvbiBzdGFjayBvdmVyZmxvdy4iKTtjb25zdCB0PXRoaXMuc3RhY2s7Zm9yKGxldCBpPXQubGVuZ3RoLWUsYT1lLTE7YT49MDthLS0saSsrKXQucHVzaCh0W2ldKX1pbmRleChlKXt0aGlzLnB1c2godGhpcy5zdGFja1t0aGlzLnN0YWNrLmxlbmd0aC1lLTFdKX1yb2xsKGUsdCl7Y29uc3QgaT10aGlzLnN0YWNrLGE9aS5sZW5ndGgtZSxzPWkubGVuZ3RoLTEscj1hKyh0LU1hdGguZmxvb3IodC9lKSplKTtmb3IobGV0IGU9YSx0PXM7ZTx0O2UrKyx0LS0pe2NvbnN0IGE9aVtlXTtpW2VdPWlbdF07aVt0XT1hfWZvcihsZXQgZT1hLHQ9ci0xO2U8dDtlKyssdC0tKXtjb25zdCBhPWlbZV07aVtlXT1pW3RdO2lbdF09YX1mb3IobGV0IGU9cix0PXM7ZTx0O2UrKyx0LS0pe2NvbnN0IGE9aVtlXTtpW2VdPWlbdF07aVt0XT1hfX19Y2xhc3MgUG9zdFNjcmlwdEV2YWx1YXRvcntjb25zdHJ1Y3RvcihlKXt0aGlzLm9wZXJhdG9ycz1lfWV4ZWN1dGUoZSl7Y29uc3QgdD1uZXcgUG9zdFNjcmlwdFN0YWNrKGUpO2xldCBpPTA7Y29uc3QgYT10aGlzLm9wZXJhdG9ycyxzPWEubGVuZ3RoO2xldCByLG4sbztmb3IoO2k8czspe3I9YVtpKytdO2lmKCJudW1iZXIiIT10eXBlb2Ygcilzd2l0Y2gocil7Y2FzZSJqeiI6bz10LnBvcCgpO249dC5wb3AoKTtufHwoaT1vKTticmVhaztjYXNlImoiOm49dC5wb3AoKTtpPW47YnJlYWs7Y2FzZSJhYnMiOm49dC5wb3AoKTt0LnB1c2goTWF0aC5hYnMobikpO2JyZWFrO2Nhc2UiYWRkIjpvPXQucG9wKCk7bj10LnBvcCgpO3QucHVzaChuK28pO2JyZWFrO2Nhc2UiYW5kIjpvPXQucG9wKCk7bj10LnBvcCgpOyJib29sZWFuIj09dHlwZW9mIG4mJiJib29sZWFuIj09dHlwZW9mIG8/dC5wdXNoKG4mJm8pOnQucHVzaChuJm8pO2JyZWFrO2Nhc2UiYXRhbiI6bz10LnBvcCgpO249dC5wb3AoKTtuPU1hdGguYXRhbjIobixvKS9NYXRoLlBJKjE4MDtuPDAmJihuKz0zNjApO3QucHVzaChuKTticmVhaztjYXNlImJpdHNoaWZ0IjpvPXQucG9wKCk7bj10LnBvcCgpO24+MD90LnB1c2gobjw8byk6dC5wdXNoKG4+Pm8pO2JyZWFrO2Nhc2UiY2VpbGluZyI6bj10LnBvcCgpO3QucHVzaChNYXRoLmNlaWwobikpO2JyZWFrO2Nhc2UiY29weSI6bj10LnBvcCgpO3QuY29weShuKTticmVhaztjYXNlImNvcyI6bj10LnBvcCgpO3QucHVzaChNYXRoLmNvcyhuJTM2MC8xODAqTWF0aC5QSSkpO2JyZWFrO2Nhc2UiY3ZpIjpuPTB8dC5wb3AoKTt0LnB1c2gobik7YnJlYWs7Y2FzZSJjdnIiOmJyZWFrO2Nhc2UiZGl2IjpvPXQucG9wKCk7bj10LnBvcCgpO3QucHVzaChuL28pO2JyZWFrO2Nhc2UiZHVwIjp0LmNvcHkoMSk7YnJlYWs7Y2FzZSJlcSI6bz10LnBvcCgpO249dC5wb3AoKTt0LnB1c2gobj09PW8pO2JyZWFrO2Nhc2UiZXhjaCI6dC5yb2xsKDIsMSk7YnJlYWs7Y2FzZSJleHAiOm89dC5wb3AoKTtuPXQucG9wKCk7dC5wdXNoKG4qKm8pO2JyZWFrO2Nhc2UiZmFsc2UiOnQucHVzaCghMSk7YnJlYWs7Y2FzZSJmbG9vciI6bj10LnBvcCgpO3QucHVzaChNYXRoLmZsb29yKG4pKTticmVhaztjYXNlImdlIjpvPXQucG9wKCk7bj10LnBvcCgpO3QucHVzaChuPj1vKTticmVhaztjYXNlImd0IjpvPXQucG9wKCk7bj10LnBvcCgpO3QucHVzaChuPm8pO2JyZWFrO2Nhc2UiaWRpdiI6bz10LnBvcCgpO249dC5wb3AoKTt0LnB1c2gobi9vfDApO2JyZWFrO2Nhc2UiaW5kZXgiOm49dC5wb3AoKTt0LmluZGV4KG4pO2JyZWFrO2Nhc2UibGUiOm89dC5wb3AoKTtuPXQucG9wKCk7dC5wdXNoKG48PW8pO2JyZWFrO2Nhc2UibG4iOm49dC5wb3AoKTt0LnB1c2goTWF0aC5sb2cobikpO2JyZWFrO2Nhc2UibG9nIjpuPXQucG9wKCk7dC5wdXNoKE1hdGgubG9nMTAobikpO2JyZWFrO2Nhc2UibHQiOm89dC5wb3AoKTtuPXQucG9wKCk7dC5wdXNoKG48byk7YnJlYWs7Y2FzZSJtb2QiOm89dC5wb3AoKTtuPXQucG9wKCk7dC5wdXNoKG4lbyk7YnJlYWs7Y2FzZSJtdWwiOm89dC5wb3AoKTtuPXQucG9wKCk7dC5wdXNoKG4qbyk7YnJlYWs7Y2FzZSJuZSI6bz10LnBvcCgpO249dC5wb3AoKTt0LnB1c2gobiE9PW8pO2JyZWFrO2Nhc2UibmVnIjpuPXQucG9wKCk7dC5wdXNoKC1uKTticmVhaztjYXNlIm5vdCI6bj10LnBvcCgpOyJib29sZWFuIj09dHlwZW9mIG4/dC5wdXNoKCFuKTp0LnB1c2gofm4pO2JyZWFrO2Nhc2Uib3IiOm89dC5wb3AoKTtuPXQucG9wKCk7ImJvb2xlYW4iPT10eXBlb2YgbiYmImJvb2xlYW4iPT10eXBlb2Ygbz90LnB1c2gobnx8byk6dC5wdXNoKG58byk7YnJlYWs7Y2FzZSJwb3AiOnQucG9wKCk7YnJlYWs7Y2FzZSJyb2xsIjpvPXQucG9wKCk7bj10LnBvcCgpO3Qucm9sbChuLG8pO2JyZWFrO2Nhc2Uicm91bmQiOm49dC5wb3AoKTt0LnB1c2goTWF0aC5yb3VuZChuKSk7YnJlYWs7Y2FzZSJzaW4iOm49dC5wb3AoKTt0LnB1c2goTWF0aC5zaW4obiUzNjAvMTgwKk1hdGguUEkpKTticmVhaztjYXNlInNxcnQiOm49dC5wb3AoKTt0LnB1c2goTWF0aC5zcXJ0KG4pKTticmVhaztjYXNlInN1YiI6bz10LnBvcCgpO249dC5wb3AoKTt0LnB1c2gobi1vKTticmVhaztjYXNlInRydWUiOnQucHVzaCghMCk7YnJlYWs7Y2FzZSJ0cnVuY2F0ZSI6bj10LnBvcCgpO249bjwwP01hdGguY2VpbChuKTpNYXRoLmZsb29yKG4pO3QucHVzaChuKTticmVhaztjYXNlInhvciI6bz10LnBvcCgpO249dC5wb3AoKTsiYm9vbGVhbiI9PXR5cGVvZiBuJiYiYm9vbGVhbiI9PXR5cGVvZiBvP3QucHVzaChuIT09byk6dC5wdXNoKG5ebyk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYFVua25vd24gb3BlcmF0b3IgJHtyfWApfWVsc2UgdC5wdXNoKHIpfXJldHVybiB0LnN0YWNrfX1jbGFzcyBBc3ROb2Rle2NvbnN0cnVjdG9yKGUpe3RoaXMudHlwZT1lfXZpc2l0KGUpe3VucmVhY2hhYmxlKCJhYnN0cmFjdCBtZXRob2QiKX19Y2xhc3MgQXN0QXJndW1lbnQgZXh0ZW5kcyBBc3ROb2Rle2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcigiYXJncyIpO3RoaXMuaW5kZXg9ZTt0aGlzLm1pbj10O3RoaXMubWF4PWl9dmlzaXQoZSl7ZS52aXNpdEFyZ3VtZW50KHRoaXMpfX1jbGFzcyBBc3RMaXRlcmFsIGV4dGVuZHMgQXN0Tm9kZXtjb25zdHJ1Y3RvcihlKXtzdXBlcigibGl0ZXJhbCIpO3RoaXMubnVtYmVyPWU7dGhpcy5taW49ZTt0aGlzLm1heD1lfXZpc2l0KGUpe2UudmlzaXRMaXRlcmFsKHRoaXMpfX1jbGFzcyBBc3RCaW5hcnlPcGVyYXRpb24gZXh0ZW5kcyBBc3ROb2Rle2NvbnN0cnVjdG9yKGUsdCxpLGEscyl7c3VwZXIoImJpbmFyeSIpO3RoaXMub3A9ZTt0aGlzLmFyZzE9dDt0aGlzLmFyZzI9aTt0aGlzLm1pbj1hO3RoaXMubWF4PXN9dmlzaXQoZSl7ZS52aXNpdEJpbmFyeU9wZXJhdGlvbih0aGlzKX19Y2xhc3MgQXN0TWluIGV4dGVuZHMgQXN0Tm9kZXtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCJtYXgiKTt0aGlzLmFyZz1lO3RoaXMubWluPWUubWluO3RoaXMubWF4PXR9dmlzaXQoZSl7ZS52aXNpdE1pbih0aGlzKX19Y2xhc3MgQXN0VmFyaWFibGUgZXh0ZW5kcyBBc3ROb2Rle2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcigidmFyIik7dGhpcy5pbmRleD1lO3RoaXMubWluPXQ7dGhpcy5tYXg9aX12aXNpdChlKXtlLnZpc2l0VmFyaWFibGUodGhpcyl9fWNsYXNzIEFzdFZhcmlhYmxlRGVmaW5pdGlvbiBleHRlbmRzIEFzdE5vZGV7Y29uc3RydWN0b3IoZSx0KXtzdXBlcigiZGVmaW5pdGlvbiIpO3RoaXMudmFyaWFibGU9ZTt0aGlzLmFyZz10fXZpc2l0KGUpe2UudmlzaXRWYXJpYWJsZURlZmluaXRpb24odGhpcyl9fWNsYXNzIEV4cHJlc3Npb25CdWlsZGVyVmlzaXRvcntjb25zdHJ1Y3Rvcigpe3RoaXMucGFydHM9W119dmlzaXRBcmd1bWVudChlKXt0aGlzLnBhcnRzLnB1c2goIk1hdGgubWF4KCIsZS5taW4sIiwgTWF0aC5taW4oIixlLm1heCwiLCBzcmNbc3JjT2Zmc2V0ICsgIixlLmluZGV4LCJdKSkiKX12aXNpdFZhcmlhYmxlKGUpe3RoaXMucGFydHMucHVzaCgidiIsZS5pbmRleCl9dmlzaXRMaXRlcmFsKGUpe3RoaXMucGFydHMucHVzaChlLm51bWJlcil9dmlzaXRCaW5hcnlPcGVyYXRpb24oZSl7dGhpcy5wYXJ0cy5wdXNoKCIoIik7ZS5hcmcxLnZpc2l0KHRoaXMpO3RoaXMucGFydHMucHVzaCgiICIsZS5vcCwiICIpO2UuYXJnMi52aXNpdCh0aGlzKTt0aGlzLnBhcnRzLnB1c2goIikiKX12aXNpdFZhcmlhYmxlRGVmaW5pdGlvbihlKXt0aGlzLnBhcnRzLnB1c2goInZhciAiKTtlLnZhcmlhYmxlLnZpc2l0KHRoaXMpO3RoaXMucGFydHMucHVzaCgiID0gIik7ZS5hcmcudmlzaXQodGhpcyk7dGhpcy5wYXJ0cy5wdXNoKCI7Iil9dmlzaXRNaW4oZSl7dGhpcy5wYXJ0cy5wdXNoKCJNYXRoLm1pbigiKTtlLmFyZy52aXNpdCh0aGlzKTt0aGlzLnBhcnRzLnB1c2goIiwgIixlLm1heCwiKSIpfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMucGFydHMuam9pbigiIil9fWZ1bmN0aW9uIGJ1aWxkQWRkT3BlcmF0aW9uKGUsdCl7cmV0dXJuImxpdGVyYWwiPT09dC50eXBlJiYwPT09dC5udW1iZXI/ZToibGl0ZXJhbCI9PT1lLnR5cGUmJjA9PT1lLm51bWJlcj90OiJsaXRlcmFsIj09PXQudHlwZSYmImxpdGVyYWwiPT09ZS50eXBlP25ldyBBc3RMaXRlcmFsKGUubnVtYmVyK3QubnVtYmVyKTpuZXcgQXN0QmluYXJ5T3BlcmF0aW9uKCIrIixlLHQsZS5taW4rdC5taW4sZS5tYXgrdC5tYXgpfWZ1bmN0aW9uIGJ1aWxkTXVsT3BlcmF0aW9uKGUsdCl7aWYoImxpdGVyYWwiPT09dC50eXBlKXtpZigwPT09dC5udW1iZXIpcmV0dXJuIG5ldyBBc3RMaXRlcmFsKDApO2lmKDE9PT10Lm51bWJlcilyZXR1cm4gZTtpZigibGl0ZXJhbCI9PT1lLnR5cGUpcmV0dXJuIG5ldyBBc3RMaXRlcmFsKGUubnVtYmVyKnQubnVtYmVyKX1pZigibGl0ZXJhbCI9PT1lLnR5cGUpe2lmKDA9PT1lLm51bWJlcilyZXR1cm4gbmV3IEFzdExpdGVyYWwoMCk7aWYoMT09PWUubnVtYmVyKXJldHVybiB0fWNvbnN0IGk9TWF0aC5taW4oZS5taW4qdC5taW4sZS5taW4qdC5tYXgsZS5tYXgqdC5taW4sZS5tYXgqdC5tYXgpLGE9TWF0aC5tYXgoZS5taW4qdC5taW4sZS5taW4qdC5tYXgsZS5tYXgqdC5taW4sZS5tYXgqdC5tYXgpO3JldHVybiBuZXcgQXN0QmluYXJ5T3BlcmF0aW9uKCIqIixlLHQsaSxhKX1mdW5jdGlvbiBidWlsZFN1Yk9wZXJhdGlvbihlLHQpe2lmKCJsaXRlcmFsIj09PXQudHlwZSl7aWYoMD09PXQubnVtYmVyKXJldHVybiBlO2lmKCJsaXRlcmFsIj09PWUudHlwZSlyZXR1cm4gbmV3IEFzdExpdGVyYWwoZS5udW1iZXItdC5udW1iZXIpfXJldHVybiJiaW5hcnkiPT09dC50eXBlJiYiLSI9PT10Lm9wJiYibGl0ZXJhbCI9PT1lLnR5cGUmJjE9PT1lLm51bWJlciYmImxpdGVyYWwiPT09dC5hcmcxLnR5cGUmJjE9PT10LmFyZzEubnVtYmVyP3QuYXJnMjpuZXcgQXN0QmluYXJ5T3BlcmF0aW9uKCItIixlLHQsZS5taW4tdC5tYXgsZS5tYXgtdC5taW4pfWZ1bmN0aW9uIGJ1aWxkTWluT3BlcmF0aW9uKGUsdCl7cmV0dXJuIGUubWluPj10P25ldyBBc3RMaXRlcmFsKHQpOmUubWF4PD10P2U6bmV3IEFzdE1pbihlLHQpfWNsYXNzIFBvc3RTY3JpcHRDb21waWxlcntjb21waWxlKGUsdCxpKXtjb25zdCBhPVtdLHM9W10scj10Lmxlbmd0aD4+MSxuPWkubGVuZ3RoPj4xO2xldCBvLGcsYyxoLGwsQyxRLEUsdT0wO2ZvcihsZXQgZT0wO2U8cjtlKyspYS5wdXNoKG5ldyBBc3RBcmd1bWVudChlLHRbMiplXSx0WzIqZSsxXSkpO2ZvcihsZXQgdD0wLGk9ZS5sZW5ndGg7dDxpO3QrKyl7RT1lW3RdO2lmKCJudW1iZXIiIT10eXBlb2YgRSlzd2l0Y2goRSl7Y2FzZSJhZGQiOmlmKGEubGVuZ3RoPDIpcmV0dXJuIG51bGw7aD1hLnBvcCgpO2M9YS5wb3AoKTthLnB1c2goYnVpbGRBZGRPcGVyYXRpb24oYyxoKSk7YnJlYWs7Y2FzZSJjdnIiOmlmKGEubGVuZ3RoPDEpcmV0dXJuIG51bGw7YnJlYWs7Y2FzZSJtdWwiOmlmKGEubGVuZ3RoPDIpcmV0dXJuIG51bGw7aD1hLnBvcCgpO2M9YS5wb3AoKTthLnB1c2goYnVpbGRNdWxPcGVyYXRpb24oYyxoKSk7YnJlYWs7Y2FzZSJzdWIiOmlmKGEubGVuZ3RoPDIpcmV0dXJuIG51bGw7aD1hLnBvcCgpO2M9YS5wb3AoKTthLnB1c2goYnVpbGRTdWJPcGVyYXRpb24oYyxoKSk7YnJlYWs7Y2FzZSJleGNoIjppZihhLmxlbmd0aDwyKXJldHVybiBudWxsO2w9YS5wb3AoKTtDPWEucG9wKCk7YS5wdXNoKGwsQyk7YnJlYWs7Y2FzZSJwb3AiOmlmKGEubGVuZ3RoPDEpcmV0dXJuIG51bGw7YS5wb3AoKTticmVhaztjYXNlImluZGV4IjppZihhLmxlbmd0aDwxKXJldHVybiBudWxsO2M9YS5wb3AoKTtpZigibGl0ZXJhbCIhPT1jLnR5cGUpcmV0dXJuIG51bGw7bz1jLm51bWJlcjtpZihvPDB8fCFOdW1iZXIuaXNJbnRlZ2VyKG8pfHxhLmxlbmd0aDxvKXJldHVybiBudWxsO2w9YVthLmxlbmd0aC1vLTFdO2lmKCJsaXRlcmFsIj09PWwudHlwZXx8InZhciI9PT1sLnR5cGUpe2EucHVzaChsKTticmVha31RPW5ldyBBc3RWYXJpYWJsZSh1KyssbC5taW4sbC5tYXgpO2FbYS5sZW5ndGgtby0xXT1RO2EucHVzaChRKTtzLnB1c2gobmV3IEFzdFZhcmlhYmxlRGVmaW5pdGlvbihRLGwpKTticmVhaztjYXNlImR1cCI6aWYoYS5sZW5ndGg8MSlyZXR1cm4gbnVsbDtpZigibnVtYmVyIj09dHlwZW9mIGVbdCsxXSYmImd0Ij09PWVbdCsyXSYmZVt0KzNdPT09dCs3JiYianoiPT09ZVt0KzRdJiYicG9wIj09PWVbdCs1XSYmZVt0KzZdPT09ZVt0KzFdKXtjPWEucG9wKCk7YS5wdXNoKGJ1aWxkTWluT3BlcmF0aW9uKGMsZVt0KzFdKSk7dCs9NjticmVha31sPWEuYXQoLTEpO2lmKCJsaXRlcmFsIj09PWwudHlwZXx8InZhciI9PT1sLnR5cGUpe2EucHVzaChsKTticmVha31RPW5ldyBBc3RWYXJpYWJsZSh1KyssbC5taW4sbC5tYXgpO2FbYS5sZW5ndGgtMV09UTthLnB1c2goUSk7cy5wdXNoKG5ldyBBc3RWYXJpYWJsZURlZmluaXRpb24oUSxsKSk7YnJlYWs7Y2FzZSJyb2xsIjppZihhLmxlbmd0aDwyKXJldHVybiBudWxsO2g9YS5wb3AoKTtjPWEucG9wKCk7aWYoImxpdGVyYWwiIT09aC50eXBlfHwibGl0ZXJhbCIhPT1jLnR5cGUpcmV0dXJuIG51bGw7Zz1oLm51bWJlcjtvPWMubnVtYmVyO2lmKG88PTB8fCFOdW1iZXIuaXNJbnRlZ2VyKG8pfHwhTnVtYmVyLmlzSW50ZWdlcihnKXx8YS5sZW5ndGg8bylyZXR1cm4gbnVsbDtnPShnJW8rbyklbztpZigwPT09ZylicmVhazthLnB1c2goLi4uYS5zcGxpY2UoYS5sZW5ndGgtbyxvLWcpKTticmVhaztkZWZhdWx0OnJldHVybiBudWxsfWVsc2UgYS5wdXNoKG5ldyBBc3RMaXRlcmFsKEUpKX1pZihhLmxlbmd0aCE9PW4pcmV0dXJuIG51bGw7Y29uc3QgZD1bXTtmb3IoY29uc3QgZSBvZiBzKXtjb25zdCB0PW5ldyBFeHByZXNzaW9uQnVpbGRlclZpc2l0b3I7ZS52aXNpdCh0KTtkLnB1c2godC50b1N0cmluZygpKX1mb3IobGV0IGU9MCx0PWEubGVuZ3RoO2U8dDtlKyspe2NvbnN0IHQ9YVtlXSxzPW5ldyBFeHByZXNzaW9uQnVpbGRlclZpc2l0b3I7dC52aXNpdChzKTtjb25zdCByPWlbMiplXSxuPWlbMiplKzFdLG89W3MudG9TdHJpbmcoKV07aWYocj50Lm1pbil7by51bnNoaWZ0KCJNYXRoLm1heCgiLHIsIiwgIik7by5wdXNoKCIpIil9aWYobjx0Lm1heCl7by51bnNoaWZ0KCJNYXRoLm1pbigiLG4sIiwgIik7by5wdXNoKCIpIil9by51bnNoaWZ0KCJkZXN0W2Rlc3RPZmZzZXQgKyAiLGUsIl0gPSAiKTtvLnB1c2goIjsiKTtkLnB1c2goby5qb2luKCIiKSl9cmV0dXJuIGQuam9pbigiXG4iKX19Y29uc3QgaHM9WyJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJTIiwiQiIsIlMiLCJXUyIsIkIiLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQiIsIkIiLCJCIiwiUyIsIldTIiwiT04iLCJPTiIsIkVUIiwiRVQiLCJFVCIsIk9OIiwiT04iLCJPTiIsIk9OIiwiT04iLCJFUyIsIkNTIiwiRVMiLCJDUyIsIkNTIiwiRU4iLCJFTiIsIkVOIiwiRU4iLCJFTiIsIkVOIiwiRU4iLCJFTiIsIkVOIiwiRU4iLCJDUyIsIk9OIiwiT04iLCJPTiIsIk9OIiwiT04iLCJPTiIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiT04iLCJPTiIsIk9OIiwiT04iLCJPTiIsIk9OIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJPTiIsIk9OIiwiT04iLCJPTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkIiLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQk4iLCJCTiIsIkJOIiwiQ1MiLCJPTiIsIkVUIiwiRVQiLCJFVCIsIkVUIiwiT04iLCJPTiIsIk9OIiwiT04iLCJMIiwiT04iLCJPTiIsIkJOIiwiT04iLCJPTiIsIkVUIiwiRVQiLCJFTiIsIkVOIiwiT04iLCJMIiwiT04iLCJPTiIsIk9OIiwiRU4iLCJMIiwiT04iLCJPTiIsIk9OIiwiT04iLCJPTiIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiT04iLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiT04iLCJMIiwiTCIsIkwiLCJMIiwiTCIsIkwiLCJMIiwiTCJdLGxzPVsiQU4iLCJBTiIsIkFOIiwiQU4iLCJBTiIsIkFOIiwiT04iLCJPTiIsIkFMIiwiRVQiLCJFVCIsIkFMIiwiQ1MiLCJBTCIsIk9OIiwiT04iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJOU00iLCJBTCIsIkFMIiwiIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiQU4iLCJBTiIsIkFOIiwiQU4iLCJBTiIsIkFOIiwiQU4iLCJBTiIsIkFOIiwiQU4iLCJFVCIsIkFOIiwiQU4iLCJBTCIsIkFMIiwiQUwiLCJOU00iLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiTlNNIiwiQU4iLCJPTiIsIk5TTSIsIk5TTSIsIk5TTSIsIk5TTSIsIk5TTSIsIk5TTSIsIkFMIiwiQUwiLCJOU00iLCJOU00iLCJPTiIsIk5TTSIsIk5TTSIsIk5TTSIsIk5TTSIsIkFMIiwiQUwiLCJFTiIsIkVOIiwiRU4iLCJFTiIsIkVOIiwiRU4iLCJFTiIsIkVOIiwiRU4iLCJFTiIsIkFMIiwiQUwiLCJBTCIsIkFMIiwiQUwiLCJBTCJdO2Z1bmN0aW9uIGlzT2RkKGUpe3JldHVybiEhKDEmZSl9ZnVuY3Rpb24gaXNFdmVuKGUpe3JldHVybiEoMSZlKX1mdW5jdGlvbiBmaW5kVW5lcXVhbChlLHQsaSl7bGV0IGEscztmb3IoYT10LHM9ZS5sZW5ndGg7YTxzOysrYSlpZihlW2FdIT09aSlyZXR1cm4gYTtyZXR1cm4gYX1mdW5jdGlvbiBzZXRWYWx1ZXMoZSx0LGksYSl7Zm9yKGxldCBzPXQ7czxpOysrcyllW3NdPWF9ZnVuY3Rpb24gcmV2ZXJzZVZhbHVlcyhlLHQsaSl7Zm9yKGxldCBhPXQscz1pLTE7YTxzOysrYSwtLXMpe2NvbnN0IHQ9ZVthXTtlW2FdPWVbc107ZVtzXT10fX1mdW5jdGlvbiBjcmVhdGVCaWRpVGV4dChlLHQsaT0hMSl7bGV0IGE9Imx0ciI7aT9hPSJ0dGIiOnR8fChhPSJydGwiKTtyZXR1cm57c3RyOmUsZGlyOmF9fWNvbnN0IENzPVtdLEJzPVtdO2Z1bmN0aW9uIGJpZGkoZSx0PS0xLGk9ITEpe2xldCBhPSEwO2NvbnN0IHM9ZS5sZW5ndGg7aWYoMD09PXN8fGkpcmV0dXJuIGNyZWF0ZUJpZGlUZXh0KGUsYSxpKTtDcy5sZW5ndGg9cztCcy5sZW5ndGg9cztsZXQgcixuLG89MDtmb3Iocj0wO3I8czsrK3Ipe0NzW3JdPWUuY2hhckF0KHIpO2NvbnN0IHQ9ZS5jaGFyQ29kZUF0KHIpO2xldCBpPSJMIjtpZih0PD0yNTUpaT1oc1t0XTtlbHNlIGlmKDE0MjQ8PXQmJnQ8PTE1MjQpaT0iUiI7ZWxzZSBpZigxNTM2PD10JiZ0PD0xNzkxKXtpPWxzWzI1NSZ0XTtpfHx3YXJuKCJCaWRpOiBpbnZhbGlkIFVuaWNvZGUgY2hhcmFjdGVyICIrdC50b1N0cmluZygxNikpfWVsc2UoMTc5Mjw9dCYmdDw9MjIyMHx8NjQzMzY8PXQmJnQ8PTY1MDIzfHw2NTEzNjw9dCYmdDw9NjUyNzkpJiYoaT0iQUwiKTsiUiIhPT1pJiYiQUwiIT09aSYmIkFOIiE9PWl8fG8rKztCc1tyXT1pfWlmKDA9PT1vKXthPSEwO3JldHVybiBjcmVhdGVCaWRpVGV4dChlLGEpfWlmKC0xPT09dClpZihvL3M8LjMmJnM+NCl7YT0hMDt0PTB9ZWxzZXthPSExO3Q9MX1jb25zdCBnPVtdO2ZvcihyPTA7cjxzOysrcilnW3JdPXQ7Y29uc3QgYz1pc09kZCh0KT8iUiI6IkwiLGg9YyxsPWg7bGV0IEMsUT1oO2ZvcihyPTA7cjxzOysrcikiTlNNIj09PUJzW3JdP0JzW3JdPVE6UT1Cc1tyXTtRPWg7Zm9yKHI9MDtyPHM7KytyKXtDPUJzW3JdOyJFTiI9PT1DP0JzW3JdPSJBTCI9PT1RPyJBTiI6IkVOIjoiUiIhPT1DJiYiTCIhPT1DJiYiQUwiIT09Q3x8KFE9Qyl9Zm9yKHI9MDtyPHM7KytyKXtDPUJzW3JdOyJBTCI9PT1DJiYoQnNbcl09IlIiKX1mb3Iocj0xO3I8cy0xOysrcil7IkVTIj09PUJzW3JdJiYiRU4iPT09QnNbci0xXSYmIkVOIj09PUJzW3IrMV0mJihCc1tyXT0iRU4iKTsiQ1MiIT09QnNbcl18fCJFTiIhPT1Cc1tyLTFdJiYiQU4iIT09QnNbci0xXXx8QnNbcisxXSE9PUJzW3ItMV18fChCc1tyXT1Cc1tyLTFdKX1mb3Iocj0wO3I8czsrK3IpaWYoIkVOIj09PUJzW3JdKXtmb3IobGV0IGU9ci0xO2U+PTAmJiJFVCI9PT1Cc1tlXTstLWUpQnNbZV09IkVOIjtmb3IobGV0IGU9cisxO2U8cyYmIkVUIj09PUJzW2VdOysrZSlCc1tlXT0iRU4ifWZvcihyPTA7cjxzOysrcil7Qz1Cc1tyXTsiV1MiIT09QyYmIkVTIiE9PUMmJiJFVCIhPT1DJiYiQ1MiIT09Q3x8KEJzW3JdPSJPTiIpfVE9aDtmb3Iocj0wO3I8czsrK3Ipe0M9QnNbcl07IkVOIj09PUM/QnNbcl09IkwiPT09UT8iTCI6IkVOIjoiUiIhPT1DJiYiTCIhPT1DfHwoUT1DKX1mb3Iocj0wO3I8czsrK3IpaWYoIk9OIj09PUJzW3JdKXtjb25zdCBlPWZpbmRVbmVxdWFsKEJzLHIrMSwiT04iKTtsZXQgdD1oO3I+MCYmKHQ9QnNbci0xXSk7bGV0IGk9bDtlKzE8cyYmKGk9QnNbZSsxXSk7IkwiIT09dCYmKHQ9IlIiKTsiTCIhPT1pJiYoaT0iUiIpO3Q9PT1pJiZzZXRWYWx1ZXMoQnMscixlLHQpO3I9ZS0xfWZvcihyPTA7cjxzOysrcikiT04iPT09QnNbcl0mJihCc1tyXT1jKTtmb3Iocj0wO3I8czsrK3Ipe0M9QnNbcl07aXNFdmVuKGdbcl0pPyJSIj09PUM/Z1tyXSs9MToiQU4iIT09QyYmIkVOIiE9PUN8fChnW3JdKz0yKToiTCIhPT1DJiYiQU4iIT09QyYmIkVOIiE9PUN8fChnW3JdKz0xKX1sZXQgRSx1PS0xLGQ9OTk7Zm9yKHI9MCxuPWcubGVuZ3RoO3I8bjsrK3Ipe0U9Z1tyXTt1PEUmJih1PUUpO2Q+RSYmaXNPZGQoRSkmJihkPUUpfWZvcihFPXU7RT49ZDstLUUpe2xldCBlPS0xO2ZvcihyPTAsbj1nLmxlbmd0aDtyPG47KytyKWlmKGdbcl08RSl7aWYoZT49MCl7cmV2ZXJzZVZhbHVlcyhDcyxlLHIpO2U9LTF9fWVsc2UgZTwwJiYoZT1yKTtlPj0wJiZyZXZlcnNlVmFsdWVzKENzLGUsZy5sZW5ndGgpfWZvcihyPTAsbj1Dcy5sZW5ndGg7cjxuOysrcil7Y29uc3QgZT1Dc1tyXTsiPCIhPT1lJiYiPiIhPT1lfHwoQ3Nbcl09IiIpfXJldHVybiBjcmVhdGVCaWRpVGV4dChDcy5qb2luKCIiKSxhKX1jb25zdCBRcz17c3R5bGU6Im5vcm1hbCIsd2VpZ2h0OiJub3JtYWwifSxFcz17c3R5bGU6Im5vcm1hbCIsd2VpZ2h0OiJib2xkIn0sdXM9e3N0eWxlOiJpdGFsaWMiLHdlaWdodDoibm9ybWFsIn0sZHM9e3N0eWxlOiJpdGFsaWMiLHdlaWdodDoiYm9sZCJ9LGZzPW5ldyBNYXAoW1siVGltZXMtUm9tYW4iLHtsb2NhbDpbIlRpbWVzIE5ldyBSb21hbiIsIlRpbWVzLVJvbWFuIiwiVGltZXMiLCJMaWJlcmF0aW9uIFNlcmlmIiwiTmltYnVzIFJvbWFuIiwiTmltYnVzIFJvbWFuIEwiLCJUaW5vcyIsIlRob3JuZGFsZSIsIlRlWCBHeXJlIFRlcm1lcyIsIkZyZWVTZXJpZiIsIkxpbnV4IExpYmVydGluZSBPIiwiTGliZXJ0aW51cyBTZXJpZiIsIkRlamFWdSBTZXJpZiIsIkJpdHN0cmVhbSBWZXJhIFNlcmlmIiwiVWJ1bnR1Il0sc3R5bGU6UXMsdWx0aW1hdGU6InNlcmlmIn1dLFsiVGltZXMtQm9sZCIse2FsaWFzOiJUaW1lcy1Sb21hbiIsc3R5bGU6RXMsdWx0aW1hdGU6InNlcmlmIn1dLFsiVGltZXMtSXRhbGljIix7YWxpYXM6IlRpbWVzLVJvbWFuIixzdHlsZTp1cyx1bHRpbWF0ZToic2VyaWYifV0sWyJUaW1lcy1Cb2xkSXRhbGljIix7YWxpYXM6IlRpbWVzLVJvbWFuIixzdHlsZTpkcyx1bHRpbWF0ZToic2VyaWYifV0sWyJIZWx2ZXRpY2EiLHtsb2NhbDpbIkhlbHZldGljYSIsIkhlbHZldGljYSBOZXVlIiwiQXJpYWwiLCJBcmlhbCBOb3ZhIiwiTGliZXJhdGlvbiBTYW5zIiwiQXJpbW8iLCJOaW1idXMgU2FucyIsIk5pbWJ1cyBTYW5zIEwiLCJBMDMwIiwiVGVYIEd5cmUgSGVyb3MiLCJGcmVlU2FucyIsIkRlamFWdSBTYW5zIiwiQWxiYW55IiwiQml0c3RyZWFtIFZlcmEgU2FucyIsIkFyaWFsIFVuaWNvZGUgTVMiLCJNaWNyb3NvZnQgU2FucyBTZXJpZiIsIkFwcGxlIFN5bWJvbHMiLCJDYW50YXJlbGwiXSxwYXRoOiJMaWJlcmF0aW9uU2Fucy1SZWd1bGFyLnR0ZiIsc3R5bGU6UXMsdWx0aW1hdGU6InNhbnMtc2VyaWYifV0sWyJIZWx2ZXRpY2EtQm9sZCIse2FsaWFzOiJIZWx2ZXRpY2EiLHBhdGg6IkxpYmVyYXRpb25TYW5zLUJvbGQudHRmIixzdHlsZTpFcyx1bHRpbWF0ZToic2Fucy1zZXJpZiJ9XSxbIkhlbHZldGljYS1PYmxpcXVlIix7YWxpYXM6IkhlbHZldGljYSIscGF0aDoiTGliZXJhdGlvblNhbnMtSXRhbGljLnR0ZiIsc3R5bGU6dXMsdWx0aW1hdGU6InNhbnMtc2VyaWYifV0sWyJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUiLHthbGlhczoiSGVsdmV0aWNhIixwYXRoOiJMaWJlcmF0aW9uU2Fucy1Cb2xkSXRhbGljLnR0ZiIsc3R5bGU6ZHMsdWx0aW1hdGU6InNhbnMtc2VyaWYifV0sWyJDb3VyaWVyIix7bG9jYWw6WyJDb3VyaWVyIiwiQ291cmllciBOZXciLCJMaWJlcmF0aW9uIE1vbm8iLCJOaW1idXMgTW9ubyIsIk5pbWJ1cyBNb25vIEwiLCJDb3VzaW5lIiwiQ3VtYmVybGFuZCIsIlRlWCBHeXJlIEN1cnNvciIsIkZyZWVNb25vIiwiTGludXggTGliZXJ0aW5lIE1vbm8gTyIsIkxpYmVydGludXMgTW9ubyJdLHN0eWxlOlFzLHVsdGltYXRlOiJtb25vc3BhY2UifV0sWyJDb3VyaWVyLUJvbGQiLHthbGlhczoiQ291cmllciIsc3R5bGU6RXMsdWx0aW1hdGU6Im1vbm9zcGFjZSJ9XSxbIkNvdXJpZXItT2JsaXF1ZSIse2FsaWFzOiJDb3VyaWVyIixzdHlsZTp1cyx1bHRpbWF0ZToibW9ub3NwYWNlIn1dLFsiQ291cmllci1Cb2xkT2JsaXF1ZSIse2FsaWFzOiJDb3VyaWVyIixzdHlsZTpkcyx1bHRpbWF0ZToibW9ub3NwYWNlIn1dLFsiQXJpYWxCbGFjayIse2xvY2FsOlsiQXJpYWwgQmxhY2siXSxzdHlsZTp7c3R5bGU6Im5vcm1hbCIsd2VpZ2h0OiI5MDAifSxmYWxsYmFjazoiSGVsdmV0aWNhLUJvbGQifV0sWyJBcmlhbEJsYWNrLUJvbGQiLHthbGlhczoiQXJpYWxCbGFjayJ9XSxbIkFyaWFsQmxhY2stSXRhbGljIix7YWxpYXM6IkFyaWFsQmxhY2siLHN0eWxlOntzdHlsZToiaXRhbGljIix3ZWlnaHQ6IjkwMCJ9LGZhbGxiYWNrOiJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUifV0sWyJBcmlhbEJsYWNrLUJvbGRJdGFsaWMiLHthbGlhczoiQXJpYWxCbGFjay1JdGFsaWMifV0sWyJBcmlhbE5hcnJvdyIse2xvY2FsOlsiQXJpYWwgTmFycm93IiwiTGliZXJhdGlvbiBTYW5zIE5hcnJvdyIsIkhlbHZldGljYSBDb25kZW5zZWQiLCJOaW1idXMgU2FucyBOYXJyb3ciLCJUZVggR3lyZSBIZXJvcyBDbiJdLHN0eWxlOlFzLGZhbGxiYWNrOiJIZWx2ZXRpY2EifV0sWyJBcmlhbE5hcnJvdy1Cb2xkIix7YWxpYXM6IkFyaWFsTmFycm93IixzdHlsZTpFcyxmYWxsYmFjazoiSGVsdmV0aWNhLUJvbGQifV0sWyJBcmlhbE5hcnJvdy1JdGFsaWMiLHthbGlhczoiQXJpYWxOYXJyb3ciLHN0eWxlOnVzLGZhbGxiYWNrOiJIZWx2ZXRpY2EtT2JsaXF1ZSJ9XSxbIkFyaWFsTmFycm93LUJvbGRJdGFsaWMiLHthbGlhczoiQXJpYWxOYXJyb3ciLHN0eWxlOmRzLGZhbGxiYWNrOiJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUifV0sWyJDYWxpYnJpIix7bG9jYWw6WyJDYWxpYnJpIiwiQ2FybGl0byJdLHN0eWxlOlFzLGZhbGxiYWNrOiJIZWx2ZXRpY2EifV0sWyJDYWxpYnJpLUJvbGQiLHthbGlhczoiQ2FsaWJyaSIsc3R5bGU6RXMsZmFsbGJhY2s6IkhlbHZldGljYS1Cb2xkIn1dLFsiQ2FsaWJyaS1JdGFsaWMiLHthbGlhczoiQ2FsaWJyaSIsc3R5bGU6dXMsZmFsbGJhY2s6IkhlbHZldGljYS1PYmxpcXVlIn1dLFsiQ2FsaWJyaS1Cb2xkSXRhbGljIix7YWxpYXM6IkNhbGlicmkiLHN0eWxlOmRzLGZhbGxiYWNrOiJIZWx2ZXRpY2EtQm9sZE9ibGlxdWUifV0sWyJXaW5nZGluZ3MiLHtsb2NhbDpbIldpbmdkaW5ncyIsIlVSVyBEaW5nYmF0cyJdLHN0eWxlOlFzfV0sWyJXaW5nZGluZ3MtUmVndWxhciIse2FsaWFzOiJXaW5nZGluZ3MifV0sWyJXaW5nZGluZ3MtQm9sZCIse2FsaWFzOiJXaW5nZGluZ3MifV1dKSxwcz1uZXcgTWFwKFtbIkFyaWFsLUJsYWNrIiwiQXJpYWxCbGFjayJdXSk7ZnVuY3Rpb24gZ2V0RmFtaWx5TmFtZShlKXtjb25zdCB0PW5ldyBTZXQoWyJ0aGluIiwiZXh0cmFsaWdodCIsInVsdHJhbGlnaHQiLCJkZW1pbGlnaHQiLCJzZW1pbGlnaHQiLCJsaWdodCIsImJvb2siLCJyZWd1bGFyIiwibm9ybWFsIiwibWVkaXVtIiwiZGVtaWJvbGQiLCJzZW1pYm9sZCIsImJvbGQiLCJleHRyYWJvbGQiLCJ1bHRyYWJvbGQiLCJibGFjayIsImhlYXZ5IiwiZXh0cmFibGFjayIsInVsdHJhYmxhY2siLCJyb21hbiIsIml0YWxpYyIsIm9ibGlxdWUiLCJ1bHRyYWNvbmRlbnNlZCIsImV4dHJhY29uZGVuc2VkIiwiY29uZGVuc2VkIiwic2VtaWNvbmRlbnNlZCIsIm5vcm1hbCIsInNlbWlleHBhbmRlZCIsImV4cGFuZGVkIiwiZXh0cmFleHBhbmRlZCIsInVsdHJhZXhwYW5kZWQiLCJib2xkaXRhbGljIl0pO3JldHVybiBlLnNwbGl0KC9bLSAsK10rL2cpLmZpbHRlcigoZT0+IXQuaGFzKGUudG9Mb3dlckNhc2UoKSkpKS5qb2luKCIgIil9ZnVuY3Rpb24gZ2VuZXJhdGVGb250KHthbGlhczplLGxvY2FsOnQscGF0aDppLGZhbGxiYWNrOmEsc3R5bGU6cyx1bHRpbWF0ZTpyfSxuLG8sZz0hMCxjPSEwLGg9IiIpe2NvbnN0IGw9e3N0eWxlOm51bGwsdWx0aW1hdGU6bnVsbH07aWYodCl7Y29uc3QgZT1oP2AgJHtofWA6IiI7Zm9yKGNvbnN0IGkgb2YgdCluLnB1c2goYGxvY2FsKCR7aX0ke2V9KWApfWlmKGUpe2NvbnN0IHQ9ZnMuZ2V0KGUpLHI9aHx8ZnVuY3Rpb24gZ2V0U3R5bGVUb0FwcGVuZChlKXtzd2l0Y2goZSl7Y2FzZSBFczpyZXR1cm4iQm9sZCI7Y2FzZSB1czpyZXR1cm4iSXRhbGljIjtjYXNlIGRzOnJldHVybiJCb2xkIEl0YWxpYyI7ZGVmYXVsdDppZigiYm9sZCI9PT1lPy53ZWlnaHQpcmV0dXJuIkJvbGQiO2lmKCJpdGFsaWMiPT09ZT8uc3R5bGUpcmV0dXJuIkl0YWxpYyJ9cmV0dXJuIiJ9KHMpO09iamVjdC5hc3NpZ24obCxnZW5lcmF0ZUZvbnQodCxuLG8sZyYmIWEsYyYmIWkscikpfXMmJihsLnN0eWxlPXMpO3ImJihsLnVsdGltYXRlPXIpO2lmKGcmJmEpe2NvbnN0IGU9ZnMuZ2V0KGEpLHt1bHRpbWF0ZTp0fT1nZW5lcmF0ZUZvbnQoZSxuLG8sZyxjJiYhaSxoKTtsLnVsdGltYXRlfHw9dH1jJiZpJiZvJiZuLnB1c2goYHVybCgke299JHtpfSlgKTtyZXR1cm4gbH1mdW5jdGlvbiBnZXRGb250U3Vic3RpdHV0aW9uKGUsdCxpLGEscyxyKXtpZihhLnN0YXJ0c1dpdGgoIkludmFsaWRQREZqc0ZvbnRfIikpcmV0dXJuIG51bGw7IlRydWVUeXBlIiE9PXImJiJUeXBlMSIhPT1yfHwhL15bQS1aXXs2fVwrLy50ZXN0KGEpfHwoYT1hLnNsaWNlKDcpKTtjb25zdCBuPWE9bm9ybWFsaXplRm9udE5hbWUoYSk7bGV0IG89ZS5nZXQobik7aWYobylyZXR1cm4gbztsZXQgZz1mcy5nZXQoYSk7aWYoIWcpZm9yKGNvbnN0W2UsdF1vZiBwcylpZihhLnN0YXJ0c1dpdGgoZSkpe2E9YCR7dH0ke2Euc3Vic3RyaW5nKGUubGVuZ3RoKX1gO2c9ZnMuZ2V0KGEpO2JyZWFrfWxldCBjPSExO2lmKCFnKXtnPWZzLmdldChzKTtjPSEwfWNvbnN0IGg9YCR7dC5nZXREb2NJZCgpfV9zJHt0LmNyZWF0ZUZvbnRJZCgpfWA7aWYoIWcpe2lmKCF2YWxpZGF0ZUZvbnROYW1lKGEpKXt3YXJuKGBDYW5ub3Qgc3Vic3RpdHV0ZSB0aGUgZm9udCBiZWNhdXNlIG9mIGl0cyBuYW1lOiAke2F9YCk7ZS5zZXQobixudWxsKTtyZXR1cm4gbnVsbH1jb25zdCB0PS9ib2xkL2dpLnRlc3QoYSksaT0vb2JsaXF1ZXxpdGFsaWMvZ2kudGVzdChhKSxzPXQmJmkmJmRzfHx0JiZFc3x8aSYmdXN8fFFzO289e2NzczpgIiR7Z2V0RmFtaWx5TmFtZShhKX0iLCR7aH1gLGd1ZXNzRmFsbGJhY2s6ITAsbG9hZGVkTmFtZTpoLGJhc2VGb250TmFtZTphLHNyYzpgbG9jYWwoJHthfSlgLHN0eWxlOnN9O2Uuc2V0KG4sbyk7cmV0dXJuIG99Y29uc3QgbD1bXTtjJiZ2YWxpZGF0ZUZvbnROYW1lKGEpJiZsLnB1c2goYGxvY2FsKCR7YX0pYCk7Y29uc3R7c3R5bGU6Qyx1bHRpbWF0ZTpRfT1nZW5lcmF0ZUZvbnQoZyxsLGkpLEU9bnVsbD09PVEsdT1FPyIiOmAsJHtRfWA7bz17Y3NzOmAiJHtnZXRGYW1pbHlOYW1lKGEpfSIsJHtofSR7dX1gLGd1ZXNzRmFsbGJhY2s6RSxsb2FkZWROYW1lOmgsYmFzZUZvbnROYW1lOmEsc3JjOmwuam9pbigiLCIpLHN0eWxlOkN9O2Uuc2V0KG4sbyk7cmV0dXJuIG99Y2xhc3MgSW1hZ2VSZXNpemVye2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5faW1nRGF0YT1lO3RoaXMuX2lzTWFzaz10fXN0YXRpYyBuZWVkc1RvQmVSZXNpemVkKGUsdCl7aWYoZTw9dGhpcy5fZ29vZFNxdWFyZUxlbmd0aCYmdDw9dGhpcy5fZ29vZFNxdWFyZUxlbmd0aClyZXR1cm4hMTtjb25zdHtNQVhfRElNOml9PXRoaXM7aWYoZT5pfHx0PmkpcmV0dXJuITA7Y29uc3QgYT1lKnQ7aWYodGhpcy5faGFzTWF4QXJlYSlyZXR1cm4gYT50aGlzLk1BWF9BUkVBO2lmKGE8dGhpcy5fZ29vZFNxdWFyZUxlbmd0aCoqMilyZXR1cm4hMTtpZih0aGlzLl9hcmVHb29kRGltcyhlLHQpKXt0aGlzLl9nb29kU3F1YXJlTGVuZ3RoPU1hdGgubWF4KHRoaXMuX2dvb2RTcXVhcmVMZW5ndGgsTWF0aC5mbG9vcihNYXRoLnNxcnQoZSp0KSkpO3JldHVybiExfXRoaXMuX2dvb2RTcXVhcmVMZW5ndGg9dGhpcy5fZ3Vlc3NNYXgodGhpcy5fZ29vZFNxdWFyZUxlbmd0aCxpLDEyOCwwKTtyZXR1cm4gYT4odGhpcy5NQVhfQVJFQT10aGlzLl9nb29kU3F1YXJlTGVuZ3RoKioyKX1zdGF0aWMgZ2V0IE1BWF9ESU0oKXtyZXR1cm4gc2hhZG93KHRoaXMsIk1BWF9ESU0iLHRoaXMuX2d1ZXNzTWF4KDIwNDgsNjU1MzcsMCwxKSl9c3RhdGljIGdldCBNQVhfQVJFQSgpe3RoaXMuX2hhc01heEFyZWE9ITA7cmV0dXJuIHNoYWRvdyh0aGlzLCJNQVhfQVJFQSIsdGhpcy5fZ3Vlc3NNYXgoSW1hZ2VSZXNpemVyLl9nb29kU3F1YXJlTGVuZ3RoLHRoaXMuTUFYX0RJTSwxMjgsMCkqKjIpfXN0YXRpYyBzZXQgTUFYX0FSRUEoZSl7aWYoZT49MCl7dGhpcy5faGFzTWF4QXJlYT0hMDtzaGFkb3codGhpcywiTUFYX0FSRUEiLGUpfX1zdGF0aWMgc2V0TWF4QXJlYShlKXt0aGlzLl9oYXNNYXhBcmVhfHwodGhpcy5NQVhfQVJFQT1lPj4yKX1zdGF0aWMgX2FyZUdvb2REaW1zKGUsdCl7dHJ5e2NvbnN0IGk9bmV3IE9mZnNjcmVlbkNhbnZhcyhlLHQpLGE9aS5nZXRDb250ZXh0KCIyZCIpO2EuZmlsbFJlY3QoMCwwLDEsMSk7Y29uc3Qgcz1hLmdldEltYWdlRGF0YSgwLDAsMSwxKS5kYXRhWzNdO2kud2lkdGg9aS5oZWlnaHQ9MTtyZXR1cm4gMCE9PXN9Y2F0Y2h7cmV0dXJuITF9fXN0YXRpYyBfZ3Vlc3NNYXgoZSx0LGksYSl7Zm9yKDtlK2krMTx0Oyl7Y29uc3QgaT1NYXRoLmZsb29yKChlK3QpLzIpLHM9YXx8aTt0aGlzLl9hcmVHb29kRGltcyhpLHMpP2U9aTp0PWl9cmV0dXJuIGV9c3RhdGljIGFzeW5jIGNyZWF0ZUltYWdlKGUsdD0hMSl7cmV0dXJuIG5ldyBJbWFnZVJlc2l6ZXIoZSx0KS5fY3JlYXRlSW1hZ2UoKX1hc3luYyBfY3JlYXRlSW1hZ2UoKXtjb25zdCBlPXRoaXMuX2VuY29kZUJNUCgpLHQ9bmV3IEJsb2IoW2UuYnVmZmVyXSx7dHlwZToiaW1hZ2UvYm1wIn0pLGk9Y3JlYXRlSW1hZ2VCaXRtYXAodCkse01BWF9BUkVBOmEsTUFYX0RJTTpzfT1JbWFnZVJlc2l6ZXIse19pbWdEYXRhOnJ9PXRoaXMse3dpZHRoOm4saGVpZ2h0Om99PXIsZz1NYXRoLm1heChuL3Msby9zLE1hdGguc3FydChuKm8vYSkpLGM9TWF0aC5tYXgoZywyKSxoPU1hdGgucm91bmQoMTAqKGcrMS4yNSkpLzEwL2MsbD1NYXRoLmZsb29yKE1hdGgubG9nMihoKSksQz1uZXcgQXJyYXkobCsyKS5maWxsKDIpO0NbMF09YztDLnNwbGljZSgtMSwxLGgvKDE8PGwpKTtsZXQgUT1uLEU9byx1PWF3YWl0IGk7Zm9yKGNvbnN0IGUgb2YgQyl7Y29uc3QgdD1RLGk9RTtRPU1hdGguZmxvb3IoUS9lKS0xO0U9TWF0aC5mbG9vcihFL2UpLTE7Y29uc3QgYT1uZXcgT2Zmc2NyZWVuQ2FudmFzKFEsRSk7YS5nZXRDb250ZXh0KCIyZCIpLmRyYXdJbWFnZSh1LDAsMCx0LGksMCwwLFEsRSk7dT1hLnRyYW5zZmVyVG9JbWFnZUJpdG1hcCgpfXIuZGF0YT1udWxsO3IuYml0bWFwPXU7ci53aWR0aD1RO3IuaGVpZ2h0PUU7cmV0dXJuIHJ9X2VuY29kZUJNUCgpe2NvbnN0e3dpZHRoOmUsaGVpZ2h0OnQsa2luZDppfT10aGlzLl9pbWdEYXRhO2xldCBhLHM9dGhpcy5faW1nRGF0YS5kYXRhLHI9bmV3IFVpbnQ4QXJyYXkoMCksbj1yLG89MDtzd2l0Y2goaSl7Y2FzZSBiOnthPTE7cj1uZXcgVWludDhBcnJheSh0aGlzLl9pc01hc2s/WzI1NSwyNTUsMjU1LDI1NSwwLDAsMCwwXTpbMCwwLDAsMCwyNTUsMjU1LDI1NSwyNTVdKTtjb25zdCBpPWUrNz4+MyxuPWkrMyYtNDtpZihpIT09bil7Y29uc3QgZT1uZXcgVWludDhBcnJheShuKnQpO2xldCBhPTA7Zm9yKGxldCByPTAsbz10Kmk7cjxvO3IrPWksYSs9billLnNldChzLnN1YmFycmF5KHIscitpKSxhKTtzPWV9YnJlYWt9Y2FzZSBEOmE9MjQ7aWYoMyZlKXtjb25zdCBpPTMqZSxhPWkrMyYtNCxyPWEtaSxuPW5ldyBVaW50OEFycmF5KGEqdCk7bGV0IG89MDtmb3IobGV0IGU9MCxhPXQqaTtlPGE7ZSs9aSl7Y29uc3QgdD1zLnN1YmFycmF5KGUsZStpKTtmb3IobGV0IGU9MDtlPGk7ZSs9Myl7bltvKytdPXRbZSsyXTtuW28rK109dFtlKzFdO25bbysrXT10W2VdfW8rPXJ9cz1ufWVsc2UgZm9yKGxldCBlPTAsdD1zLmxlbmd0aDtlPHQ7ZSs9Myl7Y29uc3QgdD1zW2VdO3NbZV09c1tlKzJdO3NbZSsyXT10fWJyZWFrO2Nhc2UgRjphPTMyO289MztuPW5ldyBVaW50OEFycmF5KDY4KTtjb25zdCBpPW5ldyBEYXRhVmlldyhuLmJ1ZmZlcik7aWYoRmVhdHVyZVRlc3QuaXNMaXR0bGVFbmRpYW4pe2kuc2V0VWludDMyKDAsMjU1LCEwKTtpLnNldFVpbnQzMig0LDY1MjgwLCEwKTtpLnNldFVpbnQzMig4LDE2NzExNjgwLCEwKTtpLnNldFVpbnQzMigxMiw0Mjc4MTkwMDgwLCEwKX1lbHNle2kuc2V0VWludDMyKDAsNDI3ODE5MDA4MCwhMCk7aS5zZXRVaW50MzIoNCwxNjcxMTY4MCwhMCk7aS5zZXRVaW50MzIoOCw2NTI4MCwhMCk7aS5zZXRVaW50MzIoMTIsMjU1LCEwKX1icmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiaW52YWxpZCBmb3JtYXQiKX1sZXQgZz0wO2NvbnN0IGM9NDArbi5sZW5ndGgsaD0xNCtjK3IubGVuZ3RoK3MubGVuZ3RoLGw9bmV3IFVpbnQ4QXJyYXkoaCksQz1uZXcgRGF0YVZpZXcobC5idWZmZXIpO0Muc2V0VWludDE2KGcsMTk3NzgsITApO2crPTI7Qy5zZXRVaW50MzIoZyxoLCEwKTtnKz00O0Muc2V0VWludDMyKGcsMCwhMCk7Zys9NDtDLnNldFVpbnQzMihnLDE0K2Mrci5sZW5ndGgsITApO2crPTQ7Qy5zZXRVaW50MzIoZyxjLCEwKTtnKz00O0Muc2V0SW50MzIoZyxlLCEwKTtnKz00O0Muc2V0SW50MzIoZywtdCwhMCk7Zys9NDtDLnNldFVpbnQxNihnLDEsITApO2crPTI7Qy5zZXRVaW50MTYoZyxhLCEwKTtnKz0yO0Muc2V0VWludDMyKGcsbywhMCk7Zys9NDtDLnNldFVpbnQzMihnLDAsITApO2crPTQ7Qy5zZXRJbnQzMihnLDAsITApO2crPTQ7Qy5zZXRJbnQzMihnLDAsITApO2crPTQ7Qy5zZXRVaW50MzIoZyxyLmxlbmd0aC80LCEwKTtnKz00O0Muc2V0VWludDMyKGcsMCwhMCk7Zys9NDtsLnNldChuLGcpO2crPW4ubGVuZ3RoO2wuc2V0KHIsZyk7Zys9ci5sZW5ndGg7bC5zZXQocyxnKTtyZXR1cm4gbH19SW1hZ2VSZXNpemVyLl9nb29kU3F1YXJlTGVuZ3RoPTIwNDg7Y29uc3QgbXM9MzI4NTM3NzUyMCx5cz00Mjk0OTAxNzYwLHdzPTY1NTM1O2NsYXNzIE11cm11ckhhc2gzXzY0e2NvbnN0cnVjdG9yKGUpe3RoaXMuaDE9ZT80Mjk0OTY3Mjk1JmU6bXM7dGhpcy5oMj1lPzQyOTQ5NjcyOTUmZTptc311cGRhdGUoZSl7bGV0IHQsaTtpZigic3RyaW5nIj09dHlwZW9mIGUpe3Q9bmV3IFVpbnQ4QXJyYXkoMiplLmxlbmd0aCk7aT0wO2ZvcihsZXQgYT0wLHM9ZS5sZW5ndGg7YTxzO2ErKyl7Y29uc3Qgcz1lLmNoYXJDb2RlQXQoYSk7aWYoczw9MjU1KXRbaSsrXT1zO2Vsc2V7dFtpKytdPXM+Pj44O3RbaSsrXT0yNTUmc319fWVsc2V7aWYoIUFycmF5QnVmZmVyLmlzVmlldyhlKSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgZGF0YSBmb3JtYXQsIG11c3QgYmUgYSBzdHJpbmcgb3IgVHlwZWRBcnJheS4iKTt0PWUuc2xpY2UoKTtpPXQuYnl0ZUxlbmd0aH1jb25zdCBhPWk+PjIscz1pLTQqYSxyPW5ldyBVaW50MzJBcnJheSh0LmJ1ZmZlciwwLGEpO2xldCBuPTAsbz0wLGc9dGhpcy5oMSxjPXRoaXMuaDI7Y29uc3QgaD0zNDMyOTE4MzUzLGw9NDYxODQ1OTA3LEM9MTE2MDEsUT0xMzcxNTtmb3IobGV0IGU9MDtlPGE7ZSsrKWlmKDEmZSl7bj1yW2VdO249bipoJnlzfG4qQyZ3cztuPW48PDE1fG4+Pj4xNztuPW4qbCZ5c3xuKlEmd3M7Z149bjtnPWc8PDEzfGc+Pj4xOTtnPTUqZyszODY0MjkyMTk2fWVsc2V7bz1yW2VdO289bypoJnlzfG8qQyZ3cztvPW88PDE1fG8+Pj4xNztvPW8qbCZ5c3xvKlEmd3M7Y149bztjPWM8PDEzfGM+Pj4xOTtjPTUqYyszODY0MjkyMTk2fW49MDtzd2l0Y2gocyl7Y2FzZSAzOm5ePXRbNCphKzJdPDwxNjtjYXNlIDI6bl49dFs0KmErMV08PDg7Y2FzZSAxOm5ePXRbNCphXTtuPW4qaCZ5c3xuKkMmd3M7bj1uPDwxNXxuPj4+MTc7bj1uKmwmeXN8bipRJndzOzEmYT9nXj1uOmNePW59dGhpcy5oMT1nO3RoaXMuaDI9Y31oZXhkaWdlc3QoKXtsZXQgZT10aGlzLmgxLHQ9dGhpcy5oMjtlXj10Pj4+MTtlPTM5ODE4MDY3OTcqZSZ5c3wzNjA0NSplJndzO3Q9NDI4MzU0MzUxMSp0JnlzfCgyOTUwMTYzNzk3Kih0PDwxNnxlPj4+MTYpJnlzKT4+PjE2O2VePXQ+Pj4xO2U9NDQ0OTg0NDAzKmUmeXN8NjA0OTkqZSZ3czt0PTMzMDE4ODIzNjYqdCZ5c3woMzEyMDQzNzg5MyoodDw8MTZ8ZT4+PjE2KSZ5cyk+Pj4xNjtlXj10Pj4+MTtyZXR1cm4oZT4+PjApLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg4LCIwIikrKHQ+Pj4wKS50b1N0cmluZygxNikucGFkU3RhcnQoOCwiMCIpfX1mdW5jdGlvbiBhZGRTdGF0ZShlLHQsaSxhLHMpe2xldCByPWU7Zm9yKGxldCBlPTAsaT10Lmxlbmd0aC0xO2U8aTtlKyspe2NvbnN0IGk9dFtlXTtyPXJbaV18fD1bXX1yW3QuYXQoLTEpXT17Y2hlY2tGbjppLGl0ZXJhdGVGbjphLHByb2Nlc3NGbjpzfX1jb25zdCBicz1bXTthZGRTdGF0ZShicyxbR0EsTUEsemUseEFdLG51bGwsKGZ1bmN0aW9uIGl0ZXJhdGVJbmxpbmVJbWFnZUdyb3VwKGUsdCl7Y29uc3QgaT1lLmZuQXJyYXksYT0odC0oZS5pQ3Vyci0zKSklNDtzd2l0Y2goYSl7Y2FzZSAwOnJldHVybiBpW3RdPT09R0E7Y2FzZSAxOnJldHVybiBpW3RdPT09TUE7Y2FzZSAyOnJldHVybiBpW3RdPT09emU7Y2FzZSAzOnJldHVybiBpW3RdPT09eEF9dGhyb3cgbmV3IEVycm9yKGBpdGVyYXRlSW5saW5lSW1hZ2VHcm91cCAtIGludmFsaWQgcG9zOiAke2F9YCl9KSwoZnVuY3Rpb24gZm91bmRJbmxpbmVJbWFnZUdyb3VwKGUsdCl7Y29uc3QgaT1lLmZuQXJyYXksYT1lLmFyZ3NBcnJheSxzPWUuaUN1cnIscj1zLTMsbj1zLTIsbz1zLTEsZz1NYXRoLm1pbihNYXRoLmZsb29yKCh0LXIpLzQpLDIwMCk7aWYoZzwxMClyZXR1cm4gdC0odC1yKSU0O2xldCBjPTA7Y29uc3QgaD1bXTtsZXQgbD0wLEM9MSxRPTE7Zm9yKGxldCBlPTA7ZTxnO2UrKyl7Y29uc3QgdD1hW24rKGU8PDIpXSxpPWFbbysoZTw8MildWzBdO2lmKEMraS53aWR0aD4xZTMpe2M9TWF0aC5tYXgoYyxDKTtRKz1sKzI7Qz0wO2w9MH1oLnB1c2goe3RyYW5zZm9ybTp0LHg6Qyx5OlEsdzppLndpZHRoLGg6aS5oZWlnaHR9KTtDKz1pLndpZHRoKzI7bD1NYXRoLm1heChsLGkuaGVpZ2h0KX1jb25zdCBFPU1hdGgubWF4KGMsQykrMSx1PVErbCsxLGQ9bmV3IFVpbnQ4QXJyYXkoRSp1KjQpLGY9RTw8Mjtmb3IobGV0IGU9MDtlPGc7ZSsrKXtjb25zdCB0PWFbbysoZTw8MildWzBdLmRhdGEsaT1oW2VdLnc8PDI7bGV0IHM9MCxyPWhbZV0ueCtoW2VdLnkqRTw8MjtkLnNldCh0LnN1YmFycmF5KDAsaSksci1mKTtmb3IobGV0IGE9MCxuPWhbZV0uaDthPG47YSsrKXtkLnNldCh0LnN1YmFycmF5KHMscytpKSxyKTtzKz1pO3IrPWZ9ZC5zZXQodC5zdWJhcnJheShzLWkscykscik7Zm9yKDtyPj0wOyl7dFtyLTRdPXRbcl07dFtyLTNdPXRbcisxXTt0W3ItMl09dFtyKzJdO3Rbci0xXT10W3IrM107dFtyK2ldPXRbcitpLTRdO3RbcitpKzFdPXRbcitpLTNdO3RbcitpKzJdPXRbcitpLTJdO3RbcitpKzNdPXRbcitpLTFdO3ItPWZ9fWNvbnN0IHA9e3dpZHRoOkUsaGVpZ2h0OnV9O2lmKGUuaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQpe2NvbnN0IGU9bmV3IE9mZnNjcmVlbkNhbnZhcyhFLHUpO2UuZ2V0Q29udGV4dCgiMmQiKS5wdXRJbWFnZURhdGEobmV3IEltYWdlRGF0YShuZXcgVWludDhDbGFtcGVkQXJyYXkoZC5idWZmZXIpLEUsdSksMCwwKTtwLmJpdG1hcD1lLnRyYW5zZmVyVG9JbWFnZUJpdG1hcCgpO3AuZGF0YT1udWxsfWVsc2V7cC5raW5kPUY7cC5kYXRhPWR9aS5zcGxpY2Uociw0KmcsX2UpO2Euc3BsaWNlKHIsNCpnLFtwLGhdKTtyZXR1cm4gcisxfSkpO2FkZFN0YXRlKGJzLFtHQSxNQSxqZSx4QV0sbnVsbCwoZnVuY3Rpb24gaXRlcmF0ZUltYWdlTWFza0dyb3VwKGUsdCl7Y29uc3QgaT1lLmZuQXJyYXksYT0odC0oZS5pQ3Vyci0zKSklNDtzd2l0Y2goYSl7Y2FzZSAwOnJldHVybiBpW3RdPT09R0E7Y2FzZSAxOnJldHVybiBpW3RdPT09TUE7Y2FzZSAyOnJldHVybiBpW3RdPT09amU7Y2FzZSAzOnJldHVybiBpW3RdPT09eEF9dGhyb3cgbmV3IEVycm9yKGBpdGVyYXRlSW1hZ2VNYXNrR3JvdXAgLSBpbnZhbGlkIHBvczogJHthfWApfSksKGZ1bmN0aW9uIGZvdW5kSW1hZ2VNYXNrR3JvdXAoZSx0KXtjb25zdCBpPWUuZm5BcnJheSxhPWUuYXJnc0FycmF5LHM9ZS5pQ3VycixyPXMtMyxuPXMtMixvPXMtMTtsZXQgZz1NYXRoLmZsb29yKCh0LXIpLzQpO2lmKGc8MTApcmV0dXJuIHQtKHQtciklNDtsZXQgYyxoLGw9ITE7Y29uc3QgQz1hW29dWzBdLFE9YVtuXVswXSxFPWFbbl1bMV0sdT1hW25dWzJdLGQ9YVtuXVszXTtpZihFPT09dSl7bD0hMDtjPW4rNDtsZXQgZT1vKzQ7Zm9yKGxldCB0PTE7dDxnO3QrKyxjKz00LGUrPTQpe2g9YVtjXTtpZihhW2VdWzBdIT09Q3x8aFswXSE9PVF8fGhbMV0hPT1FfHxoWzJdIT09dXx8aFszXSE9PWQpe3Q8MTA/bD0hMTpnPXQ7YnJlYWt9fX1pZihsKXtnPU1hdGgubWluKGcsMWUzKTtjb25zdCBlPW5ldyBGbG9hdDMyQXJyYXkoMipnKTtjPW47Zm9yKGxldCB0PTA7dDxnO3QrKyxjKz00KXtoPWFbY107ZVt0PDwxXT1oWzRdO2VbMSsodDw8MSldPWhbNV19aS5zcGxpY2Uociw0KmcsQXQpO2Euc3BsaWNlKHIsNCpnLFtDLFEsRSx1LGQsZV0pfWVsc2V7Zz1NYXRoLm1pbihnLDEwMCk7Y29uc3QgZT1bXTtmb3IobGV0IHQ9MDt0PGc7dCsrKXtoPWFbbisodDw8MildO2NvbnN0IGk9YVtvKyh0PDwyKV1bMF07ZS5wdXNoKHtkYXRhOmkuZGF0YSx3aWR0aDppLndpZHRoLGhlaWdodDppLmhlaWdodCxpbnRlcnBvbGF0ZTppLmludGVycG9sYXRlLGNvdW50OmkuY291bnQsdHJhbnNmb3JtOmh9KX1pLnNwbGljZShyLDQqZyxaZSk7YS5zcGxpY2Uociw0KmcsW2VdKX1yZXR1cm4gcisxfSkpO2FkZFN0YXRlKGJzLFtHQSxNQSxWZSx4QV0sKGZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5hcmdzQXJyYXksaT1lLmlDdXJyLTI7cmV0dXJuIDA9PT10W2ldWzFdJiYwPT09dFtpXVsyXX0pLChmdW5jdGlvbiBpdGVyYXRlSW1hZ2VHcm91cChlLHQpe2NvbnN0IGk9ZS5mbkFycmF5LGE9ZS5hcmdzQXJyYXkscz0odC0oZS5pQ3Vyci0zKSklNDtzd2l0Y2gocyl7Y2FzZSAwOnJldHVybiBpW3RdPT09R0E7Y2FzZSAxOmlmKGlbdF0hPT1NQSlyZXR1cm4hMTtjb25zdCBzPWUuaUN1cnItMixyPWFbc11bMF0sbj1hW3NdWzNdO3JldHVybiBhW3RdWzBdPT09ciYmMD09PWFbdF1bMV0mJjA9PT1hW3RdWzJdJiZhW3RdWzNdPT09bjtjYXNlIDI6aWYoaVt0XSE9PVZlKXJldHVybiExO2NvbnN0IG89YVtlLmlDdXJyLTFdWzBdO3JldHVybiBhW3RdWzBdPT09bztjYXNlIDM6cmV0dXJuIGlbdF09PT14QX10aHJvdyBuZXcgRXJyb3IoYGl0ZXJhdGVJbWFnZUdyb3VwIC0gaW52YWxpZCBwb3M6ICR7c31gKX0pLChmdW5jdGlvbihlLHQpe2NvbnN0IGk9ZS5mbkFycmF5LGE9ZS5hcmdzQXJyYXkscz1lLmlDdXJyLHI9cy0zLG49cy0yLG89YVtzLTFdWzBdLGc9YVtuXVswXSxjPWFbbl1bM10saD1NYXRoLm1pbihNYXRoLmZsb29yKCh0LXIpLzQpLDFlMyk7aWYoaDwzKXJldHVybiB0LSh0LXIpJTQ7Y29uc3QgbD1uZXcgRmxvYXQzMkFycmF5KDIqaCk7bGV0IEM9bjtmb3IobGV0IGU9MDtlPGg7ZSsrLEMrPTQpe2NvbnN0IHQ9YVtDXTtsW2U8PDFdPXRbNF07bFsxKyhlPDwxKV09dFs1XX1jb25zdCBRPVtvLGcsYyxsXTtpLnNwbGljZShyLDQqaCwkZSk7YS5zcGxpY2Uociw0KmgsUSk7cmV0dXJuIHIrMX0pKTthZGRTdGF0ZShicyxbJEEsc2UsSWUsaGUsQWVdLG51bGwsKGZ1bmN0aW9uIGl0ZXJhdGVTaG93VGV4dEdyb3VwKGUsdCl7Y29uc3QgaT1lLmZuQXJyYXksYT1lLmFyZ3NBcnJheSxzPSh0LShlLmlDdXJyLTQpKSU1O3N3aXRjaChzKXtjYXNlIDA6cmV0dXJuIGlbdF09PT0kQTtjYXNlIDE6cmV0dXJuIGlbdF09PT1zZTtjYXNlIDI6cmV0dXJuIGlbdF09PT1JZTtjYXNlIDM6aWYoaVt0XSE9PWhlKXJldHVybiExO2NvbnN0IHM9ZS5pQ3Vyci0zLHI9YVtzXVswXSxuPWFbc11bMV07cmV0dXJuIGFbdF1bMF09PT1yJiZhW3RdWzFdPT09bjtjYXNlIDQ6cmV0dXJuIGlbdF09PT1BZX10aHJvdyBuZXcgRXJyb3IoYGl0ZXJhdGVTaG93VGV4dEdyb3VwIC0gaW52YWxpZCBwb3M6ICR7c31gKX0pLChmdW5jdGlvbihlLHQpe2NvbnN0IGk9ZS5mbkFycmF5LGE9ZS5hcmdzQXJyYXkscz1lLmlDdXJyLHI9cy00LG49cy0zLG89cy0yLGc9cy0xLGM9cyxoPWFbbl1bMF0sbD1hW25dWzFdO2xldCBDPU1hdGgubWluKE1hdGguZmxvb3IoKHQtcikvNSksMWUzKTtpZihDPDMpcmV0dXJuIHQtKHQtciklNTtsZXQgUT1yO2lmKHI+PTQmJmlbci00XT09PWlbbl0mJmlbci0zXT09PWlbb10mJmlbci0yXT09PWlbZ10mJmlbci0xXT09PWlbY10mJmFbci00XVswXT09PWgmJmFbci00XVsxXT09PWwpe0MrKztRLT01fWxldCBFPVErNDtmb3IobGV0IGU9MTtlPEM7ZSsrKXtpLnNwbGljZShFLDMpO2Euc3BsaWNlKEUsMyk7RSs9Mn1yZXR1cm4gRSsxfSkpO2NsYXNzIE51bGxPcHRpbWl6ZXJ7Y29uc3RydWN0b3IoZSl7dGhpcy5xdWV1ZT1lfV9vcHRpbWl6ZSgpe31wdXNoKGUsdCl7dGhpcy5xdWV1ZS5mbkFycmF5LnB1c2goZSk7dGhpcy5xdWV1ZS5hcmdzQXJyYXkucHVzaCh0KTt0aGlzLl9vcHRpbWl6ZSgpfWZsdXNoKCl7fXJlc2V0KCl7fX1jbGFzcyBRdWV1ZU9wdGltaXplciBleHRlbmRzIE51bGxPcHRpbWl6ZXJ7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSk7dGhpcy5zdGF0ZT1udWxsO3RoaXMuY29udGV4dD17aUN1cnI6MCxmbkFycmF5OmUuZm5BcnJheSxhcmdzQXJyYXk6ZS5hcmdzQXJyYXksaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQ6ITF9O3RoaXMubWF0Y2g9bnVsbDt0aGlzLmxhc3RQcm9jZXNzZWQ9MH1zZXQgaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQoZSl7dGhpcy5jb250ZXh0LmlzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkPWV9X29wdGltaXplKCl7Y29uc3QgZT10aGlzLnF1ZXVlLmZuQXJyYXk7bGV0IHQ9dGhpcy5sYXN0UHJvY2Vzc2VkLGk9ZS5sZW5ndGgsYT10aGlzLnN0YXRlLHM9dGhpcy5tYXRjaDtpZighYSYmIXMmJnQrMT09PWkmJiFic1tlW3RdXSl7dGhpcy5sYXN0UHJvY2Vzc2VkPWk7cmV0dXJufWNvbnN0IHI9dGhpcy5jb250ZXh0O2Zvcig7dDxpOyl7aWYocyl7aWYoKDAscy5pdGVyYXRlRm4pKHIsdCkpe3QrKztjb250aW51ZX10PSgwLHMucHJvY2Vzc0ZuKShyLHQrMSk7aT1lLmxlbmd0aDtzPW51bGw7YT1udWxsO2lmKHQ+PWkpYnJlYWt9YT0oYXx8YnMpW2VbdF1dO2lmKGEmJiFBcnJheS5pc0FycmF5KGEpKXtyLmlDdXJyPXQ7dCsrO2lmKCFhLmNoZWNrRm58fCgwLGEuY2hlY2tGbikocikpe3M9YTthPW51bGx9ZWxzZSBhPW51bGx9ZWxzZSB0Kyt9dGhpcy5zdGF0ZT1hO3RoaXMubWF0Y2g9czt0aGlzLmxhc3RQcm9jZXNzZWQ9dH1mbHVzaCgpe2Zvcig7dGhpcy5tYXRjaDspe2NvbnN0IGU9dGhpcy5xdWV1ZS5mbkFycmF5Lmxlbmd0aDt0aGlzLmxhc3RQcm9jZXNzZWQ9KDAsdGhpcy5tYXRjaC5wcm9jZXNzRm4pKHRoaXMuY29udGV4dCxlKTt0aGlzLm1hdGNoPW51bGw7dGhpcy5zdGF0ZT1udWxsO3RoaXMuX29wdGltaXplKCl9fXJlc2V0KCl7dGhpcy5zdGF0ZT1udWxsO3RoaXMubWF0Y2g9bnVsbDt0aGlzLmxhc3RQcm9jZXNzZWQ9MH19Y2xhc3MgT3BlcmF0b3JMaXN0e3N0YXRpYyBDSFVOS19TSVpFPTFlMztzdGF0aWMgQ0hVTktfU0laRV9BQk9VVD10aGlzLkNIVU5LX1NJWkUtNTtjb25zdHJ1Y3RvcihlPTAsdCl7dGhpcy5fc3RyZWFtU2luaz10O3RoaXMuZm5BcnJheT1bXTt0aGlzLmFyZ3NBcnJheT1bXTt0aGlzLm9wdGltaXplcj0hdHx8ZSZRP25ldyBOdWxsT3B0aW1pemVyKHRoaXMpOm5ldyBRdWV1ZU9wdGltaXplcih0aGlzKTt0aGlzLmRlcGVuZGVuY2llcz1uZXcgU2V0O3RoaXMuX3RvdGFsTGVuZ3RoPTA7dGhpcy53ZWlnaHQ9MDt0aGlzLl9yZXNvbHZlZD10P251bGw6UHJvbWlzZS5yZXNvbHZlKCl9c2V0IGlzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkKGUpe3RoaXMub3B0aW1pemVyLmlzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkPWV9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLmFyZ3NBcnJheS5sZW5ndGh9Z2V0IHJlYWR5KCl7cmV0dXJuIHRoaXMuX3Jlc29sdmVkfHx0aGlzLl9zdHJlYW1TaW5rLnJlYWR5fWdldCB0b3RhbExlbmd0aCgpe3JldHVybiB0aGlzLl90b3RhbExlbmd0aCt0aGlzLmxlbmd0aH1hZGRPcChlLHQpe3RoaXMub3B0aW1pemVyLnB1c2goZSx0KTt0aGlzLndlaWdodCsrO3RoaXMuX3N0cmVhbVNpbmsmJih0aGlzLndlaWdodD49T3BlcmF0b3JMaXN0LkNIVU5LX1NJWkV8fHRoaXMud2VpZ2h0Pj1PcGVyYXRvckxpc3QuQ0hVTktfU0laRV9BQk9VVCYmKGU9PT14QXx8ZT09PUFlKSkmJnRoaXMuZmx1c2goKX1hZGRJbWFnZU9wcyhlLHQsaSl7dm9pZCAwIT09aSYmdGhpcy5hZGRPcChIZSxbIk9DIixpXSk7dGhpcy5hZGRPcChlLHQpO3ZvaWQgMCE9PWkmJnRoaXMuYWRkT3AoWWUsW10pfWFkZERlcGVuZGVuY3koZSl7aWYoIXRoaXMuZGVwZW5kZW5jaWVzLmhhcyhlKSl7dGhpcy5kZXBlbmRlbmNpZXMuYWRkKGUpO3RoaXMuYWRkT3AoeUEsW2VdKX19YWRkRGVwZW5kZW5jaWVzKGUpe2Zvcihjb25zdCB0IG9mIGUpdGhpcy5hZGREZXBlbmRlbmN5KHQpfWFkZE9wTGlzdChlKXtpZihlIGluc3RhbmNlb2YgT3BlcmF0b3JMaXN0KXtmb3IoY29uc3QgdCBvZiBlLmRlcGVuZGVuY2llcyl0aGlzLmRlcGVuZGVuY2llcy5hZGQodCk7Zm9yKGxldCB0PTAsaT1lLmxlbmd0aDt0PGk7dCsrKXRoaXMuYWRkT3AoZS5mbkFycmF5W3RdLGUuYXJnc0FycmF5W3RdKX1lbHNlIHdhcm4oJ2FkZE9wTGlzdCAtIGlnbm9yaW5nIGludmFsaWQgIm9wTGlzdCIgcGFyYW1ldGVyLicpfWdldElSKCl7cmV0dXJue2ZuQXJyYXk6dGhpcy5mbkFycmF5LGFyZ3NBcnJheTp0aGlzLmFyZ3NBcnJheSxsZW5ndGg6dGhpcy5sZW5ndGh9fWdldCBfdHJhbnNmZXJzKCl7Y29uc3QgZT1bXSx7Zm5BcnJheTp0LGFyZ3NBcnJheTppLGxlbmd0aDphfT10aGlzO2ZvcihsZXQgcz0wO3M8YTtzKyspc3dpdGNoKHRbc10pe2Nhc2UgemU6Y2FzZSBfZTpjYXNlIGplOmNvbnN0IHQ9aVtzXVswXTshdC5jYWNoZWQmJnQuZGF0YT8uYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXImJmUucHVzaCh0LmRhdGEuYnVmZmVyKX1yZXR1cm4gZX1mbHVzaChlPSExLHQ9bnVsbCl7dGhpcy5vcHRpbWl6ZXIuZmx1c2goKTtjb25zdCBpPXRoaXMubGVuZ3RoO3RoaXMuX3RvdGFsTGVuZ3RoKz1pO3RoaXMuX3N0cmVhbVNpbmsuZW5xdWV1ZSh7Zm5BcnJheTp0aGlzLmZuQXJyYXksYXJnc0FycmF5OnRoaXMuYXJnc0FycmF5LGxhc3RDaHVuazplLHNlcGFyYXRlQW5ub3RzOnQsbGVuZ3RoOml9LDEsdGhpcy5fdHJhbnNmZXJzKTt0aGlzLmRlcGVuZGVuY2llcy5jbGVhcigpO3RoaXMuZm5BcnJheS5sZW5ndGg9MDt0aGlzLmFyZ3NBcnJheS5sZW5ndGg9MDt0aGlzLndlaWdodD0wO3RoaXMub3B0aW1pemVyLnJlc2V0KCl9fWZ1bmN0aW9uIGRlY29kZUFuZENsYW1wKGUsdCxpLGEpeyhlPXQrZSppKTwwP2U9MDplPmEmJihlPWEpO3JldHVybiBlfWZ1bmN0aW9uIHJlc2l6ZUltYWdlTWFzayhlLHQsaSxhLHMscil7Y29uc3Qgbj1zKnI7bGV0IG87bz10PD04P25ldyBVaW50OEFycmF5KG4pOnQ8PTE2P25ldyBVaW50MTZBcnJheShuKTpuZXcgVWludDMyQXJyYXkobik7Y29uc3QgZz1pL3MsYz1hL3I7bGV0IGgsbCxDLFEsRT0wO2NvbnN0IHU9bmV3IFVpbnQxNkFycmF5KHMpLGQ9aTtmb3IoaD0wO2g8cztoKyspdVtoXT1NYXRoLmZsb29yKGgqZyk7Zm9yKGg9MDtoPHI7aCsrKXtDPU1hdGguZmxvb3IoaCpjKSpkO2ZvcihsPTA7bDxzO2wrKyl7UT1DK3VbbF07b1tFKytdPWVbUV19fXJldHVybiBvfWNsYXNzIFBERkltYWdle2NvbnN0cnVjdG9yKHt4cmVmOmUscmVzOnQsaW1hZ2U6aSxpc0lubGluZTphPSExLHNtYXNrOnM9bnVsbCxtYXNrOnI9bnVsbCxpc01hc2s6bj0hMSxwZGZGdW5jdGlvbkZhY3Rvcnk6byxsb2NhbENvbG9yU3BhY2VDYWNoZTpnfSl7dGhpcy5pbWFnZT1pO2xldCBjPSExO2NvbnN0IGg9aS5kaWN0LGw9aC5nZXQoIkYiLCJGaWx0ZXIiKTtsZXQgQztpZihsIGluc3RhbmNlb2YgTmFtZSlDPWwubmFtZTtlbHNlIGlmKEFycmF5LmlzQXJyYXkobCkpe2NvbnN0IHQ9ZS5mZXRjaElmUmVmKGxbMF0pO3QgaW5zdGFuY2VvZiBOYW1lJiYoQz10Lm5hbWUpfXN3aXRjaChDKXtjYXNlIkpQWERlY29kZSI6KHt3aWR0aDppLndpZHRoLGhlaWdodDppLmhlaWdodCxjb21wb25lbnRzQ291bnQ6aS5udW1Db21wcyxiaXRzUGVyQ29tcG9uZW50OmkuYml0c1BlckNvbXBvbmVudH09SnB4SW1hZ2UucGFyc2VJbWFnZVByb3BlcnRpZXMoaS5zdHJlYW0pKTtpLnN0cmVhbS5yZXNldCgpO2M9ITA7YnJlYWs7Y2FzZSJKQklHMkRlY29kZSI6aS5iaXRzUGVyQ29tcG9uZW50PTE7aS5udW1Db21wcz0xfWxldCBRPWguZ2V0KCJXIiwiV2lkdGgiKSxFPWguZ2V0KCJIIiwiSGVpZ2h0Iik7aWYoTnVtYmVyLmlzSW50ZWdlcihpLndpZHRoKSYmaS53aWR0aD4wJiZOdW1iZXIuaXNJbnRlZ2VyKGkuaGVpZ2h0KSYmaS5oZWlnaHQ+MCYmKGkud2lkdGghPT1RfHxpLmhlaWdodCE9PUUpKXt3YXJuKCJQREZJbWFnZSAtIHVzaW5nIHRoZSBXaWR0aC9IZWlnaHQgb2YgdGhlIGltYWdlIGRhdGEsIHJhdGhlciB0aGFuIHRoZSBpbWFnZSBkaWN0aW9uYXJ5LiIpO1E9aS53aWR0aDtFPWkuaGVpZ2h0fWlmKFE8MXx8RTwxKXRocm93IG5ldyBGb3JtYXRFcnJvcihgSW52YWxpZCBpbWFnZSB3aWR0aDogJHtRfSBvciBoZWlnaHQ6ICR7RX1gKTt0aGlzLndpZHRoPVE7dGhpcy5oZWlnaHQ9RTt0aGlzLmludGVycG9sYXRlPWguZ2V0KCJJIiwiSW50ZXJwb2xhdGUiKTt0aGlzLmltYWdlTWFzaz1oLmdldCgiSU0iLCJJbWFnZU1hc2siKXx8ITE7dGhpcy5tYXR0ZT1oLmdldCgiTWF0dGUiKXx8ITE7bGV0IHU9aS5iaXRzUGVyQ29tcG9uZW50O2lmKCF1KXt1PWguZ2V0KCJCUEMiLCJCaXRzUGVyQ29tcG9uZW50Iik7aWYoIXUpe2lmKCF0aGlzLmltYWdlTWFzayl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYEJpdHMgcGVyIGNvbXBvbmVudCBtaXNzaW5nIGluIGltYWdlOiAke3RoaXMuaW1hZ2VNYXNrfWApO3U9MX19dGhpcy5icGM9dTtpZighdGhpcy5pbWFnZU1hc2spe2xldCBzPWguZ2V0UmF3KCJDUyIpfHxoLmdldFJhdygiQ29sb3JTcGFjZSIpO2lmKCFzKXtpbmZvKCJKUFggaW1hZ2VzICh3aGljaCBkbyBub3QgcmVxdWlyZSBjb2xvciBzcGFjZXMpIik7c3dpdGNoKGkubnVtQ29tcHMpe2Nhc2UgMTpzPU5hbWUuZ2V0KCJEZXZpY2VHcmF5Iik7YnJlYWs7Y2FzZSAzOnM9TmFtZS5nZXQoIkRldmljZVJHQiIpO2JyZWFrO2Nhc2UgNDpzPU5hbWUuZ2V0KCJEZXZpY2VDTVlLIik7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYEpQWCBpbWFnZXMgd2l0aCAke2kubnVtQ29tcHN9IGNvbG9yIGNvbXBvbmVudHMgbm90IHN1cHBvcnRlZC5gKX19dGhpcy5jb2xvclNwYWNlPUNvbG9yU3BhY2UucGFyc2Uoe2NzOnMseHJlZjplLHJlc291cmNlczphP3Q6bnVsbCxwZGZGdW5jdGlvbkZhY3Rvcnk6byxsb2NhbENvbG9yU3BhY2VDYWNoZTpnfSk7dGhpcy5udW1Db21wcz10aGlzLmNvbG9yU3BhY2UubnVtQ29tcHM7dGhpcy5pZ25vcmVDb2xvclNwYWNlPWMmJiJJbmRleGVkIj09PXRoaXMuY29sb3JTcGFjZS5uYW1lfXRoaXMuZGVjb2RlPWguZ2V0QXJyYXkoIkQiLCJEZWNvZGUiKTt0aGlzLm5lZWRzRGVjb2RlPSExO2lmKHRoaXMuZGVjb2RlJiYodGhpcy5jb2xvclNwYWNlJiYhdGhpcy5jb2xvclNwYWNlLmlzRGVmYXVsdERlY29kZSh0aGlzLmRlY29kZSx1KXx8biYmIUNvbG9yU3BhY2UuaXNEZWZhdWx0RGVjb2RlKHRoaXMuZGVjb2RlLDEpKSl7dGhpcy5uZWVkc0RlY29kZT0hMDtjb25zdCBlPSgxPDx1KS0xO3RoaXMuZGVjb2RlQ29lZmZpY2llbnRzPVtdO3RoaXMuZGVjb2RlQWRkZW5kcz1bXTtjb25zdCB0PSJJbmRleGVkIj09PXRoaXMuY29sb3JTcGFjZT8ubmFtZTtmb3IobGV0IGk9MCxhPTA7aTx0aGlzLmRlY29kZS5sZW5ndGg7aSs9MiwrK2Epe2NvbnN0IHM9dGhpcy5kZWNvZGVbaV0scj10aGlzLmRlY29kZVtpKzFdO3RoaXMuZGVjb2RlQ29lZmZpY2llbnRzW2FdPXQ/KHItcykvZTpyLXM7dGhpcy5kZWNvZGVBZGRlbmRzW2FdPXQ/czplKnN9fWlmKHMpdGhpcy5zbWFzaz1uZXcgUERGSW1hZ2Uoe3hyZWY6ZSxyZXM6dCxpbWFnZTpzLGlzSW5saW5lOmEscGRmRnVuY3Rpb25GYWN0b3J5Om8sbG9jYWxDb2xvclNwYWNlQ2FjaGU6Z30pO2Vsc2UgaWYocilpZihyIGluc3RhbmNlb2YgQmFzZVN0cmVhbSl7ci5kaWN0LmdldCgiSU0iLCJJbWFnZU1hc2siKT90aGlzLm1hc2s9bmV3IFBERkltYWdlKHt4cmVmOmUscmVzOnQsaW1hZ2U6cixpc0lubGluZTphLGlzTWFzazohMCxwZGZGdW5jdGlvbkZhY3Rvcnk6byxsb2NhbENvbG9yU3BhY2VDYWNoZTpnfSk6d2FybigiSWdub3JpbmcgL01hc2sgaW4gaW1hZ2Ugd2l0aG91dCAvSW1hZ2VNYXNrLiIpfWVsc2UgdGhpcy5tYXNrPXJ9c3RhdGljIGFzeW5jIGJ1aWxkSW1hZ2Uoe3hyZWY6ZSxyZXM6dCxpbWFnZTppLGlzSW5saW5lOmE9ITEscGRmRnVuY3Rpb25GYWN0b3J5OnMsbG9jYWxDb2xvclNwYWNlQ2FjaGU6cn0pe2NvbnN0IG49aTtsZXQgbz1udWxsLGc9bnVsbDtjb25zdCBjPWkuZGljdC5nZXQoIlNNYXNrIiksaD1pLmRpY3QuZ2V0KCJNYXNrIik7Yz9jIGluc3RhbmNlb2YgQmFzZVN0cmVhbT9vPWM6d2FybigiVW5zdXBwb3J0ZWQgL1NNYXNrIGZvcm1hdC4iKTpoJiYoaCBpbnN0YW5jZW9mIEJhc2VTdHJlYW18fEFycmF5LmlzQXJyYXkoaCk/Zz1oOndhcm4oIlVuc3VwcG9ydGVkIC9NYXNrIGZvcm1hdC4iKSk7cmV0dXJuIG5ldyBQREZJbWFnZSh7eHJlZjplLHJlczp0LGltYWdlOm4saXNJbmxpbmU6YSxzbWFzazpvLG1hc2s6ZyxwZGZGdW5jdGlvbkZhY3Rvcnk6cyxsb2NhbENvbG9yU3BhY2VDYWNoZTpyfSl9c3RhdGljIGNyZWF0ZVJhd01hc2soe2ltZ0FycmF5OmUsd2lkdGg6dCxoZWlnaHQ6aSxpbWFnZUlzRnJvbURlY29kZVN0cmVhbTphLGludmVyc2VEZWNvZGU6cyxpbnRlcnBvbGF0ZTpyfSl7Y29uc3Qgbj0odCs3Pj4zKSppLG89ZS5ieXRlTGVuZ3RoO2xldCBnLGM7aWYoIWF8fHMmJiEobj09PW8pKWlmKHMpe2c9bmV3IFVpbnQ4QXJyYXkobik7Zy5zZXQoZSk7Zy5maWxsKDI1NSxvKX1lbHNlIGc9bmV3IFVpbnQ4QXJyYXkoZSk7ZWxzZSBnPWU7aWYocylmb3IoYz0wO2M8bztjKyspZ1tjXV49MjU1O3JldHVybntkYXRhOmcsd2lkdGg6dCxoZWlnaHQ6aSxpbnRlcnBvbGF0ZTpyfX1zdGF0aWMgYXN5bmMgY3JlYXRlTWFzayh7aW1nQXJyYXk6ZSx3aWR0aDp0LGhlaWdodDppLGltYWdlSXNGcm9tRGVjb2RlU3RyZWFtOmEsaW52ZXJzZURlY29kZTpzLGludGVycG9sYXRlOnIsaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQ6bj0hMX0pe2NvbnN0IG89MT09PXQmJjE9PT1pJiZzPT09KDA9PT1lLmxlbmd0aHx8ISEoMTI4JmVbMF0pKTtpZihvKXJldHVybntpc1NpbmdsZU9wYXF1ZVBpeGVsOm99O2lmKG4pe2lmKEltYWdlUmVzaXplci5uZWVkc1RvQmVSZXNpemVkKHQsaSkpe2NvbnN0IGE9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KHQqaSo0KTtjb252ZXJ0QmxhY2tBbmRXaGl0ZVRvUkdCQSh7c3JjOmUsZGVzdDphLHdpZHRoOnQsaGVpZ2h0Omksbm9uQmxhY2tDb2xvcjowLGludmVyc2VEZWNvZGU6c30pO3JldHVybiBJbWFnZVJlc2l6ZXIuY3JlYXRlSW1hZ2Uoe2tpbmQ6RixkYXRhOmEsd2lkdGg6dCxoZWlnaHQ6aSxpbnRlcnBvbGF0ZTpyfSl9Y29uc3QgYT1uZXcgT2Zmc2NyZWVuQ2FudmFzKHQsaSksbj1hLmdldENvbnRleHQoIjJkIiksbz1uLmNyZWF0ZUltYWdlRGF0YSh0LGkpO2NvbnZlcnRCbGFja0FuZFdoaXRlVG9SR0JBKHtzcmM6ZSxkZXN0Om8uZGF0YSx3aWR0aDp0LGhlaWdodDppLG5vbkJsYWNrQ29sb3I6MCxpbnZlcnNlRGVjb2RlOnN9KTtuLnB1dEltYWdlRGF0YShvLDAsMCk7cmV0dXJue2RhdGE6bnVsbCx3aWR0aDp0LGhlaWdodDppLGludGVycG9sYXRlOnIsYml0bWFwOmEudHJhbnNmZXJUb0ltYWdlQml0bWFwKCl9fXJldHVybiB0aGlzLmNyZWF0ZVJhd01hc2soe2ltZ0FycmF5OmUsd2lkdGg6dCxoZWlnaHQ6aSxpbnZlcnNlRGVjb2RlOnMsaW1hZ2VJc0Zyb21EZWNvZGVTdHJlYW06YSxpbnRlcnBvbGF0ZTpyfSl9Z2V0IGRyYXdXaWR0aCgpe3JldHVybiBNYXRoLm1heCh0aGlzLndpZHRoLHRoaXMuc21hc2s/LndpZHRofHwwLHRoaXMubWFzaz8ud2lkdGh8fDApfWdldCBkcmF3SGVpZ2h0KCl7cmV0dXJuIE1hdGgubWF4KHRoaXMuaGVpZ2h0LHRoaXMuc21hc2s/LmhlaWdodHx8MCx0aGlzLm1hc2s/LmhlaWdodHx8MCl9ZGVjb2RlQnVmZmVyKGUpe2NvbnN0IHQ9dGhpcy5icGMsaT10aGlzLm51bUNvbXBzLGE9dGhpcy5kZWNvZGVBZGRlbmRzLHM9dGhpcy5kZWNvZGVDb2VmZmljaWVudHMscj0oMTw8dCktMTtsZXQgbixvO2lmKDE9PT10KXtmb3Iobj0wLG89ZS5sZW5ndGg7bjxvO24rKyllW25dPSshZVtuXTtyZXR1cm59bGV0IGc9MDtmb3Iobj0wLG89dGhpcy53aWR0aCp0aGlzLmhlaWdodDtuPG87bisrKWZvcihsZXQgdD0wO3Q8aTt0Kyspe2VbZ109ZGVjb2RlQW5kQ2xhbXAoZVtnXSxhW3RdLHNbdF0scik7ZysrfX1nZXRDb21wb25lbnRzKGUpe2NvbnN0IHQ9dGhpcy5icGM7aWYoOD09PXQpcmV0dXJuIGU7Y29uc3QgaT10aGlzLndpZHRoLGE9dGhpcy5oZWlnaHQscz10aGlzLm51bUNvbXBzLHI9aSphKnM7bGV0IG4sbz0wO249dDw9OD9uZXcgVWludDhBcnJheShyKTp0PD0xNj9uZXcgVWludDE2QXJyYXkocik6bmV3IFVpbnQzMkFycmF5KHIpO2NvbnN0IGc9aSpzLGM9KDE8PHQpLTE7bGV0IGgsbCxDPTA7aWYoMT09PXQpe2xldCB0LGkscztmb3IobGV0IHI9MDtyPGE7cisrKXtpPUMrKC04JmcpO3M9QytnO2Zvcig7QzxpOyl7bD1lW28rK107bltDXT1sPj43JjE7bltDKzFdPWw+PjYmMTtuW0MrMl09bD4+NSYxO25bQyszXT1sPj40JjE7bltDKzRdPWw+PjMmMTtuW0MrNV09bD4+MiYxO25bQys2XT1sPj4xJjE7bltDKzddPTEmbDtDKz04fWlmKEM8cyl7bD1lW28rK107dD0xMjg7Zm9yKDtDPHM7KXtuW0MrK109KyEhKGwmdCk7dD4+PTF9fX19ZWxzZXtsZXQgaT0wO2w9MDtmb3IoQz0wLGg9cjtDPGg7KytDKXtpZihDJWc9PTApe2w9MDtpPTB9Zm9yKDtpPHQ7KXtsPWw8PDh8ZVtvKytdO2krPTh9Y29uc3QgYT1pLXQ7bGV0IHM9bD4+YTtzPDA/cz0wOnM+YyYmKHM9Yyk7bltDXT1zO2wmPSgxPDxhKS0xO2k9YX19cmV0dXJuIG59ZmlsbE9wYWNpdHkoZSx0LGksYSxzKXtjb25zdCByPXRoaXMuc21hc2ssbj10aGlzLm1hc2s7bGV0IG8sZyxjLGgsbCxDO2lmKHIpe2c9ci53aWR0aDtjPXIuaGVpZ2h0O289bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGcqYyk7ci5maWxsR3JheUJ1ZmZlcihvKTtnPT09dCYmYz09PWl8fChvPXJlc2l6ZUltYWdlTWFzayhvLHIuYnBjLGcsYyx0LGkpKX1lbHNlIGlmKG4paWYobiBpbnN0YW5jZW9mIFBERkltYWdlKXtnPW4ud2lkdGg7Yz1uLmhlaWdodDtvPW5ldyBVaW50OENsYW1wZWRBcnJheShnKmMpO24ubnVtQ29tcHM9MTtuLmZpbGxHcmF5QnVmZmVyKG8pO2ZvcihoPTAsbD1nKmM7aDxsOysraClvW2hdPTI1NS1vW2hdO2c9PT10JiZjPT09aXx8KG89cmVzaXplSW1hZ2VNYXNrKG8sbi5icGMsZyxjLHQsaSkpfWVsc2V7aWYoIUFycmF5LmlzQXJyYXkobikpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJVbmtub3duIG1hc2sgZm9ybWF0LiIpO3tvPW5ldyBVaW50OENsYW1wZWRBcnJheSh0KmkpO2NvbnN0IGU9dGhpcy5udW1Db21wcztmb3IoaD0wLGw9dCppO2g8bDsrK2gpe2xldCB0PTA7Y29uc3QgaT1oKmU7Zm9yKEM9MDtDPGU7KytDKXtjb25zdCBlPXNbaStDXSxhPTIqQztpZihlPG5bYV18fGU+blthKzFdKXt0PTI1NTticmVha319b1toXT10fX19aWYobylmb3IoaD0wLEM9MyxsPXQqYTtoPGw7KytoLEMrPTQpZVtDXT1vW2hdO2Vsc2UgZm9yKGg9MCxDPTMsbD10KmE7aDxsOysraCxDKz00KWVbQ109MjU1fXVuZG9QcmVibGVuZChlLHQsaSl7Y29uc3QgYT10aGlzLnNtYXNrPy5tYXR0ZTtpZighYSlyZXR1cm47Y29uc3Qgcz10aGlzLmNvbG9yU3BhY2UuZ2V0UmdiKGEsMCkscj1zWzBdLG49c1sxXSxvPXNbMl0sZz10KmkqNDtmb3IobGV0IHQ9MDt0PGc7dCs9NCl7Y29uc3QgaT1lW3QrM107aWYoMD09PWkpe2VbdF09MjU1O2VbdCsxXT0yNTU7ZVt0KzJdPTI1NTtjb250aW51ZX1jb25zdCBhPTI1NS9pO2VbdF09KGVbdF0tcikqYStyO2VbdCsxXT0oZVt0KzFdLW4pKmErbjtlW3QrMl09KGVbdCsyXS1vKSphK299fWFzeW5jIGNyZWF0ZUltYWdlRGF0YShlPSExLHQ9ITEpe2NvbnN0IGk9dGhpcy5kcmF3V2lkdGgsYT10aGlzLmRyYXdIZWlnaHQscz17d2lkdGg6aSxoZWlnaHQ6YSxpbnRlcnBvbGF0ZTp0aGlzLmludGVycG9sYXRlLGtpbmQ6MCxkYXRhOm51bGx9LHI9dGhpcy5udW1Db21wcyxuPXRoaXMud2lkdGgsbz10aGlzLmhlaWdodCxnPXRoaXMuYnBjLGM9bipyKmcrNz4+MyxoPXQmJkltYWdlUmVzaXplci5uZWVkc1RvQmVSZXNpemVkKGksYSk7aWYoIWUpe2xldCBlOyJEZXZpY2VHcmF5Ij09PXRoaXMuY29sb3JTcGFjZS5uYW1lJiYxPT09Zz9lPWI6IkRldmljZVJHQiIhPT10aGlzLmNvbG9yU3BhY2UubmFtZXx8OCE9PWd8fHRoaXMubmVlZHNEZWNvZGV8fChlPUQpO2lmKGUmJiF0aGlzLnNtYXNrJiYhdGhpcy5tYXNrJiZpPT09biYmYT09PW8pe2NvbnN0IHI9dGhpcy5nZXRJbWFnZUJ5dGVzKG8qYyx7fSk7aWYodClyZXR1cm4gaD9JbWFnZVJlc2l6ZXIuY3JlYXRlSW1hZ2Uoe2RhdGE6cixraW5kOmUsd2lkdGg6aSxoZWlnaHQ6YSxpbnRlcnBvbGF0ZTp0aGlzLmludGVycG9sYXRlfSx0aGlzLm5lZWRzRGVjb2RlKTp0aGlzLmNyZWF0ZUJpdG1hcChlLG4sbyxyKTtzLmtpbmQ9ZTtzLmRhdGE9cjtpZih0aGlzLm5lZWRzRGVjb2RlKXthc3NlcnQoZT09PWIsIlBERkltYWdlLmNyZWF0ZUltYWdlRGF0YTogVGhlIGltYWdlIG11c3QgYmUgZ3JheXNjYWxlLiIpO2NvbnN0IHQ9cy5kYXRhO2ZvcihsZXQgZT0wLGk9dC5sZW5ndGg7ZTxpO2UrKyl0W2VdXj0yNTV9cmV0dXJuIHN9aWYodGhpcy5pbWFnZSBpbnN0YW5jZW9mIEpwZWdTdHJlYW0mJiF0aGlzLnNtYXNrJiYhdGhpcy5tYXNrJiYhdGhpcy5uZWVkc0RlY29kZSl7bGV0IGU9bypjO2lmKHQmJiFoKXtsZXQgdD0hMTtzd2l0Y2godGhpcy5jb2xvclNwYWNlLm5hbWUpe2Nhc2UiRGV2aWNlR3JheSI6ZSo9NDt0PSEwO2JyZWFrO2Nhc2UiRGV2aWNlUkdCIjplPWUvMyo0O3Q9ITA7YnJlYWs7Y2FzZSJEZXZpY2VDTVlLIjp0PSEwfWlmKHQpe2NvbnN0IHQ9dGhpcy5nZXRJbWFnZUJ5dGVzKGUse2RyYXdXaWR0aDppLGRyYXdIZWlnaHQ6YSxmb3JjZVJHQkE6ITB9KTtyZXR1cm4gdGhpcy5jcmVhdGVCaXRtYXAoRixpLGEsdCl9fWVsc2Ugc3dpdGNoKHRoaXMuY29sb3JTcGFjZS5uYW1lKXtjYXNlIkRldmljZUdyYXkiOmUqPTM7Y2FzZSJEZXZpY2VSR0IiOmNhc2UiRGV2aWNlQ01ZSyI6cy5raW5kPUQ7cy5kYXRhPXRoaXMuZ2V0SW1hZ2VCeXRlcyhlLHtkcmF3V2lkdGg6aSxkcmF3SGVpZ2h0OmEsZm9yY2VSR0I6ITB9KTtyZXR1cm4gaD9JbWFnZVJlc2l6ZXIuY3JlYXRlSW1hZ2Uocyk6c319fWNvbnN0IGw9dGhpcy5nZXRJbWFnZUJ5dGVzKG8qYyx7aW50ZXJuYWw6ITB9KSxDPTB8bC5sZW5ndGgvYyphL28sUT10aGlzLmdldENvbXBvbmVudHMobCk7bGV0IEUsdSxkLGYscCxtO2lmKHQmJiFoKXtkPW5ldyBPZmZzY3JlZW5DYW52YXMoaSxhKTtmPWQuZ2V0Q29udGV4dCgiMmQiKTtwPWYuY3JlYXRlSW1hZ2VEYXRhKGksYSk7bT1wLmRhdGF9cy5raW5kPUY7aWYoZXx8dGhpcy5zbWFza3x8dGhpcy5tYXNrKXt0JiYhaHx8KG09bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGkqYSo0KSk7RT0xO3U9ITA7dGhpcy5maWxsT3BhY2l0eShtLGksYSxDLFEpfWVsc2V7aWYoIXR8fGgpe3Mua2luZD1EO209bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGkqYSozKTtFPTB9ZWxzZXtuZXcgVWludDMyQXJyYXkobS5idWZmZXIpLmZpbGwoRmVhdHVyZVRlc3QuaXNMaXR0bGVFbmRpYW4/NDI3ODE5MDA4MDoyNTUpO0U9MX11PSExfXRoaXMubmVlZHNEZWNvZGUmJnRoaXMuZGVjb2RlQnVmZmVyKFEpO3RoaXMuY29sb3JTcGFjZS5maWxsUmdiKG0sbixvLGksYSxDLGcsUSxFKTt1JiZ0aGlzLnVuZG9QcmVibGVuZChtLGksQyk7aWYodCYmIWgpe2YucHV0SW1hZ2VEYXRhKHAsMCwwKTtyZXR1cm57ZGF0YTpudWxsLHdpZHRoOmksaGVpZ2h0OmEsYml0bWFwOmQudHJhbnNmZXJUb0ltYWdlQml0bWFwKCksaW50ZXJwb2xhdGU6dGhpcy5pbnRlcnBvbGF0ZX19cy5kYXRhPW07cmV0dXJuIGg/SW1hZ2VSZXNpemVyLmNyZWF0ZUltYWdlKHMpOnN9ZmlsbEdyYXlCdWZmZXIoZSl7Y29uc3QgdD10aGlzLm51bUNvbXBzO2lmKDEhPT10KXRocm93IG5ldyBGb3JtYXRFcnJvcihgUmVhZGluZyBncmF5IHNjYWxlIGZyb20gYSBjb2xvciBpbWFnZTogJHt0fWApO2NvbnN0IGk9dGhpcy53aWR0aCxhPXRoaXMuaGVpZ2h0LHM9dGhpcy5icGMscj1pKnQqcys3Pj4zLG49dGhpcy5nZXRJbWFnZUJ5dGVzKGEqcix7aW50ZXJuYWw6ITB9KSxvPXRoaXMuZ2V0Q29tcG9uZW50cyhuKTtsZXQgZyxjO2lmKDE9PT1zKXtjPWkqYTtpZih0aGlzLm5lZWRzRGVjb2RlKWZvcihnPTA7ZzxjOysrZyllW2ddPW9bZ10tMSYyNTU7ZWxzZSBmb3IoZz0wO2c8YzsrK2cpZVtnXT0yNTUmLW9bZ107cmV0dXJufXRoaXMubmVlZHNEZWNvZGUmJnRoaXMuZGVjb2RlQnVmZmVyKG8pO2M9aSphO2NvbnN0IGg9MjU1LygoMTw8cyktMSk7Zm9yKGc9MDtnPGM7KytnKWVbZ109aCpvW2ddfWNyZWF0ZUJpdG1hcChlLHQsaSxhKXtjb25zdCBzPW5ldyBPZmZzY3JlZW5DYW52YXModCxpKSxyPXMuZ2V0Q29udGV4dCgiMmQiKTtsZXQgbjtpZihlPT09RiluPW5ldyBJbWFnZURhdGEoYSx0LGkpO2Vsc2V7bj1yLmNyZWF0ZUltYWdlRGF0YSh0LGkpO2NvbnZlcnRUb1JHQkEoe2tpbmQ6ZSxzcmM6YSxkZXN0Om5ldyBVaW50MzJBcnJheShuLmRhdGEuYnVmZmVyKSx3aWR0aDp0LGhlaWdodDppLGludmVyc2VEZWNvZGU6dGhpcy5uZWVkc0RlY29kZX0pfXIucHV0SW1hZ2VEYXRhKG4sMCwwKTtyZXR1cm57ZGF0YTpudWxsLHdpZHRoOnQsaGVpZ2h0OmksYml0bWFwOnMudHJhbnNmZXJUb0ltYWdlQml0bWFwKCksaW50ZXJwb2xhdGU6dGhpcy5pbnRlcnBvbGF0ZX19Z2V0SW1hZ2VCeXRlcyhlLHtkcmF3V2lkdGg6dCxkcmF3SGVpZ2h0OmksZm9yY2VSR0JBOmE9ITEsZm9yY2VSR0I6cz0hMSxpbnRlcm5hbDpyPSExfSl7dGhpcy5pbWFnZS5yZXNldCgpO3RoaXMuaW1hZ2UuZHJhd1dpZHRoPXR8fHRoaXMud2lkdGg7dGhpcy5pbWFnZS5kcmF3SGVpZ2h0PWl8fHRoaXMuaGVpZ2h0O3RoaXMuaW1hZ2UuZm9yY2VSR0JBPSEhYTt0aGlzLmltYWdlLmZvcmNlUkdCPSEhcztjb25zdCBuPXRoaXMuaW1hZ2UuZ2V0Qnl0ZXMoZSx0aGlzLmlnbm9yZUNvbG9yU3BhY2UpO2lmKHJ8fHRoaXMuaW1hZ2UgaW5zdGFuY2VvZiBEZWNvZGVTdHJlYW0pcmV0dXJuIG47YXNzZXJ0KG4gaW5zdGFuY2VvZiBVaW50OEFycmF5LCdQREZJbWFnZS5nZXRJbWFnZUJ5dGVzOiBVbnN1cHBvcnRlZCAiaW1hZ2VCeXRlcyIgdHlwZS4nKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkobil9fWNvbnN0IERzPU9iamVjdC5mcmVlemUoe21heEltYWdlU2l6ZTotMSxkaXNhYmxlRm9udEZhY2U6ITEsaWdub3JlRXJyb3JzOiExLGlzRXZhbFN1cHBvcnRlZDohMCxpc09mZnNjcmVlbkNhbnZhc1N1cHBvcnRlZDohMSxjYW52YXNNYXhBcmVhSW5CeXRlczotMSxmb250RXh0cmFQcm9wZXJ0aWVzOiExLHVzZVN5c3RlbUZvbnRzOiEwLGNNYXBVcmw6bnVsbCxzdGFuZGFyZEZvbnREYXRhVXJsOm51bGx9KSxGcz0xLFNzPTIsa3M9UHJvbWlzZS5yZXNvbHZlKCk7ZnVuY3Rpb24gbm9ybWFsaXplQmxlbmRNb2RlKGUsdD0hMSl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKGNvbnN0IHQgb2YgZSl7Y29uc3QgZT1ub3JtYWxpemVCbGVuZE1vZGUodCwhMCk7aWYoZSlyZXR1cm4gZX13YXJuKGBVbnN1cHBvcnRlZCBibGVuZCBtb2RlIEFycmF5OiAke2V9YCk7cmV0dXJuInNvdXJjZS1vdmVyIn1pZighKGUgaW5zdGFuY2VvZiBOYW1lKSlyZXR1cm4gdD9udWxsOiJzb3VyY2Utb3ZlciI7c3dpdGNoKGUubmFtZSl7Y2FzZSJOb3JtYWwiOmNhc2UiQ29tcGF0aWJsZSI6cmV0dXJuInNvdXJjZS1vdmVyIjtjYXNlIk11bHRpcGx5IjpyZXR1cm4ibXVsdGlwbHkiO2Nhc2UiU2NyZWVuIjpyZXR1cm4ic2NyZWVuIjtjYXNlIk92ZXJsYXkiOnJldHVybiJvdmVybGF5IjtjYXNlIkRhcmtlbiI6cmV0dXJuImRhcmtlbiI7Y2FzZSJMaWdodGVuIjpyZXR1cm4ibGlnaHRlbiI7Y2FzZSJDb2xvckRvZGdlIjpyZXR1cm4iY29sb3ItZG9kZ2UiO2Nhc2UiQ29sb3JCdXJuIjpyZXR1cm4iY29sb3ItYnVybiI7Y2FzZSJIYXJkTGlnaHQiOnJldHVybiJoYXJkLWxpZ2h0IjtjYXNlIlNvZnRMaWdodCI6cmV0dXJuInNvZnQtbGlnaHQiO2Nhc2UiRGlmZmVyZW5jZSI6cmV0dXJuImRpZmZlcmVuY2UiO2Nhc2UiRXhjbHVzaW9uIjpyZXR1cm4iZXhjbHVzaW9uIjtjYXNlIkh1ZSI6cmV0dXJuImh1ZSI7Y2FzZSJTYXR1cmF0aW9uIjpyZXR1cm4ic2F0dXJhdGlvbiI7Y2FzZSJDb2xvciI6cmV0dXJuImNvbG9yIjtjYXNlIkx1bWlub3NpdHkiOnJldHVybiJsdW1pbm9zaXR5In1pZih0KXJldHVybiBudWxsO3dhcm4oYFVuc3VwcG9ydGVkIGJsZW5kIG1vZGU6ICR7ZS5uYW1lfWApO3JldHVybiJzb3VyY2Utb3ZlciJ9ZnVuY3Rpb24gaW5jcmVtZW50Q2FjaGVkSW1hZ2VNYXNrQ291bnQoZSl7ZS5mbj09PWplJiZlLmFyZ3NbMF0/LmNvdW50PjAmJmUuYXJnc1swXS5jb3VudCsrfWNsYXNzIFRpbWVTbG90TWFuYWdlcntzdGF0aWMgVElNRV9TTE9UX0RVUkFUSU9OX01TPTIwO3N0YXRpYyBDSEVDS19USU1FX0VWRVJZPTEwMDtjb25zdHJ1Y3Rvcigpe3RoaXMucmVzZXQoKX1jaGVjaygpe2lmKCsrdGhpcy5jaGVja2VkPFRpbWVTbG90TWFuYWdlci5DSEVDS19USU1FX0VWRVJZKXJldHVybiExO3RoaXMuY2hlY2tlZD0wO3JldHVybiB0aGlzLmVuZFRpbWU8PURhdGUubm93KCl9cmVzZXQoKXt0aGlzLmVuZFRpbWU9RGF0ZS5ub3coKStUaW1lU2xvdE1hbmFnZXIuVElNRV9TTE9UX0RVUkFUSU9OX01TO3RoaXMuY2hlY2tlZD0wfX1jbGFzcyBQYXJ0aWFsRXZhbHVhdG9ye2NvbnN0cnVjdG9yKHt4cmVmOmUsaGFuZGxlcjp0LHBhZ2VJbmRleDppLGlkRmFjdG9yeTphLGZvbnRDYWNoZTpzLGJ1aWx0SW5DTWFwQ2FjaGU6cixzdGFuZGFyZEZvbnREYXRhQ2FjaGU6bixnbG9iYWxJbWFnZUNhY2hlOm8sc3lzdGVtRm9udENhY2hlOmcsb3B0aW9uczpjPW51bGx9KXt0aGlzLnhyZWY9ZTt0aGlzLmhhbmRsZXI9dDt0aGlzLnBhZ2VJbmRleD1pO3RoaXMuaWRGYWN0b3J5PWE7dGhpcy5mb250Q2FjaGU9czt0aGlzLmJ1aWx0SW5DTWFwQ2FjaGU9cjt0aGlzLnN0YW5kYXJkRm9udERhdGFDYWNoZT1uO3RoaXMuZ2xvYmFsSW1hZ2VDYWNoZT1vO3RoaXMuc3lzdGVtRm9udENhY2hlPWc7dGhpcy5vcHRpb25zPWN8fERzO3RoaXMucGFyc2luZ1R5cGUzRm9udD0hMTt0aGlzLl9yZWdpb25hbEltYWdlQ2FjaGU9bmV3IFJlZ2lvbmFsSW1hZ2VDYWNoZTt0aGlzLl9mZXRjaEJ1aWx0SW5DTWFwQm91bmQ9dGhpcy5mZXRjaEJ1aWx0SW5DTWFwLmJpbmQodGhpcyk7SW1hZ2VSZXNpemVyLnNldE1heEFyZWEodGhpcy5vcHRpb25zLmNhbnZhc01heEFyZWFJbkJ5dGVzKX1nZXQgX3BkZkZ1bmN0aW9uRmFjdG9yeSgpe3JldHVybiBzaGFkb3codGhpcywiX3BkZkZ1bmN0aW9uRmFjdG9yeSIsbmV3IFBERkZ1bmN0aW9uRmFjdG9yeSh7eHJlZjp0aGlzLnhyZWYsaXNFdmFsU3VwcG9ydGVkOnRoaXMub3B0aW9ucy5pc0V2YWxTdXBwb3J0ZWR9KSl9Y2xvbmUoZT1udWxsKXtjb25zdCB0PU9iamVjdC5jcmVhdGUodGhpcyk7dC5vcHRpb25zPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLm9wdGlvbnMsZSk7cmV0dXJuIHR9aGFzQmxlbmRNb2RlcyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIERpY3QpKXJldHVybiExO2lmKGUub2JqSWQmJnQuaGFzKGUub2JqSWQpKXJldHVybiExO2NvbnN0IGk9bmV3IFJlZlNldCh0KTtlLm9iaklkJiZpLnB1dChlLm9iaklkKTtjb25zdCBhPVtlXSxzPXRoaXMueHJlZjtmb3IoO2EubGVuZ3RoOyl7Y29uc3QgZT1hLnNoaWZ0KCksdD1lLmdldCgiRXh0R1N0YXRlIik7aWYodCBpbnN0YW5jZW9mIERpY3QpZm9yKGxldCBlIG9mIHQuZ2V0UmF3VmFsdWVzKCkpe2lmKGUgaW5zdGFuY2VvZiBSZWYpe2lmKGkuaGFzKGUpKWNvbnRpbnVlO3RyeXtlPXMuZmV0Y2goZSl9Y2F0Y2godCl7aS5wdXQoZSk7aW5mbyhgaGFzQmxlbmRNb2RlcyAtIGlnbm9yaW5nIEV4dEdTdGF0ZTogIiR7dH0iLmApO2NvbnRpbnVlfX1pZighKGUgaW5zdGFuY2VvZiBEaWN0KSljb250aW51ZTtlLm9iaklkJiZpLnB1dChlLm9iaklkKTtjb25zdCB0PWUuZ2V0KCJCTSIpO2lmKHQgaW5zdGFuY2VvZiBOYW1lKXtpZigiTm9ybWFsIiE9PXQubmFtZSlyZXR1cm4hMH1lbHNlIGlmKHZvaWQgMCE9PXQmJkFycmF5LmlzQXJyYXkodCkpZm9yKGNvbnN0IGUgb2YgdClpZihlIGluc3RhbmNlb2YgTmFtZSYmIk5vcm1hbCIhPT1lLm5hbWUpcmV0dXJuITB9Y29uc3Qgcj1lLmdldCgiWE9iamVjdCIpO2lmKHIgaW5zdGFuY2VvZiBEaWN0KWZvcihsZXQgZSBvZiByLmdldFJhd1ZhbHVlcygpKXtpZihlIGluc3RhbmNlb2YgUmVmKXtpZihpLmhhcyhlKSljb250aW51ZTt0cnl7ZT1zLmZldGNoKGUpfWNhdGNoKHQpe2kucHV0KGUpO2luZm8oYGhhc0JsZW5kTW9kZXMgLSBpZ25vcmluZyBYT2JqZWN0OiAiJHt0fSIuYCk7Y29udGludWV9fWlmKCEoZSBpbnN0YW5jZW9mIEJhc2VTdHJlYW0pKWNvbnRpbnVlO2UuZGljdC5vYmpJZCYmaS5wdXQoZS5kaWN0Lm9iaklkKTtjb25zdCB0PWUuZGljdC5nZXQoIlJlc291cmNlcyIpO2lmKHQgaW5zdGFuY2VvZiBEaWN0JiYoIXQub2JqSWR8fCFpLmhhcyh0Lm9iaklkKSkpe2EucHVzaCh0KTt0Lm9iaklkJiZpLnB1dCh0Lm9iaklkKX19fWZvcihjb25zdCBlIG9mIGkpdC5wdXQoZSk7cmV0dXJuITF9YXN5bmMgZmV0Y2hCdWlsdEluQ01hcChlKXtjb25zdCB0PXRoaXMuYnVpbHRJbkNNYXBDYWNoZS5nZXQoZSk7aWYodClyZXR1cm4gdDtsZXQgaTtpZihudWxsIT09dGhpcy5vcHRpb25zLmNNYXBVcmwpe2NvbnN0IHQ9YCR7dGhpcy5vcHRpb25zLmNNYXBVcmx9JHtlfS5iY21hcGAsYT1hd2FpdCBmZXRjaCh0KTtpZighYS5vayl0aHJvdyBuZXcgRXJyb3IoYGZldGNoQnVpbHRJbkNNYXA6IGZhaWxlZCB0byBmZXRjaCBmaWxlICIke3R9IiB3aXRoICIke2Euc3RhdHVzVGV4dH0iLmApO2k9e2NNYXBEYXRhOm5ldyBVaW50OEFycmF5KGF3YWl0IGEuYXJyYXlCdWZmZXIoKSksY29tcHJlc3Npb25UeXBlOm1BLkJJTkFSWX19ZWxzZSBpPWF3YWl0IHRoaXMuaGFuZGxlci5zZW5kV2l0aFByb21pc2UoIkZldGNoQnVpbHRJbkNNYXAiLHtuYW1lOmV9KTtpLmNvbXByZXNzaW9uVHlwZSE9PW1BLk5PTkUmJnRoaXMuYnVpbHRJbkNNYXBDYWNoZS5zZXQoZSxpKTtyZXR1cm4gaX1hc3luYyBmZXRjaFN0YW5kYXJkRm9udERhdGEoZSl7Y29uc3QgdD10aGlzLnN0YW5kYXJkRm9udERhdGFDYWNoZS5nZXQoZSk7aWYodClyZXR1cm4gbmV3IFN0cmVhbSh0KTtpZih0aGlzLm9wdGlvbnMudXNlU3lzdGVtRm9udHMmJiJTeW1ib2wiIT09ZSYmIlphcGZEaW5nYmF0cyIhPT1lKXJldHVybiBudWxsO2NvbnN0IGk9V2koKVtlXTtsZXQgYTtpZihudWxsIT09dGhpcy5vcHRpb25zLnN0YW5kYXJkRm9udERhdGFVcmwpe2NvbnN0IGU9YCR7dGhpcy5vcHRpb25zLnN0YW5kYXJkRm9udERhdGFVcmx9JHtpfWAsdD1hd2FpdCBmZXRjaChlKTt0Lm9rP2E9bmV3IFVpbnQ4QXJyYXkoYXdhaXQgdC5hcnJheUJ1ZmZlcigpKTp3YXJuKGBmZXRjaFN0YW5kYXJkRm9udERhdGE6IGZhaWxlZCB0byBmZXRjaCBmaWxlICIke2V9IiB3aXRoICIke3Quc3RhdHVzVGV4dH0iLmApfWVsc2UgdHJ5e2E9YXdhaXQgdGhpcy5oYW5kbGVyLnNlbmRXaXRoUHJvbWlzZSgiRmV0Y2hTdGFuZGFyZEZvbnREYXRhIix7ZmlsZW5hbWU6aX0pfWNhdGNoKGUpe3dhcm4oYGZldGNoU3RhbmRhcmRGb250RGF0YTogZmFpbGVkIHRvIGZldGNoIGZpbGUgIiR7aX0iIHdpdGggIiR7ZX0iLmApfWlmKCFhKXJldHVybiBudWxsO3RoaXMuc3RhbmRhcmRGb250RGF0YUNhY2hlLnNldChlLGEpO3JldHVybiBuZXcgU3RyZWFtKGEpfWFzeW5jIGJ1aWxkRm9ybVhPYmplY3QoZSx0LGksYSxzLHIsbil7Y29uc3Qgbz10LmRpY3QsZz1sb29rdXBNYXRyaXgoby5nZXRBcnJheSgiTWF0cml4IiksbnVsbCksYz1sb29rdXBOb3JtYWxSZWN0KG8uZ2V0QXJyYXkoIkJCb3giKSxudWxsKTtsZXQgaCxsO28uaGFzKCJPQyIpJiYoaD1hd2FpdCB0aGlzLnBhcnNlTWFya2VkQ29udGVudFByb3BzKG8uZ2V0KCJPQyIpLGUpKTt2b2lkIDAhPT1oJiZhLmFkZE9wKEhlLFsiT0MiLGhdKTtjb25zdCBDPW8uZ2V0KCJHcm91cCIpO2lmKEMpe2w9e21hdHJpeDpnLGJib3g6YyxzbWFzazppLGlzb2xhdGVkOiExLGtub2Nrb3V0OiExfTtsZXQgdD1udWxsO2lmKGlzTmFtZShDLmdldCgiUyIpLCJUcmFuc3BhcmVuY3kiKSl7bC5pc29sYXRlZD1DLmdldCgiSSIpfHwhMTtsLmtub2Nrb3V0PUMuZ2V0KCJLIil8fCExO2lmKEMuaGFzKCJDUyIpKXtjb25zdCBpPUMuZ2V0UmF3KCJDUyIpLGE9Q29sb3JTcGFjZS5nZXRDYWNoZWQoaSx0aGlzLnhyZWYsbik7dD1hfHxhd2FpdCB0aGlzLnBhcnNlQ29sb3JTcGFjZSh7Y3M6aSxyZXNvdXJjZXM6ZSxsb2NhbENvbG9yU3BhY2VDYWNoZTpufSl9fWlmKGk/LmJhY2tkcm9wKXt0fHw9Q29sb3JTcGFjZS5zaW5nbGV0b25zLnJnYjtpLmJhY2tkcm9wPXQuZ2V0UmdiKGkuYmFja2Ryb3AsMCl9YS5hZGRPcChPZSxbbF0pfWNvbnN0IFE9Qz9bZyxudWxsXTpbZyxjXTthLmFkZE9wKFRlLFEpO2F3YWl0IHRoaXMuZ2V0T3BlcmF0b3JMaXN0KHtzdHJlYW06dCx0YXNrOnMscmVzb3VyY2VzOm8uZ2V0KCJSZXNvdXJjZXMiKXx8ZSxvcGVyYXRvckxpc3Q6YSxpbml0aWFsU3RhdGU6cn0pO2EuYWRkT3AocWUsW10pO0MmJmEuYWRkT3AoUGUsW2xdKTt2b2lkIDAhPT1oJiZhLmFkZE9wKFllLFtdKX1fc2VuZEltZ0RhdGEoZSx0LGk9ITEpe2NvbnN0IGE9dD9bdC5iaXRtYXB8fHQuZGF0YS5idWZmZXJdOm51bGw7cmV0dXJuIHRoaXMucGFyc2luZ1R5cGUzRm9udHx8aT90aGlzLmhhbmRsZXIuc2VuZCgiY29tbW9ub2JqIixbZSwiSW1hZ2UiLHRdLGEpOnRoaXMuaGFuZGxlci5zZW5kKCJvYmoiLFtlLHRoaXMucGFnZUluZGV4LCJJbWFnZSIsdF0sYSl9YXN5bmMgYnVpbGRQYWludEltYWdlWE9iamVjdCh7cmVzb3VyY2VzOmUsaW1hZ2U6dCxpc0lubGluZTppPSExLG9wZXJhdG9yTGlzdDphLGNhY2hlS2V5OnMsbG9jYWxJbWFnZUNhY2hlOnIsbG9jYWxDb2xvclNwYWNlQ2FjaGU6bn0pe2NvbnN0IG89dC5kaWN0LGc9by5vYmpJZCxjPW8uZ2V0KCJXIiwiV2lkdGgiKSxoPW8uZ2V0KCJIIiwiSGVpZ2h0Iik7aWYoIWN8fCJudW1iZXIiIT10eXBlb2YgY3x8IWh8fCJudW1iZXIiIT10eXBlb2YgaCl7d2FybigiSW1hZ2UgZGltZW5zaW9ucyBhcmUgbWlzc2luZywgb3Igbm90IG51bWJlcnMuIik7cmV0dXJufWNvbnN0IGw9dGhpcy5vcHRpb25zLm1heEltYWdlU2l6ZTtpZigtMSE9PWwmJmMqaD5sKXtjb25zdCBlPSJJbWFnZSBleGNlZWRlZCBtYXhpbXVtIGFsbG93ZWQgc2l6ZSBhbmQgd2FzIHJlbW92ZWQuIjtpZih0aGlzLm9wdGlvbnMuaWdub3JlRXJyb3JzKXt3YXJuKGUpO3JldHVybn10aHJvdyBuZXcgRXJyb3IoZSl9bGV0IEM7by5oYXMoIk9DIikmJihDPWF3YWl0IHRoaXMucGFyc2VNYXJrZWRDb250ZW50UHJvcHMoby5nZXQoIk9DIiksZSkpO2xldCBRLEU7aWYoby5nZXQoIklNIiwiSW1hZ2VNYXNrIil8fCExKXtjb25zdCBlPW8uZ2V0KCJJIiwiSW50ZXJwb2xhdGUiKSxpPWMrNz4+MyxuPXQuZ2V0Qnl0ZXMoaSpoKSxsPW8uZ2V0QXJyYXkoIkQiLCJEZWNvZGUiKTtpZih0aGlzLnBhcnNpbmdUeXBlM0ZvbnQpe1E9UERGSW1hZ2UuY3JlYXRlUmF3TWFzayh7aW1nQXJyYXk6bix3aWR0aDpjLGhlaWdodDpoLGltYWdlSXNGcm9tRGVjb2RlU3RyZWFtOnQgaW5zdGFuY2VvZiBEZWNvZGVTdHJlYW0saW52ZXJzZURlY29kZTpsPy5bMF0+MCxpbnRlcnBvbGF0ZTplfSk7US5jYWNoZWQ9ISFzO0U9W1FdO2EuYWRkSW1hZ2VPcHMoamUsRSxDKTtpZihzKXtjb25zdCBlPXtmbjpqZSxhcmdzOkUsb3B0aW9uYWxDb250ZW50OkN9O3Iuc2V0KHMsZyxlKTtnJiZ0aGlzLl9yZWdpb25hbEltYWdlQ2FjaGUuc2V0KG51bGwsZyxlKX1yZXR1cm59UT1hd2FpdCBQREZJbWFnZS5jcmVhdGVNYXNrKHtpbWdBcnJheTpuLHdpZHRoOmMsaGVpZ2h0OmgsaW1hZ2VJc0Zyb21EZWNvZGVTdHJlYW06dCBpbnN0YW5jZW9mIERlY29kZVN0cmVhbSxpbnZlcnNlRGVjb2RlOmw/LlswXT4wLGludGVycG9sYXRlOmUsaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQ6dGhpcy5vcHRpb25zLmlzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkfSk7aWYoUS5pc1NpbmdsZU9wYXF1ZVBpeGVsKXthLmFkZEltYWdlT3BzKGV0LFtdLEMpO2lmKHMpe2NvbnN0IGU9e2ZuOmV0LGFyZ3M6W10sb3B0aW9uYWxDb250ZW50OkN9O3Iuc2V0KHMsZyxlKTtnJiZ0aGlzLl9yZWdpb25hbEltYWdlQ2FjaGUuc2V0KG51bGwsZyxlKX1yZXR1cm59Y29uc3QgdT1gbWFza18ke3RoaXMuaWRGYWN0b3J5LmNyZWF0ZU9iaklkKCl9YDthLmFkZERlcGVuZGVuY3kodSk7US5kYXRhTGVuPVEuYml0bWFwP1Eud2lkdGgqUS5oZWlnaHQqNDpRLmRhdGEubGVuZ3RoO3RoaXMuX3NlbmRJbWdEYXRhKHUsUSk7RT1be2RhdGE6dSx3aWR0aDpRLndpZHRoLGhlaWdodDpRLmhlaWdodCxpbnRlcnBvbGF0ZTpRLmludGVycG9sYXRlLGNvdW50OjF9XTthLmFkZEltYWdlT3BzKGplLEUsQyk7aWYocyl7Y29uc3QgZT17Zm46amUsYXJnczpFLG9wdGlvbmFsQ29udGVudDpDfTtyLnNldChzLGcsZSk7ZyYmdGhpcy5fcmVnaW9uYWxJbWFnZUNhY2hlLnNldChudWxsLGcsZSl9cmV0dXJufWlmKGkmJmMraDwyMDAmJiFvLmhhcygiU01hc2siKSYmIW8uaGFzKCJNYXNrIikpe3RyeXtjb25zdCBzPW5ldyBQREZJbWFnZSh7eHJlZjp0aGlzLnhyZWYscmVzOmUsaW1hZ2U6dCxpc0lubGluZTppLHBkZkZ1bmN0aW9uRmFjdG9yeTp0aGlzLl9wZGZGdW5jdGlvbkZhY3RvcnksbG9jYWxDb2xvclNwYWNlQ2FjaGU6bn0pO1E9YXdhaXQgcy5jcmVhdGVJbWFnZURhdGEoITAsITEpO2EuaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQ9dGhpcy5vcHRpb25zLmlzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkO2EuYWRkSW1hZ2VPcHMoemUsW1FdLEMpfWNhdGNoKGUpe2NvbnN0IHQ9YFVuYWJsZSB0byBkZWNvZGUgaW5saW5lIGltYWdlOiAiJHtlfSIuYDtpZighdGhpcy5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBuZXcgRXJyb3IodCk7d2Fybih0KX1yZXR1cm59bGV0IHU9YGltZ18ke3RoaXMuaWRGYWN0b3J5LmNyZWF0ZU9iaklkKCl9YCxkPSExO2lmKHRoaXMucGFyc2luZ1R5cGUzRm9udCl1PWAke3RoaXMuaWRGYWN0b3J5LmdldERvY0lkKCl9X3R5cGUzXyR7dX1gO2Vsc2UgaWYocyYmZyl7ZD10aGlzLmdsb2JhbEltYWdlQ2FjaGUuc2hvdWxkQ2FjaGUoZyx0aGlzLnBhZ2VJbmRleCk7aWYoZCl7YXNzZXJ0KCFpLCJDYW5ub3QgY2FjaGUgYW4gaW5saW5lIGltYWdlIGdsb2JhbGx5LiIpO3U9YCR7dGhpcy5pZEZhY3RvcnkuZ2V0RG9jSWQoKX1fJHt1fWB9fWEuYWRkRGVwZW5kZW5jeSh1KTtFPVt1LGMsaF07YS5hZGRJbWFnZU9wcyhWZSxFLEMpO2lmKGQmJihjKmg+MjVlNHx8by5oYXMoIlNNYXNrIil8fG8uaGFzKCJNYXNrIikpKXtjb25zdCBlPWF3YWl0IHRoaXMuaGFuZGxlci5zZW5kV2l0aFByb21pc2UoImNvbW1vbm9iaiIsW3UsIkNvcHlMb2NhbEltYWdlIix7aW1hZ2VSZWY6Z31dKTtpZihlKXt0aGlzLmdsb2JhbEltYWdlQ2FjaGUuc2V0RGF0YShnLHtvYmpJZDp1LGZuOlZlLGFyZ3M6RSxvcHRpb25hbENvbnRlbnQ6QyxieXRlU2l6ZTowfSk7dGhpcy5nbG9iYWxJbWFnZUNhY2hlLmFkZEJ5dGVTaXplKGcsZSk7cmV0dXJufX1QREZJbWFnZS5idWlsZEltYWdlKHt4cmVmOnRoaXMueHJlZixyZXM6ZSxpbWFnZTp0LGlzSW5saW5lOmkscGRmRnVuY3Rpb25GYWN0b3J5OnRoaXMuX3BkZkZ1bmN0aW9uRmFjdG9yeSxsb2NhbENvbG9yU3BhY2VDYWNoZTpufSkudGhlbigoYXN5bmMgZT0+e1E9YXdhaXQgZS5jcmVhdGVJbWFnZURhdGEoITEsdGhpcy5vcHRpb25zLmlzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkKTtRLmRhdGFMZW49US5iaXRtYXA/US53aWR0aCpRLmhlaWdodCo0OlEuZGF0YS5sZW5ndGg7US5yZWY9ZztkJiZ0aGlzLmdsb2JhbEltYWdlQ2FjaGUuYWRkQnl0ZVNpemUoZyxRLmRhdGFMZW4pO3JldHVybiB0aGlzLl9zZW5kSW1nRGF0YSh1LFEsZCl9KSkuY2F0Y2goKGU9Pnt3YXJuKGBVbmFibGUgdG8gZGVjb2RlIGltYWdlICIke3V9IjogIiR7ZX0iLmApO3JldHVybiB0aGlzLl9zZW5kSW1nRGF0YSh1LG51bGwsZCl9KSk7aWYocyl7Y29uc3QgZT17Zm46VmUsYXJnczpFLG9wdGlvbmFsQ29udGVudDpDfTtyLnNldChzLGcsZSk7aWYoZyl7dGhpcy5fcmVnaW9uYWxJbWFnZUNhY2hlLnNldChudWxsLGcsZSk7ZCYmdGhpcy5nbG9iYWxJbWFnZUNhY2hlLnNldERhdGEoZyx7b2JqSWQ6dSxmbjpWZSxhcmdzOkUsb3B0aW9uYWxDb250ZW50OkMsYnl0ZVNpemU6MH0pfX19aGFuZGxlU01hc2soZSx0LGksYSxzLHIpe2NvbnN0IG49ZS5nZXQoIkciKSxvPXtzdWJ0eXBlOmUuZ2V0KCJTIikubmFtZSxiYWNrZHJvcDplLmdldCgiQkMiKX0sZz1lLmdldCgiVFIiKTtpZihpc1BERkZ1bmN0aW9uKGcpKXtjb25zdCBlPXRoaXMuX3BkZkZ1bmN0aW9uRmFjdG9yeS5jcmVhdGUoZyksdD1uZXcgVWludDhBcnJheSgyNTYpLGk9bmV3IEZsb2F0MzJBcnJheSgxKTtmb3IobGV0IGE9MDthPDI1NjthKyspe2lbMF09YS8yNTU7ZShpLDAsaSwwKTt0W2FdPTI1NSppWzBdfDB9by50cmFuc2Zlck1hcD10fXJldHVybiB0aGlzLmJ1aWxkRm9ybVhPYmplY3QodCxuLG8saSxhLHMuc3RhdGUuY2xvbmUoKSxyKX1oYW5kbGVUcmFuc2ZlckZ1bmN0aW9uKGUpe2xldCB0O2lmKEFycmF5LmlzQXJyYXkoZSkpdD1lO2Vsc2V7aWYoIWlzUERGRnVuY3Rpb24oZSkpcmV0dXJuIG51bGw7dD1bZV19Y29uc3QgaT1bXTtsZXQgYT0wLHM9MDtmb3IoY29uc3QgZSBvZiB0KXtjb25zdCB0PXRoaXMueHJlZi5mZXRjaElmUmVmKGUpO2ErKztpZihpc05hbWUodCwiSWRlbnRpdHkiKSl7aS5wdXNoKG51bGwpO2NvbnRpbnVlfWlmKCFpc1BERkZ1bmN0aW9uKHQpKXJldHVybiBudWxsO2NvbnN0IHI9dGhpcy5fcGRmRnVuY3Rpb25GYWN0b3J5LmNyZWF0ZSh0KSxuPW5ldyBVaW50OEFycmF5KDI1Niksbz1uZXcgRmxvYXQzMkFycmF5KDEpO2ZvcihsZXQgZT0wO2U8MjU2O2UrKyl7b1swXT1lLzI1NTtyKG8sMCxvLDApO25bZV09MjU1Km9bMF18MH1pLnB1c2gobik7cysrfXJldHVybiAxIT09YSYmNCE9PWF8fDA9PT1zP251bGw6aX1oYW5kbGVUaWxpbmdUeXBlKGUsdCxpLGEscyxyLG4sbyl7Y29uc3QgZz1uZXcgT3BlcmF0b3JMaXN0LGM9RGljdC5tZXJnZSh7eHJlZjp0aGlzLnhyZWYsZGljdEFycmF5OltzLmdldCgiUmVzb3VyY2VzIiksaV19KTtyZXR1cm4gdGhpcy5nZXRPcGVyYXRvckxpc3Qoe3N0cmVhbTphLHRhc2s6bixyZXNvdXJjZXM6YyxvcGVyYXRvckxpc3Q6Z30pLnRoZW4oKGZ1bmN0aW9uKCl7Y29uc3QgaT1nLmdldElSKCksYT1nZXRUaWxpbmdQYXR0ZXJuSVIoaSxzLHQpO3IuYWRkRGVwZW5kZW5jaWVzKGcuZGVwZW5kZW5jaWVzKTtyLmFkZE9wKGUsYSk7cy5vYmpJZCYmby5zZXQobnVsbCxzLm9iaklkLHtvcGVyYXRvckxpc3RJUjppLGRpY3Q6c30pfSkpLmNhdGNoKChlPT57aWYoIShlIGluc3RhbmNlb2YgQWJvcnRFeGNlcHRpb24pKXtpZighdGhpcy5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBlO3dhcm4oYGhhbmRsZVRpbGluZ1R5cGUgLSBpZ25vcmluZyBwYXR0ZXJuOiAiJHtlfSIuYCl9fSkpfWFzeW5jIGhhbmRsZVNldEZvbnQoZSx0LGksYSxzLHIsbj1udWxsLG89bnVsbCl7Y29uc3QgZz10Py5bMF1pbnN0YW5jZW9mIE5hbWU/dFswXS5uYW1lOm51bGw7bGV0IGM9YXdhaXQgdGhpcy5sb2FkRm9udChnLGksZSxuLG8pO2lmKGMuZm9udC5pc1R5cGUzRm9udCl0cnl7YXdhaXQgYy5sb2FkVHlwZTNEYXRhKHRoaXMsZSxzKTthLmFkZERlcGVuZGVuY2llcyhjLnR5cGUzRGVwZW5kZW5jaWVzKX1jYXRjaChlKXtjPW5ldyBUcmFuc2xhdGVkRm9udCh7bG9hZGVkTmFtZToiZ19mb250X2Vycm9yIixmb250Om5ldyBFcnJvckZvbnQoYFR5cGUzIGZvbnQgbG9hZCBlcnJvcjogJHtlfWApLGRpY3Q6Yy5mb250LGV2YWx1YXRvck9wdGlvbnM6dGhpcy5vcHRpb25zfSl9ci5mb250PWMuZm9udDtjLnNlbmQodGhpcy5oYW5kbGVyKTtyZXR1cm4gYy5sb2FkZWROYW1lfWhhbmRsZVRleHQoZSx0KXtjb25zdCBpPXQuZm9udCxhPWkuY2hhcnNUb0dseXBocyhlKTtpZihpLmRhdGEpeyghISh0LnRleHRSZW5kZXJpbmdNb2RlJncpfHwiUGF0dGVybiI9PT10LmZpbGxDb2xvclNwYWNlLm5hbWV8fGkuZGlzYWJsZUZvbnRGYWNlfHx0aGlzLm9wdGlvbnMuZGlzYWJsZUZvbnRGYWNlKSYmUGFydGlhbEV2YWx1YXRvci5idWlsZEZvbnRQYXRocyhpLGEsdGhpcy5oYW5kbGVyLHRoaXMub3B0aW9ucyl9cmV0dXJuIGF9ZW5zdXJlU3RhdGVGb250KGUpe2lmKGUuZm9udClyZXR1cm47Y29uc3QgdD1uZXcgRm9ybWF0RXJyb3IoIk1pc3Npbmcgc2V0Rm9udCAoVGYpIG9wZXJhdG9yIGJlZm9yZSB0ZXh0IHJlbmRlcmluZyBvcGVyYXRvci4iKTtpZighdGhpcy5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyB0O3dhcm4oYGVuc3VyZVN0YXRlRm9udDogIiR7dH0iLmApfWFzeW5jIHNldEdTdGF0ZSh7cmVzb3VyY2VzOmUsZ1N0YXRlOnQsb3BlcmF0b3JMaXN0OmksY2FjaGVLZXk6YSx0YXNrOnMsc3RhdGVNYW5hZ2VyOnIsbG9jYWxHU3RhdGVDYWNoZTpuLGxvY2FsQ29sb3JTcGFjZUNhY2hlOm99KXtjb25zdCBnPXQub2JqSWQ7bGV0IGM9ITA7Y29uc3QgaD1bXTtsZXQgbD1Qcm9taXNlLnJlc29sdmUoKTtmb3IoY29uc3QgYSBvZiB0LmdldEtleXMoKSl7Y29uc3Qgbj10LmdldChhKTtzd2l0Y2goYSl7Y2FzZSJUeXBlIjpicmVhaztjYXNlIkxXIjpjYXNlIkxDIjpjYXNlIkxKIjpjYXNlIk1MIjpjYXNlIkQiOmNhc2UiUkkiOmNhc2UiRkwiOmNhc2UiQ0EiOmNhc2UiY2EiOmgucHVzaChbYSxuXSk7YnJlYWs7Y2FzZSJGb250IjpjPSExO2w9bC50aGVuKCgoKT0+dGhpcy5oYW5kbGVTZXRGb250KGUsbnVsbCxuWzBdLGkscyxyLnN0YXRlKS50aGVuKChmdW5jdGlvbihlKXtpLmFkZERlcGVuZGVuY3koZSk7aC5wdXNoKFthLFtlLG5bMV1dXSl9KSkpKTticmVhaztjYXNlIkJNIjpoLnB1c2goW2Esbm9ybWFsaXplQmxlbmRNb2RlKG4pXSk7YnJlYWs7Y2FzZSJTTWFzayI6aWYoaXNOYW1lKG4sIk5vbmUiKSl7aC5wdXNoKFthLCExXSk7YnJlYWt9aWYobiBpbnN0YW5jZW9mIERpY3Qpe2M9ITE7bD1sLnRoZW4oKCgpPT50aGlzLmhhbmRsZVNNYXNrKG4sZSxpLHMscixvKSkpO2gucHVzaChbYSwhMF0pfWVsc2Ugd2FybigiVW5zdXBwb3J0ZWQgU01hc2sgdHlwZSIpO2JyZWFrO2Nhc2UiVFIiOmNvbnN0IHQ9dGhpcy5oYW5kbGVUcmFuc2ZlckZ1bmN0aW9uKG4pO2gucHVzaChbYSx0XSk7YnJlYWs7Y2FzZSJPUCI6Y2FzZSJvcCI6Y2FzZSJPUE0iOmNhc2UiQkciOmNhc2UiQkcyIjpjYXNlIlVDUiI6Y2FzZSJVQ1IyIjpjYXNlIlRSMiI6Y2FzZSJIVCI6Y2FzZSJTTSI6Y2FzZSJTQSI6Y2FzZSJBSVMiOmNhc2UiVEsiOmluZm8oImdyYXBoaWMgc3RhdGUgb3BlcmF0b3IgIithKTticmVhaztkZWZhdWx0OmluZm8oIlVua25vd24gZ3JhcGhpYyBzdGF0ZSBvcGVyYXRvciAiK2EpfX1hd2FpdCBsO2gubGVuZ3RoPjAmJmkuYWRkT3AoTkEsW2hdKTtjJiZuLnNldChhLGcsaCl9bG9hZEZvbnQoZSx0LGksYT1udWxsLHM9bnVsbCl7Y29uc3QgZXJyb3JGb250PWFzeW5jKCk9Pm5ldyBUcmFuc2xhdGVkRm9udCh7bG9hZGVkTmFtZToiZ19mb250X2Vycm9yIixmb250Om5ldyBFcnJvckZvbnQoYEZvbnQgIiR7ZX0iIGlzIG5vdCBhdmFpbGFibGUuYCksZGljdDp0LGV2YWx1YXRvck9wdGlvbnM6dGhpcy5vcHRpb25zfSk7bGV0IHI7aWYodCl0IGluc3RhbmNlb2YgUmVmJiYocj10KTtlbHNle2NvbnN0IHQ9aS5nZXQoIkZvbnQiKTt0JiYocj10LmdldFJhdyhlKSl9aWYocil7aWYodGhpcy5wYXJzaW5nVHlwZTNGb250JiZ0aGlzLnR5cGUzRm9udFJlZnMuaGFzKHIpKXJldHVybiBlcnJvckZvbnQoKTtpZih0aGlzLmZvbnRDYWNoZS5oYXMocikpcmV0dXJuIHRoaXMuZm9udENhY2hlLmdldChyKTt0PXRoaXMueHJlZi5mZXRjaElmUmVmKHIpfWlmKCEodCBpbnN0YW5jZW9mIERpY3QpKXtpZighdGhpcy5vcHRpb25zLmlnbm9yZUVycm9ycyYmIXRoaXMucGFyc2luZ1R5cGUzRm9udCl7d2FybihgRm9udCAiJHtlfSIgaXMgbm90IGF2YWlsYWJsZS5gKTtyZXR1cm4gZXJyb3JGb250KCl9d2FybihgRm9udCAiJHtlfSIgaXMgbm90IGF2YWlsYWJsZSAtLSBhdHRlbXB0aW5nIHRvIGZhbGxiYWNrIHRvIGEgZGVmYXVsdCBmb250LmApO3Q9YXx8UGFydGlhbEV2YWx1YXRvci5mYWxsYmFja0ZvbnREaWN0fWlmKHQuY2FjaGVLZXkmJnRoaXMuZm9udENhY2hlLmhhcyh0LmNhY2hlS2V5KSlyZXR1cm4gdGhpcy5mb250Q2FjaGUuZ2V0KHQuY2FjaGVLZXkpO2NvbnN0e3Byb21pc2U6bixyZXNvbHZlOm99PVByb21pc2Uud2l0aFJlc29sdmVycygpO2xldCBnO3RyeXtnPXRoaXMucHJlRXZhbHVhdGVGb250KHQpO2cuY3NzRm9udEluZm89c31jYXRjaChlKXt3YXJuKGBsb2FkRm9udCAtIHByZUV2YWx1YXRlRm9udCBmYWlsZWQ6ICIke2V9Ii5gKTtyZXR1cm4gZXJyb3JGb250KCl9Y29uc3R7ZGVzY3JpcHRvcjpjLGhhc2g6aH09ZyxsPXIgaW5zdGFuY2VvZiBSZWY7bGV0IEM7aWYoaCYmYyBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IGU9Yy5mb250QWxpYXNlc3x8PU9iamVjdC5jcmVhdGUobnVsbCk7aWYoZVtoXSl7Y29uc3QgdD1lW2hdLmFsaWFzUmVmO2lmKGwmJnQmJnRoaXMuZm9udENhY2hlLmhhcyh0KSl7dGhpcy5mb250Q2FjaGUucHV0QWxpYXMocix0KTtyZXR1cm4gdGhpcy5mb250Q2FjaGUuZ2V0KHIpfX1lbHNlIGVbaF09e2ZvbnRJRDp0aGlzLmlkRmFjdG9yeS5jcmVhdGVGb250SWQoKX07bCYmKGVbaF0uYWxpYXNSZWY9cik7Qz1lW2hdLmZvbnRJRH1lbHNlIEM9dGhpcy5pZEZhY3RvcnkuY3JlYXRlRm9udElkKCk7YXNzZXJ0KEM/LnN0YXJ0c1dpdGgoImYiKSwnVGhlICJmb250SUQiIG11c3QgYmUgKGNvcnJlY3RseSkgZGVmaW5lZC4nKTtpZihsKXRoaXMuZm9udENhY2hlLnB1dChyLG4pO2Vsc2V7dC5jYWNoZUtleT1gY2FjaGVLZXlfJHtDfWA7dGhpcy5mb250Q2FjaGUucHV0KHQuY2FjaGVLZXksbil9dC5sb2FkZWROYW1lPWAke3RoaXMuaWRGYWN0b3J5LmdldERvY0lkKCl9XyR7Q31gO3RoaXMudHJhbnNsYXRlRm9udChnKS50aGVuKChlPT57byhuZXcgVHJhbnNsYXRlZEZvbnQoe2xvYWRlZE5hbWU6dC5sb2FkZWROYW1lLGZvbnQ6ZSxkaWN0OnQsZXZhbHVhdG9yT3B0aW9uczp0aGlzLm9wdGlvbnN9KSl9KSkuY2F0Y2goKGU9Pnt3YXJuKGBsb2FkRm9udCAtIHRyYW5zbGF0ZUZvbnQgZmFpbGVkOiAiJHtlfSIuYCk7byhuZXcgVHJhbnNsYXRlZEZvbnQoe2xvYWRlZE5hbWU6dC5sb2FkZWROYW1lLGZvbnQ6bmV3IEVycm9yRm9udChlIGluc3RhbmNlb2YgRXJyb3I/ZS5tZXNzYWdlOmUpLGRpY3Q6dCxldmFsdWF0b3JPcHRpb25zOnRoaXMub3B0aW9uc30pKX0pKTtyZXR1cm4gbn1idWlsZFBhdGgoZSx0LGksYT0hMSl7Y29uc3Qgcz1lLmxlbmd0aC0xO2l8fChpPVtdKTtpZihzPDB8fGUuZm5BcnJheVtzXSE9PXR0KXtpZihhKXt3YXJuKGBFbmNvdW50ZXJlZCBwYXRoIG9wZXJhdG9yICIke3R9IiBpbnNpZGUgb2YgYSB0ZXh0IG9iamVjdC5gKTtlLmFkZE9wKEdBLG51bGwpfWxldCBzO3N3aXRjaCh0KXtjYXNlIEtBOmNvbnN0IGU9aVswXStpWzJdLHQ9aVsxXStpWzNdO3M9W01hdGgubWluKGlbMF0sZSksTWF0aC5taW4oaVsxXSx0KSxNYXRoLm1heChpWzBdLGUpLE1hdGgubWF4KGlbMV0sdCldO2JyZWFrO2Nhc2UgVUE6Y2FzZSBMQTpzPVtpWzBdLGlbMV0saVswXSxpWzFdXTticmVhaztkZWZhdWx0OnM9WzEvMCwxLzAsLTEvMCwtMS8wXX1lLmFkZE9wKHR0LFtbdF0saSxzXSk7YSYmZS5hZGRPcCh4QSxudWxsKX1lbHNle2NvbnN0IGE9ZS5hcmdzQXJyYXlbc107YVswXS5wdXNoKHQpO2FbMV0ucHVzaCguLi5pKTtjb25zdCByPWFbMl07c3dpdGNoKHQpe2Nhc2UgS0E6Y29uc3QgZT1pWzBdK2lbMl0sdD1pWzFdK2lbM107clswXT1NYXRoLm1pbihyWzBdLGlbMF0sZSk7clsxXT1NYXRoLm1pbihyWzFdLGlbMV0sdCk7clsyXT1NYXRoLm1heChyWzJdLGlbMF0sZSk7clszXT1NYXRoLm1heChyWzNdLGlbMV0sdCk7YnJlYWs7Y2FzZSBVQTpjYXNlIExBOnJbMF09TWF0aC5taW4oclswXSxpWzBdKTtyWzFdPU1hdGgubWluKHJbMV0saVsxXSk7clsyXT1NYXRoLm1heChyWzJdLGlbMF0pO3JbM109TWF0aC5tYXgoclszXSxpWzFdKX19fXBhcnNlQ29sb3JTcGFjZSh7Y3M6ZSxyZXNvdXJjZXM6dCxsb2NhbENvbG9yU3BhY2VDYWNoZTppfSl7cmV0dXJuIENvbG9yU3BhY2UucGFyc2VBc3luYyh7Y3M6ZSx4cmVmOnRoaXMueHJlZixyZXNvdXJjZXM6dCxwZGZGdW5jdGlvbkZhY3Rvcnk6dGhpcy5fcGRmRnVuY3Rpb25GYWN0b3J5LGxvY2FsQ29sb3JTcGFjZUNhY2hlOml9KS5jYXRjaCgoZT0+e2lmKGUgaW5zdGFuY2VvZiBBYm9ydEV4Y2VwdGlvbilyZXR1cm4gbnVsbDtpZih0aGlzLm9wdGlvbnMuaWdub3JlRXJyb3JzKXt3YXJuKGBwYXJzZUNvbG9yU3BhY2UgLSBpZ25vcmluZyBDb2xvclNwYWNlOiAiJHtlfSIuYCk7cmV0dXJuIG51bGx9dGhyb3cgZX0pKX1wYXJzZVNoYWRpbmcoe3NoYWRpbmc6ZSxyZXNvdXJjZXM6dCxsb2NhbENvbG9yU3BhY2VDYWNoZTppLGxvY2FsU2hhZGluZ1BhdHRlcm5DYWNoZTphfSl7bGV0IHMscj1hLmdldChlKTtpZihyKXJldHVybiByO3RyeXtzPVBhdHRlcm4ucGFyc2VTaGFkaW5nKGUsdGhpcy54cmVmLHQsdGhpcy5fcGRmRnVuY3Rpb25GYWN0b3J5LGkpLmdldElSKCl9Y2F0Y2godCl7aWYodCBpbnN0YW5jZW9mIEFib3J0RXhjZXB0aW9uKXJldHVybiBudWxsO2lmKHRoaXMub3B0aW9ucy5pZ25vcmVFcnJvcnMpe3dhcm4oYHBhcnNlU2hhZGluZyAtIGlnbm9yaW5nIHNoYWRpbmc6ICIke3R9Ii5gKTthLnNldChlLG51bGwpO3JldHVybiBudWxsfXRocm93IHR9cj1gcGF0dGVybl8ke3RoaXMuaWRGYWN0b3J5LmNyZWF0ZU9iaklkKCl9YDt0aGlzLnBhcnNpbmdUeXBlM0ZvbnQmJihyPWAke3RoaXMuaWRGYWN0b3J5LmdldERvY0lkKCl9X3R5cGUzXyR7cn1gKTthLnNldChlLHIpO3RoaXMucGFyc2luZ1R5cGUzRm9udD90aGlzLmhhbmRsZXIuc2VuZCgiY29tbW9ub2JqIixbciwiUGF0dGVybiIsc10pOnRoaXMuaGFuZGxlci5zZW5kKCJvYmoiLFtyLHRoaXMucGFnZUluZGV4LCJQYXR0ZXJuIixzXSk7cmV0dXJuIHJ9aGFuZGxlQ29sb3JOKGUsdCxpLGEscyxyLG4sbyxnLGMpe2NvbnN0IGg9aS5wb3AoKTtpZihoIGluc3RhbmNlb2YgTmFtZSl7Y29uc3QgbD1zLmdldFJhdyhoLm5hbWUpLEM9bCBpbnN0YW5jZW9mIFJlZiYmZy5nZXRCeVJlZihsKTtpZihDKXRyeXtjb25zdCBzPWEuYmFzZT9hLmJhc2UuZ2V0UmdiKGksMCk6bnVsbCxyPWdldFRpbGluZ1BhdHRlcm5JUihDLm9wZXJhdG9yTGlzdElSLEMuZGljdCxzKTtlLmFkZE9wKHQscik7cmV0dXJufWNhdGNoe31jb25zdCBRPXRoaXMueHJlZi5mZXRjaElmUmVmKGwpO2lmKFEpe2NvbnN0IHM9USBpbnN0YW5jZW9mIEJhc2VTdHJlYW0/US5kaWN0OlEsaD1zLmdldCgiUGF0dGVyblR5cGUiKTtpZihoPT09RnMpe2NvbnN0IG89YS5iYXNlP2EuYmFzZS5nZXRSZ2IoaSwwKTpudWxsO3JldHVybiB0aGlzLmhhbmRsZVRpbGluZ1R5cGUodCxvLHIsUSxzLGUsbixnKX1pZihoPT09U3Mpe2NvbnN0IGk9cy5nZXQoIlNoYWRpbmciKSxhPXRoaXMucGFyc2VTaGFkaW5nKHtzaGFkaW5nOmkscmVzb3VyY2VzOnIsbG9jYWxDb2xvclNwYWNlQ2FjaGU6byxsb2NhbFNoYWRpbmdQYXR0ZXJuQ2FjaGU6Y30pO2lmKGEpe2NvbnN0IGk9bG9va3VwTWF0cml4KHMuZ2V0QXJyYXkoIk1hdHJpeCIpLG51bGwpO2UuYWRkT3AodCxbIlNoYWRpbmciLGEsaV0pfXJldHVybn10aHJvdyBuZXcgRm9ybWF0RXJyb3IoYFVua25vd24gUGF0dGVyblR5cGU6ICR7aH1gKX19dGhyb3cgbmV3IEZvcm1hdEVycm9yKGBVbmtub3duIFBhdHRlcm5OYW1lOiAke2h9YCl9X3BhcnNlVmlzaWJpbGl0eUV4cHJlc3Npb24oZSx0LGkpe2lmKCsrdD4xMCl7d2FybigiVmlzaWJpbGl0eSBleHByZXNzaW9uIGlzIHRvbyBkZWVwbHkgbmVzdGVkIik7cmV0dXJufWNvbnN0IGE9ZS5sZW5ndGgscz10aGlzLnhyZWYuZmV0Y2hJZlJlZihlWzBdKTtpZighKGE8MikmJnMgaW5zdGFuY2VvZiBOYW1lKXtzd2l0Y2gocy5uYW1lKXtjYXNlIkFuZCI6Y2FzZSJPciI6Y2FzZSJOb3QiOmkucHVzaChzLm5hbWUpO2JyZWFrO2RlZmF1bHQ6d2FybihgSW52YWxpZCBvcGVyYXRvciAke3MubmFtZX0gaW4gdmlzaWJpbGl0eSBleHByZXNzaW9uYCk7cmV0dXJufWZvcihsZXQgcz0xO3M8YTtzKyspe2NvbnN0IGE9ZVtzXSxyPXRoaXMueHJlZi5mZXRjaElmUmVmKGEpO2lmKEFycmF5LmlzQXJyYXkocikpe2NvbnN0IGU9W107aS5wdXNoKGUpO3RoaXMuX3BhcnNlVmlzaWJpbGl0eUV4cHJlc3Npb24ocix0LGUpfWVsc2UgYSBpbnN0YW5jZW9mIFJlZiYmaS5wdXNoKGEudG9TdHJpbmcoKSl9fWVsc2Ugd2FybigiSW52YWxpZCB2aXNpYmlsaXR5IGV4cHJlc3Npb24iKX1hc3luYyBwYXJzZU1hcmtlZENvbnRlbnRQcm9wcyhlLHQpe2xldCBpO2lmKGUgaW5zdGFuY2VvZiBOYW1lKXtpPXQuZ2V0KCJQcm9wZXJ0aWVzIikuZ2V0KGUubmFtZSl9ZWxzZXtpZighKGUgaW5zdGFuY2VvZiBEaWN0KSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIk9wdGlvbmFsIGNvbnRlbnQgcHJvcGVydGllcyBtYWxmb3JtZWQuIik7aT1lfWNvbnN0IGE9aS5nZXQoIlR5cGUiKT8ubmFtZTtpZigiT0NHIj09PWEpcmV0dXJue3R5cGU6YSxpZDppLm9iaklkfTtpZigiT0NNRCI9PT1hKXtjb25zdCBlPWkuZ2V0KCJWRSIpO2lmKEFycmF5LmlzQXJyYXkoZSkpe2NvbnN0IHQ9W107dGhpcy5fcGFyc2VWaXNpYmlsaXR5RXhwcmVzc2lvbihlLDAsdCk7aWYodC5sZW5ndGg+MClyZXR1cm57dHlwZToiT0NNRCIsZXhwcmVzc2lvbjp0fX1jb25zdCB0PWkuZ2V0KCJPQ0dzIik7aWYoQXJyYXkuaXNBcnJheSh0KXx8dCBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IGU9W107aWYoQXJyYXkuaXNBcnJheSh0KSlmb3IoY29uc3QgaSBvZiB0KWUucHVzaChpLnRvU3RyaW5nKCkpO2Vsc2UgZS5wdXNoKHQub2JqSWQpO3JldHVybnt0eXBlOmEsaWRzOmUscG9saWN5OmkuZ2V0KCJQIilpbnN0YW5jZW9mIE5hbWU/aS5nZXQoIlAiKS5uYW1lOm51bGwsZXhwcmVzc2lvbjpudWxsfX1pZih0IGluc3RhbmNlb2YgUmVmKXJldHVybnt0eXBlOmEsaWQ6dC50b1N0cmluZygpfX1yZXR1cm4gbnVsbH1nZXRPcGVyYXRvckxpc3Qoe3N0cmVhbTplLHRhc2s6dCxyZXNvdXJjZXM6aSxvcGVyYXRvckxpc3Q6YSxpbml0aWFsU3RhdGU6cz1udWxsLGZhbGxiYWNrRm9udERpY3Q6cj1udWxsfSl7aXx8PURpY3QuZW1wdHk7c3x8PW5ldyBFdmFsU3RhdGU7aWYoIWEpdGhyb3cgbmV3IEVycm9yKCdnZXRPcGVyYXRvckxpc3Q6IG1pc3NpbmcgIm9wZXJhdG9yTGlzdCIgcGFyYW1ldGVyJyk7Y29uc3Qgbj10aGlzLG89dGhpcy54cmVmO2xldCBnPSExO2NvbnN0IGM9bmV3IExvY2FsSW1hZ2VDYWNoZSxoPW5ldyBMb2NhbENvbG9yU3BhY2VDYWNoZSxsPW5ldyBMb2NhbEdTdGF0ZUNhY2hlLEM9bmV3IExvY2FsVGlsaW5nUGF0dGVybkNhY2hlLFE9bmV3IE1hcCxFPWkuZ2V0KCJYT2JqZWN0Iil8fERpY3QuZW1wdHksdT1pLmdldCgiUGF0dGVybiIpfHxEaWN0LmVtcHR5LGQ9bmV3IFN0YXRlTWFuYWdlcihzKSxmPW5ldyBFdmFsdWF0b3JQcmVwcm9jZXNzb3IoZSxvLGQpLHA9bmV3IFRpbWVTbG90TWFuYWdlcjtmdW5jdGlvbiBjbG9zZVBlbmRpbmdSZXN0b3JlT1BTKGUpe2ZvcihsZXQgZT0wLHQ9Zi5zYXZlZFN0YXRlc0RlcHRoO2U8dDtlKyspYS5hZGRPcCh4QSxbXSl9cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbiBwcm9taXNlQm9keShlLHMpe2NvbnN0IG5leHQ9ZnVuY3Rpb24odCl7UHJvbWlzZS5hbGwoW3QsYS5yZWFkeV0pLnRoZW4oKGZ1bmN0aW9uKCl7dHJ5e3Byb21pc2VCb2R5KGUscyl9Y2F0Y2goZSl7cyhlKX19KSxzKX07dC5lbnN1cmVOb3RUZXJtaW5hdGVkKCk7cC5yZXNldCgpO2NvbnN0IG09e307bGV0IHksdyxiLEQsRixTO2Zvcig7ISh5PXAuY2hlY2soKSk7KXttLmFyZ3M9bnVsbDtpZighZi5yZWFkKG0pKWJyZWFrO2xldCBlPW0uYXJncyxzPW0uZm47c3dpdGNoKDB8cyl7Y2FzZSBNZTpTPWVbMF1pbnN0YW5jZW9mIE5hbWU7Rj1lWzBdLm5hbWU7aWYoUyl7Y29uc3QgdD1jLmdldEJ5TmFtZShGKTtpZih0KXthLmFkZEltYWdlT3BzKHQuZm4sdC5hcmdzLHQub3B0aW9uYWxDb250ZW50KTtpbmNyZW1lbnRDYWNoZWRJbWFnZU1hc2tDb3VudCh0KTtlPW51bGw7Y29udGludWV9fW5leHQobmV3IFByb21pc2UoKGZ1bmN0aW9uKGUscyl7aWYoIVMpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJYT2JqZWN0IG11c3QgYmUgcmVmZXJyZWQgdG8gYnkgbmFtZS4iKTtsZXQgcj1FLmdldFJhdyhGKTtpZihyIGluc3RhbmNlb2YgUmVmKXtjb25zdCB0PWMuZ2V0QnlSZWYocil8fG4uX3JlZ2lvbmFsSW1hZ2VDYWNoZS5nZXRCeVJlZihyKTtpZih0KXthLmFkZEltYWdlT3BzKHQuZm4sdC5hcmdzLHQub3B0aW9uYWxDb250ZW50KTtpbmNyZW1lbnRDYWNoZWRJbWFnZU1hc2tDb3VudCh0KTtlKCk7cmV0dXJufWNvbnN0IGk9bi5nbG9iYWxJbWFnZUNhY2hlLmdldERhdGEocixuLnBhZ2VJbmRleCk7aWYoaSl7YS5hZGREZXBlbmRlbmN5KGkub2JqSWQpO2EuYWRkSW1hZ2VPcHMoaS5mbixpLmFyZ3MsaS5vcHRpb25hbENvbnRlbnQpO2UoKTtyZXR1cm59cj1vLmZldGNoKHIpfWlmKCEociBpbnN0YW5jZW9mIEJhc2VTdHJlYW0pKXRocm93IG5ldyBGb3JtYXRFcnJvcigiWE9iamVjdCBzaG91bGQgYmUgYSBzdHJlYW0iKTtjb25zdCBnPXIuZGljdC5nZXQoIlN1YnR5cGUiKTtpZighKGcgaW5zdGFuY2VvZiBOYW1lKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlhPYmplY3Qgc2hvdWxkIGhhdmUgYSBOYW1lIHN1YnR5cGUiKTtpZigiRm9ybSIhPT1nLm5hbWUpaWYoIkltYWdlIiE9PWcubmFtZSl7aWYoIlBTIiE9PWcubmFtZSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYFVuaGFuZGxlZCBYT2JqZWN0IHN1YnR5cGUgJHtnLm5hbWV9YCk7aW5mbygiSWdub3JlZCBYT2JqZWN0IHN1YnR5cGUgUFMiKTtlKCl9ZWxzZSBuLmJ1aWxkUGFpbnRJbWFnZVhPYmplY3Qoe3Jlc291cmNlczppLGltYWdlOnIsb3BlcmF0b3JMaXN0OmEsY2FjaGVLZXk6Rixsb2NhbEltYWdlQ2FjaGU6Yyxsb2NhbENvbG9yU3BhY2VDYWNoZTpofSkudGhlbihlLHMpO2Vsc2V7ZC5zYXZlKCk7bi5idWlsZEZvcm1YT2JqZWN0KGkscixudWxsLGEsdCxkLnN0YXRlLmNsb25lKCksaCkudGhlbigoZnVuY3Rpb24oKXtkLnJlc3RvcmUoKTtlKCl9KSxzKX19KSkuY2F0Y2goKGZ1bmN0aW9uKGUpe2lmKCEoZSBpbnN0YW5jZW9mIEFib3J0RXhjZXB0aW9uKSl7aWYoIW4ub3B0aW9ucy5pZ25vcmVFcnJvcnMpdGhyb3cgZTt3YXJuKGBnZXRPcGVyYXRvckxpc3QgLSBpZ25vcmluZyBYT2JqZWN0OiAiJHtlfSIuYCl9fSkpKTtyZXR1cm47Y2FzZSBzZTp2YXIgaz1lWzFdO25leHQobi5oYW5kbGVTZXRGb250KGksZSxudWxsLGEsdCxkLnN0YXRlLHIpLnRoZW4oKGZ1bmN0aW9uKGUpe2EuYWRkRGVwZW5kZW5jeShlKTthLmFkZE9wKHNlLFtlLGtdKX0pKSk7cmV0dXJuO2Nhc2UgJEE6Zz0hMDticmVhaztjYXNlIEFlOmc9ITE7YnJlYWs7Y2FzZSB4ZTp2YXIgUj1lWzBdLmNhY2hlS2V5O2lmKFIpe2NvbnN0IHQ9Yy5nZXRCeU5hbWUoUik7aWYodCl7YS5hZGRJbWFnZU9wcyh0LmZuLHQuYXJncyx0Lm9wdGlvbmFsQ29udGVudCk7aW5jcmVtZW50Q2FjaGVkSW1hZ2VNYXNrQ291bnQodCk7ZT1udWxsO2NvbnRpbnVlfX1uZXh0KG4uYnVpbGRQYWludEltYWdlWE9iamVjdCh7cmVzb3VyY2VzOmksaW1hZ2U6ZVswXSxpc0lubGluZTohMCxvcGVyYXRvckxpc3Q6YSxjYWNoZUtleTpSLGxvY2FsSW1hZ2VDYWNoZTpjLGxvY2FsQ29sb3JTcGFjZUNhY2hlOmh9KSk7cmV0dXJuO2Nhc2UgaGU6aWYoIWQuc3RhdGUuZm9udCl7bi5lbnN1cmVTdGF0ZUZvbnQoZC5zdGF0ZSk7Y29udGludWV9ZVswXT1uLmhhbmRsZVRleHQoZVswXSxkLnN0YXRlKTticmVhaztjYXNlIGxlOmlmKCFkLnN0YXRlLmZvbnQpe24uZW5zdXJlU3RhdGVGb250KGQuc3RhdGUpO2NvbnRpbnVlfXZhciBOPVtdLEc9ZC5zdGF0ZTtmb3IoY29uc3QgdCBvZiBlWzBdKSJzdHJpbmciPT10eXBlb2YgdD9OLnB1c2goLi4ubi5oYW5kbGVUZXh0KHQsRykpOiJudW1iZXIiPT10eXBlb2YgdCYmTi5wdXNoKHQpO2VbMF09TjtzPWhlO2JyZWFrO2Nhc2UgQ2U6aWYoIWQuc3RhdGUuZm9udCl7bi5lbnN1cmVTdGF0ZUZvbnQoZC5zdGF0ZSk7Y29udGludWV9YS5hZGRPcChjZSk7ZVswXT1uLmhhbmRsZVRleHQoZVswXSxkLnN0YXRlKTtzPWhlO2JyZWFrO2Nhc2UgQmU6aWYoIWQuc3RhdGUuZm9udCl7bi5lbnN1cmVTdGF0ZUZvbnQoZC5zdGF0ZSk7Y29udGludWV9YS5hZGRPcChjZSk7YS5hZGRPcCh0ZSxbZS5zaGlmdCgpXSk7YS5hZGRPcChlZSxbZS5zaGlmdCgpXSk7ZVswXT1uLmhhbmRsZVRleHQoZVswXSxkLnN0YXRlKTtzPWhlO2JyZWFrO2Nhc2UgcmU6ZC5zdGF0ZS50ZXh0UmVuZGVyaW5nTW9kZT1lWzBdO2JyZWFrO2Nhc2UgZGU6e2NvbnN0IHQ9Q29sb3JTcGFjZS5nZXRDYWNoZWQoZVswXSxvLGgpO2lmKHQpe2Quc3RhdGUuZmlsbENvbG9yU3BhY2U9dDtjb250aW51ZX1uZXh0KG4ucGFyc2VDb2xvclNwYWNlKHtjczplWzBdLHJlc291cmNlczppLGxvY2FsQ29sb3JTcGFjZUNhY2hlOmh9KS50aGVuKChmdW5jdGlvbihlKXtlJiYoZC5zdGF0ZS5maWxsQ29sb3JTcGFjZT1lKX0pKSk7cmV0dXJufWNhc2UgdWU6e2NvbnN0IHQ9Q29sb3JTcGFjZS5nZXRDYWNoZWQoZVswXSxvLGgpO2lmKHQpe2Quc3RhdGUuc3Ryb2tlQ29sb3JTcGFjZT10O2NvbnRpbnVlfW5leHQobi5wYXJzZUNvbG9yU3BhY2Uoe2NzOmVbMF0scmVzb3VyY2VzOmksbG9jYWxDb2xvclNwYWNlQ2FjaGU6aH0pLnRoZW4oKGZ1bmN0aW9uKGUpe2UmJihkLnN0YXRlLnN0cm9rZUNvbG9yU3BhY2U9ZSl9KSkpO3JldHVybn1jYXNlIG1lOkQ9ZC5zdGF0ZS5maWxsQ29sb3JTcGFjZTtlPUQuZ2V0UmdiKGUsMCk7cz1GZTticmVhaztjYXNlIGZlOkQ9ZC5zdGF0ZS5zdHJva2VDb2xvclNwYWNlO2U9RC5nZXRSZ2IoZSwwKTtzPURlO2JyZWFrO2Nhc2UgYmU6ZC5zdGF0ZS5maWxsQ29sb3JTcGFjZT1Db2xvclNwYWNlLnNpbmdsZXRvbnMuZ3JheTtlPUNvbG9yU3BhY2Uuc2luZ2xldG9ucy5ncmF5LmdldFJnYihlLDApO3M9RmU7YnJlYWs7Y2FzZSB3ZTpkLnN0YXRlLnN0cm9rZUNvbG9yU3BhY2U9Q29sb3JTcGFjZS5zaW5nbGV0b25zLmdyYXk7ZT1Db2xvclNwYWNlLnNpbmdsZXRvbnMuZ3JheS5nZXRSZ2IoZSwwKTtzPURlO2JyZWFrO2Nhc2Uga2U6ZC5zdGF0ZS5maWxsQ29sb3JTcGFjZT1Db2xvclNwYWNlLnNpbmdsZXRvbnMuY215aztlPUNvbG9yU3BhY2Uuc2luZ2xldG9ucy5jbXlrLmdldFJnYihlLDApO3M9RmU7YnJlYWs7Y2FzZSBTZTpkLnN0YXRlLnN0cm9rZUNvbG9yU3BhY2U9Q29sb3JTcGFjZS5zaW5nbGV0b25zLmNteWs7ZT1Db2xvclNwYWNlLnNpbmdsZXRvbnMuY215ay5nZXRSZ2IoZSwwKTtzPURlO2JyZWFrO2Nhc2UgRmU6ZC5zdGF0ZS5maWxsQ29sb3JTcGFjZT1Db2xvclNwYWNlLnNpbmdsZXRvbnMucmdiO2U9Q29sb3JTcGFjZS5zaW5nbGV0b25zLnJnYi5nZXRSZ2IoZSwwKTticmVhaztjYXNlIERlOmQuc3RhdGUuc3Ryb2tlQ29sb3JTcGFjZT1Db2xvclNwYWNlLnNpbmdsZXRvbnMucmdiO2U9Q29sb3JTcGFjZS5zaW5nbGV0b25zLnJnYi5nZXRSZ2IoZSwwKTticmVhaztjYXNlIHllOkQ9ZC5zdGF0ZS5maWxsQ29sb3JTcGFjZTtpZigiUGF0dGVybiI9PT1ELm5hbWUpe25leHQobi5oYW5kbGVDb2xvck4oYSx5ZSxlLEQsdSxpLHQsaCxDLFEpKTtyZXR1cm59ZT1ELmdldFJnYihlLDApO3M9RmU7YnJlYWs7Y2FzZSBwZTpEPWQuc3RhdGUuc3Ryb2tlQ29sb3JTcGFjZTtpZigiUGF0dGVybiI9PT1ELm5hbWUpe25leHQobi5oYW5kbGVDb2xvck4oYSxwZSxlLEQsdSxpLHQsaCxDLFEpKTtyZXR1cm59ZT1ELmdldFJnYihlLDApO3M9RGU7YnJlYWs7Y2FzZSBSZTp2YXIgeD1pLmdldCgiU2hhZGluZyIpO2lmKCF4KXRocm93IG5ldyBGb3JtYXRFcnJvcigiTm8gc2hhZGluZyByZXNvdXJjZSBmb3VuZCIpO3ZhciBNPXguZ2V0KGVbMF0ubmFtZSk7aWYoIU0pdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJObyBzaGFkaW5nIG9iamVjdCBmb3VuZCIpO2NvbnN0IGY9bi5wYXJzZVNoYWRpbmcoe3NoYWRpbmc6TSxyZXNvdXJjZXM6aSxsb2NhbENvbG9yU3BhY2VDYWNoZTpoLGxvY2FsU2hhZGluZ1BhdHRlcm5DYWNoZTpRfSk7aWYoIWYpY29udGludWU7ZT1bZl07cz1SZTticmVhaztjYXNlIE5BOlM9ZVswXWluc3RhbmNlb2YgTmFtZTtGPWVbMF0ubmFtZTtpZihTKXtjb25zdCB0PWwuZ2V0QnlOYW1lKEYpO2lmKHQpe3QubGVuZ3RoPjAmJmEuYWRkT3AoTkEsW3RdKTtlPW51bGw7Y29udGludWV9fW5leHQobmV3IFByb21pc2UoKGZ1bmN0aW9uKGUscyl7aWYoIVMpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJHU3RhdGUgbXVzdCBiZSByZWZlcnJlZCB0byBieSBuYW1lLiIpO2NvbnN0IHI9aS5nZXQoIkV4dEdTdGF0ZSIpO2lmKCEociBpbnN0YW5jZW9mIERpY3QpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiRXh0R1N0YXRlIHNob3VsZCBiZSBhIGRpY3Rpb25hcnkuIik7Y29uc3Qgbz1yLmdldChGKTtpZighKG8gaW5zdGFuY2VvZiBEaWN0KSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkdTdGF0ZSBzaG91bGQgYmUgYSBkaWN0aW9uYXJ5LiIpO24uc2V0R1N0YXRlKHtyZXNvdXJjZXM6aSxnU3RhdGU6byxvcGVyYXRvckxpc3Q6YSxjYWNoZUtleTpGLHRhc2s6dCxzdGF0ZU1hbmFnZXI6ZCxsb2NhbEdTdGF0ZUNhY2hlOmwsbG9jYWxDb2xvclNwYWNlQ2FjaGU6aH0pLnRoZW4oZSxzKX0pKS5jYXRjaCgoZnVuY3Rpb24oZSl7aWYoIShlIGluc3RhbmNlb2YgQWJvcnRFeGNlcHRpb24pKXtpZighbi5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBlO3dhcm4oYGdldE9wZXJhdG9yTGlzdCAtIGlnbm9yaW5nIEV4dEdTdGF0ZTogIiR7ZX0iLmApfX0pKSk7cmV0dXJuO2Nhc2UgVUE6Y2FzZSBMQTpjYXNlIEpBOmNhc2UgSEE6Y2FzZSBZQTpjYXNlIHZBOmNhc2UgS0E6bi5idWlsZFBhdGgoYSxzLGUsZyk7Y29udGludWU7Y2FzZSBVZTpjYXNlIExlOmNhc2UgdmU6Y2FzZSBLZTpjb250aW51ZTtjYXNlIEhlOmlmKCEoZVswXWluc3RhbmNlb2YgTmFtZSkpe3dhcm4oYEV4cGVjdGVkIG5hbWUgZm9yIGJlZ2luTWFya2VkQ29udGVudFByb3BzIGFyZzA9JHtlWzBdfWApO2EuYWRkT3AoSGUsWyJPQyIsbnVsbF0pO2NvbnRpbnVlfWlmKCJPQyI9PT1lWzBdLm5hbWUpe25leHQobi5wYXJzZU1hcmtlZENvbnRlbnRQcm9wcyhlWzFdLGkpLnRoZW4oKGU9PnthLmFkZE9wKEhlLFsiT0MiLGVdKX0pKS5jYXRjaCgoZT0+e2lmKCEoZSBpbnN0YW5jZW9mIEFib3J0RXhjZXB0aW9uKSl7aWYoIW4ub3B0aW9ucy5pZ25vcmVFcnJvcnMpdGhyb3cgZTt3YXJuKGBnZXRPcGVyYXRvckxpc3QgLSBpZ25vcmluZyBiZWdpbk1hcmtlZENvbnRlbnRQcm9wczogIiR7ZX0iLmApO2EuYWRkT3AoSGUsWyJPQyIsbnVsbF0pfX0pKSk7cmV0dXJufWU9W2VbMF0ubmFtZSxlWzFdaW5zdGFuY2VvZiBEaWN0P2VbMV0uZ2V0KCJNQ0lEIik6bnVsbF07YnJlYWs7ZGVmYXVsdDppZihudWxsIT09ZSl7Zm9yKHc9MCxiPWUubGVuZ3RoO3c8YiYmIShlW3ddaW5zdGFuY2VvZiBEaWN0KTt3KyspO2lmKHc8Yil7d2FybigiZ2V0T3BlcmF0b3JMaXN0IC0gaWdub3Jpbmcgb3BlcmF0b3I6ICIrcyk7Y29udGludWV9fX1hLmFkZE9wKHMsZSl9aWYoeSluZXh0KGtzKTtlbHNle2Nsb3NlUGVuZGluZ1Jlc3RvcmVPUFMoKTtlKCl9fSkpLmNhdGNoKChlPT57aWYoIShlIGluc3RhbmNlb2YgQWJvcnRFeGNlcHRpb24pKXtpZighdGhpcy5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBlO3dhcm4oYGdldE9wZXJhdG9yTGlzdCAtIGlnbm9yaW5nIGVycm9ycyBkdXJpbmcgIiR7dC5uYW1lfSIgdGFzazogIiR7ZX0iLmApO2Nsb3NlUGVuZGluZ1Jlc3RvcmVPUFMoKX19KSl9Z2V0VGV4dENvbnRlbnQoe3N0cmVhbTplLHRhc2s6dCxyZXNvdXJjZXM6cyxzdGF0ZU1hbmFnZXI6cj1udWxsLGluY2x1ZGVNYXJrZWRDb250ZW50Om49ITEsc2luazpvLHNlZW5TdHlsZXM6Zz1uZXcgU2V0LHZpZXdCb3g6YyxsYW5nOmg9bnVsbCxtYXJrZWRDb250ZW50RGF0YTpsPW51bGwsZGlzYWJsZU5vcm1hbGl6YXRpb246Qz0hMSxrZWVwV2hpdGVTcGFjZTpRPSExfSl7c3x8PURpY3QuZW1wdHk7cnx8PW5ldyBTdGF0ZU1hbmFnZXIobmV3IFRleHRTdGF0ZSk7biYmKGx8fD17bGV2ZWw6MH0pO2NvbnN0IEU9e2l0ZW1zOltdLHN0eWxlczpPYmplY3QuY3JlYXRlKG51bGwpLGxhbmc6aH0sdT17aW5pdGlhbGl6ZWQ6ITEsc3RyOltdLHRvdGFsV2lkdGg6MCx0b3RhbEhlaWdodDowLHdpZHRoOjAsaGVpZ2h0OjAsdmVydGljYWw6ITEscHJldlRyYW5zZm9ybTpudWxsLHRleHRBZHZhbmNlU2NhbGU6MCxzcGFjZUluRmxvd01pbjowLHNwYWNlSW5GbG93TWF4OjAsdHJhY2tpbmdTcGFjZU1pbjoxLzAsbmVnYXRpdmVTcGFjZU1heDotMS8wLG5vdEFTcGFjZTotMS8wLHRyYW5zZm9ybTpudWxsLGZvbnROYW1lOm51bGwsaGFzRU9MOiExfSxkPVsiICIsIiAiXTtsZXQgZj0wO2Z1bmN0aW9uIHNhdmVMYXN0Q2hhcihlKXtjb25zdCB0PShmKzEpJTIsaT0iICIhPT1kW2ZdJiYiICI9PT1kW3RdO2RbZl09ZTtmPXQ7cmV0dXJuIVEmJml9ZnVuY3Rpb24gc2hvdWxkQWRkV2hpdGVwc2FjZSgpe3JldHVybiFRJiYiICIhPT1kW2ZdJiYiICI9PT1kWyhmKzEpJTJdfWZ1bmN0aW9uIHJlc2V0TGFzdENoYXJzKCl7ZFswXT1kWzFdPSIgIjtmPTB9Y29uc3QgcD10aGlzLG09dGhpcy54cmVmLHk9W107bGV0IHc9bnVsbDtjb25zdCBiPW5ldyBMb2NhbEltYWdlQ2FjaGUsRD1uZXcgTG9jYWxHU3RhdGVDYWNoZSxGPW5ldyBFdmFsdWF0b3JQcmVwcm9jZXNzb3IoZSxtLHIpO2xldCBTO2Z1bmN0aW9uIHB1c2hXaGl0ZXNwYWNlKHt3aWR0aDplPTAsaGVpZ2h0OnQ9MCx0cmFuc2Zvcm06aT11LnByZXZUcmFuc2Zvcm0sZm9udE5hbWU6YT11LmZvbnROYW1lfSl7RS5pdGVtcy5wdXNoKHtzdHI6IiAiLGRpcjoibHRyIix3aWR0aDplLGhlaWdodDp0LHRyYW5zZm9ybTppLGZvbnROYW1lOmEsaGFzRU9MOiExfSl9ZnVuY3Rpb24gZ2V0Q3VycmVudFRleHRUcmFuc2Zvcm0oKXtjb25zdCBlPVMuZm9udCx0PVtTLmZvbnRTaXplKlMudGV4dEhTY2FsZSwwLDAsUy5mb250U2l6ZSwwLFMudGV4dFJpc2VdO2lmKGUuaXNUeXBlM0ZvbnQmJihTLmZvbnRTaXplPD0xfHxlLmlzQ2hhckJCb3gpJiYhaXNBcnJheUVxdWFsKFMuZm9udE1hdHJpeCxhKSl7Y29uc3QgaT1lLmJib3hbM10tZS5iYm94WzFdO2k+MCYmKHRbM10qPWkqUy5mb250TWF0cml4WzNdKX1yZXR1cm4gVXRpbC50cmFuc2Zvcm0oUy5jdG0sVXRpbC50cmFuc2Zvcm0oUy50ZXh0TWF0cml4LHQpKX1mdW5jdGlvbiBlbnN1cmVUZXh0Q29udGVudEl0ZW0oKXtpZih1LmluaXRpYWxpemVkKXJldHVybiB1O2NvbnN0e2ZvbnQ6ZSxsb2FkZWROYW1lOnR9PVM7aWYoIWcuaGFzKHQpKXtnLmFkZCh0KTtFLnN0eWxlc1t0XT17Zm9udEZhbWlseTplLmZhbGxiYWNrTmFtZSxhc2NlbnQ6ZS5hc2NlbnQsZGVzY2VudDplLmRlc2NlbnQsdmVydGljYWw6ZS52ZXJ0aWNhbH07aWYocC5vcHRpb25zLmZvbnRFeHRyYVByb3BlcnRpZXMmJmUuc3lzdGVtRm9udEluZm8pe2NvbnN0IGk9RS5zdHlsZXNbdF07aS5mb250U3Vic3RpdHV0aW9uPWUuc3lzdGVtRm9udEluZm8uY3NzO2kuZm9udFN1YnN0aXR1dGlvbkxvYWRlZE5hbWU9ZS5zeXN0ZW1Gb250SW5mby5sb2FkZWROYW1lfX11LmZvbnROYW1lPXQ7Y29uc3QgaT11LnRyYW5zZm9ybT1nZXRDdXJyZW50VGV4dFRyYW5zZm9ybSgpO2lmKGUudmVydGljYWwpe3Uud2lkdGg9dS50b3RhbFdpZHRoPU1hdGguaHlwb3QoaVswXSxpWzFdKTt1LmhlaWdodD11LnRvdGFsSGVpZ2h0PTA7dS52ZXJ0aWNhbD0hMH1lbHNle3Uud2lkdGg9dS50b3RhbFdpZHRoPTA7dS5oZWlnaHQ9dS50b3RhbEhlaWdodD1NYXRoLmh5cG90KGlbMl0saVszXSk7dS52ZXJ0aWNhbD0hMX1jb25zdCBhPU1hdGguaHlwb3QoUy50ZXh0TGluZU1hdHJpeFswXSxTLnRleHRMaW5lTWF0cml4WzFdKSxzPU1hdGguaHlwb3QoUy5jdG1bMF0sUy5jdG1bMV0pO3UudGV4dEFkdmFuY2VTY2FsZT1zKmE7Y29uc3R7Zm9udFNpemU6cn09Uzt1LnRyYWNraW5nU3BhY2VNaW49LjEwMipyO3Uubm90QVNwYWNlPS4wMypyO3UubmVnYXRpdmVTcGFjZU1heD0tLjIqcjt1LnNwYWNlSW5GbG93TWluPS4xMDIqcjt1LnNwYWNlSW5GbG93TWF4PS42KnI7dS5oYXNFT0w9ITE7dS5pbml0aWFsaXplZD0hMDtyZXR1cm4gdX1mdW5jdGlvbiB1cGRhdGVBZHZhbmNlU2NhbGUoKXtpZighdS5pbml0aWFsaXplZClyZXR1cm47Y29uc3QgZT1NYXRoLmh5cG90KFMudGV4dExpbmVNYXRyaXhbMF0sUy50ZXh0TGluZU1hdHJpeFsxXSksdD1NYXRoLmh5cG90KFMuY3RtWzBdLFMuY3RtWzFdKSplO2lmKHQhPT11LnRleHRBZHZhbmNlU2NhbGUpe2lmKHUudmVydGljYWwpe3UudG90YWxIZWlnaHQrPXUuaGVpZ2h0KnUudGV4dEFkdmFuY2VTY2FsZTt1LmhlaWdodD0wfWVsc2V7dS50b3RhbFdpZHRoKz11LndpZHRoKnUudGV4dEFkdmFuY2VTY2FsZTt1LndpZHRoPTB9dS50ZXh0QWR2YW5jZVNjYWxlPXR9fWZ1bmN0aW9uIHJ1bkJpZGlUcmFuc2Zvcm0oZSl7bGV0IHQ9ZS5zdHIuam9pbigiIik7Q3x8KHQ9ZnVuY3Rpb24gbm9ybWFsaXplVW5pY29kZShlKXtpZighZ3Qpe2d0PS8oW1x1MDBhMFx1MDBiNVx1MDM3ZVx1MGViM1x1MjAwMC1cdTIwMGFcdTIwMmZcdTIxMjZcdWZiMDAtXHVmYjA0XHVmYjA2XHVmYjIwLVx1ZmIzNlx1ZmIzOC1cdWZiM2NcdWZiM2VcdWZiNDAtXHVmYjQxXHVmYjQzLVx1ZmI0NFx1ZmI0Ni1cdWZiYTFcdWZiYTQtXHVmYmE5XHVmYmFlLVx1ZmJiMVx1ZmJkMy1cdWZiZGNcdWZiZGUtXHVmYmU3XHVmYmVhLVx1ZmJmOFx1ZmJmYy1cdWZiZmRcdWZjMDAtXHVmYzVkXHVmYzY0LVx1ZmNmMVx1ZmNmNS1cdWZkM2RcdWZkODhcdWZkZjRcdWZkZmEtXHVmZGZiXHVmZTcxXHVmZTc3XHVmZTc5XHVmZTdiXHVmZTdkXSspfChcdWZiMDUrKS9ndTtJdD1uZXcgTWFwKFtbIu+shSIsIsW/dCJdXSl9cmV0dXJuIGUucmVwbGFjZUFsbChndCwoKGUsdCxpKT0+dD90Lm5vcm1hbGl6ZSgiTkZLQyIpOkl0LmdldChpKSkpfSh0KSk7Y29uc3QgaT1iaWRpKHQsLTEsZS52ZXJ0aWNhbCk7cmV0dXJue3N0cjppLnN0cixkaXI6aS5kaXIsd2lkdGg6TWF0aC5hYnMoZS50b3RhbFdpZHRoKSxoZWlnaHQ6TWF0aC5hYnMoZS50b3RhbEhlaWdodCksdHJhbnNmb3JtOmUudHJhbnNmb3JtLGZvbnROYW1lOmUuZm9udE5hbWUsaGFzRU9MOmUuaGFzRU9MfX1hc3luYyBmdW5jdGlvbiBoYW5kbGVTZXRGb250KGUsaSl7Y29uc3Qgcj1hd2FpdCBwLmxvYWRGb250KGUsaSxzKTtpZihyLmZvbnQuaXNUeXBlM0ZvbnQpdHJ5e2F3YWl0IHIubG9hZFR5cGUzRGF0YShwLHMsdCl9Y2F0Y2h7fVMubG9hZGVkTmFtZT1yLmxvYWRlZE5hbWU7Uy5mb250PXIuZm9udDtTLmZvbnRNYXRyaXg9ci5mb250LmZvbnRNYXRyaXh8fGF9ZnVuY3Rpb24gYXBwbHlJbnZlcnNlUm90YXRpb24oZSx0LGkpe2NvbnN0IGE9TWF0aC5oeXBvdChpWzBdLGlbMV0pO3JldHVyblsoaVswXSplK2lbMV0qdCkvYSwoaVsyXSplK2lbM10qdCkvYV19ZnVuY3Rpb24gY29tcGFyZVdpdGhMYXN0UG9zaXRpb24oZSl7Y29uc3QgdD1nZXRDdXJyZW50VGV4dFRyYW5zZm9ybSgpO2xldCBpPXRbNF0sYT10WzVdO2lmKFMuZm9udD8udmVydGljYWwpe2lmKGk8Y1swXXx8aT5jWzJdfHxhK2U8Y1sxXXx8YT5jWzNdKXJldHVybiExfWVsc2UgaWYoaStlPGNbMF18fGk+Y1syXXx8YTxjWzFdfHxhPmNbM10pcmV0dXJuITE7aWYoIVMuZm9udHx8IXUucHJldlRyYW5zZm9ybSlyZXR1cm4hMDtsZXQgcz11LnByZXZUcmFuc2Zvcm1bNF0scj11LnByZXZUcmFuc2Zvcm1bNV07aWYocz09PWkmJnI9PT1hKXJldHVybiEwO2xldCBuPS0xO3RbMF0mJjA9PT10WzFdJiYwPT09dFsyXT9uPXRbMF0+MD8wOjE4MDp0WzFdJiYwPT09dFswXSYmMD09PXRbM10mJihuPXRbMV0+MD85MDoyNzApO3N3aXRjaChuKXtjYXNlIDA6YnJlYWs7Y2FzZSA5MDpbaSxhXT1bYSxpXTtbcyxyXT1bcixzXTticmVhaztjYXNlIDE4MDpbaSxhLHMscl09Wy1pLC1hLC1zLC1yXTticmVhaztjYXNlIDI3MDpbaSxhXT1bLWEsLWldO1tzLHJdPVstciwtc107YnJlYWs7ZGVmYXVsdDpbaSxhXT1hcHBseUludmVyc2VSb3RhdGlvbihpLGEsdCk7W3Mscl09YXBwbHlJbnZlcnNlUm90YXRpb24ocyxyLHUucHJldlRyYW5zZm9ybSl9aWYoUy5mb250LnZlcnRpY2FsKXtjb25zdCBlPShyLWEpL3UudGV4dEFkdmFuY2VTY2FsZSx0PWktcyxuPU1hdGguc2lnbih1LmhlaWdodCk7aWYoZTxuKnUubmVnYXRpdmVTcGFjZU1heCl7aWYoTWF0aC5hYnModCk+LjUqdS53aWR0aCl7YXBwZW5kRU9MKCk7cmV0dXJuITB9cmVzZXRMYXN0Q2hhcnMoKTtmbHVzaFRleHRDb250ZW50SXRlbSgpO3JldHVybiEwfWlmKE1hdGguYWJzKHQpPnUud2lkdGgpe2FwcGVuZEVPTCgpO3JldHVybiEwfWU8PW4qdS5ub3RBU3BhY2UmJnJlc2V0TGFzdENoYXJzKCk7aWYoZTw9bip1LnRyYWNraW5nU3BhY2VNaW4paWYoc2hvdWxkQWRkV2hpdGVwc2FjZSgpKXtyZXNldExhc3RDaGFycygpO2ZsdXNoVGV4dENvbnRlbnRJdGVtKCk7cHVzaFdoaXRlc3BhY2Uoe2hlaWdodDpNYXRoLmFicyhlKX0pfWVsc2UgdS5oZWlnaHQrPWU7ZWxzZSBpZighYWRkRmFrZVNwYWNlcyhlLHUucHJldlRyYW5zZm9ybSxuKSlpZigwPT09dS5zdHIubGVuZ3RoKXtyZXNldExhc3RDaGFycygpO3B1c2hXaGl0ZXNwYWNlKHtoZWlnaHQ6TWF0aC5hYnMoZSl9KX1lbHNlIHUuaGVpZ2h0Kz1lO01hdGguYWJzKHQpPi4yNSp1LndpZHRoJiZmbHVzaFRleHRDb250ZW50SXRlbSgpO3JldHVybiEwfWNvbnN0IG89KGktcykvdS50ZXh0QWR2YW5jZVNjYWxlLGc9YS1yLGg9TWF0aC5zaWduKHUud2lkdGgpO2lmKG88aCp1Lm5lZ2F0aXZlU3BhY2VNYXgpe2lmKE1hdGguYWJzKGcpPi41KnUuaGVpZ2h0KXthcHBlbmRFT0woKTtyZXR1cm4hMH1yZXNldExhc3RDaGFycygpO2ZsdXNoVGV4dENvbnRlbnRJdGVtKCk7cmV0dXJuITB9aWYoTWF0aC5hYnMoZyk+dS5oZWlnaHQpe2FwcGVuZEVPTCgpO3JldHVybiEwfW88PWgqdS5ub3RBU3BhY2UmJnJlc2V0TGFzdENoYXJzKCk7aWYobzw9aCp1LnRyYWNraW5nU3BhY2VNaW4paWYoc2hvdWxkQWRkV2hpdGVwc2FjZSgpKXtyZXNldExhc3RDaGFycygpO2ZsdXNoVGV4dENvbnRlbnRJdGVtKCk7cHVzaFdoaXRlc3BhY2Uoe3dpZHRoOk1hdGguYWJzKG8pfSl9ZWxzZSB1LndpZHRoKz1vO2Vsc2UgaWYoIWFkZEZha2VTcGFjZXMobyx1LnByZXZUcmFuc2Zvcm0saCkpaWYoMD09PXUuc3RyLmxlbmd0aCl7cmVzZXRMYXN0Q2hhcnMoKTtwdXNoV2hpdGVzcGFjZSh7d2lkdGg6TWF0aC5hYnMobyl9KX1lbHNlIHUud2lkdGgrPW87TWF0aC5hYnMoZyk+LjI1KnUuaGVpZ2h0JiZmbHVzaFRleHRDb250ZW50SXRlbSgpO3JldHVybiEwfWZ1bmN0aW9uIGJ1aWxkVGV4dENvbnRlbnRJdGVtKHtjaGFyczplLGV4dHJhU3BhY2luZzp0fSl7Y29uc3QgaT1TLmZvbnQ7aWYoIWUpe2NvbnN0IGU9Uy5jaGFyU3BhY2luZyt0O2UmJihpLnZlcnRpY2FsP1MudHJhbnNsYXRlVGV4dE1hdHJpeCgwLC1lKTpTLnRyYW5zbGF0ZVRleHRNYXRyaXgoZSpTLnRleHRIU2NhbGUsMCkpO1EmJmNvbXBhcmVXaXRoTGFzdFBvc2l0aW9uKDApO3JldHVybn1jb25zdCBhPWkuY2hhcnNUb0dseXBocyhlKSxzPVMuZm9udE1hdHJpeFswXSpTLmZvbnRTaXplO2ZvcihsZXQgZT0wLHI9YS5sZW5ndGg7ZTxyO2UrKyl7Y29uc3Qgbj1hW2VdLHtjYXRlZ29yeTpvfT1uO2lmKG8uaXNJbnZpc2libGVGb3JtYXRNYXJrKWNvbnRpbnVlO2xldCBnPVMuY2hhclNwYWNpbmcrKGUrMT09PXI/dDowKSxjPW4ud2lkdGg7aS52ZXJ0aWNhbCYmKGM9bi52bWV0cmljP24udm1ldHJpY1swXTotYyk7bGV0IGg9YypzO2lmKCFRJiZvLmlzV2hpdGVzcGFjZSl7aWYoaS52ZXJ0aWNhbCl7Zys9LWgrUy53b3JkU3BhY2luZztTLnRyYW5zbGF0ZVRleHRNYXRyaXgoMCwtZyl9ZWxzZXtnKz1oK1Mud29yZFNwYWNpbmc7Uy50cmFuc2xhdGVUZXh0TWF0cml4KGcqUy50ZXh0SFNjYWxlLDApfXNhdmVMYXN0Q2hhcigiICIpO2NvbnRpbnVlfWlmKCFvLmlzWmVyb1dpZHRoRGlhY3JpdGljJiYhY29tcGFyZVdpdGhMYXN0UG9zaXRpb24oaCkpe2kudmVydGljYWw/Uy50cmFuc2xhdGVUZXh0TWF0cml4KDAsaCk6Uy50cmFuc2xhdGVUZXh0TWF0cml4KGgqUy50ZXh0SFNjYWxlLDApO2NvbnRpbnVlfWNvbnN0IGw9ZW5zdXJlVGV4dENvbnRlbnRJdGVtKCk7by5pc1plcm9XaWR0aERpYWNyaXRpYyYmKGg9MCk7aWYoaS52ZXJ0aWNhbCl7Uy50cmFuc2xhdGVUZXh0TWF0cml4KDAsaCk7aD1NYXRoLmFicyhoKTtsLmhlaWdodCs9aH1lbHNle2gqPVMudGV4dEhTY2FsZTtTLnRyYW5zbGF0ZVRleHRNYXRyaXgoaCwwKTtsLndpZHRoKz1ofWgmJihsLnByZXZUcmFuc2Zvcm09Z2V0Q3VycmVudFRleHRUcmFuc2Zvcm0oKSk7Y29uc3QgQz1uLnVuaWNvZGU7c2F2ZUxhc3RDaGFyKEMpJiZsLnN0ci5wdXNoKCIgIik7bC5zdHIucHVzaChDKTtnJiYoaS52ZXJ0aWNhbD9TLnRyYW5zbGF0ZVRleHRNYXRyaXgoMCwtZyk6Uy50cmFuc2xhdGVUZXh0TWF0cml4KGcqUy50ZXh0SFNjYWxlLDApKX19ZnVuY3Rpb24gYXBwZW5kRU9MKCl7cmVzZXRMYXN0Q2hhcnMoKTtpZih1LmluaXRpYWxpemVkKXt1Lmhhc0VPTD0hMDtmbHVzaFRleHRDb250ZW50SXRlbSgpfWVsc2UgRS5pdGVtcy5wdXNoKHtzdHI6IiIsZGlyOiJsdHIiLHdpZHRoOjAsaGVpZ2h0OjAsdHJhbnNmb3JtOmdldEN1cnJlbnRUZXh0VHJhbnNmb3JtKCksZm9udE5hbWU6Uy5sb2FkZWROYW1lLGhhc0VPTDohMH0pfWZ1bmN0aW9uIGFkZEZha2VTcGFjZXMoZSx0LGkpe2lmKGkqdS5zcGFjZUluRmxvd01pbjw9ZSYmZTw9aSp1LnNwYWNlSW5GbG93TWF4KXtpZih1LmluaXRpYWxpemVkKXtyZXNldExhc3RDaGFycygpO3Uuc3RyLnB1c2goIiAiKX1yZXR1cm4hMX1jb25zdCBhPXUuZm9udE5hbWU7bGV0IHM9MDtpZih1LnZlcnRpY2FsKXtzPWU7ZT0wfWZsdXNoVGV4dENvbnRlbnRJdGVtKCk7cmVzZXRMYXN0Q2hhcnMoKTtwdXNoV2hpdGVzcGFjZSh7d2lkdGg6TWF0aC5hYnMoZSksaGVpZ2h0Ok1hdGguYWJzKHMpLHRyYW5zZm9ybTp0fHxnZXRDdXJyZW50VGV4dFRyYW5zZm9ybSgpLGZvbnROYW1lOmF9KTtyZXR1cm4hMH1mdW5jdGlvbiBmbHVzaFRleHRDb250ZW50SXRlbSgpe2lmKHUuaW5pdGlhbGl6ZWQmJnUuc3RyKXt1LnZlcnRpY2FsP3UudG90YWxIZWlnaHQrPXUuaGVpZ2h0KnUudGV4dEFkdmFuY2VTY2FsZTp1LnRvdGFsV2lkdGgrPXUud2lkdGgqdS50ZXh0QWR2YW5jZVNjYWxlO0UuaXRlbXMucHVzaChydW5CaWRpVHJhbnNmb3JtKHUpKTt1LmluaXRpYWxpemVkPSExO3Uuc3RyLmxlbmd0aD0wfX1mdW5jdGlvbiBlbnF1ZXVlQ2h1bmsoZT0hMSl7Y29uc3QgdD1FLml0ZW1zLmxlbmd0aDtpZigwIT09dCYmIShlJiZ0PDEwKSl7by5lbnF1ZXVlKEUsdCk7RS5pdGVtcz1bXTtFLnN0eWxlcz1PYmplY3QuY3JlYXRlKG51bGwpfX1jb25zdCBrPW5ldyBUaW1lU2xvdE1hbmFnZXI7cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbiBwcm9taXNlQm9keShlLGEpe2NvbnN0IG5leHQ9ZnVuY3Rpb24odCl7ZW5xdWV1ZUNodW5rKCEwKTtQcm9taXNlLmFsbChbdCxvLnJlYWR5XSkudGhlbigoZnVuY3Rpb24oKXt0cnl7cHJvbWlzZUJvZHkoZSxhKX1jYXRjaChlKXthKGUpfX0pLGEpfTt0LmVuc3VyZU5vdFRlcm1pbmF0ZWQoKTtrLnJlc2V0KCk7Y29uc3QgdT17fTtsZXQgZCxmPVtdO2Zvcig7IShkPWsuY2hlY2soKSk7KXtmLmxlbmd0aD0wO3UuYXJncz1mO2lmKCFGLnJlYWQodSkpYnJlYWs7Y29uc3QgZT1TO1M9ci5zdGF0ZTtjb25zdCBhPXUuZm47Zj11LmFyZ3M7c3dpdGNoKDB8YSl7Y2FzZSBzZTp2YXIgUj1mWzBdLm5hbWUsTj1mWzFdO2lmKFMuZm9udCYmUj09PVMuZm9udE5hbWUmJk49PT1TLmZvbnRTaXplKWJyZWFrO2ZsdXNoVGV4dENvbnRlbnRJdGVtKCk7Uy5mb250TmFtZT1SO1MuZm9udFNpemU9TjtuZXh0KGhhbmRsZVNldEZvbnQoUixudWxsKSk7cmV0dXJuO2Nhc2UgbmU6Uy50ZXh0UmlzZT1mWzBdO2JyZWFrO2Nhc2UgaWU6Uy50ZXh0SFNjYWxlPWZbMF0vMTAwO2JyZWFrO2Nhc2UgYWU6Uy5sZWFkaW5nPWZbMF07YnJlYWs7Y2FzZSBvZTpTLnRyYW5zbGF0ZVRleHRMaW5lTWF0cml4KGZbMF0sZlsxXSk7Uy50ZXh0TWF0cml4PVMudGV4dExpbmVNYXRyaXguc2xpY2UoKTticmVhaztjYXNlIGdlOlMubGVhZGluZz0tZlsxXTtTLnRyYW5zbGF0ZVRleHRMaW5lTWF0cml4KGZbMF0sZlsxXSk7Uy50ZXh0TWF0cml4PVMudGV4dExpbmVNYXRyaXguc2xpY2UoKTticmVhaztjYXNlIGNlOlMuY2FycmlhZ2VSZXR1cm4oKTticmVhaztjYXNlIEllOlMuc2V0VGV4dE1hdHJpeChmWzBdLGZbMV0sZlsyXSxmWzNdLGZbNF0sZls1XSk7Uy5zZXRUZXh0TGluZU1hdHJpeChmWzBdLGZbMV0sZlsyXSxmWzNdLGZbNF0sZls1XSk7dXBkYXRlQWR2YW5jZVNjYWxlKCk7YnJlYWs7Y2FzZSBlZTpTLmNoYXJTcGFjaW5nPWZbMF07YnJlYWs7Y2FzZSB0ZTpTLndvcmRTcGFjaW5nPWZbMF07YnJlYWs7Y2FzZSAkQTpTLnRleHRNYXRyaXg9aS5zbGljZSgpO1MudGV4dExpbmVNYXRyaXg9aS5zbGljZSgpO2JyZWFrO2Nhc2UgbGU6aWYoIXIuc3RhdGUuZm9udCl7cC5lbnN1cmVTdGF0ZUZvbnQoci5zdGF0ZSk7Y29udGludWV9Y29uc3QgYT0oUy5mb250LnZlcnRpY2FsPzE6LTEpKlMuZm9udFNpemUvMWUzLHU9ZlswXTtmb3IobGV0IGU9MCx0PXUubGVuZ3RoO2U8dDtlKyspe2NvbnN0IHQ9dVtlXTtpZigic3RyaW5nIj09dHlwZW9mIHQpeS5wdXNoKHQpO2Vsc2UgaWYoIm51bWJlciI9PXR5cGVvZiB0JiYwIT09dCl7Y29uc3QgZT15LmpvaW4oIiIpO3kubGVuZ3RoPTA7YnVpbGRUZXh0Q29udGVudEl0ZW0oe2NoYXJzOmUsZXh0cmFTcGFjaW5nOnQqYX0pfX1pZih5Lmxlbmd0aD4wKXtjb25zdCBlPXkuam9pbigiIik7eS5sZW5ndGg9MDtidWlsZFRleHRDb250ZW50SXRlbSh7Y2hhcnM6ZSxleHRyYVNwYWNpbmc6MH0pfWJyZWFrO2Nhc2UgaGU6aWYoIXIuc3RhdGUuZm9udCl7cC5lbnN1cmVTdGF0ZUZvbnQoci5zdGF0ZSk7Y29udGludWV9YnVpbGRUZXh0Q29udGVudEl0ZW0oe2NoYXJzOmZbMF0sZXh0cmFTcGFjaW5nOjB9KTticmVhaztjYXNlIENlOmlmKCFyLnN0YXRlLmZvbnQpe3AuZW5zdXJlU3RhdGVGb250KHIuc3RhdGUpO2NvbnRpbnVlfVMuY2FycmlhZ2VSZXR1cm4oKTtidWlsZFRleHRDb250ZW50SXRlbSh7Y2hhcnM6ZlswXSxleHRyYVNwYWNpbmc6MH0pO2JyZWFrO2Nhc2UgQmU6aWYoIXIuc3RhdGUuZm9udCl7cC5lbnN1cmVTdGF0ZUZvbnQoci5zdGF0ZSk7Y29udGludWV9Uy53b3JkU3BhY2luZz1mWzBdO1MuY2hhclNwYWNpbmc9ZlsxXTtTLmNhcnJpYWdlUmV0dXJuKCk7YnVpbGRUZXh0Q29udGVudEl0ZW0oe2NoYXJzOmZbMl0sZXh0cmFTcGFjaW5nOjB9KTticmVhaztjYXNlIE1lOmZsdXNoVGV4dENvbnRlbnRJdGVtKCk7d3x8KHc9cy5nZXQoIlhPYmplY3QiKXx8RGljdC5lbXB0eSk7dmFyIEc9ZlswXWluc3RhbmNlb2YgTmFtZSx4PWZbMF0ubmFtZTtpZihHJiZiLmdldEJ5TmFtZSh4KSlicmVhaztuZXh0KG5ldyBQcm9taXNlKChmdW5jdGlvbihlLGkpe2lmKCFHKXRocm93IG5ldyBGb3JtYXRFcnJvcigiWE9iamVjdCBtdXN0IGJlIHJlZmVycmVkIHRvIGJ5IG5hbWUuIik7bGV0IGE9dy5nZXRSYXcoeCk7aWYoYSBpbnN0YW5jZW9mIFJlZil7aWYoYi5nZXRCeVJlZihhKSl7ZSgpO3JldHVybn1pZihwLmdsb2JhbEltYWdlQ2FjaGUuZ2V0RGF0YShhLHAucGFnZUluZGV4KSl7ZSgpO3JldHVybn1hPW0uZmV0Y2goYSl9aWYoIShhIGluc3RhbmNlb2YgQmFzZVN0cmVhbSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJYT2JqZWN0IHNob3VsZCBiZSBhIHN0cmVhbSIpO2NvbnN0IEU9YS5kaWN0LmdldCgiU3VidHlwZSIpO2lmKCEoRSBpbnN0YW5jZW9mIE5hbWUpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiWE9iamVjdCBzaG91bGQgaGF2ZSBhIE5hbWUgc3VidHlwZSIpO2lmKCJGb3JtIiE9PUUubmFtZSl7Yi5zZXQoeCxhLmRpY3Qub2JqSWQsITApO2UoKTtyZXR1cm59Y29uc3QgdT1yLnN0YXRlLmNsb25lKCksZD1uZXcgU3RhdGVNYW5hZ2VyKHUpLGY9bG9va3VwTWF0cml4KGEuZGljdC5nZXRBcnJheSgiTWF0cml4IiksbnVsbCk7ZiYmZC50cmFuc2Zvcm0oZik7ZW5xdWV1ZUNodW5rKCk7Y29uc3QgeT17ZW5xdWV1ZUludm9rZWQ6ITEsZW5xdWV1ZShlLHQpe3RoaXMuZW5xdWV1ZUludm9rZWQ9ITA7by5lbnF1ZXVlKGUsdCl9LGdldCBkZXNpcmVkU2l6ZSgpe3JldHVybiBvLmRlc2lyZWRTaXplfSxnZXQgcmVhZHkoKXtyZXR1cm4gby5yZWFkeX19O3AuZ2V0VGV4dENvbnRlbnQoe3N0cmVhbTphLHRhc2s6dCxyZXNvdXJjZXM6YS5kaWN0LmdldCgiUmVzb3VyY2VzIil8fHMsc3RhdGVNYW5hZ2VyOmQsaW5jbHVkZU1hcmtlZENvbnRlbnQ6bixzaW5rOnksc2VlblN0eWxlczpnLHZpZXdCb3g6YyxsYW5nOmgsbWFya2VkQ29udGVudERhdGE6bCxkaXNhYmxlTm9ybWFsaXphdGlvbjpDLGtlZXBXaGl0ZVNwYWNlOlF9KS50aGVuKChmdW5jdGlvbigpe3kuZW5xdWV1ZUludm9rZWR8fGIuc2V0KHgsYS5kaWN0Lm9iaklkLCEwKTtlKCl9KSxpKX0pKS5jYXRjaCgoZnVuY3Rpb24oZSl7aWYoIShlIGluc3RhbmNlb2YgQWJvcnRFeGNlcHRpb24pKXtpZighcC5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBlO3dhcm4oYGdldFRleHRDb250ZW50IC0gaWdub3JpbmcgWE9iamVjdDogIiR7ZX0iLmApfX0pKSk7cmV0dXJuO2Nhc2UgTkE6Rz1mWzBdaW5zdGFuY2VvZiBOYW1lO3g9ZlswXS5uYW1lO2lmKEcmJkQuZ2V0QnlOYW1lKHgpKWJyZWFrO25leHQobmV3IFByb21pc2UoKGZ1bmN0aW9uKGUsdCl7aWYoIUcpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJHU3RhdGUgbXVzdCBiZSByZWZlcnJlZCB0byBieSBuYW1lLiIpO2NvbnN0IGk9cy5nZXQoIkV4dEdTdGF0ZSIpO2lmKCEoaSBpbnN0YW5jZW9mIERpY3QpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiRXh0R1N0YXRlIHNob3VsZCBiZSBhIGRpY3Rpb25hcnkuIik7Y29uc3QgYT1pLmdldCh4KTtpZighKGEgaW5zdGFuY2VvZiBEaWN0KSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkdTdGF0ZSBzaG91bGQgYmUgYSBkaWN0aW9uYXJ5LiIpO2NvbnN0IHI9YS5nZXQoIkZvbnQiKTtpZihyKXtmbHVzaFRleHRDb250ZW50SXRlbSgpO1MuZm9udE5hbWU9bnVsbDtTLmZvbnRTaXplPXJbMV07aGFuZGxlU2V0Rm9udChudWxsLHJbMF0pLnRoZW4oZSx0KX1lbHNle0Quc2V0KHgsYS5vYmpJZCwhMCk7ZSgpfX0pKS5jYXRjaCgoZnVuY3Rpb24oZSl7aWYoIShlIGluc3RhbmNlb2YgQWJvcnRFeGNlcHRpb24pKXtpZighcC5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBlO3dhcm4oYGdldFRleHRDb250ZW50IC0gaWdub3JpbmcgRXh0R1N0YXRlOiAiJHtlfSIuYCl9fSkpKTtyZXR1cm47Y2FzZSBKZTpmbHVzaFRleHRDb250ZW50SXRlbSgpO2lmKG4pe2wubGV2ZWwrKztFLml0ZW1zLnB1c2goe3R5cGU6ImJlZ2luTWFya2VkQ29udGVudCIsdGFnOmZbMF1pbnN0YW5jZW9mIE5hbWU/ZlswXS5uYW1lOm51bGx9KX1icmVhaztjYXNlIEhlOmZsdXNoVGV4dENvbnRlbnRJdGVtKCk7aWYobil7bC5sZXZlbCsrO2xldCBlPW51bGw7ZlsxXWluc3RhbmNlb2YgRGljdCYmKGU9ZlsxXS5nZXQoIk1DSUQiKSk7RS5pdGVtcy5wdXNoKHt0eXBlOiJiZWdpbk1hcmtlZENvbnRlbnRQcm9wcyIsaWQ6TnVtYmVyLmlzSW50ZWdlcihlKT9gJHtwLmlkRmFjdG9yeS5nZXRQYWdlT2JqSWQoKX1fbWMke2V9YDpudWxsLHRhZzpmWzBdaW5zdGFuY2VvZiBOYW1lP2ZbMF0ubmFtZTpudWxsfSl9YnJlYWs7Y2FzZSBZZTpmbHVzaFRleHRDb250ZW50SXRlbSgpO2lmKG4pe2lmKDA9PT1sLmxldmVsKWJyZWFrO2wubGV2ZWwtLTtFLml0ZW1zLnB1c2goe3R5cGU6ImVuZE1hcmtlZENvbnRlbnQifSl9YnJlYWs7Y2FzZSB4QTohZXx8ZS5mb250PT09Uy5mb250JiZlLmZvbnRTaXplPT09Uy5mb250U2l6ZSYmZS5mb250TmFtZT09PVMuZm9udE5hbWV8fGZsdXNoVGV4dENvbnRlbnRJdGVtKCl9aWYoRS5pdGVtcy5sZW5ndGg+PW8uZGVzaXJlZFNpemUpe2Q9ITA7YnJlYWt9fWlmKGQpbmV4dChrcyk7ZWxzZXtmbHVzaFRleHRDb250ZW50SXRlbSgpO2VucXVldWVDaHVuaygpO2UoKX19KSkuY2F0Y2goKGU9PntpZighKGUgaW5zdGFuY2VvZiBBYm9ydEV4Y2VwdGlvbikpe2lmKCF0aGlzLm9wdGlvbnMuaWdub3JlRXJyb3JzKXRocm93IGU7d2FybihgZ2V0VGV4dENvbnRlbnQgLSBpZ25vcmluZyBlcnJvcnMgZHVyaW5nICIke3QubmFtZX0iIHRhc2s6ICIke2V9Ii5gKTtmbHVzaFRleHRDb250ZW50SXRlbSgpO2VucXVldWVDaHVuaygpfX0pKX1hc3luYyBleHRyYWN0RGF0YVN0cnVjdHVyZXMoZSx0KXtjb25zdCBpPXRoaXMueHJlZjtsZXQgYTtjb25zdCBzPXRoaXMucmVhZFRvVW5pY29kZSh0LnRvVW5pY29kZSk7aWYodC5jb21wb3NpdGUpe2NvbnN0IGk9ZS5nZXQoIkNJRFN5c3RlbUluZm8iKTtpIGluc3RhbmNlb2YgRGljdCYmKHQuY2lkU3lzdGVtSW5mbz17cmVnaXN0cnk6c3RyaW5nVG9QREZTdHJpbmcoaS5nZXQoIlJlZ2lzdHJ5IikpLG9yZGVyaW5nOnN0cmluZ1RvUERGU3RyaW5nKGkuZ2V0KCJPcmRlcmluZyIpKSxzdXBwbGVtZW50OmkuZ2V0KCJTdXBwbGVtZW50Iil9KTt0cnl7Y29uc3QgdD1lLmdldCgiQ0lEVG9HSURNYXAiKTt0IGluc3RhbmNlb2YgQmFzZVN0cmVhbSYmKGE9dC5nZXRCeXRlcygpKX1jYXRjaChlKXtpZighdGhpcy5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBlO3dhcm4oYGV4dHJhY3REYXRhU3RydWN0dXJlcyAtIGlnbm9yaW5nIENJRFRvR0lETWFwIGRhdGE6ICIke2V9Ii5gKX19Y29uc3Qgcj1bXTtsZXQgbixvPW51bGw7aWYoZS5oYXMoIkVuY29kaW5nIikpe249ZS5nZXQoIkVuY29kaW5nIik7aWYobiBpbnN0YW5jZW9mIERpY3Qpe289bi5nZXQoIkJhc2VFbmNvZGluZyIpO289byBpbnN0YW5jZW9mIE5hbWU/by5uYW1lOm51bGw7aWYobi5oYXMoIkRpZmZlcmVuY2VzIikpe2NvbnN0IGU9bi5nZXQoIkRpZmZlcmVuY2VzIik7bGV0IHQ9MDtmb3IoY29uc3QgYSBvZiBlKXtjb25zdCBlPWkuZmV0Y2hJZlJlZihhKTtpZigibnVtYmVyIj09dHlwZW9mIGUpdD1lO2Vsc2V7aWYoIShlIGluc3RhbmNlb2YgTmFtZSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIGVudHJ5IGluICdEaWZmZXJlbmNlcycgYXJyYXk6ICR7ZX1gKTtyW3QrK109ZS5uYW1lfX19fWVsc2UgaWYobiBpbnN0YW5jZW9mIE5hbWUpbz1uLm5hbWU7ZWxzZXtjb25zdCBlPSJFbmNvZGluZyBpcyBub3QgYSBOYW1lIG5vciBhIERpY3QiO2lmKCF0aGlzLm9wdGlvbnMuaWdub3JlRXJyb3JzKXRocm93IG5ldyBGb3JtYXRFcnJvcihlKTt3YXJuKGUpfSJNYWNSb21hbkVuY29kaW5nIiE9PW8mJiJNYWNFeHBlcnRFbmNvZGluZyIhPT1vJiYiV2luQW5zaUVuY29kaW5nIiE9PW8mJihvPW51bGwpfWNvbnN0IGc9IXQuZmlsZXx8dC5pc0ludGVybmFsRm9udCxjPVppKClbdC5uYW1lXTtvJiZnJiZjJiYobz1udWxsKTtpZihvKXQuZGVmYXVsdEVuY29kaW5nPWdldEVuY29kaW5nKG8pO2Vsc2V7Y29uc3QgZT0hISh0LmZsYWdzJlRpKSxpPSEhKHQuZmxhZ3MmcWkpO249Zmk7IlRydWVUeXBlIiE9PXQudHlwZXx8aXx8KG49cGkpO2lmKGV8fGMpe249ZGk7ZyYmKC9TeW1ib2wvaS50ZXN0KHQubmFtZSk/bj1taTovRGluZ2JhdHMvaS50ZXN0KHQubmFtZSk/bj15aTovV2luZ2RpbmdzL2kudGVzdCh0Lm5hbWUpJiYobj1waSkpfXQuZGVmYXVsdEVuY29kaW5nPW59dC5kaWZmZXJlbmNlcz1yO3QuYmFzZUVuY29kaW5nTmFtZT1vO3QuaGFzRW5jb2Rpbmc9ISFvfHxyLmxlbmd0aD4wO3QuZGljdD1lO3QudG9Vbmljb2RlPWF3YWl0IHM7Y29uc3QgaD1hd2FpdCB0aGlzLmJ1aWxkVG9Vbmljb2RlKHQpO3QudG9Vbmljb2RlPWg7YSYmKHQuY2lkVG9HaWRNYXA9dGhpcy5yZWFkQ2lkVG9HaWRNYXAoYSxoKSk7cmV0dXJuIHR9X3NpbXBsZUZvbnRUb1VuaWNvZGUoZSx0PSExKXthc3NlcnQoIWUuY29tcG9zaXRlLCJNdXN0IGJlIGEgc2ltcGxlIGZvbnQuIik7Y29uc3QgaT1bXSxhPWUuZGVmYXVsdEVuY29kaW5nLnNsaWNlKCkscz1lLmJhc2VFbmNvZGluZ05hbWUscj1lLmRpZmZlcmVuY2VzO2Zvcihjb25zdCBlIGluIHIpe2NvbnN0IHQ9cltlXTsiLm5vdGRlZiIhPT10JiYoYVtlXT10KX1jb25zdCBuPU5pKCk7Zm9yKGNvbnN0IHIgaW4gYSl7bGV0IG89YVtyXTtpZigiIj09PW8pY29udGludWU7bGV0IGc9bltvXTtpZih2b2lkIDAhPT1nKXtpW3JdPVN0cmluZy5mcm9tQ2hhckNvZGUoZyk7Y29udGludWV9bGV0IGM9MDtzd2l0Y2gob1swXSl7Y2FzZSJHIjozPT09by5sZW5ndGgmJihjPXBhcnNlSW50KG8uc3Vic3RyaW5nKDEpLDE2KSk7YnJlYWs7Y2FzZSJnIjo1PT09by5sZW5ndGgmJihjPXBhcnNlSW50KG8uc3Vic3RyaW5nKDEpLDE2KSk7YnJlYWs7Y2FzZSJDIjpjYXNlImMiOmlmKG8ubGVuZ3RoPj0zJiZvLmxlbmd0aDw9NCl7Y29uc3QgaT1vLnN1YnN0cmluZygxKTtpZih0KXtjPXBhcnNlSW50KGksMTYpO2JyZWFrfWM9K2k7aWYoTnVtYmVyLmlzTmFOKGMpJiZOdW1iZXIuaXNJbnRlZ2VyKHBhcnNlSW50KGksMTYpKSlyZXR1cm4gdGhpcy5fc2ltcGxlRm9udFRvVW5pY29kZShlLCEwKX1icmVhaztjYXNlInUiOmc9Z2V0VW5pY29kZUZvckdseXBoKG8sbik7LTEhPT1nJiYoYz1nKTticmVhaztkZWZhdWx0OnN3aXRjaChvKXtjYXNlImZfaCI6Y2FzZSJmX3QiOmNhc2UiVF9oIjppW3JdPW8ucmVwbGFjZUFsbCgiXyIsIiIpO2NvbnRpbnVlfX1pZihjPjAmJmM8PTExMTQxMTEmJk51bWJlci5pc0ludGVnZXIoYykpe2lmKHMmJmM9PT0rcil7Y29uc3QgZT1nZXRFbmNvZGluZyhzKTtpZihlJiYobz1lW3JdKSl7aVtyXT1TdHJpbmcuZnJvbUNoYXJDb2RlKG5bb10pO2NvbnRpbnVlfX1pW3JdPVN0cmluZy5mcm9tQ29kZVBvaW50KGMpfX1yZXR1cm4gaX1hc3luYyBidWlsZFRvVW5pY29kZShlKXtlLmhhc0luY2x1ZGVkVG9Vbmljb2RlTWFwPWUudG9Vbmljb2RlPy5sZW5ndGg+MDtpZihlLmhhc0luY2x1ZGVkVG9Vbmljb2RlTWFwKXshZS5jb21wb3NpdGUmJmUuaGFzRW5jb2RpbmcmJihlLmZhbGxiYWNrVG9Vbmljb2RlPXRoaXMuX3NpbXBsZUZvbnRUb1VuaWNvZGUoZSkpO3JldHVybiBlLnRvVW5pY29kZX1pZighZS5jb21wb3NpdGUpcmV0dXJuIG5ldyBUb1VuaWNvZGVNYXAodGhpcy5fc2ltcGxlRm9udFRvVW5pY29kZShlKSk7aWYoZS5jb21wb3NpdGUmJihlLmNNYXAuYnVpbHRJbkNNYXAmJiEoZS5jTWFwIGluc3RhbmNlb2YgSWRlbnRpdHlDTWFwKXx8IkFkb2JlIj09PWUuY2lkU3lzdGVtSW5mbz8ucmVnaXN0cnkmJigiR0IxIj09PWUuY2lkU3lzdGVtSW5mby5vcmRlcmluZ3x8IkNOUzEiPT09ZS5jaWRTeXN0ZW1JbmZvLm9yZGVyaW5nfHwiSmFwYW4xIj09PWUuY2lkU3lzdGVtSW5mby5vcmRlcmluZ3x8IktvcmVhMSI9PT1lLmNpZFN5c3RlbUluZm8ub3JkZXJpbmcpKSl7Y29uc3R7cmVnaXN0cnk6dCxvcmRlcmluZzppfT1lLmNpZFN5c3RlbUluZm8sYT1OYW1lLmdldChgJHt0fS0ke2l9LVVDUzJgKSxzPWF3YWl0IENNYXBGYWN0b3J5LmNyZWF0ZSh7ZW5jb2Rpbmc6YSxmZXRjaEJ1aWx0SW5DTWFwOnRoaXMuX2ZldGNoQnVpbHRJbkNNYXBCb3VuZCx1c2VDTWFwOm51bGx9KSxyPVtdLG49W107ZS5jTWFwLmZvckVhY2goKGZ1bmN0aW9uKGUsdCl7aWYodD42NTUzNSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIk1heCBzaXplIG9mIENJRCBpcyA2NSw1MzUiKTtjb25zdCBpPXMubG9va3VwKHQpO2lmKGkpe24ubGVuZ3RoPTA7Zm9yKGxldCBlPTAsdD1pLmxlbmd0aDtlPHQ7ZSs9MiluLnB1c2goKGkuY2hhckNvZGVBdChlKTw8OCkraS5jaGFyQ29kZUF0KGUrMSkpO3JbZV09U3RyaW5nLmZyb21DaGFyQ29kZSguLi5uKX19KSk7cmV0dXJuIG5ldyBUb1VuaWNvZGVNYXAocil9cmV0dXJuIG5ldyBJZGVudGl0eVRvVW5pY29kZU1hcChlLmZpcnN0Q2hhcixlLmxhc3RDaGFyKX1hc3luYyByZWFkVG9Vbmljb2RlKGUpe2lmKCFlKXJldHVybiBudWxsO2lmKGUgaW5zdGFuY2VvZiBOYW1lKXtjb25zdCB0PWF3YWl0IENNYXBGYWN0b3J5LmNyZWF0ZSh7ZW5jb2Rpbmc6ZSxmZXRjaEJ1aWx0SW5DTWFwOnRoaXMuX2ZldGNoQnVpbHRJbkNNYXBCb3VuZCx1c2VDTWFwOm51bGx9KTtyZXR1cm4gdCBpbnN0YW5jZW9mIElkZW50aXR5Q01hcD9uZXcgSWRlbnRpdHlUb1VuaWNvZGVNYXAoMCw2NTUzNSk6bmV3IFRvVW5pY29kZU1hcCh0LmdldE1hcCgpKX1pZihlIGluc3RhbmNlb2YgQmFzZVN0cmVhbSl0cnl7Y29uc3QgdD1hd2FpdCBDTWFwRmFjdG9yeS5jcmVhdGUoe2VuY29kaW5nOmUsZmV0Y2hCdWlsdEluQ01hcDp0aGlzLl9mZXRjaEJ1aWx0SW5DTWFwQm91bmQsdXNlQ01hcDpudWxsfSk7aWYodCBpbnN0YW5jZW9mIElkZW50aXR5Q01hcClyZXR1cm4gbmV3IElkZW50aXR5VG9Vbmljb2RlTWFwKDAsNjU1MzUpO2NvbnN0IGk9bmV3IEFycmF5KHQubGVuZ3RoKTt0LmZvckVhY2goKGZ1bmN0aW9uKGUsdCl7aWYoIm51bWJlciI9PXR5cGVvZiB0KXtpW2VdPVN0cmluZy5mcm9tQ29kZVBvaW50KHQpO3JldHVybn1jb25zdCBhPVtdO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSs9Mil7Y29uc3QgaT10LmNoYXJDb2RlQXQoZSk8PDh8dC5jaGFyQ29kZUF0KGUrMSk7aWYoNTUyOTYhPSg2MzQ4OCZpKSl7YS5wdXNoKGkpO2NvbnRpbnVlfWUrPTI7Y29uc3Qgcz10LmNoYXJDb2RlQXQoZSk8PDh8dC5jaGFyQ29kZUF0KGUrMSk7YS5wdXNoKCgoMTAyMyZpKTw8MTApKygxMDIzJnMpKzY1NTM2KX1pW2VdPVN0cmluZy5mcm9tQ29kZVBvaW50KC4uLmEpfSkpO3JldHVybiBuZXcgVG9Vbmljb2RlTWFwKGkpfWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiBBYm9ydEV4Y2VwdGlvbilyZXR1cm4gbnVsbDtpZih0aGlzLm9wdGlvbnMuaWdub3JlRXJyb3JzKXt3YXJuKGByZWFkVG9Vbmljb2RlIC0gaWdub3JpbmcgVG9Vbmljb2RlIGRhdGE6ICIke2V9Ii5gKTtyZXR1cm4gbnVsbH10aHJvdyBlfXJldHVybiBudWxsfXJlYWRDaWRUb0dpZE1hcChlLHQpe2NvbnN0IGk9W107Zm9yKGxldCBhPTAscz1lLmxlbmd0aDthPHM7YSsrKXtjb25zdCBzPWVbYSsrXTw8OHxlW2FdLHI9YT4+MTsoMCE9PXN8fHQuaGFzKHIpKSYmKGlbcl09cyl9cmV0dXJuIGl9ZXh0cmFjdFdpZHRocyhlLHQsaSl7Y29uc3QgYT10aGlzLnhyZWY7bGV0IHM9W10scj0wO2NvbnN0IG49W107bGV0IG87aWYoaS5jb21wb3NpdGUpe2NvbnN0IHQ9ZS5nZXQoIkRXIik7cj1OdW1iZXIuaXNJbnRlZ2VyKHQpP3Q6MWUzO2NvbnN0IGc9ZS5nZXQoIlciKTtpZihBcnJheS5pc0FycmF5KGcpKWZvcihsZXQgZT0wLHQ9Zy5sZW5ndGg7ZTx0O2UrKyl7bGV0IHQ9YS5mZXRjaElmUmVmKGdbZSsrXSk7aWYoIU51bWJlci5pc0ludGVnZXIodCkpYnJlYWs7Y29uc3QgaT1hLmZldGNoSWZSZWYoZ1tlXSk7aWYoQXJyYXkuaXNBcnJheShpKSlmb3IoY29uc3QgZSBvZiBpKXtjb25zdCBpPWEuZmV0Y2hJZlJlZihlKTsibnVtYmVyIj09dHlwZW9mIGkmJihzW3RdPWkpO3QrK31lbHNle2lmKCFOdW1iZXIuaXNJbnRlZ2VyKGkpKWJyZWFrO3tjb25zdCByPWEuZmV0Y2hJZlJlZihnWysrZV0pO2lmKCJudW1iZXIiIT10eXBlb2Ygciljb250aW51ZTtmb3IobGV0IGU9dDtlPD1pO2UrKylzW2VdPXJ9fX1pZihpLnZlcnRpY2FsKXtjb25zdCB0PWUuZ2V0QXJyYXkoIkRXMiIpO2xldCBpPWlzTnVtYmVyQXJyYXkodCwyKT90Ols4ODAsLTFlM107bz1baVsxXSwuNSpyLGlbMF1dO2k9ZS5nZXQoIlcyIik7aWYoQXJyYXkuaXNBcnJheShpKSlmb3IobGV0IGU9MCx0PWkubGVuZ3RoO2U8dDtlKyspe2xldCB0PWEuZmV0Y2hJZlJlZihpW2UrK10pO2lmKCFOdW1iZXIuaXNJbnRlZ2VyKHQpKWJyZWFrO2NvbnN0IHM9YS5mZXRjaElmUmVmKGlbZV0pO2lmKEFycmF5LmlzQXJyYXkocykpZm9yKGxldCBlPTAsaT1zLmxlbmd0aDtlPGk7ZSsrKXtjb25zdCBpPVthLmZldGNoSWZSZWYoc1tlKytdKSxhLmZldGNoSWZSZWYoc1tlKytdKSxhLmZldGNoSWZSZWYoc1tlXSldO2lzTnVtYmVyQXJyYXkoaSxudWxsKSYmKG5bdF09aSk7dCsrfWVsc2V7aWYoIU51bWJlci5pc0ludGVnZXIocykpYnJlYWs7e2NvbnN0IHI9W2EuZmV0Y2hJZlJlZihpWysrZV0pLGEuZmV0Y2hJZlJlZihpWysrZV0pLGEuZmV0Y2hJZlJlZihpWysrZV0pXTtpZighaXNOdW1iZXJBcnJheShyLG51bGwpKWNvbnRpbnVlO2ZvcihsZXQgZT10O2U8PXM7ZSsrKW5bZV09cn19fX19ZWxzZXtjb25zdCBuPWUuZ2V0KCJXaWR0aHMiKTtpZihBcnJheS5pc0FycmF5KG4pKXtsZXQgZT1pLmZpcnN0Q2hhcjtmb3IoY29uc3QgdCBvZiBuKXtjb25zdCBpPWEuZmV0Y2hJZlJlZih0KTsibnVtYmVyIj09dHlwZW9mIGkmJihzW2VdPWkpO2UrK31jb25zdCBvPXQuZ2V0KCJNaXNzaW5nV2lkdGgiKTtyPSJudW1iZXIiPT10eXBlb2Ygbz9vOjB9ZWxzZXtjb25zdCB0PWUuZ2V0KCJCYXNlRm9udCIpO2lmKHQgaW5zdGFuY2VvZiBOYW1lKXtjb25zdCBlPXRoaXMuZ2V0QmFzZUZvbnRNZXRyaWNzKHQubmFtZSk7cz10aGlzLmJ1aWxkQ2hhckNvZGVUb1dpZHRoKGUud2lkdGhzLGkpO3I9ZS5kZWZhdWx0V2lkdGh9fX1sZXQgZz0hMCxjPXI7Zm9yKGNvbnN0IGUgaW4gcyl7Y29uc3QgdD1zW2VdO2lmKHQpaWYoYyl7aWYoYyE9PXQpe2c9ITE7YnJlYWt9fWVsc2UgYz10fWc/aS5mbGFnc3w9dmk6aS5mbGFncyY9fnZpO2kuZGVmYXVsdFdpZHRoPXI7aS53aWR0aHM9cztpLmRlZmF1bHRWTWV0cmljcz1vO2kudm1ldHJpY3M9bn1pc1NlcmlmRm9udChlKXtjb25zdCB0PWUuc3BsaXQoIi0iLDEpWzBdO3JldHVybiB0IGluIGppKCl8fC9zZXJpZi9naS50ZXN0KHQpfWdldEJhc2VGb250TWV0cmljcyhlKXtsZXQgdD0wLGk9T2JqZWN0LmNyZWF0ZShudWxsKSxhPSExO2xldCBzPVBpKClbZV18fGU7Y29uc3Qgcj1BYSgpO3MgaW4gcnx8KHM9dGhpcy5pc1NlcmlmRm9udChlKT8iVGltZXMtUm9tYW4iOiJIZWx2ZXRpY2EiKTtjb25zdCBuPXJbc107aWYoIm51bWJlciI9PXR5cGVvZiBuKXt0PW47YT0hMH1lbHNlIGk9bigpO3JldHVybntkZWZhdWx0V2lkdGg6dCxtb25vc3BhY2U6YSx3aWR0aHM6aX19YnVpbGRDaGFyQ29kZVRvV2lkdGgoZSx0KXtjb25zdCBpPU9iamVjdC5jcmVhdGUobnVsbCksYT10LmRpZmZlcmVuY2VzLHM9dC5kZWZhdWx0RW5jb2Rpbmc7Zm9yKGxldCB0PTA7dDwyNTY7dCsrKXQgaW4gYSYmZVthW3RdXT9pW3RdPWVbYVt0XV06dCBpbiBzJiZlW3NbdF1dJiYoaVt0XT1lW3NbdF1dKTtyZXR1cm4gaX1wcmVFdmFsdWF0ZUZvbnQoZSl7Y29uc3QgdD1lO2xldCBpPWUuZ2V0KCJTdWJ0eXBlIik7aWYoIShpIGluc3RhbmNlb2YgTmFtZSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJpbnZhbGlkIGZvbnQgU3VidHlwZSIpO2xldCBhLHM9ITE7aWYoIlR5cGUwIj09PWkubmFtZSl7Y29uc3QgdD1lLmdldCgiRGVzY2VuZGFudEZvbnRzIik7aWYoIXQpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJEZXNjZW5kYW50IGZvbnRzIGFyZSBub3Qgc3BlY2lmaWVkIik7aWYoISgoZT1BcnJheS5pc0FycmF5KHQpP3RoaXMueHJlZi5mZXRjaElmUmVmKHRbMF0pOnQpaW5zdGFuY2VvZiBEaWN0KSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkRlc2NlbmRhbnQgZm9udCBpcyBub3QgYSBkaWN0aW9uYXJ5LiIpO2k9ZS5nZXQoIlN1YnR5cGUiKTtpZighKGkgaW5zdGFuY2VvZiBOYW1lKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoImludmFsaWQgZm9udCBTdWJ0eXBlIik7cz0hMH1sZXQgcj1lLmdldCgiRmlyc3RDaGFyIik7TnVtYmVyLmlzSW50ZWdlcihyKXx8KHI9MCk7bGV0IG49ZS5nZXQoIkxhc3RDaGFyIik7TnVtYmVyLmlzSW50ZWdlcihuKXx8KG49cz82NTUzNToyNTUpO2NvbnN0IG89ZS5nZXQoIkZvbnREZXNjcmlwdG9yIiksZz1lLmdldCgiVG9Vbmljb2RlIil8fHQuZ2V0KCJUb1VuaWNvZGUiKTtpZihvKXthPW5ldyBNdXJtdXJIYXNoM182NDtjb25zdCBpPXQuZ2V0UmF3KCJFbmNvZGluZyIpO2lmKGkgaW5zdGFuY2VvZiBOYW1lKWEudXBkYXRlKGkubmFtZSk7ZWxzZSBpZihpIGluc3RhbmNlb2YgUmVmKWEudXBkYXRlKGkudG9TdHJpbmcoKSk7ZWxzZSBpZihpIGluc3RhbmNlb2YgRGljdClmb3IoY29uc3QgZSBvZiBpLmdldFJhd1ZhbHVlcygpKWlmKGUgaW5zdGFuY2VvZiBOYW1lKWEudXBkYXRlKGUubmFtZSk7ZWxzZSBpZihlIGluc3RhbmNlb2YgUmVmKWEudXBkYXRlKGUudG9TdHJpbmcoKSk7ZWxzZSBpZihBcnJheS5pc0FycmF5KGUpKXtjb25zdCB0PWUubGVuZ3RoLGk9bmV3IEFycmF5KHQpO2ZvcihsZXQgYT0wO2E8dDthKyspe2NvbnN0IHQ9ZVthXTt0IGluc3RhbmNlb2YgTmFtZT9pW2FdPXQubmFtZTooIm51bWJlciI9PXR5cGVvZiB0fHx0IGluc3RhbmNlb2YgUmVmKSYmKGlbYV09dC50b1N0cmluZygpKX1hLnVwZGF0ZShpLmpvaW4oKSl9YS51cGRhdGUoYCR7cn0tJHtufWApO2lmKGcgaW5zdGFuY2VvZiBCYXNlU3RyZWFtKXtjb25zdCBlPWcuc3RyfHxnLHQ9ZS5idWZmZXI/bmV3IFVpbnQ4QXJyYXkoZS5idWZmZXIuYnVmZmVyLDAsZS5idWZmZXJMZW5ndGgpOm5ldyBVaW50OEFycmF5KGUuYnl0ZXMuYnVmZmVyLGUuc3RhcnQsZS5lbmQtZS5zdGFydCk7YS51cGRhdGUodCl9ZWxzZSBnIGluc3RhbmNlb2YgTmFtZSYmYS51cGRhdGUoZy5uYW1lKTtjb25zdCBvPWUuZ2V0KCJXaWR0aHMiKXx8dC5nZXQoIldpZHRocyIpO2lmKEFycmF5LmlzQXJyYXkobykpe2NvbnN0IGU9W107Zm9yKGNvbnN0IHQgb2YgbykoIm51bWJlciI9PXR5cGVvZiB0fHx0IGluc3RhbmNlb2YgUmVmKSYmZS5wdXNoKHQudG9TdHJpbmcoKSk7YS51cGRhdGUoZS5qb2luKCkpfWlmKHMpe2EudXBkYXRlKCJjb21wb3NpdGVGb250Iik7Y29uc3QgaT1lLmdldCgiVyIpfHx0LmdldCgiVyIpO2lmKEFycmF5LmlzQXJyYXkoaSkpe2NvbnN0IGU9W107Zm9yKGNvbnN0IHQgb2YgaSlpZigibnVtYmVyIj09dHlwZW9mIHR8fHQgaW5zdGFuY2VvZiBSZWYpZS5wdXNoKHQudG9TdHJpbmcoKSk7ZWxzZSBpZihBcnJheS5pc0FycmF5KHQpKXtjb25zdCBpPVtdO2Zvcihjb25zdCBlIG9mIHQpKCJudW1iZXIiPT10eXBlb2YgZXx8ZSBpbnN0YW5jZW9mIFJlZikmJmkucHVzaChlLnRvU3RyaW5nKCkpO2UucHVzaChgWyR7aS5qb2luKCl9XWApfWEudXBkYXRlKGUuam9pbigpKX1jb25zdCBzPWUuZ2V0UmF3KCJDSURUb0dJRE1hcCIpfHx0LmdldFJhdygiQ0lEVG9HSURNYXAiKTtzIGluc3RhbmNlb2YgTmFtZT9hLnVwZGF0ZShzLm5hbWUpOnMgaW5zdGFuY2VvZiBSZWY/YS51cGRhdGUocy50b1N0cmluZygpKTpzIGluc3RhbmNlb2YgQmFzZVN0cmVhbSYmYS51cGRhdGUocy5wZWVrQnl0ZXMoKSl9fXJldHVybntkZXNjcmlwdG9yOm8sZGljdDplLGJhc2VEaWN0OnQsY29tcG9zaXRlOnMsdHlwZTppLm5hbWUsZmlyc3RDaGFyOnIsbGFzdENoYXI6bix0b1VuaWNvZGU6ZyxoYXNoOmE/YS5oZXhkaWdlc3QoKToiIn19YXN5bmMgdHJhbnNsYXRlRm9udCh7ZGVzY3JpcHRvcjplLGRpY3Q6dCxiYXNlRGljdDppLGNvbXBvc2l0ZTpzLHR5cGU6cixmaXJzdENoYXI6bixsYXN0Q2hhcjpvLHRvVW5pY29kZTpnLGNzc0ZvbnRJbmZvOmN9KXtjb25zdCBoPSJUeXBlMyI9PT1yO2lmKCFlKXtpZighaCl7bGV0IGU9dC5nZXQoIkJhc2VGb250Iik7aWYoIShlIGluc3RhbmNlb2YgTmFtZSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJCYXNlIGZvbnQgaXMgbm90IHNwZWNpZmllZCIpO2U9ZS5uYW1lLnJlcGxhY2VBbGwoL1ssX10vZywiLSIpO2NvbnN0IGE9dGhpcy5nZXRCYXNlRm9udE1ldHJpY3MoZSkscz1lLnNwbGl0KCItIiwxKVswXSxjPSh0aGlzLmlzU2VyaWZGb250KHMpP0tpOjApfChhLm1vbm9zcGFjZT92aTowKXwoWmkoKVtzXT9UaTpxaSksbD17dHlwZTpyLG5hbWU6ZSxsb2FkZWROYW1lOmkubG9hZGVkTmFtZSxzeXN0ZW1Gb250SW5mbzpudWxsLHdpZHRoczphLndpZHRocyxkZWZhdWx0V2lkdGg6YS5kZWZhdWx0V2lkdGgsaXNTaW11bGF0ZWRGbGFnczohMCxmbGFnczpjLGZpcnN0Q2hhcjpuLGxhc3RDaGFyOm8sdG9Vbmljb2RlOmcseEhlaWdodDowLGNhcEhlaWdodDowLGl0YWxpY0FuZ2xlOjAsaXNUeXBlM0ZvbnQ6aH0sQz10LmdldCgiV2lkdGhzIiksUT1nZXRTdGFuZGFyZEZvbnROYW1lKGUpO2xldCBFPW51bGw7aWYoUSl7RT1hd2FpdCB0aGlzLmZldGNoU3RhbmRhcmRGb250RGF0YShRKTtsLmlzSW50ZXJuYWxGb250PSEhRX0hbC5pc0ludGVybmFsRm9udCYmdGhpcy5vcHRpb25zLnVzZVN5c3RlbUZvbnRzJiYobC5zeXN0ZW1Gb250SW5mbz1nZXRGb250U3Vic3RpdHV0aW9uKHRoaXMuc3lzdGVtRm9udENhY2hlLHRoaXMuaWRGYWN0b3J5LHRoaXMub3B0aW9ucy5zdGFuZGFyZEZvbnREYXRhVXJsLGUsUSxyKSk7Y29uc3QgdT1hd2FpdCB0aGlzLmV4dHJhY3REYXRhU3RydWN0dXJlcyh0LGwpO2lmKEFycmF5LmlzQXJyYXkoQykpe2NvbnN0IGU9W107bGV0IHQ9bjtmb3IoY29uc3QgaSBvZiBDKXtjb25zdCBhPXRoaXMueHJlZi5mZXRjaElmUmVmKGkpOyJudW1iZXIiPT10eXBlb2YgYSYmKGVbdF09YSk7dCsrfXUud2lkdGhzPWV9ZWxzZSB1LndpZHRocz10aGlzLmJ1aWxkQ2hhckNvZGVUb1dpZHRoKGEud2lkdGhzLHUpO3JldHVybiBuZXcgRm9udChlLEUsdSl9e2NvbnN0IGk9bG9va3VwTm9ybWFsUmVjdCh0LmdldEFycmF5KCJGb250QkJveCIpLFswLDAsMCwwXSk7KGU9bmV3IERpY3QobnVsbCkpLnNldCgiRm9udE5hbWUiLE5hbWUuZ2V0KHIpKTtlLnNldCgiRm9udEJCb3giLGkpfX1sZXQgbD1lLmdldCgiRm9udE5hbWUiKSxDPXQuZ2V0KCJCYXNlRm9udCIpOyJzdHJpbmciPT10eXBlb2YgbCYmKGw9TmFtZS5nZXQobCkpOyJzdHJpbmciPT10eXBlb2YgQyYmKEM9TmFtZS5nZXQoQykpO2NvbnN0IFE9bD8ubmFtZSxFPUM/Lm5hbWU7aWYoIWgmJlEhPT1FKXtpbmZvKGBUaGUgRm9udERlc2NyaXB0b3IncyBGb250TmFtZSBpcyAiJHtRfSIgYnV0IHNob3VsZCBiZSB0aGUgc2FtZSBhcyB0aGUgRm9udCdzIEJhc2VGb250ICIke0V9Ii5gKTtRJiZFJiYoRS5zdGFydHNXaXRoKFEpfHwhaXNLbm93bkZvbnROYW1lKFEpJiZpc0tub3duRm9udE5hbWUoRSkpJiYobD1udWxsKX1sfHw9QztpZighKGwgaW5zdGFuY2VvZiBOYW1lKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoImludmFsaWQgZm9udCBuYW1lIik7bGV0IHUsZCxmLHAsbTt0cnl7dT1lLmdldCgiRm9udEZpbGUiLCJGb250RmlsZTIiLCJGb250RmlsZTMiKX1jYXRjaChlKXtpZighdGhpcy5vcHRpb25zLmlnbm9yZUVycm9ycyl0aHJvdyBlO3dhcm4oYHRyYW5zbGF0ZUZvbnQgLSBmZXRjaGluZyAiJHtsLm5hbWV9IiBmb250IGZpbGU6ICIke2V9Ii5gKTt1PW5ldyBOdWxsU3RyZWFtfWxldCB5PSExLHc9bnVsbCxiPW51bGw7aWYodSl7aWYodS5kaWN0KXtjb25zdCBlPXUuZGljdC5nZXQoIlN1YnR5cGUiKTtlIGluc3RhbmNlb2YgTmFtZSYmKGQ9ZS5uYW1lKTtmPXUuZGljdC5nZXQoIkxlbmd0aDEiKTtwPXUuZGljdC5nZXQoIkxlbmd0aDIiKTttPXUuZGljdC5nZXQoIkxlbmd0aDMiKX19ZWxzZSBpZihjKXtjb25zdCBlPWdldFhmYUZvbnROYW1lKGwubmFtZSk7aWYoZSl7Yy5mb250RmFtaWx5PWAke2MuZm9udEZhbWlseX0tUGRmSlMtWEZBYDtjLm1ldHJpY3M9ZS5tZXRyaWNzfHxudWxsO3c9ZS5mYWN0b3JzfHxudWxsO3U9YXdhaXQgdGhpcy5mZXRjaFN0YW5kYXJkRm9udERhdGEoZS5uYW1lKTt5PSEhdTtpPXQ9Z2V0WGZhRm9udERpY3QobC5uYW1lKTtzPSEwfX1lbHNlIGlmKCFoKXtjb25zdCBlPWdldFN0YW5kYXJkRm9udE5hbWUobC5uYW1lKTtpZihlKXt1PWF3YWl0IHRoaXMuZmV0Y2hTdGFuZGFyZEZvbnREYXRhKGUpO3k9ISF1fSF5JiZ0aGlzLm9wdGlvbnMudXNlU3lzdGVtRm9udHMmJihiPWdldEZvbnRTdWJzdGl0dXRpb24odGhpcy5zeXN0ZW1Gb250Q2FjaGUsdGhpcy5pZEZhY3RvcnksdGhpcy5vcHRpb25zLnN0YW5kYXJkRm9udERhdGFVcmwsbC5uYW1lLGUscikpfWNvbnN0IEQ9bG9va3VwTWF0cml4KHQuZ2V0QXJyYXkoIkZvbnRNYXRyaXgiKSxhKSxGPWxvb2t1cE5vcm1hbFJlY3QoZS5nZXRBcnJheSgiRm9udEJCb3giKXx8dC5nZXRBcnJheSgiRm9udEJCb3giKSx2b2lkIDApO2xldCBTPWUuZ2V0KCJBc2NlbnQiKTsibnVtYmVyIiE9dHlwZW9mIFMmJihTPXZvaWQgMCk7bGV0IGs9ZS5nZXQoIkRlc2NlbnQiKTsibnVtYmVyIiE9dHlwZW9mIGsmJihrPXZvaWQgMCk7bGV0IFI9ZS5nZXQoIlhIZWlnaHQiKTsibnVtYmVyIiE9dHlwZW9mIFImJihSPTApO2xldCBOPWUuZ2V0KCJDYXBIZWlnaHQiKTsibnVtYmVyIiE9dHlwZW9mIE4mJihOPTApO2xldCBHPWUuZ2V0KCJGbGFncyIpO051bWJlci5pc0ludGVnZXIoRyl8fChHPTApO2xldCB4PWUuZ2V0KCJJdGFsaWNBbmdsZSIpOyJudW1iZXIiIT10eXBlb2YgeCYmKHg9MCk7Y29uc3QgTT17dHlwZTpyLG5hbWU6bC5uYW1lLHN1YnR5cGU6ZCxmaWxlOnUsbGVuZ3RoMTpmLGxlbmd0aDI6cCxsZW5ndGgzOm0saXNJbnRlcm5hbEZvbnQ6eSxsb2FkZWROYW1lOmkubG9hZGVkTmFtZSxjb21wb3NpdGU6cyxmaXhlZFBpdGNoOiExLGZvbnRNYXRyaXg6RCxmaXJzdENoYXI6bixsYXN0Q2hhcjpvLHRvVW5pY29kZTpnLGJib3g6Rixhc2NlbnQ6UyxkZXNjZW50OmsseEhlaWdodDpSLGNhcEhlaWdodDpOLGZsYWdzOkcsaXRhbGljQW5nbGU6eCxpc1R5cGUzRm9udDpoLGNzc0ZvbnRJbmZvOmMsc2NhbGVGYWN0b3JzOncsc3lzdGVtRm9udEluZm86Yn07aWYocyl7Y29uc3QgZT1pLmdldCgiRW5jb2RpbmciKTtlIGluc3RhbmNlb2YgTmFtZSYmKE0uY2lkRW5jb2Rpbmc9ZS5uYW1lKTtjb25zdCB0PWF3YWl0IENNYXBGYWN0b3J5LmNyZWF0ZSh7ZW5jb2Rpbmc6ZSxmZXRjaEJ1aWx0SW5DTWFwOnRoaXMuX2ZldGNoQnVpbHRJbkNNYXBCb3VuZCx1c2VDTWFwOm51bGx9KTtNLmNNYXA9dDtNLnZlcnRpY2FsPU0uY01hcC52ZXJ0aWNhbH1jb25zdCBVPWF3YWl0IHRoaXMuZXh0cmFjdERhdGFTdHJ1Y3R1cmVzKHQsTSk7dGhpcy5leHRyYWN0V2lkdGhzKHQsZSxVKTtyZXR1cm4gbmV3IEZvbnQobC5uYW1lLHUsVSl9c3RhdGljIGJ1aWxkRm9udFBhdGhzKGUsdCxpLGEpe2Z1bmN0aW9uIGJ1aWxkUGF0aCh0KXtjb25zdCBzPWAke2UubG9hZGVkTmFtZX1fcGF0aF8ke3R9YDt0cnl7aWYoZS5yZW5kZXJlci5oYXNCdWlsdFBhdGgodCkpcmV0dXJuO2kuc2VuZCgiY29tbW9ub2JqIixbcywiRm9udFBhdGgiLGUucmVuZGVyZXIuZ2V0UGF0aEpzKHQpXSl9Y2F0Y2goZSl7aWYoYS5pZ25vcmVFcnJvcnMpe3dhcm4oYGJ1aWxkRm9udFBhdGhzIC0gaWdub3JpbmcgJHtzfSBnbHlwaDogIiR7ZX0iLmApO3JldHVybn10aHJvdyBlfX1mb3IoY29uc3QgZSBvZiB0KXtidWlsZFBhdGgoZS5mb250Q2hhcik7Y29uc3QgdD1lLmFjY2VudDt0Py5mb250Q2hhciYmYnVpbGRQYXRoKHQuZm9udENoYXIpfX1zdGF0aWMgZ2V0IGZhbGxiYWNrRm9udERpY3QoKXtjb25zdCBlPW5ldyBEaWN0O2Uuc2V0KCJCYXNlRm9udCIsTmFtZS5nZXQoIkhlbHZldGljYSIpKTtlLnNldCgiVHlwZSIsTmFtZS5nZXQoIkZhbGxiYWNrVHlwZSIpKTtlLnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIkZhbGxiYWNrVHlwZSIpKTtlLnNldCgiRW5jb2RpbmciLE5hbWUuZ2V0KCJXaW5BbnNpRW5jb2RpbmciKSk7cmV0dXJuIHNoYWRvdyh0aGlzLCJmYWxsYmFja0ZvbnREaWN0IixlKX19Y2xhc3MgVHJhbnNsYXRlZEZvbnR7Y29uc3RydWN0b3Ioe2xvYWRlZE5hbWU6ZSxmb250OnQsZGljdDppLGV2YWx1YXRvck9wdGlvbnM6YX0pe3RoaXMubG9hZGVkTmFtZT1lO3RoaXMuZm9udD10O3RoaXMuZGljdD1pO3RoaXMuX2V2YWx1YXRvck9wdGlvbnM9YXx8RHM7dGhpcy50eXBlM0xvYWRlZD1udWxsO3RoaXMudHlwZTNEZXBlbmRlbmNpZXM9dC5pc1R5cGUzRm9udD9uZXcgU2V0Om51bGw7dGhpcy5zZW50PSExfXNlbmQoZSl7aWYoIXRoaXMuc2VudCl7dGhpcy5zZW50PSEwO2Uuc2VuZCgiY29tbW9ub2JqIixbdGhpcy5sb2FkZWROYW1lLCJGb250Iix0aGlzLmZvbnQuZXhwb3J0RGF0YSh0aGlzLl9ldmFsdWF0b3JPcHRpb25zLmZvbnRFeHRyYVByb3BlcnRpZXMpXSl9fWZhbGxiYWNrKGUpe2lmKHRoaXMuZm9udC5kYXRhKXt0aGlzLmZvbnQuZGlzYWJsZUZvbnRGYWNlPSEwO1BhcnRpYWxFdmFsdWF0b3IuYnVpbGRGb250UGF0aHModGhpcy5mb250LHRoaXMuZm9udC5nbHlwaENhY2hlVmFsdWVzLGUsdGhpcy5fZXZhbHVhdG9yT3B0aW9ucyl9fWxvYWRUeXBlM0RhdGEoZSx0LGkpe2lmKHRoaXMudHlwZTNMb2FkZWQpcmV0dXJuIHRoaXMudHlwZTNMb2FkZWQ7aWYoIXRoaXMuZm9udC5pc1R5cGUzRm9udCl0aHJvdyBuZXcgRXJyb3IoIk11c3QgYmUgYSBUeXBlMyBmb250LiIpO2NvbnN0IGE9ZS5jbG9uZSh7aWdub3JlRXJyb3JzOiExfSk7YS5wYXJzaW5nVHlwZTNGb250PSEwO2NvbnN0IHM9bmV3IFJlZlNldChlLnR5cGUzRm9udFJlZnMpO3RoaXMuZGljdC5vYmpJZCYmIXMuaGFzKHRoaXMuZGljdC5vYmpJZCkmJnMucHV0KHRoaXMuZGljdC5vYmpJZCk7YS50eXBlM0ZvbnRSZWZzPXM7Y29uc3Qgcj10aGlzLmZvbnQsbj10aGlzLnR5cGUzRGVwZW5kZW5jaWVzO2xldCBvPVByb21pc2UucmVzb2x2ZSgpO2NvbnN0IGc9dGhpcy5kaWN0LmdldCgiQ2hhclByb2NzIiksYz10aGlzLmRpY3QuZ2V0KCJSZXNvdXJjZXMiKXx8dCxoPU9iamVjdC5jcmVhdGUobnVsbCksbD1VdGlsLm5vcm1hbGl6ZVJlY3Qoci5iYm94fHxbMCwwLDAsMF0pLEM9bFsyXS1sWzBdLFE9bFszXS1sWzFdLEU9TWF0aC5oeXBvdChDLFEpO2Zvcihjb25zdCBlIG9mIGcuZ2V0S2V5cygpKW89by50aGVuKCgoKT0+e2NvbnN0IHQ9Zy5nZXQoZSkscz1uZXcgT3BlcmF0b3JMaXN0O3JldHVybiBhLmdldE9wZXJhdG9yTGlzdCh7c3RyZWFtOnQsdGFzazppLHJlc291cmNlczpjLG9wZXJhdG9yTGlzdDpzfSkudGhlbigoKCk9PntzLmZuQXJyYXlbMF09PT1FZSYmdGhpcy5fcmVtb3ZlVHlwZTNDb2xvck9wZXJhdG9ycyhzLEUpO2hbZV09cy5nZXRJUigpO2Zvcihjb25zdCBlIG9mIHMuZGVwZW5kZW5jaWVzKW4uYWRkKGUpfSkpLmNhdGNoKChmdW5jdGlvbih0KXt3YXJuKGBUeXBlMyBmb250IHJlc291cmNlICIke2V9IiBpcyBub3QgYXZhaWxhYmxlLmApO2NvbnN0IGk9bmV3IE9wZXJhdG9yTGlzdDtoW2VdPWkuZ2V0SVIoKX0pKX0pKTt0aGlzLnR5cGUzTG9hZGVkPW8udGhlbigoKCk9PntyLmNoYXJQcm9jT3BlcmF0b3JMaXN0PWg7aWYodGhpcy5fYmJveCl7ci5pc0NoYXJCQm94PSEwO3IuYmJveD10aGlzLl9iYm94fX0pKTtyZXR1cm4gdGhpcy50eXBlM0xvYWRlZH1fcmVtb3ZlVHlwZTNDb2xvck9wZXJhdG9ycyhlLHQ9TmFOKXtjb25zdCBpPVV0aWwubm9ybWFsaXplUmVjdChlLmFyZ3NBcnJheVswXS5zbGljZSgyKSksYT1pWzJdLWlbMF0scz1pWzNdLWlbMV0scj1NYXRoLmh5cG90KGEscyk7aWYoMD09PWF8fDA9PT1zKXtlLmZuQXJyYXkuc3BsaWNlKDAsMSk7ZS5hcmdzQXJyYXkuc3BsaWNlKDAsMSl9ZWxzZSBpZigwPT09dHx8TWF0aC5yb3VuZChyL3QpPj0xMCl7dGhpcy5fYmJveHx8KHRoaXMuX2Jib3g9WzEvMCwxLzAsLTEvMCwtMS8wXSk7dGhpcy5fYmJveFswXT1NYXRoLm1pbih0aGlzLl9iYm94WzBdLGlbMF0pO3RoaXMuX2Jib3hbMV09TWF0aC5taW4odGhpcy5fYmJveFsxXSxpWzFdKTt0aGlzLl9iYm94WzJdPU1hdGgubWF4KHRoaXMuX2Jib3hbMl0saVsyXSk7dGhpcy5fYmJveFszXT1NYXRoLm1heCh0aGlzLl9iYm94WzNdLGlbM10pfWxldCBuPTAsbz1lLmxlbmd0aDtmb3IoO248bzspe3N3aXRjaChlLmZuQXJyYXlbbl0pe2Nhc2UgRWU6YnJlYWs7Y2FzZSB1ZTpjYXNlIGRlOmNhc2UgZmU6Y2FzZSBwZTpjYXNlIG1lOmNhc2UgeWU6Y2FzZSB3ZTpjYXNlIGJlOmNhc2UgRGU6Y2FzZSBGZTpjYXNlIFNlOmNhc2Uga2U6Y2FzZSBSZTpjYXNlIGtBOmUuZm5BcnJheS5zcGxpY2UobiwxKTtlLmFyZ3NBcnJheS5zcGxpY2UobiwxKTtvLS07Y29udGludWU7Y2FzZSBOQTpjb25zdFt0XT1lLmFyZ3NBcnJheVtuXTtsZXQgaT0wLGE9dC5sZW5ndGg7Zm9yKDtpPGE7KXtjb25zdFtlXT10W2ldO3N3aXRjaChlKXtjYXNlIlRSIjpjYXNlIlRSMiI6Y2FzZSJIVCI6Y2FzZSJCRyI6Y2FzZSJCRzIiOmNhc2UiVUNSIjpjYXNlIlVDUjIiOnQuc3BsaWNlKGksMSk7YS0tO2NvbnRpbnVlfWkrK319bisrfX19Y2xhc3MgU3RhdGVNYW5hZ2Vye2NvbnN0cnVjdG9yKGU9bmV3IEV2YWxTdGF0ZSl7dGhpcy5zdGF0ZT1lO3RoaXMuc3RhdGVTdGFjaz1bXX1zYXZlKCl7Y29uc3QgZT10aGlzLnN0YXRlO3RoaXMuc3RhdGVTdGFjay5wdXNoKHRoaXMuc3RhdGUpO3RoaXMuc3RhdGU9ZS5jbG9uZSgpfXJlc3RvcmUoKXtjb25zdCBlPXRoaXMuc3RhdGVTdGFjay5wb3AoKTtlJiYodGhpcy5zdGF0ZT1lKX10cmFuc2Zvcm0oZSl7dGhpcy5zdGF0ZS5jdG09VXRpbC50cmFuc2Zvcm0odGhpcy5zdGF0ZS5jdG0sZSl9fWNsYXNzIFRleHRTdGF0ZXtjb25zdHJ1Y3Rvcigpe3RoaXMuY3RtPW5ldyBGbG9hdDMyQXJyYXkoaSk7dGhpcy5mb250TmFtZT1udWxsO3RoaXMuZm9udFNpemU9MDt0aGlzLmxvYWRlZE5hbWU9bnVsbDt0aGlzLmZvbnQ9bnVsbDt0aGlzLmZvbnRNYXRyaXg9YTt0aGlzLnRleHRNYXRyaXg9aS5zbGljZSgpO3RoaXMudGV4dExpbmVNYXRyaXg9aS5zbGljZSgpO3RoaXMuY2hhclNwYWNpbmc9MDt0aGlzLndvcmRTcGFjaW5nPTA7dGhpcy5sZWFkaW5nPTA7dGhpcy50ZXh0SFNjYWxlPTE7dGhpcy50ZXh0UmlzZT0wfXNldFRleHRNYXRyaXgoZSx0LGksYSxzLHIpe2NvbnN0IG49dGhpcy50ZXh0TWF0cml4O25bMF09ZTtuWzFdPXQ7blsyXT1pO25bM109YTtuWzRdPXM7bls1XT1yfXNldFRleHRMaW5lTWF0cml4KGUsdCxpLGEscyxyKXtjb25zdCBuPXRoaXMudGV4dExpbmVNYXRyaXg7blswXT1lO25bMV09dDtuWzJdPWk7blszXT1hO25bNF09cztuWzVdPXJ9dHJhbnNsYXRlVGV4dE1hdHJpeChlLHQpe2NvbnN0IGk9dGhpcy50ZXh0TWF0cml4O2lbNF09aVswXSplK2lbMl0qdCtpWzRdO2lbNV09aVsxXSplK2lbM10qdCtpWzVdfXRyYW5zbGF0ZVRleHRMaW5lTWF0cml4KGUsdCl7Y29uc3QgaT10aGlzLnRleHRMaW5lTWF0cml4O2lbNF09aVswXSplK2lbMl0qdCtpWzRdO2lbNV09aVsxXSplK2lbM10qdCtpWzVdfWNhcnJpYWdlUmV0dXJuKCl7dGhpcy50cmFuc2xhdGVUZXh0TGluZU1hdHJpeCgwLC10aGlzLmxlYWRpbmcpO3RoaXMudGV4dE1hdHJpeD10aGlzLnRleHRMaW5lTWF0cml4LnNsaWNlKCl9Y2xvbmUoKXtjb25zdCBlPU9iamVjdC5jcmVhdGUodGhpcyk7ZS50ZXh0TWF0cml4PXRoaXMudGV4dE1hdHJpeC5zbGljZSgpO2UudGV4dExpbmVNYXRyaXg9dGhpcy50ZXh0TGluZU1hdHJpeC5zbGljZSgpO2UuZm9udE1hdHJpeD10aGlzLmZvbnRNYXRyaXguc2xpY2UoKTtyZXR1cm4gZX19Y2xhc3MgRXZhbFN0YXRle2NvbnN0cnVjdG9yKCl7dGhpcy5jdG09bmV3IEZsb2F0MzJBcnJheShpKTt0aGlzLmZvbnQ9bnVsbDt0aGlzLnRleHRSZW5kZXJpbmdNb2RlPXk7dGhpcy5maWxsQ29sb3JTcGFjZT1Db2xvclNwYWNlLnNpbmdsZXRvbnMuZ3JheTt0aGlzLnN0cm9rZUNvbG9yU3BhY2U9Q29sb3JTcGFjZS5zaW5nbGV0b25zLmdyYXl9Y2xvbmUoKXtyZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzKX19Y2xhc3MgRXZhbHVhdG9yUHJlcHJvY2Vzc29ye3N0YXRpYyBnZXQgb3BNYXAoKXtyZXR1cm4gc2hhZG93KHRoaXMsIm9wTWFwIixPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobnVsbCkse3c6e2lkOndBLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LEo6e2lkOmJBLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LGo6e2lkOkRBLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LE06e2lkOkZBLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LGQ6e2lkOlNBLG51bUFyZ3M6Mix2YXJpYWJsZUFyZ3M6ITF9LHJpOntpZDprQSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxpOntpZDpSQSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxnczp7aWQ6TkEsbnVtQXJnczoxLHZhcmlhYmxlQXJnczohMX0scTp7aWQ6R0EsbnVtQXJnczowLHZhcmlhYmxlQXJnczohMX0sUTp7aWQ6eEEsbnVtQXJnczowLHZhcmlhYmxlQXJnczohMX0sY206e2lkOk1BLG51bUFyZ3M6Nix2YXJpYWJsZUFyZ3M6ITF9LG06e2lkOlVBLG51bUFyZ3M6Mix2YXJpYWJsZUFyZ3M6ITF9LGw6e2lkOkxBLG51bUFyZ3M6Mix2YXJpYWJsZUFyZ3M6ITF9LGM6e2lkOkpBLG51bUFyZ3M6Nix2YXJpYWJsZUFyZ3M6ITF9LHY6e2lkOkhBLG51bUFyZ3M6NCx2YXJpYWJsZUFyZ3M6ITF9LHk6e2lkOllBLG51bUFyZ3M6NCx2YXJpYWJsZUFyZ3M6ITF9LGg6e2lkOnZBLG51bUFyZ3M6MCx2YXJpYWJsZUFyZ3M6ITF9LHJlOntpZDpLQSxudW1BcmdzOjQsdmFyaWFibGVBcmdzOiExfSxTOntpZDpUQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxzOntpZDpxQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxmOntpZDpPQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxGOntpZDpPQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSwiZioiOntpZDpQQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxCOntpZDpXQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSwiQioiOntpZDpYQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxiOntpZDpqQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSwiYioiOntpZDpaQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxuOntpZDpWQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxXOntpZDp6QSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSwiVyoiOntpZDpfQSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxCVDp7aWQ6JEEsbnVtQXJnczowLHZhcmlhYmxlQXJnczohMX0sRVQ6e2lkOkFlLG51bUFyZ3M6MCx2YXJpYWJsZUFyZ3M6ITF9LFRjOntpZDplZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxUdzp7aWQ6dGUsbnVtQXJnczoxLHZhcmlhYmxlQXJnczohMX0sVHo6e2lkOmllLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LFRMOntpZDphZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxUZjp7aWQ6c2UsbnVtQXJnczoyLHZhcmlhYmxlQXJnczohMX0sVHI6e2lkOnJlLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LFRzOntpZDpuZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxUZDp7aWQ6b2UsbnVtQXJnczoyLHZhcmlhYmxlQXJnczohMX0sVEQ6e2lkOmdlLG51bUFyZ3M6Mix2YXJpYWJsZUFyZ3M6ITF9LFRtOntpZDpJZSxudW1BcmdzOjYsdmFyaWFibGVBcmdzOiExfSwiVCoiOntpZDpjZSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxUajp7aWQ6aGUsbnVtQXJnczoxLHZhcmlhYmxlQXJnczohMX0sVEo6e2lkOmxlLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LCInIjp7aWQ6Q2UsbnVtQXJnczoxLHZhcmlhYmxlQXJnczohMX0sJyInOntpZDpCZSxudW1BcmdzOjMsdmFyaWFibGVBcmdzOiExfSxkMDp7aWQ6UWUsbnVtQXJnczoyLHZhcmlhYmxlQXJnczohMX0sZDE6e2lkOkVlLG51bUFyZ3M6Nix2YXJpYWJsZUFyZ3M6ITF9LENTOntpZDp1ZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxjczp7aWQ6ZGUsbnVtQXJnczoxLHZhcmlhYmxlQXJnczohMX0sU0M6e2lkOmZlLG51bUFyZ3M6NCx2YXJpYWJsZUFyZ3M6ITB9LFNDTjp7aWQ6cGUsbnVtQXJnczozMyx2YXJpYWJsZUFyZ3M6ITB9LHNjOntpZDptZSxudW1BcmdzOjQsdmFyaWFibGVBcmdzOiEwfSxzY246e2lkOnllLG51bUFyZ3M6MzMsdmFyaWFibGVBcmdzOiEwfSxHOntpZDp3ZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxnOntpZDpiZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxSRzp7aWQ6RGUsbnVtQXJnczozLHZhcmlhYmxlQXJnczohMX0scmc6e2lkOkZlLG51bUFyZ3M6Myx2YXJpYWJsZUFyZ3M6ITF9LEs6e2lkOlNlLG51bUFyZ3M6NCx2YXJpYWJsZUFyZ3M6ITF9LGs6e2lkOmtlLG51bUFyZ3M6NCx2YXJpYWJsZUFyZ3M6ITF9LHNoOntpZDpSZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxCSTp7aWQ6TmUsbnVtQXJnczowLHZhcmlhYmxlQXJnczohMX0sSUQ6e2lkOkdlLG51bUFyZ3M6MCx2YXJpYWJsZUFyZ3M6ITF9LEVJOntpZDp4ZSxudW1BcmdzOjEsdmFyaWFibGVBcmdzOiExfSxEbzp7aWQ6TWUsbnVtQXJnczoxLHZhcmlhYmxlQXJnczohMX0sTVA6e2lkOlVlLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LERQOntpZDpMZSxudW1BcmdzOjIsdmFyaWFibGVBcmdzOiExfSxCTUM6e2lkOkplLG51bUFyZ3M6MSx2YXJpYWJsZUFyZ3M6ITF9LEJEQzp7aWQ6SGUsbnVtQXJnczoyLHZhcmlhYmxlQXJnczohMX0sRU1DOntpZDpZZSxudW1BcmdzOjAsdmFyaWFibGVBcmdzOiExfSxCWDp7aWQ6dmUsbnVtQXJnczowLHZhcmlhYmxlQXJnczohMX0sRVg6e2lkOktlLG51bUFyZ3M6MCx2YXJpYWJsZUFyZ3M6ITF9LEJNOm51bGwsQkQ6bnVsbCx0cnVlOm51bGwsZmE6bnVsbCxmYWw6bnVsbCxmYWxzOm51bGwsZmFsc2U6bnVsbCxudTpudWxsLG51bDpudWxsLG51bGw6bnVsbH0pKX1zdGF0aWMgTUFYX0lOVkFMSURfUEFUSF9PUFM9MTA7Y29uc3RydWN0b3IoZSx0LGk9bmV3IFN0YXRlTWFuYWdlcil7dGhpcy5wYXJzZXI9bmV3IFBhcnNlcih7bGV4ZXI6bmV3IExleGVyKGUsRXZhbHVhdG9yUHJlcHJvY2Vzc29yLm9wTWFwKSx4cmVmOnR9KTt0aGlzLnN0YXRlTWFuYWdlcj1pO3RoaXMubm9uUHJvY2Vzc2VkQXJncz1bXTt0aGlzLl9pc1BhdGhPcD0hMTt0aGlzLl9udW1JbnZhbGlkUGF0aE9QUz0wfWdldCBzYXZlZFN0YXRlc0RlcHRoKCl7cmV0dXJuIHRoaXMuc3RhdGVNYW5hZ2VyLnN0YXRlU3RhY2subGVuZ3RofXJlYWQoZSl7bGV0IHQ9ZS5hcmdzO2Zvcig7Oyl7Y29uc3QgaT10aGlzLnBhcnNlci5nZXRPYmooKTtpZihpIGluc3RhbmNlb2YgQ21kKXtjb25zdCBhPWkuY21kLHM9RXZhbHVhdG9yUHJlcHJvY2Vzc29yLm9wTWFwW2FdO2lmKCFzKXt3YXJuKGBVbmtub3duIGNvbW1hbmQgIiR7YX0iLmApO2NvbnRpbnVlfWNvbnN0IHI9cy5pZCxuPXMubnVtQXJncztsZXQgbz1udWxsIT09dD90Lmxlbmd0aDowO3RoaXMuX2lzUGF0aE9wfHwodGhpcy5fbnVtSW52YWxpZFBhdGhPUFM9MCk7dGhpcy5faXNQYXRoT3A9cj49VUEmJnI8PVZBO2lmKHMudmFyaWFibGVBcmdzKW8+biYmaW5mbyhgQ29tbWFuZCAke2F9OiBleHBlY3RlZCBbMCwgJHtufV0gYXJncywgYnV0IHJlY2VpdmVkICR7b30gYXJncy5gKTtlbHNle2lmKG8hPT1uKXtjb25zdCBlPXRoaXMubm9uUHJvY2Vzc2VkQXJncztmb3IoO28+bjspe2UucHVzaCh0LnNoaWZ0KCkpO28tLX1mb3IoO288biYmMCE9PWUubGVuZ3RoOyl7bnVsbD09PXQmJih0PVtdKTt0LnVuc2hpZnQoZS5wb3AoKSk7bysrfX1pZihvPG4pe2NvbnN0IGU9YGNvbW1hbmQgJHthfTogZXhwZWN0ZWQgJHtufSBhcmdzLCBidXQgcmVjZWl2ZWQgJHtvfSBhcmdzLmA7aWYodGhpcy5faXNQYXRoT3AmJisrdGhpcy5fbnVtSW52YWxpZFBhdGhPUFM+RXZhbHVhdG9yUHJlcHJvY2Vzc29yLk1BWF9JTlZBTElEX1BBVEhfT1BTKXRocm93IG5ldyBGb3JtYXRFcnJvcihgSW52YWxpZCAke2V9YCk7d2FybihgU2tpcHBpbmcgJHtlfWApO251bGwhPT10JiYodC5sZW5ndGg9MCk7Y29udGludWV9fXRoaXMucHJlcHJvY2Vzc0NvbW1hbmQocix0KTtlLmZuPXI7ZS5hcmdzPXQ7cmV0dXJuITB9aWYoaT09PXB0KXJldHVybiExO2lmKG51bGwhPT1pKXtudWxsPT09dCYmKHQ9W10pO3QucHVzaChpKTtpZih0Lmxlbmd0aD4zMyl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlRvbyBtYW55IGFyZ3VtZW50cyIpfX19cHJlcHJvY2Vzc0NvbW1hbmQoZSx0KXtzd2l0Y2goMHxlKXtjYXNlIEdBOnRoaXMuc3RhdGVNYW5hZ2VyLnNhdmUoKTticmVhaztjYXNlIHhBOnRoaXMuc3RhdGVNYW5hZ2VyLnJlc3RvcmUoKTticmVhaztjYXNlIE1BOnRoaXMuc3RhdGVNYW5hZ2VyLnRyYW5zZm9ybSh0KX19fWNsYXNzIERlZmF1bHRBcHBlYXJhbmNlRXZhbHVhdG9yIGV4dGVuZHMgRXZhbHVhdG9yUHJlcHJvY2Vzc29ye2NvbnN0cnVjdG9yKGUpe3N1cGVyKG5ldyBTdHJpbmdTdHJlYW0oZSkpfXBhcnNlKCl7Y29uc3QgZT17Zm46MCxhcmdzOltdfSx0PXtmb250U2l6ZTowLGZvbnROYW1lOiIiLGZvbnRDb2xvcjpuZXcgVWludDhDbGFtcGVkQXJyYXkoMyl9O3RyeXtmb3IoOzspe2UuYXJncy5sZW5ndGg9MDtpZighdGhpcy5yZWFkKGUpKWJyZWFrO2lmKDAhPT10aGlzLnNhdmVkU3RhdGVzRGVwdGgpY29udGludWU7Y29uc3R7Zm46aSxhcmdzOmF9PWU7c3dpdGNoKDB8aSl7Y2FzZSBzZTpjb25zdFtlLGldPWE7ZSBpbnN0YW5jZW9mIE5hbWUmJih0LmZvbnROYW1lPWUubmFtZSk7Im51bWJlciI9PXR5cGVvZiBpJiZpPjAmJih0LmZvbnRTaXplPWkpO2JyZWFrO2Nhc2UgRmU6Q29sb3JTcGFjZS5zaW5nbGV0b25zLnJnYi5nZXRSZ2JJdGVtKGEsMCx0LmZvbnRDb2xvciwwKTticmVhaztjYXNlIGJlOkNvbG9yU3BhY2Uuc2luZ2xldG9ucy5ncmF5LmdldFJnYkl0ZW0oYSwwLHQuZm9udENvbG9yLDApO2JyZWFrO2Nhc2Uga2U6Q29sb3JTcGFjZS5zaW5nbGV0b25zLmNteWsuZ2V0UmdiSXRlbShhLDAsdC5mb250Q29sb3IsMCl9fX1jYXRjaChlKXt3YXJuKGBwYXJzZURlZmF1bHRBcHBlYXJhbmNlIC0gaWdub3JpbmcgZXJyb3JzOiAiJHtlfSIuYCl9cmV0dXJuIHR9fWZ1bmN0aW9uIHBhcnNlRGVmYXVsdEFwcGVhcmFuY2UoZSl7cmV0dXJuIG5ldyBEZWZhdWx0QXBwZWFyYW5jZUV2YWx1YXRvcihlKS5wYXJzZSgpfWNsYXNzIEFwcGVhcmFuY2VTdHJlYW1FdmFsdWF0b3IgZXh0ZW5kcyBFdmFsdWF0b3JQcmVwcm9jZXNzb3J7Y29uc3RydWN0b3IoZSx0LGkpe3N1cGVyKGUpO3RoaXMuc3RyZWFtPWU7dGhpcy5ldmFsdWF0b3JPcHRpb25zPXQ7dGhpcy54cmVmPWk7dGhpcy5yZXNvdXJjZXM9ZS5kaWN0Py5nZXQoIlJlc291cmNlcyIpfXBhcnNlKCl7Y29uc3QgZT17Zm46MCxhcmdzOltdfTtsZXQgdD17c2NhbGVGYWN0b3I6MSxmb250U2l6ZTowLGZvbnROYW1lOiIiLGZvbnRDb2xvcjpuZXcgVWludDhDbGFtcGVkQXJyYXkoMyksZmlsbENvbG9yU3BhY2U6Q29sb3JTcGFjZS5zaW5nbGV0b25zLmdyYXl9LGk9ITE7Y29uc3QgYT1bXTt0cnl7Zm9yKDs7KXtlLmFyZ3MubGVuZ3RoPTA7aWYoaXx8IXRoaXMucmVhZChlKSlicmVhaztjb25zdHtmbjpzLGFyZ3M6cn09ZTtzd2l0Y2goMHxzKXtjYXNlIEdBOmEucHVzaCh7c2NhbGVGYWN0b3I6dC5zY2FsZUZhY3Rvcixmb250U2l6ZTp0LmZvbnRTaXplLGZvbnROYW1lOnQuZm9udE5hbWUsZm9udENvbG9yOnQuZm9udENvbG9yLnNsaWNlKCksZmlsbENvbG9yU3BhY2U6dC5maWxsQ29sb3JTcGFjZX0pO2JyZWFrO2Nhc2UgeEE6dD1hLnBvcCgpfHx0O2JyZWFrO2Nhc2UgSWU6dC5zY2FsZUZhY3Rvcio9TWF0aC5oeXBvdChyWzBdLHJbMV0pO2JyZWFrO2Nhc2Ugc2U6Y29uc3RbZSxzXT1yO2UgaW5zdGFuY2VvZiBOYW1lJiYodC5mb250TmFtZT1lLm5hbWUpOyJudW1iZXIiPT10eXBlb2YgcyYmcz4wJiYodC5mb250U2l6ZT1zKnQuc2NhbGVGYWN0b3IpO2JyZWFrO2Nhc2UgZGU6dC5maWxsQ29sb3JTcGFjZT1Db2xvclNwYWNlLnBhcnNlKHtjczpyWzBdLHhyZWY6dGhpcy54cmVmLHJlc291cmNlczp0aGlzLnJlc291cmNlcyxwZGZGdW5jdGlvbkZhY3Rvcnk6dGhpcy5fcGRmRnVuY3Rpb25GYWN0b3J5LGxvY2FsQ29sb3JTcGFjZUNhY2hlOnRoaXMuX2xvY2FsQ29sb3JTcGFjZUNhY2hlfSk7YnJlYWs7Y2FzZSBtZTp0LmZpbGxDb2xvclNwYWNlLmdldFJnYkl0ZW0ociwwLHQuZm9udENvbG9yLDApO2JyZWFrO2Nhc2UgRmU6Q29sb3JTcGFjZS5zaW5nbGV0b25zLnJnYi5nZXRSZ2JJdGVtKHIsMCx0LmZvbnRDb2xvciwwKTticmVhaztjYXNlIGJlOkNvbG9yU3BhY2Uuc2luZ2xldG9ucy5ncmF5LmdldFJnYkl0ZW0ociwwLHQuZm9udENvbG9yLDApO2JyZWFrO2Nhc2Uga2U6Q29sb3JTcGFjZS5zaW5nbGV0b25zLmNteWsuZ2V0UmdiSXRlbShyLDAsdC5mb250Q29sb3IsMCk7YnJlYWs7Y2FzZSBoZTpjYXNlIGxlOmNhc2UgQ2U6Y2FzZSBCZTppPSEwfX19Y2F0Y2goZSl7d2FybihgcGFyc2VBcHBlYXJhbmNlU3RyZWFtIC0gaWdub3JpbmcgZXJyb3JzOiAiJHtlfSIuYCl9dGhpcy5zdHJlYW0ucmVzZXQoKTtkZWxldGUgdC5zY2FsZUZhY3RvcjtkZWxldGUgdC5maWxsQ29sb3JTcGFjZTtyZXR1cm4gdH1nZXQgX2xvY2FsQ29sb3JTcGFjZUNhY2hlKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJfbG9jYWxDb2xvclNwYWNlQ2FjaGUiLG5ldyBMb2NhbENvbG9yU3BhY2VDYWNoZSl9Z2V0IF9wZGZGdW5jdGlvbkZhY3RvcnkoKXtyZXR1cm4gc2hhZG93KHRoaXMsIl9wZGZGdW5jdGlvbkZhY3RvcnkiLG5ldyBQREZGdW5jdGlvbkZhY3Rvcnkoe3hyZWY6dGhpcy54cmVmLGlzRXZhbFN1cHBvcnRlZDp0aGlzLmV2YWx1YXRvck9wdGlvbnMuaXNFdmFsU3VwcG9ydGVkfSkpfX1mdW5jdGlvbiBnZXRQZGZDb2xvcihlLHQpe2lmKGVbMF09PT1lWzFdJiZlWzFdPT09ZVsyXSl7cmV0dXJuYCR7bnVtYmVyVG9TdHJpbmcoZVswXS8yNTUpfSAke3Q/ImciOiJHIn1gfXJldHVybiBBcnJheS5mcm9tKGUsKGU9Pm51bWJlclRvU3RyaW5nKGUvMjU1KSkpLmpvaW4oIiAiKSsiICIrKHQ/InJnIjoiUkciKX1jbGFzcyBGYWtlVW5pY29kZUZvbnR7Y29uc3RydWN0b3IoZSx0KXt0aGlzLnhyZWY9ZTt0aGlzLndpZHRocz1udWxsO3RoaXMuZmlyc3RDaGFyPTEvMDt0aGlzLmxhc3RDaGFyPS0xLzA7dGhpcy5mb250RmFtaWx5PXQ7Y29uc3QgaT1uZXcgT2Zmc2NyZWVuQ2FudmFzKDEsMSk7dGhpcy5jdHhNZWFzdXJlPWkuZ2V0Q29udGV4dCgiMmQiKTtGYWtlVW5pY29kZUZvbnQuX2ZvbnROYW1lSWR8fChGYWtlVW5pY29kZUZvbnQuX2ZvbnROYW1lSWQ9MSk7dGhpcy5mb250TmFtZT1OYW1lLmdldChgSW52YWxpZFBERmpzRm9udF8ke3R9XyR7RmFrZVVuaWNvZGVGb250Ll9mb250TmFtZUlkKyt9YCl9Z2V0IGZvbnREZXNjcmlwdG9yUmVmKCl7aWYoIUZha2VVbmljb2RlRm9udC5fZm9udERlc2NyaXB0b3JSZWYpe2NvbnN0IGU9bmV3IERpY3QodGhpcy54cmVmKTtlLnNldCgiVHlwZSIsTmFtZS5nZXQoIkZvbnREZXNjcmlwdG9yIikpO2Uuc2V0KCJGb250TmFtZSIsdGhpcy5mb250TmFtZSk7ZS5zZXQoIkZvbnRGYW1pbHkiLCJNeXJpYWRQcm8gUmVndWxhciIpO2Uuc2V0KCJGb250QkJveCIsWzAsMCwwLDBdKTtlLnNldCgiRm9udFN0cmV0Y2giLE5hbWUuZ2V0KCJOb3JtYWwiKSk7ZS5zZXQoIkZvbnRXZWlnaHQiLDQwMCk7ZS5zZXQoIkl0YWxpY0FuZ2xlIiwwKTtGYWtlVW5pY29kZUZvbnQuX2ZvbnREZXNjcmlwdG9yUmVmPXRoaXMueHJlZi5nZXROZXdQZXJzaXN0ZW50UmVmKGUpfXJldHVybiBGYWtlVW5pY29kZUZvbnQuX2ZvbnREZXNjcmlwdG9yUmVmfWdldCBkZXNjZW5kYW50Rm9udFJlZigpe2NvbnN0IGU9bmV3IERpY3QodGhpcy54cmVmKTtlLnNldCgiQmFzZUZvbnQiLHRoaXMuZm9udE5hbWUpO2Uuc2V0KCJUeXBlIixOYW1lLmdldCgiRm9udCIpKTtlLnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIkNJREZvbnRUeXBlMCIpKTtlLnNldCgiQ0lEVG9HSURNYXAiLE5hbWUuZ2V0KCJJZGVudGl0eSIpKTtlLnNldCgiRmlyc3RDaGFyIix0aGlzLmZpcnN0Q2hhcik7ZS5zZXQoIkxhc3RDaGFyIix0aGlzLmxhc3RDaGFyKTtlLnNldCgiRm9udERlc2NyaXB0b3IiLHRoaXMuZm9udERlc2NyaXB0b3JSZWYpO2Uuc2V0KCJEVyIsMWUzKTtjb25zdCB0PVtdLGk9Wy4uLnRoaXMud2lkdGhzLmVudHJpZXMoKV0uc29ydCgpO2xldCBhPW51bGwscz1udWxsO2Zvcihjb25zdFtlLHJdb2YgaSlpZihhKWlmKGU9PT1hK3MubGVuZ3RoKXMucHVzaChyKTtlbHNle3QucHVzaChhLHMpO2E9ZTtzPVtyXX1lbHNle2E9ZTtzPVtyXX1hJiZ0LnB1c2goYSxzKTtlLnNldCgiVyIsdCk7Y29uc3Qgcj1uZXcgRGljdCh0aGlzLnhyZWYpO3Iuc2V0KCJPcmRlcmluZyIsIklkZW50aXR5Iik7ci5zZXQoIlJlZ2lzdHJ5IiwiQWRvYmUiKTtyLnNldCgiU3VwcGxlbWVudCIsMCk7ZS5zZXQoIkNJRFN5c3RlbUluZm8iLHIpO3JldHVybiB0aGlzLnhyZWYuZ2V0TmV3UGVyc2lzdGVudFJlZihlKX1nZXQgYmFzZUZvbnRSZWYoKXtjb25zdCBlPW5ldyBEaWN0KHRoaXMueHJlZik7ZS5zZXQoIkJhc2VGb250Iix0aGlzLmZvbnROYW1lKTtlLnNldCgiVHlwZSIsTmFtZS5nZXQoIkZvbnQiKSk7ZS5zZXQoIlN1YnR5cGUiLE5hbWUuZ2V0KCJUeXBlMCIpKTtlLnNldCgiRW5jb2RpbmciLE5hbWUuZ2V0KCJJZGVudGl0eS1IIikpO2Uuc2V0KCJEZXNjZW5kYW50Rm9udHMiLFt0aGlzLmRlc2NlbmRhbnRGb250UmVmXSk7ZS5zZXQoIlRvVW5pY29kZSIsTmFtZS5nZXQoIklkZW50aXR5LUgiKSk7cmV0dXJuIHRoaXMueHJlZi5nZXROZXdQZXJzaXN0ZW50UmVmKGUpfWdldCByZXNvdXJjZXMoKXtjb25zdCBlPW5ldyBEaWN0KHRoaXMueHJlZiksdD1uZXcgRGljdCh0aGlzLnhyZWYpO3Quc2V0KHRoaXMuZm9udE5hbWUubmFtZSx0aGlzLmJhc2VGb250UmVmKTtlLnNldCgiRm9udCIsdCk7cmV0dXJuIGV9X2NyZWF0ZUNvbnRleHQoKXt0aGlzLndpZHRocz1uZXcgTWFwO3RoaXMuY3R4TWVhc3VyZS5mb250PWAxMDAwcHggJHt0aGlzLmZvbnRGYW1pbHl9YDtyZXR1cm4gdGhpcy5jdHhNZWFzdXJlfWNyZWF0ZUZvbnRSZXNvdXJjZXMoZSl7Y29uc3QgdD10aGlzLl9jcmVhdGVDb250ZXh0KCk7Zm9yKGNvbnN0IGkgb2YgZS5zcGxpdCgvXHJcbj98XG4vKSlmb3IoY29uc3QgZSBvZiBpLnNwbGl0KCIiKSl7Y29uc3QgaT1lLmNoYXJDb2RlQXQoMCk7aWYodGhpcy53aWR0aHMuaGFzKGkpKWNvbnRpbnVlO2NvbnN0IGE9dC5tZWFzdXJlVGV4dChlKSxzPU1hdGguY2VpbChhLndpZHRoKTt0aGlzLndpZHRocy5zZXQoaSxzKTt0aGlzLmZpcnN0Q2hhcj1NYXRoLm1pbihpLHRoaXMuZmlyc3RDaGFyKTt0aGlzLmxhc3RDaGFyPU1hdGgubWF4KGksdGhpcy5sYXN0Q2hhcil9cmV0dXJuIHRoaXMucmVzb3VyY2VzfXN0YXRpYyBnZXRGaXJzdFBvc2l0aW9uSW5mbyhlLHQsaSl7Y29uc3RbYSxuLG8sZ109ZTtsZXQgYz1vLWEsaD1nLW47dCUxODAhPTAmJihbYyxoXT1baCxjXSk7Y29uc3QgbD1zKmk7cmV0dXJue2Nvb3JkczpbMCxoK3IqaS1sXSxiYm94OlswLDAsYyxoXSxtYXRyaXg6MCE9PXQ/Z2V0Um90YXRpb25NYXRyaXgodCxoLGwpOnZvaWQgMH19Y3JlYXRlQXBwZWFyYW5jZShlLHQsaSxhLG4sbyl7Y29uc3QgZz10aGlzLl9jcmVhdGVDb250ZXh0KCksYz1bXTtsZXQgaD0tMS8wO2Zvcihjb25zdCB0IG9mIGUuc3BsaXQoL1xyXG4/fFxuLykpe2MucHVzaCh0KTtjb25zdCBlPWcubWVhc3VyZVRleHQodCkud2lkdGg7aD1NYXRoLm1heChoLGUpO2Zvcihjb25zdCBlIG9mIGNvZGVQb2ludEl0ZXIodCkpe2NvbnN0IHQ9U3RyaW5nLmZyb21Db2RlUG9pbnQoZSk7bGV0IGk9dGhpcy53aWR0aHMuZ2V0KGUpO2lmKHZvaWQgMD09PWkpe2NvbnN0IGE9Zy5tZWFzdXJlVGV4dCh0KTtpPU1hdGguY2VpbChhLndpZHRoKTt0aGlzLndpZHRocy5zZXQoZSxpKTt0aGlzLmZpcnN0Q2hhcj1NYXRoLm1pbihlLHRoaXMuZmlyc3RDaGFyKTt0aGlzLmxhc3RDaGFyPU1hdGgubWF4KGUsdGhpcy5sYXN0Q2hhcil9fX1oKj1hLzFlMztjb25zdFtsLEMsUSxFXT10O2xldCB1PVEtbCxkPUUtQztpJTE4MCE9MCYmKFt1LGRdPVtkLHVdKTtsZXQgZj0xO2g+dSYmKGY9dS9oKTtsZXQgcD0xO2NvbnN0IG09cyphLHk9ciphLHc9bSpjLmxlbmd0aDt3PmQmJihwPWQvdyk7Y29uc3QgYj1hKk1hdGgubWluKGYscCksRD1bInEiLGAwIDAgJHtudW1iZXJUb1N0cmluZyh1KX0gJHtudW1iZXJUb1N0cmluZyhkKX0gcmUgVyBuYCwiQlQiLGAxIDAgMCAxIDAgJHtudW1iZXJUb1N0cmluZyhkK3kpfSBUbSAwIFRjICR7Z2V0UGRmQ29sb3IobiwhMCl9YCxgLyR7dGhpcy5mb250TmFtZS5uYW1lfSAke251bWJlclRvU3RyaW5nKGIpfSBUZmBdLHtyZXNvdXJjZXM6Rn09dGhpcztpZigxIT09KG89Im51bWJlciI9PXR5cGVvZiBvJiZvPj0wJiZvPD0xP286MSkpe0QucHVzaCgiL1IwIGdzIik7Y29uc3QgZT1uZXcgRGljdCh0aGlzLnhyZWYpLHQ9bmV3IERpY3QodGhpcy54cmVmKTt0LnNldCgiY2EiLG8pO3Quc2V0KCJDQSIsbyk7dC5zZXQoIlR5cGUiLE5hbWUuZ2V0KCJFeHRHU3RhdGUiKSk7ZS5zZXQoIlIwIix0KTtGLnNldCgiRXh0R1N0YXRlIixlKX1jb25zdCBTPW51bWJlclRvU3RyaW5nKG0pO2Zvcihjb25zdCBlIG9mIGMpRC5wdXNoKGAwIC0ke1N9IFRkIDwke3N0cmluZ1RvVVRGMTZIZXhTdHJpbmcoZSl9PiBUamApO0QucHVzaCgiRVQiLCJRIik7Y29uc3Qgaz1ELmpvaW4oIlxuIiksUj1uZXcgRGljdCh0aGlzLnhyZWYpO1Iuc2V0KCJTdWJ0eXBlIixOYW1lLmdldCgiRm9ybSIpKTtSLnNldCgiVHlwZSIsTmFtZS5nZXQoIlhPYmplY3QiKSk7Ui5zZXQoIkJCb3giLFswLDAsdSxkXSk7Ui5zZXQoIkxlbmd0aCIsay5sZW5ndGgpO1Iuc2V0KCJSZXNvdXJjZXMiLEYpO2lmKGkpe2NvbnN0IGU9Z2V0Um90YXRpb25NYXRyaXgoaSx1LGQpO1Iuc2V0KCJNYXRyaXgiLGUpfWNvbnN0IE49bmV3IFN0cmluZ1N0cmVhbShrKTtOLmRpY3Q9UjtyZXR1cm4gTn19Y2xhc3MgTmFtZU9yTnVtYmVyVHJlZXtjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5jb25zdHJ1Y3Rvcj09PU5hbWVPck51bWJlclRyZWUmJnVucmVhY2hhYmxlKCJDYW5ub3QgaW5pdGlhbGl6ZSBOYW1lT3JOdW1iZXJUcmVlLiIpO3RoaXMucm9vdD1lO3RoaXMueHJlZj10O3RoaXMuX3R5cGU9aX1nZXRBbGwoKXtjb25zdCBlPW5ldyBNYXA7aWYoIXRoaXMucm9vdClyZXR1cm4gZTtjb25zdCB0PXRoaXMueHJlZixpPW5ldyBSZWZTZXQ7aS5wdXQodGhpcy5yb290KTtjb25zdCBhPVt0aGlzLnJvb3RdO2Zvcig7YS5sZW5ndGg+MDspe2NvbnN0IHM9dC5mZXRjaElmUmVmKGEuc2hpZnQoKSk7aWYoIShzIGluc3RhbmNlb2YgRGljdCkpY29udGludWU7aWYocy5oYXMoIktpZHMiKSl7Y29uc3QgZT1zLmdldCgiS2lkcyIpO2lmKCFBcnJheS5pc0FycmF5KGUpKWNvbnRpbnVlO2Zvcihjb25zdCB0IG9mIGUpe2lmKGkuaGFzKHQpKXRocm93IG5ldyBGb3JtYXRFcnJvcihgRHVwbGljYXRlIGVudHJ5IGluICIke3RoaXMuX3R5cGV9IiB0cmVlLmApO2EucHVzaCh0KTtpLnB1dCh0KX1jb250aW51ZX1jb25zdCByPXMuZ2V0KHRoaXMuX3R5cGUpO2lmKEFycmF5LmlzQXJyYXkocikpZm9yKGxldCBpPTAsYT1yLmxlbmd0aDtpPGE7aSs9MillLnNldCh0LmZldGNoSWZSZWYocltpXSksdC5mZXRjaElmUmVmKHJbaSsxXSkpfXJldHVybiBlfWdldChlKXtpZighdGhpcy5yb290KXJldHVybiBudWxsO2NvbnN0IHQ9dGhpcy54cmVmO2xldCBpPXQuZmV0Y2hJZlJlZih0aGlzLnJvb3QpLGE9MDtmb3IoO2kuaGFzKCJLaWRzIik7KXtpZigrK2E+MTApe3dhcm4oYFNlYXJjaCBkZXB0aCBsaW1pdCByZWFjaGVkIGZvciAiJHt0aGlzLl90eXBlfSIgdHJlZS5gKTtyZXR1cm4gbnVsbH1jb25zdCBzPWkuZ2V0KCJLaWRzIik7aWYoIUFycmF5LmlzQXJyYXkocykpcmV0dXJuIG51bGw7bGV0IHI9MCxuPXMubGVuZ3RoLTE7Zm9yKDtyPD1uOyl7Y29uc3QgYT1yK24+PjEsbz10LmZldGNoSWZSZWYoc1thXSksZz1vLmdldCgiTGltaXRzIik7aWYoZTx0LmZldGNoSWZSZWYoZ1swXSkpbj1hLTE7ZWxzZXtpZighKGU+dC5mZXRjaElmUmVmKGdbMV0pKSl7aT1vO2JyZWFrfXI9YSsxfX1pZihyPm4pcmV0dXJuIG51bGx9Y29uc3Qgcz1pLmdldCh0aGlzLl90eXBlKTtpZihBcnJheS5pc0FycmF5KHMpKXtsZXQgaT0wLGE9cy5sZW5ndGgtMjtmb3IoO2k8PWE7KXtjb25zdCByPWkrYT4+MSxuPXIrKDEmciksbz10LmZldGNoSWZSZWYoc1tuXSk7aWYoZTxvKWE9bi0yO2Vsc2V7aWYoIShlPm8pKXJldHVybiB0LmZldGNoSWZSZWYoc1tuKzFdKTtpPW4rMn19fXJldHVybiBudWxsfX1jbGFzcyBOYW1lVHJlZSBleHRlbmRzIE5hbWVPck51bWJlclRyZWV7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQsIk5hbWVzIil9fWNsYXNzIE51bWJlclRyZWUgZXh0ZW5kcyBOYW1lT3JOdW1iZXJUcmVle2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0LCJOdW1zIil9fWZ1bmN0aW9uIGNsZWFyR2xvYmFsQ2FjaGVzKCl7IWZ1bmN0aW9uIGNsZWFyUGF0dGVybkNhY2hlcygpe3lhPU9iamVjdC5jcmVhdGUobnVsbCl9KCk7IWZ1bmN0aW9uIGNsZWFyUHJpbWl0aXZlQ2FjaGVzKCl7bXQ9T2JqZWN0LmNyZWF0ZShudWxsKTt5dD1PYmplY3QuY3JlYXRlKG51bGwpO3d0PU9iamVjdC5jcmVhdGUobnVsbCl9KCk7IWZ1bmN0aW9uIGNsZWFyVW5pY29kZUNhY2hlcygpe0hpLmNsZWFyKCl9KCk7SnB4SW1hZ2UuY2xlYW51cCgpfWZ1bmN0aW9uIHBpY2tQbGF0Zm9ybUl0ZW0oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBEaWN0P2UuaGFzKCJVRiIpP2UuZ2V0KCJVRiIpOmUuaGFzKCJGIik/ZS5nZXQoIkYiKTplLmhhcygiVW5peCIpP2UuZ2V0KCJVbml4Iik6ZS5oYXMoIk1hYyIpP2UuZ2V0KCJNYWMiKTplLmhhcygiRE9TIik/ZS5nZXQoIkRPUyIpOm51bGw6bnVsbH1jbGFzcyBGaWxlU3BlY3sjdz0hMTtjb25zdHJ1Y3RvcihlLHQsaT0hMSl7aWYoZSBpbnN0YW5jZW9mIERpY3Qpe3RoaXMueHJlZj10O3RoaXMucm9vdD1lO2UuaGFzKCJGUyIpJiYodGhpcy5mcz1lLmdldCgiRlMiKSk7ZS5oYXMoIlJGIikmJndhcm4oIlJlbGF0ZWQgZmlsZSBzcGVjaWZpY2F0aW9ucyBhcmUgbm90IHN1cHBvcnRlZCIpO2l8fChlLmhhcygiRUYiKT90aGlzLiN3PSEwOndhcm4oIk5vbi1lbWJlZGRlZCBmaWxlIHNwZWNpZmljYXRpb25zIGFyZSBub3Qgc3VwcG9ydGVkIikpfX1nZXQgZmlsZW5hbWUoKXtsZXQgZT0iIjtjb25zdCB0PXBpY2tQbGF0Zm9ybUl0ZW0odGhpcy5yb290KTt0JiYic3RyaW5nIj09dHlwZW9mIHQmJihlPXN0cmluZ1RvUERGU3RyaW5nKHQpLnJlcGxhY2VBbGwoIlxcXFwiLCJcXCIpLnJlcGxhY2VBbGwoIlxcLyIsIi8iKS5yZXBsYWNlQWxsKCJcXCIsIi8iKSk7cmV0dXJuIHNoYWRvdyh0aGlzLCJmaWxlbmFtZSIsZXx8InVubmFtZWQiKX1nZXQgY29udGVudCgpe2lmKCF0aGlzLiN3KXJldHVybiBudWxsO3RoaXMuX2NvbnRlbnRSZWZ8fD1waWNrUGxhdGZvcm1JdGVtKHRoaXMucm9vdD8uZ2V0KCJFRiIpKTtsZXQgZT1udWxsO2lmKHRoaXMuX2NvbnRlbnRSZWYpe2NvbnN0IHQ9dGhpcy54cmVmLmZldGNoSWZSZWYodGhpcy5fY29udGVudFJlZik7dCBpbnN0YW5jZW9mIEJhc2VTdHJlYW0/ZT10LmdldEJ5dGVzKCk6d2FybigiRW1iZWRkZWQgZmlsZSBzcGVjaWZpY2F0aW9uIHBvaW50cyB0byBub24tZXhpc3RpbmcvaW52YWxpZCBjb250ZW50Iil9ZWxzZSB3YXJuKCJFbWJlZGRlZCBmaWxlIHNwZWNpZmljYXRpb24gZG9lcyBub3QgaGF2ZSBhbnkgY29udGVudCIpO3JldHVybiBlfWdldCBkZXNjcmlwdGlvbigpe2xldCBlPSIiO2NvbnN0IHQ9dGhpcy5yb290Py5nZXQoIkRlc2MiKTt0JiYic3RyaW5nIj09dHlwZW9mIHQmJihlPXN0cmluZ1RvUERGU3RyaW5nKHQpKTtyZXR1cm4gc2hhZG93KHRoaXMsImRlc2NyaXB0aW9uIixlKX1nZXQgc2VyaWFsaXphYmxlKCl7cmV0dXJue3Jhd0ZpbGVuYW1lOnRoaXMuZmlsZW5hbWUsZmlsZW5hbWU6KGU9dGhpcy5maWxlbmFtZSxlLnN1YnN0cmluZyhlLmxhc3RJbmRleE9mKCIvIikrMSkpLGNvbnRlbnQ6dGhpcy5jb250ZW50LGRlc2NyaXB0aW9uOnRoaXMuZGVzY3JpcHRpb259O3ZhciBlfX1jb25zdCBScz0wLE5zPS0yLEdzPS0zLHhzPS00LE1zPS01LFVzPS02LExzPS05O2Z1bmN0aW9uIGlzV2hpdGVzcGFjZShlLHQpe2NvbnN0IGk9ZVt0XTtyZXR1cm4iICI9PT1pfHwiXG4iPT09aXx8IlxyIj09PWl8fCJcdCI9PT1pfWNsYXNzIFhNTFBhcnNlckJhc2V7X3Jlc29sdmVFbnRpdGllcyhlKXtyZXR1cm4gZS5yZXBsYWNlQWxsKC8mKFteO10rKTsvZywoKGUsdCk9PntpZigiI3giPT09dC5zdWJzdHJpbmcoMCwyKSlyZXR1cm4gU3RyaW5nLmZyb21Db2RlUG9pbnQocGFyc2VJbnQodC5zdWJzdHJpbmcoMiksMTYpKTtpZigiIyI9PT10LnN1YnN0cmluZygwLDEpKXJldHVybiBTdHJpbmcuZnJvbUNvZGVQb2ludChwYXJzZUludCh0LnN1YnN0cmluZygxKSwxMCkpO3N3aXRjaCh0KXtjYXNlImx0IjpyZXR1cm4iPCI7Y2FzZSJndCI6cmV0dXJuIj4iO2Nhc2UiYW1wIjpyZXR1cm4iJiI7Y2FzZSJxdW90IjpyZXR1cm4nIic7Y2FzZSJhcG9zIjpyZXR1cm4iJyJ9cmV0dXJuIHRoaXMub25SZXNvbHZlRW50aXR5KHQpfSkpfV9wYXJzZUNvbnRlbnQoZSx0KXtjb25zdCBpPVtdO2xldCBhPXQ7ZnVuY3Rpb24gc2tpcFdzKCl7Zm9yKDthPGUubGVuZ3RoJiZpc1doaXRlc3BhY2UoZSxhKTspKythfWZvcig7YTxlLmxlbmd0aCYmIWlzV2hpdGVzcGFjZShlLGEpJiYiPiIhPT1lW2FdJiYiLyIhPT1lW2FdOykrK2E7Y29uc3Qgcz1lLnN1YnN0cmluZyh0LGEpO3NraXBXcygpO2Zvcig7YTxlLmxlbmd0aCYmIj4iIT09ZVthXSYmIi8iIT09ZVthXSYmIj8iIT09ZVthXTspe3NraXBXcygpO2xldCB0PSIiLHM9IiI7Zm9yKDthPGUubGVuZ3RoJiYhaXNXaGl0ZXNwYWNlKGUsYSkmJiI9IiE9PWVbYV07KXt0Kz1lW2FdOysrYX1za2lwV3MoKTtpZigiPSIhPT1lW2FdKXJldHVybiBudWxsOysrYTtza2lwV3MoKTtjb25zdCByPWVbYV07aWYoJyInIT09ciYmIiciIT09cilyZXR1cm4gbnVsbDtjb25zdCBuPWUuaW5kZXhPZihyLCsrYSk7aWYobjwwKXJldHVybiBudWxsO3M9ZS5zdWJzdHJpbmcoYSxuKTtpLnB1c2goe25hbWU6dCx2YWx1ZTp0aGlzLl9yZXNvbHZlRW50aXRpZXMocyl9KTthPW4rMTtza2lwV3MoKX1yZXR1cm57bmFtZTpzLGF0dHJpYnV0ZXM6aSxwYXJzZWQ6YS10fX1fcGFyc2VQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24oZSx0KXtsZXQgaT10O2Zvcig7aTxlLmxlbmd0aCYmIWlzV2hpdGVzcGFjZShlLGkpJiYiPiIhPT1lW2ldJiYiPyIhPT1lW2ldJiYiLyIhPT1lW2ldOykrK2k7Y29uc3QgYT1lLnN1YnN0cmluZyh0LGkpOyFmdW5jdGlvbiBza2lwV3MoKXtmb3IoO2k8ZS5sZW5ndGgmJmlzV2hpdGVzcGFjZShlLGkpOykrK2l9KCk7Y29uc3Qgcz1pO2Zvcig7aTxlLmxlbmd0aCYmKCI/IiE9PWVbaV18fCI+IiE9PWVbaSsxXSk7KSsraTtyZXR1cm57bmFtZTphLHZhbHVlOmUuc3Vic3RyaW5nKHMsaSkscGFyc2VkOmktdH19cGFyc2VYbWwoZSl7bGV0IHQ9MDtmb3IoO3Q8ZS5sZW5ndGg7KXtsZXQgaT10O2lmKCI8Ij09PWVbdF0peysraTtsZXQgdDtzd2l0Y2goZVtpXSl7Y2FzZSIvIjorK2k7dD1lLmluZGV4T2YoIj4iLGkpO2lmKHQ8MCl7dGhpcy5vbkVycm9yKExzKTtyZXR1cm59dGhpcy5vbkVuZEVsZW1lbnQoZS5zdWJzdHJpbmcoaSx0KSk7aT10KzE7YnJlYWs7Y2FzZSI/IjorK2k7Y29uc3QgYT10aGlzLl9wYXJzZVByb2Nlc3NpbmdJbnN0cnVjdGlvbihlLGkpO2lmKCI/PiIhPT1lLnN1YnN0cmluZyhpK2EucGFyc2VkLGkrYS5wYXJzZWQrMikpe3RoaXMub25FcnJvcihHcyk7cmV0dXJufXRoaXMub25QaShhLm5hbWUsYS52YWx1ZSk7aSs9YS5wYXJzZWQrMjticmVhaztjYXNlIiEiOmlmKCItLSI9PT1lLnN1YnN0cmluZyhpKzEsaSszKSl7dD1lLmluZGV4T2YoIi0tXHgzZSIsaSszKTtpZih0PDApe3RoaXMub25FcnJvcihNcyk7cmV0dXJufXRoaXMub25Db21tZW50KGUuc3Vic3RyaW5nKGkrMyx0KSk7aT10KzN9ZWxzZSBpZigiW0NEQVRBWyI9PT1lLnN1YnN0cmluZyhpKzEsaSs4KSl7dD1lLmluZGV4T2YoIl1dPiIsaSs4KTtpZih0PDApe3RoaXMub25FcnJvcihOcyk7cmV0dXJufXRoaXMub25DZGF0YShlLnN1YnN0cmluZyhpKzgsdCkpO2k9dCszfWVsc2V7aWYoIkRPQ1RZUEUiIT09ZS5zdWJzdHJpbmcoaSsxLGkrOCkpe3RoaXMub25FcnJvcihVcyk7cmV0dXJufXtjb25zdCBhPWUuaW5kZXhPZigiWyIsaSs4KTtsZXQgcz0hMTt0PWUuaW5kZXhPZigiPiIsaSs4KTtpZih0PDApe3RoaXMub25FcnJvcih4cyk7cmV0dXJufWlmKGE+MCYmdD5hKXt0PWUuaW5kZXhPZigiXT4iLGkrOCk7aWYodDwwKXt0aGlzLm9uRXJyb3IoeHMpO3JldHVybn1zPSEwfWNvbnN0IHI9ZS5zdWJzdHJpbmcoaSs4LHQrKHM/MTowKSk7dGhpcy5vbkRvY3R5cGUocik7aT10KyhzPzI6MSl9fWJyZWFrO2RlZmF1bHQ6Y29uc3Qgcz10aGlzLl9wYXJzZUNvbnRlbnQoZSxpKTtpZihudWxsPT09cyl7dGhpcy5vbkVycm9yKFVzKTtyZXR1cm59bGV0IHI9ITE7aWYoIi8+Ij09PWUuc3Vic3RyaW5nKGkrcy5wYXJzZWQsaStzLnBhcnNlZCsyKSlyPSEwO2Vsc2UgaWYoIj4iIT09ZS5zdWJzdHJpbmcoaStzLnBhcnNlZCxpK3MucGFyc2VkKzEpKXt0aGlzLm9uRXJyb3IoTHMpO3JldHVybn10aGlzLm9uQmVnaW5FbGVtZW50KHMubmFtZSxzLmF0dHJpYnV0ZXMscik7aSs9cy5wYXJzZWQrKHI/MjoxKX19ZWxzZXtmb3IoO2k8ZS5sZW5ndGgmJiI8IiE9PWVbaV07KWkrKztjb25zdCBhPWUuc3Vic3RyaW5nKHQsaSk7dGhpcy5vblRleHQodGhpcy5fcmVzb2x2ZUVudGl0aWVzKGEpKX10PWl9fW9uUmVzb2x2ZUVudGl0eShlKXtyZXR1cm5gJiR7ZX07YH1vblBpKGUsdCl7fW9uQ29tbWVudChlKXt9b25DZGF0YShlKXt9b25Eb2N0eXBlKGUpe31vblRleHQoZSl7fW9uQmVnaW5FbGVtZW50KGUsdCxpKXt9b25FbmRFbGVtZW50KGUpe31vbkVycm9yKGUpe319Y2xhc3MgU2ltcGxlRE9NTm9kZXtjb25zdHJ1Y3RvcihlLHQpe3RoaXMubm9kZU5hbWU9ZTt0aGlzLm5vZGVWYWx1ZT10O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJwYXJlbnROb2RlIix7dmFsdWU6bnVsbCx3cml0YWJsZTohMH0pfWdldCBmaXJzdENoaWxkKCl7cmV0dXJuIHRoaXMuY2hpbGROb2Rlcz8uWzBdfWdldCBuZXh0U2libGluZygpe2NvbnN0IGU9dGhpcy5wYXJlbnROb2RlLmNoaWxkTm9kZXM7aWYoIWUpcmV0dXJuO2NvbnN0IHQ9ZS5pbmRleE9mKHRoaXMpO3JldHVybi0xIT09dD9lW3QrMV06dm9pZCAwfWdldCB0ZXh0Q29udGVudCgpe3JldHVybiB0aGlzLmNoaWxkTm9kZXM/dGhpcy5jaGlsZE5vZGVzLm1hcCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUudGV4dENvbnRlbnR9KSkuam9pbigiIik6dGhpcy5ub2RlVmFsdWV8fCIifWdldCBjaGlsZHJlbigpe3JldHVybiB0aGlzLmNoaWxkTm9kZXN8fFtdfWhhc0NoaWxkTm9kZXMoKXtyZXR1cm4gdGhpcy5jaGlsZE5vZGVzPy5sZW5ndGg+MH1zZWFyY2hOb2RlKGUsdCl7aWYodD49ZS5sZW5ndGgpcmV0dXJuIHRoaXM7Y29uc3QgaT1lW3RdO2lmKGkubmFtZS5zdGFydHNXaXRoKCIjIikmJnQ8ZS5sZW5ndGgtMSlyZXR1cm4gdGhpcy5zZWFyY2hOb2RlKGUsdCsxKTtjb25zdCBhPVtdO2xldCBzPXRoaXM7Zm9yKDs7KXtpZihpLm5hbWU9PT1zLm5vZGVOYW1lKXtpZigwIT09aS5wb3Mpe2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gbnVsbDt7Y29uc3Rbcl09YS5wb3AoKTtsZXQgbj0wO2Zvcihjb25zdCBhIG9mIHIuY2hpbGROb2RlcylpZihpLm5hbWU9PT1hLm5vZGVOYW1lKXtpZihuPT09aS5wb3MpcmV0dXJuIGEuc2VhcmNoTm9kZShlLHQrMSk7bisrfXJldHVybiBzLnNlYXJjaE5vZGUoZSx0KzEpfX17Y29uc3QgaT1zLnNlYXJjaE5vZGUoZSx0KzEpO2lmKG51bGwhPT1pKXJldHVybiBpfX1pZihzLmNoaWxkTm9kZXM/Lmxlbmd0aD4wKXthLnB1c2goW3MsMF0pO3M9cy5jaGlsZE5vZGVzWzBdfWVsc2V7aWYoMD09PWEubGVuZ3RoKXJldHVybiBudWxsO2Zvcig7MCE9PWEubGVuZ3RoOyl7Y29uc3RbZSx0XT1hLnBvcCgpLGk9dCsxO2lmKGk8ZS5jaGlsZE5vZGVzLmxlbmd0aCl7YS5wdXNoKFtlLGldKTtzPWUuY2hpbGROb2Rlc1tpXTticmVha319aWYoMD09PWEubGVuZ3RoKXJldHVybiBudWxsfX19ZHVtcChlKXtpZigiI3RleHQiIT09dGhpcy5ub2RlTmFtZSl7ZS5wdXNoKGA8JHt0aGlzLm5vZGVOYW1lfWApO2lmKHRoaXMuYXR0cmlidXRlcylmb3IoY29uc3QgdCBvZiB0aGlzLmF0dHJpYnV0ZXMpZS5wdXNoKGAgJHt0Lm5hbWV9PSIke2VuY29kZVRvWG1sU3RyaW5nKHQudmFsdWUpfSJgKTtpZih0aGlzLmhhc0NoaWxkTm9kZXMoKSl7ZS5wdXNoKCI+Iik7Zm9yKGNvbnN0IHQgb2YgdGhpcy5jaGlsZE5vZGVzKXQuZHVtcChlKTtlLnB1c2goYDwvJHt0aGlzLm5vZGVOYW1lfT5gKX1lbHNlIHRoaXMubm9kZVZhbHVlP2UucHVzaChgPiR7ZW5jb2RlVG9YbWxTdHJpbmcodGhpcy5ub2RlVmFsdWUpfTwvJHt0aGlzLm5vZGVOYW1lfT5gKTplLnB1c2goIi8+Iil9ZWxzZSBlLnB1c2goZW5jb2RlVG9YbWxTdHJpbmcodGhpcy5ub2RlVmFsdWUpKX19Y2xhc3MgU2ltcGxlWE1MUGFyc2VyIGV4dGVuZHMgWE1MUGFyc2VyQmFzZXtjb25zdHJ1Y3Rvcih7aGFzQXR0cmlidXRlczplPSExLGxvd2VyQ2FzZU5hbWU6dD0hMX0pe3N1cGVyKCk7dGhpcy5fY3VycmVudEZyYWdtZW50PW51bGw7dGhpcy5fc3RhY2s9bnVsbDt0aGlzLl9lcnJvckNvZGU9UnM7dGhpcy5faGFzQXR0cmlidXRlcz1lO3RoaXMuX2xvd2VyQ2FzZU5hbWU9dH1wYXJzZUZyb21TdHJpbmcoZSl7dGhpcy5fY3VycmVudEZyYWdtZW50PVtdO3RoaXMuX3N0YWNrPVtdO3RoaXMuX2Vycm9yQ29kZT1Sczt0aGlzLnBhcnNlWG1sKGUpO2lmKHRoaXMuX2Vycm9yQ29kZSE9PVJzKXJldHVybjtjb25zdFt0XT10aGlzLl9jdXJyZW50RnJhZ21lbnQ7cmV0dXJuIHQ/e2RvY3VtZW50RWxlbWVudDp0fTp2b2lkIDB9b25UZXh0KGUpe2lmKGZ1bmN0aW9uIGlzV2hpdGVzcGFjZVN0cmluZyhlKXtmb3IobGV0IHQ9MCxpPWUubGVuZ3RoO3Q8aTt0KyspaWYoIWlzV2hpdGVzcGFjZShlLHQpKXJldHVybiExO3JldHVybiEwfShlKSlyZXR1cm47Y29uc3QgdD1uZXcgU2ltcGxlRE9NTm9kZSgiI3RleHQiLGUpO3RoaXMuX2N1cnJlbnRGcmFnbWVudC5wdXNoKHQpfW9uQ2RhdGEoZSl7Y29uc3QgdD1uZXcgU2ltcGxlRE9NTm9kZSgiI3RleHQiLGUpO3RoaXMuX2N1cnJlbnRGcmFnbWVudC5wdXNoKHQpfW9uQmVnaW5FbGVtZW50KGUsdCxpKXt0aGlzLl9sb3dlckNhc2VOYW1lJiYoZT1lLnRvTG93ZXJDYXNlKCkpO2NvbnN0IGE9bmV3IFNpbXBsZURPTU5vZGUoZSk7YS5jaGlsZE5vZGVzPVtdO3RoaXMuX2hhc0F0dHJpYnV0ZXMmJihhLmF0dHJpYnV0ZXM9dCk7dGhpcy5fY3VycmVudEZyYWdtZW50LnB1c2goYSk7aWYoIWkpe3RoaXMuX3N0YWNrLnB1c2godGhpcy5fY3VycmVudEZyYWdtZW50KTt0aGlzLl9jdXJyZW50RnJhZ21lbnQ9YS5jaGlsZE5vZGVzfX1vbkVuZEVsZW1lbnQoZSl7dGhpcy5fY3VycmVudEZyYWdtZW50PXRoaXMuX3N0YWNrLnBvcCgpfHxbXTtjb25zdCB0PXRoaXMuX2N1cnJlbnRGcmFnbWVudC5hdCgtMSk7aWYoIXQpcmV0dXJuIG51bGw7Zm9yKGNvbnN0IGUgb2YgdC5jaGlsZE5vZGVzKWUucGFyZW50Tm9kZT10O3JldHVybiB0fW9uRXJyb3IoZSl7dGhpcy5fZXJyb3JDb2RlPWV9fWNsYXNzIE1ldGFkYXRhUGFyc2Vye2NvbnN0cnVjdG9yKGUpe2U9dGhpcy5fcmVwYWlyKGUpO2NvbnN0IHQ9bmV3IFNpbXBsZVhNTFBhcnNlcih7bG93ZXJDYXNlTmFtZTohMH0pLnBhcnNlRnJvbVN0cmluZyhlKTt0aGlzLl9tZXRhZGF0YU1hcD1uZXcgTWFwO3RoaXMuX2RhdGE9ZTt0JiZ0aGlzLl9wYXJzZSh0KX1fcmVwYWlyKGUpe3JldHVybiBlLnJlcGxhY2UoL15bXjxdKy8sIiIpLnJlcGxhY2VBbGwoLz5cXDM3NlxcMzc3KFtePF0rKS9nLChmdW5jdGlvbihlLHQpe2NvbnN0IGk9dC5yZXBsYWNlQWxsKC9cXChbMC0zXSkoWzAtN10pKFswLTddKS9nLChmdW5jdGlvbihlLHQsaSxhKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSg2NCp0KzgqaSsxKmEpfSkpLnJlcGxhY2VBbGwoLyYoYW1wfGFwb3N8Z3R8bHR8cXVvdCk7L2csKGZ1bmN0aW9uKGUsdCl7c3dpdGNoKHQpe2Nhc2UiYW1wIjpyZXR1cm4iJiI7Y2FzZSJhcG9zIjpyZXR1cm4iJyI7Y2FzZSJndCI6cmV0dXJuIj4iO2Nhc2UibHQiOnJldHVybiI8IjtjYXNlInF1b3QiOnJldHVybiciJ310aHJvdyBuZXcgRXJyb3IoYF9yZXBhaXI6ICR7dH0gaXNuJ3QgZGVmaW5lZC5gKX0pKSxhPVsiPiJdO2ZvcihsZXQgZT0wLHQ9aS5sZW5ndGg7ZTx0O2UrPTIpe2NvbnN0IHQ9MjU2KmkuY2hhckNvZGVBdChlKStpLmNoYXJDb2RlQXQoZSsxKTt0Pj0zMiYmdDwxMjcmJjYwIT09dCYmNjIhPT10JiYzOCE9PXQ/YS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUodCkpOmEucHVzaCgiJiN4IisoNjU1MzYrdCkudG9TdHJpbmcoMTYpLnN1YnN0cmluZygxKSsiOyIpfXJldHVybiBhLmpvaW4oIiIpfSkpfV9nZXRTZXF1ZW5jZShlKXtjb25zdCB0PWUubm9kZU5hbWU7cmV0dXJuInJkZjpiYWciIT09dCYmInJkZjpzZXEiIT09dCYmInJkZjphbHQiIT09dD9udWxsOmUuY2hpbGROb2Rlcy5maWx0ZXIoKGU9PiJyZGY6bGkiPT09ZS5ub2RlTmFtZSkpfV9wYXJzZUFycmF5KGUpe2lmKCFlLmhhc0NoaWxkTm9kZXMoKSlyZXR1cm47Y29uc3RbdF09ZS5jaGlsZE5vZGVzLGk9dGhpcy5fZ2V0U2VxdWVuY2UodCl8fFtdO3RoaXMuX21ldGFkYXRhTWFwLnNldChlLm5vZGVOYW1lLGkubWFwKChlPT5lLnRleHRDb250ZW50LnRyaW0oKSkpKX1fcGFyc2UoZSl7bGV0IHQ9ZS5kb2N1bWVudEVsZW1lbnQ7aWYoInJkZjpyZGYiIT09dC5ub2RlTmFtZSl7dD10LmZpcnN0Q2hpbGQ7Zm9yKDt0JiYicmRmOnJkZiIhPT10Lm5vZGVOYW1lOyl0PXQubmV4dFNpYmxpbmd9aWYodCYmInJkZjpyZGYiPT09dC5ub2RlTmFtZSYmdC5oYXNDaGlsZE5vZGVzKCkpZm9yKGNvbnN0IGUgb2YgdC5jaGlsZE5vZGVzKWlmKCJyZGY6ZGVzY3JpcHRpb24iPT09ZS5ub2RlTmFtZSlmb3IoY29uc3QgdCBvZiBlLmNoaWxkTm9kZXMpe2NvbnN0IGU9dC5ub2RlTmFtZTtzd2l0Y2goZSl7Y2FzZSIjdGV4dCI6Y29udGludWU7Y2FzZSJkYzpjcmVhdG9yIjpjYXNlImRjOnN1YmplY3QiOnRoaXMuX3BhcnNlQXJyYXkodCk7Y29udGludWV9dGhpcy5fbWV0YWRhdGFNYXAuc2V0KGUsdC50ZXh0Q29udGVudC50cmltKCkpfX1nZXQgc2VyaWFsaXphYmxlKCl7cmV0dXJue3BhcnNlZERhdGE6dGhpcy5fbWV0YWRhdGFNYXAscmF3RGF0YTp0aGlzLl9kYXRhfX19Y2xhc3MgRGVjcnlwdFN0cmVhbSBleHRlbmRzIERlY29kZVN0cmVhbXtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIodCk7dGhpcy5zdHI9ZTt0aGlzLmRpY3Q9ZS5kaWN0O3RoaXMuZGVjcnlwdD1pO3RoaXMubmV4dENodW5rPW51bGw7dGhpcy5pbml0aWFsaXplZD0hMX1yZWFkQmxvY2soKXtsZXQgZTtpZih0aGlzLmluaXRpYWxpemVkKWU9dGhpcy5uZXh0Q2h1bms7ZWxzZXtlPXRoaXMuc3RyLmdldEJ5dGVzKDUxMik7dGhpcy5pbml0aWFsaXplZD0hMH1pZighZXx8MD09PWUubGVuZ3RoKXt0aGlzLmVvZj0hMDtyZXR1cm59dGhpcy5uZXh0Q2h1bms9dGhpcy5zdHIuZ2V0Qnl0ZXMoNTEyKTtjb25zdCB0PXRoaXMubmV4dENodW5rPy5sZW5ndGg+MDtlPSgwLHRoaXMuZGVjcnlwdCkoZSwhdCk7Y29uc3QgaT10aGlzLmJ1ZmZlckxlbmd0aCxhPWkrZS5sZW5ndGg7dGhpcy5lbnN1cmVCdWZmZXIoYSkuc2V0KGUsaSk7dGhpcy5idWZmZXJMZW5ndGg9YX19Y2xhc3MgQVJDRm91ckNpcGhlcntjb25zdHJ1Y3RvcihlKXt0aGlzLmE9MDt0aGlzLmI9MDtjb25zdCB0PW5ldyBVaW50OEFycmF5KDI1NiksaT1lLmxlbmd0aDtmb3IobGV0IGU9MDtlPDI1NjsrK2UpdFtlXT1lO2ZvcihsZXQgYT0wLHM9MDthPDI1NjsrK2Epe2NvbnN0IHI9dFthXTtzPXMrcitlW2ElaV0mMjU1O3RbYV09dFtzXTt0W3NdPXJ9dGhpcy5zPXR9ZW5jcnlwdEJsb2NrKGUpe2xldCB0PXRoaXMuYSxpPXRoaXMuYjtjb25zdCBhPXRoaXMucyxzPWUubGVuZ3RoLHI9bmV3IFVpbnQ4QXJyYXkocyk7Zm9yKGxldCBuPTA7bjxzOysrbil7dD10KzEmMjU1O2NvbnN0IHM9YVt0XTtpPWkrcyYyNTU7Y29uc3Qgbz1hW2ldO2FbdF09bzthW2ldPXM7cltuXT1lW25dXmFbcytvJjI1NV19dGhpcy5hPXQ7dGhpcy5iPWk7cmV0dXJuIHJ9ZGVjcnlwdEJsb2NrKGUpe3JldHVybiB0aGlzLmVuY3J5cHRCbG9jayhlKX1lbmNyeXB0KGUpe3JldHVybiB0aGlzLmVuY3J5cHRCbG9jayhlKX19Y29uc3QgSnM9ZnVuY3Rpb24gY2FsY3VsYXRlTUQ1Q2xvc3VyZSgpe2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkoWzcsMTIsMTcsMjIsNywxMiwxNywyMiw3LDEyLDE3LDIyLDcsMTIsMTcsMjIsNSw5LDE0LDIwLDUsOSwxNCwyMCw1LDksMTQsMjAsNSw5LDE0LDIwLDQsMTEsMTYsMjMsNCwxMSwxNiwyMyw0LDExLDE2LDIzLDQsMTEsMTYsMjMsNiwxMCwxNSwyMSw2LDEwLDE1LDIxLDYsMTAsMTUsMjEsNiwxMCwxNSwyMV0pLHQ9bmV3IEludDMyQXJyYXkoWy02ODA4NzY5MzYsLTM4OTU2NDU4Niw2MDYxMDU4MTksLTEwNDQ1MjUzMzAsLTE3NjQxODg5NywxMjAwMDgwNDI2LC0xNDczMjMxMzQxLC00NTcwNTk4MywxNzcwMDM1NDE2LC0xOTU4NDE0NDE3LC00MjA2MywtMTk5MDQwNDE2MiwxODA0NjAzNjgyLC00MDM0MTEwMSwtMTUwMjAwMjI5MCwxMjM2NTM1MzI5LC0xNjU3OTY1MTAsLTEwNjk1MDE2MzIsNjQzNzE3NzEzLC0zNzM4OTczMDIsLTcwMTU1ODY5MSwzODAxNjA4MywtNjYwNDc4MzM1LC00MDU1Mzc4NDgsNTY4NDQ2NDM4LC0xMDE5ODAzNjkwLC0xODczNjM5NjEsMTE2MzUzMTUwMSwtMTQ0NDY4MTQ2NywtNTE0MDM3ODQsMTczNTMyODQ3MywtMTkyNjYwNzczNCwtMzc4NTU4LC0yMDIyNTc0NDYzLDE4MzkwMzA1NjIsLTM1MzA5NTU2LC0xNTMwOTkyMDYwLDEyNzI4OTMzNTMsLTE1NTQ5NzYzMiwtMTA5NDczMDY0MCw2ODEyNzkxNzQsLTM1ODUzNzIyMiwtNzIyNTIxOTc5LDc2MDI5MTg5LC02NDAzNjQ0ODcsLTQyMTgxNTgzNSw1MzA3NDI1MjAsLTk5NTMzODY1MSwtMTk4NjMwODQ0LDExMjY4OTE0MTUsLTE0MTYzNTQ5MDUsLTU3NDM0MDU1LDE3MDA0ODU1NzEsLTE4OTQ5ODY2MDYsLTEwNTE1MjMsLTIwNTQ5MjI3OTksMTg3MzMxMzM1OSwtMzA2MTE3NDQsLTE1NjAxOTgzODAsMTMwOTE1MTY0OSwtMTQ1NTIzMDcwLC0xMTIwMjEwMzc5LDcxODc4NzI1OSwtMzQzNDg1NTUxXSk7cmV0dXJuIGZ1bmN0aW9uIGhhc2goaSxhLHMpe2xldCByPTE3MzI1ODQxOTMsbj0tMjcxNzMzODc5LG89LTE3MzI1ODQxOTQsZz0yNzE3MzM4Nzg7Y29uc3QgYz1zKzcyJi02NCxoPW5ldyBVaW50OEFycmF5KGMpO2xldCBsLEM7Zm9yKGw9MDtsPHM7KytsKWhbbF09aVthKytdO2hbbCsrXT0xMjg7Y29uc3QgUT1jLTg7Zm9yKDtsPFE7KWhbbCsrXT0wO2hbbCsrXT1zPDwzJjI1NTtoW2wrK109cz4+NSYyNTU7aFtsKytdPXM+PjEzJjI1NTtoW2wrK109cz4+MjEmMjU1O2hbbCsrXT1zPj4+MjkmMjU1O2hbbCsrXT0wO2hbbCsrXT0wO2hbbCsrXT0wO2NvbnN0IEU9bmV3IEludDMyQXJyYXkoMTYpO2ZvcihsPTA7bDxjOyl7Zm9yKEM9MDtDPDE2OysrQyxsKz00KUVbQ109aFtsXXxoW2wrMV08PDh8aFtsKzJdPDwxNnxoW2wrM108PDI0O2xldCBpLGEscz1yLGM9bixRPW8sdT1nO2ZvcihDPTA7Qzw2NDsrK0Mpe2lmKEM8MTYpe2k9YyZRfH5jJnU7YT1DfWVsc2UgaWYoQzwzMil7aT11JmN8fnUmUTthPTUqQysxJjE1fWVsc2UgaWYoQzw0OCl7aT1jXlFedTthPTMqQys1JjE1fWVsc2V7aT1RXihjfH51KTthPTcqQyYxNX1jb25zdCByPXUsbj1zK2krdFtDXStFW2FdfDAsbz1lW0NdO3U9UTtRPWM7Yz1jKyhuPDxvfG4+Pj4zMi1vKXwwO3M9cn1yPXIrc3wwO249bitjfDA7bz1vK1F8MDtnPWcrdXwwfXJldHVybiBuZXcgVWludDhBcnJheShbMjU1JnIscj4+OCYyNTUscj4+MTYmMjU1LHI+Pj4yNCYyNTUsMjU1Jm4sbj4+OCYyNTUsbj4+MTYmMjU1LG4+Pj4yNCYyNTUsMjU1Jm8sbz4+OCYyNTUsbz4+MTYmMjU1LG8+Pj4yNCYyNTUsMjU1JmcsZz4+OCYyNTUsZz4+MTYmMjU1LGc+Pj4yNCYyNTVdKX19KCk7Y2xhc3MgV29yZDY0e2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5oaWdoPTB8ZTt0aGlzLmxvdz0wfHR9YW5kKGUpe3RoaXMuaGlnaCY9ZS5oaWdoO3RoaXMubG93Jj1lLmxvd314b3IoZSl7dGhpcy5oaWdoXj1lLmhpZ2g7dGhpcy5sb3dePWUubG93fW9yKGUpe3RoaXMuaGlnaHw9ZS5oaWdoO3RoaXMubG93fD1lLmxvd31zaGlmdFJpZ2h0KGUpe2lmKGU+PTMyKXt0aGlzLmxvdz10aGlzLmhpZ2g+Pj5lLTMyfDA7dGhpcy5oaWdoPTB9ZWxzZXt0aGlzLmxvdz10aGlzLmxvdz4+PmV8dGhpcy5oaWdoPDwzMi1lO3RoaXMuaGlnaD10aGlzLmhpZ2g+Pj5lfDB9fXNoaWZ0TGVmdChlKXtpZihlPj0zMil7dGhpcy5oaWdoPXRoaXMubG93PDxlLTMyO3RoaXMubG93PTB9ZWxzZXt0aGlzLmhpZ2g9dGhpcy5oaWdoPDxlfHRoaXMubG93Pj4+MzItZTt0aGlzLmxvdzw8PWV9fXJvdGF0ZVJpZ2h0KGUpe2xldCB0LGk7aWYoMzImZSl7aT10aGlzLmxvdzt0PXRoaXMuaGlnaH1lbHNle3Q9dGhpcy5sb3c7aT10aGlzLmhpZ2h9ZSY9MzE7dGhpcy5sb3c9dD4+PmV8aTw8MzItZTt0aGlzLmhpZ2g9aT4+PmV8dDw8MzItZX1ub3QoKXt0aGlzLmhpZ2g9fnRoaXMuaGlnaDt0aGlzLmxvdz1+dGhpcy5sb3d9YWRkKGUpe2NvbnN0IHQ9KHRoaXMubG93Pj4+MCkrKGUubG93Pj4+MCk7bGV0IGk9KHRoaXMuaGlnaD4+PjApKyhlLmhpZ2g+Pj4wKTt0PjQyOTQ5NjcyOTUmJihpKz0xKTt0aGlzLmxvdz0wfHQ7dGhpcy5oaWdoPTB8aX1jb3B5VG8oZSx0KXtlW3RdPXRoaXMuaGlnaD4+PjI0JjI1NTtlW3QrMV09dGhpcy5oaWdoPj4xNiYyNTU7ZVt0KzJdPXRoaXMuaGlnaD4+OCYyNTU7ZVt0KzNdPTI1NSZ0aGlzLmhpZ2g7ZVt0KzRdPXRoaXMubG93Pj4+MjQmMjU1O2VbdCs1XT10aGlzLmxvdz4+MTYmMjU1O2VbdCs2XT10aGlzLmxvdz4+OCYyNTU7ZVt0KzddPTI1NSZ0aGlzLmxvd31hc3NpZ24oZSl7dGhpcy5oaWdoPWUuaGlnaDt0aGlzLmxvdz1lLmxvd319Y29uc3QgSHM9ZnVuY3Rpb24gY2FsY3VsYXRlU0hBMjU2Q2xvc3VyZSgpe2Z1bmN0aW9uIHJvdHIoZSx0KXtyZXR1cm4gZT4+PnR8ZTw8MzItdH1mdW5jdGlvbiBjaChlLHQsaSl7cmV0dXJuIGUmdF5+ZSZpfWZ1bmN0aW9uIG1haihlLHQsaSl7cmV0dXJuIGUmdF5lJmledCZpfWZ1bmN0aW9uIHNpZ21hKGUpe3JldHVybiByb3RyKGUsMilecm90cihlLDEzKV5yb3RyKGUsMjIpfWZ1bmN0aW9uIHNpZ21hUHJpbWUoZSl7cmV0dXJuIHJvdHIoZSw2KV5yb3RyKGUsMTEpXnJvdHIoZSwyNSl9ZnVuY3Rpb24gbGl0dGxlU2lnbWEoZSl7cmV0dXJuIHJvdHIoZSw3KV5yb3RyKGUsMTgpXmU+Pj4zfWNvbnN0IGU9WzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OF07cmV0dXJuIGZ1bmN0aW9uIGhhc2godCxpLGEpe2xldCBzPTE3NzkwMzM3MDMscj0zMTQ0MTM0Mjc3LG49MTAxMzkwNDI0MixvPTI3NzM0ODA3NjIsZz0xMzU5ODkzMTE5LGM9MjYwMDgyMjkyNCxoPTUyODczNDYzNSxsPTE1NDE0NTkyMjU7Y29uc3QgQz02NCpNYXRoLmNlaWwoKGErOSkvNjQpLFE9bmV3IFVpbnQ4QXJyYXkoQyk7bGV0IEUsdTtmb3IoRT0wO0U8YTsrK0UpUVtFXT10W2krK107UVtFKytdPTEyODtjb25zdCBkPUMtODtmb3IoO0U8ZDspUVtFKytdPTA7UVtFKytdPTA7UVtFKytdPTA7UVtFKytdPTA7UVtFKytdPWE+Pj4yOSYyNTU7UVtFKytdPWE+PjIxJjI1NTtRW0UrK109YT4+MTMmMjU1O1FbRSsrXT1hPj41JjI1NTtRW0UrK109YTw8MyYyNTU7Y29uc3QgZj1uZXcgVWludDMyQXJyYXkoNjQpO2ZvcihFPTA7RTxDOyl7Zm9yKHU9MDt1PDE2OysrdSl7Zlt1XT1RW0VdPDwyNHxRW0UrMV08PDE2fFFbRSsyXTw8OHxRW0UrM107RSs9NH1mb3IodT0xNjt1PDY0OysrdSlmW3VdPShyb3RyKHA9Zlt1LTJdLDE3KV5yb3RyKHAsMTkpXnA+Pj4xMCkrZlt1LTddK2xpdHRsZVNpZ21hKGZbdS0xNV0pK2ZbdS0xNl18MDtsZXQgdCxpLGE9cyxDPXIsZD1uLG09byx5PWcsdz1jLGI9aCxEPWw7Zm9yKHU9MDt1PDY0OysrdSl7dD1EK3NpZ21hUHJpbWUoeSkrY2goeSx3LGIpK2VbdV0rZlt1XTtpPXNpZ21hKGEpK21haihhLEMsZCk7RD1iO2I9dzt3PXk7eT1tK3R8MDttPWQ7ZD1DO0M9YTthPXQraXwwfXM9cythfDA7cj1yK0N8MDtuPW4rZHwwO289byttfDA7Zz1nK3l8MDtjPWMrd3wwO2g9aCtifDA7bD1sK0R8MH12YXIgcDtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW3M+PjI0JjI1NSxzPj4xNiYyNTUscz4+OCYyNTUsMjU1JnMscj4+MjQmMjU1LHI+PjE2JjI1NSxyPj44JjI1NSwyNTUmcixuPj4yNCYyNTUsbj4+MTYmMjU1LG4+PjgmMjU1LDI1NSZuLG8+PjI0JjI1NSxvPj4xNiYyNTUsbz4+OCYyNTUsMjU1Jm8sZz4+MjQmMjU1LGc+PjE2JjI1NSxnPj44JjI1NSwyNTUmZyxjPj4yNCYyNTUsYz4+MTYmMjU1LGM+PjgmMjU1LDI1NSZjLGg+PjI0JjI1NSxoPj4xNiYyNTUsaD4+OCYyNTUsMjU1JmgsbD4+MjQmMjU1LGw+PjE2JjI1NSxsPj44JjI1NSwyNTUmbF0pfX0oKSxZcz1mdW5jdGlvbiBjYWxjdWxhdGVTSEE1MTJDbG9zdXJlKCl7ZnVuY3Rpb24gY2goZSx0LGksYSxzKXtlLmFzc2lnbih0KTtlLmFuZChpKTtzLmFzc2lnbih0KTtzLm5vdCgpO3MuYW5kKGEpO2UueG9yKHMpfWZ1bmN0aW9uIG1haihlLHQsaSxhLHMpe2UuYXNzaWduKHQpO2UuYW5kKGkpO3MuYXNzaWduKHQpO3MuYW5kKGEpO2UueG9yKHMpO3MuYXNzaWduKGkpO3MuYW5kKGEpO2UueG9yKHMpfWZ1bmN0aW9uIHNpZ21hKGUsdCxpKXtlLmFzc2lnbih0KTtlLnJvdGF0ZVJpZ2h0KDI4KTtpLmFzc2lnbih0KTtpLnJvdGF0ZVJpZ2h0KDM0KTtlLnhvcihpKTtpLmFzc2lnbih0KTtpLnJvdGF0ZVJpZ2h0KDM5KTtlLnhvcihpKX1mdW5jdGlvbiBzaWdtYVByaW1lKGUsdCxpKXtlLmFzc2lnbih0KTtlLnJvdGF0ZVJpZ2h0KDE0KTtpLmFzc2lnbih0KTtpLnJvdGF0ZVJpZ2h0KDE4KTtlLnhvcihpKTtpLmFzc2lnbih0KTtpLnJvdGF0ZVJpZ2h0KDQxKTtlLnhvcihpKX1mdW5jdGlvbiBsaXR0bGVTaWdtYShlLHQsaSl7ZS5hc3NpZ24odCk7ZS5yb3RhdGVSaWdodCgxKTtpLmFzc2lnbih0KTtpLnJvdGF0ZVJpZ2h0KDgpO2UueG9yKGkpO2kuYXNzaWduKHQpO2kuc2hpZnRSaWdodCg3KTtlLnhvcihpKX1mdW5jdGlvbiBsaXR0bGVTaWdtYVByaW1lKGUsdCxpKXtlLmFzc2lnbih0KTtlLnJvdGF0ZVJpZ2h0KDE5KTtpLmFzc2lnbih0KTtpLnJvdGF0ZVJpZ2h0KDYxKTtlLnhvcihpKTtpLmFzc2lnbih0KTtpLnNoaWZ0UmlnaHQoNik7ZS54b3IoaSl9Y29uc3QgZT1bbmV3IFdvcmQ2NCgxMTE2MzUyNDA4LDM2MDk3Njc0NTgpLG5ldyBXb3JkNjQoMTg5OTQ0NzQ0MSw2MDI4OTE3MjUpLG5ldyBXb3JkNjQoMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5KSxuZXcgV29yZDY0KDM5MjEwMDk1NzMsMjE3MzI5NTU0OCksbmV3IFdvcmQ2NCg5NjE5ODcxNjMsNDA4MTYyODQ3MiksbmV3IFdvcmQ2NCgxNTA4OTcwOTkzLDMwNTM4MzQyNjUpLG5ldyBXb3JkNjQoMjQ1MzYzNTc0OCwyOTM3NjcxNTc5KSxuZXcgV29yZDY0KDI4NzA3NjMyMjEsMzY2NDYwOTU2MCksbmV3IFdvcmQ2NCgzNjI0MzgxMDgwLDI3MzQ4ODMzOTQpLG5ldyBXb3JkNjQoMzEwNTk4NDAxLDExNjQ5OTY1NDIpLG5ldyBXb3JkNjQoNjA3MjI1Mjc4LDEzMjM2MTA3NjQpLG5ldyBXb3JkNjQoMTQyNjg4MTk4NywzNTkwMzA0OTk0KSxuZXcgV29yZDY0KDE5MjUwNzgzODgsNDA2ODE4MjM4MyksbmV3IFdvcmQ2NCgyMTYyMDc4MjA2LDk5MTMzNjExMyksbmV3IFdvcmQ2NCgyNjE0ODg4MTAzLDYzMzgwMzMxNyksbmV3IFdvcmQ2NCgzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgpLG5ldyBXb3JkNjQoMzgzNTM5MDQwMSwyNjY2NjEzNDU4KSxuZXcgV29yZDY0KDQwMjIyMjQ3NzQsOTQ0NzExMTM5KSxuZXcgV29yZDY0KDI2NDM0NzA3OCwyMzQxMjYyNzczKSxuZXcgV29yZDY0KDYwNDgwNzYyOCwyMDA3ODAwOTMzKSxuZXcgV29yZDY0KDc3MDI1NTk4MywxNDk1OTkwOTAxKSxuZXcgV29yZDY0KDEyNDkxNTAxMjIsMTg1NjQzMTIzNSksbmV3IFdvcmQ2NCgxNTU1MDgxNjkyLDMxNzUyMTgxMzIpLG5ldyBXb3JkNjQoMTk5NjA2NDk4NiwyMTk4OTUwODM3KSxuZXcgV29yZDY0KDI1NTQyMjA4ODIsMzk5OTcxOTMzOSksbmV3IFdvcmQ2NCgyODIxODM0MzQ5LDc2Njc4NDAxNiksbmV3IFdvcmQ2NCgyOTUyOTk2ODA4LDI1NjY1OTQ4NzkpLG5ldyBXb3JkNjQoMzIxMDMxMzY3MSwzMjAzMzM3OTU2KSxuZXcgV29yZDY0KDMzMzY1NzE4OTEsMTAzNDQ1NzAyNiksbmV3IFdvcmQ2NCgzNTg0NTI4NzExLDI0NjY5NDg5MDEpLG5ldyBXb3JkNjQoMTEzOTI2OTkzLDM3NTgzMjYzODMpLG5ldyBXb3JkNjQoMzM4MjQxODk1LDE2ODcxNzkzNiksbmV3IFdvcmQ2NCg2NjYzMDcyMDUsMTE4ODE3OTk2NCksbmV3IFdvcmQ2NCg3NzM1Mjk5MTIsMTU0NjA0NTczNCksbmV3IFdvcmQ2NCgxMjk0NzU3MzcyLDE1MjI4MDU0ODUpLG5ldyBXb3JkNjQoMTM5NjE4MjI5MSwyNjQzODMzODIzKSxuZXcgV29yZDY0KDE2OTUxODM3MDAsMjM0MzUyNzM5MCksbmV3IFdvcmQ2NCgxOTg2NjYxMDUxLDEwMTQ0Nzc0ODApLG5ldyBXb3JkNjQoMjE3NzAyNjM1MCwxMjA2NzU5MTQyKSxuZXcgV29yZDY0KDI0NTY5NTYwMzcsMzQ0MDc3NjI3KSxuZXcgV29yZDY0KDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCksbmV3IFdvcmQ2NCgyODIwMzAyNDExLDMxNTg0NTQyNzMpLG5ldyBXb3JkNjQoMzI1OTczMDgwMCwzNTA1OTUyNjU3KSxuZXcgV29yZDY0KDMzNDU3NjQ3NzEsMTA2MjE3MDA4KSxuZXcgV29yZDY0KDM1MTYwNjU4MTcsMzYwNjAwODM0NCksbmV3IFdvcmQ2NCgzNjAwMzUyODA0LDE0MzI3MjU3NzYpLG5ldyBXb3JkNjQoNDA5NDU3MTkwOSwxNDY3MDMxNTk0KSxuZXcgV29yZDY0KDI3NTQyMzM0NCw4NTExNjk3MjApLG5ldyBXb3JkNjQoNDMwMjI3NzM0LDMxMDA4MjM3NTIpLG5ldyBXb3JkNjQoNTA2OTQ4NjE2LDEzNjMyNTgxOTUpLG5ldyBXb3JkNjQoNjU5MDYwNTU2LDM3NTA2ODU1OTMpLG5ldyBXb3JkNjQoODgzOTk3ODc3LDM3ODUwNTAyODApLG5ldyBXb3JkNjQoOTU4MTM5NTcxLDMzMTgzMDc0MjcpLG5ldyBXb3JkNjQoMTMyMjgyMjIxOCwzODEyNzIzNDAzKSxuZXcgV29yZDY0KDE1MzcwMDIwNjMsMjAwMzAzNDk5NSksbmV3IFdvcmQ2NCgxNzQ3ODczNzc5LDM2MDIwMzY4OTkpLG5ldyBXb3JkNjQoMTk1NTU2MjIyMiwxNTc1OTkwMDEyKSxuZXcgV29yZDY0KDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCksbmV3IFdvcmQ2NCgyMjI3NzMwNDUyLDI3MTY5MDQzMDYpLG5ldyBXb3JkNjQoMjM2MTg1MjQyNCw0NDI3NzYwNDQpLG5ldyBXb3JkNjQoMjQyODQzNjQ3NCw1OTM2OTgzNDQpLG5ldyBXb3JkNjQoMjc1NjczNDE4NywzNzMzMTEwMjQ5KSxuZXcgV29yZDY0KDMyMDQwMzE0NzksMjk5OTM1MTU3MyksbmV3IFdvcmQ2NCgzMzI5MzI1Mjk4LDM4MTU5MjA0MjcpLG5ldyBXb3JkNjQoMzM5MTU2OTYxNCwzOTI4MzgzOTAwKSxuZXcgV29yZDY0KDM1MTUyNjcyNzEsNTY2MjgwNzExKSxuZXcgV29yZDY0KDM5NDAxODc2MDYsMzQ1NDA2OTUzNCksbmV3IFdvcmQ2NCg0MTE4NjMwMjcxLDQwMDAyMzk5OTIpLG5ldyBXb3JkNjQoMTE2NDE4NDc0LDE5MTQxMzg1NTQpLG5ldyBXb3JkNjQoMTc0MjkyNDIxLDI3MzEwNTUyNzApLG5ldyBXb3JkNjQoMjg5MzgwMzU2LDMyMDM5OTMwMDYpLG5ldyBXb3JkNjQoNDYwMzkzMjY5LDMyMDYyMDMxNSksbmV3IFdvcmQ2NCg2ODU0NzE3MzMsNTg3NDk2ODM2KSxuZXcgV29yZDY0KDg1MjE0Mjk3MSwxMDg2NzkyODUxKSxuZXcgV29yZDY0KDEwMTcwMzYyOTgsMzY1NTQzMTAwKSxuZXcgV29yZDY0KDExMjYwMDA1ODAsMjYxODI5NzY3NiksbmV3IFdvcmQ2NCgxMjg4MDMzNDcwLDM0MDk4NTUxNTgpLG5ldyBXb3JkNjQoMTUwMTUwNTk0OCw0MjM0NTA5ODY2KSxuZXcgV29yZDY0KDE2MDcxNjc5MTUsOTg3MTY3NDY4KSxuZXcgV29yZDY0KDE4MTY0MDIzMTYsMTI0NjE4OTU5MSldO3JldHVybiBmdW5jdGlvbiBoYXNoKHQsaSxhLHM9ITEpe2xldCByLG4sbyxnLGMsaCxsLEM7aWYocyl7cj1uZXcgV29yZDY0KDM0MTgwNzAzNjUsMzIzODM3MTAzMik7bj1uZXcgV29yZDY0KDE2NTQyNzAyNTAsOTE0MTUwNjYzKTtvPW5ldyBXb3JkNjQoMjQzODUyOTM3MCw4MTI3MDI5OTkpO2c9bmV3IFdvcmQ2NCgzNTU0NjIzNjAsNDE0NDkxMjY5Nyk7Yz1uZXcgV29yZDY0KDE3MzE0MDU0MTUsNDI5MDc3NTg1Nyk7aD1uZXcgV29yZDY0KDIzOTQxODAyMzEsMTc1MDYwMzAyNSk7bD1uZXcgV29yZDY0KDM2NzUwMDg1MjUsMTY5NDA3NjgzOSk7Qz1uZXcgV29yZDY0KDEyMDMwNjI4MTMsMzIwNDA3NTQyOCl9ZWxzZXtyPW5ldyBXb3JkNjQoMTc3OTAzMzcwMyw0MDg5MjM1NzIwKTtuPW5ldyBXb3JkNjQoMzE0NDEzNDI3NywyMjI3ODczNTk1KTtvPW5ldyBXb3JkNjQoMTAxMzkwNDI0Miw0MjcxMTc1NzIzKTtnPW5ldyBXb3JkNjQoMjc3MzQ4MDc2MiwxNTk1NzUwMTI5KTtjPW5ldyBXb3JkNjQoMTM1OTg5MzExOSwyOTE3NTY1MTM3KTtoPW5ldyBXb3JkNjQoMjYwMDgyMjkyNCw3MjU1MTExOTkpO2w9bmV3IFdvcmQ2NCg1Mjg3MzQ2MzUsNDIxNTM4OTU0Nyk7Qz1uZXcgV29yZDY0KDE1NDE0NTkyMjUsMzI3MDMzMjA5KX1jb25zdCBRPTEyOCpNYXRoLmNlaWwoKGErMTcpLzEyOCksRT1uZXcgVWludDhBcnJheShRKTtsZXQgdSxkO2Zvcih1PTA7dTxhOysrdSlFW3VdPXRbaSsrXTtFW3UrK109MTI4O2NvbnN0IGY9US0xNjtmb3IoO3U8ZjspRVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPTA7RVt1KytdPWE+Pj4yOSYyNTU7RVt1KytdPWE+PjIxJjI1NTtFW3UrK109YT4+MTMmMjU1O0VbdSsrXT1hPj41JjI1NTtFW3UrK109YTw8MyYyNTU7Y29uc3QgcD1uZXcgQXJyYXkoODApO2Zvcih1PTA7dTw4MDt1KyspcFt1XT1uZXcgV29yZDY0KDAsMCk7bGV0IG09bmV3IFdvcmQ2NCgwLDApLHk9bmV3IFdvcmQ2NCgwLDApLHc9bmV3IFdvcmQ2NCgwLDApLGI9bmV3IFdvcmQ2NCgwLDApLEQ9bmV3IFdvcmQ2NCgwLDApLEY9bmV3IFdvcmQ2NCgwLDApLFM9bmV3IFdvcmQ2NCgwLDApLGs9bmV3IFdvcmQ2NCgwLDApO2NvbnN0IFI9bmV3IFdvcmQ2NCgwLDApLE49bmV3IFdvcmQ2NCgwLDApLEc9bmV3IFdvcmQ2NCgwLDApLHg9bmV3IFdvcmQ2NCgwLDApO2xldCBNLFU7Zm9yKHU9MDt1PFE7KXtmb3IoZD0wO2Q8MTY7KytkKXtwW2RdLmhpZ2g9RVt1XTw8MjR8RVt1KzFdPDwxNnxFW3UrMl08PDh8RVt1KzNdO3BbZF0ubG93PUVbdSs0XTw8MjR8RVt1KzVdPDwxNnxFW3UrNl08PDh8RVt1KzddO3UrPTh9Zm9yKGQ9MTY7ZDw4MDsrK2Qpe009cFtkXTtsaXR0bGVTaWdtYVByaW1lKE0scFtkLTJdLHgpO00uYWRkKHBbZC03XSk7bGl0dGxlU2lnbWEoRyxwW2QtMTVdLHgpO00uYWRkKEcpO00uYWRkKHBbZC0xNl0pfW0uYXNzaWduKHIpO3kuYXNzaWduKG4pO3cuYXNzaWduKG8pO2IuYXNzaWduKGcpO0QuYXNzaWduKGMpO0YuYXNzaWduKGgpO1MuYXNzaWduKGwpO2suYXNzaWduKEMpO2ZvcihkPTA7ZDw4MDsrK2Qpe1IuYXNzaWduKGspO3NpZ21hUHJpbWUoRyxELHgpO1IuYWRkKEcpO2NoKEcsRCxGLFMseCk7Ui5hZGQoRyk7Ui5hZGQoZVtkXSk7Ui5hZGQocFtkXSk7c2lnbWEoTixtLHgpO21haihHLG0seSx3LHgpO04uYWRkKEcpO009aztrPVM7Uz1GO0Y9RDtiLmFkZChSKTtEPWI7Yj13O3c9eTt5PW07TS5hc3NpZ24oUik7TS5hZGQoTik7bT1NfXIuYWRkKG0pO24uYWRkKHkpO28uYWRkKHcpO2cuYWRkKGIpO2MuYWRkKEQpO2guYWRkKEYpO2wuYWRkKFMpO0MuYWRkKGspfWlmKHMpe1U9bmV3IFVpbnQ4QXJyYXkoNDgpO3IuY29weVRvKFUsMCk7bi5jb3B5VG8oVSw4KTtvLmNvcHlUbyhVLDE2KTtnLmNvcHlUbyhVLDI0KTtjLmNvcHlUbyhVLDMyKTtoLmNvcHlUbyhVLDQwKX1lbHNle1U9bmV3IFVpbnQ4QXJyYXkoNjQpO3IuY29weVRvKFUsMCk7bi5jb3B5VG8oVSw4KTtvLmNvcHlUbyhVLDE2KTtnLmNvcHlUbyhVLDI0KTtjLmNvcHlUbyhVLDMyKTtoLmNvcHlUbyhVLDQwKTtsLmNvcHlUbyhVLDQ4KTtDLmNvcHlUbyhVLDU2KX1yZXR1cm4gVX19KCk7Y2xhc3MgTnVsbENpcGhlcntkZWNyeXB0QmxvY2soZSl7cmV0dXJuIGV9ZW5jcnlwdChlKXtyZXR1cm4gZX19Y2xhc3MgQUVTQmFzZUNpcGhlcntjb25zdHJ1Y3Rvcigpe3RoaXMuY29uc3RydWN0b3I9PT1BRVNCYXNlQ2lwaGVyJiZ1bnJlYWNoYWJsZSgiQ2Fubm90IGluaXRpYWxpemUgQUVTQmFzZUNpcGhlci4iKTt0aGlzLl9zPW5ldyBVaW50OEFycmF5KFs5OSwxMjQsMTE5LDEyMywyNDIsMTA3LDExMSwxOTcsNDgsMSwxMDMsNDMsMjU0LDIxNSwxNzEsMTE4LDIwMiwxMzAsMjAxLDEyNSwyNTAsODksNzEsMjQwLDE3MywyMTIsMTYyLDE3NSwxNTYsMTY0LDExNCwxOTIsMTgzLDI1MywxNDcsMzgsNTQsNjMsMjQ3LDIwNCw1MiwxNjUsMjI5LDI0MSwxMTMsMjE2LDQ5LDIxLDQsMTk5LDM1LDE5NSwyNCwxNTAsNSwxNTQsNywxOCwxMjgsMjI2LDIzNSwzOSwxNzgsMTE3LDksMTMxLDQ0LDI2LDI3LDExMCw5MCwxNjAsODIsNTksMjE0LDE3OSw0MSwyMjcsNDcsMTMyLDgzLDIwOSwwLDIzNywzMiwyNTIsMTc3LDkxLDEwNiwyMDMsMTkwLDU3LDc0LDc2LDg4LDIwNywyMDgsMjM5LDE3MCwyNTEsNjcsNzcsNTEsMTMzLDY5LDI0OSwyLDEyNyw4MCw2MCwxNTksMTY4LDgxLDE2Myw2NCwxNDMsMTQ2LDE1Nyw1NiwyNDUsMTg4LDE4MiwyMTgsMzMsMTYsMjU1LDI0MywyMTAsMjA1LDEyLDE5LDIzNiw5NSwxNTEsNjgsMjMsMTk2LDE2NywxMjYsNjEsMTAwLDkzLDI1LDExNSw5NiwxMjksNzksMjIwLDM0LDQyLDE0NCwxMzYsNzAsMjM4LDE4NCwyMCwyMjIsOTQsMTEsMjE5LDIyNCw1MCw1OCwxMCw3Myw2LDM2LDkyLDE5NCwyMTEsMTcyLDk4LDE0NSwxNDksMjI4LDEyMSwyMzEsMjAwLDU1LDEwOSwxNDEsMjEzLDc4LDE2OSwxMDgsODYsMjQ0LDIzNCwxMDEsMTIyLDE3NCw4LDE4NiwxMjAsMzcsNDYsMjgsMTY2LDE4MCwxOTgsMjMyLDIyMSwxMTYsMzEsNzUsMTg5LDEzOSwxMzgsMTEyLDYyLDE4MSwxMDIsNzIsMywyNDYsMTQsOTcsNTMsODcsMTg1LDEzNCwxOTMsMjksMTU4LDIyNSwyNDgsMTUyLDE3LDEwNSwyMTcsMTQyLDE0OCwxNTUsMzAsMTM1LDIzMywyMDYsODUsNDAsMjIzLDE0MCwxNjEsMTM3LDEzLDE5MSwyMzAsNjYsMTA0LDY1LDE1Myw0NSwxNSwxNzYsODQsMTg3LDIyXSk7dGhpcy5faW52X3M9bmV3IFVpbnQ4QXJyYXkoWzgyLDksMTA2LDIxMyw0OCw1NCwxNjUsNTYsMTkxLDY0LDE2MywxNTgsMTI5LDI0MywyMTUsMjUxLDEyNCwyMjcsNTcsMTMwLDE1NSw0NywyNTUsMTM1LDUyLDE0Miw2Nyw2OCwxOTYsMjIyLDIzMywyMDMsODQsMTIzLDE0OCw1MCwxNjYsMTk0LDM1LDYxLDIzOCw3NiwxNDksMTEsNjYsMjUwLDE5NSw3OCw4LDQ2LDE2MSwxMDIsNDAsMjE3LDM2LDE3OCwxMTgsOTEsMTYyLDczLDEwOSwxMzksMjA5LDM3LDExNCwyNDgsMjQ2LDEwMCwxMzQsMTA0LDE1MiwyMiwyMTIsMTY0LDkyLDIwNCw5MywxMDEsMTgyLDE0NiwxMDgsMTEyLDcyLDgwLDI1MywyMzcsMTg1LDIxOCw5NCwyMSw3MCw4NywxNjcsMTQxLDE1NywxMzIsMTQ0LDIxNiwxNzEsMCwxNDAsMTg4LDIxMSwxMCwyNDcsMjI4LDg4LDUsMTg0LDE3OSw2OSw2LDIwOCw0NCwzMCwxNDMsMjAyLDYzLDE1LDIsMTkzLDE3NSwxODksMywxLDE5LDEzOCwxMDcsNTgsMTQ1LDE3LDY1LDc5LDEwMywyMjAsMjM0LDE1MSwyNDIsMjA3LDIwNiwyNDAsMTgwLDIzMCwxMTUsMTUwLDE3MiwxMTYsMzQsMjMxLDE3Myw1MywxMzMsMjI2LDI0OSw1NSwyMzIsMjgsMTE3LDIyMywxMTAsNzEsMjQxLDI2LDExMywyOSw0MSwxOTcsMTM3LDExMSwxODMsOTgsMTQsMTcwLDI0LDE5MCwyNywyNTIsODYsNjIsNzUsMTk4LDIxMCwxMjEsMzIsMTU0LDIxOSwxOTIsMjU0LDEyMCwyMDUsOTAsMjQ0LDMxLDIyMSwxNjgsNTEsMTM2LDcsMTk5LDQ5LDE3NywxOCwxNiw4OSwzOSwxMjgsMjM2LDk1LDk2LDgxLDEyNywxNjksMjUsMTgxLDc0LDEzLDQ1LDIyOSwxMjIsMTU5LDE0NywyMDEsMTU2LDIzOSwxNjAsMjI0LDU5LDc3LDE3NCw0MiwyNDUsMTc2LDIwMCwyMzUsMTg3LDYwLDEzMSw4MywxNTMsOTcsMjMsNDMsNCwxMjYsMTg2LDExOSwyMTQsMzgsMjI1LDEwNSwyMCw5OSw4NSwzMywxMiwxMjVdKTt0aGlzLl9taXg9bmV3IFVpbnQzMkFycmF5KFswLDIzNTQ3NDE4Nyw0NzA5NDgzNzQsMzAzNzY1Mjc3LDk0MTg5Njc0OCw5MDg5MzM0MTUsNjA3NTMwNTU0LDcwODc4MDg0OSwxODgzNzkzNDk2LDIxMTgyMTQ5OTUsMTgxNzg2NjgzMCwxNjQ5NjM5MjM3LDEyMTUwNjExMDgsMTE4MTA0NTExOSwxNDE3NTYxNjk4LDE1MTc3Njc1MjksMzc2NzU4Njk5Miw0MDAzMDYxMTc5LDQyMzY0Mjk5OTAsNDA2OTI0Njg5MywzNjM1NzMzNjYwLDM2MDI3NzAzMjcsMzI5OTI3ODQ3NCwzNDAwNTI4NzY5LDI0MzAxMjIyMTYsMjY2NDU0MzcxNSwyMzYyMDkwMjM4LDIxOTM4NjI2NDUsMjgzNTEyMzM5NiwyODAxMTA3NDA3LDMwMzU1MzUwNTgsMzEzNTc0MDg4OSwzNjc4MTI0OTIzLDM1NzY4NzA1MTIsMzM0MTM5NDI4NSwzMzc0MzYxNzAyLDM4MTA0OTYzNDMsMzk3NzY3NTM1Niw0Mjc5MDgwMjU3LDQwNDM2MTAxODYsMjg3NjQ5NDYyNywyNzc2MjkyOTA0LDMwNzY2MzkwMjksMzExMDY1MDk0MiwyNDcyMDExNTM1LDI2NDAyNDMyMDQsMjQwMzcyODY2NSwyMTY5MzAzMDU4LDEwMDEwODk5OTUsODk5ODM1NTg0LDY2NjQ2NDczMyw2OTk0MzIxNTAsNTk3Mjc4NDcsMjI2OTA2ODYwLDUzMDQwMDc1MywyOTQ5MzA2ODIsMTI3MzE2ODc4NywxMTcyOTY3MDY0LDE0NzU0MTg1MDEsMTUwOTQzMDQxNCwxOTQyNDM1Nzc1LDIxMTA2Njc0NDQsMTg3NjI0MTgzMywxNjQxODE2MjI2LDI5MTAyMTk3NjYsMjc0MzAzNDEwOSwyOTc2MTUxNTIwLDMyMTE2MjMxNDcsMjUwNTIwMjEzOCwyNjA2NDUzOTY5LDIzMDI2OTAyNTIsMjI2OTcyODQ1NSwzNzExODI5NDIyLDM1NDM1OTkyNjksMzI0MDg5NDM5MiwzNDc1MzEzMzMxLDM4NDM2OTkwNzQsMzk0MzkwNjQ0MSw0MTc4MDYyMjI4LDQxNDQwNDc3NzUsMTMwNjk2NzM2NiwxMTM5NzgxNzA5LDEzNzQ5ODgxMTIsMTYxMDQ1OTczOSwxOTc1NjgzNDM0LDIwNzY5MzUyNjUsMTc3NTI3NjkyNCwxNzQyMzE1MTI3LDEwMzQ4Njc5OTgsODY2NjM3ODQ1LDU2NjAyMTg5Niw4MDA0NDA4MzUsOTI5ODc2OTgsMTkzMTk1MDY1LDQyOTQ1NjE2NCwzOTU0NDE3MTEsMTk4NDgxMjY4NSwyMDE3Nzc4NTY2LDE3ODQ2NjMxOTUsMTY4MzQwNzI0OCwxMzE1NTYyMTQ1LDEwODAwOTQ2MzQsMTM4Mzg1NjMxMSwxNTUxMDM3ODg0LDEwMTAzOTgyOSwxMzUwNTAyMDYsNDM3NzU3MTIzLDMzNzU1Mzg2NCwxMDQyMzg1NjU3LDgwNzk2MjYxMCw1NzM4MDQ3ODMsNzQyMDM5MDEyLDI1MzEwNjc0NTMsMjU2NDAzMzMzNCwyMzI4ODI4OTcxLDIyMjc1NzMwMjQsMjkzNTU2Njg2NSwyNzAwMDk5MzU0LDMwMDE3NTU2NTUsMzE2ODkzNzIyOCwzODY4NTUyODA1LDM5MDI1NjMxODIsNDIwMzE4MTE3MSw0MTAyOTc3OTEyLDM3MzYxNjQ5MzcsMzUwMTc0MTg5MCwzMjY1NDc4NzUxLDM0MzM3MTI5ODAsMTEwNjA0MTU5MSwxMzQwNDYzMTAwLDE1NzY5NzY2MDksMTQwODc0OTAzNCwyMDQzMjExNDgzLDIwMDkxOTU0NzIsMTcwODg0ODMzMywxODA5MDU0MTUwLDgzMjg3NzIzMSwxMDY4MzUxMzk2LDc2Njk0NTQ2NSw1OTk3NjIzNTQsMTU5NDE3OTg3LDEyNjQ1NDY2NCwzNjE5Mjk4NzcsNDYzMTgwMTkwLDI3MDkyNjA4NzEsMjk0MzY4MjM4MCwzMTc4MTA2OTYxLDMwMDk4NzkzODYsMjU3MjY5NzE5NSwyNTM4NjgxMTg0LDIyMzYyMjg3MzMsMjMzNjQzNDU1MCwzNTA5ODcxMTM1LDM3NDUzNDUzMDAsMzQ0MTg1MDM3NywzMjc0NjY3MjY2LDM5MTAxNjE5NzEsMzg3NzE5ODY0OCw0MTEwNTY4NDg1LDQyMTE4MTg3OTgsMjU5NzgwNjQ3NiwyNDk3NjA0NzQzLDIyNjEwODkxNzgsMjI5NTEwMTA3MywyNzMzODU2MTYwLDI5MDIwODc4NTEsMzIwMjQzNzA0NiwyOTY4MDExNDUzLDM5MzYyOTEyODQsMzgzNTAzNjg5NSw0MTM2NDQwNzcwLDQxNjk0MDgyMDEsMzUzNTQ4NjQ1NiwzNzAyNjY1NDU5LDM0NjcxOTIzMDIsMzIzMTcyMjIxMywyMDUxNTE4NzgwLDE5NTEzMTcwNDcsMTcxNjg5MDQxMCwxNzUwOTAyMzA1LDExMTM4MTgzODQsMTI4MjA1MDA3NSwxNTg0NTA0NTgyLDEzNTAwNzg5ODksMTY4ODEwODUyLDY3NTU2NDYzLDM3MTA0OTMzMCw0MDQwMTY3NjEsODQxNzM5NTkyLDEwMDg5MTg1OTUsNzc1NTUwODE0LDU0MDA4MDcyNSwzOTY5NTYyMzY5LDM4MDEzMzIyMzQsNDAzNTQ4OTA0Nyw0MjY5OTA3OTk2LDM1NjkyNTUyMTMsMzY2OTQ2MjU2NiwzMzY2NzU0NjE5LDMzMzI3NDAxNDQsMjYzMTA2NTQzMywyNDYzODc5NzYyLDIxNjAxMTcwNzEsMjM5NTU4ODY3NiwyNzY3NjQ1NTU3LDI4Njg4OTc0MDYsMzEwMjAxMTc0NywzMDY5MDQ5OTYwLDIwMjAwODQ5NywzMzc3ODM2MiwyNzAwNDA0ODcsNTA0NDU5NDM2LDg3NTQ1MTI5Myw5NzU2NTg2NDYsNjc1MDM5NjI3LDY0MTAyNTE1MiwyMDg0NzA0MjMzLDE5MTc1MTg1NjIsMTYxNTg2MTI0NywxODUxMzMyODUyLDExNDc1NTA2NjEsMTI0ODgwMjUxMCwxNDg0MDA1ODQzLDE0NTEwNDQwNTYsOTMzMzAxMzcwLDk2NzMxMTcyOSw3MzMxNTY5NzIsNjMyOTUzNzAzLDI2MDM4ODk1MCwyNTk2NTkxNywzMjg2NzE4MDgsNDk2OTA2MDU5LDEyMDY0Nzc4NTgsMTIzOTQ0Mzc1MywxNTQzMjA4NTAwLDE0NDE5NTI1NzUsMjE0NDE2MTgwNiwxOTA4Njk0Mjc3LDE2NzU1Nzc4ODAsMTg0Mjc1OTQ0MywzNjEwMzY5MjI2LDM2NDQzNzk1ODUsMzQwODExOTUxNiwzMzA3OTE2MjQ3LDQwMTExOTA1MDIsMzc3Njc2NzQ2OSw0MDc3Mzg0NDMyLDQyNDU2MTg2ODMsMjgwOTc3MTE1NCwyODQyNzM3MDQ5LDMxNDQzOTY0MjAsMzA0MzE0MDQ5NSwyNjczNzA1MTUwLDI0MzgyMzc2MjEsMjIwMzAzMjIzMiwyMzcwMjEzNzk1XSk7dGhpcy5fbWl4Q29sPW5ldyBVaW50OEFycmF5KDI1Nik7Zm9yKGxldCBlPTA7ZTwyNTY7ZSsrKXRoaXMuX21peENvbFtlXT1lPDEyOD9lPDwxOmU8PDFeMjc7dGhpcy5idWZmZXI9bmV3IFVpbnQ4QXJyYXkoMTYpO3RoaXMuYnVmZmVyUG9zaXRpb249MH1fZXhwYW5kS2V5KGUpe3VucmVhY2hhYmxlKCJDYW5ub3QgY2FsbCBgX2V4cGFuZEtleWAgb24gdGhlIGJhc2UgY2xhc3MiKX1fZGVjcnlwdChlLHQpe2xldCBpLGEscztjb25zdCByPW5ldyBVaW50OEFycmF5KDE2KTtyLnNldChlKTtmb3IobGV0IGU9MCxpPXRoaXMuX2tleVNpemU7ZTwxNjsrK2UsKytpKXJbZV1ePXRbaV07Zm9yKGxldCBlPXRoaXMuX2N5Y2xlc09mUmVwZXRpdGlvbi0xO2U+PTE7LS1lKXtpPXJbMTNdO3JbMTNdPXJbOV07cls5XT1yWzVdO3JbNV09clsxXTtyWzFdPWk7aT1yWzE0XTthPXJbMTBdO3JbMTRdPXJbNl07clsxMF09clsyXTtyWzZdPWk7clsyXT1hO2k9clsxNV07YT1yWzExXTtzPXJbN107clsxNV09clszXTtyWzExXT1pO3JbN109YTtyWzNdPXM7Zm9yKGxldCBlPTA7ZTwxNjsrK2UpcltlXT10aGlzLl9pbnZfc1tyW2VdXTtmb3IobGV0IGk9MCxhPTE2KmU7aTwxNjsrK2ksKythKXJbaV1ePXRbYV07Zm9yKGxldCBlPTA7ZTwxNjtlKz00KXtjb25zdCB0PXRoaXMuX21peFtyW2VdXSxhPXRoaXMuX21peFtyW2UrMV1dLHM9dGhpcy5fbWl4W3JbZSsyXV0sbj10aGlzLl9taXhbcltlKzNdXTtpPXReYT4+PjheYTw8MjRecz4+PjE2XnM8PDE2Xm4+Pj4yNF5uPDw4O3JbZV09aT4+PjI0JjI1NTtyW2UrMV09aT4+MTYmMjU1O3JbZSsyXT1pPj44JjI1NTtyW2UrM109MjU1Jml9fWk9clsxM107clsxM109cls5XTtyWzldPXJbNV07cls1XT1yWzFdO3JbMV09aTtpPXJbMTRdO2E9clsxMF07clsxNF09cls2XTtyWzEwXT1yWzJdO3JbNl09aTtyWzJdPWE7aT1yWzE1XTthPXJbMTFdO3M9cls3XTtyWzE1XT1yWzNdO3JbMTFdPWk7cls3XT1hO3JbM109cztmb3IobGV0IGU9MDtlPDE2OysrZSl7cltlXT10aGlzLl9pbnZfc1tyW2VdXTtyW2VdXj10W2VdfXJldHVybiByfV9lbmNyeXB0KGUsdCl7Y29uc3QgaT10aGlzLl9zO2xldCBhLHMscjtjb25zdCBuPW5ldyBVaW50OEFycmF5KDE2KTtuLnNldChlKTtmb3IobGV0IGU9MDtlPDE2OysrZSluW2VdXj10W2VdO2ZvcihsZXQgZT0xO2U8dGhpcy5fY3ljbGVzT2ZSZXBldGl0aW9uO2UrKyl7Zm9yKGxldCBlPTA7ZTwxNjsrK2UpbltlXT1pW25bZV1dO3I9blsxXTtuWzFdPW5bNV07bls1XT1uWzldO25bOV09blsxM107blsxM109cjtyPW5bMl07cz1uWzZdO25bMl09blsxMF07bls2XT1uWzE0XTtuWzEwXT1yO25bMTRdPXM7cj1uWzNdO3M9bls3XTthPW5bMTFdO25bM109blsxNV07bls3XT1yO25bMTFdPXM7blsxNV09YTtmb3IobGV0IGU9MDtlPDE2O2UrPTQpe2NvbnN0IHQ9bltlKzBdLGk9bltlKzFdLHM9bltlKzJdLHI9bltlKzNdO2E9dF5pXnNecjtuW2UrMF1ePWFedGhpcy5fbWl4Q29sW3ReaV07bltlKzFdXj1hXnRoaXMuX21peENvbFtpXnNdO25bZSsyXV49YV50aGlzLl9taXhDb2xbc15yXTtuW2UrM11ePWFedGhpcy5fbWl4Q29sW3JedF19Zm9yKGxldCBpPTAsYT0xNiplO2k8MTY7KytpLCsrYSluW2ldXj10W2FdfWZvcihsZXQgZT0wO2U8MTY7KytlKW5bZV09aVtuW2VdXTtyPW5bMV07blsxXT1uWzVdO25bNV09bls5XTtuWzldPW5bMTNdO25bMTNdPXI7cj1uWzJdO3M9bls2XTtuWzJdPW5bMTBdO25bNl09blsxNF07blsxMF09cjtuWzE0XT1zO3I9blszXTtzPW5bN107YT1uWzExXTtuWzNdPW5bMTVdO25bN109cjtuWzExXT1zO25bMTVdPWE7Zm9yKGxldCBlPTAsaT10aGlzLl9rZXlTaXplO2U8MTY7KytlLCsraSluW2VdXj10W2ldO3JldHVybiBufV9kZWNyeXB0QmxvY2syKGUsdCl7Y29uc3QgaT1lLmxlbmd0aDtsZXQgYT10aGlzLmJ1ZmZlcixzPXRoaXMuYnVmZmVyUG9zaXRpb247Y29uc3Qgcj1bXTtsZXQgbj10aGlzLml2O2ZvcihsZXQgdD0wO3Q8aTsrK3Qpe2Fbc109ZVt0XTsrK3M7aWYoczwxNiljb250aW51ZTtjb25zdCBpPXRoaXMuX2RlY3J5cHQoYSx0aGlzLl9rZXkpO2ZvcihsZXQgZT0wO2U8MTY7KytlKWlbZV1ePW5bZV07bj1hO3IucHVzaChpKTthPW5ldyBVaW50OEFycmF5KDE2KTtzPTB9dGhpcy5idWZmZXI9YTt0aGlzLmJ1ZmZlckxlbmd0aD1zO3RoaXMuaXY9bjtpZigwPT09ci5sZW5ndGgpcmV0dXJuIG5ldyBVaW50OEFycmF5KDApO2xldCBvPTE2KnIubGVuZ3RoO2lmKHQpe2NvbnN0IGU9ci5hdCgtMSk7bGV0IHQ9ZVsxNV07aWYodDw9MTYpe2ZvcihsZXQgaT0xNSxhPTE2LXQ7aT49YTstLWkpaWYoZVtpXSE9PXQpe3Q9MDticmVha31vLT10O3Jbci5sZW5ndGgtMV09ZS5zdWJhcnJheSgwLDE2LXQpfX1jb25zdCBnPW5ldyBVaW50OEFycmF5KG8pO2ZvcihsZXQgZT0wLHQ9MCxpPXIubGVuZ3RoO2U8aTsrK2UsdCs9MTYpZy5zZXQocltlXSx0KTtyZXR1cm4gZ31kZWNyeXB0QmxvY2soZSx0LGk9bnVsbCl7Y29uc3QgYT1lLmxlbmd0aCxzPXRoaXMuYnVmZmVyO2xldCByPXRoaXMuYnVmZmVyUG9zaXRpb247aWYoaSl0aGlzLml2PWk7ZWxzZXtmb3IobGV0IHQ9MDtyPDE2JiZ0PGE7Kyt0LCsrcilzW3JdPWVbdF07aWYocjwxNil7dGhpcy5idWZmZXJMZW5ndGg9cjtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCl9dGhpcy5pdj1zO2U9ZS5zdWJhcnJheSgxNil9dGhpcy5idWZmZXI9bmV3IFVpbnQ4QXJyYXkoMTYpO3RoaXMuYnVmZmVyTGVuZ3RoPTA7dGhpcy5kZWNyeXB0QmxvY2s9dGhpcy5fZGVjcnlwdEJsb2NrMjtyZXR1cm4gdGhpcy5kZWNyeXB0QmxvY2soZSx0KX1lbmNyeXB0KGUsdCl7Y29uc3QgaT1lLmxlbmd0aDtsZXQgYT10aGlzLmJ1ZmZlcixzPXRoaXMuYnVmZmVyUG9zaXRpb247Y29uc3Qgcj1bXTt0fHwodD1uZXcgVWludDhBcnJheSgxNikpO2ZvcihsZXQgbj0wO248aTsrK24pe2Fbc109ZVtuXTsrK3M7aWYoczwxNiljb250aW51ZTtmb3IobGV0IGU9MDtlPDE2OysrZSlhW2VdXj10W2VdO2NvbnN0IGk9dGhpcy5fZW5jcnlwdChhLHRoaXMuX2tleSk7dD1pO3IucHVzaChpKTthPW5ldyBVaW50OEFycmF5KDE2KTtzPTB9dGhpcy5idWZmZXI9YTt0aGlzLmJ1ZmZlckxlbmd0aD1zO3RoaXMuaXY9dDtpZigwPT09ci5sZW5ndGgpcmV0dXJuIG5ldyBVaW50OEFycmF5KDApO2NvbnN0IG49MTYqci5sZW5ndGgsbz1uZXcgVWludDhBcnJheShuKTtmb3IobGV0IGU9MCx0PTAsaT1yLmxlbmd0aDtlPGk7KytlLHQrPTE2KW8uc2V0KHJbZV0sdCk7cmV0dXJuIG99fWNsYXNzIEFFUzEyOENpcGhlciBleHRlbmRzIEFFU0Jhc2VDaXBoZXJ7Y29uc3RydWN0b3IoZSl7c3VwZXIoKTt0aGlzLl9jeWNsZXNPZlJlcGV0aXRpb249MTA7dGhpcy5fa2V5U2l6ZT0xNjA7dGhpcy5fcmNvbj1uZXcgVWludDhBcnJheShbMTQxLDEsMiw0LDgsMTYsMzIsNjQsMTI4LDI3LDU0LDEwOCwyMTYsMTcxLDc3LDE1NCw0Nyw5NCwxODgsOTksMTk4LDE1MSw1MywxMDYsMjEyLDE3OSwxMjUsMjUwLDIzOSwxOTcsMTQ1LDU3LDExNCwyMjgsMjExLDE4OSw5NywxOTQsMTU5LDM3LDc0LDE0OCw1MSwxMDIsMjA0LDEzMSwyOSw1OCwxMTYsMjMyLDIwMywxNDEsMSwyLDQsOCwxNiwzMiw2NCwxMjgsMjcsNTQsMTA4LDIxNiwxNzEsNzcsMTU0LDQ3LDk0LDE4OCw5OSwxOTgsMTUxLDUzLDEwNiwyMTIsMTc5LDEyNSwyNTAsMjM5LDE5NywxNDUsNTcsMTE0LDIyOCwyMTEsMTg5LDk3LDE5NCwxNTksMzcsNzQsMTQ4LDUxLDEwMiwyMDQsMTMxLDI5LDU4LDExNiwyMzIsMjAzLDE0MSwxLDIsNCw4LDE2LDMyLDY0LDEyOCwyNyw1NCwxMDgsMjE2LDE3MSw3NywxNTQsNDcsOTQsMTg4LDk5LDE5OCwxNTEsNTMsMTA2LDIxMiwxNzksMTI1LDI1MCwyMzksMTk3LDE0NSw1NywxMTQsMjI4LDIxMSwxODksOTcsMTk0LDE1OSwzNyw3NCwxNDgsNTEsMTAyLDIwNCwxMzEsMjksNTgsMTE2LDIzMiwyMDMsMTQxLDEsMiw0LDgsMTYsMzIsNjQsMTI4LDI3LDU0LDEwOCwyMTYsMTcxLDc3LDE1NCw0Nyw5NCwxODgsOTksMTk4LDE1MSw1MywxMDYsMjEyLDE3OSwxMjUsMjUwLDIzOSwxOTcsMTQ1LDU3LDExNCwyMjgsMjExLDE4OSw5NywxOTQsMTU5LDM3LDc0LDE0OCw1MSwxMDIsMjA0LDEzMSwyOSw1OCwxMTYsMjMyLDIwMywxNDEsMSwyLDQsOCwxNiwzMiw2NCwxMjgsMjcsNTQsMTA4LDIxNiwxNzEsNzcsMTU0LDQ3LDk0LDE4OCw5OSwxOTgsMTUxLDUzLDEwNiwyMTIsMTc5LDEyNSwyNTAsMjM5LDE5NywxNDUsNTcsMTE0LDIyOCwyMTEsMTg5LDk3LDE5NCwxNTksMzcsNzQsMTQ4LDUxLDEwMiwyMDQsMTMxLDI5LDU4LDExNiwyMzIsMjAzLDE0MV0pO3RoaXMuX2tleT10aGlzLl9leHBhbmRLZXkoZSl9X2V4cGFuZEtleShlKXtjb25zdCB0PXRoaXMuX3MsaT10aGlzLl9yY29uLGE9bmV3IFVpbnQ4QXJyYXkoMTc2KTthLnNldChlKTtmb3IobGV0IGU9MTYscz0xO2U8MTc2Oysrcyl7bGV0IHI9YVtlLTNdLG49YVtlLTJdLG89YVtlLTFdLGc9YVtlLTRdO3I9dFtyXTtuPXRbbl07bz10W29dO2c9dFtnXTtyXj1pW3NdO2ZvcihsZXQgdD0wO3Q8NDsrK3Qpe2FbZV09cl49YVtlLTE2XTtlKys7YVtlXT1uXj1hW2UtMTZdO2UrKzthW2VdPW9ePWFbZS0xNl07ZSsrO2FbZV09Z149YVtlLTE2XTtlKyt9fXJldHVybiBhfX1jbGFzcyBBRVMyNTZDaXBoZXIgZXh0ZW5kcyBBRVNCYXNlQ2lwaGVye2NvbnN0cnVjdG9yKGUpe3N1cGVyKCk7dGhpcy5fY3ljbGVzT2ZSZXBldGl0aW9uPTE0O3RoaXMuX2tleVNpemU9MjI0O3RoaXMuX2tleT10aGlzLl9leHBhbmRLZXkoZSl9X2V4cGFuZEtleShlKXtjb25zdCB0PXRoaXMuX3MsaT1uZXcgVWludDhBcnJheSgyNDApO2kuc2V0KGUpO2xldCBhLHMscixuLG89MTtmb3IobGV0IGU9MzIsZz0xO2U8MjQwOysrZyl7aWYoZSUzMj09MTYpe2E9dFthXTtzPXRbc107cj10W3JdO249dFtuXX1lbHNlIGlmKGUlMzI9PTApe2E9aVtlLTNdO3M9aVtlLTJdO3I9aVtlLTFdO249aVtlLTRdO2E9dFthXTtzPXRbc107cj10W3JdO249dFtuXTthXj1vOyhvPDw9MSk+PTI1NiYmKG89MjU1JigyN15vKSl9Zm9yKGxldCB0PTA7dDw0OysrdCl7aVtlXT1hXj1pW2UtMzJdO2UrKztpW2VdPXNePWlbZS0zMl07ZSsrO2lbZV09cl49aVtlLTMyXTtlKys7aVtlXT1uXj1pW2UtMzJdO2UrK319cmV0dXJuIGl9fWNsYXNzIFBERjE3e2NoZWNrT3duZXJQYXNzd29yZChlLHQsaSxhKXtjb25zdCBzPW5ldyBVaW50OEFycmF5KGUubGVuZ3RoKzU2KTtzLnNldChlLDApO3Muc2V0KHQsZS5sZW5ndGgpO3Muc2V0KGksZS5sZW5ndGgrdC5sZW5ndGgpO3JldHVybiBpc0FycmF5RXF1YWwoSHMocywwLHMubGVuZ3RoKSxhKX1jaGVja1VzZXJQYXNzd29yZChlLHQsaSl7Y29uc3QgYT1uZXcgVWludDhBcnJheShlLmxlbmd0aCs4KTthLnNldChlLDApO2Euc2V0KHQsZS5sZW5ndGgpO3JldHVybiBpc0FycmF5RXF1YWwoSHMoYSwwLGEubGVuZ3RoKSxpKX1nZXRPd25lcktleShlLHQsaSxhKXtjb25zdCBzPW5ldyBVaW50OEFycmF5KGUubGVuZ3RoKzU2KTtzLnNldChlLDApO3Muc2V0KHQsZS5sZW5ndGgpO3Muc2V0KGksZS5sZW5ndGgrdC5sZW5ndGgpO2NvbnN0IHI9SHMocywwLHMubGVuZ3RoKTtyZXR1cm4gbmV3IEFFUzI1NkNpcGhlcihyKS5kZWNyeXB0QmxvY2soYSwhMSxuZXcgVWludDhBcnJheSgxNikpfWdldFVzZXJLZXkoZSx0LGkpe2NvbnN0IGE9bmV3IFVpbnQ4QXJyYXkoZS5sZW5ndGgrOCk7YS5zZXQoZSwwKTthLnNldCh0LGUubGVuZ3RoKTtjb25zdCBzPUhzKGEsMCxhLmxlbmd0aCk7cmV0dXJuIG5ldyBBRVMyNTZDaXBoZXIocykuZGVjcnlwdEJsb2NrKGksITEsbmV3IFVpbnQ4QXJyYXkoMTYpKX19Y2xhc3MgUERGMjB7X2hhc2goZSx0LGkpe2xldCBhPUhzKHQsMCx0Lmxlbmd0aCkuc3ViYXJyYXkoMCwzMikscz1bMF0scj0wO2Zvcig7cjw2NHx8cy5hdCgtMSk+ci0zMjspe2NvbnN0IHQ9ZS5sZW5ndGgrYS5sZW5ndGgraS5sZW5ndGgsYz1uZXcgVWludDhBcnJheSh0KTtsZXQgaD0wO2Muc2V0KGUsaCk7aCs9ZS5sZW5ndGg7Yy5zZXQoYSxoKTtoKz1hLmxlbmd0aDtjLnNldChpLGgpO2NvbnN0IGw9bmV3IFVpbnQ4QXJyYXkoNjQqdCk7Zm9yKGxldCBlPTAsaT0wO2U8NjQ7ZSsrLGkrPXQpbC5zZXQoYyxpKTtzPW5ldyBBRVMxMjhDaXBoZXIoYS5zdWJhcnJheSgwLDE2KSkuZW5jcnlwdChsLGEuc3ViYXJyYXkoMTYsMzIpKTtjb25zdCBDPXMuc2xpY2UoMCwxNikucmVkdWNlKCgoZSx0KT0+ZSt0KSwwKSUzOzA9PT1DP2E9SHMocywwLHMubGVuZ3RoKToxPT09Qz9hPShuPXMsbz0wLGc9cy5sZW5ndGgsWXMobixvLGcsITApKToyPT09QyYmKGE9WXMocywwLHMubGVuZ3RoKSk7cisrfXZhciBuLG8sZztyZXR1cm4gYS5zdWJhcnJheSgwLDMyKX1jaGVja093bmVyUGFzc3dvcmQoZSx0LGksYSl7Y29uc3Qgcz1uZXcgVWludDhBcnJheShlLmxlbmd0aCs1Nik7cy5zZXQoZSwwKTtzLnNldCh0LGUubGVuZ3RoKTtzLnNldChpLGUubGVuZ3RoK3QubGVuZ3RoKTtyZXR1cm4gaXNBcnJheUVxdWFsKHRoaXMuX2hhc2goZSxzLGkpLGEpfWNoZWNrVXNlclBhc3N3b3JkKGUsdCxpKXtjb25zdCBhPW5ldyBVaW50OEFycmF5KGUubGVuZ3RoKzgpO2Euc2V0KGUsMCk7YS5zZXQodCxlLmxlbmd0aCk7cmV0dXJuIGlzQXJyYXlFcXVhbCh0aGlzLl9oYXNoKGUsYSxbXSksaSl9Z2V0T3duZXJLZXkoZSx0LGksYSl7Y29uc3Qgcz1uZXcgVWludDhBcnJheShlLmxlbmd0aCs1Nik7cy5zZXQoZSwwKTtzLnNldCh0LGUubGVuZ3RoKTtzLnNldChpLGUubGVuZ3RoK3QubGVuZ3RoKTtjb25zdCByPXRoaXMuX2hhc2goZSxzLGkpO3JldHVybiBuZXcgQUVTMjU2Q2lwaGVyKHIpLmRlY3J5cHRCbG9jayhhLCExLG5ldyBVaW50OEFycmF5KDE2KSl9Z2V0VXNlcktleShlLHQsaSl7Y29uc3QgYT1uZXcgVWludDhBcnJheShlLmxlbmd0aCs4KTthLnNldChlLDApO2Euc2V0KHQsZS5sZW5ndGgpO2NvbnN0IHM9dGhpcy5faGFzaChlLGEsW10pO3JldHVybiBuZXcgQUVTMjU2Q2lwaGVyKHMpLmRlY3J5cHRCbG9jayhpLCExLG5ldyBVaW50OEFycmF5KDE2KSl9fWNsYXNzIENpcGhlclRyYW5zZm9ybXtjb25zdHJ1Y3RvcihlLHQpe3RoaXMuU3RyaW5nQ2lwaGVyQ29uc3RydWN0b3I9ZTt0aGlzLlN0cmVhbUNpcGhlckNvbnN0cnVjdG9yPXR9Y3JlYXRlU3RyZWFtKGUsdCl7Y29uc3QgaT1uZXcgdGhpcy5TdHJlYW1DaXBoZXJDb25zdHJ1Y3RvcjtyZXR1cm4gbmV3IERlY3J5cHRTdHJlYW0oZSx0LChmdW5jdGlvbiBjaXBoZXJUcmFuc2Zvcm1EZWNyeXB0U3RyZWFtKGUsdCl7cmV0dXJuIGkuZGVjcnlwdEJsb2NrKGUsdCl9KSl9ZGVjcnlwdFN0cmluZyhlKXtjb25zdCB0PW5ldyB0aGlzLlN0cmluZ0NpcGhlckNvbnN0cnVjdG9yO2xldCBpPXN0cmluZ1RvQnl0ZXMoZSk7aT10LmRlY3J5cHRCbG9jayhpLCEwKTtyZXR1cm4gYnl0ZXNUb1N0cmluZyhpKX1lbmNyeXB0U3RyaW5nKGUpe2NvbnN0IHQ9bmV3IHRoaXMuU3RyaW5nQ2lwaGVyQ29uc3RydWN0b3I7aWYodCBpbnN0YW5jZW9mIEFFU0Jhc2VDaXBoZXIpe2NvbnN0IGk9MTYtZS5sZW5ndGglMTY7ZSs9U3RyaW5nLmZyb21DaGFyQ29kZShpKS5yZXBlYXQoaSk7Y29uc3QgYT1uZXcgVWludDhBcnJheSgxNik7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBjcnlwdG8pY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhhKTtlbHNlIGZvcihsZXQgZT0wO2U8MTY7ZSsrKWFbZV09TWF0aC5mbG9vcigyNTYqTWF0aC5yYW5kb20oKSk7bGV0IHM9c3RyaW5nVG9CeXRlcyhlKTtzPXQuZW5jcnlwdChzLGEpO2NvbnN0IHI9bmV3IFVpbnQ4QXJyYXkoMTYrcy5sZW5ndGgpO3Iuc2V0KGEpO3Iuc2V0KHMsMTYpO3JldHVybiBieXRlc1RvU3RyaW5nKHIpfWxldCBpPXN0cmluZ1RvQnl0ZXMoZSk7aT10LmVuY3J5cHQoaSk7cmV0dXJuIGJ5dGVzVG9TdHJpbmcoaSl9fWNsYXNzIENpcGhlclRyYW5zZm9ybUZhY3Rvcnl7c3RhdGljI2I9bmV3IFVpbnQ4QXJyYXkoWzQwLDE5MSw3OCw5NCw3OCwxMTcsMTM4LDY1LDEwMCwwLDc4LDg2LDI1NSwyNTAsMSw4LDQ2LDQ2LDAsMTgyLDIwOCwxMDQsNjIsMTI4LDQ3LDEyLDE2OSwyNTQsMTAwLDgzLDEwNSwxMjJdKTsjRChlLHQsaSxhLHMscixuLG8sZyxjLGgsbCl7aWYodCl7Y29uc3QgZT1NYXRoLm1pbigxMjcsdC5sZW5ndGgpO3Q9dC5zdWJhcnJheSgwLGUpfWVsc2UgdD1bXTtjb25zdCBDPTY9PT1lP25ldyBQREYyMDpuZXcgUERGMTc7cmV0dXJuIEMuY2hlY2tVc2VyUGFzc3dvcmQodCxvLG4pP0MuZ2V0VXNlcktleSh0LGcsaCk6dC5sZW5ndGgmJkMuY2hlY2tPd25lclBhc3N3b3JkKHQsYSxyLGkpP0MuZ2V0T3duZXJLZXkodCxzLHIsYyk6bnVsbH0jRihlLHQsaSxhLHMscixuLG8pe2NvbnN0IGc9NDAraS5sZW5ndGgrZS5sZW5ndGgsYz1uZXcgVWludDhBcnJheShnKTtsZXQgaCxsLEM9MDtpZih0KXtsPU1hdGgubWluKDMyLHQubGVuZ3RoKTtmb3IoO0M8bDsrK0MpY1tDXT10W0NdfWg9MDtmb3IoO0M8MzI7KWNbQysrXT1DaXBoZXJUcmFuc2Zvcm1GYWN0b3J5LiNiW2grK107Zm9yKGg9MCxsPWkubGVuZ3RoO2g8bDsrK2gpY1tDKytdPWlbaF07Y1tDKytdPTI1NSZzO2NbQysrXT1zPj44JjI1NTtjW0MrK109cz4+MTYmMjU1O2NbQysrXT1zPj4+MjQmMjU1O2ZvcihoPTAsbD1lLmxlbmd0aDtoPGw7KytoKWNbQysrXT1lW2hdO2lmKHI+PTQmJiFvKXtjW0MrK109MjU1O2NbQysrXT0yNTU7Y1tDKytdPTI1NTtjW0MrK109MjU1fWxldCBRPUpzKGMsMCxDKTtjb25zdCBFPW4+PjM7aWYocj49Mylmb3IoaD0wO2g8NTA7KytoKVE9SnMoUSwwLEUpO2NvbnN0IHU9US5zdWJhcnJheSgwLEUpO2xldCBkLGY7aWYocj49Myl7Zm9yKEM9MDtDPDMyOysrQyljW0NdPUNpcGhlclRyYW5zZm9ybUZhY3RvcnkuI2JbQ107Zm9yKGg9MCxsPWUubGVuZ3RoO2g8bDsrK2gpY1tDKytdPWVbaF07ZD1uZXcgQVJDRm91ckNpcGhlcih1KTtmPWQuZW5jcnlwdEJsb2NrKEpzKGMsMCxDKSk7bD11Lmxlbmd0aDtjb25zdCB0PW5ldyBVaW50OEFycmF5KGwpO2ZvcihoPTE7aDw9MTk7KytoKXtmb3IobGV0IGU9MDtlPGw7KytlKXRbZV09dVtlXV5oO2Q9bmV3IEFSQ0ZvdXJDaXBoZXIodCk7Zj1kLmVuY3J5cHRCbG9jayhmKX1mb3IoaD0wLGw9Zi5sZW5ndGg7aDxsOysraClpZihhW2hdIT09ZltoXSlyZXR1cm4gbnVsbH1lbHNle2Q9bmV3IEFSQ0ZvdXJDaXBoZXIodSk7Zj1kLmVuY3J5cHRCbG9jayhDaXBoZXJUcmFuc2Zvcm1GYWN0b3J5LiNiKTtmb3IoaD0wLGw9Zi5sZW5ndGg7aDxsOysraClpZihhW2hdIT09ZltoXSlyZXR1cm4gbnVsbH1yZXR1cm4gdX0jUyhlLHQsaSxhKXtjb25zdCBzPW5ldyBVaW50OEFycmF5KDMyKTtsZXQgcj0wO2NvbnN0IG49TWF0aC5taW4oMzIsZS5sZW5ndGgpO2Zvcig7cjxuOysrcilzW3JdPWVbcl07bGV0IG89MDtmb3IoO3I8MzI7KXNbcisrXT1DaXBoZXJUcmFuc2Zvcm1GYWN0b3J5LiNiW28rK107bGV0IGc9SnMocywwLHIpO2NvbnN0IGM9YT4+MztpZihpPj0zKWZvcihvPTA7bzw1MDsrK28pZz1KcyhnLDAsZy5sZW5ndGgpO2xldCBoLGw7aWYoaT49Myl7bD10O2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkoYyk7Zm9yKG89MTk7bz49MDtvLS0pe2ZvcihsZXQgdD0wO3Q8YzsrK3QpZVt0XT1nW3RdXm87aD1uZXcgQVJDRm91ckNpcGhlcihlKTtsPWguZW5jcnlwdEJsb2NrKGwpfX1lbHNle2g9bmV3IEFSQ0ZvdXJDaXBoZXIoZy5zdWJhcnJheSgwLGMpKTtsPWguZW5jcnlwdEJsb2NrKHQpfXJldHVybiBsfSNrKGUsdCxpLGE9ITEpe2NvbnN0IHM9bmV3IFVpbnQ4QXJyYXkoaS5sZW5ndGgrOSkscj1pLmxlbmd0aDtsZXQgbjtmb3Iobj0wO248cjsrK24pc1tuXT1pW25dO3NbbisrXT0yNTUmZTtzW24rK109ZT4+OCYyNTU7c1tuKytdPWU+PjE2JjI1NTtzW24rK109MjU1JnQ7c1tuKytdPXQ+PjgmMjU1O2lmKGEpe3NbbisrXT0xMTU7c1tuKytdPTY1O3NbbisrXT0xMDg7c1tuKytdPTg0fXJldHVybiBKcyhzLDAsbikuc3ViYXJyYXkoMCxNYXRoLm1pbihpLmxlbmd0aCs1LDE2KSl9I1IoZSx0LGksYSxzKXtpZighKHQgaW5zdGFuY2VvZiBOYW1lKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkludmFsaWQgY3J5cHQgZmlsdGVyIG5hbWUuIik7Y29uc3Qgcj10aGlzLG49ZS5nZXQodC5uYW1lKSxvPW4/LmdldCgiQ0ZNIik7aWYoIW98fCJOb25lIj09PW8ubmFtZSlyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IE51bGxDaXBoZXJ9O2lmKCJWMiI9PT1vLm5hbWUpcmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBBUkNGb3VyQ2lwaGVyKHIuI2soaSxhLHMsITEpKX07aWYoIkFFU1YyIj09PW8ubmFtZSlyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEFFUzEyOENpcGhlcihyLiNrKGksYSxzLCEwKSl9O2lmKCJBRVNWMyI9PT1vLm5hbWUpcmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBBRVMyNTZDaXBoZXIocyl9O3Rocm93IG5ldyBGb3JtYXRFcnJvcigiVW5rbm93biBjcnlwdG8gbWV0aG9kIil9Y29uc3RydWN0b3IoZSx0LGkpe2NvbnN0IGE9ZS5nZXQoIkZpbHRlciIpO2lmKCFpc05hbWUoYSwiU3RhbmRhcmQiKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoInVua25vd24gZW5jcnlwdGlvbiBtZXRob2QiKTt0aGlzLmZpbHRlck5hbWU9YS5uYW1lO3RoaXMuZGljdD1lO2NvbnN0IHM9ZS5nZXQoIlYiKTtpZighTnVtYmVyLmlzSW50ZWdlcihzKXx8MSE9PXMmJjIhPT1zJiY0IT09cyYmNSE9PXMpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJ1bnN1cHBvcnRlZCBlbmNyeXB0aW9uIGFsZ29yaXRobSIpO3RoaXMuYWxnb3JpdGhtPXM7bGV0IHI9ZS5nZXQoIkxlbmd0aCIpO2lmKCFyKWlmKHM8PTMpcj00MDtlbHNle2NvbnN0IHQ9ZS5nZXQoIkNGIiksaT1lLmdldCgiU3RtRiIpO2lmKHQgaW5zdGFuY2VvZiBEaWN0JiZpIGluc3RhbmNlb2YgTmFtZSl7dC5zdXBwcmVzc0VuY3J5cHRpb249ITA7Y29uc3QgZT10LmdldChpLm5hbWUpO3I9ZT8uZ2V0KCJMZW5ndGgiKXx8MTI4O3I8NDAmJihyPDw9Myl9fWlmKCFOdW1iZXIuaXNJbnRlZ2VyKHIpfHxyPDQwfHxyJTghPTApdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJpbnZhbGlkIGtleSBsZW5ndGgiKTtjb25zdCBuPXN0cmluZ1RvQnl0ZXMoZS5nZXQoIk8iKSksbz1zdHJpbmdUb0J5dGVzKGUuZ2V0KCJVIikpLGc9bi5zdWJhcnJheSgwLDMyKSxjPW8uc3ViYXJyYXkoMCwzMiksaD1lLmdldCgiUCIpLGw9ZS5nZXQoIlIiKSxDPSg0PT09c3x8NT09PXMpJiYhMSE9PWUuZ2V0KCJFbmNyeXB0TWV0YWRhdGEiKTt0aGlzLmVuY3J5cHRNZXRhZGF0YT1DO2NvbnN0IFE9c3RyaW5nVG9CeXRlcyh0KTtsZXQgRSx1O2lmKGkpe2lmKDY9PT1sKXRyeXtpPXV0ZjhTdHJpbmdUb1N0cmluZyhpKX1jYXRjaHt3YXJuKCJDaXBoZXJUcmFuc2Zvcm1GYWN0b3J5OiBVbmFibGUgdG8gY29udmVydCBVVEY4IGVuY29kZWQgcGFzc3dvcmQuIil9RT1zdHJpbmdUb0J5dGVzKGkpfWlmKDUhPT1zKXU9dGhpcy4jRihRLEUsZyxjLGgsbCxyLEMpO2Vsc2V7Y29uc3QgdD1uLnN1YmFycmF5KDMyLDQwKSxpPW4uc3ViYXJyYXkoNDAsNDgpLGE9by5zdWJhcnJheSgwLDQ4KSxzPW8uc3ViYXJyYXkoMzIsNDApLHI9by5zdWJhcnJheSg0MCw0OCksaD1zdHJpbmdUb0J5dGVzKGUuZ2V0KCJPRSIpKSxDPXN0cmluZ1RvQnl0ZXMoZS5nZXQoIlVFIikpLFE9c3RyaW5nVG9CeXRlcyhlLmdldCgiUGVybXMiKSk7dT10aGlzLiNEKGwsRSxnLHQsaSxhLGMscyxyLGgsQyxRKX1pZighdSYmIWkpdGhyb3cgbmV3IFBhc3N3b3JkRXhjZXB0aW9uKCJObyBwYXNzd29yZCBnaXZlbiIsaXQpO2lmKCF1JiZpKXtjb25zdCBlPXRoaXMuI1MoRSxnLGwscik7dT10aGlzLiNGKFEsZSxnLGMsaCxsLHIsQyl9aWYoIXUpdGhyb3cgbmV3IFBhc3N3b3JkRXhjZXB0aW9uKCJJbmNvcnJlY3QgUGFzc3dvcmQiLGF0KTt0aGlzLmVuY3J5cHRpb25LZXk9dTtpZihzPj00KXtjb25zdCB0PWUuZ2V0KCJDRiIpO3QgaW5zdGFuY2VvZiBEaWN0JiYodC5zdXBwcmVzc0VuY3J5cHRpb249ITApO3RoaXMuY2Y9dDt0aGlzLnN0bWY9ZS5nZXQoIlN0bUYiKXx8TmFtZS5nZXQoIklkZW50aXR5Iik7dGhpcy5zdHJmPWUuZ2V0KCJTdHJGIil8fE5hbWUuZ2V0KCJJZGVudGl0eSIpO3RoaXMuZWZmPWUuZ2V0KCJFRkYiKXx8dGhpcy5zdG1mfX1jcmVhdGVDaXBoZXJUcmFuc2Zvcm0oZSx0KXtpZig0PT09dGhpcy5hbGdvcml0aG18fDU9PT10aGlzLmFsZ29yaXRobSlyZXR1cm4gbmV3IENpcGhlclRyYW5zZm9ybSh0aGlzLiNSKHRoaXMuY2YsdGhpcy5zdHJmLGUsdCx0aGlzLmVuY3J5cHRpb25LZXkpLHRoaXMuI1IodGhpcy5jZix0aGlzLnN0bWYsZSx0LHRoaXMuZW5jcnlwdGlvbktleSkpO2NvbnN0IGk9dGhpcy4jayhlLHQsdGhpcy5lbmNyeXB0aW9uS2V5LCExKSxjaXBoZXJDb25zdHJ1Y3Rvcj1mdW5jdGlvbigpe3JldHVybiBuZXcgQVJDRm91ckNpcGhlcihpKX07cmV0dXJuIG5ldyBDaXBoZXJUcmFuc2Zvcm0oY2lwaGVyQ29uc3RydWN0b3IsY2lwaGVyQ29uc3RydWN0b3IpfX1hc3luYyBmdW5jdGlvbiB3cml0ZU9iamVjdChlLHQsaSx7ZW5jcnlwdDphPW51bGx9KXtjb25zdCBzPWE/LmNyZWF0ZUNpcGhlclRyYW5zZm9ybShlLm51bSxlLmdlbik7aS5wdXNoKGAke2UubnVtfSAke2UuZ2VufSBvYmpcbmApO3QgaW5zdGFuY2VvZiBEaWN0P2F3YWl0IHdyaXRlRGljdCh0LGkscyk6dCBpbnN0YW5jZW9mIEJhc2VTdHJlYW0/YXdhaXQgd3JpdGVTdHJlYW0odCxpLHMpOihBcnJheS5pc0FycmF5KHQpfHxBcnJheUJ1ZmZlci5pc1ZpZXcodCkpJiZhd2FpdCB3cml0ZUFycmF5KHQsaSxzKTtpLnB1c2goIlxuZW5kb2JqXG4iKX1hc3luYyBmdW5jdGlvbiB3cml0ZURpY3QoZSx0LGkpe3QucHVzaCgiPDwiKTtmb3IoY29uc3QgYSBvZiBlLmdldEtleXMoKSl7dC5wdXNoKGAgLyR7ZXNjYXBlUERGTmFtZShhKX0gYCk7YXdhaXQgd3JpdGVWYWx1ZShlLmdldFJhdyhhKSx0LGkpfXQucHVzaCgiPj4iKX1hc3luYyBmdW5jdGlvbiB3cml0ZVN0cmVhbShlLHQsaSl7bGV0IGE9ZS5nZXRCeXRlcygpO2NvbnN0e2RpY3Q6c309ZSxbcixuXT1hd2FpdCBQcm9taXNlLmFsbChbcy5nZXRBc3luYygiRmlsdGVyIikscy5nZXRBc3luYygiRGVjb2RlUGFybXMiKV0pLG89aXNOYW1lKEFycmF5LmlzQXJyYXkocik/YXdhaXQgcy54cmVmLmZldGNoSWZSZWZBc3luYyhyWzBdKTpyLCJGbGF0ZURlY29kZSIpO2lmKGEubGVuZ3RoPj0yNTZ8fG8pdHJ5e2NvbnN0IGU9bmV3IENvbXByZXNzaW9uU3RyZWFtKCJkZWZsYXRlIiksdD1lLndyaXRhYmxlLmdldFdyaXRlcigpO3Qud3JpdGUoYSk7dC5jbG9zZSgpO2NvbnN0IGk9YXdhaXQgbmV3IFJlc3BvbnNlKGUucmVhZGFibGUpLmFycmF5QnVmZmVyKCk7YT1uZXcgVWludDhBcnJheShpKTtsZXQgZyxjO2lmKHIpe2lmKCFvKXtnPUFycmF5LmlzQXJyYXkocik/W05hbWUuZ2V0KCJGbGF0ZURlY29kZSIpLC4uLnJdOltOYW1lLmdldCgiRmxhdGVEZWNvZGUiKSxyXTtuJiYoYz1BcnJheS5pc0FycmF5KG4pP1tudWxsLC4uLm5dOltudWxsLG5dKX19ZWxzZSBnPU5hbWUuZ2V0KCJGbGF0ZURlY29kZSIpO2cmJnMuc2V0KCJGaWx0ZXIiLGcpO2MmJnMuc2V0KCJEZWNvZGVQYXJtcyIsYyl9Y2F0Y2goZSl7aW5mbyhgd3JpdGVTdHJlYW0gLSBjYW5ub3QgY29tcHJlc3MgZGF0YTogIiR7ZX0iLmApfWxldCBnPWJ5dGVzVG9TdHJpbmcoYSk7aSYmKGc9aS5lbmNyeXB0U3RyaW5nKGcpKTtzLnNldCgiTGVuZ3RoIixnLmxlbmd0aCk7YXdhaXQgd3JpdGVEaWN0KHMsdCxpKTt0LnB1c2goIiBzdHJlYW1cbiIsZywiXG5lbmRzdHJlYW0iKX1hc3luYyBmdW5jdGlvbiB3cml0ZUFycmF5KGUsdCxpKXt0LnB1c2goIlsiKTtsZXQgYT0hMDtmb3IoY29uc3QgcyBvZiBlKXthP2E9ITE6dC5wdXNoKCIgIik7YXdhaXQgd3JpdGVWYWx1ZShzLHQsaSl9dC5wdXNoKCJdIil9YXN5bmMgZnVuY3Rpb24gd3JpdGVWYWx1ZShlLHQsaSl7aWYoZSBpbnN0YW5jZW9mIE5hbWUpdC5wdXNoKGAvJHtlc2NhcGVQREZOYW1lKGUubmFtZSl9YCk7ZWxzZSBpZihlIGluc3RhbmNlb2YgUmVmKXQucHVzaChgJHtlLm51bX0gJHtlLmdlbn0gUmApO2Vsc2UgaWYoQXJyYXkuaXNBcnJheShlKXx8QXJyYXlCdWZmZXIuaXNWaWV3KGUpKWF3YWl0IHdyaXRlQXJyYXkoZSx0LGkpO2Vsc2UgaWYoInN0cmluZyI9PXR5cGVvZiBlKXtpJiYoZT1pLmVuY3J5cHRTdHJpbmcoZSkpO3QucHVzaChgKCR7ZXNjYXBlU3RyaW5nKGUpfSlgKX1lbHNlIm51bWJlciI9PXR5cGVvZiBlP3QucHVzaChudW1iZXJUb1N0cmluZyhlKSk6ImJvb2xlYW4iPT10eXBlb2YgZT90LnB1c2goZS50b1N0cmluZygpKTplIGluc3RhbmNlb2YgRGljdD9hd2FpdCB3cml0ZURpY3QoZSx0LGkpOmUgaW5zdGFuY2VvZiBCYXNlU3RyZWFtP2F3YWl0IHdyaXRlU3RyZWFtKGUsdCxpKTpudWxsPT09ZT90LnB1c2goIm51bGwiKTp3YXJuKGBVbmhhbmRsZWQgdmFsdWUgaW4gd3JpdGVyOiAke3R5cGVvZiBlfSwgcGxlYXNlIGZpbGUgYSBidWcuYCl9ZnVuY3Rpb24gd3JpdGVJbnQoZSx0LGksYSl7Zm9yKGxldCBzPXQraS0xO3M+aS0xO3MtLSl7YVtzXT0yNTUmZTtlPj49OH1yZXR1cm4gaSt0fWZ1bmN0aW9uIHdyaXRlU3RyaW5nKGUsdCxpKXtmb3IobGV0IGE9MCxzPWUubGVuZ3RoO2E8czthKyspaVt0K2FdPTI1NSZlLmNoYXJDb2RlQXQoYSl9ZnVuY3Rpb24gdXBkYXRlWEZBKHt4ZmFEYXRhOmUseGZhRGF0YXNldHNSZWY6dCxuZXdSZWZzOmkseHJlZjphfSl7aWYobnVsbD09PWUpe2U9ZnVuY3Rpb24gd3JpdGVYRkFEYXRhRm9yQWNyb2Zvcm0oZSx0KXtjb25zdCBpPW5ldyBTaW1wbGVYTUxQYXJzZXIoe2hhc0F0dHJpYnV0ZXM6ITB9KS5wYXJzZUZyb21TdHJpbmcoZSk7Zm9yKGNvbnN0e3hmYTplfW9mIHQpe2lmKCFlKWNvbnRpbnVlO2NvbnN0e3BhdGg6dCx2YWx1ZTphfT1lO2lmKCF0KWNvbnRpbnVlO2NvbnN0IHM9cGFyc2VYRkFQYXRoKHQpO2xldCByPWkuZG9jdW1lbnRFbGVtZW50LnNlYXJjaE5vZGUocywwKTshciYmcy5sZW5ndGg+MSYmKHI9aS5kb2N1bWVudEVsZW1lbnQuc2VhcmNoTm9kZShbcy5hdCgtMSldLDApKTtyP3IuY2hpbGROb2Rlcz1BcnJheS5pc0FycmF5KGEpP2EubWFwKChlPT5uZXcgU2ltcGxlRE9NTm9kZSgidmFsdWUiLGUpKSk6W25ldyBTaW1wbGVET01Ob2RlKCIjdGV4dCIsYSldOndhcm4oYE5vZGUgbm90IGZvdW5kIGZvciBwYXRoOiAke3R9YCl9Y29uc3QgYT1bXTtpLmRvY3VtZW50RWxlbWVudC5kdW1wKGEpO3JldHVybiBhLmpvaW4oIiIpfShhLmZldGNoSWZSZWYodCkuZ2V0U3RyaW5nKCksaSl9Y29uc3Qgcz1hLmVuY3J5cHQ7aWYocyl7ZT1zLmNyZWF0ZUNpcGhlclRyYW5zZm9ybSh0Lm51bSx0LmdlbikuZW5jcnlwdFN0cmluZyhlKX1jb25zdCByPWAke3QubnVtfSAke3QuZ2VufSBvYmpcbjw8IC9UeXBlIC9FbWJlZGRlZEZpbGUgL0xlbmd0aCAke2UubGVuZ3RofT4+XG5zdHJlYW1cbmArZSsiXG5lbmRzdHJlYW1cbmVuZG9ialxuIjtpLnB1c2goe3JlZjp0LGRhdGE6cn0pfWZ1bmN0aW9uIGdldEluZGV4ZXMoZSl7Y29uc3QgdD1bXTtmb3IoY29uc3R7cmVmOml9b2YgZSlpLm51bT09PXQuYXQoLTIpK3QuYXQoLTEpP3RbdC5sZW5ndGgtMV0rPTE6dC5wdXNoKGkubnVtLDEpO3JldHVybiB0fWZ1bmN0aW9uIGNvbXB1dGVJRHMoZSx0LGkpe2lmKEFycmF5LmlzQXJyYXkodC5maWxlSWRzKSYmdC5maWxlSWRzLmxlbmd0aD4wKXtjb25zdCBhPWZ1bmN0aW9uIGNvbXB1dGVNRDUoZSx0KXtjb25zdCBpPU1hdGguZmxvb3IoRGF0ZS5ub3coKS8xZTMpLGE9dC5maWxlbmFtZXx8IiIscz1baS50b1N0cmluZygpLGEsZS50b1N0cmluZygpXTtsZXQgcj1zLnJlZHVjZSgoKGUsdCk9PmUrdC5sZW5ndGgpLDApO2Zvcihjb25zdCBlIG9mIE9iamVjdC52YWx1ZXModC5pbmZvKSl7cy5wdXNoKGUpO3IrPWUubGVuZ3RofWNvbnN0IG49bmV3IFVpbnQ4QXJyYXkocik7bGV0IG89MDtmb3IoY29uc3QgZSBvZiBzKXt3cml0ZVN0cmluZyhlLG8sbik7bys9ZS5sZW5ndGh9cmV0dXJuIGJ5dGVzVG9TdHJpbmcoSnMobikpfShlLHQpO2kuc2V0KCJJRCIsW3QuZmlsZUlkc1swXSxhXSl9fWFzeW5jIGZ1bmN0aW9uIGluY3JlbWVudGFsVXBkYXRlKHtvcmlnaW5hbERhdGE6ZSx4cmVmSW5mbzp0LG5ld1JlZnM6aSx4cmVmOmE9bnVsbCxoYXNYZmE6cz0hMSx4ZmFEYXRhc2V0c1JlZjpyPW51bGwsaGFzWGZhRGF0YXNldHNFbnRyeTpuPSExLG5lZWRBcHBlYXJhbmNlczpvLGFjcm9Gb3JtUmVmOmc9bnVsbCxhY3JvRm9ybTpjPW51bGwseGZhRGF0YTpoPW51bGwsdXNlWHJlZlN0cmVhbTpsPSExfSl7YXdhaXQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlQWNyb2Zvcm0oe3hyZWY6ZSxhY3JvRm9ybTp0LGFjcm9Gb3JtUmVmOmksaGFzWGZhOmEsaGFzWGZhRGF0YXNldHNFbnRyeTpzLHhmYURhdGFzZXRzUmVmOnIsbmVlZEFwcGVhcmFuY2VzOm4sbmV3UmVmczpvfSl7IWF8fHN8fHJ8fHdhcm4oIlhGQSAtIENhbm5vdCBzYXZlIGl0Iik7aWYoIW4mJighYXx8IXJ8fHMpKXJldHVybjtjb25zdCBnPXQuY2xvbmUoKTtpZihhJiYhcyl7Y29uc3QgZT10LmdldCgiWEZBIikuc2xpY2UoKTtlLnNwbGljZSgyLDAsImRhdGFzZXRzIik7ZS5zcGxpY2UoMywwLHIpO2cuc2V0KCJYRkEiLGUpfW4mJmcuc2V0KCJOZWVkQXBwZWFyYW5jZXMiLCEwKTtjb25zdCBjPVtdO2F3YWl0IHdyaXRlT2JqZWN0KGksZyxjLGUpO28ucHVzaCh7cmVmOmksZGF0YTpjLmpvaW4oIiIpfSl9KHt4cmVmOmEsYWNyb0Zvcm06YyxhY3JvRm9ybVJlZjpnLGhhc1hmYTpzLGhhc1hmYURhdGFzZXRzRW50cnk6bix4ZmFEYXRhc2V0c1JlZjpyLG5lZWRBcHBlYXJhbmNlczpvLG5ld1JlZnM6aX0pO3MmJnVwZGF0ZVhGQSh7eGZhRGF0YTpoLHhmYURhdGFzZXRzUmVmOnIsbmV3UmVmczppLHhyZWY6YX0pO2NvbnN0IEM9W107bGV0IFE9ZS5sZW5ndGg7Y29uc3QgRT1lLmF0KC0xKTtpZigxMCE9PUUmJjEzIT09RSl7Qy5wdXNoKCJcbiIpO1ErPTF9Y29uc3QgdT1mdW5jdGlvbiBnZXRUcmFpbGVyRGljdChlLHQsaSl7Y29uc3QgYT1uZXcgRGljdChudWxsKTthLnNldCgiUHJldiIsZS5zdGFydFhSZWYpO2NvbnN0IHM9ZS5uZXdSZWY7aWYoaSl7dC5wdXNoKHtyZWY6cyxkYXRhOiIifSk7YS5zZXQoIlNpemUiLHMubnVtKzEpO2Euc2V0KCJUeXBlIixOYW1lLmdldCgiWFJlZiIpKX1lbHNlIGEuc2V0KCJTaXplIixzLm51bSk7bnVsbCE9PWUucm9vdFJlZiYmYS5zZXQoIlJvb3QiLGUucm9vdFJlZik7bnVsbCE9PWUuaW5mb1JlZiYmYS5zZXQoIkluZm8iLGUuaW5mb1JlZik7bnVsbCE9PWUuZW5jcnlwdFJlZiYmYS5zZXQoIkVuY3J5cHQiLGUuZW5jcnlwdFJlZik7cmV0dXJuIGF9KHQsaSxsKTtpPWkuc29ydCgoKGUsdCk9PmUucmVmLm51bS10LnJlZi5udW0pKTtmb3IoY29uc3R7ZGF0YTplfW9mIGkpbnVsbCE9PWUmJkMucHVzaChlKTthd2FpdChsP2FzeW5jIGZ1bmN0aW9uIGdldFhSZWZTdHJlYW1UYWJsZShlLHQsaSxhLHMpe2NvbnN0IHI9W107bGV0IG49MCxvPTA7Zm9yKGNvbnN0e3JlZjplLGRhdGE6YX1vZiBpKXtsZXQgaTtuPU1hdGgubWF4KG4sdCk7aWYobnVsbCE9PWEpe2k9TWF0aC5taW4oZS5nZW4sNjU1MzUpO3IucHVzaChbMSx0LGldKTt0Kz1hLmxlbmd0aH1lbHNle2k9TWF0aC5taW4oZS5nZW4rMSw2NTUzNSk7ci5wdXNoKFswLDAsaV0pfW89TWF0aC5tYXgobyxpKX1hLnNldCgiSW5kZXgiLGdldEluZGV4ZXMoaSkpO2NvbnN0IGc9WzEsZ2V0U2l6ZUluQnl0ZXMobiksZ2V0U2l6ZUluQnl0ZXMobyldO2Euc2V0KCJXIixnKTtjb21wdXRlSURzKHQsZSxhKTtjb25zdCBjPWcucmVkdWNlKCgoZSx0KT0+ZSt0KSwwKSxoPW5ldyBVaW50OEFycmF5KGMqci5sZW5ndGgpLGw9bmV3IFN0cmVhbShoKTtsLmRpY3Q9YTtsZXQgQz0wO2Zvcihjb25zdFtlLHQsaV1vZiByKXtDPXdyaXRlSW50KGUsZ1swXSxDLGgpO0M9d3JpdGVJbnQodCxnWzFdLEMsaCk7Qz13cml0ZUludChpLGdbMl0sQyxoKX1hd2FpdCB3cml0ZU9iamVjdChlLm5ld1JlZixsLHMse30pO3MucHVzaCgic3RhcnR4cmVmXG4iLHQudG9TdHJpbmcoKSwiXG4lJUVPRlxuIil9KHQsUSxpLHUsQyk6YXN5bmMgZnVuY3Rpb24gZ2V0WFJlZlRhYmxlKGUsdCxpLGEscyl7cy5wdXNoKCJ4cmVmXG4iKTtjb25zdCByPWdldEluZGV4ZXMoaSk7bGV0IG49MDtmb3IoY29uc3R7cmVmOmUsZGF0YTphfW9mIGkpe2lmKGUubnVtPT09cltuXSl7cy5wdXNoKGAke3Jbbl19ICR7cltuKzFdfVxuYCk7bis9Mn1pZihudWxsIT09YSl7cy5wdXNoKGAke3QudG9TdHJpbmcoKS5wYWRTdGFydCgxMCwiMCIpfSAke01hdGgubWluKGUuZ2VuLDY1NTM1KS50b1N0cmluZygpLnBhZFN0YXJ0KDUsIjAiKX0gblxyXG5gKTt0Kz1hLmxlbmd0aH1lbHNlIHMucHVzaChgMDAwMDAwMDAwMCAke01hdGgubWluKGUuZ2VuKzEsNjU1MzUpLnRvU3RyaW5nKCkucGFkU3RhcnQoNSwiMCIpfSBmXHJcbmApfWNvbXB1dGVJRHModCxlLGEpO3MucHVzaCgidHJhaWxlclxuIik7YXdhaXQgd3JpdGVEaWN0KGEscyk7cy5wdXNoKCJcbnN0YXJ0eHJlZlxuIix0LnRvU3RyaW5nKCksIlxuJSVFT0ZcbiIpfSh0LFEsaSx1LEMpKTtjb25zdCBkPUMucmVkdWNlKCgoZSx0KT0+ZSt0Lmxlbmd0aCksZS5sZW5ndGgpLGY9bmV3IFVpbnQ4QXJyYXkoZCk7Zi5zZXQoZSk7bGV0IHA9ZS5sZW5ndGg7Zm9yKGNvbnN0IGUgb2YgQyl7d3JpdGVTdHJpbmcoZSxwLGYpO3ArPWUubGVuZ3RofXJldHVybiBmfWNvbnN0IHZzPTEsS3M9MixUcz0zLHFzPTQsT3M9NTtjbGFzcyBTdHJ1Y3RUcmVlUm9vdHtjb25zdHJ1Y3RvcihlLHQpe3RoaXMuZGljdD1lO3RoaXMucmVmPXQgaW5zdGFuY2VvZiBSZWY/dDpudWxsO3RoaXMucm9sZU1hcD1uZXcgTWFwO3RoaXMuc3RydWN0UGFyZW50SWRzPW51bGx9aW5pdCgpe3RoaXMucmVhZFJvbGVNYXAoKX0jTihlLHQsaSl7aWYoIShlIGluc3RhbmNlb2YgUmVmKXx8dDwwKXJldHVybjt0aGlzLnN0cnVjdFBhcmVudElkc3x8PW5ldyBSZWZTZXRDYWNoZTtsZXQgYT10aGlzLnN0cnVjdFBhcmVudElkcy5nZXQoZSk7aWYoIWEpe2E9W107dGhpcy5zdHJ1Y3RQYXJlbnRJZHMucHV0KGUsYSl9YS5wdXNoKFt0LGldKX1hZGRBbm5vdGF0aW9uSWRUb1BhZ2UoZSx0KXt0aGlzLiNOKGUsdCxxcyl9cmVhZFJvbGVNYXAoKXtjb25zdCBlPXRoaXMuZGljdC5nZXQoIlJvbGVNYXAiKTtlIGluc3RhbmNlb2YgRGljdCYmZS5mb3JFYWNoKCgoZSx0KT0+e3QgaW5zdGFuY2VvZiBOYW1lJiZ0aGlzLnJvbGVNYXAuc2V0KGUsdC5uYW1lKX0pKX1zdGF0aWMgYXN5bmMgY2FuQ3JlYXRlU3RydWN0dXJlVHJlZSh7Y2F0YWxvZ1JlZjplLHBkZk1hbmFnZXI6dCxuZXdBbm5vdGF0aW9uc0J5UGFnZTppfSl7aWYoIShlIGluc3RhbmNlb2YgUmVmKSl7d2FybigiQ2Fubm90IHNhdmUgdGhlIHN0cnVjdCB0cmVlOiBubyBjYXRhbG9nIHJlZmVyZW5jZS4iKTtyZXR1cm4hMX1sZXQgYT0wLHM9ITA7Zm9yKGNvbnN0W2Uscl1vZiBpKXtjb25zdHtyZWY6aX09YXdhaXQgdC5nZXRQYWdlKGUpO2lmKCEoaSBpbnN0YW5jZW9mIFJlZikpe3dhcm4oYENhbm5vdCBzYXZlIHRoZSBzdHJ1Y3QgdHJlZTogcGFnZSAke2V9IGhhcyBubyByZWYuYCk7cz0hMDticmVha31mb3IoY29uc3QgZSBvZiByKWlmKGUuYWNjZXNzaWJpbGl0eURhdGE/LnR5cGUpe2UucGFyZW50VHJlZUlkPWErKztzPSExfX1pZihzKXtmb3IoY29uc3QgZSBvZiBpLnZhbHVlcygpKWZvcihjb25zdCB0IG9mIGUpZGVsZXRlIHQucGFyZW50VHJlZUlkO3JldHVybiExfXJldHVybiEwfXN0YXRpYyBhc3luYyBjcmVhdGVTdHJ1Y3R1cmVUcmVlKHtuZXdBbm5vdGF0aW9uc0J5UGFnZTplLHhyZWY6dCxjYXRhbG9nUmVmOmkscGRmTWFuYWdlcjphLG5ld1JlZnM6c30pe2NvbnN0IHI9YS5jYXRhbG9nLmNsb25lRGljdCgpLG49bmV3IFJlZlNldENhY2hlO24ucHV0KGkscik7Y29uc3Qgbz10LmdldE5ld1RlbXBvcmFyeVJlZigpO3Iuc2V0KCJTdHJ1Y3RUcmVlUm9vdCIsbyk7Y29uc3QgZz1uZXcgRGljdCh0KTtnLnNldCgiVHlwZSIsTmFtZS5nZXQoIlN0cnVjdFRyZWVSb290IikpO2NvbnN0IGM9dC5nZXROZXdUZW1wb3JhcnlSZWYoKTtnLnNldCgiUGFyZW50VHJlZSIsYyk7Y29uc3QgaD1bXTtnLnNldCgiSyIsaCk7bi5wdXQobyxnKTtjb25zdCBsPW5ldyBEaWN0KHQpLEM9W107bC5zZXQoIk51bXMiLEMpO2NvbnN0IFE9YXdhaXQgdGhpcy4jRyh7bmV3QW5ub3RhdGlvbnNCeVBhZ2U6ZSxzdHJ1Y3RUcmVlUm9vdFJlZjpvLGtpZHM6aCxudW1zOkMseHJlZjp0LHBkZk1hbmFnZXI6YSxjYWNoZTpufSk7Zy5zZXQoIlBhcmVudFRyZWVOZXh0S2V5IixRKTtuLnB1dChjLGwpO2NvbnN0IEU9W107Zm9yKGNvbnN0W2UsaV1vZiBuLml0ZW1zKCkpe0UubGVuZ3RoPTA7YXdhaXQgd3JpdGVPYmplY3QoZSxpLEUsdCk7cy5wdXNoKHtyZWY6ZSxkYXRhOkUuam9pbigiIil9KX19YXN5bmMgY2FuVXBkYXRlU3RydWN0VHJlZSh7cGRmTWFuYWdlcjplLHhyZWY6dCxuZXdBbm5vdGF0aW9uc0J5UGFnZTppfSl7aWYoIXRoaXMucmVmKXt3YXJuKCJDYW5ub3QgdXBkYXRlIHRoZSBzdHJ1Y3QgdHJlZTogbm8gcm9vdCByZWZlcmVuY2UuIik7cmV0dXJuITF9bGV0IGE9dGhpcy5kaWN0LmdldCgiUGFyZW50VHJlZU5leHRLZXkiKTtpZighTnVtYmVyLmlzSW50ZWdlcihhKXx8YTwwKXt3YXJuKCJDYW5ub3QgdXBkYXRlIHRoZSBzdHJ1Y3QgdHJlZTogaW52YWxpZCBuZXh0IGtleS4iKTtyZXR1cm4hMX1jb25zdCBzPXRoaXMuZGljdC5nZXQoIlBhcmVudFRyZWUiKTtpZighKHMgaW5zdGFuY2VvZiBEaWN0KSl7d2FybigiQ2Fubm90IHVwZGF0ZSB0aGUgc3RydWN0IHRyZWU6IFBhcmVudFRyZWUgaXNuJ3QgYSBkaWN0LiIpO3JldHVybiExfWNvbnN0IHI9cy5nZXQoIk51bXMiKTtpZighQXJyYXkuaXNBcnJheShyKSl7d2FybigiQ2Fubm90IHVwZGF0ZSB0aGUgc3RydWN0IHRyZWU6IG51bXMgaXNuJ3QgYW4gYXJyYXkuIik7cmV0dXJuITF9Y29uc3Qgbj1uZXcgTnVtYmVyVHJlZShzLHQpO2Zvcihjb25zdCB0IG9mIGkua2V5cygpKXtjb25zdHtwYWdlRGljdDppfT1hd2FpdCBlLmdldFBhZ2UodCk7aWYoIWkuaGFzKCJTdHJ1Y3RQYXJlbnRzIikpY29udGludWU7Y29uc3QgYT1pLmdldCgiU3RydWN0UGFyZW50cyIpO2lmKCFOdW1iZXIuaXNJbnRlZ2VyKGEpfHwhQXJyYXkuaXNBcnJheShuLmdldChhKSkpe3dhcm4oYENhbm5vdCBzYXZlIHRoZSBzdHJ1Y3QgdHJlZTogcGFnZSAke3R9IGhhcyBhIHdyb25nIGlkLmApO3JldHVybiExfX1sZXQgbz0hMDtmb3IoY29uc3RbdCxzXW9mIGkpe2NvbnN0e3BhZ2VEaWN0Oml9PWF3YWl0IGUuZ2V0UGFnZSh0KTtTdHJ1Y3RUcmVlUm9vdC4jeCh7ZWxlbWVudHM6cyx4cmVmOnRoaXMuZGljdC54cmVmLHBhZ2VEaWN0OmksbnVtYmVyVHJlZTpufSk7Zm9yKGNvbnN0IGUgb2YgcylpZihlLmFjY2Vzc2liaWxpdHlEYXRhPy50eXBlKXtlLnBhcmVudFRyZWVJZD1hKys7bz0hMX19aWYobyl7Zm9yKGNvbnN0IGUgb2YgaS52YWx1ZXMoKSlmb3IoY29uc3QgdCBvZiBlKXtkZWxldGUgdC5wYXJlbnRUcmVlSWQ7ZGVsZXRlIHQuc3RydWN0VHJlZVBhcmVudH1yZXR1cm4hMX1yZXR1cm4hMH1hc3luYyB1cGRhdGVTdHJ1Y3R1cmVUcmVlKHtuZXdBbm5vdGF0aW9uc0J5UGFnZTplLHBkZk1hbmFnZXI6dCxuZXdSZWZzOml9KXtjb25zdCBhPXRoaXMuZGljdC54cmVmLHM9dGhpcy5kaWN0LmNsb25lKCkscj10aGlzLnJlZixuPW5ldyBSZWZTZXRDYWNoZTtuLnB1dChyLHMpO2xldCBvLGc9cy5nZXRSYXcoIlBhcmVudFRyZWUiKTtpZihnIGluc3RhbmNlb2YgUmVmKW89YS5mZXRjaChnKTtlbHNle289ZztnPWEuZ2V0TmV3VGVtcG9yYXJ5UmVmKCk7cy5zZXQoIlBhcmVudFRyZWUiLGcpfW89by5jbG9uZSgpO24ucHV0KGcsbyk7bGV0IGM9by5nZXRSYXcoIk51bXMiKSxoPW51bGw7aWYoYyBpbnN0YW5jZW9mIFJlZil7aD1jO2M9YS5mZXRjaChoKX1jPWMuc2xpY2UoKTtofHxvLnNldCgiTnVtcyIsYyk7Y29uc3QgbD1hd2FpdCBTdHJ1Y3RUcmVlUm9vdC4jRyh7bmV3QW5ub3RhdGlvbnNCeVBhZ2U6ZSxzdHJ1Y3RUcmVlUm9vdFJlZjpyLGtpZHM6bnVsbCxudW1zOmMseHJlZjphLHBkZk1hbmFnZXI6dCxjYWNoZTpufSk7cy5zZXQoIlBhcmVudFRyZWVOZXh0S2V5IixsKTtoJiZuLnB1dChoLGMpO2NvbnN0IEM9W107Zm9yKGNvbnN0W2UsdF1vZiBuLml0ZW1zKCkpe0MubGVuZ3RoPTA7YXdhaXQgd3JpdGVPYmplY3QoZSx0LEMsYSk7aS5wdXNoKHtyZWY6ZSxkYXRhOkMuam9pbigiIil9KX19c3RhdGljIGFzeW5jI0coe25ld0Fubm90YXRpb25zQnlQYWdlOmUsc3RydWN0VHJlZVJvb3RSZWY6dCxraWRzOmksbnVtczphLHhyZWY6cyxwZGZNYW5hZ2VyOnIsY2FjaGU6bn0pe2NvbnN0IG89TmFtZS5nZXQoIk9CSlIiKTtsZXQgZz0tMS8wO2Zvcihjb25zdFtjLGhdb2YgZSl7Y29uc3R7cmVmOmV9PWF3YWl0IHIuZ2V0UGFnZShjKSxsPWUgaW5zdGFuY2VvZiBSZWY7Zm9yKGNvbnN0e2FjY2Vzc2liaWxpdHlEYXRhOnIscmVmOmMscGFyZW50VHJlZUlkOkMsc3RydWN0VHJlZVBhcmVudDpRfW9mIGgpe2lmKCFyPy50eXBlKWNvbnRpbnVlO2NvbnN0e3R5cGU6aCx0aXRsZTpFLGxhbmc6dSxhbHQ6ZCxleHBhbmRlZDpmLGFjdHVhbFRleHQ6cH09cjtnPU1hdGgubWF4KGcsQyk7Y29uc3QgbT1zLmdldE5ld1RlbXBvcmFyeVJlZigpLHk9bmV3IERpY3Qocyk7eS5zZXQoIlMiLE5hbWUuZ2V0KGgpKTtFJiZ5LnNldCgiVCIsRSk7dSYmeS5zZXQoIkxhbmciLHUpO2QmJnkuc2V0KCJBbHQiLGQpO2YmJnkuc2V0KCJFIixmKTtwJiZ5LnNldCgiQWN0dWFsVGV4dCIscCk7YXdhaXQgdGhpcy4jTSh7c3RydWN0VHJlZVBhcmVudDpRLHRhZ0RpY3Q6eSxuZXdUYWdSZWY6bSxzdHJ1Y3RUcmVlUm9vdFJlZjp0LGZhbGxiYWNrS2lkczppLHhyZWY6cyxjYWNoZTpufSk7Y29uc3Qgdz1uZXcgRGljdChzKTt5LnNldCgiSyIsdyk7dy5zZXQoIlR5cGUiLG8pO2wmJncuc2V0KCJQZyIsZSk7dy5zZXQoIk9iaiIsYyk7bi5wdXQobSx5KTthLnB1c2goQyxtKX19cmV0dXJuIGcrMX1zdGF0aWMjeCh7ZWxlbWVudHM6ZSx4cmVmOnQscGFnZURpY3Q6aSxudW1iZXJUcmVlOmF9KXtjb25zdCBzPW5ldyBNYXA7Zm9yKGNvbnN0IHQgb2YgZSlpZih0LnN0cnVjdFRyZWVQYXJlbnRJZCl7Y29uc3QgZT1wYXJzZUludCh0LnN0cnVjdFRyZWVQYXJlbnRJZC5zcGxpdCgiX21jIilbMV0sMTApO2xldCBpPXMuZ2V0KGUpO2lmKCFpKXtpPVtdO3Muc2V0KGUsaSl9aS5wdXNoKHQpfWNvbnN0IHI9aS5nZXQoIlN0cnVjdFBhcmVudHMiKTtpZighTnVtYmVyLmlzSW50ZWdlcihyKSlyZXR1cm47Y29uc3Qgbj1hLmdldChyKSx1cGRhdGVFbGVtZW50PShlLGksYSk9Pntjb25zdCByPXMuZ2V0KGUpO2lmKHIpe2NvbnN0IGU9aS5nZXRSYXcoIlAiKSxzPXQuZmV0Y2hJZlJlZihlKTtpZihlIGluc3RhbmNlb2YgUmVmJiZzIGluc3RhbmNlb2YgRGljdCl7Y29uc3QgZT17cmVmOmEsZGljdDppfTtmb3IoY29uc3QgdCBvZiByKXQuc3RydWN0VHJlZVBhcmVudD1lfXJldHVybiEwfXJldHVybiExfTtmb3IoY29uc3QgZSBvZiBuKXtpZighKGUgaW5zdGFuY2VvZiBSZWYpKWNvbnRpbnVlO2NvbnN0IGk9dC5mZXRjaChlKSxhPWkuZ2V0KCJLIik7aWYoTnVtYmVyLmlzSW50ZWdlcihhKSl1cGRhdGVFbGVtZW50KGEsaSxlKTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoYSkpZm9yKGxldCBzIG9mIGEpe3M9dC5mZXRjaElmUmVmKHMpO2lmKE51bWJlci5pc0ludGVnZXIocykmJnVwZGF0ZUVsZW1lbnQocyxpLGUpKWJyZWFrO2lmKCEocyBpbnN0YW5jZW9mIERpY3QpKWNvbnRpbnVlO2lmKCFpc05hbWUocy5nZXQoIlR5cGUiKSwiTUNSIikpYnJlYWs7Y29uc3QgYT1zLmdldCgiTUNJRCIpO2lmKE51bWJlci5pc0ludGVnZXIoYSkmJnVwZGF0ZUVsZW1lbnQoYSxpLGUpKWJyZWFrfX19c3RhdGljIGFzeW5jI00oe3N0cnVjdFRyZWVQYXJlbnQ6ZSx0YWdEaWN0OnQsbmV3VGFnUmVmOmksc3RydWN0VHJlZVJvb3RSZWY6YSxmYWxsYmFja0tpZHM6cyx4cmVmOnIsY2FjaGU6bn0pe2xldCBvLGc9bnVsbDtpZihlKXsoe3JlZjpnfT1lKTtvPWUuZGljdC5nZXRSYXcoIlAiKXx8YX1lbHNlIG89YTt0LnNldCgiUCIsbyk7Y29uc3QgYz1yLmZldGNoSWZSZWYobyk7aWYoIWMpe3MucHVzaChpKTtyZXR1cm59bGV0IGg9bi5nZXQobyk7aWYoIWgpe2g9Yy5jbG9uZSgpO24ucHV0KG8saCl9Y29uc3QgbD1oLmdldFJhdygiSyIpO2xldCBDPWwgaW5zdGFuY2VvZiBSZWY/bi5nZXQobCk6bnVsbDtpZighQyl7Qz1yLmZldGNoSWZSZWYobCk7Qz1BcnJheS5pc0FycmF5KEMpP0Muc2xpY2UoKTpbbF07Y29uc3QgZT1yLmdldE5ld1RlbXBvcmFyeVJlZigpO2guc2V0KCJLIixlKTtuLnB1dChlLEMpfWNvbnN0IFE9Qy5pbmRleE9mKGcpO0Muc3BsaWNlKFE+PTA/USsxOkMubGVuZ3RoLDAsaSl9fWNsYXNzIFN0cnVjdEVsZW1lbnROb2Rle2NvbnN0cnVjdG9yKGUsdCl7dGhpcy50cmVlPWU7dGhpcy5kaWN0PXQ7dGhpcy5raWRzPVtdO3RoaXMucGFyc2VLaWRzKCl9Z2V0IHJvbGUoKXtjb25zdCBlPXRoaXMuZGljdC5nZXQoIlMiKSx0PWUgaW5zdGFuY2VvZiBOYW1lP2UubmFtZToiIix7cm9vdDppfT10aGlzLnRyZWU7cmV0dXJuIGkucm9sZU1hcC5oYXModCk/aS5yb2xlTWFwLmdldCh0KTp0fXBhcnNlS2lkcygpe2xldCBlPW51bGw7Y29uc3QgdD10aGlzLmRpY3QuZ2V0UmF3KCJQZyIpO3QgaW5zdGFuY2VvZiBSZWYmJihlPXQudG9TdHJpbmcoKSk7Y29uc3QgaT10aGlzLmRpY3QuZ2V0KCJLIik7aWYoQXJyYXkuaXNBcnJheShpKSlmb3IoY29uc3QgdCBvZiBpKXtjb25zdCBpPXRoaXMucGFyc2VLaWQoZSx0KTtpJiZ0aGlzLmtpZHMucHVzaChpKX1lbHNle2NvbnN0IHQ9dGhpcy5wYXJzZUtpZChlLGkpO3QmJnRoaXMua2lkcy5wdXNoKHQpfX1wYXJzZUtpZChlLHQpe2lmKE51bWJlci5pc0ludGVnZXIodCkpcmV0dXJuIHRoaXMudHJlZS5wYWdlRGljdC5vYmpJZCE9PWU/bnVsbDpuZXcgU3RydWN0RWxlbWVudCh7dHlwZTp2cyxtY2lkOnQscGFnZU9iaklkOmV9KTtsZXQgaT1udWxsO3QgaW5zdGFuY2VvZiBSZWY/aT10aGlzLmRpY3QueHJlZi5mZXRjaCh0KTp0IGluc3RhbmNlb2YgRGljdCYmKGk9dCk7aWYoIWkpcmV0dXJuIG51bGw7Y29uc3QgYT1pLmdldFJhdygiUGciKTthIGluc3RhbmNlb2YgUmVmJiYoZT1hLnRvU3RyaW5nKCkpO2NvbnN0IHM9aS5nZXQoIlR5cGUiKWluc3RhbmNlb2YgTmFtZT9pLmdldCgiVHlwZSIpLm5hbWU6bnVsbDtpZigiTUNSIj09PXMpe2lmKHRoaXMudHJlZS5wYWdlRGljdC5vYmpJZCE9PWUpcmV0dXJuIG51bGw7Y29uc3QgdD1pLmdldFJhdygiU3RtIik7cmV0dXJuIG5ldyBTdHJ1Y3RFbGVtZW50KHt0eXBlOktzLHJlZk9iaklkOnQgaW5zdGFuY2VvZiBSZWY/dC50b1N0cmluZygpOm51bGwscGFnZU9iaklkOmUsbWNpZDppLmdldCgiTUNJRCIpfSl9aWYoIk9CSlIiPT09cyl7aWYodGhpcy50cmVlLnBhZ2VEaWN0Lm9iaklkIT09ZSlyZXR1cm4gbnVsbDtjb25zdCB0PWkuZ2V0UmF3KCJPYmoiKTtyZXR1cm4gbmV3IFN0cnVjdEVsZW1lbnQoe3R5cGU6VHMscmVmT2JqSWQ6dCBpbnN0YW5jZW9mIFJlZj90LnRvU3RyaW5nKCk6bnVsbCxwYWdlT2JqSWQ6ZX0pfXJldHVybiBuZXcgU3RydWN0RWxlbWVudCh7dHlwZTpPcyxkaWN0Oml9KX19Y2xhc3MgU3RydWN0RWxlbWVudHtjb25zdHJ1Y3Rvcih7dHlwZTplLGRpY3Q6dD1udWxsLG1jaWQ6aT1udWxsLHBhZ2VPYmpJZDphPW51bGwscmVmT2JqSWQ6cz1udWxsfSl7dGhpcy50eXBlPWU7dGhpcy5kaWN0PXQ7dGhpcy5tY2lkPWk7dGhpcy5wYWdlT2JqSWQ9YTt0aGlzLnJlZk9iaklkPXM7dGhpcy5wYXJlbnROb2RlPW51bGx9fWNsYXNzIFN0cnVjdFRyZWVQYWdle2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5yb290PWU7dGhpcy5yb290RGljdD1lP2UuZGljdDpudWxsO3RoaXMucGFnZURpY3Q9dDt0aGlzLm5vZGVzPVtdfXBhcnNlKGUpe2lmKCF0aGlzLnJvb3R8fCF0aGlzLnJvb3REaWN0KXJldHVybjtjb25zdCB0PXRoaXMucm9vdERpY3QuZ2V0KCJQYXJlbnRUcmVlIik7aWYoIXQpcmV0dXJuO2NvbnN0IGk9dGhpcy5wYWdlRGljdC5nZXQoIlN0cnVjdFBhcmVudHMiKSxhPWUgaW5zdGFuY2VvZiBSZWYmJnRoaXMucm9vdC5zdHJ1Y3RQYXJlbnRJZHM/LmdldChlKTtpZighTnVtYmVyLmlzSW50ZWdlcihpKSYmIWEpcmV0dXJuO2NvbnN0IHM9bmV3IE1hcCxyPW5ldyBOdW1iZXJUcmVlKHQsdGhpcy5yb290RGljdC54cmVmKTtpZihOdW1iZXIuaXNJbnRlZ2VyKGkpKXtjb25zdCBlPXIuZ2V0KGkpO2lmKEFycmF5LmlzQXJyYXkoZSkpZm9yKGNvbnN0IHQgb2YgZSl0IGluc3RhbmNlb2YgUmVmJiZ0aGlzLmFkZE5vZGUodGhpcy5yb290RGljdC54cmVmLmZldGNoKHQpLHMpfWlmKGEpZm9yKGNvbnN0W2UsdF1vZiBhKXtjb25zdCBpPXIuZ2V0KGUpO2lmKGkpe2NvbnN0IGU9dGhpcy5hZGROb2RlKHRoaXMucm9vdERpY3QueHJlZi5mZXRjaElmUmVmKGkpLHMpOzE9PT1lPy5raWRzPy5sZW5ndGgmJmUua2lkc1swXS50eXBlPT09VHMmJihlLmtpZHNbMF0udHlwZT10KX19fWFkZE5vZGUoZSx0LGk9MCl7aWYoaT40MCl7d2FybigiU3RydWN0VHJlZSBNQVhfREVQVEggcmVhY2hlZC4iKTtyZXR1cm4gbnVsbH1pZih0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7Y29uc3QgYT1uZXcgU3RydWN0RWxlbWVudE5vZGUodGhpcyxlKTt0LnNldChlLGEpO2NvbnN0IHM9ZS5nZXQoIlAiKTtpZighc3x8aXNOYW1lKHMuZ2V0KCJUeXBlIiksIlN0cnVjdFRyZWVSb290Iikpe3RoaXMuYWRkVG9wTGV2ZWxOb2RlKGUsYSl8fHQuZGVsZXRlKGUpO3JldHVybiBhfWNvbnN0IHI9dGhpcy5hZGROb2RlKHMsdCxpKzEpO2lmKCFyKXJldHVybiBhO2xldCBuPSExO2Zvcihjb25zdCB0IG9mIHIua2lkcylpZih0LnR5cGU9PT1PcyYmdC5kaWN0PT09ZSl7dC5wYXJlbnROb2RlPWE7bj0hMH1ufHx0LmRlbGV0ZShlKTtyZXR1cm4gYX1hZGRUb3BMZXZlbE5vZGUoZSx0KXtjb25zdCBpPXRoaXMucm9vdERpY3QuZ2V0KCJLIik7aWYoIWkpcmV0dXJuITE7aWYoaSBpbnN0YW5jZW9mIERpY3Qpe2lmKGkub2JqSWQhPT1lLm9iaklkKXJldHVybiExO3RoaXMubm9kZXNbMF09dDtyZXR1cm4hMH1pZighQXJyYXkuaXNBcnJheShpKSlyZXR1cm4hMDtsZXQgYT0hMTtmb3IobGV0IHM9MDtzPGkubGVuZ3RoO3MrKyl7Y29uc3Qgcj1pW3NdO2lmKHI/LnRvU3RyaW5nKCk9PT1lLm9iaklkKXt0aGlzLm5vZGVzW3NdPXQ7YT0hMH19cmV0dXJuIGF9Z2V0IHNlcmlhbGl6YWJsZSgpe2Z1bmN0aW9uIG5vZGVUb1NlcmlhbGl6YWJsZShlLHQsaT0wKXtpZihpPjQwKXt3YXJuKCJTdHJ1Y3RUcmVlIHRvbyBkZWVwIHRvIGJlIGZ1bGx5IHNlcmlhbGl6ZWQuIik7cmV0dXJufWNvbnN0IGE9T2JqZWN0LmNyZWF0ZShudWxsKTthLnJvbGU9ZS5yb2xlO2EuY2hpbGRyZW49W107dC5jaGlsZHJlbi5wdXNoKGEpO2NvbnN0IHM9ZS5kaWN0LmdldCgiQWx0Iik7InN0cmluZyI9PXR5cGVvZiBzJiYoYS5hbHQ9c3RyaW5nVG9QREZTdHJpbmcocykpO2NvbnN0IHI9ZS5kaWN0LmdldCgiTGFuZyIpOyJzdHJpbmciPT10eXBlb2YgciYmKGEubGFuZz1zdHJpbmdUb1BERlN0cmluZyhyKSk7Zm9yKGNvbnN0IHQgb2YgZS5raWRzKXtjb25zdCBlPXQudHlwZT09PU9zP3QucGFyZW50Tm9kZTpudWxsO2U/bm9kZVRvU2VyaWFsaXphYmxlKGUsYSxpKzEpOnQudHlwZT09PXZzfHx0LnR5cGU9PT1Lcz9hLmNoaWxkcmVuLnB1c2goe3R5cGU6ImNvbnRlbnQiLGlkOmBwJHt0LnBhZ2VPYmpJZH1fbWMke3QubWNpZH1gfSk6dC50eXBlPT09VHM/YS5jaGlsZHJlbi5wdXNoKHt0eXBlOiJvYmplY3QiLGlkOnQucmVmT2JqSWR9KTp0LnR5cGU9PT1xcyYmYS5jaGlsZHJlbi5wdXNoKHt0eXBlOiJhbm5vdGF0aW9uIixpZDpgcGRmanNfaW50ZXJuYWxfaWRfJHt0LnJlZk9iaklkfWB9KX19Y29uc3QgZT1PYmplY3QuY3JlYXRlKG51bGwpO2UuY2hpbGRyZW49W107ZS5yb2xlPSJSb290Ijtmb3IoY29uc3QgdCBvZiB0aGlzLm5vZGVzKXQmJm5vZGVUb1NlcmlhbGl6YWJsZSh0LGUpO3JldHVybiBlfX1mdW5jdGlvbiBpc1ZhbGlkRXhwbGljaXREZXN0KGUpe2lmKCFBcnJheS5pc0FycmF5KGUpfHxlLmxlbmd0aDwyKXJldHVybiExO2NvbnN0W3QsaSwuLi5hXT1lO2lmKCEodCBpbnN0YW5jZW9mIFJlZnx8TnVtYmVyLmlzSW50ZWdlcih0KSkpcmV0dXJuITE7aWYoIShpIGluc3RhbmNlb2YgTmFtZSkpcmV0dXJuITE7bGV0IHM9ITA7c3dpdGNoKGkubmFtZSl7Y2FzZSJYWVoiOmlmKDMhPT1hLmxlbmd0aClyZXR1cm4hMTticmVhaztjYXNlIkZpdCI6Y2FzZSJGaXRCIjpyZXR1cm4gMD09PWEubGVuZ3RoO2Nhc2UiRml0SCI6Y2FzZSJGaXRCSCI6Y2FzZSJGaXRWIjpjYXNlIkZpdEJWIjppZigxIT09YS5sZW5ndGgpcmV0dXJuITE7YnJlYWs7Y2FzZSJGaXRSIjppZig0IT09YS5sZW5ndGgpcmV0dXJuITE7cz0hMTticmVhaztkZWZhdWx0OnJldHVybiExfWZvcihjb25zdCBlIG9mIGEpaWYoISgibnVtYmVyIj09dHlwZW9mIGV8fHMmJm51bGw9PT1lKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBmZXRjaERlc3QoZSl7ZSBpbnN0YW5jZW9mIERpY3QmJihlPWUuZ2V0KCJEIikpO3JldHVybiBpc1ZhbGlkRXhwbGljaXREZXN0KGUpP2U6bnVsbH1mdW5jdGlvbiBmZXRjaFJlbW90ZURlc3QoZSl7bGV0IHQ9ZS5nZXQoIkQiKTtpZih0KXt0IGluc3RhbmNlb2YgTmFtZSYmKHQ9dC5uYW1lKTtpZigic3RyaW5nIj09dHlwZW9mIHQpcmV0dXJuIHN0cmluZ1RvUERGU3RyaW5nKHQpO2lmKGlzVmFsaWRFeHBsaWNpdERlc3QodCkpcmV0dXJuIEpTT04uc3RyaW5naWZ5KHQpfXJldHVybiBudWxsfWNsYXNzIENhdGFsb2d7Y29uc3RydWN0b3IoZSx0KXt0aGlzLnBkZk1hbmFnZXI9ZTt0aGlzLnhyZWY9dDt0aGlzLl9jYXREaWN0PXQuZ2V0Q2F0YWxvZ09iaigpO2lmKCEodGhpcy5fY2F0RGljdCBpbnN0YW5jZW9mIERpY3QpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiQ2F0YWxvZyBvYmplY3QgaXMgbm90IGEgZGljdGlvbmFyeS4iKTt0aGlzLnRvcGxldmVsUGFnZXNEaWN0O3RoaXMuX2FjdHVhbE51bVBhZ2VzPW51bGw7dGhpcy5mb250Q2FjaGU9bmV3IFJlZlNldENhY2hlO3RoaXMuYnVpbHRJbkNNYXBDYWNoZT1uZXcgTWFwO3RoaXMuc3RhbmRhcmRGb250RGF0YUNhY2hlPW5ldyBNYXA7dGhpcy5nbG9iYWxJbWFnZUNhY2hlPW5ldyBHbG9iYWxJbWFnZUNhY2hlO3RoaXMucGFnZUtpZHNDb3VudENhY2hlPW5ldyBSZWZTZXRDYWNoZTt0aGlzLnBhZ2VJbmRleENhY2hlPW5ldyBSZWZTZXRDYWNoZTt0aGlzLm5vbkJsZW5kTW9kZXNTZXQ9bmV3IFJlZlNldDt0aGlzLnN5c3RlbUZvbnRDYWNoZT1uZXcgTWFwfWNsb25lRGljdCgpe3JldHVybiB0aGlzLl9jYXREaWN0LmNsb25lKCl9Z2V0IHZlcnNpb24oKXtjb25zdCBlPXRoaXMuX2NhdERpY3QuZ2V0KCJWZXJzaW9uIik7aWYoZSBpbnN0YW5jZW9mIE5hbWUpe2lmKER0LnRlc3QoZS5uYW1lKSlyZXR1cm4gc2hhZG93KHRoaXMsInZlcnNpb24iLGUubmFtZSk7d2FybihgSW52YWxpZCBQREYgY2F0YWxvZyB2ZXJzaW9uOiAke2UubmFtZX1gKX1yZXR1cm4gc2hhZG93KHRoaXMsInZlcnNpb24iLG51bGwpfWdldCBsYW5nKCl7Y29uc3QgZT10aGlzLl9jYXREaWN0LmdldCgiTGFuZyIpO3JldHVybiBzaGFkb3codGhpcywibGFuZyIsZSYmInN0cmluZyI9PXR5cGVvZiBlP3N0cmluZ1RvUERGU3RyaW5nKGUpOm51bGwpfWdldCBuZWVkc1JlbmRlcmluZygpe2NvbnN0IGU9dGhpcy5fY2F0RGljdC5nZXQoIk5lZWRzUmVuZGVyaW5nIik7cmV0dXJuIHNoYWRvdyh0aGlzLCJuZWVkc1JlbmRlcmluZyIsImJvb2xlYW4iPT10eXBlb2YgZSYmZSl9Z2V0IGNvbGxlY3Rpb24oKXtsZXQgZT1udWxsO3RyeXtjb25zdCB0PXRoaXMuX2NhdERpY3QuZ2V0KCJDb2xsZWN0aW9uIik7dCBpbnN0YW5jZW9mIERpY3QmJnQuc2l6ZT4wJiYoZT10KX1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pdGhyb3cgZTtpbmZvKCJDYW5ub3QgZmV0Y2ggQ29sbGVjdGlvbiBlbnRyeTsgYXNzdW1pbmcgbm8gY29sbGVjdGlvbiBpcyBwcmVzZW50LiIpfXJldHVybiBzaGFkb3codGhpcywiY29sbGVjdGlvbiIsZSl9Z2V0IGFjcm9Gb3JtKCl7bGV0IGU9bnVsbDt0cnl7Y29uc3QgdD10aGlzLl9jYXREaWN0LmdldCgiQWNyb0Zvcm0iKTt0IGluc3RhbmNlb2YgRGljdCYmdC5zaXplPjAmJihlPXQpfWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiBNaXNzaW5nRGF0YUV4Y2VwdGlvbil0aHJvdyBlO2luZm8oIkNhbm5vdCBmZXRjaCBBY3JvRm9ybSBlbnRyeTsgYXNzdW1pbmcgbm8gZm9ybXMgYXJlIHByZXNlbnQuIil9cmV0dXJuIHNoYWRvdyh0aGlzLCJhY3JvRm9ybSIsZSl9Z2V0IGFjcm9Gb3JtUmVmKCl7Y29uc3QgZT10aGlzLl9jYXREaWN0LmdldFJhdygiQWNyb0Zvcm0iKTtyZXR1cm4gc2hhZG93KHRoaXMsImFjcm9Gb3JtUmVmIixlIGluc3RhbmNlb2YgUmVmP2U6bnVsbCl9Z2V0IG1ldGFkYXRhKCl7Y29uc3QgZT10aGlzLl9jYXREaWN0LmdldFJhdygiTWV0YWRhdGEiKTtpZighKGUgaW5zdGFuY2VvZiBSZWYpKXJldHVybiBzaGFkb3codGhpcywibWV0YWRhdGEiLG51bGwpO2xldCB0PW51bGw7dHJ5e2NvbnN0IGk9dGhpcy54cmVmLmZldGNoKGUsIXRoaXMueHJlZi5lbmNyeXB0Py5lbmNyeXB0TWV0YWRhdGEpO2lmKGkgaW5zdGFuY2VvZiBCYXNlU3RyZWFtJiZpLmRpY3QgaW5zdGFuY2VvZiBEaWN0KXtjb25zdCBlPWkuZGljdC5nZXQoIlR5cGUiKSxhPWkuZGljdC5nZXQoIlN1YnR5cGUiKTtpZihpc05hbWUoZSwiTWV0YWRhdGEiKSYmaXNOYW1lKGEsIlhNTCIpKXtjb25zdCBlPXN0cmluZ1RvVVRGOFN0cmluZyhpLmdldFN0cmluZygpKTtlJiYodD1uZXcgTWV0YWRhdGFQYXJzZXIoZSkuc2VyaWFsaXphYmxlKX19fWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiBNaXNzaW5nRGF0YUV4Y2VwdGlvbil0aHJvdyBlO2luZm8oYFNraXBwaW5nIGludmFsaWQgTWV0YWRhdGE6ICIke2V9Ii5gKX1yZXR1cm4gc2hhZG93KHRoaXMsIm1ldGFkYXRhIix0KX1nZXQgbWFya0luZm8oKXtsZXQgZT1udWxsO3RyeXtlPXRoaXMuX3JlYWRNYXJrSW5mbygpfWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiBNaXNzaW5nRGF0YUV4Y2VwdGlvbil0aHJvdyBlO3dhcm4oIlVuYWJsZSB0byByZWFkIG1hcmsgaW5mby4iKX1yZXR1cm4gc2hhZG93KHRoaXMsIm1hcmtJbmZvIixlKX1fcmVhZE1hcmtJbmZvKCl7Y29uc3QgZT10aGlzLl9jYXREaWN0LmdldCgiTWFya0luZm8iKTtpZighKGUgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm4gbnVsbDtjb25zdCB0PXtNYXJrZWQ6ITEsVXNlclByb3BlcnRpZXM6ITEsU3VzcGVjdHM6ITF9O2Zvcihjb25zdCBpIGluIHQpe2NvbnN0IGE9ZS5nZXQoaSk7ImJvb2xlYW4iPT10eXBlb2YgYSYmKHRbaV09YSl9cmV0dXJuIHR9Z2V0IHN0cnVjdFRyZWVSb290KCl7bGV0IGU9bnVsbDt0cnl7ZT10aGlzLl9yZWFkU3RydWN0VHJlZVJvb3QoKX1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pdGhyb3cgZTt3YXJuKCJVbmFibGUgcmVhZCB0byBzdHJ1Y3RUcmVlUm9vdCBpbmZvLiIpfXJldHVybiBzaGFkb3codGhpcywic3RydWN0VHJlZVJvb3QiLGUpfV9yZWFkU3RydWN0VHJlZVJvb3QoKXtjb25zdCBlPXRoaXMuX2NhdERpY3QuZ2V0UmF3KCJTdHJ1Y3RUcmVlUm9vdCIpLHQ9dGhpcy54cmVmLmZldGNoSWZSZWYoZSk7aWYoISh0IGluc3RhbmNlb2YgRGljdCkpcmV0dXJuIG51bGw7Y29uc3QgaT1uZXcgU3RydWN0VHJlZVJvb3QodCxlKTtpLmluaXQoKTtyZXR1cm4gaX1nZXQgdG9wbGV2ZWxQYWdlc0RpY3QoKXtjb25zdCBlPXRoaXMuX2NhdERpY3QuZ2V0KCJQYWdlcyIpO2lmKCEoZSBpbnN0YW5jZW9mIERpY3QpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCB0b3AtbGV2ZWwgcGFnZXMgZGljdGlvbmFyeS4iKTtyZXR1cm4gc2hhZG93KHRoaXMsInRvcGxldmVsUGFnZXNEaWN0IixlKX1nZXQgZG9jdW1lbnRPdXRsaW5lKCl7bGV0IGU9bnVsbDt0cnl7ZT10aGlzLl9yZWFkRG9jdW1lbnRPdXRsaW5lKCl9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGU7d2FybigiVW5hYmxlIHRvIHJlYWQgZG9jdW1lbnQgb3V0bGluZS4iKX1yZXR1cm4gc2hhZG93KHRoaXMsImRvY3VtZW50T3V0bGluZSIsZSl9X3JlYWREb2N1bWVudE91dGxpbmUoKXtsZXQgZT10aGlzLl9jYXREaWN0LmdldCgiT3V0bGluZXMiKTtpZighKGUgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm4gbnVsbDtlPWUuZ2V0UmF3KCJGaXJzdCIpO2lmKCEoZSBpbnN0YW5jZW9mIFJlZikpcmV0dXJuIG51bGw7Y29uc3QgdD17aXRlbXM6W119LGk9W3tvYmo6ZSxwYXJlbnQ6dH1dLGE9bmV3IFJlZlNldDthLnB1dChlKTtjb25zdCBzPXRoaXMueHJlZixyPW5ldyBVaW50OENsYW1wZWRBcnJheSgzKTtmb3IoO2kubGVuZ3RoPjA7KXtjb25zdCB0PWkuc2hpZnQoKSxuPXMuZmV0Y2hJZlJlZih0Lm9iaik7aWYobnVsbD09PW4pY29udGludWU7bi5oYXMoIlRpdGxlIil8fHdhcm4oIkludmFsaWQgb3V0bGluZSBpdGVtIGVuY291bnRlcmVkLiIpO2NvbnN0IG89e3VybDpudWxsLGRlc3Q6bnVsbCxhY3Rpb246bnVsbH07Q2F0YWxvZy5wYXJzZURlc3REaWN0aW9uYXJ5KHtkZXN0RGljdDpuLHJlc3VsdE9iajpvLGRvY0Jhc2VVcmw6dGhpcy5iYXNlVXJsLGRvY0F0dGFjaG1lbnRzOnRoaXMuYXR0YWNobWVudHN9KTtjb25zdCBnPW4uZ2V0KCJUaXRsZSIpLGM9bi5nZXQoIkYiKXx8MCxoPW4uZ2V0QXJyYXkoIkMiKSxsPW4uZ2V0KCJDb3VudCIpO2xldCBDPXI7IWlzTnVtYmVyQXJyYXkoaCwzKXx8MD09PWhbMF0mJjA9PT1oWzFdJiYwPT09aFsyXXx8KEM9Q29sb3JTcGFjZS5zaW5nbGV0b25zLnJnYi5nZXRSZ2IoaCwwKSk7Y29uc3QgUT17YWN0aW9uOm8uYWN0aW9uLGF0dGFjaG1lbnQ6by5hdHRhY2htZW50LGRlc3Q6by5kZXN0LHVybDpvLnVybCx1bnNhZmVVcmw6by51bnNhZmVVcmwsbmV3V2luZG93Om8ubmV3V2luZG93LHNldE9DR1N0YXRlOm8uc2V0T0NHU3RhdGUsdGl0bGU6InN0cmluZyI9PXR5cGVvZiBnP3N0cmluZ1RvUERGU3RyaW5nKGcpOiIiLGNvbG9yOkMsY291bnQ6TnVtYmVyLmlzSW50ZWdlcihsKT9sOnZvaWQgMCxib2xkOiEhKDImYyksaXRhbGljOiEhKDEmYyksaXRlbXM6W119O3QucGFyZW50Lml0ZW1zLnB1c2goUSk7ZT1uLmdldFJhdygiRmlyc3QiKTtpZihlIGluc3RhbmNlb2YgUmVmJiYhYS5oYXMoZSkpe2kucHVzaCh7b2JqOmUscGFyZW50OlF9KTthLnB1dChlKX1lPW4uZ2V0UmF3KCJOZXh0Iik7aWYoZSBpbnN0YW5jZW9mIFJlZiYmIWEuaGFzKGUpKXtpLnB1c2goe29iajplLHBhcmVudDp0LnBhcmVudH0pO2EucHV0KGUpfX1yZXR1cm4gdC5pdGVtcy5sZW5ndGg+MD90Lml0ZW1zOm51bGx9Z2V0IHBlcm1pc3Npb25zKCl7bGV0IGU9bnVsbDt0cnl7ZT10aGlzLl9yZWFkUGVybWlzc2lvbnMoKX1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pdGhyb3cgZTt3YXJuKCJVbmFibGUgdG8gcmVhZCBwZXJtaXNzaW9ucy4iKX1yZXR1cm4gc2hhZG93KHRoaXMsInBlcm1pc3Npb25zIixlKX1fcmVhZFBlcm1pc3Npb25zKCl7Y29uc3QgZT10aGlzLnhyZWYudHJhaWxlci5nZXQoIkVuY3J5cHQiKTtpZighKGUgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm4gbnVsbDtsZXQgdD1lLmdldCgiUCIpO2lmKCJudW1iZXIiIT10eXBlb2YgdClyZXR1cm4gbnVsbDt0Kz0yKiozMjtjb25zdCBpPVtdO2Zvcihjb25zdCBlIGluIG0pe2NvbnN0IGE9bVtlXTt0JmEmJmkucHVzaChhKX1yZXR1cm4gaX1nZXQgb3B0aW9uYWxDb250ZW50Q29uZmlnKCl7bGV0IGU9bnVsbDt0cnl7Y29uc3QgdD10aGlzLl9jYXREaWN0LmdldCgiT0NQcm9wZXJ0aWVzIik7aWYoIXQpcmV0dXJuIHNoYWRvdyh0aGlzLCJvcHRpb25hbENvbnRlbnRDb25maWciLG51bGwpO2NvbnN0IGk9dC5nZXQoIkQiKTtpZighaSlyZXR1cm4gc2hhZG93KHRoaXMsIm9wdGlvbmFsQ29udGVudENvbmZpZyIsbnVsbCk7Y29uc3QgYT10LmdldCgiT0NHcyIpO2lmKCFBcnJheS5pc0FycmF5KGEpKXJldHVybiBzaGFkb3codGhpcywib3B0aW9uYWxDb250ZW50Q29uZmlnIixudWxsKTtjb25zdCBzPVtdLHI9bmV3IFJlZlNldDtmb3IoY29uc3QgZSBvZiBhKWlmKGUgaW5zdGFuY2VvZiBSZWYmJiFyLmhhcyhlKSl7ci5wdXQoZSk7cy5wdXNoKHRoaXMuI1UoZSkpfWU9dGhpcy4jTChpLHIpO2UuZ3JvdXBzPXN9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGU7d2FybihgVW5hYmxlIHRvIHJlYWQgb3B0aW9uYWwgY29udGVudCBjb25maWc6ICR7ZX1gKX1yZXR1cm4gc2hhZG93KHRoaXMsIm9wdGlvbmFsQ29udGVudENvbmZpZyIsZSl9I1UoZSl7Y29uc3QgdD10aGlzLnhyZWYuZmV0Y2goZSksaT17aWQ6ZS50b1N0cmluZygpLG5hbWU6bnVsbCxpbnRlbnQ6bnVsbCx1c2FnZTp7cHJpbnQ6bnVsbCx2aWV3Om51bGx9fSxhPXQuZ2V0KCJOYW1lIik7InN0cmluZyI9PXR5cGVvZiBhJiYoaS5uYW1lPXN0cmluZ1RvUERGU3RyaW5nKGEpKTtsZXQgcz10LmdldEFycmF5KCJJbnRlbnQiKTtBcnJheS5pc0FycmF5KHMpfHwocz1bc10pO3MuZXZlcnkoKGU9PmUgaW5zdGFuY2VvZiBOYW1lKSkmJihpLmludGVudD1zLm1hcCgoZT0+ZS5uYW1lKSkpO2NvbnN0IHI9dC5nZXQoIlVzYWdlIik7aWYoIShyIGluc3RhbmNlb2YgRGljdCkpcmV0dXJuIGk7Y29uc3Qgbj1pLnVzYWdlLG89ci5nZXQoIlByaW50Iik7aWYobyBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IGU9by5nZXQoIlByaW50U3RhdGUiKTtpZihlIGluc3RhbmNlb2YgTmFtZSlzd2l0Y2goZS5uYW1lKXtjYXNlIk9OIjpjYXNlIk9GRiI6bi5wcmludD17cHJpbnRTdGF0ZTplLm5hbWV9fX1jb25zdCBnPXIuZ2V0KCJWaWV3Iik7aWYoZyBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IGU9Zy5nZXQoIlZpZXdTdGF0ZSIpO2lmKGUgaW5zdGFuY2VvZiBOYW1lKXN3aXRjaChlLm5hbWUpe2Nhc2UiT04iOmNhc2UiT0ZGIjpuLnZpZXc9e3ZpZXdTdGF0ZTplLm5hbWV9fX1yZXR1cm4gaX0jTChlLHQpe2Z1bmN0aW9uIHBhcnNlT25PZmYoZSl7Y29uc3QgaT1bXTtpZihBcnJheS5pc0FycmF5KGUpKWZvcihjb25zdCBhIG9mIGUpYSBpbnN0YW5jZW9mIFJlZiYmdC5oYXMoYSkmJmkucHVzaChhLnRvU3RyaW5nKCkpO3JldHVybiBpfWZ1bmN0aW9uIHBhcnNlT3JkZXIoZSxpPTApe2lmKCFBcnJheS5pc0FycmF5KGUpKXJldHVybiBudWxsO2NvbnN0IHM9W107Zm9yKGNvbnN0IHIgb2YgZSl7aWYociBpbnN0YW5jZW9mIFJlZiYmdC5oYXMocikpe2EucHV0KHIpO3MucHVzaChyLnRvU3RyaW5nKCkpO2NvbnRpbnVlfWNvbnN0IGU9cGFyc2VOZXN0ZWRPcmRlcihyLGkpO2UmJnMucHVzaChlKX1pZihpPjApcmV0dXJuIHM7Y29uc3Qgcj1bXTtmb3IoY29uc3QgZSBvZiB0KWEuaGFzKGUpfHxyLnB1c2goZS50b1N0cmluZygpKTtyLmxlbmd0aCYmcy5wdXNoKHtuYW1lOm51bGwsb3JkZXI6cn0pO3JldHVybiBzfWZ1bmN0aW9uIHBhcnNlTmVzdGVkT3JkZXIoZSx0KXtpZigrK3Q+cyl7d2FybigicGFyc2VOZXN0ZWRPcmRlciAtIHJlYWNoZWQgTUFYX05FU1RFRF9MRVZFTFMuIik7cmV0dXJuIG51bGx9Y29uc3QgYT1pLmZldGNoSWZSZWYoZSk7aWYoIUFycmF5LmlzQXJyYXkoYSkpcmV0dXJuIG51bGw7Y29uc3Qgcj1pLmZldGNoSWZSZWYoYVswXSk7aWYoInN0cmluZyIhPXR5cGVvZiByKXJldHVybiBudWxsO2NvbnN0IG49cGFyc2VPcmRlcihhLnNsaWNlKDEpLHQpO3JldHVybiBuJiZuLmxlbmd0aD97bmFtZTpzdHJpbmdUb1BERlN0cmluZyhyKSxvcmRlcjpufTpudWxsfWNvbnN0IGk9dGhpcy54cmVmLGE9bmV3IFJlZlNldCxzPTEwO3JldHVybntuYW1lOiJzdHJpbmciPT10eXBlb2YgZS5nZXQoIk5hbWUiKT9zdHJpbmdUb1BERlN0cmluZyhlLmdldCgiTmFtZSIpKTpudWxsLGNyZWF0b3I6InN0cmluZyI9PXR5cGVvZiBlLmdldCgiQ3JlYXRvciIpP3N0cmluZ1RvUERGU3RyaW5nKGUuZ2V0KCJDcmVhdG9yIikpOm51bGwsYmFzZVN0YXRlOmUuZ2V0KCJCYXNlU3RhdGUiKWluc3RhbmNlb2YgTmFtZT9lLmdldCgiQmFzZVN0YXRlIikubmFtZTpudWxsLG9uOnBhcnNlT25PZmYoZS5nZXQoIk9OIikpLG9mZjpwYXJzZU9uT2ZmKGUuZ2V0KCJPRkYiKSksb3JkZXI6cGFyc2VPcmRlcihlLmdldCgiT3JkZXIiKSksZ3JvdXBzOm51bGx9fXNldEFjdHVhbE51bVBhZ2VzKGU9bnVsbCl7dGhpcy5fYWN0dWFsTnVtUGFnZXM9ZX1nZXQgaGFzQWN0dWFsTnVtUGFnZXMoKXtyZXR1cm4gbnVsbCE9PXRoaXMuX2FjdHVhbE51bVBhZ2VzfWdldCBfcGFnZXNDb3VudCgpe2NvbnN0IGU9dGhpcy50b3BsZXZlbFBhZ2VzRGljdC5nZXQoIkNvdW50Iik7aWYoIU51bWJlci5pc0ludGVnZXIoZSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJQYWdlIGNvdW50IGluIHRvcC1sZXZlbCBwYWdlcyBkaWN0aW9uYXJ5IGlzIG5vdCBhbiBpbnRlZ2VyLiIpO3JldHVybiBzaGFkb3codGhpcywiX3BhZ2VzQ291bnQiLGUpfWdldCBudW1QYWdlcygpe3JldHVybiB0aGlzLmhhc0FjdHVhbE51bVBhZ2VzP3RoaXMuX2FjdHVhbE51bVBhZ2VzOnRoaXMuX3BhZ2VzQ291bnR9Z2V0IGRlc3RpbmF0aW9ucygpe2NvbnN0IGU9dGhpcy5fcmVhZERlc3RzKCksdD1PYmplY3QuY3JlYXRlKG51bGwpO2lmKGUgaW5zdGFuY2VvZiBOYW1lVHJlZSlmb3IoY29uc3RbaSxhXW9mIGUuZ2V0QWxsKCkpe2NvbnN0IGU9ZmV0Y2hEZXN0KGEpO2UmJih0W3N0cmluZ1RvUERGU3RyaW5nKGkpXT1lKX1lbHNlIGUgaW5zdGFuY2VvZiBEaWN0JiZlLmZvckVhY2goKGZ1bmN0aW9uKGUsaSl7Y29uc3QgYT1mZXRjaERlc3QoaSk7YSYmKHRbZV09YSl9KSk7cmV0dXJuIHNoYWRvdyh0aGlzLCJkZXN0aW5hdGlvbnMiLHQpfWdldERlc3RpbmF0aW9uKGUpe2NvbnN0IHQ9dGhpcy5fcmVhZERlc3RzKCk7aWYodCBpbnN0YW5jZW9mIE5hbWVUcmVlKXtjb25zdCBpPWZldGNoRGVzdCh0LmdldChlKSk7aWYoaSlyZXR1cm4gaTtjb25zdCBhPXRoaXMuZGVzdGluYXRpb25zW2VdO2lmKGEpe3dhcm4oYEZvdW5kICIke2V9IiBhdCBhbiBpbmNvcnJlY3QgcG9zaXRpb24gaW4gdGhlIE5hbWVUcmVlLmApO3JldHVybiBhfX1lbHNlIGlmKHQgaW5zdGFuY2VvZiBEaWN0KXtjb25zdCBpPWZldGNoRGVzdCh0LmdldChlKSk7aWYoaSlyZXR1cm4gaX1yZXR1cm4gbnVsbH1fcmVhZERlc3RzKCl7Y29uc3QgZT10aGlzLl9jYXREaWN0LmdldCgiTmFtZXMiKTtyZXR1cm4gZT8uaGFzKCJEZXN0cyIpP25ldyBOYW1lVHJlZShlLmdldFJhdygiRGVzdHMiKSx0aGlzLnhyZWYpOnRoaXMuX2NhdERpY3QuaGFzKCJEZXN0cyIpP3RoaXMuX2NhdERpY3QuZ2V0KCJEZXN0cyIpOnZvaWQgMH1nZXQgcGFnZUxhYmVscygpe2xldCBlPW51bGw7dHJ5e2U9dGhpcy5fcmVhZFBhZ2VMYWJlbHMoKX1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pdGhyb3cgZTt3YXJuKCJVbmFibGUgdG8gcmVhZCBwYWdlIGxhYmVscy4iKX1yZXR1cm4gc2hhZG93KHRoaXMsInBhZ2VMYWJlbHMiLGUpfV9yZWFkUGFnZUxhYmVscygpe2NvbnN0IGU9dGhpcy5fY2F0RGljdC5nZXRSYXcoIlBhZ2VMYWJlbHMiKTtpZighZSlyZXR1cm4gbnVsbDtjb25zdCB0PW5ldyBBcnJheSh0aGlzLm51bVBhZ2VzKTtsZXQgaT1udWxsLGE9IiI7Y29uc3Qgcz1uZXcgTnVtYmVyVHJlZShlLHRoaXMueHJlZikuZ2V0QWxsKCk7bGV0IHI9IiIsbj0xO2ZvcihsZXQgZT0wLG89dGhpcy5udW1QYWdlcztlPG87ZSsrKXtjb25zdCBvPXMuZ2V0KGUpO2lmKHZvaWQgMCE9PW8pe2lmKCEobyBpbnN0YW5jZW9mIERpY3QpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiUGFnZUxhYmVsIGlzIG5vdCBhIGRpY3Rpb25hcnkuIik7aWYoby5oYXMoIlR5cGUiKSYmIWlzTmFtZShvLmdldCgiVHlwZSIpLCJQYWdlTGFiZWwiKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkludmFsaWQgdHlwZSBpbiBQYWdlTGFiZWwgZGljdGlvbmFyeS4iKTtpZihvLmhhcygiUyIpKXtjb25zdCBlPW8uZ2V0KCJTIik7aWYoIShlIGluc3RhbmNlb2YgTmFtZSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIHN0eWxlIGluIFBhZ2VMYWJlbCBkaWN0aW9uYXJ5LiIpO2k9ZS5uYW1lfWVsc2UgaT1udWxsO2lmKG8uaGFzKCJQIikpe2NvbnN0IGU9by5nZXQoIlAiKTtpZigic3RyaW5nIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIHByZWZpeCBpbiBQYWdlTGFiZWwgZGljdGlvbmFyeS4iKTthPXN0cmluZ1RvUERGU3RyaW5nKGUpfWVsc2UgYT0iIjtpZihvLmhhcygiU3QiKSl7Y29uc3QgZT1vLmdldCgiU3QiKTtpZighKE51bWJlci5pc0ludGVnZXIoZSkmJmU+PTEpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBzdGFydCBpbiBQYWdlTGFiZWwgZGljdGlvbmFyeS4iKTtuPWV9ZWxzZSBuPTF9c3dpdGNoKGkpe2Nhc2UiRCI6cj1uO2JyZWFrO2Nhc2UiUiI6Y2FzZSJyIjpyPXRvUm9tYW5OdW1lcmFscyhuLCJyIj09PWkpO2JyZWFrO2Nhc2UiQSI6Y2FzZSJhIjpjb25zdCBlPTI2LHQ9ImEiPT09aT85Nzo2NSxhPW4tMTtyPVN0cmluZy5mcm9tQ2hhckNvZGUodCthJWUpLnJlcGVhdChNYXRoLmZsb29yKGEvZSkrMSk7YnJlYWs7ZGVmYXVsdDppZihpKXRocm93IG5ldyBGb3JtYXRFcnJvcihgSW52YWxpZCBzdHlsZSAiJHtpfSIgaW4gUGFnZUxhYmVsIGRpY3Rpb25hcnkuYCk7cj0iIn10W2VdPWErcjtuKyt9cmV0dXJuIHR9Z2V0IHBhZ2VMYXlvdXQoKXtjb25zdCBlPXRoaXMuX2NhdERpY3QuZ2V0KCJQYWdlTGF5b3V0Iik7bGV0IHQ9IiI7aWYoZSBpbnN0YW5jZW9mIE5hbWUpc3dpdGNoKGUubmFtZSl7Y2FzZSJTaW5nbGVQYWdlIjpjYXNlIk9uZUNvbHVtbiI6Y2FzZSJUd29Db2x1bW5MZWZ0IjpjYXNlIlR3b0NvbHVtblJpZ2h0IjpjYXNlIlR3b1BhZ2VMZWZ0IjpjYXNlIlR3b1BhZ2VSaWdodCI6dD1lLm5hbWV9cmV0dXJuIHNoYWRvdyh0aGlzLCJwYWdlTGF5b3V0Iix0KX1nZXQgcGFnZU1vZGUoKXtjb25zdCBlPXRoaXMuX2NhdERpY3QuZ2V0KCJQYWdlTW9kZSIpO2xldCB0PSJVc2VOb25lIjtpZihlIGluc3RhbmNlb2YgTmFtZSlzd2l0Y2goZS5uYW1lKXtjYXNlIlVzZU5vbmUiOmNhc2UiVXNlT3V0bGluZXMiOmNhc2UiVXNlVGh1bWJzIjpjYXNlIkZ1bGxTY3JlZW4iOmNhc2UiVXNlT0MiOmNhc2UiVXNlQXR0YWNobWVudHMiOnQ9ZS5uYW1lfXJldHVybiBzaGFkb3codGhpcywicGFnZU1vZGUiLHQpfWdldCB2aWV3ZXJQcmVmZXJlbmNlcygpe2NvbnN0IGU9dGhpcy5fY2F0RGljdC5nZXQoIlZpZXdlclByZWZlcmVuY2VzIik7aWYoIShlIGluc3RhbmNlb2YgRGljdCkpcmV0dXJuIHNoYWRvdyh0aGlzLCJ2aWV3ZXJQcmVmZXJlbmNlcyIsbnVsbCk7bGV0IHQ9bnVsbDtmb3IoY29uc3QgaSBvZiBlLmdldEtleXMoKSl7Y29uc3QgYT1lLmdldChpKTtsZXQgcztzd2l0Y2goaSl7Y2FzZSJIaWRlVG9vbGJhciI6Y2FzZSJIaWRlTWVudWJhciI6Y2FzZSJIaWRlV2luZG93VUkiOmNhc2UiRml0V2luZG93IjpjYXNlIkNlbnRlcldpbmRvdyI6Y2FzZSJEaXNwbGF5RG9jVGl0bGUiOmNhc2UiUGlja1RyYXlCeVBERlNpemUiOiJib29sZWFuIj09dHlwZW9mIGEmJihzPWEpO2JyZWFrO2Nhc2UiTm9uRnVsbFNjcmVlblBhZ2VNb2RlIjppZihhIGluc3RhbmNlb2YgTmFtZSlzd2l0Y2goYS5uYW1lKXtjYXNlIlVzZU5vbmUiOmNhc2UiVXNlT3V0bGluZXMiOmNhc2UiVXNlVGh1bWJzIjpjYXNlIlVzZU9DIjpzPWEubmFtZTticmVhaztkZWZhdWx0OnM9IlVzZU5vbmUifWJyZWFrO2Nhc2UiRGlyZWN0aW9uIjppZihhIGluc3RhbmNlb2YgTmFtZSlzd2l0Y2goYS5uYW1lKXtjYXNlIkwyUiI6Y2FzZSJSMkwiOnM9YS5uYW1lO2JyZWFrO2RlZmF1bHQ6cz0iTDJSIn1icmVhaztjYXNlIlZpZXdBcmVhIjpjYXNlIlZpZXdDbGlwIjpjYXNlIlByaW50QXJlYSI6Y2FzZSJQcmludENsaXAiOmlmKGEgaW5zdGFuY2VvZiBOYW1lKXN3aXRjaChhLm5hbWUpe2Nhc2UiTWVkaWFCb3giOmNhc2UiQ3JvcEJveCI6Y2FzZSJCbGVlZEJveCI6Y2FzZSJUcmltQm94IjpjYXNlIkFydEJveCI6cz1hLm5hbWU7YnJlYWs7ZGVmYXVsdDpzPSJDcm9wQm94In1icmVhaztjYXNlIlByaW50U2NhbGluZyI6aWYoYSBpbnN0YW5jZW9mIE5hbWUpc3dpdGNoKGEubmFtZSl7Y2FzZSJOb25lIjpjYXNlIkFwcERlZmF1bHQiOnM9YS5uYW1lO2JyZWFrO2RlZmF1bHQ6cz0iQXBwRGVmYXVsdCJ9YnJlYWs7Y2FzZSJEdXBsZXgiOmlmKGEgaW5zdGFuY2VvZiBOYW1lKXN3aXRjaChhLm5hbWUpe2Nhc2UiU2ltcGxleCI6Y2FzZSJEdXBsZXhGbGlwU2hvcnRFZGdlIjpjYXNlIkR1cGxleEZsaXBMb25nRWRnZSI6cz1hLm5hbWU7YnJlYWs7ZGVmYXVsdDpzPSJOb25lIn1icmVhaztjYXNlIlByaW50UGFnZVJhbmdlIjppZihBcnJheS5pc0FycmF5KGEpJiZhLmxlbmd0aCUyPT0wKXthLmV2ZXJ5KCgoZSx0LGkpPT5OdW1iZXIuaXNJbnRlZ2VyKGUpJiZlPjAmJigwPT09dHx8ZT49aVt0LTFdKSYmZTw9dGhpcy5udW1QYWdlcykpJiYocz1hKX1icmVhaztjYXNlIk51bUNvcGllcyI6TnVtYmVyLmlzSW50ZWdlcihhKSYmYT4wJiYocz1hKTticmVhaztkZWZhdWx0Ondhcm4oYElnbm9yaW5nIG5vbi1zdGFuZGFyZCBrZXkgaW4gVmlld2VyUHJlZmVyZW5jZXM6ICR7aX0uYCk7Y29udGludWV9aWYodm9pZCAwIT09cyl7dHx8KHQ9T2JqZWN0LmNyZWF0ZShudWxsKSk7dFtpXT1zfWVsc2Ugd2FybihgQmFkIHZhbHVlLCBmb3Iga2V5ICIke2l9IiwgaW4gVmlld2VyUHJlZmVyZW5jZXM6ICR7YX0uYCl9cmV0dXJuIHNoYWRvdyh0aGlzLCJ2aWV3ZXJQcmVmZXJlbmNlcyIsdCl9Z2V0IG9wZW5BY3Rpb24oKXtjb25zdCBlPXRoaXMuX2NhdERpY3QuZ2V0KCJPcGVuQWN0aW9uIiksdD1PYmplY3QuY3JlYXRlKG51bGwpO2lmKGUgaW5zdGFuY2VvZiBEaWN0KXtjb25zdCBpPW5ldyBEaWN0KHRoaXMueHJlZik7aS5zZXQoIkEiLGUpO2NvbnN0IGE9e3VybDpudWxsLGRlc3Q6bnVsbCxhY3Rpb246bnVsbH07Q2F0YWxvZy5wYXJzZURlc3REaWN0aW9uYXJ5KHtkZXN0RGljdDppLHJlc3VsdE9iajphfSk7QXJyYXkuaXNBcnJheShhLmRlc3QpP3QuZGVzdD1hLmRlc3Q6YS5hY3Rpb24mJih0LmFjdGlvbj1hLmFjdGlvbil9ZWxzZSBBcnJheS5pc0FycmF5KGUpJiYodC5kZXN0PWUpO3JldHVybiBzaGFkb3codGhpcywib3BlbkFjdGlvbiIsb2JqZWN0U2l6ZSh0KT4wP3Q6bnVsbCl9Z2V0IGF0dGFjaG1lbnRzKCl7Y29uc3QgZT10aGlzLl9jYXREaWN0LmdldCgiTmFtZXMiKTtsZXQgdD1udWxsO2lmKGUgaW5zdGFuY2VvZiBEaWN0JiZlLmhhcygiRW1iZWRkZWRGaWxlcyIpKXtjb25zdCBpPW5ldyBOYW1lVHJlZShlLmdldFJhdygiRW1iZWRkZWRGaWxlcyIpLHRoaXMueHJlZik7Zm9yKGNvbnN0W2UsYV1vZiBpLmdldEFsbCgpKXtjb25zdCBpPW5ldyBGaWxlU3BlYyhhLHRoaXMueHJlZik7dHx8KHQ9T2JqZWN0LmNyZWF0ZShudWxsKSk7dFtzdHJpbmdUb1BERlN0cmluZyhlKV09aS5zZXJpYWxpemFibGV9fXJldHVybiBzaGFkb3codGhpcywiYXR0YWNobWVudHMiLHQpfWdldCB4ZmFJbWFnZXMoKXtjb25zdCBlPXRoaXMuX2NhdERpY3QuZ2V0KCJOYW1lcyIpO2xldCB0PW51bGw7aWYoZSBpbnN0YW5jZW9mIERpY3QmJmUuaGFzKCJYRkFJbWFnZXMiKSl7Y29uc3QgaT1uZXcgTmFtZVRyZWUoZS5nZXRSYXcoIlhGQUltYWdlcyIpLHRoaXMueHJlZik7Zm9yKGNvbnN0W2UsYV1vZiBpLmdldEFsbCgpKXt0fHwodD1uZXcgRGljdCh0aGlzLnhyZWYpKTt0LnNldChzdHJpbmdUb1BERlN0cmluZyhlKSxhKX19cmV0dXJuIHNoYWRvdyh0aGlzLCJ4ZmFJbWFnZXMiLHQpfV9jb2xsZWN0SmF2YVNjcmlwdCgpe2NvbnN0IGU9dGhpcy5fY2F0RGljdC5nZXQoIk5hbWVzIik7bGV0IHQ9bnVsbDtmdW5jdGlvbiBhcHBlbmRJZkphdmFTY3JpcHREaWN0KGUsaSl7aWYoIShpIGluc3RhbmNlb2YgRGljdCkpcmV0dXJuO2lmKCFpc05hbWUoaS5nZXQoIlMiKSwiSmF2YVNjcmlwdCIpKXJldHVybjtsZXQgYT1pLmdldCgiSlMiKTtpZihhIGluc3RhbmNlb2YgQmFzZVN0cmVhbSlhPWEuZ2V0U3RyaW5nKCk7ZWxzZSBpZigic3RyaW5nIiE9dHlwZW9mIGEpcmV0dXJuO2E9c3RyaW5nVG9QREZTdHJpbmcoYSkucmVwbGFjZUFsbCgiXDAiLCIiKTthJiYodHx8PW5ldyBNYXApLnNldChlLGEpfWlmKGUgaW5zdGFuY2VvZiBEaWN0JiZlLmhhcygiSmF2YVNjcmlwdCIpKXtjb25zdCB0PW5ldyBOYW1lVHJlZShlLmdldFJhdygiSmF2YVNjcmlwdCIpLHRoaXMueHJlZik7Zm9yKGNvbnN0W2UsaV1vZiB0LmdldEFsbCgpKWFwcGVuZElmSmF2YVNjcmlwdERpY3Qoc3RyaW5nVG9QREZTdHJpbmcoZSksaSl9Y29uc3QgaT10aGlzLl9jYXREaWN0LmdldCgiT3BlbkFjdGlvbiIpO2kmJmFwcGVuZElmSmF2YVNjcmlwdERpY3QoIk9wZW5BY3Rpb24iLGkpO3JldHVybiB0fWdldCBqc0FjdGlvbnMoKXtjb25zdCBlPXRoaXMuX2NvbGxlY3RKYXZhU2NyaXB0KCk7bGV0IHQ9Y29sbGVjdEFjdGlvbnModGhpcy54cmVmLHRoaXMuX2NhdERpY3QsZEEpO2lmKGUpe3R8fD1PYmplY3QuY3JlYXRlKG51bGwpO2Zvcihjb25zdFtpLGFdb2YgZSlpIGluIHQ/dFtpXS5wdXNoKGEpOnRbaV09W2FdfXJldHVybiBzaGFkb3codGhpcywianNBY3Rpb25zIix0KX1hc3luYyBmb250RmFsbGJhY2soZSx0KXtjb25zdCBpPWF3YWl0IFByb21pc2UuYWxsKHRoaXMuZm9udENhY2hlKTtmb3IoY29uc3QgYSBvZiBpKWlmKGEubG9hZGVkTmFtZT09PWUpe2EuZmFsbGJhY2sodCk7cmV0dXJufX1hc3luYyBjbGVhbnVwKGU9ITEpe2NsZWFyR2xvYmFsQ2FjaGVzKCk7dGhpcy5nbG9iYWxJbWFnZUNhY2hlLmNsZWFyKGUpO3RoaXMucGFnZUtpZHNDb3VudENhY2hlLmNsZWFyKCk7dGhpcy5wYWdlSW5kZXhDYWNoZS5jbGVhcigpO3RoaXMubm9uQmxlbmRNb2Rlc1NldC5jbGVhcigpO2NvbnN0IHQ9YXdhaXQgUHJvbWlzZS5hbGwodGhpcy5mb250Q2FjaGUpO2Zvcihjb25zdHtkaWN0OmV9b2YgdClkZWxldGUgZS5jYWNoZUtleTt0aGlzLmZvbnRDYWNoZS5jbGVhcigpO3RoaXMuYnVpbHRJbkNNYXBDYWNoZS5jbGVhcigpO3RoaXMuc3RhbmRhcmRGb250RGF0YUNhY2hlLmNsZWFyKCk7dGhpcy5zeXN0ZW1Gb250Q2FjaGUuY2xlYXIoKX1hc3luYyBnZXRQYWdlRGljdChlKXtjb25zdCB0PVt0aGlzLnRvcGxldmVsUGFnZXNEaWN0XSxpPW5ldyBSZWZTZXQsYT10aGlzLl9jYXREaWN0LmdldFJhdygiUGFnZXMiKTthIGluc3RhbmNlb2YgUmVmJiZpLnB1dChhKTtjb25zdCBzPXRoaXMueHJlZixyPXRoaXMucGFnZUtpZHNDb3VudENhY2hlLG49dGhpcy5wYWdlSW5kZXhDYWNoZTtsZXQgbz0wO2Zvcig7dC5sZW5ndGg7KXtjb25zdCBhPXQucG9wKCk7aWYoYSBpbnN0YW5jZW9mIFJlZil7Y29uc3QgZz1yLmdldChhKTtpZihnPj0wJiZvK2c8PWUpe28rPWc7Y29udGludWV9aWYoaS5oYXMoYSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJQYWdlcyB0cmVlIGNvbnRhaW5zIGNpcmN1bGFyIHJlZmVyZW5jZS4iKTtpLnB1dChhKTtjb25zdCBjPWF3YWl0IHMuZmV0Y2hBc3luYyhhKTtpZihjIGluc3RhbmNlb2YgRGljdCl7bGV0IHQ9Yy5nZXRSYXcoIlR5cGUiKTt0IGluc3RhbmNlb2YgUmVmJiYodD1hd2FpdCBzLmZldGNoQXN5bmModCkpO2lmKGlzTmFtZSh0LCJQYWdlIil8fCFjLmhhcygiS2lkcyIpKXtyLmhhcyhhKXx8ci5wdXQoYSwxKTtuLmhhcyhhKXx8bi5wdXQoYSxvKTtpZihvPT09ZSlyZXR1cm5bYyxhXTtvKys7Y29udGludWV9fXQucHVzaChjKTtjb250aW51ZX1pZighKGEgaW5zdGFuY2VvZiBEaWN0KSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlBhZ2UgZGljdGlvbmFyeSBraWQgcmVmZXJlbmNlIHBvaW50cyB0byB3cm9uZyB0eXBlIG9mIG9iamVjdC4iKTtjb25zdHtvYmpJZDpnfT1hO2xldCBjPWEuZ2V0UmF3KCJDb3VudCIpO2MgaW5zdGFuY2VvZiBSZWYmJihjPWF3YWl0IHMuZmV0Y2hBc3luYyhjKSk7aWYoTnVtYmVyLmlzSW50ZWdlcihjKSYmYz49MCl7ZyYmIXIuaGFzKGcpJiZyLnB1dChnLGMpO2lmKG8rYzw9ZSl7bys9Yztjb250aW51ZX19bGV0IGg9YS5nZXRSYXcoIktpZHMiKTtoIGluc3RhbmNlb2YgUmVmJiYoaD1hd2FpdCBzLmZldGNoQXN5bmMoaCkpO2lmKCFBcnJheS5pc0FycmF5KGgpKXtsZXQgdD1hLmdldFJhdygiVHlwZSIpO3QgaW5zdGFuY2VvZiBSZWYmJih0PWF3YWl0IHMuZmV0Y2hBc3luYyh0KSk7aWYoaXNOYW1lKHQsIlBhZ2UiKXx8IWEuaGFzKCJLaWRzIikpe2lmKG89PT1lKXJldHVyblthLG51bGxdO28rKztjb250aW51ZX10aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlBhZ2UgZGljdGlvbmFyeSBraWRzIG9iamVjdCBpcyBub3QgYW4gYXJyYXkuIil9Zm9yKGxldCBlPWgubGVuZ3RoLTE7ZT49MDtlLS0pdC5wdXNoKGhbZV0pfXRocm93IG5ldyBFcnJvcihgUGFnZSBpbmRleCAke2V9IG5vdCBmb3VuZC5gKX1hc3luYyBnZXRBbGxQYWdlRGljdHMoZT0hMSl7Y29uc3R7aWdub3JlRXJyb3JzOnR9PXRoaXMucGRmTWFuYWdlci5ldmFsdWF0b3JPcHRpb25zLGk9W3tjdXJyZW50Tm9kZTp0aGlzLnRvcGxldmVsUGFnZXNEaWN0LHBvc0luS2lkczowfV0sYT1uZXcgUmVmU2V0LHM9dGhpcy5fY2F0RGljdC5nZXRSYXcoIlBhZ2VzIik7cyBpbnN0YW5jZW9mIFJlZiYmYS5wdXQocyk7Y29uc3Qgcj1uZXcgTWFwLG49dGhpcy54cmVmLG89dGhpcy5wYWdlSW5kZXhDYWNoZTtsZXQgZz0wO2Z1bmN0aW9uIGFkZFBhZ2VEaWN0KGUsdCl7dCYmIW8uaGFzKHQpJiZvLnB1dCh0LGcpO3Iuc2V0KGcrKyxbZSx0XSl9ZnVuY3Rpb24gYWRkUGFnZUVycm9yKGkpe2lmKGkgaW5zdGFuY2VvZiBYUmVmRW50cnlFeGNlcHRpb24mJiFlKXRocm93IGk7aWYoZSYmdCYmMD09PWcpe3dhcm4oYGdldEFsbFBhZ2VEaWN0cyAtIFNraXBwaW5nIGludmFsaWQgZmlyc3QgcGFnZTogIiR7aX0iLmApO2k9RGljdC5lbXB0eX1yLnNldChnKyssW2ksbnVsbF0pfWZvcig7aS5sZW5ndGg+MDspe2NvbnN0IGU9aS5hdCgtMSkse2N1cnJlbnROb2RlOnQscG9zSW5LaWRzOnN9PWU7bGV0IHI9dC5nZXRSYXcoIktpZHMiKTtpZihyIGluc3RhbmNlb2YgUmVmKXRyeXtyPWF3YWl0IG4uZmV0Y2hBc3luYyhyKX1jYXRjaChlKXthZGRQYWdlRXJyb3IoZSk7YnJlYWt9aWYoIUFycmF5LmlzQXJyYXkocikpe2FkZFBhZ2VFcnJvcihuZXcgRm9ybWF0RXJyb3IoIlBhZ2UgZGljdGlvbmFyeSBraWRzIG9iamVjdCBpcyBub3QgYW4gYXJyYXkuIikpO2JyZWFrfWlmKHM+PXIubGVuZ3RoKXtpLnBvcCgpO2NvbnRpbnVlfWNvbnN0IG89cltzXTtsZXQgZztpZihvIGluc3RhbmNlb2YgUmVmKXtpZihhLmhhcyhvKSl7YWRkUGFnZUVycm9yKG5ldyBGb3JtYXRFcnJvcigiUGFnZXMgdHJlZSBjb250YWlucyBjaXJjdWxhciByZWZlcmVuY2UuIikpO2JyZWFrfWEucHV0KG8pO3RyeXtnPWF3YWl0IG4uZmV0Y2hBc3luYyhvKX1jYXRjaChlKXthZGRQYWdlRXJyb3IoZSk7YnJlYWt9fWVsc2UgZz1vO2lmKCEoZyBpbnN0YW5jZW9mIERpY3QpKXthZGRQYWdlRXJyb3IobmV3IEZvcm1hdEVycm9yKCJQYWdlIGRpY3Rpb25hcnkga2lkIHJlZmVyZW5jZSBwb2ludHMgdG8gd3JvbmcgdHlwZSBvZiBvYmplY3QuIikpO2JyZWFrfWxldCBjPWcuZ2V0UmF3KCJUeXBlIik7aWYoYyBpbnN0YW5jZW9mIFJlZil0cnl7Yz1hd2FpdCBuLmZldGNoQXN5bmMoYyl9Y2F0Y2goZSl7YWRkUGFnZUVycm9yKGUpO2JyZWFrfWlzTmFtZShjLCJQYWdlIil8fCFnLmhhcygiS2lkcyIpP2FkZFBhZ2VEaWN0KGcsbyBpbnN0YW5jZW9mIFJlZj9vOm51bGwpOmkucHVzaCh7Y3VycmVudE5vZGU6Zyxwb3NJbktpZHM6MH0pO2UucG9zSW5LaWRzKyt9cmV0dXJuIHJ9Z2V0UGFnZUluZGV4KGUpe2NvbnN0IHQ9dGhpcy5wYWdlSW5kZXhDYWNoZS5nZXQoZSk7aWYodm9pZCAwIT09dClyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHQpO2NvbnN0IGk9dGhpcy54cmVmO2xldCBhPTA7Y29uc3QgbmV4dD10PT5mdW5jdGlvbiBwYWdlc0JlZm9yZVJlZih0KXtsZXQgYSxzPTA7cmV0dXJuIGkuZmV0Y2hBc3luYyh0KS50aGVuKChmdW5jdGlvbihpKXtpZihpc1JlZnNFcXVhbCh0LGUpJiYhaXNEaWN0KGksIlBhZ2UiKSYmIShpIGluc3RhbmNlb2YgRGljdCYmIWkuaGFzKCJUeXBlIikmJmkuaGFzKCJDb250ZW50cyIpKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIlRoZSByZWZlcmVuY2UgZG9lcyBub3QgcG9pbnQgdG8gYSAvUGFnZSBkaWN0aW9uYXJ5LiIpO2lmKCFpKXJldHVybiBudWxsO2lmKCEoaSBpbnN0YW5jZW9mIERpY3QpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiTm9kZSBtdXN0IGJlIGEgZGljdGlvbmFyeS4iKTthPWkuZ2V0UmF3KCJQYXJlbnQiKTtyZXR1cm4gaS5nZXRBc3luYygiUGFyZW50Iil9KSkudGhlbigoZnVuY3Rpb24oZSl7aWYoIWUpcmV0dXJuIG51bGw7aWYoIShlIGluc3RhbmNlb2YgRGljdCkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJQYXJlbnQgbXVzdCBiZSBhIGRpY3Rpb25hcnkuIik7cmV0dXJuIGUuZ2V0QXN5bmMoIktpZHMiKX0pKS50aGVuKChmdW5jdGlvbihlKXtpZighZSlyZXR1cm4gbnVsbDtjb25zdCByPVtdO2xldCBuPSExO2Zvcihjb25zdCBhIG9mIGUpe2lmKCEoYSBpbnN0YW5jZW9mIFJlZikpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJLaWQgbXVzdCBiZSBhIHJlZmVyZW5jZS4iKTtpZihpc1JlZnNFcXVhbChhLHQpKXtuPSEwO2JyZWFrfXIucHVzaChpLmZldGNoQXN5bmMoYSkudGhlbigoZnVuY3Rpb24oZSl7aWYoIShlIGluc3RhbmNlb2YgRGljdCkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJLaWQgbm9kZSBtdXN0IGJlIGEgZGljdGlvbmFyeS4iKTtlLmhhcygiQ291bnQiKT9zKz1lLmdldCgiQ291bnQiKTpzKyt9KSkpfWlmKCFuKXRocm93IG5ldyBGb3JtYXRFcnJvcigiS2lkIHJlZmVyZW5jZSBub3QgZm91bmQgaW4gcGFyZW50J3Mga2lkcy4iKTtyZXR1cm4gUHJvbWlzZS5hbGwocikudGhlbigoZnVuY3Rpb24oKXtyZXR1cm5bcyxhXX0pKX0pKX0odCkudGhlbigodD0+e2lmKCF0KXt0aGlzLnBhZ2VJbmRleENhY2hlLnB1dChlLGEpO3JldHVybiBhfWNvbnN0W2ksc109dDthKz1pO3JldHVybiBuZXh0KHMpfSkpO3JldHVybiBuZXh0KGUpfWdldCBiYXNlVXJsKCl7Y29uc3QgZT10aGlzLl9jYXREaWN0LmdldCgiVVJJIik7aWYoZSBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IHQ9ZS5nZXQoIkJhc2UiKTtpZigic3RyaW5nIj09dHlwZW9mIHQpe2NvbnN0IGU9Y3JlYXRlVmFsaWRBYnNvbHV0ZVVybCh0LG51bGwse3RyeUNvbnZlcnRFbmNvZGluZzohMH0pO2lmKGUpcmV0dXJuIHNoYWRvdyh0aGlzLCJiYXNlVXJsIixlLmhyZWYpfX1yZXR1cm4gc2hhZG93KHRoaXMsImJhc2VVcmwiLHRoaXMucGRmTWFuYWdlci5kb2NCYXNlVXJsKX1zdGF0aWMgcGFyc2VEZXN0RGljdGlvbmFyeSh7ZGVzdERpY3Q6ZSxyZXN1bHRPYmo6dCxkb2NCYXNlVXJsOmk9bnVsbCxkb2NBdHRhY2htZW50czphPW51bGx9KXtpZighKGUgaW5zdGFuY2VvZiBEaWN0KSl7d2FybigicGFyc2VEZXN0RGljdGlvbmFyeTogYGRlc3REaWN0YCBtdXN0IGJlIGEgZGljdGlvbmFyeS4iKTtyZXR1cm59bGV0IHMscixuPWUuZ2V0KCJBIik7aWYoIShuIGluc3RhbmNlb2YgRGljdCkpaWYoZS5oYXMoIkRlc3QiKSluPWUuZ2V0KCJEZXN0Iik7ZWxzZXtuPWUuZ2V0KCJBQSIpO24gaW5zdGFuY2VvZiBEaWN0JiYobi5oYXMoIkQiKT9uPW4uZ2V0KCJEIik6bi5oYXMoIlUiKSYmKG49bi5nZXQoIlUiKSkpfWlmKG4gaW5zdGFuY2VvZiBEaWN0KXtjb25zdCBlPW4uZ2V0KCJTIik7aWYoIShlIGluc3RhbmNlb2YgTmFtZSkpe3dhcm4oInBhcnNlRGVzdERpY3Rpb25hcnk6IEludmFsaWQgdHlwZSBpbiBBY3Rpb24gZGljdGlvbmFyeS4iKTtyZXR1cm59Y29uc3QgaT1lLm5hbWU7c3dpdGNoKGkpe2Nhc2UiUmVzZXRGb3JtIjpjb25zdCBlPW4uZ2V0KCJGbGFncyIpLG89ISgxJigibnVtYmVyIj09dHlwZW9mIGU/ZTowKSksZz1bXSxjPVtdO2Zvcihjb25zdCBlIG9mIG4uZ2V0KCJGaWVsZHMiKXx8W10pZSBpbnN0YW5jZW9mIFJlZj9jLnB1c2goZS50b1N0cmluZygpKToic3RyaW5nIj09dHlwZW9mIGUmJmcucHVzaChzdHJpbmdUb1BERlN0cmluZyhlKSk7dC5yZXNldEZvcm09e2ZpZWxkczpnLHJlZnM6YyxpbmNsdWRlOm99O2JyZWFrO2Nhc2UiVVJJIjpzPW4uZ2V0KCJVUkkiKTtzIGluc3RhbmNlb2YgTmFtZSYmKHM9Ii8iK3MubmFtZSk7YnJlYWs7Y2FzZSJHb1RvIjpyPW4uZ2V0KCJEIik7YnJlYWs7Y2FzZSJMYXVuY2giOmNhc2UiR29Ub1IiOmNvbnN0IGg9bi5nZXQoIkYiKTtpZihoIGluc3RhbmNlb2YgRGljdCl7Y29uc3QgZT1uZXcgRmlsZVNwZWMoaCxudWxsLCEwKSx7cmF3RmlsZW5hbWU6dH09ZS5zZXJpYWxpemFibGU7cz10fWVsc2Uic3RyaW5nIj09dHlwZW9mIGgmJihzPWgpO2NvbnN0IGw9ZmV0Y2hSZW1vdGVEZXN0KG4pO2wmJiJzdHJpbmciPT10eXBlb2YgcyYmKHM9cy5zcGxpdCgiIyIsMSlbMF0rIiMiK2wpO2NvbnN0IEM9bi5nZXQoIk5ld1dpbmRvdyIpOyJib29sZWFuIj09dHlwZW9mIEMmJih0Lm5ld1dpbmRvdz1DKTticmVhaztjYXNlIkdvVG9FIjpjb25zdCBRPW4uZ2V0KCJUIik7bGV0IEU7aWYoYSYmUSBpbnN0YW5jZW9mIERpY3Qpe2NvbnN0IGU9US5nZXQoIlIiKSx0PVEuZ2V0KCJOIik7aXNOYW1lKGUsIkMiKSYmInN0cmluZyI9PXR5cGVvZiB0JiYoRT1hW3N0cmluZ1RvUERGU3RyaW5nKHQpXSl9aWYoRSl7dC5hdHRhY2htZW50PUU7Y29uc3QgZT1mZXRjaFJlbW90ZURlc3Qobik7ZSYmKHQuYXR0YWNobWVudERlc3Q9ZSl9ZWxzZSB3YXJuKCdwYXJzZURlc3REaWN0aW9uYXJ5IC0gdW5pbXBsZW1lbnRlZCAiR29Ub0UiIGFjdGlvbi4nKTticmVhaztjYXNlIk5hbWVkIjpjb25zdCB1PW4uZ2V0KCJOIik7dSBpbnN0YW5jZW9mIE5hbWUmJih0LmFjdGlvbj11Lm5hbWUpO2JyZWFrO2Nhc2UiU2V0T0NHU3RhdGUiOmNvbnN0IGQ9bi5nZXQoIlN0YXRlIiksZj1uLmdldCgiUHJlc2VydmVSQiIpO2lmKCFBcnJheS5pc0FycmF5KGQpfHwwPT09ZC5sZW5ndGgpYnJlYWs7Y29uc3QgcD1bXTtmb3IoY29uc3QgZSBvZiBkKWlmKGUgaW5zdGFuY2VvZiBOYW1lKXN3aXRjaChlLm5hbWUpe2Nhc2UiT04iOmNhc2UiT0ZGIjpjYXNlIlRvZ2dsZSI6cC5wdXNoKGUubmFtZSl9ZWxzZSBlIGluc3RhbmNlb2YgUmVmJiZwLnB1c2goZS50b1N0cmluZygpKTtpZihwLmxlbmd0aCE9PWQubGVuZ3RoKWJyZWFrO3Quc2V0T0NHU3RhdGU9e3N0YXRlOnAscHJlc2VydmVSQjoiYm9vbGVhbiIhPXR5cGVvZiBmfHxmfTticmVhaztjYXNlIkphdmFTY3JpcHQiOmNvbnN0IG09bi5nZXQoIkpTIik7bGV0IHk7bSBpbnN0YW5jZW9mIEJhc2VTdHJlYW0/eT1tLmdldFN0cmluZygpOiJzdHJpbmciPT10eXBlb2YgbSYmKHk9bSk7Y29uc3Qgdz15JiZyZWNvdmVySnNVUkwoc3RyaW5nVG9QREZTdHJpbmcoeSkpO2lmKHcpe3M9dy51cmw7dC5uZXdXaW5kb3c9dy5uZXdXaW5kb3c7YnJlYWt9ZGVmYXVsdDppZigiSmF2YVNjcmlwdCI9PT1pfHwiU3VibWl0Rm9ybSI9PT1pKWJyZWFrO3dhcm4oYHBhcnNlRGVzdERpY3Rpb25hcnkgLSB1bnN1cHBvcnRlZCBhY3Rpb246ICIke2l9Ii5gKX19ZWxzZSBlLmhhcygiRGVzdCIpJiYocj1lLmdldCgiRGVzdCIpKTtpZigic3RyaW5nIj09dHlwZW9mIHMpe2NvbnN0IGU9Y3JlYXRlVmFsaWRBYnNvbHV0ZVVybChzLGkse2FkZERlZmF1bHRQcm90b2NvbDohMCx0cnlDb252ZXJ0RW5jb2Rpbmc6ITB9KTtlJiYodC51cmw9ZS5ocmVmKTt0LnVuc2FmZVVybD1zfWlmKHIpe3IgaW5zdGFuY2VvZiBOYW1lJiYocj1yLm5hbWUpOyJzdHJpbmciPT10eXBlb2Ygcj90LmRlc3Q9c3RyaW5nVG9QREZTdHJpbmcocik6aXNWYWxpZEV4cGxpY2l0RGVzdChyKSYmKHQuZGVzdD1yKX19fWZ1bmN0aW9uIGFkZENoaWxkcmVuKGUsdCl7aWYoZSBpbnN0YW5jZW9mIERpY3QpZT1lLmdldFJhd1ZhbHVlcygpO2Vsc2UgaWYoZSBpbnN0YW5jZW9mIEJhc2VTdHJlYW0pZT1lLmRpY3QuZ2V0UmF3VmFsdWVzKCk7ZWxzZSBpZighQXJyYXkuaXNBcnJheShlKSlyZXR1cm47Zm9yKGNvbnN0IGEgb2YgZSkoKGk9YSlpbnN0YW5jZW9mIFJlZnx8aSBpbnN0YW5jZW9mIERpY3R8fGkgaW5zdGFuY2VvZiBCYXNlU3RyZWFtfHxBcnJheS5pc0FycmF5KGkpKSYmdC5wdXNoKGEpO3ZhciBpfWNsYXNzIE9iamVjdExvYWRlcntjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5kaWN0PWU7dGhpcy5rZXlzPXQ7dGhpcy54cmVmPWk7dGhpcy5yZWZTZXQ9bnVsbH1hc3luYyBsb2FkKCl7aWYodGhpcy54cmVmLnN0cmVhbS5pc0RhdGFMb2FkZWQpcmV0dXJuO2NvbnN0e2tleXM6ZSxkaWN0OnR9PXRoaXM7dGhpcy5yZWZTZXQ9bmV3IFJlZlNldDtjb25zdCBpPVtdO2Zvcihjb25zdCBhIG9mIGUpe2NvbnN0IGU9dC5nZXRSYXcoYSk7dm9pZCAwIT09ZSYmaS5wdXNoKGUpfXJldHVybiB0aGlzLl93YWxrKGkpfWFzeW5jIF93YWxrKGUpe2NvbnN0IHQ9W10saT1bXTtmb3IoO2UubGVuZ3RoOyl7bGV0IGE9ZS5wb3AoKTtpZihhIGluc3RhbmNlb2YgUmVmKXtpZih0aGlzLnJlZlNldC5oYXMoYSkpY29udGludWU7dHJ5e3RoaXMucmVmU2V0LnB1dChhKTthPXRoaXMueHJlZi5mZXRjaChhKX1jYXRjaChlKXtpZighKGUgaW5zdGFuY2VvZiBNaXNzaW5nRGF0YUV4Y2VwdGlvbikpe3dhcm4oYE9iamVjdExvYWRlci5fd2FsayAtIHJlcXVlc3RpbmcgYWxsIGRhdGE6ICIke2V9Ii5gKTt0aGlzLnJlZlNldD1udWxsO2NvbnN0e21hbmFnZXI6dH09dGhpcy54cmVmLnN0cmVhbTtyZXR1cm4gdC5yZXF1ZXN0QWxsQ2h1bmtzKCl9dC5wdXNoKGEpO2kucHVzaCh7YmVnaW46ZS5iZWdpbixlbmQ6ZS5lbmR9KX19aWYoYSBpbnN0YW5jZW9mIEJhc2VTdHJlYW0pe2NvbnN0IGU9YS5nZXRCYXNlU3RyZWFtcygpO2lmKGUpe2xldCBzPSExO2Zvcihjb25zdCB0IG9mIGUpaWYoIXQuaXNEYXRhTG9hZGVkKXtzPSEwO2kucHVzaCh7YmVnaW46dC5zdGFydCxlbmQ6dC5lbmR9KX1zJiZ0LnB1c2goYSl9fWFkZENoaWxkcmVuKGEsZSl9aWYoaS5sZW5ndGgpe2F3YWl0IHRoaXMueHJlZi5zdHJlYW0ubWFuYWdlci5yZXF1ZXN0UmFuZ2VzKGkpO2Zvcihjb25zdCBlIG9mIHQpZSBpbnN0YW5jZW9mIFJlZiYmdGhpcy5yZWZTZXQucmVtb3ZlKGUpO3JldHVybiB0aGlzLl93YWxrKHQpfXRoaXMucmVmU2V0PW51bGx9fWNvbnN0IFdzPVN5bWJvbCgpLFhzPVN5bWJvbCgpLGpzPVN5bWJvbCgpLFpzPVN5bWJvbCgpLFZzPVN5bWJvbCgpLHpzPVN5bWJvbCgpLF9zPVN5bWJvbCgpLCRzPVN5bWJvbCgpLEFyPVN5bWJvbCgpLGVyPVN5bWJvbCgiY29udGVudCIpLHRyPVN5bWJvbCgiZGF0YSIpLGlyPVN5bWJvbCgpLGFyPVN5bWJvbCgiZXh0cmEiKSxzcj1TeW1ib2woKSxycj1TeW1ib2woKSxucj1TeW1ib2woKSxvcj1TeW1ib2woKSxncj1TeW1ib2woKSxJcj1TeW1ib2woKSxjcj1TeW1ib2woKSxocj1TeW1ib2woKSxscj1TeW1ib2woKSxDcj1TeW1ib2woKSxRcj1TeW1ib2woKSxFcj1TeW1ib2woKSx1cj1TeW1ib2woKSxkcj1TeW1ib2woKSxmcj1TeW1ib2woKSxwcj1TeW1ib2woKSxtcj1TeW1ib2woKSx5cj1TeW1ib2woKSx3cj1TeW1ib2woKSxicj1TeW1ib2woKSxEcj1TeW1ib2woKSxGcj1TeW1ib2woKSxTcj1TeW1ib2woKSxrcj1TeW1ib2woKSxScj1TeW1ib2woKSxOcj1TeW1ib2woKSxHcj1TeW1ib2woKSx4cj1TeW1ib2woKSxNcj1TeW1ib2woKSxVcj1TeW1ib2woKSxMcj1TeW1ib2woKSxKcj1TeW1ib2woKSxIcj1TeW1ib2woIm5hbWVzcGFjZUlkIiksWXI9U3ltYm9sKCJub2RlTmFtZSIpLHZyPVN5bWJvbCgpLEtyPVN5bWJvbCgpLFRyPVN5bWJvbCgpLHFyPVN5bWJvbCgpLE9yPVN5bWJvbCgpLFByPVN5bWJvbCgpLFdyPVN5bWJvbCgpLFhyPVN5bWJvbCgpLGpyPVN5bWJvbCgicm9vdCIpLFpyPVN5bWJvbCgpLFZyPVN5bWJvbCgpLHpyPVN5bWJvbCgpLF9yPVN5bWJvbCgpLCRyPVN5bWJvbCgpLEFuPVN5bWJvbCgpLGVuPVN5bWJvbCgpLHRuPVN5bWJvbCgpLGFuPVN5bWJvbCgpLHNuPVN5bWJvbCgpLHJuPVN5bWJvbCgpLG5uPVN5bWJvbCgidWlkIiksb249U3ltYm9sKCksZ249e2NvbmZpZzp7aWQ6MCxjaGVjazplPT5lLnN0YXJ0c1dpdGgoImh0dHA6Ly93d3cueGZhLm9yZy9zY2hlbWEveGNpLyIpfSxjb25uZWN0aW9uU2V0OntpZDoxLGNoZWNrOmU9PmUuc3RhcnRzV2l0aCgiaHR0cDovL3d3dy54ZmEub3JnL3NjaGVtYS94ZmEtY29ubmVjdGlvbi1zZXQvIil9LGRhdGFzZXRzOntpZDoyLGNoZWNrOmU9PmUuc3RhcnRzV2l0aCgiaHR0cDovL3d3dy54ZmEub3JnL3NjaGVtYS94ZmEtZGF0YS8iKX0sZm9ybTp7aWQ6MyxjaGVjazplPT5lLnN0YXJ0c1dpdGgoImh0dHA6Ly93d3cueGZhLm9yZy9zY2hlbWEveGZhLWZvcm0vIil9LGxvY2FsZVNldDp7aWQ6NCxjaGVjazplPT5lLnN0YXJ0c1dpdGgoImh0dHA6Ly93d3cueGZhLm9yZy9zY2hlbWEveGZhLWxvY2FsZS1zZXQvIil9LHBkZjp7aWQ6NSxjaGVjazplPT4iaHR0cDovL25zLmFkb2JlLmNvbS94ZHAvcGRmLyI9PT1lfSxzaWduYXR1cmU6e2lkOjYsY2hlY2s6ZT0+Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPT09ZX0sc291cmNlU2V0OntpZDo3LGNoZWNrOmU9PmUuc3RhcnRzV2l0aCgiaHR0cDovL3d3dy54ZmEub3JnL3NjaGVtYS94ZmEtc291cmNlLXNldC8iKX0sc3R5bGVzaGVldDp7aWQ6OCxjaGVjazplPT4iaHR0cDovL3d3dy53My5vcmcvMTk5OS9YU0wvVHJhbnNmb3JtIj09PWV9LHRlbXBsYXRlOntpZDo5LGNoZWNrOmU9PmUuc3RhcnRzV2l0aCgiaHR0cDovL3d3dy54ZmEub3JnL3NjaGVtYS94ZmEtdGVtcGxhdGUvIil9LHhkYzp7aWQ6MTAsY2hlY2s6ZT0+ZS5zdGFydHNXaXRoKCJodHRwOi8vd3d3LnhmYS5vcmcvc2NoZW1hL3hkYy8iKX0seGRwOntpZDoxMSxjaGVjazplPT4iaHR0cDovL25zLmFkb2JlLmNvbS94ZHAvIj09PWV9LHhmZGY6e2lkOjEyLGNoZWNrOmU9PiJodHRwOi8vbnMuYWRvYmUuY29tL3hmZGYvIj09PWV9LHhodG1sOntpZDoxMyxjaGVjazplPT4iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI9PT1lfSx4bXBtZXRhOntpZDoxNCxjaGVjazplPT4iaHR0cDovL25zLmFkb2JlLmNvbS94bXBtZXRhLyI9PT1lfX0sSW49e3B0OmU9PmUsY206ZT0+ZS8yLjU0KjcyLG1tOmU9PmUvMjUuNCo3MixpbjplPT43MiplLHB4OmU9PmV9LGNuPS8oWystXT9cZCtcLj9cZCopKC4qKS87ZnVuY3Rpb24gc3RyaXBRdW90ZXMoZSl7cmV0dXJuIGUuc3RhcnRzV2l0aCgiJyIpfHxlLnN0YXJ0c1dpdGgoJyInKT9lLnNsaWNlKDEsLTEpOmV9ZnVuY3Rpb24gZ2V0SW50ZWdlcih7ZGF0YTplLGRlZmF1bHRWYWx1ZTp0LHZhbGlkYXRlOml9KXtpZighZSlyZXR1cm4gdDtlPWUudHJpbSgpO2NvbnN0IGE9cGFyc2VJbnQoZSwxMCk7cmV0dXJuIWlzTmFOKGEpJiZpKGEpP2E6dH1mdW5jdGlvbiBnZXRGbG9hdCh7ZGF0YTplLGRlZmF1bHRWYWx1ZTp0LHZhbGlkYXRlOml9KXtpZighZSlyZXR1cm4gdDtlPWUudHJpbSgpO2NvbnN0IGE9cGFyc2VGbG9hdChlKTtyZXR1cm4haXNOYU4oYSkmJmkoYSk/YTp0fWZ1bmN0aW9uIGdldEtleXdvcmQoe2RhdGE6ZSxkZWZhdWx0VmFsdWU6dCx2YWxpZGF0ZTppfSl7cmV0dXJuIGUmJmkoZT1lLnRyaW0oKSk/ZTp0fWZ1bmN0aW9uIGdldFN0cmluZ09wdGlvbihlLHQpe3JldHVybiBnZXRLZXl3b3JkKHtkYXRhOmUsZGVmYXVsdFZhbHVlOnRbMF0sdmFsaWRhdGU6ZT0+dC5pbmNsdWRlcyhlKX0pfWZ1bmN0aW9uIGdldE1lYXN1cmVtZW50KGUsdD0iMCIpe3R8fD0iMCI7aWYoIWUpcmV0dXJuIGdldE1lYXN1cmVtZW50KHQpO2NvbnN0IGk9ZS50cmltKCkubWF0Y2goY24pO2lmKCFpKXJldHVybiBnZXRNZWFzdXJlbWVudCh0KTtjb25zdFssYSxzXT1pLHI9cGFyc2VGbG9hdChhKTtpZihpc05hTihyKSlyZXR1cm4gZ2V0TWVhc3VyZW1lbnQodCk7aWYoMD09PXIpcmV0dXJuIDA7Y29uc3Qgbj1JbltzXTtyZXR1cm4gbj9uKHIpOnJ9ZnVuY3Rpb24gZ2V0UmF0aW8oZSl7aWYoIWUpcmV0dXJue251bToxLGRlbjoxfTtjb25zdCB0PWUudHJpbSgpLnNwbGl0KC9ccyo6XHMqLykubWFwKChlPT5wYXJzZUZsb2F0KGUpKSkuZmlsdGVyKChlPT4haXNOYU4oZSkpKTsxPT09dC5sZW5ndGgmJnQucHVzaCgxKTtpZigwPT09dC5sZW5ndGgpcmV0dXJue251bToxLGRlbjoxfTtjb25zdFtpLGFdPXQ7cmV0dXJue251bTppLGRlbjphfX1mdW5jdGlvbiBnZXRSZWxldmFudChlKXtyZXR1cm4gZT9lLnRyaW0oKS5zcGxpdCgvXHMrLykubWFwKChlPT4oe2V4Y2x1ZGVkOiItIj09PWVbMF0sdmlld25hbWU6ZS5zdWJzdHJpbmcoMSl9KSkpOltdfWNsYXNzIEhUTUxSZXN1bHR7c3RhdGljIGdldCBGQUlMVVJFKCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJGQUlMVVJFIixuZXcgSFRNTFJlc3VsdCghMSxudWxsLG51bGwsbnVsbCkpfXN0YXRpYyBnZXQgRU1QVFkoKXtyZXR1cm4gc2hhZG93KHRoaXMsIkVNUFRZIixuZXcgSFRNTFJlc3VsdCghMCxudWxsLG51bGwsbnVsbCkpfWNvbnN0cnVjdG9yKGUsdCxpLGEpe3RoaXMuc3VjY2Vzcz1lO3RoaXMuaHRtbD10O3RoaXMuYmJveD1pO3RoaXMuYnJlYWtOb2RlPWF9aXNCcmVhaygpe3JldHVybiEhdGhpcy5icmVha05vZGV9c3RhdGljIGJyZWFrTm9kZShlKXtyZXR1cm4gbmV3IEhUTUxSZXN1bHQoITEsbnVsbCxudWxsLGUpfXN0YXRpYyBzdWNjZXNzKGUsdD1udWxsKXtyZXR1cm4gbmV3IEhUTUxSZXN1bHQoITAsZSx0LG51bGwpfX1jbGFzcyBGb250RmluZGVye2NvbnN0cnVjdG9yKGUpe3RoaXMuZm9udHM9bmV3IE1hcDt0aGlzLmNhY2hlPW5ldyBNYXA7dGhpcy53YXJuZWQ9bmV3IFNldDt0aGlzLmRlZmF1bHRGb250PW51bGw7dGhpcy5hZGQoZSl9YWRkKGUsdD1udWxsKXtmb3IoY29uc3QgdCBvZiBlKXRoaXMuYWRkUGRmRm9udCh0KTtmb3IoY29uc3QgZSBvZiB0aGlzLmZvbnRzLnZhbHVlcygpKWUucmVndWxhcnx8KGUucmVndWxhcj1lLml0YWxpY3x8ZS5ib2xkfHxlLmJvbGRpdGFsaWMpO2lmKCF0fHwwPT09dC5zaXplKXJldHVybjtjb25zdCBpPXRoaXMuZm9udHMuZ2V0KCJQZGZKUy1GYWxsYmFjay1QZGZKUy1YRkEiKTtmb3IoY29uc3QgZSBvZiB0KXRoaXMuZm9udHMuc2V0KGUsaSl9YWRkUGRmRm9udChlKXtjb25zdCB0PWUuY3NzRm9udEluZm8saT10LmZvbnRGYW1pbHk7bGV0IGE9dGhpcy5mb250cy5nZXQoaSk7aWYoIWEpe2E9T2JqZWN0LmNyZWF0ZShudWxsKTt0aGlzLmZvbnRzLnNldChpLGEpO3RoaXMuZGVmYXVsdEZvbnR8fCh0aGlzLmRlZmF1bHRGb250PWEpfWxldCBzPSIiO2NvbnN0IHI9cGFyc2VGbG9hdCh0LmZvbnRXZWlnaHQpOzAhPT1wYXJzZUZsb2F0KHQuaXRhbGljQW5nbGUpP3M9cj49NzAwPyJib2xkaXRhbGljIjoiaXRhbGljIjpyPj03MDAmJihzPSJib2xkIik7aWYoIXMpeyhlLm5hbWUuaW5jbHVkZXMoIkJvbGQiKXx8ZS5wc05hbWU/LmluY2x1ZGVzKCJCb2xkIikpJiYocz0iYm9sZCIpOyhlLm5hbWUuaW5jbHVkZXMoIkl0YWxpYyIpfHxlLm5hbWUuZW5kc1dpdGgoIkl0Iil8fGUucHNOYW1lPy5pbmNsdWRlcygiSXRhbGljIil8fGUucHNOYW1lPy5lbmRzV2l0aCgiSXQiKSkmJihzKz0iaXRhbGljIil9c3x8KHM9InJlZ3VsYXIiKTthW3NdPWV9Z2V0RGVmYXVsdCgpe3JldHVybiB0aGlzLmRlZmF1bHRGb250fWZpbmQoZSx0PSEwKXtsZXQgaT10aGlzLmZvbnRzLmdldChlKXx8dGhpcy5jYWNoZS5nZXQoZSk7aWYoaSlyZXR1cm4gaTtjb25zdCBhPS8sfC18X3wgfGJvbGRpdGFsaWN8Ym9sZHxpdGFsaWN8cmVndWxhcnxpdC9naTtsZXQgcz1lLnJlcGxhY2VBbGwoYSwiIik7aT10aGlzLmZvbnRzLmdldChzKTtpZihpKXt0aGlzLmNhY2hlLnNldChlLGkpO3JldHVybiBpfXM9cy50b0xvd2VyQ2FzZSgpO2NvbnN0IHI9W107Zm9yKGNvbnN0W2UsdF1vZiB0aGlzLmZvbnRzLmVudHJpZXMoKSllLnJlcGxhY2VBbGwoYSwiIikudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHMpJiZyLnB1c2godCk7aWYoMD09PXIubGVuZ3RoKWZvcihjb25zdFssZV1vZiB0aGlzLmZvbnRzLmVudHJpZXMoKSllLnJlZ3VsYXIubmFtZT8ucmVwbGFjZUFsbChhLCIiKS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgocykmJnIucHVzaChlKTtpZigwPT09ci5sZW5ndGgpe3M9cy5yZXBsYWNlQWxsKC9wc210fG10L2dpLCIiKTtmb3IoY29uc3RbZSx0XW9mIHRoaXMuZm9udHMuZW50cmllcygpKWUucmVwbGFjZUFsbChhLCIiKS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgocykmJnIucHVzaCh0KX1pZigwPT09ci5sZW5ndGgpZm9yKGNvbnN0IGUgb2YgdGhpcy5mb250cy52YWx1ZXMoKSllLnJlZ3VsYXIubmFtZT8ucmVwbGFjZUFsbChhLCIiKS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgocykmJnIucHVzaChlKTtpZihyLmxlbmd0aD49MSl7MSE9PXIubGVuZ3RoJiZ0JiZ3YXJuKGBYRkEgLSBUb28gbWFueSBjaG9pY2VzIHRvIGd1ZXNzIHRoZSBjb3JyZWN0IGZvbnQ6ICR7ZX1gKTt0aGlzLmNhY2hlLnNldChlLHJbMF0pO3JldHVybiByWzBdfWlmKHQmJiF0aGlzLndhcm5lZC5oYXMoZSkpe3RoaXMud2FybmVkLmFkZChlKTt3YXJuKGBYRkEgLSBDYW5ub3QgZmluZCB0aGUgZm9udDogJHtlfWApfXJldHVybiBudWxsfX1mdW5jdGlvbiBzZWxlY3RGb250KGUsdCl7cmV0dXJuIml0YWxpYyI9PT1lLnBvc3R1cmU/ImJvbGQiPT09ZS53ZWlnaHQ/dC5ib2xkaXRhbGljOnQuaXRhbGljOiJib2xkIj09PWUud2VpZ2h0P3QuYm9sZDp0LnJlZ3VsYXJ9Y2xhc3MgRm9udEluZm97Y29uc3RydWN0b3IoZSx0LGksYSl7dGhpcy5saW5lSGVpZ2h0PWk7dGhpcy5wYXJhTWFyZ2luPXR8fHt0b3A6MCxib3R0b206MCxsZWZ0OjAscmlnaHQ6MH07aWYoIWUpe1t0aGlzLnBkZkZvbnQsdGhpcy54ZmFGb250XT10aGlzLmRlZmF1bHRGb250KGEpO3JldHVybn10aGlzLnhmYUZvbnQ9e3R5cGVmYWNlOmUudHlwZWZhY2UscG9zdHVyZTplLnBvc3R1cmUsd2VpZ2h0OmUud2VpZ2h0LHNpemU6ZS5zaXplLGxldHRlclNwYWNpbmc6ZS5sZXR0ZXJTcGFjaW5nfTtjb25zdCBzPWEuZmluZChlLnR5cGVmYWNlKTtpZihzKXt0aGlzLnBkZkZvbnQ9c2VsZWN0Rm9udChlLHMpO3RoaXMucGRmRm9udHx8KFt0aGlzLnBkZkZvbnQsdGhpcy54ZmFGb250XT10aGlzLmRlZmF1bHRGb250KGEpKX1lbHNlW3RoaXMucGRmRm9udCx0aGlzLnhmYUZvbnRdPXRoaXMuZGVmYXVsdEZvbnQoYSl9ZGVmYXVsdEZvbnQoZSl7Y29uc3QgdD1lLmZpbmQoIkhlbHZldGljYSIsITEpfHxlLmZpbmQoIk15cmlhZCBQcm8iLCExKXx8ZS5maW5kKCJBcmlhbCIsITEpfHxlLmdldERlZmF1bHQoKTtpZih0Py5yZWd1bGFyKXtjb25zdCBlPXQucmVndWxhcjtyZXR1cm5bZSx7dHlwZWZhY2U6ZS5jc3NGb250SW5mby5mb250RmFtaWx5LHBvc3R1cmU6Im5vcm1hbCIsd2VpZ2h0OiJub3JtYWwiLHNpemU6MTAsbGV0dGVyU3BhY2luZzowfV19cmV0dXJuW251bGwse3R5cGVmYWNlOiJDb3VyaWVyIixwb3N0dXJlOiJub3JtYWwiLHdlaWdodDoibm9ybWFsIixzaXplOjEwLGxldHRlclNwYWNpbmc6MH1dfX1jbGFzcyBGb250U2VsZWN0b3J7Y29uc3RydWN0b3IoZSx0LGksYSl7dGhpcy5mb250RmluZGVyPWE7dGhpcy5zdGFjaz1bbmV3IEZvbnRJbmZvKGUsdCxpLGEpXX1wdXNoRGF0YShlLHQsaSl7Y29uc3QgYT10aGlzLnN0YWNrLmF0KC0xKTtmb3IoY29uc3QgdCBvZlsidHlwZWZhY2UiLCJwb3N0dXJlIiwid2VpZ2h0Iiwic2l6ZSIsImxldHRlclNwYWNpbmciXSllW3RdfHwoZVt0XT1hLnhmYUZvbnRbdF0pO2Zvcihjb25zdCBlIG9mWyJ0b3AiLCJib3R0b20iLCJsZWZ0IiwicmlnaHQiXSlpc05hTih0W2VdKSYmKHRbZV09YS5wYXJhTWFyZ2luW2VdKTtjb25zdCBzPW5ldyBGb250SW5mbyhlLHQsaXx8YS5saW5lSGVpZ2h0LHRoaXMuZm9udEZpbmRlcik7cy5wZGZGb250fHwocy5wZGZGb250PWEucGRmRm9udCk7dGhpcy5zdGFjay5wdXNoKHMpfXBvcEZvbnQoKXt0aGlzLnN0YWNrLnBvcCgpfXRvcEZvbnQoKXtyZXR1cm4gdGhpcy5zdGFjay5hdCgtMSl9fWNsYXNzIFRleHRNZWFzdXJle2NvbnN0cnVjdG9yKGUsdCxpLGEpe3RoaXMuZ2x5cGhzPVtdO3RoaXMuZm9udFNlbGVjdG9yPW5ldyBGb250U2VsZWN0b3IoZSx0LGksYSk7dGhpcy5leHRyYUhlaWdodD0wfXB1c2hEYXRhKGUsdCxpKXt0aGlzLmZvbnRTZWxlY3Rvci5wdXNoRGF0YShlLHQsaSl9cG9wRm9udChlKXtyZXR1cm4gdGhpcy5mb250U2VsZWN0b3IucG9wRm9udCgpfWFkZFBhcmEoKXtjb25zdCBlPXRoaXMuZm9udFNlbGVjdG9yLnRvcEZvbnQoKTt0aGlzLmV4dHJhSGVpZ2h0Kz1lLnBhcmFNYXJnaW4udG9wK2UucGFyYU1hcmdpbi5ib3R0b219YWRkU3RyaW5nKGUpe2lmKCFlKXJldHVybjtjb25zdCB0PXRoaXMuZm9udFNlbGVjdG9yLnRvcEZvbnQoKSxpPXQueGZhRm9udC5zaXplO2lmKHQucGRmRm9udCl7Y29uc3QgYT10LnhmYUZvbnQubGV0dGVyU3BhY2luZyxzPXQucGRmRm9udCxyPXMubGluZUhlaWdodHx8MS4yLG49dC5saW5lSGVpZ2h0fHxNYXRoLm1heCgxLjIscikqaSxvPXItKHZvaWQgMD09PXMubGluZUdhcD8uMjpzLmxpbmVHYXApLGc9TWF0aC5tYXgoMSxvKSppLGM9aS8xZTMsaD1zLmRlZmF1bHRXaWR0aHx8cy5jaGFyc1RvR2x5cGhzKCIgIilbMF0ud2lkdGg7Zm9yKGNvbnN0IHQgb2YgZS5zcGxpdCgvW1x1MjAyOVxuXS8pKXtjb25zdCBlPXMuZW5jb2RlU3RyaW5nKHQpLmpvaW4oIiIpLGk9cy5jaGFyc1RvR2x5cGhzKGUpO2Zvcihjb25zdCBlIG9mIGkpe2NvbnN0IHQ9ZS53aWR0aHx8aDt0aGlzLmdseXBocy5wdXNoKFt0KmMrYSxuLGcsZS51bmljb2RlLCExXSl9dGhpcy5nbHlwaHMucHVzaChbMCwwLDAsIlxuIiwhMF0pfXRoaXMuZ2x5cGhzLnBvcCgpfWVsc2V7Zm9yKGNvbnN0IHQgb2YgZS5zcGxpdCgvW1x1MjAyOVxuXS8pKXtmb3IoY29uc3QgZSBvZiB0LnNwbGl0KCIiKSl0aGlzLmdseXBocy5wdXNoKFtpLDEuMippLGksZSwhMV0pO3RoaXMuZ2x5cGhzLnB1c2goWzAsMCwwLCJcbiIsITBdKX10aGlzLmdseXBocy5wb3AoKX19Y29tcHV0ZShlKXtsZXQgdD0tMSxpPTAsYT0wLHM9MCxyPTAsbj0wLG89ITEsZz0hMDtmb3IobGV0IGM9MCxoPXRoaXMuZ2x5cGhzLmxlbmd0aDtjPGg7YysrKXtjb25zdFtoLGwsQyxRLEVdPXRoaXMuZ2x5cGhzW2NdLHU9IiAiPT09USxkPWc/QzpsO2lmKEUpe2E9TWF0aC5tYXgoYSxyKTtyPTA7cys9bjtuPWQ7dD0tMTtpPTA7Zz0hMX1lbHNlIGlmKHUpaWYocitoPmUpe2E9TWF0aC5tYXgoYSxyKTtyPTA7cys9bjtuPWQ7dD0tMTtpPTA7bz0hMDtnPSExfWVsc2V7bj1NYXRoLm1heChkLG4pO2k9cjtyKz1oO3Q9Y31lbHNlIGlmKHIraD5lKXtzKz1uO249ZDtpZigtMSE9PXQpe2M9dDthPU1hdGgubWF4KGEsaSk7cj0wO3Q9LTE7aT0wfWVsc2V7YT1NYXRoLm1heChhLHIpO3I9aH1vPSEwO2c9ITF9ZWxzZXtyKz1oO249TWF0aC5tYXgoZCxuKX19YT1NYXRoLm1heChhLHIpO3MrPW4rdGhpcy5leHRyYUhlaWdodDtyZXR1cm57d2lkdGg6MS4wMiphLGhlaWdodDpzLGlzQnJva2VuOm99fX1jb25zdCBobj0vXlteLltdKy8sbG49L15bXlxdXSsvLENuPXtkb3Q6MCxkb3REb3Q6MSxkb3RIYXNoOjIsZG90QnJhY2tldDozLGRvdFBhcmVuOjR9LEJuPW5ldyBNYXAoW1siJGRhdGEiLChlLHQpPT5lLmRhdGFzZXRzP2UuZGF0YXNldHMuZGF0YTplXSxbIiRyZWNvcmQiLChlLHQpPT4oZS5kYXRhc2V0cz9lLmRhdGFzZXRzLmRhdGE6ZSlbRXJdKClbMF1dLFsiJHRlbXBsYXRlIiwoZSx0KT0+ZS50ZW1wbGF0ZV0sWyIkY29ubmVjdGlvblNldCIsKGUsdCk9PmUuY29ubmVjdGlvblNldF0sWyIkZm9ybSIsKGUsdCk9PmUuZm9ybV0sWyIkbGF5b3V0IiwoZSx0KT0+ZS5sYXlvdXRdLFsiJGhvc3QiLChlLHQpPT5lLmhvc3RdLFsiJGRhdGFXaW5kb3ciLChlLHQpPT5lLmRhdGFXaW5kb3ddLFsiJGV2ZW50IiwoZSx0KT0+ZS5ldmVudF0sWyIhIiwoZSx0KT0+ZS5kYXRhc2V0c10sWyIkeGZhIiwoZSx0KT0+ZV0sWyJ4ZmEiLChlLHQpPT5lXSxbIiQiLChlLHQpPT50XV0pLFFuPW5ldyBXZWFrTWFwO2Z1bmN0aW9uIHBhcnNlRXhwcmVzc2lvbihlLHQsaT0hMCl7bGV0IGE9ZS5tYXRjaChobik7aWYoIWEpcmV0dXJuIG51bGw7bGV0W3NdPWE7Y29uc3Qgcj1be25hbWU6cyxjYWNoZU5hbWU6Ii4iK3MsaW5kZXg6MCxqczpudWxsLGZvcm1DYWxjOm51bGwsb3BlcmF0b3I6Q24uZG90fV07bGV0IG49cy5sZW5ndGg7Zm9yKDtuPGUubGVuZ3RoOyl7Y29uc3QgZz1uO2lmKCJbIj09PWUuY2hhckF0KG4rKykpe2E9ZS5zbGljZShuKS5tYXRjaChsbik7aWYoIWEpe3dhcm4oIlhGQSAtIEludmFsaWQgaW5kZXggaW4gU09NIGV4cHJlc3Npb24iKTtyZXR1cm4gbnVsbH1yLmF0KC0xKS5pbmRleD0iKiI9PT0obz0obz1hWzBdKS50cmltKCkpPzEvMDpwYXJzZUludChvLDEwKXx8MDtuKz1hWzBdLmxlbmd0aCsxO2NvbnRpbnVlfWxldCBjO3N3aXRjaChlLmNoYXJBdChuKSl7Y2FzZSIuIjppZighdClyZXR1cm4gbnVsbDtuKys7Yz1Dbi5kb3REb3Q7YnJlYWs7Y2FzZSIjIjpuKys7Yz1Dbi5kb3RIYXNoO2JyZWFrO2Nhc2UiWyI6aWYoaSl7d2FybigiWEZBIC0gU09NIGV4cHJlc3Npb24gY29udGFpbnMgYSBGb3JtQ2FsYyBzdWJleHByZXNzaW9uIHdoaWNoIGlzIG5vdCBzdXBwb3J0ZWQgZm9yIG5vdy4iKTtyZXR1cm4gbnVsbH1jPUNuLmRvdEJyYWNrZXQ7YnJlYWs7Y2FzZSIoIjppZihpKXt3YXJuKCJYRkEgLSBTT00gZXhwcmVzc2lvbiBjb250YWlucyBhIEphdmFTY3JpcHQgc3ViZXhwcmVzc2lvbiB3aGljaCBpcyBub3Qgc3VwcG9ydGVkIGZvciBub3cuIik7cmV0dXJuIG51bGx9Yz1Dbi5kb3RQYXJlbjticmVhaztkZWZhdWx0OmM9Q24uZG90fWE9ZS5zbGljZShuKS5tYXRjaChobik7aWYoIWEpYnJlYWs7W3NdPWE7bis9cy5sZW5ndGg7ci5wdXNoKHtuYW1lOnMsY2FjaGVOYW1lOmUuc2xpY2UoZyxuKSxvcGVyYXRvcjpjLGluZGV4OjAsanM6bnVsbCxmb3JtQ2FsYzpudWxsfSl9dmFyIG87cmV0dXJuIHJ9ZnVuY3Rpb24gc2VhcmNoTm9kZShlLHQsaSxhPSEwLHM9ITApe2NvbnN0IHI9cGFyc2VFeHByZXNzaW9uKGksYSk7aWYoIXIpcmV0dXJuIG51bGw7Y29uc3Qgbj1Cbi5nZXQoclswXS5uYW1lKTtsZXQgbyxnPTA7aWYobil7bz0hMDtlPVtuKGUsdCldO2c9MX1lbHNle289bnVsbD09PXQ7ZT1bdHx8ZV19Zm9yKGxldCBpPXIubGVuZ3RoO2c8aTtnKyspe2NvbnN0e25hbWU6aSxjYWNoZU5hbWU6YSxvcGVyYXRvcjpuLGluZGV4OmN9PXJbZ10saD1bXTtmb3IoY29uc3QgdCBvZiBlKXtpZighdC5pc1hGQU9iamVjdCljb250aW51ZTtsZXQgZSxyO2lmKHMpe3I9UW4uZ2V0KHQpO2lmKCFyKXtyPW5ldyBNYXA7UW4uc2V0KHQscil9ZT1yLmdldChhKX1pZighZSl7c3dpdGNoKG4pe2Nhc2UgQ24uZG90OmU9dFtjcl0oaSwhMSk7YnJlYWs7Y2FzZSBDbi5kb3REb3Q6ZT10W2NyXShpLCEwKTticmVhaztjYXNlIENuLmRvdEhhc2g6ZT10W0lyXShpKTtlPWUuaXNYRkFPYmplY3RBcnJheT9lLmNoaWxkcmVuOltlXX1zJiZyLnNldChhLGUpfWUubGVuZ3RoPjAmJmgucHVzaChlKX1pZigwIT09aC5sZW5ndGh8fG98fDAhPT1nKWU9aXNGaW5pdGUoYyk/aC5maWx0ZXIoKGU9PmM8ZS5sZW5ndGgpKS5tYXAoKGU9PmVbY10pKTpoLmZsYXQoKTtlbHNle2NvbnN0IGk9dFtwcl0oKTtpZighKHQ9aSkpcmV0dXJuIG51bGw7Zz0tMTtlPVt0XX19cmV0dXJuIDA9PT1lLmxlbmd0aD9udWxsOmV9ZnVuY3Rpb24gY3JlYXRlRGF0YU5vZGUoZSx0LGkpe2NvbnN0IGE9cGFyc2VFeHByZXNzaW9uKGkpO2lmKCFhKXJldHVybiBudWxsO2lmKGEuc29tZSgoZT0+ZS5vcGVyYXRvcj09PUNuLmRvdERvdCkpKXJldHVybiBudWxsO2NvbnN0IHM9Qm4uZ2V0KGFbMF0ubmFtZSk7bGV0IHI9MDtpZihzKXtlPXMoZSx0KTtyPTF9ZWxzZSBlPXR8fGU7Zm9yKGxldCB0PWEubGVuZ3RoO3I8dDtyKyspe2NvbnN0e25hbWU6dCxvcGVyYXRvcjppLGluZGV4OnN9PWFbcl07aWYoIWlzRmluaXRlKHMpKXthW3JdLmluZGV4PTA7cmV0dXJuIGUuY3JlYXRlTm9kZXMoYS5zbGljZShyKSl9bGV0IG47c3dpdGNoKGkpe2Nhc2UgQ24uZG90Om49ZVtjcl0odCwhMSk7YnJlYWs7Y2FzZSBDbi5kb3REb3Q6bj1lW2NyXSh0LCEwKTticmVhaztjYXNlIENuLmRvdEhhc2g6bj1lW0lyXSh0KTtuPW4uaXNYRkFPYmplY3RBcnJheT9uLmNoaWxkcmVuOltuXX1pZigwPT09bi5sZW5ndGgpcmV0dXJuIGUuY3JlYXRlTm9kZXMoYS5zbGljZShyKSk7aWYoIShzPG4ubGVuZ3RoKSl7YVtyXS5pbmRleD1zLW4ubGVuZ3RoO3JldHVybiBlLmNyZWF0ZU5vZGVzKGEuc2xpY2UocikpfXtjb25zdCB0PW5bc107aWYoIXQuaXNYRkFPYmplY3Qpe3dhcm4oIlhGQSAtIENhbm5vdCBjcmVhdGUgYSBub2RlLiIpO3JldHVybiBudWxsfWU9dH19cmV0dXJuIG51bGx9Y29uc3QgRW49U3ltYm9sKCksdW49U3ltYm9sKCksZG49U3ltYm9sKCksZm49U3ltYm9sKCJfY2hpbGRyZW4iKSxwbj1TeW1ib2woKSxtbj1TeW1ib2woKSx5bj1TeW1ib2woKSx3bj1TeW1ib2woKSxibj1TeW1ib2woKSxEbj1TeW1ib2woKSxGbj1TeW1ib2woKSxTbj1TeW1ib2woKSxrbj1TeW1ib2woKSxSbj1TeW1ib2woInBhcmVudCIpLE5uPVN5bWJvbCgpLEduPVN5bWJvbCgpLHhuPVN5bWJvbCgpO2xldCBNbj0wO2NvbnN0IFVuPWduLmRhdGFzZXRzLmlkO2NsYXNzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlLHQsaT0hMSl7dGhpc1tIcl09ZTt0aGlzW1lyXT10O3RoaXNbRm5dPWk7dGhpc1tSbl09bnVsbDt0aGlzW2ZuXT1bXTt0aGlzW25uXT1gJHt0fSR7TW4rK31gO3RoaXNbeXJdPW51bGx9Z2V0IGlzWEZBT2JqZWN0KCl7cmV0dXJuITB9Z2V0IGlzWEZBT2JqZWN0QXJyYXkoKXtyZXR1cm4hMX1jcmVhdGVOb2RlcyhlKXtsZXQgdD10aGlzLGk9bnVsbDtmb3IoY29uc3R7bmFtZTphLGluZGV4OnN9b2YgZSl7Zm9yKGxldCBlPTAscj1pc0Zpbml0ZShzKT9zOjA7ZTw9cjtlKyspe2NvbnN0IGU9dFtIcl09PT1Vbj8tMTp0W0hyXTtpPW5ldyBYbWxPYmplY3QoZSxhKTt0W2pzXShpKX10PWl9cmV0dXJuIGl9W0tyXShlKXtpZighdGhpc1tGbl18fCF0aGlzW1RyXShlKSlyZXR1cm4hMTtjb25zdCB0PWVbWXJdLGk9dGhpc1t0XTtpZighKGkgaW5zdGFuY2VvZiBYRkFPYmplY3RBcnJheSkpe251bGwhPT1pJiZ0aGlzW1hyXShpKTt0aGlzW3RdPWU7dGhpc1tqc10oZSk7cmV0dXJuITB9aWYoaS5wdXNoKGUpKXt0aGlzW2pzXShlKTtyZXR1cm4hMH1sZXQgYT0iIjt0aGlzLmlkP2E9YCAoaWQ6ICR7dGhpcy5pZH0pYDp0aGlzLm5hbWUmJihhPWAgKG5hbWU6ICR7dGhpcy5uYW1lfSAke3RoaXMuaC52YWx1ZX0pYCk7d2FybihgWEZBIC0gbm9kZSAiJHt0aGlzW1lyXX0iJHthfSBoYXMgYWxyZWFkeSBlbm91Z2ggIiR7dH0iIWApO3JldHVybiExfVtUcl0oZSl7cmV0dXJuIHRoaXMuaGFzT3duUHJvcGVydHkoZVtZcl0pJiZlW0hyXT09PXRoaXNbSHJdfVtHcl0oKXtyZXR1cm4hMX1bV3NdKCl7cmV0dXJuITF9W1NyXSgpe3JldHVybiExfVtrcl0oKXtyZXR1cm4hMX1bUHJdKCl7dGhpcy5wYXJhJiZ0aGlzW21yXSgpW2FyXS5wYXJhU3RhY2sucG9wKCl9W1dyXSgpe3RoaXNbbXJdKClbYXJdLnBhcmFTdGFjay5wdXNoKHRoaXMucGFyYSl9W3pyXShlKXt0aGlzLmlkJiZ0aGlzW0hyXT09PWduLnRlbXBsYXRlLmlkJiZlLnNldCh0aGlzLmlkLHRoaXMpfVttcl0oKXtyZXR1cm4gdGhpc1t5cl0udGVtcGxhdGV9W3hyXSgpe3JldHVybiExfVtNcl0oKXtyZXR1cm4hMX1banNdKGUpe2VbUm5dPXRoaXM7dGhpc1tmbl0ucHVzaChlKTshZVt5cl0mJnRoaXNbeXJdJiYoZVt5cl09dGhpc1t5cl0pfVtYcl0oZSl7Y29uc3QgdD10aGlzW2ZuXS5pbmRleE9mKGUpO3RoaXNbZm5dLnNwbGljZSh0LDEpfVt3cl0oKXtyZXR1cm4gdGhpcy5oYXNPd25Qcm9wZXJ0eSgidmFsdWUiKX1bJHJdKGUpe31bcXJdKGUpe31bc3JdKCl7fVtWc10oZSl7ZGVsZXRlIHRoaXNbRm5dO2lmKHRoaXNbX3NdKXtlLmNsZWFuKHRoaXNbX3NdKTtkZWxldGUgdGhpc1tfc119fVtEcl0oZSl7cmV0dXJuIHRoaXNbZm5dLmluZGV4T2YoZSl9W0ZyXShlLHQpe3RbUm5dPXRoaXM7dGhpc1tmbl0uc3BsaWNlKGUsMCx0KTshdFt5cl0mJnRoaXNbeXJdJiYodFt5cl09dGhpc1t5cl0pfVtVcl0oKXtyZXR1cm4hdGhpcy5uYW1lfVtKcl0oKXtyZXR1cm4iIn1bZW5dKCl7cmV0dXJuIDA9PT10aGlzW2ZuXS5sZW5ndGg/dGhpc1tlcl06dGhpc1tmbl0ubWFwKChlPT5lW2VuXSgpKSkuam9pbigiIil9Z2V0W2RuXSgpe2NvbnN0IGU9T2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpO2lmKCFlLl9hdHRyaWJ1dGVzKXtjb25zdCB0PWUuX2F0dHJpYnV0ZXM9bmV3IFNldDtmb3IoY29uc3QgZSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSl7aWYobnVsbD09PXRoaXNbZV18fHRoaXNbZV1pbnN0YW5jZW9mIFhGQU9iamVjdHx8dGhpc1tlXWluc3RhbmNlb2YgWEZBT2JqZWN0QXJyYXkpYnJlYWs7dC5hZGQoZSl9fXJldHVybiBzaGFkb3codGhpcyxkbixlLl9hdHRyaWJ1dGVzKX1bTnJdKGUpe2xldCB0PXRoaXM7Zm9yKDt0Oyl7aWYodD09PWUpcmV0dXJuITA7dD10W3ByXSgpfXJldHVybiExfVtwcl0oKXtyZXR1cm4gdGhpc1tSbl19W2ZyXSgpe3JldHVybiB0aGlzW3ByXSgpfVtFcl0oZT1udWxsKXtyZXR1cm4gZT90aGlzW2VdOnRoaXNbZm5dfVtpcl0oKXtjb25zdCBlPU9iamVjdC5jcmVhdGUobnVsbCk7dGhpc1tlcl0mJihlLiRjb250ZW50PXRoaXNbZXJdKTtmb3IoY29uc3QgdCBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSl7Y29uc3QgaT10aGlzW3RdO251bGwhPT1pJiYoaSBpbnN0YW5jZW9mIFhGQU9iamVjdD9lW3RdPWlbaXJdKCk6aSBpbnN0YW5jZW9mIFhGQU9iamVjdEFycmF5P2kuaXNFbXB0eSgpfHwoZVt0XT1pLmR1bXAoKSk6ZVt0XT1pKX1yZXR1cm4gZX1bcm5dKCl7cmV0dXJuIG51bGx9W2FuXSgpe3JldHVybiBIVE1MUmVzdWx0LkVNUFRZfSpbdXJdKCl7Zm9yKGNvbnN0IGUgb2YgdGhpc1tFcl0oKSl5aWVsZCBlfSpbd25dKGUsdCl7Zm9yKGNvbnN0IGkgb2YgdGhpc1t1cl0oKSlpZighZXx8dD09PWUuaGFzKGlbWXJdKSl7Y29uc3QgZT10aGlzW2dyXSgpLHQ9aVthbl0oZSk7dC5zdWNjZXNzfHwodGhpc1thcl0uZmFpbGluZ05vZGU9aSk7eWllbGQgdH19W3JyXSgpe3JldHVybiBudWxsfVtYc10oZSx0KXt0aGlzW2FyXS5jaGlsZHJlbi5wdXNoKGUpfVtncl0oKXt9W1pzXSh7ZmlsdGVyOmU9bnVsbCxpbmNsdWRlOnQ9ITB9KXtpZih0aGlzW2FyXS5nZW5lcmF0b3Ipe2NvbnN0IGU9dGhpc1tncl0oKSx0PXRoaXNbYXJdLmZhaWxpbmdOb2RlW2FuXShlKTtpZighdC5zdWNjZXNzKXJldHVybiB0O3QuaHRtbCYmdGhpc1tYc10odC5odG1sLHQuYmJveCk7ZGVsZXRlIHRoaXNbYXJdLmZhaWxpbmdOb2RlfWVsc2UgdGhpc1thcl0uZ2VuZXJhdG9yPXRoaXNbd25dKGUsdCk7Zm9yKDs7KXtjb25zdCBlPXRoaXNbYXJdLmdlbmVyYXRvci5uZXh0KCk7aWYoZS5kb25lKWJyZWFrO2NvbnN0IHQ9ZS52YWx1ZTtpZighdC5zdWNjZXNzKXJldHVybiB0O3QuaHRtbCYmdGhpc1tYc10odC5odG1sLHQuYmJveCl9dGhpc1thcl0uZ2VuZXJhdG9yPW51bGw7cmV0dXJuIEhUTUxSZXN1bHQuRU1QVFl9W19yXShlKXt0aGlzW0duXT1uZXcgU2V0KE9iamVjdC5rZXlzKGUpKX1bRG5dKGUpe2NvbnN0IHQ9dGhpc1tkbl0saT10aGlzW0duXTtyZXR1cm5bLi4uZV0uZmlsdGVyKChlPT50LmhhcyhlKSYmIWkuaGFzKGUpKSl9W1pyXShlLHQ9bmV3IFNldCl7Zm9yKGNvbnN0IGkgb2YgdGhpc1tmbl0paVtObl0oZSx0KX1bTm5dKGUsdCl7Y29uc3QgaT10aGlzW2JuXShlLHQpO2k/dGhpc1tFbl0oaSxlLHQpOnRoaXNbWnJdKGUsdCl9W2JuXShlLHQpe2NvbnN0e3VzZTppLHVzZWhyZWY6YX09dGhpcztpZighaSYmIWEpcmV0dXJuIG51bGw7bGV0IHM9bnVsbCxyPW51bGwsbj1udWxsLG89aTtpZihhKXtvPWE7YS5zdGFydHNXaXRoKCIjc29tKCIpJiZhLmVuZHNXaXRoKCIpIik/cj1hLnNsaWNlKDUsLTEpOmEuc3RhcnRzV2l0aCgiLiNzb20oIikmJmEuZW5kc1dpdGgoIikiKT9yPWEuc2xpY2UoNiwtMSk6YS5zdGFydHNXaXRoKCIjIik/bj1hLnNsaWNlKDEpOmEuc3RhcnRzV2l0aCgiLiMiKSYmKG49YS5zbGljZSgyKSl9ZWxzZSBpLnN0YXJ0c1dpdGgoIiMiKT9uPWkuc2xpY2UoMSk6cj1pO3RoaXMudXNlPXRoaXMudXNlaHJlZj0iIjtpZihuKXM9ZS5nZXQobik7ZWxzZXtzPXNlYXJjaE5vZGUoZS5nZXQoanIpLHRoaXMsciwhMCwhMSk7cyYmKHM9c1swXSl9aWYoIXMpe3dhcm4oYFhGQSAtIEludmFsaWQgcHJvdG90eXBlIHJlZmVyZW5jZTogJHtvfS5gKTtyZXR1cm4gbnVsbH1pZihzW1lyXSE9PXRoaXNbWXJdKXt3YXJuKGBYRkEgLSBJbmNvbXBhdGlibGUgcHJvdG90eXBlOiAke3NbWXJdfSAhPT0gJHt0aGlzW1lyXX0uYCk7cmV0dXJuIG51bGx9aWYodC5oYXMocykpe3dhcm4oIlhGQSAtIEN5Y2xlIGRldGVjdGVkIGluIHByb3RvdHlwZXMgdXNlLiIpO3JldHVybiBudWxsfXQuYWRkKHMpO2NvbnN0IGc9c1tibl0oZSx0KTtnJiZzW0VuXShnLGUsdCk7c1tacl0oZSx0KTt0LmRlbGV0ZShzKTtyZXR1cm4gc31bRW5dKGUsdCxpKXtpZihpLmhhcyhlKSl7d2FybigiWEZBIC0gQ3ljbGUgZGV0ZWN0ZWQgaW4gcHJvdG90eXBlcyB1c2UuIik7cmV0dXJufSF0aGlzW2VyXSYmZVtlcl0mJih0aGlzW2VyXT1lW2VyXSk7bmV3IFNldChpKS5hZGQoZSk7Zm9yKGNvbnN0IHQgb2YgdGhpc1tEbl0oZVtHbl0pKXt0aGlzW3RdPWVbdF07dGhpc1tHbl0mJnRoaXNbR25dLmFkZCh0KX1mb3IoY29uc3QgYSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSl7aWYodGhpc1tkbl0uaGFzKGEpKWNvbnRpbnVlO2NvbnN0IHM9dGhpc1thXSxyPWVbYV07aWYocyBpbnN0YW5jZW9mIFhGQU9iamVjdEFycmF5KXtmb3IoY29uc3QgZSBvZiBzW2ZuXSllW05uXSh0LGkpO2ZvcihsZXQgYT1zW2ZuXS5sZW5ndGgsbj1yW2ZuXS5sZW5ndGg7YTxuO2ErKyl7Y29uc3Qgcj1lW2ZuXVthXVskc10oKTtpZighcy5wdXNoKHIpKWJyZWFrO3JbUm5dPXRoaXM7dGhpc1tmbl0ucHVzaChyKTtyW05uXSh0LGkpfX1lbHNlIGlmKG51bGw9PT1zKXtpZihudWxsIT09cil7Y29uc3QgZT1yWyRzXSgpO2VbUm5dPXRoaXM7dGhpc1thXT1lO3RoaXNbZm5dLnB1c2goZSk7ZVtObl0odCxpKX19ZWxzZXtzW1pyXSh0LGkpO3ImJnNbRW5dKHIsdCxpKX19fXN0YXRpY1twbl0oZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSk/ZS5tYXAoKGU9PlhGQU9iamVjdFtwbl0oZSkpKToib2JqZWN0Ij09dHlwZW9mIGUmJm51bGwhPT1lP09iamVjdC5hc3NpZ24oe30sZSk6ZX1bJHNdKCl7Y29uc3QgZT1PYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKSk7Zm9yKGNvbnN0IHQgb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0aGlzKSl0cnl7ZVt0XT10aGlzW3RdfWNhdGNoe3NoYWRvdyhlLHQsdGhpc1t0XSl9ZVtubl09YCR7ZVtZcl19JHtNbisrfWA7ZVtmbl09W107Zm9yKGNvbnN0IHQgb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpe2lmKHRoaXNbZG5dLmhhcyh0KSl7ZVt0XT1YRkFPYmplY3RbcG5dKHRoaXNbdF0pO2NvbnRpbnVlfWNvbnN0IGk9dGhpc1t0XTtlW3RdPWkgaW5zdGFuY2VvZiBYRkFPYmplY3RBcnJheT9uZXcgWEZBT2JqZWN0QXJyYXkoaVtTbl0pOm51bGx9Zm9yKGNvbnN0IHQgb2YgdGhpc1tmbl0pe2NvbnN0IGk9dFtZcl0sYT10WyRzXSgpO2VbZm5dLnB1c2goYSk7YVtSbl09ZTtudWxsPT09ZVtpXT9lW2ldPWE6ZVtpXVtmbl0ucHVzaChhKX1yZXR1cm4gZX1bRXJdKGU9bnVsbCl7cmV0dXJuIGU/dGhpc1tmbl0uZmlsdGVyKCh0PT50W1lyXT09PWUpKTp0aGlzW2ZuXX1bSXJdKGUpe3JldHVybiB0aGlzW2VdfVtjcl0oZSx0LGk9ITApe3JldHVybiBBcnJheS5mcm9tKHRoaXNbaHJdKGUsdCxpKSl9Kltocl0oZSx0LGk9ITApe2lmKCJwYXJlbnQiIT09ZSl7Zm9yKGNvbnN0IGkgb2YgdGhpc1tmbl0pe2lbWXJdPT09ZSYmKHlpZWxkIGkpO2kubmFtZT09PWUmJih5aWVsZCBpKTsodHx8aVtVcl0oKSkmJih5aWVsZCppW2hyXShlLHQsITEpKX1pJiZ0aGlzW2RuXS5oYXMoZSkmJih5aWVsZCBuZXcgWEZBQXR0cmlidXRlKHRoaXMsZSx0aGlzW2VdKSl9ZWxzZSB5aWVsZCB0aGlzW1JuXX19Y2xhc3MgWEZBT2JqZWN0QXJyYXl7Y29uc3RydWN0b3IoZT0xLzApe3RoaXNbU25dPWU7dGhpc1tmbl09W119Z2V0IGlzWEZBT2JqZWN0KCl7cmV0dXJuITF9Z2V0IGlzWEZBT2JqZWN0QXJyYXkoKXtyZXR1cm4hMH1wdXNoKGUpe2lmKHRoaXNbZm5dLmxlbmd0aDw9dGhpc1tTbl0pe3RoaXNbZm5dLnB1c2goZSk7cmV0dXJuITB9d2FybihgWEZBIC0gbm9kZSAiJHtlW1lyXX0iIGFjY2VwdHMgbm8gbW9yZSB0aGFuICR7dGhpc1tTbl19IGNoaWxkcmVuYCk7cmV0dXJuITF9aXNFbXB0eSgpe3JldHVybiAwPT09dGhpc1tmbl0ubGVuZ3RofWR1bXAoKXtyZXR1cm4gMT09PXRoaXNbZm5dLmxlbmd0aD90aGlzW2ZuXVswXVtpcl0oKTp0aGlzW2ZuXS5tYXAoKGU9PmVbaXJdKCkpKX1bJHNdKCl7Y29uc3QgZT1uZXcgWEZBT2JqZWN0QXJyYXkodGhpc1tTbl0pO2VbZm5dPXRoaXNbZm5dLm1hcCgoZT0+ZVskc10oKSkpO3JldHVybiBlfWdldCBjaGlsZHJlbigpe3JldHVybiB0aGlzW2ZuXX1jbGVhcigpe3RoaXNbZm5dLmxlbmd0aD0wfX1jbGFzcyBYRkFBdHRyaWJ1dGV7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXNbUm5dPWU7dGhpc1tZcl09dDt0aGlzW2VyXT1pO3RoaXNbQXJdPSExO3RoaXNbbm5dPSJhdHRyaWJ1dGUiK01uKyt9W3ByXSgpe3JldHVybiB0aGlzW1JuXX1bUnJdKCl7cmV0dXJuITB9W2xyXSgpe3JldHVybiB0aGlzW2VyXS50cmltKCl9WyRyXShlKXtlPWUudmFsdWV8fCIiO3RoaXNbZXJdPWUudG9TdHJpbmcoKX1bZW5dKCl7cmV0dXJuIHRoaXNbZXJdfVtOcl0oZSl7cmV0dXJuIHRoaXNbUm5dPT09ZXx8dGhpc1tSbl1bTnJdKGUpfX1jbGFzcyBYbWxPYmplY3QgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSx0LGk9e30pe3N1cGVyKGUsdCk7dGhpc1tlcl09IiI7dGhpc1ttbl09bnVsbDtpZigiI3RleHQiIT09dCl7Y29uc3QgZT1uZXcgTWFwO3RoaXNbdW5dPWU7Zm9yKGNvbnN0W3QsYV1vZiBPYmplY3QuZW50cmllcyhpKSllLnNldCh0LG5ldyBYRkFBdHRyaWJ1dGUodGhpcyx0LGEpKTtpZihpLmhhc093blByb3BlcnR5KHZyKSl7Y29uc3QgZT1pW3ZyXS54ZmEuZGF0YU5vZGU7dm9pZCAwIT09ZSYmKCJkYXRhR3JvdXAiPT09ZT90aGlzW21uXT0hMToiZGF0YVZhbHVlIj09PWUmJih0aGlzW21uXT0hMCkpfX10aGlzW0FyXT0hMX1bc25dKGUpe2NvbnN0IHQ9dGhpc1tZcl07aWYoIiN0ZXh0Ij09PXQpe2UucHVzaChlbmNvZGVUb1htbFN0cmluZyh0aGlzW2VyXSkpO3JldHVybn1jb25zdCBpPXV0ZjhTdHJpbmdUb1N0cmluZyh0KSxhPXRoaXNbSHJdPT09VW4/InhmYToiOiIiO2UucHVzaChgPCR7YX0ke2l9YCk7Zm9yKGNvbnN0W3QsaV1vZiB0aGlzW3VuXS5lbnRyaWVzKCkpe2NvbnN0IGE9dXRmOFN0cmluZ1RvU3RyaW5nKHQpO2UucHVzaChgICR7YX09IiR7ZW5jb2RlVG9YbWxTdHJpbmcoaVtlcl0pfSJgKX1udWxsIT09dGhpc1ttbl0mJih0aGlzW21uXT9lLnB1c2goJyB4ZmE6ZGF0YU5vZGU9ImRhdGFWYWx1ZSInKTplLnB1c2goJyB4ZmE6ZGF0YU5vZGU9ImRhdGFHcm91cCInKSk7aWYodGhpc1tlcl18fDAhPT10aGlzW2ZuXS5sZW5ndGgpe2UucHVzaCgiPiIpO2lmKHRoaXNbZXJdKSJzdHJpbmciPT10eXBlb2YgdGhpc1tlcl0/ZS5wdXNoKGVuY29kZVRvWG1sU3RyaW5nKHRoaXNbZXJdKSk6dGhpc1tlcl1bc25dKGUpO2Vsc2UgZm9yKGNvbnN0IHQgb2YgdGhpc1tmbl0pdFtzbl0oZSk7ZS5wdXNoKGA8LyR7YX0ke2l9PmApfWVsc2UgZS5wdXNoKCIvPiIpfVtLcl0oZSl7aWYodGhpc1tlcl0pe2NvbnN0IGU9bmV3IFhtbE9iamVjdCh0aGlzW0hyXSwiI3RleHQiKTt0aGlzW2pzXShlKTtlW2VyXT10aGlzW2VyXTt0aGlzW2VyXT0iIn10aGlzW2pzXShlKTtyZXR1cm4hMH1bcXJdKGUpe3RoaXNbZXJdKz1lfVtzcl0oKXtpZih0aGlzW2VyXSYmdGhpc1tmbl0ubGVuZ3RoPjApe2NvbnN0IGU9bmV3IFhtbE9iamVjdCh0aGlzW0hyXSwiI3RleHQiKTt0aGlzW2pzXShlKTtlW2VyXT10aGlzW2VyXTtkZWxldGUgdGhpc1tlcl19fVthbl0oKXtyZXR1cm4iI3RleHQiPT09dGhpc1tZcl0/SFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiIjdGV4dCIsdmFsdWU6dGhpc1tlcl19KTpIVE1MUmVzdWx0LkVNUFRZfVtFcl0oZT1udWxsKXtyZXR1cm4gZT90aGlzW2ZuXS5maWx0ZXIoKHQ9PnRbWXJdPT09ZSkpOnRoaXNbZm5dfVtvcl0oKXtyZXR1cm4gdGhpc1t1bl19W0lyXShlKXtjb25zdCB0PXRoaXNbdW5dLmdldChlKTtyZXR1cm4gdm9pZCAwIT09dD90OnRoaXNbRXJdKGUpfSpbaHJdKGUsdCl7Y29uc3QgaT10aGlzW3VuXS5nZXQoZSk7aSYmKHlpZWxkIGkpO2Zvcihjb25zdCBpIG9mIHRoaXNbZm5dKXtpW1lyXT09PWUmJih5aWVsZCBpKTt0JiYoeWllbGQqaVtocl0oZSx0KSl9fSpbbnJdKGUsdCl7Y29uc3QgaT10aGlzW3VuXS5nZXQoZSk7IWl8fHQmJmlbQXJdfHwoeWllbGQgaSk7Zm9yKGNvbnN0IGkgb2YgdGhpc1tmbl0peWllbGQqaVtucl0oZSx0KX0qW1FyXShlLHQsaSl7Zm9yKGNvbnN0IGEgb2YgdGhpc1tmbl0pe2FbWXJdIT09ZXx8aSYmYVtBcl18fCh5aWVsZCBhKTt0JiYoeWllbGQqYVtRcl0oZSx0LGkpKX19W1JyXSgpe3JldHVybiBudWxsPT09dGhpc1ttbl0/MD09PXRoaXNbZm5dLmxlbmd0aHx8dGhpc1tmbl1bMF1bSHJdPT09Z24ueGh0bWwuaWQ6dGhpc1ttbl19W2xyXSgpe3JldHVybiBudWxsPT09dGhpc1ttbl0/MD09PXRoaXNbZm5dLmxlbmd0aD90aGlzW2VyXS50cmltKCk6dGhpc1tmbl1bMF1bSHJdPT09Z24ueGh0bWwuaWQ/dGhpc1tmbl1bMF1bZW5dKCkudHJpbSgpOm51bGw6dGhpc1tlcl0udHJpbSgpfVskcl0oZSl7ZT1lLnZhbHVlfHwiIjt0aGlzW2VyXT1lLnRvU3RyaW5nKCl9W2lyXShlPSExKXtjb25zdCB0PU9iamVjdC5jcmVhdGUobnVsbCk7ZSYmKHQuJG5zPXRoaXNbSHJdKTt0aGlzW2VyXSYmKHQuJGNvbnRlbnQ9dGhpc1tlcl0pO3QuJG5hbWU9dGhpc1tZcl07dC5jaGlsZHJlbj1bXTtmb3IoY29uc3QgaSBvZiB0aGlzW2ZuXSl0LmNoaWxkcmVuLnB1c2goaVtpcl0oZSkpO3QuYXR0cmlidXRlcz1PYmplY3QuY3JlYXRlKG51bGwpO2Zvcihjb25zdFtlLGldb2YgdGhpc1t1bl0pdC5hdHRyaWJ1dGVzW2VdPWlbZXJdO3JldHVybiB0fX1jbGFzcyBDb250ZW50T2JqZWN0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0KTt0aGlzW2VyXT0iIn1bcXJdKGUpe3RoaXNbZXJdKz1lfVtzcl0oKXt9fWNsYXNzIE9wdGlvbk9iamVjdCBleHRlbmRzIENvbnRlbnRPYmplY3R7Y29uc3RydWN0b3IoZSx0LGkpe3N1cGVyKGUsdCk7dGhpc1trbl09aX1bc3JdKCl7dGhpc1tlcl09Z2V0S2V5d29yZCh7ZGF0YTp0aGlzW2VyXSxkZWZhdWx0VmFsdWU6dGhpc1trbl1bMF0sdmFsaWRhdGU6ZT0+dGhpc1trbl0uaW5jbHVkZXMoZSl9KX1bVnNdKGUpe3N1cGVyW1ZzXShlKTtkZWxldGUgdGhpc1trbl19fWNsYXNzIFN0cmluZ09iamVjdCBleHRlbmRzIENvbnRlbnRPYmplY3R7W3NyXSgpe3RoaXNbZXJdPXRoaXNbZXJdLnRyaW0oKX19Y2xhc3MgSW50ZWdlck9iamVjdCBleHRlbmRzIENvbnRlbnRPYmplY3R7Y29uc3RydWN0b3IoZSx0LGksYSl7c3VwZXIoZSx0KTt0aGlzW3luXT1pO3RoaXNbeG5dPWF9W3NyXSgpe3RoaXNbZXJdPWdldEludGVnZXIoe2RhdGE6dGhpc1tlcl0sZGVmYXVsdFZhbHVlOnRoaXNbeW5dLHZhbGlkYXRlOnRoaXNbeG5dfSl9W1ZzXShlKXtzdXBlcltWc10oZSk7ZGVsZXRlIHRoaXNbeW5dO2RlbGV0ZSB0aGlzW3huXX19Y2xhc3MgT3B0aW9uMDEgZXh0ZW5kcyBJbnRlZ2VyT2JqZWN0e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0LDAsKGU9PjE9PT1lKSl9fWNsYXNzIE9wdGlvbjEwIGV4dGVuZHMgSW50ZWdlck9iamVjdHtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsdCwxLChlPT4wPT09ZSkpfX1mdW5jdGlvbiBtZWFzdXJlVG9TdHJpbmcoZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlPyIwcHgiOk51bWJlci5pc0ludGVnZXIoZSk/YCR7ZX1weGA6YCR7ZS50b0ZpeGVkKDIpfXB4YH1jb25zdCBMbj17YW5jaG9yVHlwZShlLHQpe2NvbnN0IGk9ZVtmcl0oKTtpZihpJiYoIWkubGF5b3V0fHwicG9zaXRpb24iPT09aS5sYXlvdXQpKXsidHJhbnNmb3JtImluIHR8fCh0LnRyYW5zZm9ybT0iIik7c3dpdGNoKGUuYW5jaG9yVHlwZSl7Y2FzZSJib3R0b21DZW50ZXIiOnQudHJhbnNmb3JtKz0idHJhbnNsYXRlKC01MCUsIC0xMDAlKSI7YnJlYWs7Y2FzZSJib3R0b21MZWZ0Ijp0LnRyYW5zZm9ybSs9InRyYW5zbGF0ZSgwLC0xMDAlKSI7YnJlYWs7Y2FzZSJib3R0b21SaWdodCI6dC50cmFuc2Zvcm0rPSJ0cmFuc2xhdGUoLTEwMCUsLTEwMCUpIjticmVhaztjYXNlIm1pZGRsZUNlbnRlciI6dC50cmFuc2Zvcm0rPSJ0cmFuc2xhdGUoLTUwJSwtNTAlKSI7YnJlYWs7Y2FzZSJtaWRkbGVMZWZ0Ijp0LnRyYW5zZm9ybSs9InRyYW5zbGF0ZSgwLC01MCUpIjticmVhaztjYXNlIm1pZGRsZVJpZ2h0Ijp0LnRyYW5zZm9ybSs9InRyYW5zbGF0ZSgtMTAwJSwtNTAlKSI7YnJlYWs7Y2FzZSJ0b3BDZW50ZXIiOnQudHJhbnNmb3JtKz0idHJhbnNsYXRlKC01MCUsMCkiO2JyZWFrO2Nhc2UidG9wUmlnaHQiOnQudHJhbnNmb3JtKz0idHJhbnNsYXRlKC0xMDAlLDApIn19fSxkaW1lbnNpb25zKGUsdCl7Y29uc3QgaT1lW2ZyXSgpO2xldCBhPWUudztjb25zdCBzPWUuaDtpZihpLmxheW91dD8uaW5jbHVkZXMoInJvdyIpKXtjb25zdCB0PWlbYXJdLHM9ZS5jb2xTcGFuO2xldCByO2lmKC0xPT09cyl7cj10LmNvbHVtbldpZHRocy5zbGljZSh0LmN1cnJlbnRDb2x1bW4pLnJlZHVjZSgoKGUsdCk9PmUrdCksMCk7dC5jdXJyZW50Q29sdW1uPTB9ZWxzZXtyPXQuY29sdW1uV2lkdGhzLnNsaWNlKHQuY3VycmVudENvbHVtbix0LmN1cnJlbnRDb2x1bW4rcykucmVkdWNlKCgoZSx0KT0+ZSt0KSwwKTt0LmN1cnJlbnRDb2x1bW49KHQuY3VycmVudENvbHVtbitlLmNvbFNwYW4pJXQuY29sdW1uV2lkdGhzLmxlbmd0aH1pc05hTihyKXx8KGE9ZS53PXIpfXQud2lkdGg9IiIhPT1hP21lYXN1cmVUb1N0cmluZyhhKToiYXV0byI7dC5oZWlnaHQ9IiIhPT1zP21lYXN1cmVUb1N0cmluZyhzKToiYXV0byJ9LHBvc2l0aW9uKGUsdCl7Y29uc3QgaT1lW2ZyXSgpO2lmKCFpPy5sYXlvdXR8fCJwb3NpdGlvbiI9PT1pLmxheW91dCl7dC5wb3NpdGlvbj0iYWJzb2x1dGUiO3QubGVmdD1tZWFzdXJlVG9TdHJpbmcoZS54KTt0LnRvcD1tZWFzdXJlVG9TdHJpbmcoZS55KX19LHJvdGF0ZShlLHQpe2lmKGUucm90YXRlKXsidHJhbnNmb3JtImluIHR8fCh0LnRyYW5zZm9ybT0iIik7dC50cmFuc2Zvcm0rPWByb3RhdGUoLSR7ZS5yb3RhdGV9ZGVnKWA7dC50cmFuc2Zvcm1PcmlnaW49InRvcCBsZWZ0In19LHByZXNlbmNlKGUsdCl7c3dpdGNoKGUucHJlc2VuY2Upe2Nhc2UiaW52aXNpYmxlIjp0LnZpc2liaWxpdHk9ImhpZGRlbiI7YnJlYWs7Y2FzZSJoaWRkZW4iOmNhc2UiaW5hY3RpdmUiOnQuZGlzcGxheT0ibm9uZSJ9fSxoQWxpZ24oZSx0KXtpZigicGFyYSI9PT1lW1lyXSlzd2l0Y2goZS5oQWxpZ24pe2Nhc2UianVzdGlmeUFsbCI6dC50ZXh0QWxpZ249Imp1c3RpZnktYWxsIjticmVhaztjYXNlInJhZGl4Ijp0LnRleHRBbGlnbj0ibGVmdCI7YnJlYWs7ZGVmYXVsdDp0LnRleHRBbGlnbj1lLmhBbGlnbn1lbHNlIHN3aXRjaChlLmhBbGlnbil7Y2FzZSJsZWZ0Ijp0LmFsaWduU2VsZj0ic3RhcnQiO2JyZWFrO2Nhc2UiY2VudGVyIjp0LmFsaWduU2VsZj0iY2VudGVyIjticmVhaztjYXNlInJpZ2h0Ijp0LmFsaWduU2VsZj0iZW5kIn19LG1hcmdpbihlLHQpe2UubWFyZ2luJiYodC5tYXJnaW49ZS5tYXJnaW5bcm5dKCkubWFyZ2luKX19O2Z1bmN0aW9uIHNldE1pbk1heERpbWVuc2lvbnMoZSx0KXtpZigicG9zaXRpb24iPT09ZVtmcl0oKS5sYXlvdXQpe2UubWluVz4wJiYodC5taW5XaWR0aD1tZWFzdXJlVG9TdHJpbmcoZS5taW5XKSk7ZS5tYXhXPjAmJih0Lm1heFdpZHRoPW1lYXN1cmVUb1N0cmluZyhlLm1heFcpKTtlLm1pbkg+MCYmKHQubWluSGVpZ2h0PW1lYXN1cmVUb1N0cmluZyhlLm1pbkgpKTtlLm1heEg+MCYmKHQubWF4SGVpZ2h0PW1lYXN1cmVUb1N0cmluZyhlLm1heEgpKX19ZnVuY3Rpb24gbGF5b3V0VGV4dChlLHQsaSxhLHMscil7Y29uc3Qgbj1uZXcgVGV4dE1lYXN1cmUodCxpLGEscyk7InN0cmluZyI9PXR5cGVvZiBlP24uYWRkU3RyaW5nKGUpOmVbT3JdKG4pO3JldHVybiBuLmNvbXB1dGUocil9ZnVuY3Rpb24gbGF5b3V0Tm9kZShlLHQpe2xldCBpPW51bGwsYT1udWxsLHM9ITE7aWYoKCFlLnd8fCFlLmgpJiZlLnZhbHVlKXtsZXQgcj0wLG49MDtpZihlLm1hcmdpbil7cj1lLm1hcmdpbi5sZWZ0SW5zZXQrZS5tYXJnaW4ucmlnaHRJbnNldDtuPWUubWFyZ2luLnRvcEluc2V0K2UubWFyZ2luLmJvdHRvbUluc2V0fWxldCBvPW51bGwsZz1udWxsO2lmKGUucGFyYSl7Zz1PYmplY3QuY3JlYXRlKG51bGwpO289IiI9PT1lLnBhcmEubGluZUhlaWdodD9udWxsOmUucGFyYS5saW5lSGVpZ2h0O2cudG9wPSIiPT09ZS5wYXJhLnNwYWNlQWJvdmU/MDplLnBhcmEuc3BhY2VBYm92ZTtnLmJvdHRvbT0iIj09PWUucGFyYS5zcGFjZUJlbG93PzA6ZS5wYXJhLnNwYWNlQmVsb3c7Zy5sZWZ0PSIiPT09ZS5wYXJhLm1hcmdpbkxlZnQ/MDplLnBhcmEubWFyZ2luTGVmdDtnLnJpZ2h0PSIiPT09ZS5wYXJhLm1hcmdpblJpZ2h0PzA6ZS5wYXJhLm1hcmdpblJpZ2h0fWxldCBjPWUuZm9udDtpZighYyl7Y29uc3QgdD1lW21yXSgpO2xldCBpPWVbcHJdKCk7Zm9yKDtpJiZpIT09dDspe2lmKGkuZm9udCl7Yz1pLmZvbnQ7YnJlYWt9aT1pW3ByXSgpfX1jb25zdCBoPShlLnd8fHQud2lkdGgpLXIsbD1lW3lyXS5mb250RmluZGVyO2lmKGUudmFsdWUuZXhEYXRhJiZlLnZhbHVlLmV4RGF0YVtlcl0mJiJ0ZXh0L2h0bWwiPT09ZS52YWx1ZS5leERhdGEuY29udGVudFR5cGUpe2NvbnN0IHQ9bGF5b3V0VGV4dChlLnZhbHVlLmV4RGF0YVtlcl0sYyxnLG8sbCxoKTthPXQud2lkdGg7aT10LmhlaWdodDtzPXQuaXNCcm9rZW59ZWxzZXtjb25zdCB0PWUudmFsdWVbZW5dKCk7aWYodCl7Y29uc3QgZT1sYXlvdXRUZXh0KHQsYyxnLG8sbCxoKTthPWUud2lkdGg7aT1lLmhlaWdodDtzPWUuaXNCcm9rZW59fW51bGw9PT1hfHxlLnd8fChhKz1yKTtudWxsPT09aXx8ZS5ofHwoaSs9bil9cmV0dXJue3c6YSxoOmksaXNCcm9rZW46c319ZnVuY3Rpb24gY29tcHV0ZUJib3goZSx0LGkpe2xldCBhO2lmKCIiIT09ZS53JiYiIiE9PWUuaClhPVtlLngsZS55LGUudyxlLmhdO2Vsc2V7aWYoIWkpcmV0dXJuIG51bGw7bGV0IHM9ZS53O2lmKCIiPT09cyl7aWYoMD09PWUubWF4Vyl7Y29uc3QgdD1lW2ZyXSgpO3M9InBvc2l0aW9uIj09PXQubGF5b3V0JiYiIiE9PXQudz8wOmUubWluV31lbHNlIHM9TWF0aC5taW4oZS5tYXhXLGkud2lkdGgpO3QuYXR0cmlidXRlcy5zdHlsZS53aWR0aD1tZWFzdXJlVG9TdHJpbmcocyl9bGV0IHI9ZS5oO2lmKCIiPT09cil7aWYoMD09PWUubWF4SCl7Y29uc3QgdD1lW2ZyXSgpO3I9InBvc2l0aW9uIj09PXQubGF5b3V0JiYiIiE9PXQuaD8wOmUubWluSH1lbHNlIHI9TWF0aC5taW4oZS5tYXhILGkuaGVpZ2h0KTt0LmF0dHJpYnV0ZXMuc3R5bGUuaGVpZ2h0PW1lYXN1cmVUb1N0cmluZyhyKX1hPVtlLngsZS55LHMscl19cmV0dXJuIGF9ZnVuY3Rpb24gZml4RGltZW5zaW9ucyhlKXtjb25zdCB0PWVbZnJdKCk7aWYodC5sYXlvdXQ/LmluY2x1ZGVzKCJyb3ciKSl7Y29uc3QgaT10W2FyXSxhPWUuY29sU3BhbjtsZXQgcztzPS0xPT09YT9pLmNvbHVtbldpZHRocy5zbGljZShpLmN1cnJlbnRDb2x1bW4pLnJlZHVjZSgoKGUsdCk9PmUrdCksMCk6aS5jb2x1bW5XaWR0aHMuc2xpY2UoaS5jdXJyZW50Q29sdW1uLGkuY3VycmVudENvbHVtbithKS5yZWR1Y2UoKChlLHQpPT5lK3QpLDApO2lzTmFOKHMpfHwoZS53PXMpfXQubGF5b3V0JiYicG9zaXRpb24iIT09dC5sYXlvdXQmJihlLng9ZS55PTApOyJ0YWJsZSI9PT1lLmxheW91dCYmIiI9PT1lLncmJkFycmF5LmlzQXJyYXkoZS5jb2x1bW5XaWR0aHMpJiYoZS53PWUuY29sdW1uV2lkdGhzLnJlZHVjZSgoKGUsdCk9PmUrdCksMCkpfWZ1bmN0aW9uIGxheW91dENsYXNzKGUpe3N3aXRjaChlLmxheW91dCl7Y2FzZSJwb3NpdGlvbiI6ZGVmYXVsdDpyZXR1cm4ieGZhUG9zaXRpb24iO2Nhc2UibHItdGIiOnJldHVybiJ4ZmFMclRiIjtjYXNlInJsLXJvdyI6cmV0dXJuInhmYVJsUm93IjtjYXNlInJsLXRiIjpyZXR1cm4ieGZhUmxUYiI7Y2FzZSJyb3ciOnJldHVybiJ4ZmFSb3ciO2Nhc2UidGFibGUiOnJldHVybiJ4ZmFUYWJsZSI7Y2FzZSJ0YiI6cmV0dXJuInhmYVRiIn19ZnVuY3Rpb24gdG9TdHlsZShlLC4uLnQpe2NvbnN0IGk9T2JqZWN0LmNyZWF0ZShudWxsKTtmb3IoY29uc3QgYSBvZiB0KXtjb25zdCB0PWVbYV07aWYobnVsbCE9PXQpaWYoTG4uaGFzT3duUHJvcGVydHkoYSkpTG5bYV0oZSxpKTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBYRkFPYmplY3Qpe2NvbnN0IGU9dFtybl0oKTtlP09iamVjdC5hc3NpZ24oaSxlKTp3YXJuKGAoREVCVUcpIC0gWEZBIC0gc3R5bGUgZm9yICR7YX0gbm90IGltcGxlbWVudGVkIHlldGApfX1yZXR1cm4gaX1mdW5jdGlvbiBjcmVhdGVXcmFwcGVyKGUsdCl7Y29uc3R7YXR0cmlidXRlczppfT10LHtzdHlsZTphfT1pLHM9e25hbWU6ImRpdiIsYXR0cmlidXRlczp7Y2xhc3M6WyJ4ZmFXcmFwcGVyIl0sc3R5bGU6T2JqZWN0LmNyZWF0ZShudWxsKX0sY2hpbGRyZW46W119O2kuY2xhc3MucHVzaCgieGZhV3JhcHBlZCIpO2lmKGUuYm9yZGVyKXtjb25zdHt3aWR0aHM6aSxpbnNldHM6cn09ZS5ib3JkZXJbYXJdO2xldCBuLG8sZz1yWzBdLGM9clszXTtjb25zdCBoPXJbMF0rclsyXSxsPXJbMV0rclszXTtzd2l0Y2goZS5ib3JkZXIuaGFuZCl7Y2FzZSJldmVuIjpnLT1pWzBdLzI7Yy09aVszXS8yO249YGNhbGMoMTAwJSArICR7KGlbMV0raVszXSkvMi1sfXB4KWA7bz1gY2FsYygxMDAlICsgJHsoaVswXStpWzJdKS8yLWh9cHgpYDticmVhaztjYXNlImxlZnQiOmctPWlbMF07Yy09aVszXTtuPWBjYWxjKDEwMCUgKyAke2lbMV0raVszXS1sfXB4KWA7bz1gY2FsYygxMDAlICsgJHtpWzBdK2lbMl0taH1weClgO2JyZWFrO2Nhc2UicmlnaHQiOm49bD9gY2FsYygxMDAlIC0gJHtsfXB4KWA6IjEwMCUiO289aD9gY2FsYygxMDAlIC0gJHtofXB4KWA6IjEwMCUifWNvbnN0IEM9WyJ4ZmFCb3JkZXIiXTtpc1ByaW50T25seShlLmJvcmRlcikmJkMucHVzaCgieGZhUHJpbnRPbmx5Iik7Y29uc3QgUT17bmFtZToiZGl2IixhdHRyaWJ1dGVzOntjbGFzczpDLHN0eWxlOnt0b3A6YCR7Z31weGAsbGVmdDpgJHtjfXB4YCx3aWR0aDpuLGhlaWdodDpvfX0sY2hpbGRyZW46W119O2Zvcihjb25zdCBlIG9mWyJib3JkZXIiLCJib3JkZXJXaWR0aCIsImJvcmRlckNvbG9yIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyU3R5bGUiXSlpZih2b2lkIDAhPT1hW2VdKXtRLmF0dHJpYnV0ZXMuc3R5bGVbZV09YVtlXTtkZWxldGUgYVtlXX1zLmNoaWxkcmVuLnB1c2goUSx0KX1lbHNlIHMuY2hpbGRyZW4ucHVzaCh0KTtmb3IoY29uc3QgZSBvZlsiYmFja2dyb3VuZCIsImJhY2tncm91bmRDbGlwIiwidG9wIiwibGVmdCIsIndpZHRoIiwiaGVpZ2h0IiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJtYXhXaWR0aCIsIm1heEhlaWdodCIsInRyYW5zZm9ybSIsInRyYW5zZm9ybU9yaWdpbiIsInZpc2liaWxpdHkiXSlpZih2b2lkIDAhPT1hW2VdKXtzLmF0dHJpYnV0ZXMuc3R5bGVbZV09YVtlXTtkZWxldGUgYVtlXX1zLmF0dHJpYnV0ZXMuc3R5bGUucG9zaXRpb249ImFic29sdXRlIj09PWEucG9zaXRpb24/ImFic29sdXRlIjoicmVsYXRpdmUiO2RlbGV0ZSBhLnBvc2l0aW9uO2lmKGEuYWxpZ25TZWxmKXtzLmF0dHJpYnV0ZXMuc3R5bGUuYWxpZ25TZWxmPWEuYWxpZ25TZWxmO2RlbGV0ZSBhLmFsaWduU2VsZn1yZXR1cm4gc31mdW5jdGlvbiBmaXhUZXh0SW5kZW50KGUpe2NvbnN0IHQ9Z2V0TWVhc3VyZW1lbnQoZS50ZXh0SW5kZW50LCIwcHgiKTtpZih0Pj0wKXJldHVybjtjb25zdCBpPSJwYWRkaW5nIisoImxlZnQiPT09KCJyaWdodCI9PT1lLnRleHRBbGlnbj8icmlnaHQiOiJsZWZ0Iik/IkxlZnQiOiJSaWdodCIpLGE9Z2V0TWVhc3VyZW1lbnQoZVtpXSwiMHB4Iik7ZVtpXT1hLXQrInB4In1mdW5jdGlvbiBzZXRBY2Nlc3MoZSx0KXtzd2l0Y2goZS5hY2Nlc3Mpe2Nhc2Uibm9uSW50ZXJhY3RpdmUiOnQucHVzaCgieGZhTm9uSW50ZXJhY3RpdmUiKTticmVhaztjYXNlInJlYWRPbmx5Ijp0LnB1c2goInhmYVJlYWRPbmx5Iik7YnJlYWs7Y2FzZSJwcm90ZWN0ZWQiOnQucHVzaCgieGZhRGlzYWJsZWQiKX19ZnVuY3Rpb24gaXNQcmludE9ubHkoZSl7cmV0dXJuIGUucmVsZXZhbnQubGVuZ3RoPjAmJiFlLnJlbGV2YW50WzBdLmV4Y2x1ZGVkJiYicHJpbnQiPT09ZS5yZWxldmFudFswXS52aWV3bmFtZX1mdW5jdGlvbiBnZXRDdXJyZW50UGFyYShlKXtjb25zdCB0PWVbbXJdKClbYXJdLnBhcmFTdGFjaztyZXR1cm4gdC5sZW5ndGg/dC5hdCgtMSk6bnVsbH1mdW5jdGlvbiBzZXRQYXJhKGUsdCxpKXtpZihpLmF0dHJpYnV0ZXMuY2xhc3M/LmluY2x1ZGVzKCJ4ZmFSaWNoIikpe2lmKHQpeyIiPT09ZS5oJiYodC5oZWlnaHQ9ImF1dG8iKTsiIj09PWUudyYmKHQud2lkdGg9ImF1dG8iKX1jb25zdCBhPWdldEN1cnJlbnRQYXJhKGUpO2lmKGEpe2NvbnN0IGU9aS5hdHRyaWJ1dGVzLnN0eWxlO2UuZGlzcGxheT0iZmxleCI7ZS5mbGV4RGlyZWN0aW9uPSJjb2x1bW4iO3N3aXRjaChhLnZBbGlnbil7Y2FzZSJ0b3AiOmUuanVzdGlmeUNvbnRlbnQ9InN0YXJ0IjticmVhaztjYXNlImJvdHRvbSI6ZS5qdXN0aWZ5Q29udGVudD0iZW5kIjticmVhaztjYXNlIm1pZGRsZSI6ZS5qdXN0aWZ5Q29udGVudD0iY2VudGVyIn1jb25zdCB0PWFbcm5dKCk7Zm9yKGNvbnN0W2ksYV1vZiBPYmplY3QuZW50cmllcyh0KSlpIGluIGV8fChlW2ldPWEpfX19ZnVuY3Rpb24gc2V0Rm9udEZhbWlseShlLHQsaSxhKXtpZighaSl7ZGVsZXRlIGEuZm9udEZhbWlseTtyZXR1cm59Y29uc3Qgcz1zdHJpcFF1b3RlcyhlLnR5cGVmYWNlKTthLmZvbnRGYW1pbHk9YCIke3N9ImA7Y29uc3Qgcj1pLmZpbmQocyk7aWYocil7Y29uc3R7Zm9udEZhbWlseTppfT1yLnJlZ3VsYXIuY3NzRm9udEluZm87aSE9PXMmJihhLmZvbnRGYW1pbHk9YCIke2l9ImApO2NvbnN0IG49Z2V0Q3VycmVudFBhcmEodCk7aWYobiYmIiIhPT1uLmxpbmVIZWlnaHQpcmV0dXJuO2lmKGEubGluZUhlaWdodClyZXR1cm47Y29uc3Qgbz1zZWxlY3RGb250KGUscik7byYmKGEubGluZUhlaWdodD1NYXRoLm1heCgxLjIsby5saW5lSGVpZ2h0KSl9fWZ1bmN0aW9uIGZpeFVSTChlKXtjb25zdCB0PWNyZWF0ZVZhbGlkQWJzb2x1dGVVcmwoZSxudWxsLHthZGREZWZhdWx0UHJvdG9jb2w6ITAsdHJ5Q29udmVydEVuY29kaW5nOiEwfSk7cmV0dXJuIHQ/dC5ocmVmOm51bGx9ZnVuY3Rpb24gY3JlYXRlTGluZShlLHQpe3JldHVybntuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6e2NsYXNzOlsibHItdGIiPT09ZS5sYXlvdXQ/InhmYUxyIjoieGZhUmwiXX0sY2hpbGRyZW46dH19ZnVuY3Rpb24gZmx1c2hIVE1MKGUpe2lmKCFlW2FyXSlyZXR1cm4gbnVsbDtjb25zdCB0PXtuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6ZVthcl0uYXR0cmlidXRlcyxjaGlsZHJlbjplW2FyXS5jaGlsZHJlbn07aWYoZVthcl0uZmFpbGluZ05vZGUpe2NvbnN0IGk9ZVthcl0uZmFpbGluZ05vZGVbcnJdKCk7aSYmKGUubGF5b3V0LmVuZHNXaXRoKCItdGIiKT90LmNoaWxkcmVuLnB1c2goY3JlYXRlTGluZShlLFtpXSkpOnQuY2hpbGRyZW4ucHVzaChpKSl9cmV0dXJuIDA9PT10LmNoaWxkcmVuLmxlbmd0aD9udWxsOnR9ZnVuY3Rpb24gYWRkSFRNTChlLHQsaSl7Y29uc3QgYT1lW2FyXSxzPWEuYXZhaWxhYmxlU3BhY2UsW3IsbixvLGddPWk7c3dpdGNoKGUubGF5b3V0KXtjYXNlInBvc2l0aW9uIjphLndpZHRoPU1hdGgubWF4KGEud2lkdGgscitvKTthLmhlaWdodD1NYXRoLm1heChhLmhlaWdodCxuK2cpO2EuY2hpbGRyZW4ucHVzaCh0KTticmVhaztjYXNlImxyLXRiIjpjYXNlInJsLXRiIjppZighYS5saW5lfHwxPT09YS5hdHRlbXB0KXthLmxpbmU9Y3JlYXRlTGluZShlLFtdKTthLmNoaWxkcmVuLnB1c2goYS5saW5lKTthLm51bWJlckluTGluZT0wfWEubnVtYmVySW5MaW5lKz0xO2EubGluZS5jaGlsZHJlbi5wdXNoKHQpO2lmKDA9PT1hLmF0dGVtcHQpe2EuY3VycmVudFdpZHRoKz1vO2EuaGVpZ2h0PU1hdGgubWF4KGEuaGVpZ2h0LGEucHJldkhlaWdodCtnKX1lbHNle2EuY3VycmVudFdpZHRoPW87YS5wcmV2SGVpZ2h0PWEuaGVpZ2h0O2EuaGVpZ2h0Kz1nO2EuYXR0ZW1wdD0wfWEud2lkdGg9TWF0aC5tYXgoYS53aWR0aCxhLmN1cnJlbnRXaWR0aCk7YnJlYWs7Y2FzZSJybC1yb3ciOmNhc2Uicm93Ijp7YS5jaGlsZHJlbi5wdXNoKHQpO2Eud2lkdGgrPW87YS5oZWlnaHQ9TWF0aC5tYXgoYS5oZWlnaHQsZyk7Y29uc3QgZT1tZWFzdXJlVG9TdHJpbmcoYS5oZWlnaHQpO2Zvcihjb25zdCB0IG9mIGEuY2hpbGRyZW4pdC5hdHRyaWJ1dGVzLnN0eWxlLmhlaWdodD1lO2JyZWFrfWNhc2UidGFibGUiOmNhc2UidGIiOmEud2lkdGg9TWF0aC5taW4ocy53aWR0aCxNYXRoLm1heChhLndpZHRoLG8pKTthLmhlaWdodCs9ZzthLmNoaWxkcmVuLnB1c2godCl9fWZ1bmN0aW9uIGdldEF2YWlsYWJsZVNwYWNlKGUpe2NvbnN0IHQ9ZVthcl0uYXZhaWxhYmxlU3BhY2UsaT1lLm1hcmdpbj9lLm1hcmdpbi50b3BJbnNldCtlLm1hcmdpbi5ib3R0b21JbnNldDowLGE9ZS5tYXJnaW4/ZS5tYXJnaW4ubGVmdEluc2V0K2UubWFyZ2luLnJpZ2h0SW5zZXQ6MDtzd2l0Y2goZS5sYXlvdXQpe2Nhc2UibHItdGIiOmNhc2UicmwtdGIiOnJldHVybiAwPT09ZVthcl0uYXR0ZW1wdD97d2lkdGg6dC53aWR0aC1hLWVbYXJdLmN1cnJlbnRXaWR0aCxoZWlnaHQ6dC5oZWlnaHQtaS1lW2FyXS5wcmV2SGVpZ2h0fTp7d2lkdGg6dC53aWR0aC1hLGhlaWdodDp0LmhlaWdodC1pLWVbYXJdLmhlaWdodH07Y2FzZSJybC1yb3ciOmNhc2Uicm93IjpyZXR1cm57d2lkdGg6ZVthcl0uY29sdW1uV2lkdGhzLnNsaWNlKGVbYXJdLmN1cnJlbnRDb2x1bW4pLnJlZHVjZSgoKGUsdCk9PmUrdCkpLGhlaWdodDp0LmhlaWdodC1hfTtjYXNlInRhYmxlIjpjYXNlInRiIjpyZXR1cm57d2lkdGg6dC53aWR0aC1hLGhlaWdodDp0LmhlaWdodC1pLWVbYXJdLmhlaWdodH07ZGVmYXVsdDpyZXR1cm4gdH19ZnVuY3Rpb24gY2hlY2tEaW1lbnNpb25zKGUsdCl7aWYobnVsbD09PWVbbXJdKClbYXJdLmZpcnN0VW5zcGxpdHRhYmxlKXJldHVybiEwO2lmKDA9PT1lLnd8fDA9PT1lLmgpcmV0dXJuITA7Y29uc3QgaT1lW2ZyXSgpLGE9aVthcl0/LmF0dGVtcHR8fDAsWyxzLHIsbl09ZnVuY3Rpb24gZ2V0VHJhbnNmb3JtZWRCQm94KGUpe2xldCB0LGksYT0iIj09PWUudz9OYU46ZS53LHM9IiI9PT1lLmg/TmFOOmUuaCxbcixuXT1bMCwwXTtzd2l0Y2goZS5hbmNob3JUeXBlfHwiIil7Y2FzZSJib3R0b21DZW50ZXIiOltyLG5dPVthLzIsc107YnJlYWs7Y2FzZSJib3R0b21MZWZ0IjpbcixuXT1bMCxzXTticmVhaztjYXNlImJvdHRvbVJpZ2h0IjpbcixuXT1bYSxzXTticmVhaztjYXNlIm1pZGRsZUNlbnRlciI6W3Isbl09W2EvMixzLzJdO2JyZWFrO2Nhc2UibWlkZGxlTGVmdCI6W3Isbl09WzAscy8yXTticmVhaztjYXNlIm1pZGRsZVJpZ2h0IjpbcixuXT1bYSxzLzJdO2JyZWFrO2Nhc2UidG9wQ2VudGVyIjpbcixuXT1bYS8yLDBdO2JyZWFrO2Nhc2UidG9wUmlnaHQiOltyLG5dPVthLDBdfXN3aXRjaChlLnJvdGF0ZXx8MCl7Y2FzZSAwOlt0LGldPVstciwtbl07YnJlYWs7Y2FzZSA5MDpbdCxpXT1bLW4scl07W2Esc109W3MsLWFdO2JyZWFrO2Nhc2UgMTgwOlt0LGldPVtyLG5dO1thLHNdPVstYSwtc107YnJlYWs7Y2FzZSAyNzA6W3QsaV09W24sLXJdO1thLHNdPVstcyxhXX1yZXR1cm5bZS54K3QrTWF0aC5taW4oMCxhKSxlLnkraStNYXRoLm1pbigwLHMpLE1hdGguYWJzKGEpLE1hdGguYWJzKHMpXX0oZSk7c3dpdGNoKGkubGF5b3V0KXtjYXNlImxyLXRiIjpjYXNlInJsLXRiIjpyZXR1cm4gMD09PWE/ZVttcl0oKVthcl0ubm9MYXlvdXRGYWlsdXJlPyIiIT09ZS53P01hdGgucm91bmQoci10LndpZHRoKTw9Mjp0LndpZHRoPjI6ISgiIiE9PWUuaCYmTWF0aC5yb3VuZChuLXQuaGVpZ2h0KT4yKSYmKCIiIT09ZS53P01hdGgucm91bmQoci10LndpZHRoKTw9Mnx8MD09PWlbYXJdLm51bWJlckluTGluZSYmdC5oZWlnaHQ+Mjp0LndpZHRoPjIpOiEhZVttcl0oKVthcl0ubm9MYXlvdXRGYWlsdXJlfHwhKCIiIT09ZS5oJiZNYXRoLnJvdW5kKG4tdC5oZWlnaHQpPjIpJiYoKCIiPT09ZS53fHxNYXRoLnJvdW5kKHItdC53aWR0aCk8PTJ8fCFpW01yXSgpKSYmdC5oZWlnaHQ+Mik7Y2FzZSJ0YWJsZSI6Y2FzZSJ0YiI6cmV0dXJuISFlW21yXSgpW2FyXS5ub0xheW91dEZhaWx1cmV8fCgiIj09PWUuaHx8ZVt4cl0oKT8oIiI9PT1lLnd8fE1hdGgucm91bmQoci10LndpZHRoKTw9Mnx8IWlbTXJdKCkpJiZ0LmhlaWdodD4yOk1hdGgucm91bmQobi10LmhlaWdodCk8PTIpO2Nhc2UicG9zaXRpb24iOmlmKGVbbXJdKClbYXJdLm5vTGF5b3V0RmFpbHVyZSlyZXR1cm4hMDtpZigiIj09PWUuaHx8TWF0aC5yb3VuZChuK3MtdC5oZWlnaHQpPD0yKXJldHVybiEwO3JldHVybiBuK3M+ZVttcl0oKVthcl0uY3VycmVudENvbnRlbnRBcmVhLmg7Y2FzZSJybC1yb3ciOmNhc2Uicm93IjpyZXR1cm4hIWVbbXJdKClbYXJdLm5vTGF5b3V0RmFpbHVyZXx8KCIiPT09ZS5ofHxNYXRoLnJvdW5kKG4tdC5oZWlnaHQpPD0yKTtkZWZhdWx0OnJldHVybiEwfX1jb25zdCBKbj1nbi50ZW1wbGF0ZS5pZCxIbj0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLFluPS9eSChcZCspJC8sdm49bmV3IFNldChbImltYWdlL2dpZiIsImltYWdlL2pwZWciLCJpbWFnZS9qcGciLCJpbWFnZS9wanBlZyIsImltYWdlL3BuZyIsImltYWdlL2FwbmciLCJpbWFnZS94LXBuZyIsImltYWdlL2JtcCIsImltYWdlL3gtbXMtYm1wIiwiaW1hZ2UvdGlmZiIsImltYWdlL3RpZiIsImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSJdKSxLbj1bW1s2Niw3N10sImltYWdlL2JtcCJdLFtbMjU1LDIxNiwyNTVdLCJpbWFnZS9qcGVnIl0sW1s3Myw3Myw0MiwwXSwiaW1hZ2UvdGlmZiJdLFtbNzcsNzcsMCw0Ml0sImltYWdlL3RpZmYiXSxbWzcxLDczLDcwLDU2LDU3LDk3XSwiaW1hZ2UvZ2lmIl0sW1sxMzcsODAsNzgsNzEsMTMsMTAsMjYsMTBdLCJpbWFnZS9wbmciXV07ZnVuY3Rpb24gZ2V0Qm9yZGVyRGltcyhlKXtpZighZXx8IWUuYm9yZGVyKXJldHVybnt3OjAsaDowfTtjb25zdCB0PWUuYm9yZGVyW0NyXSgpO3JldHVybiB0P3t3OnQud2lkdGhzWzBdK3Qud2lkdGhzWzJdK3QuaW5zZXRzWzBdK3QuaW5zZXRzWzJdLGg6dC53aWR0aHNbMV0rdC53aWR0aHNbM10rdC5pbnNldHNbMV0rdC5pbnNldHNbM119Ont3OjAsaDowfX1mdW5jdGlvbiBoYXNNYXJnaW4oZSl7cmV0dXJuIGUubWFyZ2luJiYoZS5tYXJnaW4udG9wSW5zZXR8fGUubWFyZ2luLnJpZ2h0SW5zZXR8fGUubWFyZ2luLmJvdHRvbUluc2V0fHxlLm1hcmdpbi5sZWZ0SW5zZXQpfWZ1bmN0aW9uIF9zZXRWYWx1ZShlLHQpe2lmKCFlLnZhbHVlKXtjb25zdCB0PW5ldyBWYWx1ZSh7fSk7ZVtqc10odCk7ZS52YWx1ZT10fWUudmFsdWVbJHJdKHQpfWZ1bmN0aW9uKmdldENvbnRhaW5lZENoaWxkcmVuKGUpe2Zvcihjb25zdCB0IG9mIGVbRXJdKCkpdCBpbnN0YW5jZW9mIFN1YmZvcm1TZXQ/eWllbGQqdFt1cl0oKTp5aWVsZCB0fWZ1bmN0aW9uIGlzUmVxdWlyZWQoZSl7cmV0dXJuImVycm9yIj09PWUudmFsaWRhdGU/Lm51bGxUZXN0fWZ1bmN0aW9uIHNldFRhYkluZGV4KGUpe2Zvcig7ZTspe2lmKCFlLnRyYXZlcnNhbCl7ZVtBbl09ZVtwcl0oKVtBbl07cmV0dXJufWlmKGVbQW5dKXJldHVybjtsZXQgdD1udWxsO2Zvcihjb25zdCBpIG9mIGUudHJhdmVyc2FsW0VyXSgpKWlmKCJuZXh0Ij09PWkub3BlcmF0aW9uKXt0PWk7YnJlYWt9aWYoIXR8fCF0LnJlZil7ZVtBbl09ZVtwcl0oKVtBbl07cmV0dXJufWNvbnN0IGk9ZVttcl0oKTtlW0FuXT0rK2lbQW5dO2NvbnN0IGE9aVtWcl0odC5yZWYsZSk7aWYoIWEpcmV0dXJuO2U9YVswXX19ZnVuY3Rpb24gYXBwbHlBc3Npc3QoZSx0KXtjb25zdCBpPWUuYXNzaXN0O2lmKGkpe2NvbnN0IGU9aVthbl0oKTtlJiYodC50aXRsZT1lKTtjb25zdCBhPWkucm9sZS5tYXRjaChZbik7aWYoYSl7Y29uc3QgZT0iaGVhZGluZyIsaT1hWzFdO3Qucm9sZT1lO3RbImFyaWEtbGV2ZWwiXT1pfX1pZigidGFibGUiPT09ZS5sYXlvdXQpdC5yb2xlPSJ0YWJsZSI7ZWxzZSBpZigicm93Ij09PWUubGF5b3V0KXQucm9sZT0icm93IjtlbHNle2NvbnN0IGk9ZVtwcl0oKTsicm93Ij09PWkubGF5b3V0JiYodC5yb2xlPSJUSCI9PT1pLmFzc2lzdD8ucm9sZT8iY29sdW1uaGVhZGVyIjoiY2VsbCIpfX1mdW5jdGlvbiBhcmlhTGFiZWwoZSl7aWYoIWUuYXNzaXN0KXJldHVybiBudWxsO2NvbnN0IHQ9ZS5hc3Npc3Q7cmV0dXJuIHQuc3BlYWsmJiIiIT09dC5zcGVha1tlcl0/dC5zcGVha1tlcl06dC50b29sVGlwP3QudG9vbFRpcFtlcl06bnVsbH1mdW5jdGlvbiB2YWx1ZVRvSHRtbChlKXtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6e2NsYXNzOlsieGZhUmljaCJdLHN0eWxlOk9iamVjdC5jcmVhdGUobnVsbCl9LGNoaWxkcmVuOlt7bmFtZToic3BhbiIsYXR0cmlidXRlczp7c3R5bGU6T2JqZWN0LmNyZWF0ZShudWxsKX0sdmFsdWU6ZX1dfSl9ZnVuY3Rpb24gc2V0Rmlyc3RVbnNwbGl0dGFibGUoZSl7Y29uc3QgdD1lW21yXSgpO2lmKG51bGw9PT10W2FyXS5maXJzdFVuc3BsaXR0YWJsZSl7dFthcl0uZmlyc3RVbnNwbGl0dGFibGU9ZTt0W2FyXS5ub0xheW91dEZhaWx1cmU9ITB9fWZ1bmN0aW9uIHVuc2V0Rmlyc3RVbnNwbGl0dGFibGUoZSl7Y29uc3QgdD1lW21yXSgpO3RbYXJdLmZpcnN0VW5zcGxpdHRhYmxlPT09ZSYmKHRbYXJdLm5vTGF5b3V0RmFpbHVyZT0hMSl9ZnVuY3Rpb24gaGFuZGxlQnJlYWsoZSl7aWYoZVthcl0pcmV0dXJuITE7ZVthcl09T2JqZWN0LmNyZWF0ZShudWxsKTtpZigiYXV0byI9PT1lLnRhcmdldFR5cGUpcmV0dXJuITE7Y29uc3QgdD1lW21yXSgpO2xldCBpPW51bGw7aWYoZS50YXJnZXQpe2k9dFtWcl0oZS50YXJnZXQsZVtwcl0oKSk7aWYoIWkpcmV0dXJuITE7aT1pWzBdfWNvbnN0e2N1cnJlbnRQYWdlQXJlYTphLGN1cnJlbnRDb250ZW50QXJlYTpzfT10W2FyXTtpZigicGFnZUFyZWEiPT09ZS50YXJnZXRUeXBlKXtpIGluc3RhbmNlb2YgUGFnZUFyZWF8fChpPW51bGwpO2lmKGUuc3RhcnROZXcpe2VbYXJdLnRhcmdldD1pfHxhO3JldHVybiEwfWlmKGkmJmkhPT1hKXtlW2FyXS50YXJnZXQ9aTtyZXR1cm4hMH1yZXR1cm4hMX1pIGluc3RhbmNlb2YgQ29udGVudEFyZWF8fChpPW51bGwpO2NvbnN0IHI9aSYmaVtwcl0oKTtsZXQgbixvPXI7aWYoZS5zdGFydE5ldylpZihpKXtjb25zdCBlPXIuY29udGVudEFyZWEuY2hpbGRyZW4sdD1lLmluZGV4T2YocyksYT1lLmluZGV4T2YoaSk7LTEhPT10JiZ0PGEmJihvPW51bGwpO249YS0xfWVsc2Ugbj1hLmNvbnRlbnRBcmVhLmNoaWxkcmVuLmluZGV4T2Yocyk7ZWxzZXtpZighaXx8aT09PXMpcmV0dXJuITE7bj1yLmNvbnRlbnRBcmVhLmNoaWxkcmVuLmluZGV4T2YoaSktMTtvPXI9PT1hP251bGw6cn1lW2FyXS50YXJnZXQ9bztlW2FyXS5pbmRleD1uO3JldHVybiEwfWZ1bmN0aW9uIGhhbmRsZU92ZXJmbG93KGUsdCxpKXtjb25zdCBhPWVbbXJdKCkscz1hW2FyXS5ub0xheW91dEZhaWx1cmUscj10W2ZyXTt0W2ZyXT0oKT0+ZTthW2FyXS5ub0xheW91dEZhaWx1cmU9ITA7Y29uc3Qgbj10W2FuXShpKTtlW1hzXShuLmh0bWwsbi5iYm94KTthW2FyXS5ub0xheW91dEZhaWx1cmU9czt0W2ZyXT1yfWNsYXNzIEFwcGVhcmFuY2VGaWx0ZXIgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImFwcGVhcmFuY2VGaWx0ZXIiKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudHlwZT1nZXRTdHJpbmdPcHRpb24oZS50eXBlLFsib3B0aW9uYWwiLCJyZXF1aXJlZCJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIEFyYyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiYXJjIiwhMCk7dGhpcy5jaXJjdWxhcj1nZXRJbnRlZ2VyKHtkYXRhOmUuY2lyY3VsYXIsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLmhhbmQ9Z2V0U3RyaW5nT3B0aW9uKGUuaGFuZCxbImV2ZW4iLCJsZWZ0IiwicmlnaHQiXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnN0YXJ0QW5nbGU9Z2V0RmxvYXQoe2RhdGE6ZS5zdGFydEFuZ2xlLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PiEwfSk7dGhpcy5zd2VlcEFuZ2xlPWdldEZsb2F0KHtkYXRhOmUuc3dlZXBBbmdsZSxkZWZhdWx0VmFsdWU6MzYwLHZhbGlkYXRlOmU9PiEwfSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuZWRnZT1udWxsO3RoaXMuZmlsbD1udWxsfVthbl0oKXtjb25zdCBlPXRoaXMuZWRnZXx8bmV3IEVkZ2Uoe30pLHQ9ZVtybl0oKSxpPU9iamVjdC5jcmVhdGUobnVsbCk7InZpc2libGUiPT09dGhpcy5maWxsPy5wcmVzZW5jZT9PYmplY3QuYXNzaWduKGksdGhpcy5maWxsW3JuXSgpKTppLmZpbGw9InRyYW5zcGFyZW50IjtpLnN0cm9rZVdpZHRoPW1lYXN1cmVUb1N0cmluZygidmlzaWJsZSI9PT1lLnByZXNlbmNlP2UudGhpY2tuZXNzOjApO2kuc3Ryb2tlPXQuY29sb3I7bGV0IGE7Y29uc3Qgcz17eG1sbnM6SG4sc3R5bGU6e3dpZHRoOiIxMDAlIixoZWlnaHQ6IjEwMCUiLG92ZXJmbG93OiJ2aXNpYmxlIn19O2lmKDM2MD09PXRoaXMuc3dlZXBBbmdsZSlhPXtuYW1lOiJlbGxpcHNlIixhdHRyaWJ1dGVzOnt4bWxuczpIbixjeDoiNTAlIixjeToiNTAlIixyeDoiNTAlIixyeToiNTAlIixzdHlsZTppfX07ZWxzZXtjb25zdCBlPXRoaXMuc3RhcnRBbmdsZSpNYXRoLlBJLzE4MCx0PXRoaXMuc3dlZXBBbmdsZSpNYXRoLlBJLzE4MCxyPXRoaXMuc3dlZXBBbmdsZT4xODA/MTowLFtuLG8sZyxjXT1bNTAqKDErTWF0aC5jb3MoZSkpLDUwKigxLU1hdGguc2luKGUpKSw1MCooMStNYXRoLmNvcyhlK3QpKSw1MCooMS1NYXRoLnNpbihlK3QpKV07YT17bmFtZToicGF0aCIsYXR0cmlidXRlczp7eG1sbnM6SG4sZDpgTSAke259ICR7b30gQSA1MCA1MCAwICR7cn0gMCAke2d9ICR7Y31gLHZlY3RvckVmZmVjdDoibm9uLXNjYWxpbmctc3Ryb2tlIixzdHlsZTppfX07T2JqZWN0LmFzc2lnbihzLHt2aWV3Qm94OiIwIDAgMTAwIDEwMCIscHJlc2VydmVBc3BlY3RSYXRpbzoibm9uZSJ9KX1jb25zdCByPXtuYW1lOiJzdmciLGNoaWxkcmVuOlthXSxhdHRyaWJ1dGVzOnN9O2lmKGhhc01hcmdpbih0aGlzW3ByXSgpW3ByXSgpKSlyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6e3N0eWxlOntkaXNwbGF5OiJpbmxpbmUiLHdpZHRoOiIxMDAlIixoZWlnaHQ6IjEwMCUifX0sY2hpbGRyZW46W3JdfSk7ci5hdHRyaWJ1dGVzLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSI7cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2VzcyhyKX19Y2xhc3MgQXJlYSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiYXJlYSIsITApO3RoaXMuY29sU3Bhbj1nZXRJbnRlZ2VyKHtkYXRhOmUuY29sU3BhbixkZWZhdWx0VmFsdWU6MSx2YWxpZGF0ZTplPT5lPj0xfHwtMT09PWV9KTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucmVsZXZhbnQ9Z2V0UmVsZXZhbnQoZS5yZWxldmFudCk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMueD1nZXRNZWFzdXJlbWVudChlLngsIjBwdCIpO3RoaXMueT1nZXRNZWFzdXJlbWVudChlLnksIjBwdCIpO3RoaXMuZGVzYz1udWxsO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5hcmVhPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRyYXc9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZXhPYmplY3Q9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZXhjbEdyb3VwPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmZpZWxkPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnN1YmZvcm09bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3ViZm9ybVNldD1uZXcgWEZBT2JqZWN0QXJyYXl9Klt1cl0oKXt5aWVsZCpnZXRDb250YWluZWRDaGlsZHJlbih0aGlzKX1bVXJdKCl7cmV0dXJuITB9W2tyXSgpe3JldHVybiEwfVtYc10oZSx0KXtjb25zdFtpLGEscyxyXT10O3RoaXNbYXJdLndpZHRoPU1hdGgubWF4KHRoaXNbYXJdLndpZHRoLGkrcyk7dGhpc1thcl0uaGVpZ2h0PU1hdGgubWF4KHRoaXNbYXJdLmhlaWdodCxhK3IpO3RoaXNbYXJdLmNoaWxkcmVuLnB1c2goZSl9W2dyXSgpe3JldHVybiB0aGlzW2FyXS5hdmFpbGFibGVTcGFjZX1bYW5dKGUpe2NvbnN0IHQ9dG9TdHlsZSh0aGlzLCJwb3NpdGlvbiIpLGk9e3N0eWxlOnQsaWQ6dGhpc1tubl0sY2xhc3M6WyJ4ZmFBcmVhIl19O2lzUHJpbnRPbmx5KHRoaXMpJiZpLmNsYXNzLnB1c2goInhmYVByaW50T25seSIpO3RoaXMubmFtZSYmKGkueGZhTmFtZT10aGlzLm5hbWUpO2NvbnN0IGE9W107dGhpc1thcl09e2NoaWxkcmVuOmEsd2lkdGg6MCxoZWlnaHQ6MCxhdmFpbGFibGVTcGFjZTplfTtjb25zdCBzPXRoaXNbWnNdKHtmaWx0ZXI6bmV3IFNldChbImFyZWEiLCJkcmF3IiwiZmllbGQiLCJleGNsR3JvdXAiLCJzdWJmb3JtIiwic3ViZm9ybVNldCJdKSxpbmNsdWRlOiEwfSk7aWYoIXMuc3VjY2Vzcyl7aWYocy5pc0JyZWFrKCkpcmV0dXJuIHM7ZGVsZXRlIHRoaXNbYXJdO3JldHVybiBIVE1MUmVzdWx0LkZBSUxVUkV9dC53aWR0aD1tZWFzdXJlVG9TdHJpbmcodGhpc1thcl0ud2lkdGgpO3QuaGVpZ2h0PW1lYXN1cmVUb1N0cmluZyh0aGlzW2FyXS5oZWlnaHQpO2NvbnN0IHI9e25hbWU6ImRpdiIsYXR0cmlidXRlczppLGNoaWxkcmVuOmF9LG49W3RoaXMueCx0aGlzLnksdGhpc1thcl0ud2lkdGgsdGhpc1thcl0uaGVpZ2h0XTtkZWxldGUgdGhpc1thcl07cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2VzcyhyLG4pfX1jbGFzcyBBc3Npc3QgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImFzc2lzdCIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5yb2xlPWUucm9sZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuc3BlYWs9bnVsbDt0aGlzLnRvb2xUaXA9bnVsbH1bYW5dKCl7cmV0dXJuIHRoaXMudG9vbFRpcD8uW2VyXXx8bnVsbH19Y2xhc3MgQmFyY29kZSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiYmFyY29kZSIsITApO3RoaXMuY2hhckVuY29kaW5nPWdldEtleXdvcmQoe2RhdGE6ZS5jaGFyRW5jb2Rpbmc/ZS5jaGFyRW5jb2RpbmcudG9Mb3dlckNhc2UoKToiIixkZWZhdWx0VmFsdWU6IiIsdmFsaWRhdGU6ZT0+WyJ1dGYtOCIsImJpZy1maXZlIiwiZm9udHNwZWNpZmljIiwiZ2JrIiwiZ2ItMTgwMzAiLCJnYi0yMzEyIiwia3NjLTU2MDEiLCJub25lIiwic2hpZnQtamlzIiwidWNzLTIiLCJ1dGYtMTYiXS5pbmNsdWRlcyhlKXx8ZS5tYXRjaCgvaXNvLTg4NTktXGR7Mn0vKX0pO3RoaXMuY2hlY2tzdW09Z2V0U3RyaW5nT3B0aW9uKGUuY2hlY2tzdW0sWyJub25lIiwiMW1vZDEwIiwiMW1vZDEwXzFtb2QxMSIsIjJtb2QxMCIsImF1dG8iXSk7dGhpcy5kYXRhQ29sdW1uQ291bnQ9Z2V0SW50ZWdlcih7ZGF0YTplLmRhdGFDb2x1bW5Db3VudCxkZWZhdWx0VmFsdWU6LTEsdmFsaWRhdGU6ZT0+ZT49MH0pO3RoaXMuZGF0YUxlbmd0aD1nZXRJbnRlZ2VyKHtkYXRhOmUuZGF0YUxlbmd0aCxkZWZhdWx0VmFsdWU6LTEsdmFsaWRhdGU6ZT0+ZT49MH0pO3RoaXMuZGF0YVByZXA9Z2V0U3RyaW5nT3B0aW9uKGUuZGF0YVByZXAsWyJub25lIiwiZmxhdGVDb21wcmVzcyJdKTt0aGlzLmRhdGFSb3dDb3VudD1nZXRJbnRlZ2VyKHtkYXRhOmUuZGF0YVJvd0NvdW50LGRlZmF1bHRWYWx1ZTotMSx2YWxpZGF0ZTplPT5lPj0wfSk7dGhpcy5lbmRDaGFyPWUuZW5kQ2hhcnx8IiI7dGhpcy5lcnJvckNvcnJlY3Rpb25MZXZlbD1nZXRJbnRlZ2VyKHtkYXRhOmUuZXJyb3JDb3JyZWN0aW9uTGV2ZWwsZGVmYXVsdFZhbHVlOi0xLHZhbGlkYXRlOmU9PmU+PTAmJmU8PTh9KTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubW9kdWxlSGVpZ2h0PWdldE1lYXN1cmVtZW50KGUubW9kdWxlSGVpZ2h0LCI1bW0iKTt0aGlzLm1vZHVsZVdpZHRoPWdldE1lYXN1cmVtZW50KGUubW9kdWxlV2lkdGgsIjAuMjVtbSIpO3RoaXMucHJpbnRDaGVja0RpZ2l0PWdldEludGVnZXIoe2RhdGE6ZS5wcmludENoZWNrRGlnaXQsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLnJvd0NvbHVtblJhdGlvPWdldFJhdGlvKGUucm93Q29sdW1uUmF0aW8pO3RoaXMuc3RhcnRDaGFyPWUuc3RhcnRDaGFyfHwiIjt0aGlzLnRleHRMb2NhdGlvbj1nZXRTdHJpbmdPcHRpb24oZS50ZXh0TG9jYXRpb24sWyJiZWxvdyIsImFib3ZlIiwiYWJvdmVFbWJlZGRlZCIsImJlbG93RW1iZWRkZWQiLCJub25lIl0pO3RoaXMudHJ1bmNhdGU9Z2V0SW50ZWdlcih7ZGF0YTplLnRydW5jYXRlLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfSk7dGhpcy50eXBlPWdldFN0cmluZ09wdGlvbihlLnR5cGU/ZS50eXBlLnRvTG93ZXJDYXNlKCk6IiIsWyJhenRlYyIsImNvZGFiYXIiLCJjb2RlMm9mNWluZHVzdHJpYWwiLCJjb2RlMm9mNWludGVybGVhdmVkIiwiY29kZTJvZjVtYXRyaXgiLCJjb2RlMm9mNXN0YW5kYXJkIiwiY29kZTNvZjkiLCJjb2RlM29mOWV4dGVuZGVkIiwiY29kZTExIiwiY29kZTQ5IiwiY29kZTkzIiwiY29kZTEyOCIsImNvZGUxMjhhIiwiY29kZTEyOGIiLCJjb2RlMTI4YyIsImNvZGUxMjhzc2NjIiwiZGF0YW1hdHJpeCIsImVhbjgiLCJlYW44YWRkMiIsImVhbjhhZGQ1IiwiZWFuMTMiLCJlYW4xM2FkZDIiLCJlYW4xM2FkZDUiLCJlYW4xM3B3Y2QiLCJmaW0iLCJsb2dtYXJzIiwibWF4aWNvZGUiLCJtc2kiLCJwZGY0MTciLCJwZGY0MTdtYWNybyIsInBsZXNzZXkiLCJwb3N0YXVzY3VzdDIiLCJwb3N0YXVzY3VzdDMiLCJwb3N0YXVzcmVwbHlwYWlkIiwicG9zdGF1c3N0YW5kYXJkIiwicG9zdHVrcm00c2NjIiwicG9zdHVzZHBiYyIsInBvc3R1c2ltYiIsInBvc3R1c3N0YW5kYXJkIiwicG9zdHVzNXppcCIsInFyY29kZSIsInJmaWQiLCJyc3MxNCIsInJzczE0ZXhwYW5kZWQiLCJyc3MxNGxpbWl0ZWQiLCJyc3MxNHN0YWNrZWQiLCJyc3MxNHN0YWNrZWRvbW5pIiwicnNzMTR0cnVuY2F0ZWQiLCJ0ZWxlcGVuIiwidWNjMTI4IiwidWNjMTI4cmFuZG9tIiwidWNjMTI4c3NjYyIsInVwY2EiLCJ1cGNhYWRkMiIsInVwY2FhZGQ1IiwidXBjYXB3Y2QiLCJ1cGNlIiwidXBjZWFkZDIiLCJ1cGNlYWRkNSIsInVwY2VhbjIiLCJ1cGNlYW41IiwidXBzbWF4aWNvZGUiXSk7dGhpcy51cHNNb2RlPWdldFN0cmluZ09wdGlvbihlLnVwc01vZGUsWyJ1c0NhcnJpZXIiLCJpbnRlcm5hdGlvbmFsQ2FycmllciIsInNlY3VyZVN5bWJvbCIsInN0YW5kYXJkU3ltYm9sIl0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLndpZGVOYXJyb3dSYXRpbz1nZXRSYXRpbyhlLndpZGVOYXJyb3dSYXRpbyk7dGhpcy5lbmNyeXB0PW51bGw7dGhpcy5leHRyYXM9bnVsbH19Y2xhc3MgQmluZCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiYmluZCIsITApO3RoaXMubWF0Y2g9Z2V0U3RyaW5nT3B0aW9uKGUubWF0Y2gsWyJvbmNlIiwiZGF0YVJlZiIsImdsb2JhbCIsIm5vbmUiXSk7dGhpcy5yZWY9ZS5yZWZ8fCIiO3RoaXMucGljdHVyZT1udWxsfX1jbGFzcyBCaW5kSXRlbXMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImJpbmRJdGVtcyIpO3RoaXMuY29ubmVjdGlvbj1lLmNvbm5lY3Rpb258fCIiO3RoaXMubGFiZWxSZWY9ZS5sYWJlbFJlZnx8IiI7dGhpcy5yZWY9ZS5yZWZ8fCIiO3RoaXMudmFsdWVSZWY9ZS52YWx1ZVJlZnx8IiJ9fWNsYXNzIEJvb2tlbmQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImJvb2tlbmQiKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubGVhZGVyPWUubGVhZGVyfHwiIjt0aGlzLnRyYWlsZXI9ZS50cmFpbGVyfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIEJvb2xlYW5FbGVtZW50IGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImJvb2xlYW4iKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn1bYW5dKGUpe3JldHVybiB2YWx1ZVRvSHRtbCgxPT09dGhpc1tlcl0/IjEiOiIwIil9fWNsYXNzIEJvcmRlciBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiYm9yZGVyIiwhMCk7dGhpcy5icmVhaz1nZXRTdHJpbmdPcHRpb24oZS5icmVhayxbImNsb3NlIiwib3BlbiJdKTt0aGlzLmhhbmQ9Z2V0U3RyaW5nT3B0aW9uKGUuaGFuZCxbImV2ZW4iLCJsZWZ0IiwicmlnaHQiXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnByZXNlbmNlPWdldFN0cmluZ09wdGlvbihlLnByZXNlbmNlLFsidmlzaWJsZSIsImhpZGRlbiIsImluYWN0aXZlIiwiaW52aXNpYmxlIl0pO3RoaXMucmVsZXZhbnQ9Z2V0UmVsZXZhbnQoZS5yZWxldmFudCk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuY29ybmVyPW5ldyBYRkFPYmplY3RBcnJheSg0KTt0aGlzLmVkZ2U9bmV3IFhGQU9iamVjdEFycmF5KDQpO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5maWxsPW51bGw7dGhpcy5tYXJnaW49bnVsbH1bQ3JdKCl7aWYoIXRoaXNbYXJdKXtjb25zdCBlPXRoaXMuZWRnZS5jaGlsZHJlbi5zbGljZSgpO2lmKGUubGVuZ3RoPDQpe2NvbnN0IHQ9ZS5hdCgtMSl8fG5ldyBFZGdlKHt9KTtmb3IobGV0IGk9ZS5sZW5ndGg7aTw0O2krKyllLnB1c2godCl9Y29uc3QgdD1lLm1hcCgoZT0+ZS50aGlja25lc3MpKSxpPVswLDAsMCwwXTtpZih0aGlzLm1hcmdpbil7aVswXT10aGlzLm1hcmdpbi50b3BJbnNldDtpWzFdPXRoaXMubWFyZ2luLnJpZ2h0SW5zZXQ7aVsyXT10aGlzLm1hcmdpbi5ib3R0b21JbnNldDtpWzNdPXRoaXMubWFyZ2luLmxlZnRJbnNldH10aGlzW2FyXT17d2lkdGhzOnQsaW5zZXRzOmksZWRnZXM6ZX19cmV0dXJuIHRoaXNbYXJdfVtybl0oKXtjb25zdHtlZGdlczplfT10aGlzW0NyXSgpLHQ9ZS5tYXAoKGU9Pntjb25zdCB0PWVbcm5dKCk7dC5jb2xvcnx8PSIjMDAwMDAwIjtyZXR1cm4gdH0pKSxpPU9iamVjdC5jcmVhdGUobnVsbCk7dGhpcy5tYXJnaW4mJk9iamVjdC5hc3NpZ24oaSx0aGlzLm1hcmdpbltybl0oKSk7InZpc2libGUiPT09dGhpcy5maWxsPy5wcmVzZW5jZSYmT2JqZWN0LmFzc2lnbihpLHRoaXMuZmlsbFtybl0oKSk7aWYodGhpcy5jb3JuZXIuY2hpbGRyZW4uc29tZSgoZT0+MCE9PWUucmFkaXVzKSkpe2NvbnN0IGU9dGhpcy5jb3JuZXIuY2hpbGRyZW4ubWFwKChlPT5lW3JuXSgpKSk7aWYoMj09PWUubGVuZ3RofHwzPT09ZS5sZW5ndGgpe2NvbnN0IHQ9ZS5hdCgtMSk7Zm9yKGxldCBpPWUubGVuZ3RoO2k8NDtpKyspZS5wdXNoKHQpfWkuYm9yZGVyUmFkaXVzPWUubWFwKChlPT5lLnJhZGl1cykpLmpvaW4oIiAiKX1zd2l0Y2godGhpcy5wcmVzZW5jZSl7Y2FzZSJpbnZpc2libGUiOmNhc2UiaGlkZGVuIjppLmJvcmRlclN0eWxlPSIiO2JyZWFrO2Nhc2UiaW5hY3RpdmUiOmkuYm9yZGVyU3R5bGU9Im5vbmUiO2JyZWFrO2RlZmF1bHQ6aS5ib3JkZXJTdHlsZT10Lm1hcCgoZT0+ZS5zdHlsZSkpLmpvaW4oIiAiKX1pLmJvcmRlcldpZHRoPXQubWFwKChlPT5lLndpZHRoKSkuam9pbigiICIpO2kuYm9yZGVyQ29sb3I9dC5tYXAoKGU9PmUuY29sb3IpKS5qb2luKCIgIik7cmV0dXJuIGl9fWNsYXNzIEJyZWFrIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJicmVhayIsITApO3RoaXMuYWZ0ZXI9Z2V0U3RyaW5nT3B0aW9uKGUuYWZ0ZXIsWyJhdXRvIiwiY29udGVudEFyZWEiLCJwYWdlQXJlYSIsInBhZ2VFdmVuIiwicGFnZU9kZCJdKTt0aGlzLmFmdGVyVGFyZ2V0PWUuYWZ0ZXJUYXJnZXR8fCIiO3RoaXMuYmVmb3JlPWdldFN0cmluZ09wdGlvbihlLmJlZm9yZSxbImF1dG8iLCJjb250ZW50QXJlYSIsInBhZ2VBcmVhIiwicGFnZUV2ZW4iLCJwYWdlT2RkIl0pO3RoaXMuYmVmb3JlVGFyZ2V0PWUuYmVmb3JlVGFyZ2V0fHwiIjt0aGlzLmJvb2tlbmRMZWFkZXI9ZS5ib29rZW5kTGVhZGVyfHwiIjt0aGlzLmJvb2tlbmRUcmFpbGVyPWUuYm9va2VuZFRyYWlsZXJ8fCIiO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5vdmVyZmxvd0xlYWRlcj1lLm92ZXJmbG93TGVhZGVyfHwiIjt0aGlzLm92ZXJmbG93VGFyZ2V0PWUub3ZlcmZsb3dUYXJnZXR8fCIiO3RoaXMub3ZlcmZsb3dUcmFpbGVyPWUub3ZlcmZsb3dUcmFpbGVyfHwiIjt0aGlzLnN0YXJ0TmV3PWdldEludGVnZXIoe2RhdGE6ZS5zdGFydE5ldyxkZWZhdWx0VmFsdWU6MCx2YWxpZGF0ZTplPT4xPT09ZX0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmV4dHJhcz1udWxsfX1jbGFzcyBCcmVha0FmdGVyIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJicmVha0FmdGVyIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmxlYWRlcj1lLmxlYWRlcnx8IiI7dGhpcy5zdGFydE5ldz1nZXRJbnRlZ2VyKHtkYXRhOmUuc3RhcnROZXcsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLnRhcmdldD1lLnRhcmdldHx8IiI7dGhpcy50YXJnZXRUeXBlPWdldFN0cmluZ09wdGlvbihlLnRhcmdldFR5cGUsWyJhdXRvIiwiY29udGVudEFyZWEiLCJwYWdlQXJlYSJdKTt0aGlzLnRyYWlsZXI9ZS50cmFpbGVyfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5zY3JpcHQ9bnVsbH19Y2xhc3MgQnJlYWtCZWZvcmUgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImJyZWFrQmVmb3JlIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmxlYWRlcj1lLmxlYWRlcnx8IiI7dGhpcy5zdGFydE5ldz1nZXRJbnRlZ2VyKHtkYXRhOmUuc3RhcnROZXcsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLnRhcmdldD1lLnRhcmdldHx8IiI7dGhpcy50YXJnZXRUeXBlPWdldFN0cmluZ09wdGlvbihlLnRhcmdldFR5cGUsWyJhdXRvIiwiY29udGVudEFyZWEiLCJwYWdlQXJlYSJdKTt0aGlzLnRyYWlsZXI9ZS50cmFpbGVyfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5zY3JpcHQ9bnVsbH1bYW5dKGUpe3RoaXNbYXJdPXt9O3JldHVybiBIVE1MUmVzdWx0LkZBSUxVUkV9fWNsYXNzIEJ1dHRvbiBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiYnV0dG9uIiwhMCk7dGhpcy5oaWdobGlnaHQ9Z2V0U3RyaW5nT3B0aW9uKGUuaGlnaGxpZ2h0LFsiaW52ZXJ0ZWQiLCJub25lIiwib3V0bGluZSIsInB1c2giXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5leHRyYXM9bnVsbH1bYW5dKGUpe2NvbnN0IHQ9dGhpc1twcl0oKVtwcl0oKSxpPXtuYW1lOiJidXR0b24iLGF0dHJpYnV0ZXM6e2lkOnRoaXNbbm5dLGNsYXNzOlsieGZhQnV0dG9uIl0sc3R5bGU6e319LGNoaWxkcmVuOltdfTtmb3IoY29uc3QgZSBvZiB0LmV2ZW50LmNoaWxkcmVuKXtpZigiY2xpY2siIT09ZS5hY3Rpdml0eXx8IWUuc2NyaXB0KWNvbnRpbnVlO2NvbnN0IHQ9cmVjb3ZlckpzVVJMKGUuc2NyaXB0W2VyXSk7aWYoIXQpY29udGludWU7Y29uc3QgYT1maXhVUkwodC51cmwpO2EmJmkuY2hpbGRyZW4ucHVzaCh7bmFtZToiYSIsYXR0cmlidXRlczp7aWQ6ImxpbmsiK3RoaXNbbm5dLGhyZWY6YSxuZXdXaW5kb3c6dC5uZXdXaW5kb3csY2xhc3M6WyJ4ZmFMaW5rIl0sc3R5bGU6e319LGNoaWxkcmVuOltdfSl9cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2VzcyhpKX19Y2xhc3MgQ2FsY3VsYXRlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJjYWxjdWxhdGUiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMub3ZlcnJpZGU9Z2V0U3RyaW5nT3B0aW9uKGUub3ZlcnJpZGUsWyJkaXNhYmxlZCIsImVycm9yIiwiaWdub3JlIiwid2FybmluZyJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5leHRyYXM9bnVsbDt0aGlzLm1lc3NhZ2U9bnVsbDt0aGlzLnNjcmlwdD1udWxsfX1jbGFzcyBDYXB0aW9uIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJjYXB0aW9uIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnBsYWNlbWVudD1nZXRTdHJpbmdPcHRpb24oZS5wbGFjZW1lbnQsWyJsZWZ0IiwiYm90dG9tIiwiaW5saW5lIiwicmlnaHQiLCJ0b3AiXSk7dGhpcy5wcmVzZW5jZT1nZXRTdHJpbmdPcHRpb24oZS5wcmVzZW5jZSxbInZpc2libGUiLCJoaWRkZW4iLCJpbmFjdGl2ZSIsImludmlzaWJsZSJdKTt0aGlzLnJlc2VydmU9TWF0aC5jZWlsKGdldE1lYXN1cmVtZW50KGUucmVzZXJ2ZSkpO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmV4dHJhcz1udWxsO3RoaXMuZm9udD1udWxsO3RoaXMubWFyZ2luPW51bGw7dGhpcy5wYXJhPW51bGw7dGhpcy52YWx1ZT1udWxsfVskcl0oZSl7X3NldFZhbHVlKHRoaXMsZSl9W0NyXShlKXtpZighdGhpc1thcl0pe2xldHt3aWR0aDp0LGhlaWdodDppfT1lO3N3aXRjaCh0aGlzLnBsYWNlbWVudCl7Y2FzZSJsZWZ0IjpjYXNlInJpZ2h0IjpjYXNlImlubGluZSI6dD10aGlzLnJlc2VydmU8PTA/dDp0aGlzLnJlc2VydmU7YnJlYWs7Y2FzZSJ0b3AiOmNhc2UiYm90dG9tIjppPXRoaXMucmVzZXJ2ZTw9MD9pOnRoaXMucmVzZXJ2ZX10aGlzW2FyXT1sYXlvdXROb2RlKHRoaXMse3dpZHRoOnQsaGVpZ2h0Oml9KX1yZXR1cm4gdGhpc1thcl19W2FuXShlKXtpZighdGhpcy52YWx1ZSlyZXR1cm4gSFRNTFJlc3VsdC5FTVBUWTt0aGlzW1dyXSgpO2NvbnN0IHQ9dGhpcy52YWx1ZVthbl0oZSkuaHRtbDtpZighdCl7dGhpc1tQcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5FTVBUWX1jb25zdCBpPXRoaXMucmVzZXJ2ZTtpZih0aGlzLnJlc2VydmU8PTApe2NvbnN0e3c6dCxoOml9PXRoaXNbQ3JdKGUpO3N3aXRjaCh0aGlzLnBsYWNlbWVudCl7Y2FzZSJsZWZ0IjpjYXNlInJpZ2h0IjpjYXNlImlubGluZSI6dGhpcy5yZXNlcnZlPXQ7YnJlYWs7Y2FzZSJ0b3AiOmNhc2UiYm90dG9tIjp0aGlzLnJlc2VydmU9aX19Y29uc3QgYT1bXTsic3RyaW5nIj09dHlwZW9mIHQ/YS5wdXNoKHtuYW1lOiIjdGV4dCIsdmFsdWU6dH0pOmEucHVzaCh0KTtjb25zdCBzPXRvU3R5bGUodGhpcywiZm9udCIsIm1hcmdpbiIsInZpc2liaWxpdHkiKTtzd2l0Y2godGhpcy5wbGFjZW1lbnQpe2Nhc2UibGVmdCI6Y2FzZSJyaWdodCI6dGhpcy5yZXNlcnZlPjAmJihzLndpZHRoPW1lYXN1cmVUb1N0cmluZyh0aGlzLnJlc2VydmUpKTticmVhaztjYXNlInRvcCI6Y2FzZSJib3R0b20iOnRoaXMucmVzZXJ2ZT4wJiYocy5oZWlnaHQ9bWVhc3VyZVRvU3RyaW5nKHRoaXMucmVzZXJ2ZSkpfXNldFBhcmEodGhpcyxudWxsLHQpO3RoaXNbUHJdKCk7dGhpcy5yZXNlcnZlPWk7cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2Vzcyh7bmFtZToiZGl2IixhdHRyaWJ1dGVzOntzdHlsZTpzLGNsYXNzOlsieGZhQ2FwdGlvbiJdfSxjaGlsZHJlbjphfSl9fWNsYXNzIENlcnRpZmljYXRlIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJjZXJ0aWZpY2F0ZSIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBDZXJ0aWZpY2F0ZXMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImNlcnRpZmljYXRlcyIsITApO3RoaXMuY3JlZGVudGlhbFNlcnZlclBvbGljeT1nZXRTdHJpbmdPcHRpb24oZS5jcmVkZW50aWFsU2VydmVyUG9saWN5LFsib3B0aW9uYWwiLCJyZXF1aXJlZCJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXJsPWUudXJsfHwiIjt0aGlzLnVybFBvbGljeT1lLnVybFBvbGljeXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuZW5jcnlwdGlvbj1udWxsO3RoaXMuaXNzdWVycz1udWxsO3RoaXMua2V5VXNhZ2U9bnVsbDt0aGlzLm9pZHM9bnVsbDt0aGlzLnNpZ25pbmc9bnVsbDt0aGlzLnN1YmplY3RETnM9bnVsbH19Y2xhc3MgQ2hlY2tCdXR0b24gZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImNoZWNrQnV0dG9uIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLm1hcms9Z2V0U3RyaW5nT3B0aW9uKGUubWFyayxbImRlZmF1bHQiLCJjaGVjayIsImNpcmNsZSIsImNyb3NzIiwiZGlhbW9uZCIsInNxdWFyZSIsInN0YXIiXSk7dGhpcy5zaGFwZT1nZXRTdHJpbmdPcHRpb24oZS5zaGFwZSxbInNxdWFyZSIsInJvdW5kIl0pO3RoaXMuc2l6ZT1nZXRNZWFzdXJlbWVudChlLnNpemUsIjEwcHQiKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5ib3JkZXI9bnVsbDt0aGlzLmV4dHJhcz1udWxsO3RoaXMubWFyZ2luPW51bGx9W2FuXShlKXtjb25zdCB0PXRvU3R5bGUoIm1hcmdpbiIpLGk9bWVhc3VyZVRvU3RyaW5nKHRoaXMuc2l6ZSk7dC53aWR0aD10LmhlaWdodD1pO2xldCBhLHMscjtjb25zdCBuPXRoaXNbcHJdKClbcHJdKCksbz1uLml0ZW1zLmNoaWxkcmVuLmxlbmd0aCYmbi5pdGVtcy5jaGlsZHJlblswXVthbl0oKS5odG1sfHxbXSxnPXtvbjoodm9pZCAwIT09b1swXT9vWzBdOiJvbiIpLnRvU3RyaW5nKCksb2ZmOih2b2lkIDAhPT1vWzFdP29bMV06Im9mZiIpLnRvU3RyaW5nKCl9LGM9KG4udmFsdWU/Lltlbl0oKXx8Im9mZiIpPT09Zy5vbnx8dm9pZCAwLGg9bltmcl0oKSxsPW5bbm5dO2xldCBDO2lmKGggaW5zdGFuY2VvZiBFeGNsR3JvdXApe3I9aFtubl07YT0icmFkaW8iO3M9InhmYVJhZGlvIjtDPWhbdHJdPy5bbm5dfHxoW25uXX1lbHNle2E9ImNoZWNrYm94IjtzPSJ4ZmFDaGVja2JveCI7Qz1uW3RyXT8uW25uXXx8bltubl19Y29uc3QgUT17bmFtZToiaW5wdXQiLGF0dHJpYnV0ZXM6e2NsYXNzOltzXSxzdHlsZTp0LGZpZWxkSWQ6bCxkYXRhSWQ6Qyx0eXBlOmEsY2hlY2tlZDpjLHhmYU9uOmcub24seGZhT2ZmOmcub2ZmLCJhcmlhLWxhYmVsIjphcmlhTGFiZWwobiksImFyaWEtcmVxdWlyZWQiOiExfX07ciYmKFEuYXR0cmlidXRlcy5uYW1lPXIpO2lmKGlzUmVxdWlyZWQobikpe1EuYXR0cmlidXRlc1siYXJpYS1yZXF1aXJlZCJdPSEwO1EuYXR0cmlidXRlcy5yZXF1aXJlZD0hMH1yZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJsYWJlbCIsYXR0cmlidXRlczp7Y2xhc3M6WyJ4ZmFMYWJlbCJdfSxjaGlsZHJlbjpbUV19KX19Y2xhc3MgQ2hvaWNlTGlzdCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiY2hvaWNlTGlzdCIsITApO3RoaXMuY29tbWl0T249Z2V0U3RyaW5nT3B0aW9uKGUuY29tbWl0T24sWyJzZWxlY3QiLCJleGl0Il0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5vcGVuPWdldFN0cmluZ09wdGlvbihlLm9wZW4sWyJ1c2VyQ29udHJvbCIsImFsd2F5cyIsIm11bHRpU2VsZWN0Iiwib25FbnRyeSJdKTt0aGlzLnRleHRFbnRyeT1nZXRJbnRlZ2VyKHtkYXRhOmUudGV4dEVudHJ5LGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuYm9yZGVyPW51bGw7dGhpcy5leHRyYXM9bnVsbDt0aGlzLm1hcmdpbj1udWxsfVthbl0oZSl7Y29uc3QgdD10b1N0eWxlKHRoaXMsImJvcmRlciIsIm1hcmdpbiIpLGk9dGhpc1twcl0oKVtwcl0oKSxhPXtmb250U2l6ZTpgY2FsYygke2kuZm9udD8uc2l6ZXx8MTB9cHggKiB2YXIoLS1zY2FsZS1mYWN0b3IpKWB9LHM9W107aWYoaS5pdGVtcy5jaGlsZHJlbi5sZW5ndGg+MCl7Y29uc3QgZT1pLml0ZW1zO2xldCB0PTAscj0wO2lmKDI9PT1lLmNoaWxkcmVuLmxlbmd0aCl7dD1lLmNoaWxkcmVuWzBdLnNhdmU7cj0xLXR9Y29uc3Qgbj1lLmNoaWxkcmVuW3RdW2FuXSgpLmh0bWwsbz1lLmNoaWxkcmVuW3JdW2FuXSgpLmh0bWw7bGV0IGc9ITE7Y29uc3QgYz1pLnZhbHVlPy5bZW5dKCl8fCIiO2ZvcihsZXQgZT0wLHQ9bi5sZW5ndGg7ZTx0O2UrKyl7Y29uc3QgdD17bmFtZToib3B0aW9uIixhdHRyaWJ1dGVzOnt2YWx1ZTpvW2VdfHxuW2VdLHN0eWxlOmF9LHZhbHVlOm5bZV19O29bZV09PT1jJiYodC5hdHRyaWJ1dGVzLnNlbGVjdGVkPWc9ITApO3MucHVzaCh0KX1nfHxzLnNwbGljZSgwLDAse25hbWU6Im9wdGlvbiIsYXR0cmlidXRlczp7aGlkZGVuOiEwLHNlbGVjdGVkOiEwfSx2YWx1ZToiICJ9KX1jb25zdCByPXtjbGFzczpbInhmYVNlbGVjdCJdLGZpZWxkSWQ6aVtubl0sZGF0YUlkOmlbdHJdPy5bbm5dfHxpW25uXSxzdHlsZTp0LCJhcmlhLWxhYmVsIjphcmlhTGFiZWwoaSksImFyaWEtcmVxdWlyZWQiOiExfTtpZihpc1JlcXVpcmVkKGkpKXtyWyJhcmlhLXJlcXVpcmVkIl09ITA7ci5yZXF1aXJlZD0hMH0ibXVsdGlTZWxlY3QiPT09dGhpcy5vcGVuJiYoci5tdWx0aXBsZT0hMCk7cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2Vzcyh7bmFtZToibGFiZWwiLGF0dHJpYnV0ZXM6e2NsYXNzOlsieGZhTGFiZWwiXX0sY2hpbGRyZW46W3tuYW1lOiJzZWxlY3QiLGNoaWxkcmVuOnMsYXR0cmlidXRlczpyfV19KX19Y2xhc3MgQ29sb3IgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImNvbG9yIiwhMCk7dGhpcy5jU3BhY2U9Z2V0U3RyaW5nT3B0aW9uKGUuY1NwYWNlLFsiU1JHQiJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLnZhbHVlPWUudmFsdWU/ZnVuY3Rpb24gZ2V0Q29sb3IoZSx0PVswLDAsMF0pe2xldFtpLGEsc109dDtpZighZSlyZXR1cm57cjppLGc6YSxiOnN9O2NvbnN0IHI9ZS50cmltKCkuc3BsaXQoL1xzKixccyovKS5tYXAoKGU9Pk1hdGgubWluKE1hdGgubWF4KDAscGFyc2VJbnQoZS50cmltKCksMTApKSwyNTUpKSkubWFwKChlPT5pc05hTihlKT8wOmUpKTtpZihyLmxlbmd0aDwzKXJldHVybntyOmksZzphLGI6c307W2ksYSxzXT1yO3JldHVybntyOmksZzphLGI6c319KGUudmFsdWUpOiIiO3RoaXMuZXh0cmFzPW51bGx9W3dyXSgpe3JldHVybiExfVtybl0oKXtyZXR1cm4gdGhpcy52YWx1ZT9VdGlsLm1ha2VIZXhDb2xvcih0aGlzLnZhbHVlLnIsdGhpcy52YWx1ZS5nLHRoaXMudmFsdWUuYik6bnVsbH19Y2xhc3MgQ29tYiBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiY29tYiIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5udW1iZXJPZkNlbGxzPWdldEludGVnZXIoe2RhdGE6ZS5udW1iZXJPZkNlbGxzLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PmU+PTB9KTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIENvbm5lY3QgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImNvbm5lY3QiLCEwKTt0aGlzLmNvbm5lY3Rpb249ZS5jb25uZWN0aW9ufHwiIjt0aGlzLmlkPWUuaWR8fCIiO3RoaXMucmVmPWUucmVmfHwiIjt0aGlzLnVzYWdlPWdldFN0cmluZ09wdGlvbihlLnVzYWdlLFsiZXhwb3J0QW5kSW1wb3J0IiwiZXhwb3J0T25seSIsImltcG9ydE9ubHkiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMucGljdHVyZT1udWxsfX1jbGFzcyBDb250ZW50QXJlYSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiY29udGVudEFyZWEiLCEwKTt0aGlzLmg9Z2V0TWVhc3VyZW1lbnQoZS5oKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucmVsZXZhbnQ9Z2V0UmVsZXZhbnQoZS5yZWxldmFudCk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMudz1nZXRNZWFzdXJlbWVudChlLncpO3RoaXMueD1nZXRNZWFzdXJlbWVudChlLngsIjBwdCIpO3RoaXMueT1nZXRNZWFzdXJlbWVudChlLnksIjBwdCIpO3RoaXMuZGVzYz1udWxsO3RoaXMuZXh0cmFzPW51bGx9W2FuXShlKXtjb25zdCB0PXtsZWZ0Om1lYXN1cmVUb1N0cmluZyh0aGlzLngpLHRvcDptZWFzdXJlVG9TdHJpbmcodGhpcy55KSx3aWR0aDptZWFzdXJlVG9TdHJpbmcodGhpcy53KSxoZWlnaHQ6bWVhc3VyZVRvU3RyaW5nKHRoaXMuaCl9LGk9WyJ4ZmFDb250ZW50YXJlYSJdO2lzUHJpbnRPbmx5KHRoaXMpJiZpLnB1c2goInhmYVByaW50T25seSIpO3JldHVybiBIVE1MUmVzdWx0LnN1Y2Nlc3Moe25hbWU6ImRpdiIsY2hpbGRyZW46W10sYXR0cmlidXRlczp7c3R5bGU6dCxjbGFzczppLGlkOnRoaXNbbm5dfX0pfX1jbGFzcyBDb3JuZXIgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImNvcm5lciIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5pbnZlcnRlZD1nZXRJbnRlZ2VyKHtkYXRhOmUuaW52ZXJ0ZWQsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLmpvaW49Z2V0U3RyaW5nT3B0aW9uKGUuam9pbixbInNxdWFyZSIsInJvdW5kIl0pO3RoaXMucHJlc2VuY2U9Z2V0U3RyaW5nT3B0aW9uKGUucHJlc2VuY2UsWyJ2aXNpYmxlIiwiaGlkZGVuIiwiaW5hY3RpdmUiLCJpbnZpc2libGUiXSk7dGhpcy5yYWRpdXM9Z2V0TWVhc3VyZW1lbnQoZS5yYWRpdXMpO3RoaXMuc3Ryb2tlPWdldFN0cmluZ09wdGlvbihlLnN0cm9rZSxbInNvbGlkIiwiZGFzaERvdCIsImRhc2hEb3REb3QiLCJkYXNoZWQiLCJkb3R0ZWQiLCJlbWJvc3NlZCIsImV0Y2hlZCIsImxvd2VyZWQiLCJyYWlzZWQiXSk7dGhpcy50aGlja25lc3M9Z2V0TWVhc3VyZW1lbnQoZS50aGlja25lc3MsIjAuNXB0Iik7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuY29sb3I9bnVsbDt0aGlzLmV4dHJhcz1udWxsfVtybl0oKXtjb25zdCBlPXRvU3R5bGUodGhpcywidmlzaWJpbGl0eSIpO2UucmFkaXVzPW1lYXN1cmVUb1N0cmluZygic3F1YXJlIj09PXRoaXMuam9pbj8wOnRoaXMucmFkaXVzKTtyZXR1cm4gZX19Y2xhc3MgRGF0ZUVsZW1lbnQgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJkYXRlIik7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9W3NyXSgpe2NvbnN0IGU9dGhpc1tlcl0udHJpbSgpO3RoaXNbZXJdPWU/bmV3IERhdGUoZSk6bnVsbH1bYW5dKGUpe3JldHVybiB2YWx1ZVRvSHRtbCh0aGlzW2VyXT90aGlzW2VyXS50b1N0cmluZygpOiIiKX19Y2xhc3MgRGF0ZVRpbWUgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJkYXRlVGltZSIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifVtzcl0oKXtjb25zdCBlPXRoaXNbZXJdLnRyaW0oKTt0aGlzW2VyXT1lP25ldyBEYXRlKGUpOm51bGx9W2FuXShlKXtyZXR1cm4gdmFsdWVUb0h0bWwodGhpc1tlcl0/dGhpc1tlcl0udG9TdHJpbmcoKToiIil9fWNsYXNzIERhdGVUaW1lRWRpdCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZGF0ZVRpbWVFZGl0IiwhMCk7dGhpcy5oU2Nyb2xsUG9saWN5PWdldFN0cmluZ09wdGlvbihlLmhTY3JvbGxQb2xpY3ksWyJhdXRvIiwib2ZmIiwib24iXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnBpY2tlcj1nZXRTdHJpbmdPcHRpb24oZS5waWNrZXIsWyJob3N0Iiwibm9uZSJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5ib3JkZXI9bnVsbDt0aGlzLmNvbWI9bnVsbDt0aGlzLmV4dHJhcz1udWxsO3RoaXMubWFyZ2luPW51bGx9W2FuXShlKXtjb25zdCB0PXRvU3R5bGUodGhpcywiYm9yZGVyIiwiZm9udCIsIm1hcmdpbiIpLGk9dGhpc1twcl0oKVtwcl0oKSxhPXtuYW1lOiJpbnB1dCIsYXR0cmlidXRlczp7dHlwZToidGV4dCIsZmllbGRJZDppW25uXSxkYXRhSWQ6aVt0cl0/Lltubl18fGlbbm5dLGNsYXNzOlsieGZhVGV4dGZpZWxkIl0sc3R5bGU6dCwiYXJpYS1sYWJlbCI6YXJpYUxhYmVsKGkpLCJhcmlhLXJlcXVpcmVkIjohMX19O2lmKGlzUmVxdWlyZWQoaSkpe2EuYXR0cmlidXRlc1siYXJpYS1yZXF1aXJlZCJdPSEwO2EuYXR0cmlidXRlcy5yZXF1aXJlZD0hMH1yZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJsYWJlbCIsYXR0cmlidXRlczp7Y2xhc3M6WyJ4ZmFMYWJlbCJdfSxjaGlsZHJlbjpbYV19KX19Y2xhc3MgRGVjaW1hbCBleHRlbmRzIENvbnRlbnRPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImRlY2ltYWwiKTt0aGlzLmZyYWNEaWdpdHM9Z2V0SW50ZWdlcih7ZGF0YTplLmZyYWNEaWdpdHMsZGVmYXVsdFZhbHVlOjIsdmFsaWRhdGU6ZT0+ITB9KTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubGVhZERpZ2l0cz1nZXRJbnRlZ2VyKHtkYXRhOmUubGVhZERpZ2l0cyxkZWZhdWx0VmFsdWU6LTEsdmFsaWRhdGU6ZT0+ITB9KTt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9W3NyXSgpe2NvbnN0IGU9cGFyc2VGbG9hdCh0aGlzW2VyXS50cmltKCkpO3RoaXNbZXJdPWlzTmFOKGUpP251bGw6ZX1bYW5dKGUpe3JldHVybiB2YWx1ZVRvSHRtbChudWxsIT09dGhpc1tlcl0/dGhpc1tlcl0udG9TdHJpbmcoKToiIil9fWNsYXNzIERlZmF1bHRVaSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZGVmYXVsdFVpIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5leHRyYXM9bnVsbH19Y2xhc3MgRGVzYyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZGVzYyIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuYm9vbGVhbj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kYXRlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRhdGVUaW1lPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRlY2ltYWw9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZXhEYXRhPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmZsb2F0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmltYWdlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmludGVnZXI9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudGV4dD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy50aW1lPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgRGlnZXN0TWV0aG9kIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJkaWdlc3RNZXRob2QiLFsiIiwiU0hBMSIsIlNIQTI1NiIsIlNIQTUxMiIsIlJJUEVNRDE2MCJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgRGlnZXN0TWV0aG9kcyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZGlnZXN0TWV0aG9kcyIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy50eXBlPWdldFN0cmluZ09wdGlvbihlLnR5cGUsWyJvcHRpb25hbCIsInJlcXVpcmVkIl0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmRpZ2VzdE1ldGhvZD1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIERyYXcgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImRyYXciLCEwKTt0aGlzLmFuY2hvclR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUuYW5jaG9yVHlwZSxbInRvcExlZnQiLCJib3R0b21DZW50ZXIiLCJib3R0b21MZWZ0IiwiYm90dG9tUmlnaHQiLCJtaWRkbGVDZW50ZXIiLCJtaWRkbGVMZWZ0IiwibWlkZGxlUmlnaHQiLCJ0b3BDZW50ZXIiLCJ0b3BSaWdodCJdKTt0aGlzLmNvbFNwYW49Z2V0SW50ZWdlcih7ZGF0YTplLmNvbFNwYW4sZGVmYXVsdFZhbHVlOjEsdmFsaWRhdGU6ZT0+ZT49MXx8LTE9PT1lfSk7dGhpcy5oPWUuaD9nZXRNZWFzdXJlbWVudChlLmgpOiIiO3RoaXMuaEFsaWduPWdldFN0cmluZ09wdGlvbihlLmhBbGlnbixbImxlZnQiLCJjZW50ZXIiLCJqdXN0aWZ5IiwianVzdGlmeUFsbCIsInJhZGl4IiwicmlnaHQiXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmxvY2FsZT1lLmxvY2FsZXx8IiI7dGhpcy5tYXhIPWdldE1lYXN1cmVtZW50KGUubWF4SCwiMHB0Iik7dGhpcy5tYXhXPWdldE1lYXN1cmVtZW50KGUubWF4VywiMHB0Iik7dGhpcy5taW5IPWdldE1lYXN1cmVtZW50KGUubWluSCwiMHB0Iik7dGhpcy5taW5XPWdldE1lYXN1cmVtZW50KGUubWluVywiMHB0Iik7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy5wcmVzZW5jZT1nZXRTdHJpbmdPcHRpb24oZS5wcmVzZW5jZSxbInZpc2libGUiLCJoaWRkZW4iLCJpbmFjdGl2ZSIsImludmlzaWJsZSJdKTt0aGlzLnJlbGV2YW50PWdldFJlbGV2YW50KGUucmVsZXZhbnQpO3RoaXMucm90YXRlPWdldEludGVnZXIoe2RhdGE6ZS5yb3RhdGUsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+ZSU5MD09MH0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLnc9ZS53P2dldE1lYXN1cmVtZW50KGUudyk6IiI7dGhpcy54PWdldE1lYXN1cmVtZW50KGUueCwiMHB0Iik7dGhpcy55PWdldE1lYXN1cmVtZW50KGUueSwiMHB0Iik7dGhpcy5hc3Npc3Q9bnVsbDt0aGlzLmJvcmRlcj1udWxsO3RoaXMuY2FwdGlvbj1udWxsO3RoaXMuZGVzYz1udWxsO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5mb250PW51bGw7dGhpcy5rZWVwPW51bGw7dGhpcy5tYXJnaW49bnVsbDt0aGlzLnBhcmE9bnVsbDt0aGlzLnRyYXZlcnNhbD1udWxsO3RoaXMudWk9bnVsbDt0aGlzLnZhbHVlPW51bGw7dGhpcy5zZXRQcm9wZXJ0eT1uZXcgWEZBT2JqZWN0QXJyYXl9WyRyXShlKXtfc2V0VmFsdWUodGhpcyxlKX1bYW5dKGUpe3NldFRhYkluZGV4KHRoaXMpO2lmKCJoaWRkZW4iPT09dGhpcy5wcmVzZW5jZXx8ImluYWN0aXZlIj09PXRoaXMucHJlc2VuY2UpcmV0dXJuIEhUTUxSZXN1bHQuRU1QVFk7Zml4RGltZW5zaW9ucyh0aGlzKTt0aGlzW1dyXSgpO2NvbnN0IHQ9dGhpcy53LGk9dGhpcy5oLHt3OmEsaDpzLGlzQnJva2VuOnJ9PWxheW91dE5vZGUodGhpcyxlKTtpZihhJiYiIj09PXRoaXMudyl7aWYociYmdGhpc1tmcl0oKVtNcl0oKSl7dGhpc1tQcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5GQUlMVVJFfXRoaXMudz1hfXMmJiIiPT09dGhpcy5oJiYodGhpcy5oPXMpO3NldEZpcnN0VW5zcGxpdHRhYmxlKHRoaXMpO2lmKCFjaGVja0RpbWVuc2lvbnModGhpcyxlKSl7dGhpcy53PXQ7dGhpcy5oPWk7dGhpc1tQcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5GQUlMVVJFfXVuc2V0Rmlyc3RVbnNwbGl0dGFibGUodGhpcyk7Y29uc3Qgbj10b1N0eWxlKHRoaXMsImZvbnQiLCJoQWxpZ24iLCJkaW1lbnNpb25zIiwicG9zaXRpb24iLCJwcmVzZW5jZSIsInJvdGF0ZSIsImFuY2hvclR5cGUiLCJib3JkZXIiLCJtYXJnaW4iKTtzZXRNaW5NYXhEaW1lbnNpb25zKHRoaXMsbik7aWYobi5tYXJnaW4pe24ucGFkZGluZz1uLm1hcmdpbjtkZWxldGUgbi5tYXJnaW59Y29uc3Qgbz1bInhmYURyYXciXTt0aGlzLmZvbnQmJm8ucHVzaCgieGZhRm9udCIpO2lzUHJpbnRPbmx5KHRoaXMpJiZvLnB1c2goInhmYVByaW50T25seSIpO2NvbnN0IGc9e3N0eWxlOm4saWQ6dGhpc1tubl0sY2xhc3M6b307dGhpcy5uYW1lJiYoZy54ZmFOYW1lPXRoaXMubmFtZSk7Y29uc3QgYz17bmFtZToiZGl2IixhdHRyaWJ1dGVzOmcsY2hpbGRyZW46W119O2FwcGx5QXNzaXN0KHRoaXMsZyk7Y29uc3QgaD1jb21wdXRlQmJveCh0aGlzLGMsZSksbD10aGlzLnZhbHVlP3RoaXMudmFsdWVbYW5dKGUpLmh0bWw6bnVsbDtpZihudWxsPT09bCl7dGhpcy53PXQ7dGhpcy5oPWk7dGhpc1tQcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKGNyZWF0ZVdyYXBwZXIodGhpcyxjKSxoKX1jLmNoaWxkcmVuLnB1c2gobCk7c2V0UGFyYSh0aGlzLG4sbCk7dGhpcy53PXQ7dGhpcy5oPWk7dGhpc1tQcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKGNyZWF0ZVdyYXBwZXIodGhpcyxjKSxoKX19Y2xhc3MgRWRnZSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZWRnZSIsITApO3RoaXMuY2FwPWdldFN0cmluZ09wdGlvbihlLmNhcCxbInNxdWFyZSIsImJ1dHQiLCJyb3VuZCJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMucHJlc2VuY2U9Z2V0U3RyaW5nT3B0aW9uKGUucHJlc2VuY2UsWyJ2aXNpYmxlIiwiaGlkZGVuIiwiaW5hY3RpdmUiLCJpbnZpc2libGUiXSk7dGhpcy5zdHJva2U9Z2V0U3RyaW5nT3B0aW9uKGUuc3Ryb2tlLFsic29saWQiLCJkYXNoRG90IiwiZGFzaERvdERvdCIsImRhc2hlZCIsImRvdHRlZCIsImVtYm9zc2VkIiwiZXRjaGVkIiwibG93ZXJlZCIsInJhaXNlZCJdKTt0aGlzLnRoaWNrbmVzcz1nZXRNZWFzdXJlbWVudChlLnRoaWNrbmVzcywiMC41cHQiKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5jb2xvcj1udWxsO3RoaXMuZXh0cmFzPW51bGx9W3JuXSgpe2NvbnN0IGU9dG9TdHlsZSh0aGlzLCJ2aXNpYmlsaXR5Iik7T2JqZWN0LmFzc2lnbihlLHtsaW5lY2FwOnRoaXMuY2FwLHdpZHRoOm1lYXN1cmVUb1N0cmluZyh0aGlzLnRoaWNrbmVzcyksY29sb3I6dGhpcy5jb2xvcj90aGlzLmNvbG9yW3JuXSgpOiIjMDAwMDAwIixzdHlsZToiIn0pO2lmKCJ2aXNpYmxlIiE9PXRoaXMucHJlc2VuY2UpZS5zdHlsZT0ibm9uZSI7ZWxzZSBzd2l0Y2godGhpcy5zdHJva2Upe2Nhc2Uic29saWQiOmUuc3R5bGU9InNvbGlkIjticmVhaztjYXNlImRhc2hEb3QiOmNhc2UiZGFzaERvdERvdCI6Y2FzZSJkYXNoZWQiOmUuc3R5bGU9ImRhc2hlZCI7YnJlYWs7Y2FzZSJkb3R0ZWQiOmUuc3R5bGU9ImRvdHRlZCI7YnJlYWs7Y2FzZSJlbWJvc3NlZCI6ZS5zdHlsZT0icmlkZ2UiO2JyZWFrO2Nhc2UiZXRjaGVkIjplLnN0eWxlPSJncm9vdmUiO2JyZWFrO2Nhc2UibG93ZXJlZCI6ZS5zdHlsZT0iaW5zZXQiO2JyZWFrO2Nhc2UicmFpc2VkIjplLnN0eWxlPSJvdXRzZXQifXJldHVybiBlfX1jbGFzcyBFbmNvZGluZyBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZW5jb2RpbmciLFsiYWRiZS54NTA5LnJzYV9zaGExIiwiYWRiZS5wa2NzNy5kZXRhY2hlZCIsImFkYmUucGtjczcuc2hhMSJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgRW5jb2RpbmdzIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJlbmNvZGluZ3MiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudHlwZT1nZXRTdHJpbmdPcHRpb24oZS50eXBlLFsib3B0aW9uYWwiLCJyZXF1aXJlZCJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5lbmNvZGluZz1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIEVuY3J5cHQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImVuY3J5cHQiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmNlcnRpZmljYXRlPW51bGx9fWNsYXNzIEVuY3J5cHREYXRhIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJlbmNyeXB0RGF0YSIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5vcGVyYXRpb249Z2V0U3RyaW5nT3B0aW9uKGUub3BlcmF0aW9uLFsiZW5jcnlwdCIsImRlY3J5cHQiXSk7dGhpcy50YXJnZXQ9ZS50YXJnZXR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmZpbHRlcj1udWxsO3RoaXMubWFuaWZlc3Q9bnVsbH19Y2xhc3MgRW5jcnlwdGlvbiBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZW5jcnlwdGlvbiIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy50eXBlPWdldFN0cmluZ09wdGlvbihlLnR5cGUsWyJvcHRpb25hbCIsInJlcXVpcmVkIl0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmNlcnRpZmljYXRlPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgRW5jcnlwdGlvbk1ldGhvZCBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZW5jcnlwdGlvbk1ldGhvZCIsWyIiLCJBRVMyNTYtQ0JDIiwiVFJJUExFREVTLUNCQyIsIkFFUzEyOC1DQkMiLCJBRVMxOTItQ0JDIl0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBFbmNyeXB0aW9uTWV0aG9kcyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZW5jcnlwdGlvbk1ldGhvZHMiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudHlwZT1nZXRTdHJpbmdPcHRpb24oZS50eXBlLFsib3B0aW9uYWwiLCJyZXF1aXJlZCJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5lbmNyeXB0aW9uTWV0aG9kPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgRXZlbnQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImV2ZW50IiwhMCk7dGhpcy5hY3Rpdml0eT1nZXRTdHJpbmdPcHRpb24oZS5hY3Rpdml0eSxbImNsaWNrIiwiY2hhbmdlIiwiZG9jQ2xvc2UiLCJkb2NSZWFkeSIsImVudGVyIiwiZXhpdCIsImZ1bGwiLCJpbmRleENoYW5nZSIsImluaXRpYWxpemUiLCJtb3VzZURvd24iLCJtb3VzZUVudGVyIiwibW91c2VFeGl0IiwibW91c2VVcCIsInBvc3RFeGVjdXRlIiwicG9zdE9wZW4iLCJwb3N0UHJpbnQiLCJwb3N0U2F2ZSIsInBvc3RTaWduIiwicG9zdFN1Ym1pdCIsInByZUV4ZWN1dGUiLCJwcmVPcGVuIiwicHJlUHJpbnQiLCJwcmVTYXZlIiwicHJlU2lnbiIsInByZVN1Ym1pdCIsInJlYWR5IiwidmFsaWRhdGlvblN0YXRlIl0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5saXN0ZW49Z2V0U3RyaW5nT3B0aW9uKGUubGlzdGVuLFsicmVmT25seSIsInJlZkFuZERlc2NlbmRlbnRzIl0pO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucmVmPWUucmVmfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5leHRyYXM9bnVsbDt0aGlzLmVuY3J5cHREYXRhPW51bGw7dGhpcy5leGVjdXRlPW51bGw7dGhpcy5zY3JpcHQ9bnVsbDt0aGlzLnNpZ25EYXRhPW51bGw7dGhpcy5zdWJtaXQ9bnVsbH19Y2xhc3MgRXhEYXRhIGV4dGVuZHMgQ29udGVudE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZXhEYXRhIik7dGhpcy5jb250ZW50VHlwZT1lLmNvbnRlbnRUeXBlfHwiIjt0aGlzLmhyZWY9ZS5ocmVmfHwiIjt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubWF4TGVuZ3RoPWdldEludGVnZXIoe2RhdGE6ZS5tYXhMZW5ndGgsZGVmYXVsdFZhbHVlOi0xLHZhbGlkYXRlOmU9PmU+PS0xfSk7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy5yaWQ9ZS5yaWR8fCIiO3RoaXMudHJhbnNmZXJFbmNvZGluZz1nZXRTdHJpbmdPcHRpb24oZS50cmFuc2ZlckVuY29kaW5nLFsibm9uZSIsImJhc2U2NCIsInBhY2thZ2UiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifVtTcl0oKXtyZXR1cm4idGV4dC9odG1sIj09PXRoaXMuY29udGVudFR5cGV9W0tyXShlKXtpZigidGV4dC9odG1sIj09PXRoaXMuY29udGVudFR5cGUmJmVbSHJdPT09Z24ueGh0bWwuaWQpe3RoaXNbZXJdPWU7cmV0dXJuITB9aWYoInRleHQveG1sIj09PXRoaXMuY29udGVudFR5cGUpe3RoaXNbZXJdPWU7cmV0dXJuITB9cmV0dXJuITF9W2FuXShlKXtyZXR1cm4idGV4dC9odG1sIj09PXRoaXMuY29udGVudFR5cGUmJnRoaXNbZXJdP3RoaXNbZXJdW2FuXShlKTpIVE1MUmVzdWx0LkVNUFRZfX1jbGFzcyBFeE9iamVjdCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZXhPYmplY3QiLCEwKTt0aGlzLmFyY2hpdmU9ZS5hcmNoaXZlfHwiIjt0aGlzLmNsYXNzSWQ9ZS5jbGFzc0lkfHwiIjt0aGlzLmNvZGVCYXNlPWUuY29kZUJhc2V8fCIiO3RoaXMuY29kZVR5cGU9ZS5jb2RlVHlwZXx8IiI7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5leHRyYXM9bnVsbDt0aGlzLmJvb2xlYW49bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZGF0ZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kYXRlVGltZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kZWNpbWFsPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmV4RGF0YT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5leE9iamVjdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5mbG9hdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5pbWFnZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5pbnRlZ2VyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnRleHQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudGltZT1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIEV4Y2xHcm91cCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZXhjbEdyb3VwIiwhMCk7dGhpcy5hY2Nlc3M9Z2V0U3RyaW5nT3B0aW9uKGUuYWNjZXNzLFsib3BlbiIsIm5vbkludGVyYWN0aXZlIiwicHJvdGVjdGVkIiwicmVhZE9ubHkiXSk7dGhpcy5hY2Nlc3NLZXk9ZS5hY2Nlc3NLZXl8fCIiO3RoaXMuYW5jaG9yVHlwZT1nZXRTdHJpbmdPcHRpb24oZS5hbmNob3JUeXBlLFsidG9wTGVmdCIsImJvdHRvbUNlbnRlciIsImJvdHRvbUxlZnQiLCJib3R0b21SaWdodCIsIm1pZGRsZUNlbnRlciIsIm1pZGRsZUxlZnQiLCJtaWRkbGVSaWdodCIsInRvcENlbnRlciIsInRvcFJpZ2h0Il0pO3RoaXMuY29sU3Bhbj1nZXRJbnRlZ2VyKHtkYXRhOmUuY29sU3BhbixkZWZhdWx0VmFsdWU6MSx2YWxpZGF0ZTplPT5lPj0xfHwtMT09PWV9KTt0aGlzLmg9ZS5oP2dldE1lYXN1cmVtZW50KGUuaCk6IiI7dGhpcy5oQWxpZ249Z2V0U3RyaW5nT3B0aW9uKGUuaEFsaWduLFsibGVmdCIsImNlbnRlciIsImp1c3RpZnkiLCJqdXN0aWZ5QWxsIiwicmFkaXgiLCJyaWdodCJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubGF5b3V0PWdldFN0cmluZ09wdGlvbihlLmxheW91dCxbInBvc2l0aW9uIiwibHItdGIiLCJybC1yb3ciLCJybC10YiIsInJvdyIsInRhYmxlIiwidGIiXSk7dGhpcy5tYXhIPWdldE1lYXN1cmVtZW50KGUubWF4SCwiMHB0Iik7dGhpcy5tYXhXPWdldE1lYXN1cmVtZW50KGUubWF4VywiMHB0Iik7dGhpcy5taW5IPWdldE1lYXN1cmVtZW50KGUubWluSCwiMHB0Iik7dGhpcy5taW5XPWdldE1lYXN1cmVtZW50KGUubWluVywiMHB0Iik7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy5wcmVzZW5jZT1nZXRTdHJpbmdPcHRpb24oZS5wcmVzZW5jZSxbInZpc2libGUiLCJoaWRkZW4iLCJpbmFjdGl2ZSIsImludmlzaWJsZSJdKTt0aGlzLnJlbGV2YW50PWdldFJlbGV2YW50KGUucmVsZXZhbnQpO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLnc9ZS53P2dldE1lYXN1cmVtZW50KGUudyk6IiI7dGhpcy54PWdldE1lYXN1cmVtZW50KGUueCwiMHB0Iik7dGhpcy55PWdldE1lYXN1cmVtZW50KGUueSwiMHB0Iik7dGhpcy5hc3Npc3Q9bnVsbDt0aGlzLmJpbmQ9bnVsbDt0aGlzLmJvcmRlcj1udWxsO3RoaXMuY2FsY3VsYXRlPW51bGw7dGhpcy5jYXB0aW9uPW51bGw7dGhpcy5kZXNjPW51bGw7dGhpcy5leHRyYXM9bnVsbDt0aGlzLm1hcmdpbj1udWxsO3RoaXMucGFyYT1udWxsO3RoaXMudHJhdmVyc2FsPW51bGw7dGhpcy52YWxpZGF0ZT1udWxsO3RoaXMuY29ubmVjdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5ldmVudD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5maWVsZD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5zZXRQcm9wZXJ0eT1uZXcgWEZBT2JqZWN0QXJyYXl9W2tyXSgpe3JldHVybiEwfVt3cl0oKXtyZXR1cm4hMH1bJHJdKGUpe2Zvcihjb25zdCB0IG9mIHRoaXMuZmllbGQuY2hpbGRyZW4pe2lmKCF0LnZhbHVlKXtjb25zdCBlPW5ldyBWYWx1ZSh7fSk7dFtqc10oZSk7dC52YWx1ZT1lfXQudmFsdWVbJHJdKGUpfX1bTXJdKCl7cmV0dXJuIHRoaXMubGF5b3V0LmVuZHNXaXRoKCItdGIiKSYmMD09PXRoaXNbYXJdLmF0dGVtcHQmJnRoaXNbYXJdLm51bWJlckluTGluZT4wfHx0aGlzW3ByXSgpW01yXSgpfVt4cl0oKXtjb25zdCBlPXRoaXNbZnJdKCk7aWYoIWVbeHJdKCkpcmV0dXJuITE7aWYodm9pZCAwIT09dGhpc1thcl0uX2lzU3BsaXR0YWJsZSlyZXR1cm4gdGhpc1thcl0uX2lzU3BsaXR0YWJsZTtpZigicG9zaXRpb24iPT09dGhpcy5sYXlvdXR8fHRoaXMubGF5b3V0LmluY2x1ZGVzKCJyb3ciKSl7dGhpc1thcl0uX2lzU3BsaXR0YWJsZT0hMTtyZXR1cm4hMX1pZihlLmxheW91dD8uZW5kc1dpdGgoIi10YiIpJiYwIT09ZVthcl0ubnVtYmVySW5MaW5lKXJldHVybiExO3RoaXNbYXJdLl9pc1NwbGl0dGFibGU9ITA7cmV0dXJuITB9W3JyXSgpe3JldHVybiBmbHVzaEhUTUwodGhpcyl9W1hzXShlLHQpe2FkZEhUTUwodGhpcyxlLHQpfVtncl0oKXtyZXR1cm4gZ2V0QXZhaWxhYmxlU3BhY2UodGhpcyl9W2FuXShlKXtzZXRUYWJJbmRleCh0aGlzKTtpZigiaGlkZGVuIj09PXRoaXMucHJlc2VuY2V8fCJpbmFjdGl2ZSI9PT10aGlzLnByZXNlbmNlfHwwPT09dGhpcy5ofHwwPT09dGhpcy53KXJldHVybiBIVE1MUmVzdWx0LkVNUFRZO2ZpeERpbWVuc2lvbnModGhpcyk7Y29uc3QgdD1bXSxpPXtpZDp0aGlzW25uXSxjbGFzczpbXX07c2V0QWNjZXNzKHRoaXMsaS5jbGFzcyk7dGhpc1thcl18fCh0aGlzW2FyXT1PYmplY3QuY3JlYXRlKG51bGwpKTtPYmplY3QuYXNzaWduKHRoaXNbYXJdLHtjaGlsZHJlbjp0LGF0dHJpYnV0ZXM6aSxhdHRlbXB0OjAsbGluZTpudWxsLG51bWJlckluTGluZTowLGF2YWlsYWJsZVNwYWNlOnt3aWR0aDpNYXRoLm1pbih0aGlzLnd8fDEvMCxlLndpZHRoKSxoZWlnaHQ6TWF0aC5taW4odGhpcy5ofHwxLzAsZS5oZWlnaHQpfSx3aWR0aDowLGhlaWdodDowLHByZXZIZWlnaHQ6MCxjdXJyZW50V2lkdGg6MH0pO2NvbnN0IGE9dGhpc1t4cl0oKTthfHxzZXRGaXJzdFVuc3BsaXR0YWJsZSh0aGlzKTtpZighY2hlY2tEaW1lbnNpb25zKHRoaXMsZSkpcmV0dXJuIEhUTUxSZXN1bHQuRkFJTFVSRTtjb25zdCBzPW5ldyBTZXQoWyJmaWVsZCJdKTtpZih0aGlzLmxheW91dC5pbmNsdWRlcygicm93Iikpe2NvbnN0IGU9dGhpc1tmcl0oKS5jb2x1bW5XaWR0aHM7aWYoQXJyYXkuaXNBcnJheShlKSYmZS5sZW5ndGg+MCl7dGhpc1thcl0uY29sdW1uV2lkdGhzPWU7dGhpc1thcl0uY3VycmVudENvbHVtbj0wfX1jb25zdCByPXRvU3R5bGUodGhpcywiYW5jaG9yVHlwZSIsImRpbWVuc2lvbnMiLCJwb3NpdGlvbiIsInByZXNlbmNlIiwiYm9yZGVyIiwibWFyZ2luIiwiaEFsaWduIiksbj1bInhmYUV4Y2xncm91cCJdLG89bGF5b3V0Q2xhc3ModGhpcyk7byYmbi5wdXNoKG8pO2lzUHJpbnRPbmx5KHRoaXMpJiZuLnB1c2goInhmYVByaW50T25seSIpO2kuc3R5bGU9cjtpLmNsYXNzPW47dGhpcy5uYW1lJiYoaS54ZmFOYW1lPXRoaXMubmFtZSk7dGhpc1tXcl0oKTtjb25zdCBnPSJsci10YiI9PT10aGlzLmxheW91dHx8InJsLXRiIj09PXRoaXMubGF5b3V0LGM9Zz8yOjE7Zm9yKDt0aGlzW2FyXS5hdHRlbXB0PGM7dGhpc1thcl0uYXR0ZW1wdCsrKXtnJiYxPT09dGhpc1thcl0uYXR0ZW1wdCYmKHRoaXNbYXJdLm51bWJlckluTGluZT0wKTtjb25zdCBlPXRoaXNbWnNdKHtmaWx0ZXI6cyxpbmNsdWRlOiEwfSk7aWYoZS5zdWNjZXNzKWJyZWFrO2lmKGUuaXNCcmVhaygpKXt0aGlzW1ByXSgpO3JldHVybiBlfWlmKGcmJjA9PT10aGlzW2FyXS5hdHRlbXB0JiYwPT09dGhpc1thcl0ubnVtYmVySW5MaW5lJiYhdGhpc1ttcl0oKVthcl0ubm9MYXlvdXRGYWlsdXJlKXt0aGlzW2FyXS5hdHRlbXB0PWM7YnJlYWt9fXRoaXNbUHJdKCk7YXx8dW5zZXRGaXJzdFVuc3BsaXR0YWJsZSh0aGlzKTtpZih0aGlzW2FyXS5hdHRlbXB0PT09Yyl7YXx8ZGVsZXRlIHRoaXNbYXJdO3JldHVybiBIVE1MUmVzdWx0LkZBSUxVUkV9bGV0IGg9MCxsPTA7aWYodGhpcy5tYXJnaW4pe2g9dGhpcy5tYXJnaW4ubGVmdEluc2V0K3RoaXMubWFyZ2luLnJpZ2h0SW5zZXQ7bD10aGlzLm1hcmdpbi50b3BJbnNldCt0aGlzLm1hcmdpbi5ib3R0b21JbnNldH1jb25zdCBDPU1hdGgubWF4KHRoaXNbYXJdLndpZHRoK2gsdGhpcy53fHwwKSxRPU1hdGgubWF4KHRoaXNbYXJdLmhlaWdodCtsLHRoaXMuaHx8MCksRT1bdGhpcy54LHRoaXMueSxDLFFdOyIiPT09dGhpcy53JiYoci53aWR0aD1tZWFzdXJlVG9TdHJpbmcoQykpOyIiPT09dGhpcy5oJiYoci5oZWlnaHQ9bWVhc3VyZVRvU3RyaW5nKFEpKTtjb25zdCB1PXtuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6aSxjaGlsZHJlbjp0fTthcHBseUFzc2lzdCh0aGlzLGkpO2RlbGV0ZSB0aGlzW2FyXTtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKGNyZWF0ZVdyYXBwZXIodGhpcyx1KSxFKX19Y2xhc3MgRXhlY3V0ZSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZXhlY3V0ZSIpO3RoaXMuY29ubmVjdGlvbj1lLmNvbm5lY3Rpb258fCIiO3RoaXMuZXhlY3V0ZVR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUuZXhlY3V0ZVR5cGUsWyJpbXBvcnQiLCJyZW1lcmdlIl0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5ydW5BdD1nZXRTdHJpbmdPcHRpb24oZS5ydW5BdCxbImNsaWVudCIsImJvdGgiLCJzZXJ2ZXIiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBFeHRyYXMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImV4dHJhcyIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuYm9vbGVhbj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kYXRlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRhdGVUaW1lPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRlY2ltYWw9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZXhEYXRhPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmV4dHJhcz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5mbG9hdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5pbWFnZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5pbnRlZ2VyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnRleHQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudGltZT1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIEZpZWxkIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJmaWVsZCIsITApO3RoaXMuYWNjZXNzPWdldFN0cmluZ09wdGlvbihlLmFjY2VzcyxbIm9wZW4iLCJub25JbnRlcmFjdGl2ZSIsInByb3RlY3RlZCIsInJlYWRPbmx5Il0pO3RoaXMuYWNjZXNzS2V5PWUuYWNjZXNzS2V5fHwiIjt0aGlzLmFuY2hvclR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUuYW5jaG9yVHlwZSxbInRvcExlZnQiLCJib3R0b21DZW50ZXIiLCJib3R0b21MZWZ0IiwiYm90dG9tUmlnaHQiLCJtaWRkbGVDZW50ZXIiLCJtaWRkbGVMZWZ0IiwibWlkZGxlUmlnaHQiLCJ0b3BDZW50ZXIiLCJ0b3BSaWdodCJdKTt0aGlzLmNvbFNwYW49Z2V0SW50ZWdlcih7ZGF0YTplLmNvbFNwYW4sZGVmYXVsdFZhbHVlOjEsdmFsaWRhdGU6ZT0+ZT49MXx8LTE9PT1lfSk7dGhpcy5oPWUuaD9nZXRNZWFzdXJlbWVudChlLmgpOiIiO3RoaXMuaEFsaWduPWdldFN0cmluZ09wdGlvbihlLmhBbGlnbixbImxlZnQiLCJjZW50ZXIiLCJqdXN0aWZ5IiwianVzdGlmeUFsbCIsInJhZGl4IiwicmlnaHQiXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmxvY2FsZT1lLmxvY2FsZXx8IiI7dGhpcy5tYXhIPWdldE1lYXN1cmVtZW50KGUubWF4SCwiMHB0Iik7dGhpcy5tYXhXPWdldE1lYXN1cmVtZW50KGUubWF4VywiMHB0Iik7dGhpcy5taW5IPWdldE1lYXN1cmVtZW50KGUubWluSCwiMHB0Iik7dGhpcy5taW5XPWdldE1lYXN1cmVtZW50KGUubWluVywiMHB0Iik7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy5wcmVzZW5jZT1nZXRTdHJpbmdPcHRpb24oZS5wcmVzZW5jZSxbInZpc2libGUiLCJoaWRkZW4iLCJpbmFjdGl2ZSIsImludmlzaWJsZSJdKTt0aGlzLnJlbGV2YW50PWdldFJlbGV2YW50KGUucmVsZXZhbnQpO3RoaXMucm90YXRlPWdldEludGVnZXIoe2RhdGE6ZS5yb3RhdGUsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+ZSU5MD09MH0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLnc9ZS53P2dldE1lYXN1cmVtZW50KGUudyk6IiI7dGhpcy54PWdldE1lYXN1cmVtZW50KGUueCwiMHB0Iik7dGhpcy55PWdldE1lYXN1cmVtZW50KGUueSwiMHB0Iik7dGhpcy5hc3Npc3Q9bnVsbDt0aGlzLmJpbmQ9bnVsbDt0aGlzLmJvcmRlcj1udWxsO3RoaXMuY2FsY3VsYXRlPW51bGw7dGhpcy5jYXB0aW9uPW51bGw7dGhpcy5kZXNjPW51bGw7dGhpcy5leHRyYXM9bnVsbDt0aGlzLmZvbnQ9bnVsbDt0aGlzLmZvcm1hdD1udWxsO3RoaXMuaXRlbXM9bmV3IFhGQU9iamVjdEFycmF5KDIpO3RoaXMua2VlcD1udWxsO3RoaXMubWFyZ2luPW51bGw7dGhpcy5wYXJhPW51bGw7dGhpcy50cmF2ZXJzYWw9bnVsbDt0aGlzLnVpPW51bGw7dGhpcy52YWxpZGF0ZT1udWxsO3RoaXMudmFsdWU9bnVsbDt0aGlzLmJpbmRJdGVtcz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5jb25uZWN0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmV2ZW50PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnNldFByb3BlcnR5PW5ldyBYRkFPYmplY3RBcnJheX1ba3JdKCl7cmV0dXJuITB9WyRyXShlKXtfc2V0VmFsdWUodGhpcyxlKX1bYW5dKGUpe3NldFRhYkluZGV4KHRoaXMpO2lmKCF0aGlzLnVpKXt0aGlzLnVpPW5ldyBVaSh7fSk7dGhpcy51aVt5cl09dGhpc1t5cl07dGhpc1tqc10odGhpcy51aSk7bGV0IGU7c3dpdGNoKHRoaXMuaXRlbXMuY2hpbGRyZW4ubGVuZ3RoKXtjYXNlIDA6ZT1uZXcgVGV4dEVkaXQoe30pO3RoaXMudWkudGV4dEVkaXQ9ZTticmVhaztjYXNlIDE6ZT1uZXcgQ2hlY2tCdXR0b24oe30pO3RoaXMudWkuY2hlY2tCdXR0b249ZTticmVhaztjYXNlIDI6ZT1uZXcgQ2hvaWNlTGlzdCh7fSk7dGhpcy51aS5jaG9pY2VMaXN0PWV9dGhpcy51aVtqc10oZSl9aWYoIXRoaXMudWl8fCJoaWRkZW4iPT09dGhpcy5wcmVzZW5jZXx8ImluYWN0aXZlIj09PXRoaXMucHJlc2VuY2V8fDA9PT10aGlzLmh8fDA9PT10aGlzLncpcmV0dXJuIEhUTUxSZXN1bHQuRU1QVFk7dGhpcy5jYXB0aW9uJiZkZWxldGUgdGhpcy5jYXB0aW9uW2FyXTt0aGlzW1dyXSgpO2NvbnN0IHQ9dGhpcy5jYXB0aW9uP3RoaXMuY2FwdGlvblthbl0oZSkuaHRtbDpudWxsLGk9dGhpcy53LGE9dGhpcy5oO2xldCBzPTAscj0wO2lmKHRoaXMubWFyZ2luKXtzPXRoaXMubWFyZ2luLmxlZnRJbnNldCt0aGlzLm1hcmdpbi5yaWdodEluc2V0O3I9dGhpcy5tYXJnaW4udG9wSW5zZXQrdGhpcy5tYXJnaW4uYm90dG9tSW5zZXR9bGV0IG49bnVsbDtpZigiIj09PXRoaXMud3x8IiI9PT10aGlzLmgpe2xldCB0PW51bGwsaT1udWxsLGE9MCxvPTA7aWYodGhpcy51aS5jaGVja0J1dHRvbilhPW89dGhpcy51aS5jaGVja0J1dHRvbi5zaXplO2Vsc2V7Y29uc3R7dzp0LGg6aX09bGF5b3V0Tm9kZSh0aGlzLGUpO2lmKG51bGwhPT10KXthPXQ7bz1pfWVsc2Ugbz1mdW5jdGlvbiBmb250c19nZXRNZXRyaWNzKGUsdD0hMSl7bGV0IGk9bnVsbDtpZihlKXtjb25zdCB0PXN0cmlwUXVvdGVzKGUudHlwZWZhY2UpLGE9ZVt5cl0uZm9udEZpbmRlci5maW5kKHQpO2k9c2VsZWN0Rm9udChlLGEpfWlmKCFpKXJldHVybntsaW5lSGVpZ2h0OjEyLGxpbmVHYXA6MixsaW5lTm9HYXA6MTB9O2NvbnN0IGE9ZS5zaXplfHwxMCxzPWkubGluZUhlaWdodD9NYXRoLm1heCh0PzA6MS4yLGkubGluZUhlaWdodCk6MS4yLHI9dm9pZCAwPT09aS5saW5lR2FwPy4yOmkubGluZUdhcDtyZXR1cm57bGluZUhlaWdodDpzKmEsbGluZUdhcDpyKmEsbGluZU5vR2FwOk1hdGgubWF4KDEscy1yKSphfX0odGhpcy5mb250LCEwKS5saW5lTm9HYXB9bj1nZXRCb3JkZXJEaW1zKHRoaXMudWlbQ3JdKCkpO2ErPW4udztvKz1uLmg7aWYodGhpcy5jYXB0aW9uKXtjb25zdHt3OnMsaDpyLGlzQnJva2VuOm59PXRoaXMuY2FwdGlvbltDcl0oZSk7aWYobiYmdGhpc1tmcl0oKVtNcl0oKSl7dGhpc1tQcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5GQUlMVVJFfXQ9cztpPXI7c3dpdGNoKHRoaXMuY2FwdGlvbi5wbGFjZW1lbnQpe2Nhc2UibGVmdCI6Y2FzZSJyaWdodCI6Y2FzZSJpbmxpbmUiOnQrPWE7YnJlYWs7Y2FzZSJ0b3AiOmNhc2UiYm90dG9tIjppKz1vfX1lbHNle3Q9YTtpPW99aWYodCYmIiI9PT10aGlzLncpe3QrPXM7dGhpcy53PU1hdGgubWluKHRoaXMubWF4Vzw9MD8xLzA6dGhpcy5tYXhXLHRoaXMubWluVysxPHQ/dDp0aGlzLm1pblcpfWlmKGkmJiIiPT09dGhpcy5oKXtpKz1yO3RoaXMuaD1NYXRoLm1pbih0aGlzLm1heEg8PTA/MS8wOnRoaXMubWF4SCx0aGlzLm1pbkgrMTxpP2k6dGhpcy5taW5IKX19dGhpc1tQcl0oKTtmaXhEaW1lbnNpb25zKHRoaXMpO3NldEZpcnN0VW5zcGxpdHRhYmxlKHRoaXMpO2lmKCFjaGVja0RpbWVuc2lvbnModGhpcyxlKSl7dGhpcy53PWk7dGhpcy5oPWE7dGhpc1tQcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5GQUlMVVJFfXVuc2V0Rmlyc3RVbnNwbGl0dGFibGUodGhpcyk7Y29uc3Qgbz10b1N0eWxlKHRoaXMsImZvbnQiLCJkaW1lbnNpb25zIiwicG9zaXRpb24iLCJyb3RhdGUiLCJhbmNob3JUeXBlIiwicHJlc2VuY2UiLCJtYXJnaW4iLCJoQWxpZ24iKTtzZXRNaW5NYXhEaW1lbnNpb25zKHRoaXMsbyk7Y29uc3QgZz1bInhmYUZpZWxkIl07dGhpcy5mb250JiZnLnB1c2goInhmYUZvbnQiKTtpc1ByaW50T25seSh0aGlzKSYmZy5wdXNoKCJ4ZmFQcmludE9ubHkiKTtjb25zdCBjPXtzdHlsZTpvLGlkOnRoaXNbbm5dLGNsYXNzOmd9O2lmKG8ubWFyZ2luKXtvLnBhZGRpbmc9by5tYXJnaW47ZGVsZXRlIG8ubWFyZ2lufXNldEFjY2Vzcyh0aGlzLGcpO3RoaXMubmFtZSYmKGMueGZhTmFtZT10aGlzLm5hbWUpO2NvbnN0IGg9W10sbD17bmFtZToiZGl2IixhdHRyaWJ1dGVzOmMsY2hpbGRyZW46aH07YXBwbHlBc3Npc3QodGhpcyxjKTtjb25zdCBDPXRoaXMuYm9yZGVyP3RoaXMuYm9yZGVyW3JuXSgpOm51bGwsUT1jb21wdXRlQmJveCh0aGlzLGwsZSksRT10aGlzLnVpW2FuXSgpLmh0bWw7aWYoIUUpe09iamVjdC5hc3NpZ24obyxDKTtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKGNyZWF0ZVdyYXBwZXIodGhpcyxsKSxRKX10aGlzW0FuXSYmKEUuY2hpbGRyZW4/LlswXT9FLmNoaWxkcmVuWzBdLmF0dHJpYnV0ZXMudGFiaW5kZXg9dGhpc1tBbl06RS5hdHRyaWJ1dGVzLnRhYmluZGV4PXRoaXNbQW5dKTtFLmF0dHJpYnV0ZXMuc3R5bGV8fChFLmF0dHJpYnV0ZXMuc3R5bGU9T2JqZWN0LmNyZWF0ZShudWxsKSk7bGV0IHU9bnVsbDtpZih0aGlzLnVpLmJ1dHRvbil7MT09PUUuY2hpbGRyZW4ubGVuZ3RoJiYoW3VdPUUuY2hpbGRyZW4uc3BsaWNlKDAsMSkpO09iamVjdC5hc3NpZ24oRS5hdHRyaWJ1dGVzLnN0eWxlLEMpfWVsc2UgT2JqZWN0LmFzc2lnbihvLEMpO2gucHVzaChFKTtpZih0aGlzLnZhbHVlKWlmKHRoaXMudWkuaW1hZ2VFZGl0KUUuY2hpbGRyZW4ucHVzaCh0aGlzLnZhbHVlW2FuXSgpLmh0bWwpO2Vsc2UgaWYoIXRoaXMudWkuYnV0dG9uKXtsZXQgZT0iIjtpZih0aGlzLnZhbHVlLmV4RGF0YSllPXRoaXMudmFsdWUuZXhEYXRhW2VuXSgpO2Vsc2UgaWYodGhpcy52YWx1ZS50ZXh0KWU9dGhpcy52YWx1ZS50ZXh0W0NyXSgpO2Vsc2V7Y29uc3QgdD10aGlzLnZhbHVlW2FuXSgpLmh0bWw7bnVsbCE9PXQmJihlPXQuY2hpbGRyZW5bMF0udmFsdWUpfXRoaXMudWkudGV4dEVkaXQmJnRoaXMudmFsdWUudGV4dD8ubWF4Q2hhcnMmJihFLmNoaWxkcmVuWzBdLmF0dHJpYnV0ZXMubWF4TGVuZ3RoPXRoaXMudmFsdWUudGV4dC5tYXhDaGFycyk7aWYoZSl7aWYodGhpcy51aS5udW1lcmljRWRpdCl7ZT1wYXJzZUZsb2F0KGUpO2U9aXNOYU4oZSk/IiI6ZS50b1N0cmluZygpfSJ0ZXh0YXJlYSI9PT1FLmNoaWxkcmVuWzBdLm5hbWU/RS5jaGlsZHJlblswXS5hdHRyaWJ1dGVzLnRleHRDb250ZW50PWU6RS5jaGlsZHJlblswXS5hdHRyaWJ1dGVzLnZhbHVlPWV9fWlmKCF0aGlzLnVpLmltYWdlRWRpdCYmRS5jaGlsZHJlbj8uWzBdJiZ0aGlzLmgpe249bnx8Z2V0Qm9yZGVyRGltcyh0aGlzLnVpW0NyXSgpKTtsZXQgdD0wO2lmKHRoaXMuY2FwdGlvbiYmWyJ0b3AiLCJib3R0b20iXS5pbmNsdWRlcyh0aGlzLmNhcHRpb24ucGxhY2VtZW50KSl7dD10aGlzLmNhcHRpb24ucmVzZXJ2ZTt0PD0wJiYodD10aGlzLmNhcHRpb25bQ3JdKGUpLmgpO2NvbnN0IGk9dGhpcy5oLXQtci1uLmg7RS5jaGlsZHJlblswXS5hdHRyaWJ1dGVzLnN0eWxlLmhlaWdodD1tZWFzdXJlVG9TdHJpbmcoaSl9ZWxzZSBFLmNoaWxkcmVuWzBdLmF0dHJpYnV0ZXMuc3R5bGUuaGVpZ2h0PSIxMDAlIn11JiZFLmNoaWxkcmVuLnB1c2godSk7aWYoIXQpe0UuYXR0cmlidXRlcy5jbGFzcyYmRS5hdHRyaWJ1dGVzLmNsYXNzLnB1c2goInhmYUxlZnQiKTt0aGlzLnc9aTt0aGlzLmg9YTtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKGNyZWF0ZVdyYXBwZXIodGhpcyxsKSxRKX1pZih0aGlzLnVpLmJ1dHRvbil7by5wYWRkaW5nJiZkZWxldGUgby5wYWRkaW5nOyJkaXYiPT09dC5uYW1lJiYodC5uYW1lPSJzcGFuIik7RS5jaGlsZHJlbi5wdXNoKHQpO3JldHVybiBIVE1MUmVzdWx0LnN1Y2Nlc3MobCxRKX10aGlzLnVpLmNoZWNrQnV0dG9uJiYodC5hdHRyaWJ1dGVzLmNsYXNzWzBdPSJ4ZmFDYXB0aW9uRm9yQ2hlY2tCdXR0b24iKTtFLmF0dHJpYnV0ZXMuY2xhc3N8fChFLmF0dHJpYnV0ZXMuY2xhc3M9W10pO0UuY2hpbGRyZW4uc3BsaWNlKDAsMCx0KTtzd2l0Y2godGhpcy5jYXB0aW9uLnBsYWNlbWVudCl7Y2FzZSJsZWZ0IjpjYXNlImlubGluZSI6RS5hdHRyaWJ1dGVzLmNsYXNzLnB1c2goInhmYUxlZnQiKTticmVhaztjYXNlInJpZ2h0IjpFLmF0dHJpYnV0ZXMuY2xhc3MucHVzaCgieGZhUmlnaHQiKTticmVhaztjYXNlInRvcCI6RS5hdHRyaWJ1dGVzLmNsYXNzLnB1c2goInhmYVRvcCIpO2JyZWFrO2Nhc2UiYm90dG9tIjpFLmF0dHJpYnV0ZXMuY2xhc3MucHVzaCgieGZhQm90dG9tIil9dGhpcy53PWk7dGhpcy5oPWE7cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2VzcyhjcmVhdGVXcmFwcGVyKHRoaXMsbCksUSl9fWNsYXNzIEZpbGwgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImZpbGwiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMucHJlc2VuY2U9Z2V0U3RyaW5nT3B0aW9uKGUucHJlc2VuY2UsWyJ2aXNpYmxlIiwiaGlkZGVuIiwiaW5hY3RpdmUiLCJpbnZpc2libGUiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuY29sb3I9bnVsbDt0aGlzLmV4dHJhcz1udWxsO3RoaXMubGluZWFyPW51bGw7dGhpcy5wYXR0ZXJuPW51bGw7dGhpcy5yYWRpYWw9bnVsbDt0aGlzLnNvbGlkPW51bGw7dGhpcy5zdGlwcGxlPW51bGx9W3JuXSgpe2NvbnN0IGU9dGhpc1twcl0oKSx0PWVbcHJdKClbcHJdKCksaT1PYmplY3QuY3JlYXRlKG51bGwpO2xldCBhPSJjb2xvciIscz1hO2lmKGUgaW5zdGFuY2VvZiBCb3JkZXIpe2E9ImJhY2tncm91bmQtY29sb3IiO3M9ImJhY2tncm91bmQiO3QgaW5zdGFuY2VvZiBVaSYmKGkuYmFja2dyb3VuZENvbG9yPSJ3aGl0ZSIpfWlmKGUgaW5zdGFuY2VvZiBSZWN0YW5nbGV8fGUgaW5zdGFuY2VvZiBBcmMpe2E9cz0iZmlsbCI7aS5maWxsPSJ3aGl0ZSJ9Zm9yKGNvbnN0IGUgb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpe2lmKCJleHRyYXMiPT09ZXx8ImNvbG9yIj09PWUpY29udGludWU7Y29uc3QgdD10aGlzW2VdO2lmKCEodCBpbnN0YW5jZW9mIFhGQU9iamVjdCkpY29udGludWU7Y29uc3Qgcj10W3JuXSh0aGlzLmNvbG9yKTtyJiYoaVtyLnN0YXJ0c1dpdGgoIiMiKT9hOnNdPXIpO3JldHVybiBpfWlmKHRoaXMuY29sb3I/LnZhbHVlKXtjb25zdCBlPXRoaXMuY29sb3Jbcm5dKCk7aVtlLnN0YXJ0c1dpdGgoIiMiKT9hOnNdPWV9cmV0dXJuIGl9fWNsYXNzIEZpbHRlciBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiZmlsdGVyIiwhMCk7dGhpcy5hZGRSZXZvY2F0aW9uSW5mbz1nZXRTdHJpbmdPcHRpb24oZS5hZGRSZXZvY2F0aW9uSW5mbyxbIiIsInJlcXVpcmVkIiwib3B0aW9uYWwiLCJub25lIl0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMudmVyc2lvbj1nZXRJbnRlZ2VyKHtkYXRhOnRoaXMudmVyc2lvbixkZWZhdWx0VmFsdWU6NSx2YWxpZGF0ZTplPT5lPj0xJiZlPD01fSk7dGhpcy5hcHBlYXJhbmNlRmlsdGVyPW51bGw7dGhpcy5jZXJ0aWZpY2F0ZXM9bnVsbDt0aGlzLmRpZ2VzdE1ldGhvZHM9bnVsbDt0aGlzLmVuY29kaW5ncz1udWxsO3RoaXMuZW5jcnlwdGlvbk1ldGhvZHM9bnVsbDt0aGlzLmhhbmRsZXI9bnVsbDt0aGlzLmxvY2tEb2N1bWVudD1udWxsO3RoaXMubWRwPW51bGw7dGhpcy5yZWFzb25zPW51bGw7dGhpcy50aW1lU3RhbXA9bnVsbH19Y2xhc3MgRmxvYXQgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJmbG9hdCIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifVtzcl0oKXtjb25zdCBlPXBhcnNlRmxvYXQodGhpc1tlcl0udHJpbSgpKTt0aGlzW2VyXT1pc05hTihlKT9udWxsOmV9W2FuXShlKXtyZXR1cm4gdmFsdWVUb0h0bWwobnVsbCE9PXRoaXNbZXJdP3RoaXNbZXJdLnRvU3RyaW5nKCk6IiIpfX1jbGFzcyB0ZW1wbGF0ZV9Gb250IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJmb250IiwhMCk7dGhpcy5iYXNlbGluZVNoaWZ0PWdldE1lYXN1cmVtZW50KGUuYmFzZWxpbmVTaGlmdCk7dGhpcy5mb250SG9yaXpvbnRhbFNjYWxlPWdldEZsb2F0KHtkYXRhOmUuZm9udEhvcml6b250YWxTY2FsZSxkZWZhdWx0VmFsdWU6MTAwLHZhbGlkYXRlOmU9PmU+PTB9KTt0aGlzLmZvbnRWZXJ0aWNhbFNjYWxlPWdldEZsb2F0KHtkYXRhOmUuZm9udFZlcnRpY2FsU2NhbGUsZGVmYXVsdFZhbHVlOjEwMCx2YWxpZGF0ZTplPT5lPj0wfSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmtlcm5pbmdNb2RlPWdldFN0cmluZ09wdGlvbihlLmtlcm5pbmdNb2RlLFsibm9uZSIsInBhaXIiXSk7dGhpcy5sZXR0ZXJTcGFjaW5nPWdldE1lYXN1cmVtZW50KGUubGV0dGVyU3BhY2luZywiMCIpO3RoaXMubGluZVRocm91Z2g9Z2V0SW50ZWdlcih7ZGF0YTplLmxpbmVUaHJvdWdoLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfHwyPT09ZX0pO3RoaXMubGluZVRocm91Z2hQZXJpb2Q9Z2V0U3RyaW5nT3B0aW9uKGUubGluZVRocm91Z2hQZXJpb2QsWyJhbGwiLCJ3b3JkIl0pO3RoaXMub3ZlcmxpbmU9Z2V0SW50ZWdlcih7ZGF0YTplLm92ZXJsaW5lLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfHwyPT09ZX0pO3RoaXMub3ZlcmxpbmVQZXJpb2Q9Z2V0U3RyaW5nT3B0aW9uKGUub3ZlcmxpbmVQZXJpb2QsWyJhbGwiLCJ3b3JkIl0pO3RoaXMucG9zdHVyZT1nZXRTdHJpbmdPcHRpb24oZS5wb3N0dXJlLFsibm9ybWFsIiwiaXRhbGljIl0pO3RoaXMuc2l6ZT1nZXRNZWFzdXJlbWVudChlLnNpemUsIjEwcHQiKTt0aGlzLnR5cGVmYWNlPWUudHlwZWZhY2V8fCJDb3VyaWVyIjt0aGlzLnVuZGVybGluZT1nZXRJbnRlZ2VyKHtkYXRhOmUudW5kZXJsaW5lLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfHwyPT09ZX0pO3RoaXMudW5kZXJsaW5lUGVyaW9kPWdldFN0cmluZ09wdGlvbihlLnVuZGVybGluZVBlcmlvZCxbImFsbCIsIndvcmQiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMud2VpZ2h0PWdldFN0cmluZ09wdGlvbihlLndlaWdodCxbIm5vcm1hbCIsImJvbGQiXSk7dGhpcy5leHRyYXM9bnVsbDt0aGlzLmZpbGw9bnVsbH1bVnNdKGUpe3N1cGVyW1ZzXShlKTt0aGlzW3lyXS51c2VkVHlwZWZhY2VzLmFkZCh0aGlzLnR5cGVmYWNlKX1bcm5dKCl7Y29uc3QgZT10b1N0eWxlKHRoaXMsImZpbGwiKSx0PWUuY29sb3I7aWYodClpZigiIzAwMDAwMCI9PT10KWRlbGV0ZSBlLmNvbG9yO2Vsc2UgaWYoIXQuc3RhcnRzV2l0aCgiIyIpKXtlLmJhY2tncm91bmQ9dDtlLmJhY2tncm91bmRDbGlwPSJ0ZXh0IjtlLmNvbG9yPSJ0cmFuc3BhcmVudCJ9dGhpcy5iYXNlbGluZVNoaWZ0JiYoZS52ZXJ0aWNhbEFsaWduPW1lYXN1cmVUb1N0cmluZyh0aGlzLmJhc2VsaW5lU2hpZnQpKTtlLmZvbnRLZXJuaW5nPSJub25lIj09PXRoaXMua2VybmluZ01vZGU/Im5vbmUiOiJub3JtYWwiO2UubGV0dGVyU3BhY2luZz1tZWFzdXJlVG9TdHJpbmcodGhpcy5sZXR0ZXJTcGFjaW5nKTtpZigwIT09dGhpcy5saW5lVGhyb3VnaCl7ZS50ZXh0RGVjb3JhdGlvbj0ibGluZS10aHJvdWdoIjsyPT09dGhpcy5saW5lVGhyb3VnaCYmKGUudGV4dERlY29yYXRpb25TdHlsZT0iZG91YmxlIil9aWYoMCE9PXRoaXMub3ZlcmxpbmUpe2UudGV4dERlY29yYXRpb249Im92ZXJsaW5lIjsyPT09dGhpcy5vdmVybGluZSYmKGUudGV4dERlY29yYXRpb25TdHlsZT0iZG91YmxlIil9ZS5mb250U3R5bGU9dGhpcy5wb3N0dXJlO2UuZm9udFNpemU9bWVhc3VyZVRvU3RyaW5nKC45OSp0aGlzLnNpemUpO3NldEZvbnRGYW1pbHkodGhpcyx0aGlzLHRoaXNbeXJdLmZvbnRGaW5kZXIsZSk7aWYoMCE9PXRoaXMudW5kZXJsaW5lKXtlLnRleHREZWNvcmF0aW9uPSJ1bmRlcmxpbmUiOzI9PT10aGlzLnVuZGVybGluZSYmKGUudGV4dERlY29yYXRpb25TdHlsZT0iZG91YmxlIil9ZS5mb250V2VpZ2h0PXRoaXMud2VpZ2h0O3JldHVybiBlfX1jbGFzcyBGb3JtYXQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImZvcm1hdCIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5waWN0dXJlPW51bGx9fWNsYXNzIEhhbmRsZXIgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImhhbmRsZXIiKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudHlwZT1nZXRTdHJpbmdPcHRpb24oZS50eXBlLFsib3B0aW9uYWwiLCJyZXF1aXJlZCJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIEh5cGhlbmF0aW9uIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJoeXBoZW5hdGlvbiIpO3RoaXMuZXhjbHVkZUFsbENhcHM9Z2V0SW50ZWdlcih7ZGF0YTplLmV4Y2x1ZGVBbGxDYXBzLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfSk7dGhpcy5leGNsdWRlSW5pdGlhbENhcD1nZXRJbnRlZ2VyKHtkYXRhOmUuZXhjbHVkZUluaXRpYWxDYXAsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLmh5cGhlbmF0ZT1nZXRJbnRlZ2VyKHtkYXRhOmUuaHlwaGVuYXRlLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnB1c2hDaGFyYWN0ZXJDb3VudD1nZXRJbnRlZ2VyKHtkYXRhOmUucHVzaENoYXJhY3RlckNvdW50LGRlZmF1bHRWYWx1ZTozLHZhbGlkYXRlOmU9PmU+PTB9KTt0aGlzLnJlbWFpbkNoYXJhY3RlckNvdW50PWdldEludGVnZXIoe2RhdGE6ZS5yZW1haW5DaGFyYWN0ZXJDb3VudCxkZWZhdWx0VmFsdWU6Myx2YWxpZGF0ZTplPT5lPj0wfSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMud29yZENoYXJhY3RlckNvdW50PWdldEludGVnZXIoe2RhdGE6ZS53b3JkQ2hhcmFjdGVyQ291bnQsZGVmYXVsdFZhbHVlOjcsdmFsaWRhdGU6ZT0+ZT49MH0pfX1jbGFzcyBJbWFnZSBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiaW1hZ2UiKTt0aGlzLmFzcGVjdD1nZXRTdHJpbmdPcHRpb24oZS5hc3BlY3QsWyJmaXQiLCJhY3R1YWwiLCJoZWlnaHQiLCJub25lIiwid2lkdGgiXSk7dGhpcy5jb250ZW50VHlwZT1lLmNvbnRlbnRUeXBlfHwiIjt0aGlzLmhyZWY9ZS5ocmVmfHwiIjt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMudHJhbnNmZXJFbmNvZGluZz1nZXRTdHJpbmdPcHRpb24oZS50cmFuc2ZlckVuY29kaW5nLFsiYmFzZTY0Iiwibm9uZSIsInBhY2thZ2UiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifVthbl0oKXtpZih0aGlzLmNvbnRlbnRUeXBlJiYhdm4uaGFzKHRoaXMuY29udGVudFR5cGUudG9Mb3dlckNhc2UoKSkpcmV0dXJuIEhUTUxSZXN1bHQuRU1QVFk7bGV0IGU9dGhpc1t5cl0uaW1hZ2VzJiZ0aGlzW3lyXS5pbWFnZXMuZ2V0KHRoaXMuaHJlZik7aWYoIWUmJih0aGlzLmhyZWZ8fCF0aGlzW2VyXSkpcmV0dXJuIEhUTUxSZXN1bHQuRU1QVFk7ZXx8ImJhc2U2NCIhPT10aGlzLnRyYW5zZmVyRW5jb2Rpbmd8fChlPXN0cmluZ1RvQnl0ZXMoYXRvYih0aGlzW2VyXSkpKTtpZighZSlyZXR1cm4gSFRNTFJlc3VsdC5FTVBUWTtpZighdGhpcy5jb250ZW50VHlwZSl7Zm9yKGNvbnN0W3QsaV1vZiBLbilpZihlLmxlbmd0aD50Lmxlbmd0aCYmdC5ldmVyeSgoKHQsaSk9PnQ9PT1lW2ldKSkpe3RoaXMuY29udGVudFR5cGU9aTticmVha31pZighdGhpcy5jb250ZW50VHlwZSlyZXR1cm4gSFRNTFJlc3VsdC5FTVBUWX1jb25zdCB0PW5ldyBCbG9iKFtlXSx7dHlwZTp0aGlzLmNvbnRlbnRUeXBlfSk7bGV0IGk7c3dpdGNoKHRoaXMuYXNwZWN0KXtjYXNlImZpdCI6Y2FzZSJhY3R1YWwiOmJyZWFrO2Nhc2UiaGVpZ2h0IjppPXtoZWlnaHQ6IjEwMCUiLG9iamVjdEZpdDoiZmlsbCJ9O2JyZWFrO2Nhc2Uibm9uZSI6aT17d2lkdGg6IjEwMCUiLGhlaWdodDoiMTAwJSIsb2JqZWN0Rml0OiJmaWxsIn07YnJlYWs7Y2FzZSJ3aWR0aCI6aT17d2lkdGg6IjEwMCUiLG9iamVjdEZpdDoiZmlsbCJ9fWNvbnN0IGE9dGhpc1twcl0oKTtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJpbWciLGF0dHJpYnV0ZXM6e2NsYXNzOlsieGZhSW1hZ2UiXSxzdHlsZTppLHNyYzpVUkwuY3JlYXRlT2JqZWN0VVJMKHQpLGFsdDphP2FyaWFMYWJlbChhW3ByXSgpKTpudWxsfX0pfX1jbGFzcyBJbWFnZUVkaXQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sImltYWdlRWRpdCIsITApO3RoaXMuZGF0YT1nZXRTdHJpbmdPcHRpb24oZS5kYXRhLFsibGluayIsImVtYmVkIl0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuYm9yZGVyPW51bGw7dGhpcy5leHRyYXM9bnVsbDt0aGlzLm1hcmdpbj1udWxsfVthbl0oZSl7cmV0dXJuImVtYmVkIj09PXRoaXMuZGF0YT9IVE1MUmVzdWx0LnN1Y2Nlc3Moe25hbWU6ImRpdiIsY2hpbGRyZW46W10sYXR0cmlidXRlczp7fX0pOkhUTUxSZXN1bHQuRU1QVFl9fWNsYXNzIEludGVnZXIgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJpbnRlZ2VyIik7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9W3NyXSgpe2NvbnN0IGU9cGFyc2VJbnQodGhpc1tlcl0udHJpbSgpLDEwKTt0aGlzW2VyXT1pc05hTihlKT9udWxsOmV9W2FuXShlKXtyZXR1cm4gdmFsdWVUb0h0bWwobnVsbCE9PXRoaXNbZXJdP3RoaXNbZXJdLnRvU3RyaW5nKCk6IiIpfX1jbGFzcyBJc3N1ZXJzIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJpc3N1ZXJzIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUudHlwZSxbIm9wdGlvbmFsIiwicmVxdWlyZWQiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuY2VydGlmaWNhdGU9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBJdGVtcyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwiaXRlbXMiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucHJlc2VuY2U9Z2V0U3RyaW5nT3B0aW9uKGUucHJlc2VuY2UsWyJ2aXNpYmxlIiwiaGlkZGVuIiwiaW5hY3RpdmUiLCJpbnZpc2libGUiXSk7dGhpcy5yZWY9ZS5yZWZ8fCIiO3RoaXMuc2F2ZT1nZXRJbnRlZ2VyKHtkYXRhOmUuc2F2ZSxkZWZhdWx0VmFsdWU6MCx2YWxpZGF0ZTplPT4xPT09ZX0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmJvb2xlYW49bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZGF0ZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kYXRlVGltZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kZWNpbWFsPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmV4RGF0YT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5mbG9hdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5pbWFnZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5pbnRlZ2VyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnRleHQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudGltZT1uZXcgWEZBT2JqZWN0QXJyYXl9W2FuXSgpe2NvbnN0IGU9W107Zm9yKGNvbnN0IHQgb2YgdGhpc1tFcl0oKSllLnB1c2godFtlbl0oKSk7cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2VzcyhlKX19Y2xhc3MgS2VlcCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwia2VlcCIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7Y29uc3QgdD1bIm5vbmUiLCJjb250ZW50QXJlYSIsInBhZ2VBcmVhIl07dGhpcy5pbnRhY3Q9Z2V0U3RyaW5nT3B0aW9uKGUuaW50YWN0LHQpO3RoaXMubmV4dD1nZXRTdHJpbmdPcHRpb24oZS5uZXh0LHQpO3RoaXMucHJldmlvdXM9Z2V0U3RyaW5nT3B0aW9uKGUucHJldmlvdXMsdCk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuZXh0cmFzPW51bGx9fWNsYXNzIEtleVVzYWdlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJrZXlVc2FnZSIpO2NvbnN0IHQ9WyIiLCJ5ZXMiLCJubyJdO3RoaXMuY3JsU2lnbj1nZXRTdHJpbmdPcHRpb24oZS5jcmxTaWduLHQpO3RoaXMuZGF0YUVuY2lwaGVybWVudD1nZXRTdHJpbmdPcHRpb24oZS5kYXRhRW5jaXBoZXJtZW50LHQpO3RoaXMuZGVjaXBoZXJPbmx5PWdldFN0cmluZ09wdGlvbihlLmRlY2lwaGVyT25seSx0KTt0aGlzLmRpZ2l0YWxTaWduYXR1cmU9Z2V0U3RyaW5nT3B0aW9uKGUuZGlnaXRhbFNpZ25hdHVyZSx0KTt0aGlzLmVuY2lwaGVyT25seT1nZXRTdHJpbmdPcHRpb24oZS5lbmNpcGhlck9ubHksdCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmtleUFncmVlbWVudD1nZXRTdHJpbmdPcHRpb24oZS5rZXlBZ3JlZW1lbnQsdCk7dGhpcy5rZXlDZXJ0U2lnbj1nZXRTdHJpbmdPcHRpb24oZS5rZXlDZXJ0U2lnbix0KTt0aGlzLmtleUVuY2lwaGVybWVudD1nZXRTdHJpbmdPcHRpb24oZS5rZXlFbmNpcGhlcm1lbnQsdCk7dGhpcy5ub25SZXB1ZGlhdGlvbj1nZXRTdHJpbmdPcHRpb24oZS5ub25SZXB1ZGlhdGlvbix0KTt0aGlzLnR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUudHlwZSxbIm9wdGlvbmFsIiwicmVxdWlyZWQiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBMaW5lIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJsaW5lIiwhMCk7dGhpcy5oYW5kPWdldFN0cmluZ09wdGlvbihlLmhhbmQsWyJldmVuIiwibGVmdCIsInJpZ2h0Il0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5zbG9wZT1nZXRTdHJpbmdPcHRpb24oZS5zbG9wZSxbIlxcIiwiLyJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5lZGdlPW51bGx9W2FuXSgpe2NvbnN0IGU9dGhpc1twcl0oKVtwcl0oKSx0PXRoaXMuZWRnZXx8bmV3IEVkZ2Uoe30pLGk9dFtybl0oKSxhPU9iamVjdC5jcmVhdGUobnVsbCkscz0idmlzaWJsZSI9PT10LnByZXNlbmNlP3QudGhpY2tuZXNzOjA7YS5zdHJva2VXaWR0aD1tZWFzdXJlVG9TdHJpbmcocyk7YS5zdHJva2U9aS5jb2xvcjtsZXQgcixuLG8sZyxjPSIxMDAlIixoPSIxMDAlIjtpZihlLnc8PXMpe1tyLG4sbyxnXT1bIjUwJSIsMCwiNTAlIiwiMTAwJSJdO2M9YS5zdHJva2VXaWR0aH1lbHNlIGlmKGUuaDw9cyl7W3IsbixvLGddPVswLCI1MCUiLCIxMDAlIiwiNTAlIl07aD1hLnN0cm9rZVdpZHRofWVsc2UiXFwiPT09dGhpcy5zbG9wZT9bcixuLG8sZ109WzAsMCwiMTAwJSIsIjEwMCUiXTpbcixuLG8sZ109WzAsIjEwMCUiLCIxMDAlIiwwXTtjb25zdCBsPXtuYW1lOiJzdmciLGNoaWxkcmVuOlt7bmFtZToibGluZSIsYXR0cmlidXRlczp7eG1sbnM6SG4seDE6cix5MTpuLHgyOm8seTI6ZyxzdHlsZTphfX1dLGF0dHJpYnV0ZXM6e3htbG5zOkhuLHdpZHRoOmMsaGVpZ2h0Omgsc3R5bGU6e292ZXJmbG93OiJ2aXNpYmxlIn19fTtpZihoYXNNYXJnaW4oZSkpcmV0dXJuIEhUTUxSZXN1bHQuc3VjY2Vzcyh7bmFtZToiZGl2IixhdHRyaWJ1dGVzOntzdHlsZTp7ZGlzcGxheToiaW5saW5lIix3aWR0aDoiMTAwJSIsaGVpZ2h0OiIxMDAlIn19LGNoaWxkcmVuOltsXX0pO2wuYXR0cmlidXRlcy5zdHlsZS5wb3NpdGlvbj0iYWJzb2x1dGUiO3JldHVybiBIVE1MUmVzdWx0LnN1Y2Nlc3MobCl9fWNsYXNzIExpbmVhciBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwibGluZWFyIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUudHlwZSxbInRvUmlnaHQiLCJ0b0JvdHRvbSIsInRvTGVmdCIsInRvVG9wIl0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmNvbG9yPW51bGw7dGhpcy5leHRyYXM9bnVsbH1bcm5dKGUpe2U9ZT9lW3JuXSgpOiIjRkZGRkZGIjtyZXR1cm5gbGluZWFyLWdyYWRpZW50KCR7dGhpcy50eXBlLnJlcGxhY2UoLyhbUkJMVF0pLywiICQxIikudG9Mb3dlckNhc2UoKX0sICR7ZX0sICR7dGhpcy5jb2xvcj90aGlzLmNvbG9yW3JuXSgpOiIjMDAwMDAwIn0pYH19Y2xhc3MgTG9ja0RvY3VtZW50IGV4dGVuZHMgQ29udGVudE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwibG9ja0RvY3VtZW50Iik7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUudHlwZSxbIm9wdGlvbmFsIiwicmVxdWlyZWQiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifVtzcl0oKXt0aGlzW2VyXT1nZXRTdHJpbmdPcHRpb24odGhpc1tlcl0sWyJhdXRvIiwiMCIsIjEiXSl9fWNsYXNzIE1hbmlmZXN0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJtYW5pZmVzdCIsITApO3RoaXMuYWN0aW9uPWdldFN0cmluZ09wdGlvbihlLmFjdGlvbixbImluY2x1ZGUiLCJhbGwiLCJleGNsdWRlIl0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5yZWY9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBNYXJnaW4gZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sIm1hcmdpbiIsITApO3RoaXMuYm90dG9tSW5zZXQ9Z2V0TWVhc3VyZW1lbnQoZS5ib3R0b21JbnNldCwiMCIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5sZWZ0SW5zZXQ9Z2V0TWVhc3VyZW1lbnQoZS5sZWZ0SW5zZXQsIjAiKTt0aGlzLnJpZ2h0SW5zZXQ9Z2V0TWVhc3VyZW1lbnQoZS5yaWdodEluc2V0LCIwIik7dGhpcy50b3BJbnNldD1nZXRNZWFzdXJlbWVudChlLnRvcEluc2V0LCIwIik7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuZXh0cmFzPW51bGx9W3JuXSgpe3JldHVybnttYXJnaW46bWVhc3VyZVRvU3RyaW5nKHRoaXMudG9wSW5zZXQpKyIgIittZWFzdXJlVG9TdHJpbmcodGhpcy5yaWdodEluc2V0KSsiICIrbWVhc3VyZVRvU3RyaW5nKHRoaXMuYm90dG9tSW5zZXQpKyIgIittZWFzdXJlVG9TdHJpbmcodGhpcy5sZWZ0SW5zZXQpfX19Y2xhc3MgTWRwIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJtZHAiKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMucGVybWlzc2lvbnM9Z2V0SW50ZWdlcih7ZGF0YTplLnBlcm1pc3Npb25zLGRlZmF1bHRWYWx1ZToyLHZhbGlkYXRlOmU9PjE9PT1lfHwzPT09ZX0pO3RoaXMuc2lnbmF0dXJlVHlwZT1nZXRTdHJpbmdPcHRpb24oZS5zaWduYXR1cmVUeXBlLFsiZmlsbGVyIiwiYXV0aG9yIl0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgTWVkaXVtIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJtZWRpdW0iKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMuaW1hZ2luZ0JCb3g9ZnVuY3Rpb24gZ2V0QkJveChlKXtjb25zdCB0PS0xO2lmKCFlKXJldHVybnt4OnQseTp0LHdpZHRoOnQsaGVpZ2h0OnR9O2NvbnN0IGk9ZS50cmltKCkuc3BsaXQoL1xzKixccyovKS5tYXAoKGU9PmdldE1lYXN1cmVtZW50KGUsIi0xIikpKTtpZihpLmxlbmd0aDw0fHxpWzJdPDB8fGlbM108MClyZXR1cm57eDp0LHk6dCx3aWR0aDp0LGhlaWdodDp0fTtjb25zdFthLHMscixuXT1pO3JldHVybnt4OmEseTpzLHdpZHRoOnIsaGVpZ2h0Om59fShlLmltYWdpbmdCQm94KTt0aGlzLmxvbmc9Z2V0TWVhc3VyZW1lbnQoZS5sb25nKTt0aGlzLm9yaWVudGF0aW9uPWdldFN0cmluZ09wdGlvbihlLm9yaWVudGF0aW9uLFsicG9ydHJhaXQiLCJsYW5kc2NhcGUiXSk7dGhpcy5zaG9ydD1nZXRNZWFzdXJlbWVudChlLnNob3J0KTt0aGlzLnN0b2NrPWUuc3RvY2t8fCIiO3RoaXMudHJheUluPWdldFN0cmluZ09wdGlvbihlLnRyYXlJbixbImF1dG8iLCJkZWxlZ2F0ZSIsInBhZ2VGcm9udCJdKTt0aGlzLnRyYXlPdXQ9Z2V0U3RyaW5nT3B0aW9uKGUudHJheU91dCxbImF1dG8iLCJkZWxlZ2F0ZSJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIE1lc3NhZ2UgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sIm1lc3NhZ2UiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLnRleHQ9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBOdW1lcmljRWRpdCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwibnVtZXJpY0VkaXQiLCEwKTt0aGlzLmhTY3JvbGxQb2xpY3k9Z2V0U3RyaW5nT3B0aW9uKGUuaFNjcm9sbFBvbGljeSxbImF1dG8iLCJvZmYiLCJvbiJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmJvcmRlcj1udWxsO3RoaXMuY29tYj1udWxsO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5tYXJnaW49bnVsbH1bYW5dKGUpe2NvbnN0IHQ9dG9TdHlsZSh0aGlzLCJib3JkZXIiLCJmb250IiwibWFyZ2luIiksaT10aGlzW3ByXSgpW3ByXSgpLGE9e25hbWU6ImlucHV0IixhdHRyaWJ1dGVzOnt0eXBlOiJ0ZXh0IixmaWVsZElkOmlbbm5dLGRhdGFJZDppW3RyXT8uW25uXXx8aVtubl0sY2xhc3M6WyJ4ZmFUZXh0ZmllbGQiXSxzdHlsZTp0LCJhcmlhLWxhYmVsIjphcmlhTGFiZWwoaSksImFyaWEtcmVxdWlyZWQiOiExfX07aWYoaXNSZXF1aXJlZChpKSl7YS5hdHRyaWJ1dGVzWyJhcmlhLXJlcXVpcmVkIl09ITA7YS5hdHRyaWJ1dGVzLnJlcXVpcmVkPSEwfXJldHVybiBIVE1MUmVzdWx0LnN1Y2Nlc3Moe25hbWU6ImxhYmVsIixhdHRyaWJ1dGVzOntjbGFzczpbInhmYUxhYmVsIl19LGNoaWxkcmVuOlthXX0pfX1jbGFzcyBPY2N1ciBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwib2NjdXIiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMuaW5pdGlhbD0iIiE9PWUuaW5pdGlhbD9nZXRJbnRlZ2VyKHtkYXRhOmUuaW5pdGlhbCxkZWZhdWx0VmFsdWU6IiIsdmFsaWRhdGU6ZT0+ITB9KToiIjt0aGlzLm1heD0iIiE9PWUubWF4P2dldEludGVnZXIoe2RhdGE6ZS5tYXgsZGVmYXVsdFZhbHVlOjEsdmFsaWRhdGU6ZT0+ITB9KToiIjt0aGlzLm1pbj0iIiE9PWUubWluP2dldEludGVnZXIoe2RhdGE6ZS5taW4sZGVmYXVsdFZhbHVlOjEsdmFsaWRhdGU6ZT0+ITB9KToiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5leHRyYXM9bnVsbH1bVnNdKCl7Y29uc3QgZT10aGlzW3ByXSgpLHQ9dGhpcy5taW47IiI9PT10aGlzLm1pbiYmKHRoaXMubWluPWUgaW5zdGFuY2VvZiBQYWdlQXJlYXx8ZSBpbnN0YW5jZW9mIFBhZ2VTZXQ/MDoxKTsiIj09PXRoaXMubWF4JiYodGhpcy5tYXg9IiI9PT10P2UgaW5zdGFuY2VvZiBQYWdlQXJlYXx8ZSBpbnN0YW5jZW9mIFBhZ2VTZXQ/LTE6MTp0aGlzLm1pbik7LTEhPT10aGlzLm1heCYmdGhpcy5tYXg8dGhpcy5taW4mJih0aGlzLm1heD10aGlzLm1pbik7IiI9PT10aGlzLmluaXRpYWwmJih0aGlzLmluaXRpYWw9ZSBpbnN0YW5jZW9mIFRlbXBsYXRlPzE6dGhpcy5taW4pfX1jbGFzcyBPaWQgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sIm9pZCIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBPaWRzIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJvaWRzIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUudHlwZSxbIm9wdGlvbmFsIiwicmVxdWlyZWQiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMub2lkPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgT3ZlcmZsb3cgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sIm92ZXJmbG93Iik7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmxlYWRlcj1lLmxlYWRlcnx8IiI7dGhpcy50YXJnZXQ9ZS50YXJnZXR8fCIiO3RoaXMudHJhaWxlcj1lLnRyYWlsZXJ8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn1bQ3JdKCl7aWYoIXRoaXNbYXJdKXtjb25zdCBlPXRoaXNbcHJdKCksdD10aGlzW21yXSgpLGk9dFtWcl0odGhpcy50YXJnZXQsZSksYT10W1ZyXSh0aGlzLmxlYWRlcixlKSxzPXRbVnJdKHRoaXMudHJhaWxlcixlKTt0aGlzW2FyXT17dGFyZ2V0Omk/LlswXXx8bnVsbCxsZWFkZXI6YT8uWzBdfHxudWxsLHRyYWlsZXI6cz8uWzBdfHxudWxsLGFkZExlYWRlcjohMSxhZGRUcmFpbGVyOiExfX1yZXR1cm4gdGhpc1thcl19fWNsYXNzIFBhZ2VBcmVhIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJwYWdlQXJlYSIsITApO3RoaXMuYmxhbmtPck5vdEJsYW5rPWdldFN0cmluZ09wdGlvbihlLmJsYW5rT3JOb3RCbGFuayxbImFueSIsImJsYW5rIiwibm90QmxhbmsiXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLmluaXRpYWxOdW1iZXI9Z2V0SW50ZWdlcih7ZGF0YTplLmluaXRpYWxOdW1iZXIsZGVmYXVsdFZhbHVlOjEsdmFsaWRhdGU6ZT0+ITB9KTt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLm51bWJlcmVkPWdldEludGVnZXIoe2RhdGE6ZS5udW1iZXJlZCxkZWZhdWx0VmFsdWU6MSx2YWxpZGF0ZTplPT4hMH0pO3RoaXMub2RkT3JFdmVuPWdldFN0cmluZ09wdGlvbihlLm9kZE9yRXZlbixbImFueSIsImV2ZW4iLCJvZGQiXSk7dGhpcy5wYWdlUG9zaXRpb249Z2V0U3RyaW5nT3B0aW9uKGUucGFnZVBvc2l0aW9uLFsiYW55IiwiZmlyc3QiLCJsYXN0Iiwib25seSIsInJlc3QiXSk7dGhpcy5yZWxldmFudD1nZXRSZWxldmFudChlLnJlbGV2YW50KTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5kZXNjPW51bGw7dGhpcy5leHRyYXM9bnVsbDt0aGlzLm1lZGl1bT1udWxsO3RoaXMub2NjdXI9bnVsbDt0aGlzLmFyZWE9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuY29udGVudEFyZWE9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZHJhdz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5leGNsR3JvdXA9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZmllbGQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3ViZm9ybT1uZXcgWEZBT2JqZWN0QXJyYXl9W0xyXSgpe2lmKCF0aGlzW2FyXSl7dGhpc1thcl09e251bWJlck9mVXNlOjB9O3JldHVybiEwfXJldHVybiF0aGlzLm9jY3VyfHwtMT09PXRoaXMub2NjdXIubWF4fHx0aGlzW2FyXS5udW1iZXJPZlVzZTx0aGlzLm9jY3VyLm1heH1benNdKCl7ZGVsZXRlIHRoaXNbYXJdfVtkcl0oKXt0aGlzW2FyXXx8KHRoaXNbYXJdPXtudW1iZXJPZlVzZTowfSk7Y29uc3QgZT10aGlzW3ByXSgpO2lmKCJvcmRlcmVkT2NjdXJyZW5jZSI9PT1lLnJlbGF0aW9uJiZ0aGlzW0xyXSgpKXt0aGlzW2FyXS5udW1iZXJPZlVzZSs9MTtyZXR1cm4gdGhpc31yZXR1cm4gZVtkcl0oKX1bZ3JdKCl7cmV0dXJuIHRoaXNbYXJdLnNwYWNlfHx7d2lkdGg6MCxoZWlnaHQ6MH19W2FuXSgpe3RoaXNbYXJdfHwodGhpc1thcl09e251bWJlck9mVXNlOjF9KTtjb25zdCBlPVtdO3RoaXNbYXJdLmNoaWxkcmVuPWU7Y29uc3QgdD1PYmplY3QuY3JlYXRlKG51bGwpO2lmKHRoaXMubWVkaXVtJiZ0aGlzLm1lZGl1bS5zaG9ydCYmdGhpcy5tZWRpdW0ubG9uZyl7dC53aWR0aD1tZWFzdXJlVG9TdHJpbmcodGhpcy5tZWRpdW0uc2hvcnQpO3QuaGVpZ2h0PW1lYXN1cmVUb1N0cmluZyh0aGlzLm1lZGl1bS5sb25nKTt0aGlzW2FyXS5zcGFjZT17d2lkdGg6dGhpcy5tZWRpdW0uc2hvcnQsaGVpZ2h0OnRoaXMubWVkaXVtLmxvbmd9O2lmKCJsYW5kc2NhcGUiPT09dGhpcy5tZWRpdW0ub3JpZW50YXRpb24pe2NvbnN0IGU9dC53aWR0aDt0LndpZHRoPXQuaGVpZ2h0O3QuaGVpZ2h0PWU7dGhpc1thcl0uc3BhY2U9e3dpZHRoOnRoaXMubWVkaXVtLmxvbmcsaGVpZ2h0OnRoaXMubWVkaXVtLnNob3J0fX19ZWxzZSB3YXJuKCJYRkEgLSBObyBtZWRpdW0gc3BlY2lmaWVkIGluIHBhZ2VBcmVhOiBwbGVhc2UgZmlsZSBhIGJ1Zy4iKTt0aGlzW1pzXSh7ZmlsdGVyOm5ldyBTZXQoWyJhcmVhIiwiZHJhdyIsImZpZWxkIiwic3ViZm9ybSJdKSxpbmNsdWRlOiEwfSk7dGhpc1tac10oe2ZpbHRlcjpuZXcgU2V0KFsiY29udGVudEFyZWEiXSksaW5jbHVkZTohMH0pO3JldHVybiBIVE1MUmVzdWx0LnN1Y2Nlc3Moe25hbWU6ImRpdiIsY2hpbGRyZW46ZSxhdHRyaWJ1dGVzOntjbGFzczpbInhmYVBhZ2UiXSxpZDp0aGlzW25uXSxzdHlsZTp0LHhmYU5hbWU6dGhpcy5uYW1lfX0pfX1jbGFzcyBQYWdlU2V0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJwYWdlU2V0IiwhMCk7dGhpcy5kdXBsZXhJbXBvc2l0aW9uPWdldFN0cmluZ09wdGlvbihlLmR1cGxleEltcG9zaXRpb24sWyJsb25nRWRnZSIsInNob3J0RWRnZSJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucmVsYXRpb249Z2V0U3RyaW5nT3B0aW9uKGUucmVsYXRpb24sWyJvcmRlcmVkT2NjdXJyZW5jZSIsImR1cGxleFBhZ2luYXRlZCIsInNpbXBsZXhQYWdpbmF0ZWQiXSk7dGhpcy5yZWxldmFudD1nZXRSZWxldmFudChlLnJlbGV2YW50KTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5leHRyYXM9bnVsbDt0aGlzLm9jY3VyPW51bGw7dGhpcy5wYWdlQXJlYT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5wYWdlU2V0PW5ldyBYRkFPYmplY3RBcnJheX1benNdKCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy5wYWdlQXJlYS5jaGlsZHJlbillW3pzXSgpO2Zvcihjb25zdCBlIG9mIHRoaXMucGFnZVNldC5jaGlsZHJlbillW3pzXSgpfVtMcl0oKXtyZXR1cm4hdGhpcy5vY2N1cnx8LTE9PT10aGlzLm9jY3VyLm1heHx8dGhpc1thcl0ubnVtYmVyT2ZVc2U8dGhpcy5vY2N1ci5tYXh9W2RyXSgpe3RoaXNbYXJdfHwodGhpc1thcl09e251bWJlck9mVXNlOjEscGFnZUluZGV4Oi0xLHBhZ2VTZXRJbmRleDotMX0pO2lmKCJvcmRlcmVkT2NjdXJyZW5jZSI9PT10aGlzLnJlbGF0aW9uKXtpZih0aGlzW2FyXS5wYWdlSW5kZXgrMTx0aGlzLnBhZ2VBcmVhLmNoaWxkcmVuLmxlbmd0aCl7dGhpc1thcl0ucGFnZUluZGV4Kz0xO3JldHVybiB0aGlzLnBhZ2VBcmVhLmNoaWxkcmVuW3RoaXNbYXJdLnBhZ2VJbmRleF1bZHJdKCl9aWYodGhpc1thcl0ucGFnZVNldEluZGV4KzE8dGhpcy5wYWdlU2V0LmNoaWxkcmVuLmxlbmd0aCl7dGhpc1thcl0ucGFnZVNldEluZGV4Kz0xO3JldHVybiB0aGlzLnBhZ2VTZXQuY2hpbGRyZW5bdGhpc1thcl0ucGFnZVNldEluZGV4XVtkcl0oKX1pZih0aGlzW0xyXSgpKXt0aGlzW2FyXS5udW1iZXJPZlVzZSs9MTt0aGlzW2FyXS5wYWdlSW5kZXg9LTE7dGhpc1thcl0ucGFnZVNldEluZGV4PS0xO3JldHVybiB0aGlzW2RyXSgpfWNvbnN0IGU9dGhpc1twcl0oKTtpZihlIGluc3RhbmNlb2YgUGFnZVNldClyZXR1cm4gZVtkcl0oKTt0aGlzW3pzXSgpO3JldHVybiB0aGlzW2RyXSgpfWNvbnN0IGU9dGhpc1ttcl0oKVthcl0ucGFnZU51bWJlcix0PWUlMj09MD8iZXZlbiI6Im9kZCIsaT0wPT09ZT8iZmlyc3QiOiJyZXN0IjtsZXQgYT10aGlzLnBhZ2VBcmVhLmNoaWxkcmVuLmZpbmQoKGU9PmUub2RkT3JFdmVuPT09dCYmZS5wYWdlUG9zaXRpb249PT1pKSk7aWYoYSlyZXR1cm4gYTthPXRoaXMucGFnZUFyZWEuY2hpbGRyZW4uZmluZCgoZT0+ImFueSI9PT1lLm9kZE9yRXZlbiYmZS5wYWdlUG9zaXRpb249PT1pKSk7aWYoYSlyZXR1cm4gYTthPXRoaXMucGFnZUFyZWEuY2hpbGRyZW4uZmluZCgoZT0+ImFueSI9PT1lLm9kZE9yRXZlbiYmImFueSI9PT1lLnBhZ2VQb3NpdGlvbikpO3JldHVybiBhfHx0aGlzLnBhZ2VBcmVhLmNoaWxkcmVuWzBdfX1jbGFzcyBQYXJhIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJwYXJhIiwhMCk7dGhpcy5oQWxpZ249Z2V0U3RyaW5nT3B0aW9uKGUuaEFsaWduLFsibGVmdCIsImNlbnRlciIsImp1c3RpZnkiLCJqdXN0aWZ5QWxsIiwicmFkaXgiLCJyaWdodCJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubGluZUhlaWdodD1lLmxpbmVIZWlnaHQ/Z2V0TWVhc3VyZW1lbnQoZS5saW5lSGVpZ2h0LCIwcHQiKToiIjt0aGlzLm1hcmdpbkxlZnQ9ZS5tYXJnaW5MZWZ0P2dldE1lYXN1cmVtZW50KGUubWFyZ2luTGVmdCwiMHB0Iik6IiI7dGhpcy5tYXJnaW5SaWdodD1lLm1hcmdpblJpZ2h0P2dldE1lYXN1cmVtZW50KGUubWFyZ2luUmlnaHQsIjBwdCIpOiIiO3RoaXMub3JwaGFucz1nZXRJbnRlZ2VyKHtkYXRhOmUub3JwaGFucyxkZWZhdWx0VmFsdWU6MCx2YWxpZGF0ZTplPT5lPj0wfSk7dGhpcy5wcmVzZXJ2ZT1lLnByZXNlcnZlfHwiIjt0aGlzLnJhZGl4T2Zmc2V0PWUucmFkaXhPZmZzZXQ/Z2V0TWVhc3VyZW1lbnQoZS5yYWRpeE9mZnNldCwiMHB0Iik6IiI7dGhpcy5zcGFjZUFib3ZlPWUuc3BhY2VBYm92ZT9nZXRNZWFzdXJlbWVudChlLnNwYWNlQWJvdmUsIjBwdCIpOiIiO3RoaXMuc3BhY2VCZWxvdz1lLnNwYWNlQmVsb3c/Z2V0TWVhc3VyZW1lbnQoZS5zcGFjZUJlbG93LCIwcHQiKToiIjt0aGlzLnRhYkRlZmF1bHQ9ZS50YWJEZWZhdWx0P2dldE1lYXN1cmVtZW50KHRoaXMudGFiRGVmYXVsdCk6IiI7dGhpcy50YWJTdG9wcz0oZS50YWJTdG9wc3x8IiIpLnRyaW0oKS5zcGxpdCgvXHMrLykubWFwKCgoZSx0KT0+dCUyPT0xP2dldE1lYXN1cmVtZW50KGUpOmUpKTt0aGlzLnRleHRJbmRlbnQ9ZS50ZXh0SW5kZW50P2dldE1lYXN1cmVtZW50KGUudGV4dEluZGVudCwiMHB0Iik6IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMudkFsaWduPWdldFN0cmluZ09wdGlvbihlLnZBbGlnbixbInRvcCIsImJvdHRvbSIsIm1pZGRsZSJdKTt0aGlzLndpZG93cz1nZXRJbnRlZ2VyKHtkYXRhOmUud2lkb3dzLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PmU+PTB9KTt0aGlzLmh5cGhlbmF0aW9uPW51bGx9W3JuXSgpe2NvbnN0IGU9dG9TdHlsZSh0aGlzLCJoQWxpZ24iKTsiIiE9PXRoaXMubWFyZ2luTGVmdCYmKGUucGFkZGluZ0xlZnQ9bWVhc3VyZVRvU3RyaW5nKHRoaXMubWFyZ2luTGVmdCkpOyIiIT09dGhpcy5tYXJnaW5SaWdodCYmKGUucGFkZGluZ2lnaHQ9bWVhc3VyZVRvU3RyaW5nKHRoaXMubWFyZ2luUmlnaHQpKTsiIiE9PXRoaXMuc3BhY2VBYm92ZSYmKGUucGFkZGluZ1RvcD1tZWFzdXJlVG9TdHJpbmcodGhpcy5zcGFjZUFib3ZlKSk7IiIhPT10aGlzLnNwYWNlQmVsb3cmJihlLnBhZGRpbmdCb3R0b209bWVhc3VyZVRvU3RyaW5nKHRoaXMuc3BhY2VCZWxvdykpO2lmKCIiIT09dGhpcy50ZXh0SW5kZW50KXtlLnRleHRJbmRlbnQ9bWVhc3VyZVRvU3RyaW5nKHRoaXMudGV4dEluZGVudCk7Zml4VGV4dEluZGVudChlKX10aGlzLmxpbmVIZWlnaHQ+MCYmKGUubGluZUhlaWdodD1tZWFzdXJlVG9TdHJpbmcodGhpcy5saW5lSGVpZ2h0KSk7IiIhPT10aGlzLnRhYkRlZmF1bHQmJihlLnRhYlNpemU9bWVhc3VyZVRvU3RyaW5nKHRoaXMudGFiRGVmYXVsdCkpO3RoaXMudGFiU3RvcHMubGVuZ3RoO3RoaXMuaHlwaGVuYXRhdGlvbiYmT2JqZWN0LmFzc2lnbihlLHRoaXMuaHlwaGVuYXRhdGlvbltybl0oKSk7cmV0dXJuIGV9fWNsYXNzIFBhc3N3b3JkRWRpdCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwicGFzc3dvcmRFZGl0IiwhMCk7dGhpcy5oU2Nyb2xsUG9saWN5PWdldFN0cmluZ09wdGlvbihlLmhTY3JvbGxQb2xpY3ksWyJhdXRvIiwib2ZmIiwib24iXSk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnBhc3N3b3JkQ2hhcj1lLnBhc3N3b3JkQ2hhcnx8IioiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmJvcmRlcj1udWxsO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5tYXJnaW49bnVsbH19Y2xhc3MgdGVtcGxhdGVfUGF0dGVybiBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwicGF0dGVybiIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy50eXBlPWdldFN0cmluZ09wdGlvbihlLnR5cGUsWyJjcm9zc0hhdGNoIiwiY3Jvc3NEaWFnb25hbCIsImRpYWdvbmFsTGVmdCIsImRpYWdvbmFsUmlnaHQiLCJob3Jpem9udGFsIiwidmVydGljYWwiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuY29sb3I9bnVsbDt0aGlzLmV4dHJhcz1udWxsfVtybl0oZSl7ZT1lP2Vbcm5dKCk6IiNGRkZGRkYiO2NvbnN0IHQ9dGhpcy5jb2xvcj90aGlzLmNvbG9yW3JuXSgpOiIjMDAwMDAwIixpPSJyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50IixhPWAke2V9LCR7ZX0gNXB4LCR7dH0gNXB4LCR7dH0gMTBweGA7c3dpdGNoKHRoaXMudHlwZSl7Y2FzZSJjcm9zc0hhdGNoIjpyZXR1cm5gJHtpfSh0byB0b3AsJHthfSkgJHtpfSh0byByaWdodCwke2F9KWA7Y2FzZSJjcm9zc0RpYWdvbmFsIjpyZXR1cm5gJHtpfSg0NWRlZywke2F9KSAke2l9KC00NWRlZywke2F9KWA7Y2FzZSJkaWFnb25hbExlZnQiOnJldHVybmAke2l9KDQ1ZGVnLCR7YX0pYDtjYXNlImRpYWdvbmFsUmlnaHQiOnJldHVybmAke2l9KC00NWRlZywke2F9KWA7Y2FzZSJob3Jpem9udGFsIjpyZXR1cm5gJHtpfSh0byB0b3AsJHthfSlgO2Nhc2UidmVydGljYWwiOnJldHVybmAke2l9KHRvIHJpZ2h0LCR7YX0pYH1yZXR1cm4iIn19Y2xhc3MgUGljdHVyZSBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwicGljdHVyZSIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBQcm90byBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwicHJvdG8iLCEwKTt0aGlzLmFwcGVhcmFuY2VGaWx0ZXI9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuYXJjPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmFyZWE9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuYXNzaXN0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmJhcmNvZGU9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuYmluZEl0ZW1zPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmJvb2tlbmQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuYm9vbGVhbj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5ib3JkZXI9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuYnJlYWs9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuYnJlYWtBZnRlcj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5icmVha0JlZm9yZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5idXR0b249bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuY2FsY3VsYXRlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmNhcHRpb249bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuY2VydGlmaWNhdGU9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuY2VydGlmaWNhdGVzPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmNoZWNrQnV0dG9uPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmNob2ljZUxpc3Q9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuY29sb3I9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuY29tYj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5jb25uZWN0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmNvbnRlbnRBcmVhPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmNvcm5lcj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kYXRlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRhdGVUaW1lPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRhdGVUaW1lRWRpdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kZWNpbWFsPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRlZmF1bHRVaT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kZXNjPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRpZ2VzdE1ldGhvZD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5kaWdlc3RNZXRob2RzPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRyYXc9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZWRnZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5lbmNvZGluZz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5lbmNvZGluZ3M9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZW5jcnlwdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5lbmNyeXB0RGF0YT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5lbmNyeXB0aW9uPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmVuY3J5cHRpb25NZXRob2Q9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZW5jcnlwdGlvbk1ldGhvZHM9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZXZlbnQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZXhEYXRhPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmV4T2JqZWN0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmV4Y2xHcm91cD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5leGVjdXRlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmV4dHJhcz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5maWVsZD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5maWxsPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmZpbHRlcj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5mbG9hdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5mb250PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmZvcm1hdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5oYW5kbGVyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmh5cGhlbmF0aW9uPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmltYWdlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmltYWdlRWRpdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5pbnRlZ2VyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmlzc3VlcnM9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuaXRlbXM9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMua2VlcD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5rZXlVc2FnZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5saW5lPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmxpbmVhcj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5sb2NrRG9jdW1lbnQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMubWFuaWZlc3Q9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMubWFyZ2luPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLm1kcD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5tZWRpdW09bmV3IFhGQU9iamVjdEFycmF5O3RoaXMubWVzc2FnZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5udW1lcmljRWRpdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5vY2N1cj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5vaWQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMub2lkcz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5vdmVyZmxvdz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5wYWdlQXJlYT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5wYWdlU2V0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnBhcmE9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMucGFzc3dvcmRFZGl0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnBhdHRlcm49bmV3IFhGQU9iamVjdEFycmF5O3RoaXMucGljdHVyZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5yYWRpYWw9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMucmVhc29uPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnJlYXNvbnM9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMucmVjdGFuZ2xlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnJlZj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5zY3JpcHQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc2V0UHJvcGVydHk9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc2lnbkRhdGE9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc2lnbmF0dXJlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnNpZ25pbmc9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc29saWQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3BlYWs9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3RpcHBsZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5zdWJmb3JtPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnN1YmZvcm1TZXQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3ViamVjdEROPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnN1YmplY3RETnM9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3VibWl0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnRleHQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudGV4dEVkaXQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudGltZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy50aW1lU3RhbXA9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudG9vbFRpcD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy50cmF2ZXJzYWw9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudHJhdmVyc2U9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudWk9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudmFsaWRhdGU9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudmFsdWU9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudmFyaWFibGVzPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgUmFkaWFsIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJyYWRpYWwiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudHlwZT1nZXRTdHJpbmdPcHRpb24oZS50eXBlLFsidG9FZGdlIiwidG9DZW50ZXIiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuY29sb3I9bnVsbDt0aGlzLmV4dHJhcz1udWxsfVtybl0oZSl7ZT1lP2Vbcm5dKCk6IiNGRkZGRkYiO2NvbnN0IHQ9dGhpcy5jb2xvcj90aGlzLmNvbG9yW3JuXSgpOiIjMDAwMDAwIjtyZXR1cm5gcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCBjZW50ZXIsICR7InRvRWRnZSI9PT10aGlzLnR5cGU/YCR7ZX0sJHt0fWA6YCR7dH0sJHtlfWB9KWB9fWNsYXNzIFJlYXNvbiBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwicmVhc29uIik7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIFJlYXNvbnMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sInJlYXNvbnMiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudHlwZT1nZXRTdHJpbmdPcHRpb24oZS50eXBlLFsib3B0aW9uYWwiLCJyZXF1aXJlZCJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5yZWFzb249bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBSZWN0YW5nbGUgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sInJlY3RhbmdsZSIsITApO3RoaXMuaGFuZD1nZXRTdHJpbmdPcHRpb24oZS5oYW5kLFsiZXZlbiIsImxlZnQiLCJyaWdodCJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmNvcm5lcj1uZXcgWEZBT2JqZWN0QXJyYXkoNCk7dGhpcy5lZGdlPW5ldyBYRkFPYmplY3RBcnJheSg0KTt0aGlzLmZpbGw9bnVsbH1bYW5dKCl7Y29uc3QgZT10aGlzLmVkZ2UuY2hpbGRyZW4ubGVuZ3RoP3RoaXMuZWRnZS5jaGlsZHJlblswXTpuZXcgRWRnZSh7fSksdD1lW3JuXSgpLGk9T2JqZWN0LmNyZWF0ZShudWxsKTsidmlzaWJsZSI9PT10aGlzLmZpbGw/LnByZXNlbmNlP09iamVjdC5hc3NpZ24oaSx0aGlzLmZpbGxbcm5dKCkpOmkuZmlsbD0idHJhbnNwYXJlbnQiO2kuc3Ryb2tlV2lkdGg9bWVhc3VyZVRvU3RyaW5nKCJ2aXNpYmxlIj09PWUucHJlc2VuY2U/ZS50aGlja25lc3M6MCk7aS5zdHJva2U9dC5jb2xvcjtjb25zdCBhPSh0aGlzLmNvcm5lci5jaGlsZHJlbi5sZW5ndGg/dGhpcy5jb3JuZXIuY2hpbGRyZW5bMF06bmV3IENvcm5lcih7fSkpW3JuXSgpLHM9e25hbWU6InN2ZyIsY2hpbGRyZW46W3tuYW1lOiJyZWN0IixhdHRyaWJ1dGVzOnt4bWxuczpIbix3aWR0aDoiMTAwJSIsaGVpZ2h0OiIxMDAlIix4OjAseTowLHJ4OmEucmFkaXVzLHJ5OmEucmFkaXVzLHN0eWxlOml9fV0sYXR0cmlidXRlczp7eG1sbnM6SG4sc3R5bGU6e292ZXJmbG93OiJ2aXNpYmxlIn0sd2lkdGg6IjEwMCUiLGhlaWdodDoiMTAwJSJ9fTtpZihoYXNNYXJnaW4odGhpc1twcl0oKVtwcl0oKSkpcmV0dXJuIEhUTUxSZXN1bHQuc3VjY2Vzcyh7bmFtZToiZGl2IixhdHRyaWJ1dGVzOntzdHlsZTp7ZGlzcGxheToiaW5saW5lIix3aWR0aDoiMTAwJSIsaGVpZ2h0OiIxMDAlIn19LGNoaWxkcmVuOltzXX0pO3MuYXR0cmlidXRlcy5zdHlsZS5wb3NpdGlvbj0iYWJzb2x1dGUiO3JldHVybiBIVE1MUmVzdWx0LnN1Y2Nlc3Mocyl9fWNsYXNzIFJlZkVsZW1lbnQgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sInJlZiIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBTY3JpcHQgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sInNjcmlwdCIpO3RoaXMuYmluZGluZz1lLmJpbmRpbmd8fCIiO3RoaXMuY29udGVudFR5cGU9ZS5jb250ZW50VHlwZXx8IiI7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnJ1bkF0PWdldFN0cmluZ09wdGlvbihlLnJ1bkF0LFsiY2xpZW50IiwiYm90aCIsInNlcnZlciJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIFNldFByb3BlcnR5IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzZXRQcm9wZXJ0eSIpO3RoaXMuY29ubmVjdGlvbj1lLmNvbm5lY3Rpb258fCIiO3RoaXMucmVmPWUucmVmfHwiIjt0aGlzLnRhcmdldD1lLnRhcmdldHx8IiJ9fWNsYXNzIFNpZ25EYXRhIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzaWduRGF0YSIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5vcGVyYXRpb249Z2V0U3RyaW5nT3B0aW9uKGUub3BlcmF0aW9uLFsic2lnbiIsImNsZWFyIiwidmVyaWZ5Il0pO3RoaXMucmVmPWUucmVmfHwiIjt0aGlzLnRhcmdldD1lLnRhcmdldHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuZmlsdGVyPW51bGw7dGhpcy5tYW5pZmVzdD1udWxsfX1jbGFzcyBTaWduYXR1cmUgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sInNpZ25hdHVyZSIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy50eXBlPWdldFN0cmluZ09wdGlvbihlLnR5cGUsWyJQREYxLjMiLCJQREYxLjYiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuYm9yZGVyPW51bGw7dGhpcy5leHRyYXM9bnVsbDt0aGlzLmZpbHRlcj1udWxsO3RoaXMubWFuaWZlc3Q9bnVsbDt0aGlzLm1hcmdpbj1udWxsfX1jbGFzcyBTaWduaW5nIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzaWduaW5nIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUudHlwZSxbIm9wdGlvbmFsIiwicmVxdWlyZWQiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuY2VydGlmaWNhdGU9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBTb2xpZCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwic29saWQiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmV4dHJhcz1udWxsfVtybl0oZSl7cmV0dXJuIGU/ZVtybl0oKToiI0ZGRkZGRiJ9fWNsYXNzIFNwZWFrIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzcGVhayIpO3RoaXMuZGlzYWJsZT1nZXRJbnRlZ2VyKHtkYXRhOmUuZGlzYWJsZSxkZWZhdWx0VmFsdWU6MCx2YWxpZGF0ZTplPT4xPT09ZX0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5wcmlvcml0eT1nZXRTdHJpbmdPcHRpb24oZS5wcmlvcml0eSxbImN1c3RvbSIsImNhcHRpb24iLCJuYW1lIiwidG9vbFRpcCJdKTt0aGlzLnJpZD1lLnJpZHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBTdGlwcGxlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzdGlwcGxlIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnJhdGU9Z2V0SW50ZWdlcih7ZGF0YTplLnJhdGUsZGVmYXVsdFZhbHVlOjUwLHZhbGlkYXRlOmU9PmU+PTAmJmU8PTEwMH0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmNvbG9yPW51bGw7dGhpcy5leHRyYXM9bnVsbH1bcm5dKGUpe2NvbnN0IHQ9dGhpcy5yYXRlLzEwMDtyZXR1cm4gVXRpbC5tYWtlSGV4Q29sb3IoTWF0aC5yb3VuZChlLnZhbHVlLnIqKDEtdCkrdGhpcy52YWx1ZS5yKnQpLE1hdGgucm91bmQoZS52YWx1ZS5nKigxLXQpK3RoaXMudmFsdWUuZyp0KSxNYXRoLnJvdW5kKGUudmFsdWUuYiooMS10KSt0aGlzLnZhbHVlLmIqdCkpfX1jbGFzcyBTdWJmb3JtIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzdWJmb3JtIiwhMCk7dGhpcy5hY2Nlc3M9Z2V0U3RyaW5nT3B0aW9uKGUuYWNjZXNzLFsib3BlbiIsIm5vbkludGVyYWN0aXZlIiwicHJvdGVjdGVkIiwicmVhZE9ubHkiXSk7dGhpcy5hbGxvd01hY3JvPWdldEludGVnZXIoe2RhdGE6ZS5hbGxvd01hY3JvLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfSk7dGhpcy5hbmNob3JUeXBlPWdldFN0cmluZ09wdGlvbihlLmFuY2hvclR5cGUsWyJ0b3BMZWZ0IiwiYm90dG9tQ2VudGVyIiwiYm90dG9tTGVmdCIsImJvdHRvbVJpZ2h0IiwibWlkZGxlQ2VudGVyIiwibWlkZGxlTGVmdCIsIm1pZGRsZVJpZ2h0IiwidG9wQ2VudGVyIiwidG9wUmlnaHQiXSk7dGhpcy5jb2xTcGFuPWdldEludGVnZXIoe2RhdGE6ZS5jb2xTcGFuLGRlZmF1bHRWYWx1ZToxLHZhbGlkYXRlOmU9PmU+PTF8fC0xPT09ZX0pO3RoaXMuY29sdW1uV2lkdGhzPShlLmNvbHVtbldpZHRoc3x8IiIpLnRyaW0oKS5zcGxpdCgvXHMrLykubWFwKChlPT4iLTEiPT09ZT8tMTpnZXRNZWFzdXJlbWVudChlKSkpO3RoaXMuaD1lLmg/Z2V0TWVhc3VyZW1lbnQoZS5oKToiIjt0aGlzLmhBbGlnbj1nZXRTdHJpbmdPcHRpb24oZS5oQWxpZ24sWyJsZWZ0IiwiY2VudGVyIiwianVzdGlmeSIsImp1c3RpZnlBbGwiLCJyYWRpeCIsInJpZ2h0Il0pO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5sYXlvdXQ9Z2V0U3RyaW5nT3B0aW9uKGUubGF5b3V0LFsicG9zaXRpb24iLCJsci10YiIsInJsLXJvdyIsInJsLXRiIiwicm93IiwidGFibGUiLCJ0YiJdKTt0aGlzLmxvY2FsZT1lLmxvY2FsZXx8IiI7dGhpcy5tYXhIPWdldE1lYXN1cmVtZW50KGUubWF4SCwiMHB0Iik7dGhpcy5tYXhXPWdldE1lYXN1cmVtZW50KGUubWF4VywiMHB0Iik7dGhpcy5tZXJnZU1vZGU9Z2V0U3RyaW5nT3B0aW9uKGUubWVyZ2VNb2RlLFsiY29uc3VtZURhdGEiLCJtYXRjaFRlbXBsYXRlIl0pO3RoaXMubWluSD1nZXRNZWFzdXJlbWVudChlLm1pbkgsIjBwdCIpO3RoaXMubWluVz1nZXRNZWFzdXJlbWVudChlLm1pblcsIjBwdCIpO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucHJlc2VuY2U9Z2V0U3RyaW5nT3B0aW9uKGUucHJlc2VuY2UsWyJ2aXNpYmxlIiwiaGlkZGVuIiwiaW5hY3RpdmUiLCJpbnZpc2libGUiXSk7dGhpcy5yZWxldmFudD1nZXRSZWxldmFudChlLnJlbGV2YW50KTt0aGlzLnJlc3RvcmVTdGF0ZT1nZXRTdHJpbmdPcHRpb24oZS5yZXN0b3JlU3RhdGUsWyJtYW51YWwiLCJhdXRvIl0pO3RoaXMuc2NvcGU9Z2V0U3RyaW5nT3B0aW9uKGUuc2NvcGUsWyJuYW1lIiwibm9uZSJdKTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy53PWUudz9nZXRNZWFzdXJlbWVudChlLncpOiIiO3RoaXMueD1nZXRNZWFzdXJlbWVudChlLngsIjBwdCIpO3RoaXMueT1nZXRNZWFzdXJlbWVudChlLnksIjBwdCIpO3RoaXMuYXNzaXN0PW51bGw7dGhpcy5iaW5kPW51bGw7dGhpcy5ib29rZW5kPW51bGw7dGhpcy5ib3JkZXI9bnVsbDt0aGlzLmJyZWFrPW51bGw7dGhpcy5jYWxjdWxhdGU9bnVsbDt0aGlzLmRlc2M9bnVsbDt0aGlzLmV4dHJhcz1udWxsO3RoaXMua2VlcD1udWxsO3RoaXMubWFyZ2luPW51bGw7dGhpcy5vY2N1cj1udWxsO3RoaXMub3ZlcmZsb3c9bnVsbDt0aGlzLnBhZ2VTZXQ9bnVsbDt0aGlzLnBhcmE9bnVsbDt0aGlzLnRyYXZlcnNhbD1udWxsO3RoaXMudmFsaWRhdGU9bnVsbDt0aGlzLnZhcmlhYmxlcz1udWxsO3RoaXMuYXJlYT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5icmVha0FmdGVyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmJyZWFrQmVmb3JlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmNvbm5lY3Q9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZHJhdz1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5ldmVudD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5leE9iamVjdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5leGNsR3JvdXA9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZmllbGQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMucHJvdG89bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc2V0UHJvcGVydHk9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3ViZm9ybT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5zdWJmb3JtU2V0PW5ldyBYRkFPYmplY3RBcnJheX1bZnJdKCl7Y29uc3QgZT10aGlzW3ByXSgpO3JldHVybiBlIGluc3RhbmNlb2YgU3ViZm9ybVNldD9lW2ZyXSgpOmV9W2tyXSgpe3JldHVybiEwfVtNcl0oKXtyZXR1cm4gdGhpcy5sYXlvdXQuZW5kc1dpdGgoIi10YiIpJiYwPT09dGhpc1thcl0uYXR0ZW1wdCYmdGhpc1thcl0ubnVtYmVySW5MaW5lPjB8fHRoaXNbcHJdKClbTXJdKCl9Klt1cl0oKXt5aWVsZCpnZXRDb250YWluZWRDaGlsZHJlbih0aGlzKX1bcnJdKCl7cmV0dXJuIGZsdXNoSFRNTCh0aGlzKX1bWHNdKGUsdCl7YWRkSFRNTCh0aGlzLGUsdCl9W2dyXSgpe3JldHVybiBnZXRBdmFpbGFibGVTcGFjZSh0aGlzKX1beHJdKCl7Y29uc3QgZT10aGlzW2ZyXSgpO2lmKCFlW3hyXSgpKXJldHVybiExO2lmKHZvaWQgMCE9PXRoaXNbYXJdLl9pc1NwbGl0dGFibGUpcmV0dXJuIHRoaXNbYXJdLl9pc1NwbGl0dGFibGU7aWYoInBvc2l0aW9uIj09PXRoaXMubGF5b3V0fHx0aGlzLmxheW91dC5pbmNsdWRlcygicm93Iikpe3RoaXNbYXJdLl9pc1NwbGl0dGFibGU9ITE7cmV0dXJuITF9aWYodGhpcy5rZWVwJiYibm9uZSIhPT10aGlzLmtlZXAuaW50YWN0KXt0aGlzW2FyXS5faXNTcGxpdHRhYmxlPSExO3JldHVybiExfWlmKGUubGF5b3V0Py5lbmRzV2l0aCgiLXRiIikmJjAhPT1lW2FyXS5udW1iZXJJbkxpbmUpcmV0dXJuITE7dGhpc1thcl0uX2lzU3BsaXR0YWJsZT0hMDtyZXR1cm4hMH1bYW5dKGUpe3NldFRhYkluZGV4KHRoaXMpO2lmKHRoaXMuYnJlYWspe2lmKCJhdXRvIiE9PXRoaXMuYnJlYWsuYWZ0ZXJ8fCIiIT09dGhpcy5icmVhay5hZnRlclRhcmdldCl7Y29uc3QgZT1uZXcgQnJlYWtBZnRlcih7dGFyZ2V0VHlwZTp0aGlzLmJyZWFrLmFmdGVyLHRhcmdldDp0aGlzLmJyZWFrLmFmdGVyVGFyZ2V0LHN0YXJ0TmV3OnRoaXMuYnJlYWsuc3RhcnROZXcudG9TdHJpbmcoKX0pO2VbeXJdPXRoaXNbeXJdO3RoaXNbanNdKGUpO3RoaXMuYnJlYWtBZnRlci5wdXNoKGUpfWlmKCJhdXRvIiE9PXRoaXMuYnJlYWsuYmVmb3JlfHwiIiE9PXRoaXMuYnJlYWsuYmVmb3JlVGFyZ2V0KXtjb25zdCBlPW5ldyBCcmVha0JlZm9yZSh7dGFyZ2V0VHlwZTp0aGlzLmJyZWFrLmJlZm9yZSx0YXJnZXQ6dGhpcy5icmVhay5iZWZvcmVUYXJnZXQsc3RhcnROZXc6dGhpcy5icmVhay5zdGFydE5ldy50b1N0cmluZygpfSk7ZVt5cl09dGhpc1t5cl07dGhpc1tqc10oZSk7dGhpcy5icmVha0JlZm9yZS5wdXNoKGUpfWlmKCIiIT09dGhpcy5icmVhay5vdmVyZmxvd1RhcmdldCl7Y29uc3QgZT1uZXcgT3ZlcmZsb3coe3RhcmdldDp0aGlzLmJyZWFrLm92ZXJmbG93VGFyZ2V0LGxlYWRlcjp0aGlzLmJyZWFrLm92ZXJmbG93TGVhZGVyLHRyYWlsZXI6dGhpcy5icmVhay5vdmVyZmxvd1RyYWlsZXJ9KTtlW3lyXT10aGlzW3lyXTt0aGlzW2pzXShlKTt0aGlzLm92ZXJmbG93LnB1c2goZSl9dGhpc1tYcl0odGhpcy5icmVhayk7dGhpcy5icmVhaz1udWxsfWlmKCJoaWRkZW4iPT09dGhpcy5wcmVzZW5jZXx8ImluYWN0aXZlIj09PXRoaXMucHJlc2VuY2UpcmV0dXJuIEhUTUxSZXN1bHQuRU1QVFk7KHRoaXMuYnJlYWtCZWZvcmUuY2hpbGRyZW4ubGVuZ3RoPjF8fHRoaXMuYnJlYWtBZnRlci5jaGlsZHJlbi5sZW5ndGg+MSkmJndhcm4oIlhGQSAtIFNldmVyYWwgYnJlYWtCZWZvcmUgb3IgYnJlYWtBZnRlciBpbiBzdWJmb3JtczogcGxlYXNlIGZpbGUgYSBidWcuIik7aWYodGhpcy5icmVha0JlZm9yZS5jaGlsZHJlbi5sZW5ndGg+PTEpe2NvbnN0IGU9dGhpcy5icmVha0JlZm9yZS5jaGlsZHJlblswXTtpZihoYW5kbGVCcmVhayhlKSlyZXR1cm4gSFRNTFJlc3VsdC5icmVha05vZGUoZSl9aWYodGhpc1thcl0/LmFmdGVyQnJlYWtBZnRlcilyZXR1cm4gSFRNTFJlc3VsdC5FTVBUWTtmaXhEaW1lbnNpb25zKHRoaXMpO2NvbnN0IHQ9W10saT17aWQ6dGhpc1tubl0sY2xhc3M6W119O3NldEFjY2Vzcyh0aGlzLGkuY2xhc3MpO3RoaXNbYXJdfHwodGhpc1thcl09T2JqZWN0LmNyZWF0ZShudWxsKSk7T2JqZWN0LmFzc2lnbih0aGlzW2FyXSx7Y2hpbGRyZW46dCxsaW5lOm51bGwsYXR0cmlidXRlczppLGF0dGVtcHQ6MCxudW1iZXJJbkxpbmU6MCxhdmFpbGFibGVTcGFjZTp7d2lkdGg6TWF0aC5taW4odGhpcy53fHwxLzAsZS53aWR0aCksaGVpZ2h0Ok1hdGgubWluKHRoaXMuaHx8MS8wLGUuaGVpZ2h0KX0sd2lkdGg6MCxoZWlnaHQ6MCxwcmV2SGVpZ2h0OjAsY3VycmVudFdpZHRoOjB9KTtjb25zdCBhPXRoaXNbbXJdKCkscz1hW2FyXS5ub0xheW91dEZhaWx1cmUscj10aGlzW3hyXSgpO3J8fHNldEZpcnN0VW5zcGxpdHRhYmxlKHRoaXMpO2lmKCFjaGVja0RpbWVuc2lvbnModGhpcyxlKSlyZXR1cm4gSFRNTFJlc3VsdC5GQUlMVVJFO2NvbnN0IG49bmV3IFNldChbImFyZWEiLCJkcmF3IiwiZXhjbEdyb3VwIiwiZmllbGQiLCJzdWJmb3JtIiwic3ViZm9ybVNldCJdKTtpZih0aGlzLmxheW91dC5pbmNsdWRlcygicm93Iikpe2NvbnN0IGU9dGhpc1tmcl0oKS5jb2x1bW5XaWR0aHM7aWYoQXJyYXkuaXNBcnJheShlKSYmZS5sZW5ndGg+MCl7dGhpc1thcl0uY29sdW1uV2lkdGhzPWU7dGhpc1thcl0uY3VycmVudENvbHVtbj0wfX1jb25zdCBvPXRvU3R5bGUodGhpcywiYW5jaG9yVHlwZSIsImRpbWVuc2lvbnMiLCJwb3NpdGlvbiIsInByZXNlbmNlIiwiYm9yZGVyIiwibWFyZ2luIiwiaEFsaWduIiksZz1bInhmYVN1YmZvcm0iXSxjPWxheW91dENsYXNzKHRoaXMpO2MmJmcucHVzaChjKTtpLnN0eWxlPW87aS5jbGFzcz1nO3RoaXMubmFtZSYmKGkueGZhTmFtZT10aGlzLm5hbWUpO2lmKHRoaXMub3ZlcmZsb3cpe2NvbnN0IHQ9dGhpcy5vdmVyZmxvd1tDcl0oKTtpZih0LmFkZExlYWRlcil7dC5hZGRMZWFkZXI9ITE7aGFuZGxlT3ZlcmZsb3codGhpcyx0LmxlYWRlcixlKX19dGhpc1tXcl0oKTtjb25zdCBoPSJsci10YiI9PT10aGlzLmxheW91dHx8InJsLXRiIj09PXRoaXMubGF5b3V0LGw9aD8yOjE7Zm9yKDt0aGlzW2FyXS5hdHRlbXB0PGw7dGhpc1thcl0uYXR0ZW1wdCsrKXtoJiYxPT09dGhpc1thcl0uYXR0ZW1wdCYmKHRoaXNbYXJdLm51bWJlckluTGluZT0wKTtjb25zdCBlPXRoaXNbWnNdKHtmaWx0ZXI6bixpbmNsdWRlOiEwfSk7aWYoZS5zdWNjZXNzKWJyZWFrO2lmKGUuaXNCcmVhaygpKXt0aGlzW1ByXSgpO3JldHVybiBlfWlmKGgmJjA9PT10aGlzW2FyXS5hdHRlbXB0JiYwPT09dGhpc1thcl0ubnVtYmVySW5MaW5lJiYhYVthcl0ubm9MYXlvdXRGYWlsdXJlKXt0aGlzW2FyXS5hdHRlbXB0PWw7YnJlYWt9fXRoaXNbUHJdKCk7cnx8dW5zZXRGaXJzdFVuc3BsaXR0YWJsZSh0aGlzKTthW2FyXS5ub0xheW91dEZhaWx1cmU9cztpZih0aGlzW2FyXS5hdHRlbXB0PT09bCl7dGhpcy5vdmVyZmxvdyYmKHRoaXNbbXJdKClbYXJdLm92ZXJmbG93Tm9kZT10aGlzLm92ZXJmbG93KTtyfHxkZWxldGUgdGhpc1thcl07cmV0dXJuIEhUTUxSZXN1bHQuRkFJTFVSRX1pZih0aGlzLm92ZXJmbG93KXtjb25zdCB0PXRoaXMub3ZlcmZsb3dbQ3JdKCk7aWYodC5hZGRUcmFpbGVyKXt0LmFkZFRyYWlsZXI9ITE7aGFuZGxlT3ZlcmZsb3codGhpcyx0LnRyYWlsZXIsZSl9fWxldCBDPTAsUT0wO2lmKHRoaXMubWFyZ2luKXtDPXRoaXMubWFyZ2luLmxlZnRJbnNldCt0aGlzLm1hcmdpbi5yaWdodEluc2V0O1E9dGhpcy5tYXJnaW4udG9wSW5zZXQrdGhpcy5tYXJnaW4uYm90dG9tSW5zZXR9Y29uc3QgRT1NYXRoLm1heCh0aGlzW2FyXS53aWR0aCtDLHRoaXMud3x8MCksdT1NYXRoLm1heCh0aGlzW2FyXS5oZWlnaHQrUSx0aGlzLmh8fDApLGQ9W3RoaXMueCx0aGlzLnksRSx1XTsiIj09PXRoaXMudyYmKG8ud2lkdGg9bWVhc3VyZVRvU3RyaW5nKEUpKTsiIj09PXRoaXMuaCYmKG8uaGVpZ2h0PW1lYXN1cmVUb1N0cmluZyh1KSk7aWYoKCIwcHgiPT09by53aWR0aHx8IjBweCI9PT1vLmhlaWdodCkmJjA9PT10Lmxlbmd0aClyZXR1cm4gSFRNTFJlc3VsdC5FTVBUWTtjb25zdCBmPXtuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6aSxjaGlsZHJlbjp0fTthcHBseUFzc2lzdCh0aGlzLGkpO2NvbnN0IHA9SFRNTFJlc3VsdC5zdWNjZXNzKGNyZWF0ZVdyYXBwZXIodGhpcyxmKSxkKTtpZih0aGlzLmJyZWFrQWZ0ZXIuY2hpbGRyZW4ubGVuZ3RoPj0xKXtjb25zdCBlPXRoaXMuYnJlYWtBZnRlci5jaGlsZHJlblswXTtpZihoYW5kbGVCcmVhayhlKSl7dGhpc1thcl0uYWZ0ZXJCcmVha0FmdGVyPXA7cmV0dXJuIEhUTUxSZXN1bHQuYnJlYWtOb2RlKGUpfX1kZWxldGUgdGhpc1thcl07cmV0dXJuIHB9fWNsYXNzIFN1YmZvcm1TZXQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sInN1YmZvcm1TZXQiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucmVsYXRpb249Z2V0U3RyaW5nT3B0aW9uKGUucmVsYXRpb24sWyJvcmRlcmVkIiwiY2hvaWNlIiwidW5vcmRlcmVkIl0pO3RoaXMucmVsZXZhbnQ9Z2V0UmVsZXZhbnQoZS5yZWxldmFudCk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuYm9va2VuZD1udWxsO3RoaXMuYnJlYWs9bnVsbDt0aGlzLmRlc2M9bnVsbDt0aGlzLmV4dHJhcz1udWxsO3RoaXMub2NjdXI9bnVsbDt0aGlzLm92ZXJmbG93PW51bGw7dGhpcy5icmVha0FmdGVyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmJyZWFrQmVmb3JlPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnN1YmZvcm09bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3ViZm9ybVNldD1uZXcgWEZBT2JqZWN0QXJyYXl9Klt1cl0oKXt5aWVsZCpnZXRDb250YWluZWRDaGlsZHJlbih0aGlzKX1bZnJdKCl7bGV0IGU9dGhpc1twcl0oKTtmb3IoOyEoZSBpbnN0YW5jZW9mIFN1YmZvcm0pOyllPWVbcHJdKCk7cmV0dXJuIGV9W2tyXSgpe3JldHVybiEwfX1jbGFzcyBTdWJqZWN0RE4gZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzdWJqZWN0RE4iKTt0aGlzLmRlbGltaXRlcj1lLmRlbGltaXRlcnx8IiwiO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifVtzcl0oKXt0aGlzW2VyXT1uZXcgTWFwKHRoaXNbZXJdLnNwbGl0KHRoaXMuZGVsaW1pdGVyKS5tYXAoKGU9PnsoZT1lLnNwbGl0KCI9IiwyKSlbMF09ZVswXS50cmltKCk7cmV0dXJuIGV9KSkpfX1jbGFzcyBTdWJqZWN0RE5zIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzdWJqZWN0RE5zIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnR5cGU9Z2V0U3RyaW5nT3B0aW9uKGUudHlwZSxbIm9wdGlvbmFsIiwicmVxdWlyZWQiXSk7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIiO3RoaXMuc3ViamVjdEROPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgU3VibWl0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJzdWJtaXQiLCEwKTt0aGlzLmVtYmVkUERGPWdldEludGVnZXIoe2RhdGE6ZS5lbWJlZFBERixkZWZhdWx0VmFsdWU6MCx2YWxpZGF0ZTplPT4xPT09ZX0pO3RoaXMuZm9ybWF0PWdldFN0cmluZ09wdGlvbihlLmZvcm1hdCxbInhkcCIsImZvcm1kYXRhIiwicGRmIiwidXJsZW5jb2RlZCIsInhmZCIsInhtbCJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudGFyZ2V0PWUudGFyZ2V0fHwiIjt0aGlzLnRleHRFbmNvZGluZz1nZXRLZXl3b3JkKHtkYXRhOmUudGV4dEVuY29kaW5nP2UudGV4dEVuY29kaW5nLnRvTG93ZXJDYXNlKCk6IiIsZGVmYXVsdFZhbHVlOiIiLHZhbGlkYXRlOmU9PlsidXRmLTgiLCJiaWctZml2ZSIsImZvbnRzcGVjaWZpYyIsImdiayIsImdiLTE4MDMwIiwiZ2ItMjMxMiIsImtzYy01NjAxIiwibm9uZSIsInNoaWZ0LWppcyIsInVjcy0yIiwidXRmLTE2Il0uaW5jbHVkZXMoZSl8fGUubWF0Y2goL2lzby04ODU5LVxkezJ9Lyl9KTt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy54ZHBDb250ZW50PWUueGRwQ29udGVudHx8IiI7dGhpcy5lbmNyeXB0PW51bGw7dGhpcy5lbmNyeXB0RGF0YT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5zaWduRGF0YT1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIFRlbXBsYXRlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJ0ZW1wbGF0ZSIsITApO3RoaXMuYmFzZVByb2ZpbGU9Z2V0U3RyaW5nT3B0aW9uKGUuYmFzZVByb2ZpbGUsWyJmdWxsIiwiaW50ZXJhY3RpdmVGb3JtcyJdKTt0aGlzLmV4dHJhcz1udWxsO3RoaXMuc3ViZm9ybT1uZXcgWEZBT2JqZWN0QXJyYXl9W3NyXSgpezA9PT10aGlzLnN1YmZvcm0uY2hpbGRyZW4ubGVuZ3RoJiZ3YXJuKCJYRkEgLSBObyBzdWJmb3JtcyBpbiB0ZW1wbGF0ZSBub2RlLiIpO3RoaXMuc3ViZm9ybS5jaGlsZHJlbi5sZW5ndGg+PTImJndhcm4oIlhGQSAtIFNldmVyYWwgc3ViZm9ybXMgaW4gdGVtcGxhdGUgbm9kZTogcGxlYXNlIGZpbGUgYSBidWcuIik7dGhpc1tBbl09NWUzfVt4cl0oKXtyZXR1cm4hMH1bVnJdKGUsdCl7cmV0dXJuIGUuc3RhcnRzV2l0aCgiIyIpP1t0aGlzW2JyXS5nZXQoZS5zbGljZSgxKSldOnNlYXJjaE5vZGUodGhpcyx0LGUsITAsITApfSpbdG5dKCl7aWYoIXRoaXMuc3ViZm9ybS5jaGlsZHJlbi5sZW5ndGgpcmV0dXJuIEhUTUxSZXN1bHQuc3VjY2Vzcyh7bmFtZToiZGl2IixjaGlsZHJlbjpbXX0pO3RoaXNbYXJdPXtvdmVyZmxvd05vZGU6bnVsbCxmaXJzdFVuc3BsaXR0YWJsZTpudWxsLGN1cnJlbnRDb250ZW50QXJlYTpudWxsLGN1cnJlbnRQYWdlQXJlYTpudWxsLG5vTGF5b3V0RmFpbHVyZTohMSxwYWdlTnVtYmVyOjEscGFnZVBvc2l0aW9uOiJmaXJzdCIsb2RkT3JFdmVuOiJvZGQiLGJsYW5rT3JOb3RCbGFuazoibm9uQmxhbmsiLHBhcmFTdGFjazpbXX07Y29uc3QgZT10aGlzLnN1YmZvcm0uY2hpbGRyZW5bMF07ZS5wYWdlU2V0W3pzXSgpO2NvbnN0IHQ9ZS5wYWdlU2V0LnBhZ2VBcmVhLmNoaWxkcmVuLGk9e25hbWU6ImRpdiIsY2hpbGRyZW46W119O2xldCBhPW51bGwscz1udWxsLHI9bnVsbDtpZihlLmJyZWFrQmVmb3JlLmNoaWxkcmVuLmxlbmd0aD49MSl7cz1lLmJyZWFrQmVmb3JlLmNoaWxkcmVuWzBdO3I9cy50YXJnZXR9ZWxzZSBpZihlLnN1YmZvcm0uY2hpbGRyZW4ubGVuZ3RoPj0xJiZlLnN1YmZvcm0uY2hpbGRyZW5bMF0uYnJlYWtCZWZvcmUuY2hpbGRyZW4ubGVuZ3RoPj0xKXtzPWUuc3ViZm9ybS5jaGlsZHJlblswXS5icmVha0JlZm9yZS5jaGlsZHJlblswXTtyPXMudGFyZ2V0fWVsc2UgaWYoZS5icmVhaz8uYmVmb3JlVGFyZ2V0KXtzPWUuYnJlYWs7cj1zLmJlZm9yZVRhcmdldH1lbHNlIGlmKGUuc3ViZm9ybS5jaGlsZHJlbi5sZW5ndGg+PTEmJmUuc3ViZm9ybS5jaGlsZHJlblswXS5icmVhaz8uYmVmb3JlVGFyZ2V0KXtzPWUuc3ViZm9ybS5jaGlsZHJlblswXS5icmVhaztyPXMuYmVmb3JlVGFyZ2V0fWlmKHMpe2NvbnN0IGU9dGhpc1tWcl0ocixzW3ByXSgpKTtpZihlIGluc3RhbmNlb2YgUGFnZUFyZWEpe2E9ZTtzW2FyXT17fX19YXx8KGE9dFswXSk7YVthcl09e251bWJlck9mVXNlOjF9O2NvbnN0IG49YVtwcl0oKTtuW2FyXT17bnVtYmVyT2ZVc2U6MSxwYWdlSW5kZXg6bi5wYWdlQXJlYS5jaGlsZHJlbi5pbmRleE9mKGEpLHBhZ2VTZXRJbmRleDowfTtsZXQgbyxnPW51bGwsYz1udWxsLGg9ITAsbD0wLEM9MDtmb3IoOzspe2lmKGgpbD0wO2Vsc2V7aS5jaGlsZHJlbi5wb3AoKTtpZigzPT0rK2wpe3dhcm4oIlhGQSAtIFNvbWV0aGluZyBnb2VzIHdyb25nOiBwbGVhc2UgZmlsZSBhIGJ1Zy4iKTtyZXR1cm4gaX19bz1udWxsO3RoaXNbYXJdLmN1cnJlbnRQYWdlQXJlYT1hO2NvbnN0IHQ9YVthbl0oKS5odG1sO2kuY2hpbGRyZW4ucHVzaCh0KTtpZihnKXt0aGlzW2FyXS5ub0xheW91dEZhaWx1cmU9ITA7dC5jaGlsZHJlbi5wdXNoKGdbYW5dKGFbYXJdLnNwYWNlKS5odG1sKTtnPW51bGx9aWYoYyl7dGhpc1thcl0ubm9MYXlvdXRGYWlsdXJlPSEwO3QuY2hpbGRyZW4ucHVzaChjW2FuXShhW2FyXS5zcGFjZSkuaHRtbCk7Yz1udWxsfWNvbnN0IHM9YS5jb250ZW50QXJlYS5jaGlsZHJlbixyPXQuY2hpbGRyZW4uZmlsdGVyKChlPT5lLmF0dHJpYnV0ZXMuY2xhc3MuaW5jbHVkZXMoInhmYUNvbnRlbnRhcmVhIikpKTtoPSExO3RoaXNbYXJdLmZpcnN0VW5zcGxpdHRhYmxlPW51bGw7dGhpc1thcl0ubm9MYXlvdXRGYWlsdXJlPSExO2NvbnN0IGZsdXNoPXQ9Pntjb25zdCBpPWVbcnJdKCk7aWYoaSl7aHx8PWkuY2hpbGRyZW4/Lmxlbmd0aD4wO3JbdF0uY2hpbGRyZW4ucHVzaChpKX19O2ZvcihsZXQgdD1DLGE9cy5sZW5ndGg7dDxhO3QrKyl7Y29uc3QgYT10aGlzW2FyXS5jdXJyZW50Q29udGVudEFyZWE9c1t0XSxuPXt3aWR0aDphLncsaGVpZ2h0OmEuaH07Qz0wO2lmKGcpe3JbdF0uY2hpbGRyZW4ucHVzaChnW2FuXShuKS5odG1sKTtnPW51bGx9aWYoYyl7clt0XS5jaGlsZHJlbi5wdXNoKGNbYW5dKG4pLmh0bWwpO2M9bnVsbH1jb25zdCBsPWVbYW5dKG4pO2lmKGwuc3VjY2Vzcyl7aWYobC5odG1sKXtofHw9bC5odG1sLmNoaWxkcmVuPy5sZW5ndGg+MDtyW3RdLmNoaWxkcmVuLnB1c2gobC5odG1sKX1lbHNlIWgmJmkuY2hpbGRyZW4ubGVuZ3RoPjEmJmkuY2hpbGRyZW4ucG9wKCk7cmV0dXJuIGl9aWYobC5pc0JyZWFrKCkpe2NvbnN0IGU9bC5icmVha05vZGU7Zmx1c2godCk7aWYoImF1dG8iPT09ZS50YXJnZXRUeXBlKWNvbnRpbnVlO2lmKGUubGVhZGVyKXtnPXRoaXNbVnJdKGUubGVhZGVyLGVbcHJdKCkpO2c9Zz9nWzBdOm51bGx9aWYoZS50cmFpbGVyKXtjPXRoaXNbVnJdKGUudHJhaWxlcixlW3ByXSgpKTtjPWM/Y1swXTpudWxsfWlmKCJwYWdlQXJlYSI9PT1lLnRhcmdldFR5cGUpe289ZVthcl0udGFyZ2V0O3Q9MS8wfWVsc2UgaWYoZVthcl0udGFyZ2V0KXtvPWVbYXJdLnRhcmdldDtDPWVbYXJdLmluZGV4KzE7dD0xLzB9ZWxzZSB0PWVbYXJdLmluZGV4fWVsc2UgaWYodGhpc1thcl0ub3ZlcmZsb3dOb2RlKXtjb25zdCBlPXRoaXNbYXJdLm92ZXJmbG93Tm9kZTt0aGlzW2FyXS5vdmVyZmxvd05vZGU9bnVsbDtjb25zdCBpPWVbQ3JdKCksYT1pLnRhcmdldDtpLmFkZExlYWRlcj1udWxsIT09aS5sZWFkZXI7aS5hZGRUcmFpbGVyPW51bGwhPT1pLnRyYWlsZXI7Zmx1c2godCk7Y29uc3Qgcj10O3Q9MS8wO2lmKGEgaW5zdGFuY2VvZiBQYWdlQXJlYSlvPWE7ZWxzZSBpZihhIGluc3RhbmNlb2YgQ29udGVudEFyZWEpe2NvbnN0IGU9cy5pbmRleE9mKGEpO2lmKC0xIT09ZSllPnI/dD1lLTE6Qz1lO2Vsc2V7bz1hW3ByXSgpO0M9by5jb250ZW50QXJlYS5jaGlsZHJlbi5pbmRleE9mKGEpfX19ZWxzZSBmbHVzaCh0KX10aGlzW2FyXS5wYWdlTnVtYmVyKz0xO28mJihvW0xyXSgpP29bYXJdLm51bWJlck9mVXNlKz0xOm89bnVsbCk7YT1vfHxhW2RyXSgpO3lpZWxkIG51bGx9fX1jbGFzcyBUZXh0IGV4dGVuZHMgQ29udGVudE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidGV4dCIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5tYXhDaGFycz1nZXRJbnRlZ2VyKHtkYXRhOmUubWF4Q2hhcnMsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+ZT49MH0pO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMucmlkPWUucmlkfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9W1dzXSgpe3JldHVybiEwfVtLcl0oZSl7aWYoZVtIcl09PT1nbi54aHRtbC5pZCl7dGhpc1tlcl09ZTtyZXR1cm4hMH13YXJuKGBYRkEgLSBJbnZhbGlkIGNvbnRlbnQgaW4gVGV4dDogJHtlW1lyXX0uYCk7cmV0dXJuITF9W3FyXShlKXt0aGlzW2VyXWluc3RhbmNlb2YgWEZBT2JqZWN0fHxzdXBlcltxcl0oZSl9W3NyXSgpeyJzdHJpbmciPT10eXBlb2YgdGhpc1tlcl0mJih0aGlzW2VyXT10aGlzW2VyXS5yZXBsYWNlQWxsKCJcclxuIiwiXG4iKSl9W0NyXSgpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdGhpc1tlcl0/dGhpc1tlcl0uc3BsaXQoL1tcdTIwMjlcdTIwMjhcbl0vKS5yZWR1Y2UoKChlLHQpPT57dCYmZS5wdXNoKHQpO3JldHVybiBlfSksW10pLmpvaW4oIlxuIik6dGhpc1tlcl1bZW5dKCl9W2FuXShlKXtpZigic3RyaW5nIj09dHlwZW9mIHRoaXNbZXJdKXtjb25zdCBlPXZhbHVlVG9IdG1sKHRoaXNbZXJdKS5odG1sO2lmKHRoaXNbZXJdLmluY2x1ZGVzKCJcdTIwMjkiKSl7ZS5uYW1lPSJkaXYiO2UuY2hpbGRyZW49W107dGhpc1tlcl0uc3BsaXQoIlx1MjAyOSIpLm1hcCgoZT0+ZS5zcGxpdCgvW1x1MjAyOFxuXS8pLnJlZHVjZSgoKGUsdCk9PntlLnB1c2goe25hbWU6InNwYW4iLHZhbHVlOnR9LHtuYW1lOiJiciJ9KTtyZXR1cm4gZX0pLFtdKSkpLmZvckVhY2goKHQ9PntlLmNoaWxkcmVuLnB1c2goe25hbWU6InAiLGNoaWxkcmVuOnR9KX0pKX1lbHNlIGlmKC9bXHUyMDI4XG5dLy50ZXN0KHRoaXNbZXJdKSl7ZS5uYW1lPSJkaXYiO2UuY2hpbGRyZW49W107dGhpc1tlcl0uc3BsaXQoL1tcdTIwMjhcbl0vKS5mb3JFYWNoKCh0PT57ZS5jaGlsZHJlbi5wdXNoKHtuYW1lOiJzcGFuIix2YWx1ZTp0fSx7bmFtZToiYnIifSl9KSl9cmV0dXJuIEhUTUxSZXN1bHQuc3VjY2VzcyhlKX1yZXR1cm4gdGhpc1tlcl1bYW5dKGUpfX1jbGFzcyBUZXh0RWRpdCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidGV4dEVkaXQiLCEwKTt0aGlzLmFsbG93UmljaFRleHQ9Z2V0SW50ZWdlcih7ZGF0YTplLmFsbG93UmljaFRleHQsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLmhTY3JvbGxQb2xpY3k9Z2V0U3RyaW5nT3B0aW9uKGUuaFNjcm9sbFBvbGljeSxbImF1dG8iLCJvZmYiLCJvbiJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubXVsdGlMaW5lPWdldEludGVnZXIoe2RhdGE6ZS5tdWx0aUxpbmUsZGVmYXVsdFZhbHVlOiIiLHZhbGlkYXRlOmU9PjA9PT1lfHwxPT09ZX0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLnZTY3JvbGxQb2xpY3k9Z2V0U3RyaW5nT3B0aW9uKGUudlNjcm9sbFBvbGljeSxbImF1dG8iLCJvZmYiLCJvbiJdKTt0aGlzLmJvcmRlcj1udWxsO3RoaXMuY29tYj1udWxsO3RoaXMuZXh0cmFzPW51bGw7dGhpcy5tYXJnaW49bnVsbH1bYW5dKGUpe2NvbnN0IHQ9dG9TdHlsZSh0aGlzLCJib3JkZXIiLCJmb250IiwibWFyZ2luIik7bGV0IGk7Y29uc3QgYT10aGlzW3ByXSgpW3ByXSgpOyIiPT09dGhpcy5tdWx0aUxpbmUmJih0aGlzLm11bHRpTGluZT1hIGluc3RhbmNlb2YgRHJhdz8xOjApO2k9MT09PXRoaXMubXVsdGlMaW5lP3tuYW1lOiJ0ZXh0YXJlYSIsYXR0cmlidXRlczp7ZGF0YUlkOmFbdHJdPy5bbm5dfHxhW25uXSxmaWVsZElkOmFbbm5dLGNsYXNzOlsieGZhVGV4dGZpZWxkIl0sc3R5bGU6dCwiYXJpYS1sYWJlbCI6YXJpYUxhYmVsKGEpLCJhcmlhLXJlcXVpcmVkIjohMX19OntuYW1lOiJpbnB1dCIsYXR0cmlidXRlczp7dHlwZToidGV4dCIsZGF0YUlkOmFbdHJdPy5bbm5dfHxhW25uXSxmaWVsZElkOmFbbm5dLGNsYXNzOlsieGZhVGV4dGZpZWxkIl0sc3R5bGU6dCwiYXJpYS1sYWJlbCI6YXJpYUxhYmVsKGEpLCJhcmlhLXJlcXVpcmVkIjohMX19O2lmKGlzUmVxdWlyZWQoYSkpe2kuYXR0cmlidXRlc1siYXJpYS1yZXF1aXJlZCJdPSEwO2kuYXR0cmlidXRlcy5yZXF1aXJlZD0hMH1yZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJsYWJlbCIsYXR0cmlidXRlczp7Y2xhc3M6WyJ4ZmFMYWJlbCJdfSxjaGlsZHJlbjpbaV19KX19Y2xhc3MgVGltZSBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidGltZSIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifVtzcl0oKXtjb25zdCBlPXRoaXNbZXJdLnRyaW0oKTt0aGlzW2VyXT1lP25ldyBEYXRlKGUpOm51bGx9W2FuXShlKXtyZXR1cm4gdmFsdWVUb0h0bWwodGhpc1tlcl0/dGhpc1tlcl0udG9TdHJpbmcoKToiIil9fWNsYXNzIFRpbWVTdGFtcCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidGltZVN0YW1wIik7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnNlcnZlcj1lLnNlcnZlcnx8IiI7dGhpcy50eXBlPWdldFN0cmluZ09wdGlvbihlLnR5cGUsWyJvcHRpb25hbCIsInJlcXVpcmVkIl0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgVG9vbFRpcCBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidG9vbFRpcCIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5yaWQ9ZS5yaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgVHJhdmVyc2FsIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJ0cmF2ZXJzYWwiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmV4dHJhcz1udWxsO3RoaXMudHJhdmVyc2U9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBUcmF2ZXJzZSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidHJhdmVyc2UiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMub3BlcmF0aW9uPWdldFN0cmluZ09wdGlvbihlLm9wZXJhdGlvbixbIm5leHQiLCJiYWNrIiwiZG93biIsImZpcnN0IiwibGVmdCIsInJpZ2h0IiwidXAiXSk7dGhpcy5yZWY9ZS5yZWZ8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmV4dHJhcz1udWxsO3RoaXMuc2NyaXB0PW51bGx9Z2V0IG5hbWUoKXtyZXR1cm4gdGhpcy5vcGVyYXRpb259W1VyXSgpe3JldHVybiExfX1jbGFzcyBVaSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidWkiLCEwKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmV4dHJhcz1udWxsO3RoaXMucGljdHVyZT1udWxsO3RoaXMuYmFyY29kZT1udWxsO3RoaXMuYnV0dG9uPW51bGw7dGhpcy5jaGVja0J1dHRvbj1udWxsO3RoaXMuY2hvaWNlTGlzdD1udWxsO3RoaXMuZGF0ZVRpbWVFZGl0PW51bGw7dGhpcy5kZWZhdWx0VWk9bnVsbDt0aGlzLmltYWdlRWRpdD1udWxsO3RoaXMubnVtZXJpY0VkaXQ9bnVsbDt0aGlzLnBhc3N3b3JkRWRpdD1udWxsO3RoaXMuc2lnbmF0dXJlPW51bGw7dGhpcy50ZXh0RWRpdD1udWxsfVtDcl0oKXtpZih2b2lkIDA9PT10aGlzW2FyXSl7Zm9yKGNvbnN0IGUgb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpe2lmKCJleHRyYXMiPT09ZXx8InBpY3R1cmUiPT09ZSljb250aW51ZTtjb25zdCB0PXRoaXNbZV07aWYodCBpbnN0YW5jZW9mIFhGQU9iamVjdCl7dGhpc1thcl09dDtyZXR1cm4gdH19dGhpc1thcl09bnVsbH1yZXR1cm4gdGhpc1thcl19W2FuXShlKXtjb25zdCB0PXRoaXNbQ3JdKCk7cmV0dXJuIHQ/dFthbl0oZSk6SFRNTFJlc3VsdC5FTVBUWX19Y2xhc3MgVmFsaWRhdGUgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoSm4sInZhbGlkYXRlIiwhMCk7dGhpcy5mb3JtYXRUZXN0PWdldFN0cmluZ09wdGlvbihlLmZvcm1hdFRlc3QsWyJ3YXJuaW5nIiwiZGlzYWJsZWQiLCJlcnJvciJdKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubnVsbFRlc3Q9Z2V0U3RyaW5nT3B0aW9uKGUubnVsbFRlc3QsWyJkaXNhYmxlZCIsImVycm9yIiwid2FybmluZyJdKTt0aGlzLnNjcmlwdFRlc3Q9Z2V0U3RyaW5nT3B0aW9uKGUuc2NyaXB0VGVzdCxbImVycm9yIiwiZGlzYWJsZWQiLCJ3YXJuaW5nIl0pO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmV4dHJhcz1udWxsO3RoaXMubWVzc2FnZT1udWxsO3RoaXMucGljdHVyZT1udWxsO3RoaXMuc2NyaXB0PW51bGx9fWNsYXNzIFZhbHVlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKEpuLCJ2YWx1ZSIsITApO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5vdmVycmlkZT1nZXRJbnRlZ2VyKHtkYXRhOmUub3ZlcnJpZGUsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLnJlbGV2YW50PWdldFJlbGV2YW50KGUucmVsZXZhbnQpO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIjt0aGlzLmFyYz1udWxsO3RoaXMuYm9vbGVhbj1udWxsO3RoaXMuZGF0ZT1udWxsO3RoaXMuZGF0ZVRpbWU9bnVsbDt0aGlzLmRlY2ltYWw9bnVsbDt0aGlzLmV4RGF0YT1udWxsO3RoaXMuZmxvYXQ9bnVsbDt0aGlzLmltYWdlPW51bGw7dGhpcy5pbnRlZ2VyPW51bGw7dGhpcy5saW5lPW51bGw7dGhpcy5yZWN0YW5nbGU9bnVsbDt0aGlzLnRleHQ9bnVsbDt0aGlzLnRpbWU9bnVsbH1bJHJdKGUpe2NvbnN0IHQ9dGhpc1twcl0oKTtpZih0IGluc3RhbmNlb2YgRmllbGQmJnQudWk/LmltYWdlRWRpdCl7aWYoIXRoaXMuaW1hZ2Upe3RoaXMuaW1hZ2U9bmV3IEltYWdlKHt9KTt0aGlzW2pzXSh0aGlzLmltYWdlKX10aGlzLmltYWdlW2VyXT1lW2VyXTtyZXR1cm59Y29uc3QgaT1lW1lyXTtpZihudWxsPT09dGhpc1tpXSl7Zm9yKGNvbnN0IGUgb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpe2NvbnN0IHQ9dGhpc1tlXTtpZih0IGluc3RhbmNlb2YgWEZBT2JqZWN0KXt0aGlzW2VdPW51bGw7dGhpc1tYcl0odCl9fXRoaXNbZVtZcl1dPWU7dGhpc1tqc10oZSl9ZWxzZSB0aGlzW2ldW2VyXT1lW2VyXX1bZW5dKCl7aWYodGhpcy5leERhdGEpcmV0dXJuInN0cmluZyI9PXR5cGVvZiB0aGlzLmV4RGF0YVtlcl0/dGhpcy5leERhdGFbZXJdLnRyaW0oKTp0aGlzLmV4RGF0YVtlcl1bZW5dKCkudHJpbSgpO2Zvcihjb25zdCBlIG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKXtpZigiaW1hZ2UiPT09ZSljb250aW51ZTtjb25zdCB0PXRoaXNbZV07aWYodCBpbnN0YW5jZW9mIFhGQU9iamVjdClyZXR1cm4odFtlcl18fCIiKS50b1N0cmluZygpLnRyaW0oKX1yZXR1cm4gbnVsbH1bYW5dKGUpe2Zvcihjb25zdCB0IG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKXtjb25zdCBpPXRoaXNbdF07aWYoaSBpbnN0YW5jZW9mIFhGQU9iamVjdClyZXR1cm4gaVthbl0oZSl9cmV0dXJuIEhUTUxSZXN1bHQuRU1QVFl9fWNsYXNzIFZhcmlhYmxlcyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihKbiwidmFyaWFibGVzIiwhMCk7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiI7dGhpcy5ib29sZWFuPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRhdGU9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZGF0ZVRpbWU9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZGVjaW1hbD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5leERhdGE9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZmxvYXQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuaW1hZ2U9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuaW50ZWdlcj1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5tYW5pZmVzdD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5zY3JpcHQ9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMudGV4dD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy50aW1lPW5ldyBYRkFPYmplY3RBcnJheX1bVXJdKCl7cmV0dXJuITB9fWNsYXNzIFRlbXBsYXRlTmFtZXNwYWNle3N0YXRpY1tvbl0oZSx0KXtpZihUZW1wbGF0ZU5hbWVzcGFjZS5oYXNPd25Qcm9wZXJ0eShlKSl7Y29uc3QgaT1UZW1wbGF0ZU5hbWVzcGFjZVtlXSh0KTtpW19yXSh0KTtyZXR1cm4gaX19c3RhdGljIGFwcGVhcmFuY2VGaWx0ZXIoZSl7cmV0dXJuIG5ldyBBcHBlYXJhbmNlRmlsdGVyKGUpfXN0YXRpYyBhcmMoZSl7cmV0dXJuIG5ldyBBcmMoZSl9c3RhdGljIGFyZWEoZSl7cmV0dXJuIG5ldyBBcmVhKGUpfXN0YXRpYyBhc3Npc3QoZSl7cmV0dXJuIG5ldyBBc3Npc3QoZSl9c3RhdGljIGJhcmNvZGUoZSl7cmV0dXJuIG5ldyBCYXJjb2RlKGUpfXN0YXRpYyBiaW5kKGUpe3JldHVybiBuZXcgQmluZChlKX1zdGF0aWMgYmluZEl0ZW1zKGUpe3JldHVybiBuZXcgQmluZEl0ZW1zKGUpfXN0YXRpYyBib29rZW5kKGUpe3JldHVybiBuZXcgQm9va2VuZChlKX1zdGF0aWMgYm9vbGVhbihlKXtyZXR1cm4gbmV3IEJvb2xlYW5FbGVtZW50KGUpfXN0YXRpYyBib3JkZXIoZSl7cmV0dXJuIG5ldyBCb3JkZXIoZSl9c3RhdGljIGJyZWFrKGUpe3JldHVybiBuZXcgQnJlYWsoZSl9c3RhdGljIGJyZWFrQWZ0ZXIoZSl7cmV0dXJuIG5ldyBCcmVha0FmdGVyKGUpfXN0YXRpYyBicmVha0JlZm9yZShlKXtyZXR1cm4gbmV3IEJyZWFrQmVmb3JlKGUpfXN0YXRpYyBidXR0b24oZSl7cmV0dXJuIG5ldyBCdXR0b24oZSl9c3RhdGljIGNhbGN1bGF0ZShlKXtyZXR1cm4gbmV3IENhbGN1bGF0ZShlKX1zdGF0aWMgY2FwdGlvbihlKXtyZXR1cm4gbmV3IENhcHRpb24oZSl9c3RhdGljIGNlcnRpZmljYXRlKGUpe3JldHVybiBuZXcgQ2VydGlmaWNhdGUoZSl9c3RhdGljIGNlcnRpZmljYXRlcyhlKXtyZXR1cm4gbmV3IENlcnRpZmljYXRlcyhlKX1zdGF0aWMgY2hlY2tCdXR0b24oZSl7cmV0dXJuIG5ldyBDaGVja0J1dHRvbihlKX1zdGF0aWMgY2hvaWNlTGlzdChlKXtyZXR1cm4gbmV3IENob2ljZUxpc3QoZSl9c3RhdGljIGNvbG9yKGUpe3JldHVybiBuZXcgQ29sb3IoZSl9c3RhdGljIGNvbWIoZSl7cmV0dXJuIG5ldyBDb21iKGUpfXN0YXRpYyBjb25uZWN0KGUpe3JldHVybiBuZXcgQ29ubmVjdChlKX1zdGF0aWMgY29udGVudEFyZWEoZSl7cmV0dXJuIG5ldyBDb250ZW50QXJlYShlKX1zdGF0aWMgY29ybmVyKGUpe3JldHVybiBuZXcgQ29ybmVyKGUpfXN0YXRpYyBkYXRlKGUpe3JldHVybiBuZXcgRGF0ZUVsZW1lbnQoZSl9c3RhdGljIGRhdGVUaW1lKGUpe3JldHVybiBuZXcgRGF0ZVRpbWUoZSl9c3RhdGljIGRhdGVUaW1lRWRpdChlKXtyZXR1cm4gbmV3IERhdGVUaW1lRWRpdChlKX1zdGF0aWMgZGVjaW1hbChlKXtyZXR1cm4gbmV3IERlY2ltYWwoZSl9c3RhdGljIGRlZmF1bHRVaShlKXtyZXR1cm4gbmV3IERlZmF1bHRVaShlKX1zdGF0aWMgZGVzYyhlKXtyZXR1cm4gbmV3IERlc2MoZSl9c3RhdGljIGRpZ2VzdE1ldGhvZChlKXtyZXR1cm4gbmV3IERpZ2VzdE1ldGhvZChlKX1zdGF0aWMgZGlnZXN0TWV0aG9kcyhlKXtyZXR1cm4gbmV3IERpZ2VzdE1ldGhvZHMoZSl9c3RhdGljIGRyYXcoZSl7cmV0dXJuIG5ldyBEcmF3KGUpfXN0YXRpYyBlZGdlKGUpe3JldHVybiBuZXcgRWRnZShlKX1zdGF0aWMgZW5jb2RpbmcoZSl7cmV0dXJuIG5ldyBFbmNvZGluZyhlKX1zdGF0aWMgZW5jb2RpbmdzKGUpe3JldHVybiBuZXcgRW5jb2RpbmdzKGUpfXN0YXRpYyBlbmNyeXB0KGUpe3JldHVybiBuZXcgRW5jcnlwdChlKX1zdGF0aWMgZW5jcnlwdERhdGEoZSl7cmV0dXJuIG5ldyBFbmNyeXB0RGF0YShlKX1zdGF0aWMgZW5jcnlwdGlvbihlKXtyZXR1cm4gbmV3IEVuY3J5cHRpb24oZSl9c3RhdGljIGVuY3J5cHRpb25NZXRob2QoZSl7cmV0dXJuIG5ldyBFbmNyeXB0aW9uTWV0aG9kKGUpfXN0YXRpYyBlbmNyeXB0aW9uTWV0aG9kcyhlKXtyZXR1cm4gbmV3IEVuY3J5cHRpb25NZXRob2RzKGUpfXN0YXRpYyBldmVudChlKXtyZXR1cm4gbmV3IEV2ZW50KGUpfXN0YXRpYyBleERhdGEoZSl7cmV0dXJuIG5ldyBFeERhdGEoZSl9c3RhdGljIGV4T2JqZWN0KGUpe3JldHVybiBuZXcgRXhPYmplY3QoZSl9c3RhdGljIGV4Y2xHcm91cChlKXtyZXR1cm4gbmV3IEV4Y2xHcm91cChlKX1zdGF0aWMgZXhlY3V0ZShlKXtyZXR1cm4gbmV3IEV4ZWN1dGUoZSl9c3RhdGljIGV4dHJhcyhlKXtyZXR1cm4gbmV3IEV4dHJhcyhlKX1zdGF0aWMgZmllbGQoZSl7cmV0dXJuIG5ldyBGaWVsZChlKX1zdGF0aWMgZmlsbChlKXtyZXR1cm4gbmV3IEZpbGwoZSl9c3RhdGljIGZpbHRlcihlKXtyZXR1cm4gbmV3IEZpbHRlcihlKX1zdGF0aWMgZmxvYXQoZSl7cmV0dXJuIG5ldyBGbG9hdChlKX1zdGF0aWMgZm9udChlKXtyZXR1cm4gbmV3IHRlbXBsYXRlX0ZvbnQoZSl9c3RhdGljIGZvcm1hdChlKXtyZXR1cm4gbmV3IEZvcm1hdChlKX1zdGF0aWMgaGFuZGxlcihlKXtyZXR1cm4gbmV3IEhhbmRsZXIoZSl9c3RhdGljIGh5cGhlbmF0aW9uKGUpe3JldHVybiBuZXcgSHlwaGVuYXRpb24oZSl9c3RhdGljIGltYWdlKGUpe3JldHVybiBuZXcgSW1hZ2UoZSl9c3RhdGljIGltYWdlRWRpdChlKXtyZXR1cm4gbmV3IEltYWdlRWRpdChlKX1zdGF0aWMgaW50ZWdlcihlKXtyZXR1cm4gbmV3IEludGVnZXIoZSl9c3RhdGljIGlzc3VlcnMoZSl7cmV0dXJuIG5ldyBJc3N1ZXJzKGUpfXN0YXRpYyBpdGVtcyhlKXtyZXR1cm4gbmV3IEl0ZW1zKGUpfXN0YXRpYyBrZWVwKGUpe3JldHVybiBuZXcgS2VlcChlKX1zdGF0aWMga2V5VXNhZ2UoZSl7cmV0dXJuIG5ldyBLZXlVc2FnZShlKX1zdGF0aWMgbGluZShlKXtyZXR1cm4gbmV3IExpbmUoZSl9c3RhdGljIGxpbmVhcihlKXtyZXR1cm4gbmV3IExpbmVhcihlKX1zdGF0aWMgbG9ja0RvY3VtZW50KGUpe3JldHVybiBuZXcgTG9ja0RvY3VtZW50KGUpfXN0YXRpYyBtYW5pZmVzdChlKXtyZXR1cm4gbmV3IE1hbmlmZXN0KGUpfXN0YXRpYyBtYXJnaW4oZSl7cmV0dXJuIG5ldyBNYXJnaW4oZSl9c3RhdGljIG1kcChlKXtyZXR1cm4gbmV3IE1kcChlKX1zdGF0aWMgbWVkaXVtKGUpe3JldHVybiBuZXcgTWVkaXVtKGUpfXN0YXRpYyBtZXNzYWdlKGUpe3JldHVybiBuZXcgTWVzc2FnZShlKX1zdGF0aWMgbnVtZXJpY0VkaXQoZSl7cmV0dXJuIG5ldyBOdW1lcmljRWRpdChlKX1zdGF0aWMgb2NjdXIoZSl7cmV0dXJuIG5ldyBPY2N1cihlKX1zdGF0aWMgb2lkKGUpe3JldHVybiBuZXcgT2lkKGUpfXN0YXRpYyBvaWRzKGUpe3JldHVybiBuZXcgT2lkcyhlKX1zdGF0aWMgb3ZlcmZsb3coZSl7cmV0dXJuIG5ldyBPdmVyZmxvdyhlKX1zdGF0aWMgcGFnZUFyZWEoZSl7cmV0dXJuIG5ldyBQYWdlQXJlYShlKX1zdGF0aWMgcGFnZVNldChlKXtyZXR1cm4gbmV3IFBhZ2VTZXQoZSl9c3RhdGljIHBhcmEoZSl7cmV0dXJuIG5ldyBQYXJhKGUpfXN0YXRpYyBwYXNzd29yZEVkaXQoZSl7cmV0dXJuIG5ldyBQYXNzd29yZEVkaXQoZSl9c3RhdGljIHBhdHRlcm4oZSl7cmV0dXJuIG5ldyB0ZW1wbGF0ZV9QYXR0ZXJuKGUpfXN0YXRpYyBwaWN0dXJlKGUpe3JldHVybiBuZXcgUGljdHVyZShlKX1zdGF0aWMgcHJvdG8oZSl7cmV0dXJuIG5ldyBQcm90byhlKX1zdGF0aWMgcmFkaWFsKGUpe3JldHVybiBuZXcgUmFkaWFsKGUpfXN0YXRpYyByZWFzb24oZSl7cmV0dXJuIG5ldyBSZWFzb24oZSl9c3RhdGljIHJlYXNvbnMoZSl7cmV0dXJuIG5ldyBSZWFzb25zKGUpfXN0YXRpYyByZWN0YW5nbGUoZSl7cmV0dXJuIG5ldyBSZWN0YW5nbGUoZSl9c3RhdGljIHJlZihlKXtyZXR1cm4gbmV3IFJlZkVsZW1lbnQoZSl9c3RhdGljIHNjcmlwdChlKXtyZXR1cm4gbmV3IFNjcmlwdChlKX1zdGF0aWMgc2V0UHJvcGVydHkoZSl7cmV0dXJuIG5ldyBTZXRQcm9wZXJ0eShlKX1zdGF0aWMgc2lnbkRhdGEoZSl7cmV0dXJuIG5ldyBTaWduRGF0YShlKX1zdGF0aWMgc2lnbmF0dXJlKGUpe3JldHVybiBuZXcgU2lnbmF0dXJlKGUpfXN0YXRpYyBzaWduaW5nKGUpe3JldHVybiBuZXcgU2lnbmluZyhlKX1zdGF0aWMgc29saWQoZSl7cmV0dXJuIG5ldyBTb2xpZChlKX1zdGF0aWMgc3BlYWsoZSl7cmV0dXJuIG5ldyBTcGVhayhlKX1zdGF0aWMgc3RpcHBsZShlKXtyZXR1cm4gbmV3IFN0aXBwbGUoZSl9c3RhdGljIHN1YmZvcm0oZSl7cmV0dXJuIG5ldyBTdWJmb3JtKGUpfXN0YXRpYyBzdWJmb3JtU2V0KGUpe3JldHVybiBuZXcgU3ViZm9ybVNldChlKX1zdGF0aWMgc3ViamVjdEROKGUpe3JldHVybiBuZXcgU3ViamVjdEROKGUpfXN0YXRpYyBzdWJqZWN0RE5zKGUpe3JldHVybiBuZXcgU3ViamVjdEROcyhlKX1zdGF0aWMgc3VibWl0KGUpe3JldHVybiBuZXcgU3VibWl0KGUpfXN0YXRpYyB0ZW1wbGF0ZShlKXtyZXR1cm4gbmV3IFRlbXBsYXRlKGUpfXN0YXRpYyB0ZXh0KGUpe3JldHVybiBuZXcgVGV4dChlKX1zdGF0aWMgdGV4dEVkaXQoZSl7cmV0dXJuIG5ldyBUZXh0RWRpdChlKX1zdGF0aWMgdGltZShlKXtyZXR1cm4gbmV3IFRpbWUoZSl9c3RhdGljIHRpbWVTdGFtcChlKXtyZXR1cm4gbmV3IFRpbWVTdGFtcChlKX1zdGF0aWMgdG9vbFRpcChlKXtyZXR1cm4gbmV3IFRvb2xUaXAoZSl9c3RhdGljIHRyYXZlcnNhbChlKXtyZXR1cm4gbmV3IFRyYXZlcnNhbChlKX1zdGF0aWMgdHJhdmVyc2UoZSl7cmV0dXJuIG5ldyBUcmF2ZXJzZShlKX1zdGF0aWMgdWkoZSl7cmV0dXJuIG5ldyBVaShlKX1zdGF0aWMgdmFsaWRhdGUoZSl7cmV0dXJuIG5ldyBWYWxpZGF0ZShlKX1zdGF0aWMgdmFsdWUoZSl7cmV0dXJuIG5ldyBWYWx1ZShlKX1zdGF0aWMgdmFyaWFibGVzKGUpe3JldHVybiBuZXcgVmFyaWFibGVzKGUpfX1jb25zdCBUbj1nbi5kYXRhc2V0cy5pZDtmdW5jdGlvbiBjcmVhdGVUZXh0KGUpe2NvbnN0IHQ9bmV3IFRleHQoe30pO3RbZXJdPWU7cmV0dXJuIHR9Y2xhc3MgQmluZGVye2NvbnN0cnVjdG9yKGUpe3RoaXMucm9vdD1lO3RoaXMuZGF0YXNldHM9ZS5kYXRhc2V0czt0aGlzLmRhdGE9ZS5kYXRhc2V0cz8uZGF0YXx8bmV3IFhtbE9iamVjdChnbi5kYXRhc2V0cy5pZCwiZGF0YSIpO3RoaXMuZW1wdHlNZXJnZT0wPT09dGhpcy5kYXRhW0VyXSgpLmxlbmd0aDt0aGlzLnJvb3QuZm9ybT10aGlzLmZvcm09ZS50ZW1wbGF0ZVskc10oKX1faXNDb25zdW1lRGF0YSgpe3JldHVybiF0aGlzLmVtcHR5TWVyZ2UmJnRoaXMuX21lcmdlTW9kZX1faXNNYXRjaFRlbXBsYXRlKCl7cmV0dXJuIXRoaXMuX2lzQ29uc3VtZURhdGEoKX1iaW5kKCl7dGhpcy5fYmluZEVsZW1lbnQodGhpcy5mb3JtLHRoaXMuZGF0YSk7cmV0dXJuIHRoaXMuZm9ybX1nZXREYXRhKCl7cmV0dXJuIHRoaXMuZGF0YX1fYmluZFZhbHVlKGUsdCxpKXtlW3RyXT10O2lmKGVbd3JdKCkpaWYodFtScl0oKSl7Y29uc3QgaT10W2xyXSgpO2VbJHJdKGNyZWF0ZVRleHQoaSkpfWVsc2UgaWYoZSBpbnN0YW5jZW9mIEZpZWxkJiYibXVsdGlTZWxlY3QiPT09ZS51aT8uY2hvaWNlTGlzdD8ub3Blbil7Y29uc3QgaT10W0VyXSgpLm1hcCgoZT0+ZVtlcl0udHJpbSgpKSkuam9pbigiXG4iKTtlWyRyXShjcmVhdGVUZXh0KGkpKX1lbHNlIHRoaXMuX2lzQ29uc3VtZURhdGEoKSYmd2FybigiWEZBIC0gTm9kZXMgaGF2ZW4ndCB0aGUgc2FtZSB0eXBlLiIpO2Vsc2UhdFtScl0oKXx8dGhpcy5faXNNYXRjaFRlbXBsYXRlKCk/dGhpcy5fYmluZEVsZW1lbnQoZSx0KTp3YXJuKCJYRkEgLSBOb2RlcyBoYXZlbid0IHRoZSBzYW1lIHR5cGUuIil9X2ZpbmREYXRhQnlOYW1lVG9Db25zdW1lKGUsdCxpLGEpe2lmKCFlKXJldHVybiBudWxsO2xldCBzLHI7Zm9yKGxldCBhPTA7YTwzO2ErKyl7cz1pW1FyXShlLCExLCEwKTtmb3IoOzspe3I9cy5uZXh0KCkudmFsdWU7aWYoIXIpYnJlYWs7aWYodD09PXJbUnJdKCkpcmV0dXJuIHJ9aWYoaVtIcl09PT1nbi5kYXRhc2V0cy5pZCYmImRhdGEiPT09aVtZcl0pYnJlYWs7aT1pW3ByXSgpfWlmKCFhKXJldHVybiBudWxsO3M9dGhpcy5kYXRhW1FyXShlLCEwLCExKTtyPXMubmV4dCgpLnZhbHVlO2lmKHIpcmV0dXJuIHI7cz10aGlzLmRhdGFbbnJdKGUsITApO3I9cy5uZXh0KCkudmFsdWU7cmV0dXJuIHI/LltScl0oKT9yOm51bGx9X3NldFByb3BlcnRpZXMoZSx0KXtpZihlLmhhc093blByb3BlcnR5KCJzZXRQcm9wZXJ0eSIpKWZvcihjb25zdHtyZWY6aSx0YXJnZXQ6YSxjb25uZWN0aW9uOnN9b2YgZS5zZXRQcm9wZXJ0eS5jaGlsZHJlbil7aWYocyljb250aW51ZTtpZighaSljb250aW51ZTtjb25zdCByPXNlYXJjaE5vZGUodGhpcy5yb290LHQsaSwhMSwhMSk7aWYoIXIpe3dhcm4oYFhGQSAtIEludmFsaWQgcmVmZXJlbmNlOiAke2l9LmApO2NvbnRpbnVlfWNvbnN0W25dPXI7aWYoIW5bTnJdKHRoaXMuZGF0YSkpe3dhcm4oIlhGQSAtIEludmFsaWQgbm9kZTogbXVzdCBiZSBhIGRhdGEgbm9kZS4iKTtjb250aW51ZX1jb25zdCBvPXNlYXJjaE5vZGUodGhpcy5yb290LGUsYSwhMSwhMSk7aWYoIW8pe3dhcm4oYFhGQSAtIEludmFsaWQgdGFyZ2V0OiAke2F9LmApO2NvbnRpbnVlfWNvbnN0W2ddPW87aWYoIWdbTnJdKGUpKXt3YXJuKCJYRkEgLSBJbnZhbGlkIHRhcmdldDogbXVzdCBiZSBhIHByb3BlcnR5IG9yIHN1YnByb3BlcnR5LiIpO2NvbnRpbnVlfWNvbnN0IGM9Z1twcl0oKTtpZihnIGluc3RhbmNlb2YgU2V0UHJvcGVydHl8fGMgaW5zdGFuY2VvZiBTZXRQcm9wZXJ0eSl7d2FybigiWEZBIC0gSW52YWxpZCB0YXJnZXQ6IGNhbm5vdCBiZSBhIHNldFByb3BlcnR5IG9yIG9uZSBvZiBpdHMgcHJvcGVydGllcy4iKTtjb250aW51ZX1pZihnIGluc3RhbmNlb2YgQmluZEl0ZW1zfHxjIGluc3RhbmNlb2YgQmluZEl0ZW1zKXt3YXJuKCJYRkEgLSBJbnZhbGlkIHRhcmdldDogY2Fubm90IGJlIGEgYmluZEl0ZW1zIG9yIG9uZSBvZiBpdHMgcHJvcGVydGllcy4iKTtjb250aW51ZX1jb25zdCBoPW5bZW5dKCksbD1nW1lyXTtpZihnIGluc3RhbmNlb2YgWEZBQXR0cmlidXRlKXtjb25zdCBlPU9iamVjdC5jcmVhdGUobnVsbCk7ZVtsXT1oO2NvbnN0IHQ9UmVmbGVjdC5jb25zdHJ1Y3QoT2JqZWN0LmdldFByb3RvdHlwZU9mKGMpLmNvbnN0cnVjdG9yLFtlXSk7Y1tsXT10W2xdfWVsc2UgaWYoZy5oYXNPd25Qcm9wZXJ0eShlcikpe2dbdHJdPW47Z1tlcl09aDtnW3NyXSgpfWVsc2Ugd2FybigiWEZBIC0gSW52YWxpZCBub2RlIHRvIHVzZSBpbiBzZXRQcm9wZXJ0eSIpfX1fYmluZEl0ZW1zKGUsdCl7aWYoIWUuaGFzT3duUHJvcGVydHkoIml0ZW1zIil8fCFlLmhhc093blByb3BlcnR5KCJiaW5kSXRlbXMiKXx8ZS5iaW5kSXRlbXMuaXNFbXB0eSgpKXJldHVybjtmb3IoY29uc3QgdCBvZiBlLml0ZW1zLmNoaWxkcmVuKWVbWHJdKHQpO2UuaXRlbXMuY2xlYXIoKTtjb25zdCBpPW5ldyBJdGVtcyh7fSksYT1uZXcgSXRlbXMoe30pO2VbanNdKGkpO2UuaXRlbXMucHVzaChpKTtlW2pzXShhKTtlLml0ZW1zLnB1c2goYSk7Zm9yKGNvbnN0e3JlZjpzLGxhYmVsUmVmOnIsdmFsdWVSZWY6bixjb25uZWN0aW9uOm99b2YgZS5iaW5kSXRlbXMuY2hpbGRyZW4pe2lmKG8pY29udGludWU7aWYoIXMpY29udGludWU7Y29uc3QgZT1zZWFyY2hOb2RlKHRoaXMucm9vdCx0LHMsITEsITEpO2lmKGUpZm9yKGNvbnN0IHQgb2YgZSl7aWYoIXRbTnJdKHRoaXMuZGF0YXNldHMpKXt3YXJuKGBYRkEgLSBJbnZhbGlkIHJlZiAoJHtzfSk6IG11c3QgYmUgYSBkYXRhc2V0cyBjaGlsZC5gKTtjb250aW51ZX1jb25zdCBlPXNlYXJjaE5vZGUodGhpcy5yb290LHQsciwhMCwhMSk7aWYoIWUpe3dhcm4oYFhGQSAtIEludmFsaWQgbGFiZWw6ICR7cn0uYCk7Y29udGludWV9Y29uc3Rbb109ZTtpZighb1tOcl0odGhpcy5kYXRhc2V0cykpe3dhcm4oIlhGQSAtIEludmFsaWQgbGFiZWw6IG11c3QgYmUgYSBkYXRhc2V0cyBjaGlsZC4iKTtjb250aW51ZX1jb25zdCBnPXNlYXJjaE5vZGUodGhpcy5yb290LHQsbiwhMCwhMSk7aWYoIWcpe3dhcm4oYFhGQSAtIEludmFsaWQgdmFsdWU6ICR7bn0uYCk7Y29udGludWV9Y29uc3RbY109ZztpZighY1tOcl0odGhpcy5kYXRhc2V0cykpe3dhcm4oIlhGQSAtIEludmFsaWQgdmFsdWU6IG11c3QgYmUgYSBkYXRhc2V0cyBjaGlsZC4iKTtjb250aW51ZX1jb25zdCBoPWNyZWF0ZVRleHQob1tlbl0oKSksbD1jcmVhdGVUZXh0KGNbZW5dKCkpO2lbanNdKGgpO2kudGV4dC5wdXNoKGgpO2FbanNdKGwpO2EudGV4dC5wdXNoKGwpfWVsc2Ugd2FybihgWEZBIC0gSW52YWxpZCByZWZlcmVuY2U6ICR7c30uYCl9fV9iaW5kT2NjdXJyZW5jZXMoZSx0LGkpe2xldCBhO2lmKHQubGVuZ3RoPjEpe2E9ZVskc10oKTthW1hyXShhLm9jY3VyKTthLm9jY3VyPW51bGx9dGhpcy5fYmluZFZhbHVlKGUsdFswXSxpKTt0aGlzLl9zZXRQcm9wZXJ0aWVzKGUsdFswXSk7dGhpcy5fYmluZEl0ZW1zKGUsdFswXSk7aWYoMT09PXQubGVuZ3RoKXJldHVybjtjb25zdCBzPWVbcHJdKCkscj1lW1lyXSxuPXNbRHJdKGUpO2ZvcihsZXQgZT0xLG89dC5sZW5ndGg7ZTxvO2UrKyl7Y29uc3Qgbz10W2VdLGc9YVskc10oKTtzW3JdLnB1c2goZyk7c1tGcl0obitlLGcpO3RoaXMuX2JpbmRWYWx1ZShnLG8saSk7dGhpcy5fc2V0UHJvcGVydGllcyhnLG8pO3RoaXMuX2JpbmRJdGVtcyhnLG8pfX1fY3JlYXRlT2NjdXJyZW5jZXMoZSl7aWYoIXRoaXMuZW1wdHlNZXJnZSlyZXR1cm47Y29uc3R7b2NjdXI6dH09ZTtpZighdHx8dC5pbml0aWFsPD0xKXJldHVybjtjb25zdCBpPWVbcHJdKCksYT1lW1lyXTtpZighKGlbYV1pbnN0YW5jZW9mIFhGQU9iamVjdEFycmF5KSlyZXR1cm47bGV0IHM7cz1lLm5hbWU/aVthXS5jaGlsZHJlbi5maWx0ZXIoKHQ9PnQubmFtZT09PWUubmFtZSkpLmxlbmd0aDppW2FdLmNoaWxkcmVuLmxlbmd0aDtjb25zdCByPWlbRHJdKGUpKzEsbj10LmluaXRpYWwtcztpZihuKXtjb25zdCB0PWVbJHNdKCk7dFtYcl0odC5vY2N1cik7dC5vY2N1cj1udWxsO2lbYV0ucHVzaCh0KTtpW0ZyXShyLHQpO2ZvcihsZXQgZT0xO2U8bjtlKyspe2NvbnN0IHM9dFskc10oKTtpW2FdLnB1c2gocyk7aVtGcl0ocitlLHMpfX19X2dldE9jY3VySW5mbyhlKXtjb25zdHtuYW1lOnQsb2NjdXI6aX09ZTtpZighaXx8IXQpcmV0dXJuWzEsMV07Y29uc3QgYT0tMT09PWkubWF4PzEvMDppLm1heDtyZXR1cm5baS5taW4sYV19X3NldEFuZEJpbmQoZSx0KXt0aGlzLl9zZXRQcm9wZXJ0aWVzKGUsdCk7dGhpcy5fYmluZEl0ZW1zKGUsdCk7dGhpcy5fYmluZEVsZW1lbnQoZSx0KX1fYmluZEVsZW1lbnQoZSx0KXtjb25zdCBpPVtdO3RoaXMuX2NyZWF0ZU9jY3VycmVuY2VzKGUpO2Zvcihjb25zdCBhIG9mIGVbRXJdKCkpe2lmKGFbdHJdKWNvbnRpbnVlO2lmKHZvaWQgMD09PXRoaXMuX21lcmdlTW9kZSYmInN1YmZvcm0iPT09YVtZcl0pe3RoaXMuX21lcmdlTW9kZT0iY29uc3VtZURhdGEiPT09YS5tZXJnZU1vZGU7Y29uc3QgZT10W0VyXSgpO2lmKGUubGVuZ3RoPjApdGhpcy5fYmluZE9jY3VycmVuY2VzKGEsW2VbMF1dLG51bGwpO2Vsc2UgaWYodGhpcy5lbXB0eU1lcmdlKXtjb25zdCBlPXRbSHJdPT09VG4/LTE6dFtIcl0saT1hW3RyXT1uZXcgWG1sT2JqZWN0KGUsYS5uYW1lfHwicm9vdCIpO3RbanNdKGkpO3RoaXMuX2JpbmRFbGVtZW50KGEsaSl9Y29udGludWV9aWYoIWFba3JdKCkpY29udGludWU7bGV0IGU9ITEscz1udWxsLHI9bnVsbCxuPW51bGw7aWYoYS5iaW5kKXtzd2l0Y2goYS5iaW5kLm1hdGNoKXtjYXNlIm5vbmUiOnRoaXMuX3NldEFuZEJpbmQoYSx0KTtjb250aW51ZTtjYXNlImdsb2JhbCI6ZT0hMDticmVhaztjYXNlImRhdGFSZWYiOmlmKCFhLmJpbmQucmVmKXt3YXJuKGBYRkEgLSByZWYgaXMgZW1wdHkgaW4gbm9kZSAke2FbWXJdfS5gKTt0aGlzLl9zZXRBbmRCaW5kKGEsdCk7Y29udGludWV9cj1hLmJpbmQucmVmfWEuYmluZC5waWN0dXJlJiYocz1hLmJpbmQucGljdHVyZVtlcl0pfWNvbnN0W28sZ109dGhpcy5fZ2V0T2NjdXJJbmZvKGEpO2lmKHIpe249c2VhcmNoTm9kZSh0aGlzLnJvb3QsdCxyLCEwLCExKTtpZihudWxsPT09bil7bj1jcmVhdGVEYXRhTm9kZSh0aGlzLmRhdGEsdCxyKTtpZighbiljb250aW51ZTt0aGlzLl9pc0NvbnN1bWVEYXRhKCkmJihuW0FyXT0hMCk7dGhpcy5fc2V0QW5kQmluZChhLG4pO2NvbnRpbnVlfXRoaXMuX2lzQ29uc3VtZURhdGEoKSYmKG49bi5maWx0ZXIoKGU9PiFlW0FyXSkpKTtuLmxlbmd0aD5nP249bi5zbGljZSgwLGcpOjA9PT1uLmxlbmd0aCYmKG49bnVsbCk7biYmdGhpcy5faXNDb25zdW1lRGF0YSgpJiZuLmZvckVhY2goKGU9PntlW0FyXT0hMH0pKX1lbHNle2lmKCFhLm5hbWUpe3RoaXMuX3NldEFuZEJpbmQoYSx0KTtjb250aW51ZX1pZih0aGlzLl9pc0NvbnN1bWVEYXRhKCkpe2NvbnN0IGk9W107Zm9yKDtpLmxlbmd0aDxnOyl7Y29uc3Qgcz10aGlzLl9maW5kRGF0YUJ5TmFtZVRvQ29uc3VtZShhLm5hbWUsYVt3cl0oKSx0LGUpO2lmKCFzKWJyZWFrO3NbQXJdPSEwO2kucHVzaChzKX1uPWkubGVuZ3RoPjA/aTpudWxsfWVsc2V7bj10W1FyXShhLm5hbWUsITEsdGhpcy5lbXB0eU1lcmdlKS5uZXh0KCkudmFsdWU7aWYoIW4pe2lmKDA9PT1vKXtpLnB1c2goYSk7Y29udGludWV9Y29uc3QgZT10W0hyXT09PVRuPy0xOnRbSHJdO249YVt0cl09bmV3IFhtbE9iamVjdChlLGEubmFtZSk7dGhpcy5lbXB0eU1lcmdlJiYobltBcl09ITApO3RbanNdKG4pO3RoaXMuX3NldEFuZEJpbmQoYSxuKTtjb250aW51ZX10aGlzLmVtcHR5TWVyZ2UmJihuW0FyXT0hMCk7bj1bbl19fW4/dGhpcy5fYmluZE9jY3VycmVuY2VzKGEsbixzKTpvPjA/dGhpcy5fc2V0QW5kQmluZChhLHQpOmkucHVzaChhKX1pLmZvckVhY2goKGU9PmVbcHJdKClbWHJdKGUpKSl9fWNsYXNzIERhdGFIYW5kbGVye2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5kYXRhPXQ7dGhpcy5kYXRhc2V0PWUuZGF0YXNldHN8fG51bGx9c2VyaWFsaXplKGUpe2NvbnN0IHQ9W1stMSx0aGlzLmRhdGFbRXJdKCldXTtmb3IoO3QubGVuZ3RoPjA7KXtjb25zdCBpPXQuYXQoLTEpLFthLHNdPWk7aWYoYSsxPT09cy5sZW5ndGgpe3QucG9wKCk7Y29udGludWV9Y29uc3Qgcj1zWysraVswXV0sbj1lLmdldChyW25uXSk7aWYobilyWyRyXShuKTtlbHNle2NvbnN0IHQ9cltvcl0oKTtmb3IoY29uc3QgaSBvZiB0LnZhbHVlcygpKXtjb25zdCB0PWUuZ2V0KGlbbm5dKTtpZih0KXtpWyRyXSh0KTticmVha319fWNvbnN0IG89cltFcl0oKTtvLmxlbmd0aD4wJiZ0LnB1c2goWy0xLG9dKX1jb25zdCBpPVsnPHhmYTpkYXRhc2V0cyB4bWxuczp4ZmE9Imh0dHA6Ly93d3cueGZhLm9yZy9zY2hlbWEveGZhLWRhdGEvMS4wLyI+J107aWYodGhpcy5kYXRhc2V0KWZvcihjb25zdCBlIG9mIHRoaXMuZGF0YXNldFtFcl0oKSkiZGF0YSIhPT1lW1lyXSYmZVtzbl0oaSk7dGhpcy5kYXRhW3NuXShpKTtpLnB1c2goIjwveGZhOmRhdGFzZXRzPiIpO3JldHVybiBpLmpvaW4oIiIpfX1jb25zdCBxbj1nbi5jb25maWcuaWQ7Y2xhc3MgQWNyb2JhdCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiYWNyb2JhdCIsITApO3RoaXMuYWNyb2JhdDc9bnVsbDt0aGlzLmF1dG9TYXZlPW51bGw7dGhpcy5jb21tb249bnVsbDt0aGlzLnZhbGlkYXRlPW51bGw7dGhpcy52YWxpZGF0ZUFwcHJvdmFsU2lnbmF0dXJlcz1udWxsO3RoaXMuc3VibWl0VXJsPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgQWNyb2JhdDcgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImFjcm9iYXQ3IiwhMCk7dGhpcy5keW5hbWljUmVuZGVyPW51bGx9fWNsYXNzIEFEQkVfSlNDb25zb2xlIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJBREJFX0pTQ29uc29sZSIsWyJkZWxlZ2F0ZSIsIkVuYWJsZSIsIkRpc2FibGUiXSl9fWNsYXNzIEFEQkVfSlNEZWJ1Z2dlciBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiQURCRV9KU0RlYnVnZ2VyIixbImRlbGVnYXRlIiwiRW5hYmxlIiwiRGlzYWJsZSJdKX19Y2xhc3MgQWRkU2lsZW50UHJpbnQgZXh0ZW5kcyBPcHRpb24wMXtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiYWRkU2lsZW50UHJpbnQiKX19Y2xhc3MgQWRkVmlld2VyUHJlZmVyZW5jZXMgZXh0ZW5kcyBPcHRpb24wMXtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiYWRkVmlld2VyUHJlZmVyZW5jZXMiKX19Y2xhc3MgQWRqdXN0RGF0YSBleHRlbmRzIE9wdGlvbjEwe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJhZGp1c3REYXRhIil9fWNsYXNzIEFkb2JlRXh0ZW5zaW9uTGV2ZWwgZXh0ZW5kcyBJbnRlZ2VyT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJhZG9iZUV4dGVuc2lvbkxldmVsIiwwLChlPT5lPj0xJiZlPD04KSl9fWNsYXNzIEFnZW50IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJhZ2VudCIsITApO3RoaXMubmFtZT1lLm5hbWU/ZS5uYW1lLnRyaW0oKToiIjt0aGlzLmNvbW1vbj1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIEFsd2F5c0VtYmVkIGV4dGVuZHMgQ29udGVudE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiYWx3YXlzRW1iZWQiKX19Y2xhc3MgQW1kIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJhbWQiKX19Y2xhc3MgY29uZmlnX0FyZWEgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImFyZWEiKTt0aGlzLmxldmVsPWdldEludGVnZXIoe2RhdGE6ZS5sZXZlbCxkZWZhdWx0VmFsdWU6MCx2YWxpZGF0ZTplPT5lPj0xJiZlPD0zfSk7dGhpcy5uYW1lPWdldFN0cmluZ09wdGlvbihlLm5hbWUsWyIiLCJiYXJjb2RlIiwiY29yZWluaXQiLCJkZXZpY2VEcml2ZXIiLCJmb250IiwiZ2VuZXJhbCIsImxheW91dCIsIm1lcmdlIiwic2NyaXB0Iiwic2lnbmF0dXJlIiwic291cmNlU2V0IiwidGVtcGxhdGVDYWNoZSJdKX19Y2xhc3MgQXR0cmlidXRlcyBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiYXR0cmlidXRlcyIsWyJwcmVzZXJ2ZSIsImRlbGVnYXRlIiwiaWdub3JlIl0pfX1jbGFzcyBBdXRvU2F2ZSBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiYXV0b1NhdmUiLFsiZGlzYWJsZWQiLCJlbmFibGVkIl0pfX1jbGFzcyBCYXNlIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJiYXNlIil9fWNsYXNzIEJhdGNoT3V0cHV0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJiYXRjaE91dHB1dCIpO3RoaXMuZm9ybWF0PWdldFN0cmluZ09wdGlvbihlLmZvcm1hdCxbIm5vbmUiLCJjb25jYXQiLCJ6aXAiLCJ6aXBDb21wcmVzcyJdKX19Y2xhc3MgQmVoYXZpb3JPdmVycmlkZSBleHRlbmRzIENvbnRlbnRPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImJlaGF2aW9yT3ZlcnJpZGUiKX1bc3JdKCl7dGhpc1tlcl09bmV3IE1hcCh0aGlzW2VyXS50cmltKCkuc3BsaXQoL1xzKy8pLmZpbHRlcigoZT0+ZS5pbmNsdWRlcygiOiIpKSkubWFwKChlPT5lLnNwbGl0KCI6IiwyKSkpKX19Y2xhc3MgQ2FjaGUgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImNhY2hlIiwhMCk7dGhpcy50ZW1wbGF0ZUNhY2hlPW51bGx9fWNsYXNzIENoYW5nZSBleHRlbmRzIE9wdGlvbjAxe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJjaGFuZ2UiKX19Y2xhc3MgQ29tbW9uIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJjb21tb24iLCEwKTt0aGlzLmRhdGE9bnVsbDt0aGlzLmxvY2FsZT1udWxsO3RoaXMubG9jYWxlU2V0PW51bGw7dGhpcy5tZXNzYWdpbmc9bnVsbDt0aGlzLnN1cHByZXNzQmFubmVyPW51bGw7dGhpcy50ZW1wbGF0ZT1udWxsO3RoaXMudmFsaWRhdGlvbk1lc3NhZ2luZz1udWxsO3RoaXMudmVyc2lvbkNvbnRyb2w9bnVsbDt0aGlzLmxvZz1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIENvbXByZXNzIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJjb21wcmVzcyIpO3RoaXMuc2NvcGU9Z2V0U3RyaW5nT3B0aW9uKGUuc2NvcGUsWyJpbWFnZU9ubHkiLCJkb2N1bWVudCJdKX19Y2xhc3MgQ29tcHJlc3NMb2dpY2FsU3RydWN0dXJlIGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImNvbXByZXNzTG9naWNhbFN0cnVjdHVyZSIpfX1jbGFzcyBDb21wcmVzc09iamVjdFN0cmVhbSBleHRlbmRzIE9wdGlvbjEwe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJjb21wcmVzc09iamVjdFN0cmVhbSIpfX1jbGFzcyBDb21wcmVzc2lvbiBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiY29tcHJlc3Npb24iLCEwKTt0aGlzLmNvbXByZXNzTG9naWNhbFN0cnVjdHVyZT1udWxsO3RoaXMuY29tcHJlc3NPYmplY3RTdHJlYW09bnVsbDt0aGlzLmxldmVsPW51bGw7dGhpcy50eXBlPW51bGx9fWNsYXNzIENvbmZpZyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiY29uZmlnIiwhMCk7dGhpcy5hY3JvYmF0PW51bGw7dGhpcy5wcmVzZW50PW51bGw7dGhpcy50cmFjZT1udWxsO3RoaXMuYWdlbnQ9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBDb25mb3JtYW5jZSBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiY29uZm9ybWFuY2UiLFsiQSIsIkIiXSl9fWNsYXNzIENvbnRlbnRDb3B5IGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImNvbnRlbnRDb3B5Iil9fWNsYXNzIENvcGllcyBleHRlbmRzIEludGVnZXJPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImNvcGllcyIsMSwoZT0+ZT49MSkpfX1jbGFzcyBDcmVhdG9yIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJjcmVhdG9yIil9fWNsYXNzIEN1cnJlbnRQYWdlIGV4dGVuZHMgSW50ZWdlck9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiY3VycmVudFBhZ2UiLDAsKGU9PmU+PTApKX19Y2xhc3MgRGF0YSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiZGF0YSIsITApO3RoaXMuYWRqdXN0RGF0YT1udWxsO3RoaXMuYXR0cmlidXRlcz1udWxsO3RoaXMuaW5jcmVtZW50YWxMb2FkPW51bGw7dGhpcy5vdXRwdXRYU0w9bnVsbDt0aGlzLnJhbmdlPW51bGw7dGhpcy5yZWNvcmQ9bnVsbDt0aGlzLnN0YXJ0Tm9kZT1udWxsO3RoaXMudXJpPW51bGw7dGhpcy53aW5kb3c9bnVsbDt0aGlzLnhzbD1udWxsO3RoaXMuZXhjbHVkZU5TPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnRyYW5zZm9ybT1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIERlYnVnIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJkZWJ1ZyIsITApO3RoaXMudXJpPW51bGx9fWNsYXNzIERlZmF1bHRUeXBlZmFjZSBleHRlbmRzIENvbnRlbnRPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImRlZmF1bHRUeXBlZmFjZSIpO3RoaXMud3JpdGluZ1NjcmlwdD1nZXRTdHJpbmdPcHRpb24oZS53cml0aW5nU2NyaXB0LFsiKiIsIkFyYWJpYyIsIkN5cmlsbGljIiwiRWFzdEV1cm9wZWFuUm9tYW4iLCJHcmVlayIsIkhlYnJldyIsIkphcGFuZXNlIiwiS29yZWFuIiwiUm9tYW4iLCJTaW1wbGlmaWVkQ2hpbmVzZSIsIlRoYWkiLCJUcmFkaXRpb25hbENoaW5lc2UiLCJWaWV0bmFtZXNlIl0pfX1jbGFzcyBEZXN0aW5hdGlvbiBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiZGVzdGluYXRpb24iLFsicGRmIiwicGNsIiwicHMiLCJ3ZWJDbGllbnQiLCJ6cGwiXSl9fWNsYXNzIERvY3VtZW50QXNzZW1ibHkgZXh0ZW5kcyBPcHRpb24wMXtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiZG9jdW1lbnRBc3NlbWJseSIpfX1jbGFzcyBEcml2ZXIgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImRyaXZlciIsITApO3RoaXMubmFtZT1lLm5hbWU/ZS5uYW1lLnRyaW0oKToiIjt0aGlzLmZvbnRJbmZvPW51bGw7dGhpcy54ZGM9bnVsbH19Y2xhc3MgRHVwbGV4T3B0aW9uIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJkdXBsZXhPcHRpb24iLFsic2ltcGxleCIsImR1cGxleEZsaXBMb25nRWRnZSIsImR1cGxleEZsaXBTaG9ydEVkZ2UiXSl9fWNsYXNzIER5bmFtaWNSZW5kZXIgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImR5bmFtaWNSZW5kZXIiLFsiZm9yYmlkZGVuIiwicmVxdWlyZWQiXSl9fWNsYXNzIEVtYmVkIGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImVtYmVkIil9fWNsYXNzIGNvbmZpZ19FbmNyeXB0IGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImVuY3J5cHQiKX19Y2xhc3MgY29uZmlnX0VuY3J5cHRpb24gZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImVuY3J5cHRpb24iLCEwKTt0aGlzLmVuY3J5cHQ9bnVsbDt0aGlzLmVuY3J5cHRpb25MZXZlbD1udWxsO3RoaXMucGVybWlzc2lvbnM9bnVsbH19Y2xhc3MgRW5jcnlwdGlvbkxldmVsIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJlbmNyeXB0aW9uTGV2ZWwiLFsiNDBiaXQiLCIxMjhiaXQiXSl9fWNsYXNzIEVuZm9yY2UgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImVuZm9yY2UiKX19Y2xhc3MgRXF1YXRlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJlcXVhdGUiKTt0aGlzLmZvcmNlPWdldEludGVnZXIoe2RhdGE6ZS5mb3JjZSxkZWZhdWx0VmFsdWU6MSx2YWxpZGF0ZTplPT4wPT09ZX0pO3RoaXMuZnJvbT1lLmZyb218fCIiO3RoaXMudG89ZS50b3x8IiJ9fWNsYXNzIEVxdWF0ZVJhbmdlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJlcXVhdGVSYW5nZSIpO3RoaXMuZnJvbT1lLmZyb218fCIiO3RoaXMudG89ZS50b3x8IiI7dGhpcy5fdW5pY29kZVJhbmdlPWUudW5pY29kZVJhbmdlfHwiIn1nZXQgdW5pY29kZVJhbmdlKCl7Y29uc3QgZT1bXSx0PS9VXCsoWzAtOWEtZkEtRl0rKS8saT10aGlzLl91bmljb2RlUmFuZ2U7Zm9yKGxldCBhIG9mIGkuc3BsaXQoIiwiKS5tYXAoKGU9PmUudHJpbSgpKSkuZmlsdGVyKChlPT4hIWUpKSl7YT1hLnNwbGl0KCItIiwyKS5tYXAoKGU9Pntjb25zdCBpPWUubWF0Y2godCk7cmV0dXJuIGk/cGFyc2VJbnQoaVsxXSwxNik6MH0pKTsxPT09YS5sZW5ndGgmJmEucHVzaChhWzBdKTtlLnB1c2goYSl9cmV0dXJuIHNoYWRvdyh0aGlzLCJ1bmljb2RlUmFuZ2UiLGUpfX1jbGFzcyBFeGNsdWRlIGV4dGVuZHMgQ29udGVudE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiZXhjbHVkZSIpfVtzcl0oKXt0aGlzW2VyXT10aGlzW2VyXS50cmltKCkuc3BsaXQoL1xzKy8pLmZpbHRlcigoZT0+ZSYmWyJjYWxjdWxhdGUiLCJjbG9zZSIsImVudGVyIiwiZXhpdCIsImluaXRpYWxpemUiLCJyZWFkeSIsInZhbGlkYXRlIl0uaW5jbHVkZXMoZSkpKX19Y2xhc3MgRXhjbHVkZU5TIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJleGNsdWRlTlMiKX19Y2xhc3MgRmxpcExhYmVsIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJmbGlwTGFiZWwiLFsidXNlUHJpbnRlclNldHRpbmciLCJvbiIsIm9mZiJdKX19Y2xhc3MgY29uZmlnX0ZvbnRJbmZvIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJmb250SW5mbyIsITApO3RoaXMuZW1iZWQ9bnVsbDt0aGlzLm1hcD1udWxsO3RoaXMuc3Vic2V0QmVsb3c9bnVsbDt0aGlzLmFsd2F5c0VtYmVkPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLmRlZmF1bHRUeXBlZmFjZT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5uZXZlckVtYmVkPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgRm9ybUZpZWxkRmlsbGluZyBleHRlbmRzIE9wdGlvbjAxe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJmb3JtRmllbGRGaWxsaW5nIil9fWNsYXNzIEdyb3VwUGFyZW50IGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJncm91cFBhcmVudCIpfX1jbGFzcyBJZkVtcHR5IGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJpZkVtcHR5IixbImRhdGFWYWx1ZSIsImRhdGFHcm91cCIsImlnbm9yZSIsInJlbW92ZSJdKX19Y2xhc3MgSW5jbHVkZVhEUENvbnRlbnQgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImluY2x1ZGVYRFBDb250ZW50Iil9fWNsYXNzIEluY3JlbWVudGFsTG9hZCBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiaW5jcmVtZW50YWxMb2FkIixbIm5vbmUiLCJmb3J3YXJkT25seSJdKX19Y2xhc3MgSW5jcmVtZW50YWxNZXJnZSBleHRlbmRzIE9wdGlvbjAxe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJpbmNyZW1lbnRhbE1lcmdlIil9fWNsYXNzIEludGVyYWN0aXZlIGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImludGVyYWN0aXZlIil9fWNsYXNzIEpvZyBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwiam9nIixbInVzZVByaW50ZXJTZXR0aW5nIiwibm9uZSIsInBhZ2VTZXQiXSl9fWNsYXNzIExhYmVsUHJpbnRlciBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibGFiZWxQcmludGVyIiwhMCk7dGhpcy5uYW1lPWdldFN0cmluZ09wdGlvbihlLm5hbWUsWyJ6cGwiLCJkcGwiLCJpcGwiLCJ0Y3BsIl0pO3RoaXMuYmF0Y2hPdXRwdXQ9bnVsbDt0aGlzLmZsaXBMYWJlbD1udWxsO3RoaXMuZm9udEluZm89bnVsbDt0aGlzLnhkYz1udWxsfX1jbGFzcyBMYXlvdXQgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImxheW91dCIsWyJwYWdpbmF0ZSIsInBhbmVsIl0pfX1jbGFzcyBMZXZlbCBleHRlbmRzIEludGVnZXJPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sImxldmVsIiwwLChlPT5lPjApKX19Y2xhc3MgTGluZWFyaXplZCBleHRlbmRzIE9wdGlvbjAxe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJsaW5lYXJpemVkIil9fWNsYXNzIExvY2FsZSBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibG9jYWxlIil9fWNsYXNzIExvY2FsZVNldCBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibG9jYWxlU2V0Iil9fWNsYXNzIExvZyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibG9nIiwhMCk7dGhpcy5tb2RlPW51bGw7dGhpcy50aHJlc2hvbGQ9bnVsbDt0aGlzLnRvPW51bGw7dGhpcy51cmk9bnVsbH19Y2xhc3MgTWFwRWxlbWVudCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibWFwIiwhMCk7dGhpcy5lcXVhdGU9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuZXF1YXRlUmFuZ2U9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBNZWRpdW1JbmZvIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJtZWRpdW1JbmZvIiwhMCk7dGhpcy5tYXA9bnVsbH19Y2xhc3MgY29uZmlnX01lc3NhZ2UgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sIm1lc3NhZ2UiLCEwKTt0aGlzLm1zZ0lkPW51bGw7dGhpcy5zZXZlcml0eT1udWxsfX1jbGFzcyBNZXNzYWdpbmcgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sIm1lc3NhZ2luZyIsITApO3RoaXMubWVzc2FnZT1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIE1vZGUgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sIm1vZGUiLFsiYXBwZW5kIiwib3ZlcndyaXRlIl0pfX1jbGFzcyBNb2RpZnlBbm5vdHMgZXh0ZW5kcyBPcHRpb24wMXtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibW9kaWZ5QW5ub3RzIil9fWNsYXNzIE1zZ0lkIGV4dGVuZHMgSW50ZWdlck9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibXNnSWQiLDEsKGU9PmU+PTEpKX19Y2xhc3MgTmFtZUF0dHIgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sIm5hbWVBdHRyIil9fWNsYXNzIE5ldmVyRW1iZWQgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJuZXZlckVtYmVkIil9fWNsYXNzIE51bWJlck9mQ29waWVzIGV4dGVuZHMgSW50ZWdlck9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwibnVtYmVyT2ZDb3BpZXMiLG51bGwsKGU9PmU+PTImJmU8PTUpKX19Y2xhc3MgT3BlbkFjdGlvbiBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwib3BlbkFjdGlvbiIsITApO3RoaXMuZGVzdGluYXRpb249bnVsbH19Y2xhc3MgT3V0cHV0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJvdXRwdXQiLCEwKTt0aGlzLnRvPW51bGw7dGhpcy50eXBlPW51bGw7dGhpcy51cmk9bnVsbH19Y2xhc3MgT3V0cHV0QmluIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJvdXRwdXRCaW4iKX19Y2xhc3MgT3V0cHV0WFNMIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJvdXRwdXRYU0wiLCEwKTt0aGlzLnVyaT1udWxsfX1jbGFzcyBPdmVycHJpbnQgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sIm92ZXJwcmludCIsWyJub25lIiwiYm90aCIsImRyYXciLCJmaWVsZCJdKX19Y2xhc3MgUGFja2V0cyBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwicGFja2V0cyIpfVtzcl0oKXsiKiIhPT10aGlzW2VyXSYmKHRoaXNbZXJdPXRoaXNbZXJdLnRyaW0oKS5zcGxpdCgvXHMrLykuZmlsdGVyKChlPT5bImNvbmZpZyIsImRhdGFzZXRzIiwidGVtcGxhdGUiLCJ4ZmRmIiwieHNsdCJdLmluY2x1ZGVzKGUpKSkpfX1jbGFzcyBQYWdlT2Zmc2V0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwYWdlT2Zmc2V0Iik7dGhpcy54PWdldEludGVnZXIoe2RhdGE6ZS54LGRlZmF1bHRWYWx1ZToidXNlWERDU2V0dGluZyIsdmFsaWRhdGU6ZT0+ITB9KTt0aGlzLnk9Z2V0SW50ZWdlcih7ZGF0YTplLnksZGVmYXVsdFZhbHVlOiJ1c2VYRENTZXR0aW5nIix2YWxpZGF0ZTplPT4hMH0pfX1jbGFzcyBQYWdlUmFuZ2UgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInBhZ2VSYW5nZSIpfVtzcl0oKXtjb25zdCBlPXRoaXNbZXJdLnRyaW0oKS5zcGxpdCgvXHMrLykubWFwKChlPT5wYXJzZUludChlLDEwKSkpLHQ9W107Zm9yKGxldCBpPTAsYT1lLmxlbmd0aDtpPGE7aSs9Mil0LnB1c2goZS5zbGljZShpLGkrMikpO3RoaXNbZXJdPXR9fWNsYXNzIFBhZ2luYXRpb24gZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInBhZ2luYXRpb24iLFsic2ltcGxleCIsImR1cGxleFNob3J0RWRnZSIsImR1cGxleExvbmdFZGdlIl0pfX1jbGFzcyBQYWdpbmF0aW9uT3ZlcnJpZGUgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInBhZ2luYXRpb25PdmVycmlkZSIsWyJub25lIiwiZm9yY2VEdXBsZXgiLCJmb3JjZUR1cGxleExvbmdFZGdlIiwiZm9yY2VEdXBsZXhTaG9ydEVkZ2UiLCJmb3JjZVNpbXBsZXgiXSl9fWNsYXNzIFBhcnQgZXh0ZW5kcyBJbnRlZ2VyT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwYXJ0IiwxLChlPT4hMSkpfX1jbGFzcyBQY2wgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInBjbCIsITApO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMuYmF0Y2hPdXRwdXQ9bnVsbDt0aGlzLmZvbnRJbmZvPW51bGw7dGhpcy5qb2c9bnVsbDt0aGlzLm1lZGl1bUluZm89bnVsbDt0aGlzLm91dHB1dEJpbj1udWxsO3RoaXMucGFnZU9mZnNldD1udWxsO3RoaXMuc3RhcGxlPW51bGw7dGhpcy54ZGM9bnVsbH19Y2xhc3MgUGRmIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwZGYiLCEwKTt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLmFkb2JlRXh0ZW5zaW9uTGV2ZWw9bnVsbDt0aGlzLmJhdGNoT3V0cHV0PW51bGw7dGhpcy5jb21wcmVzc2lvbj1udWxsO3RoaXMuY3JlYXRvcj1udWxsO3RoaXMuZW5jcnlwdGlvbj1udWxsO3RoaXMuZm9udEluZm89bnVsbDt0aGlzLmludGVyYWN0aXZlPW51bGw7dGhpcy5saW5lYXJpemVkPW51bGw7dGhpcy5vcGVuQWN0aW9uPW51bGw7dGhpcy5wZGZhPW51bGw7dGhpcy5wcm9kdWNlcj1udWxsO3RoaXMucmVuZGVyUG9saWN5PW51bGw7dGhpcy5zY3JpcHRNb2RlbD1udWxsO3RoaXMuc2lsZW50UHJpbnQ9bnVsbDt0aGlzLnN1Ym1pdEZvcm1hdD1udWxsO3RoaXMudGFnZ2VkPW51bGw7dGhpcy52ZXJzaW9uPW51bGw7dGhpcy52aWV3ZXJQcmVmZXJlbmNlcz1udWxsO3RoaXMueGRjPW51bGx9fWNsYXNzIFBkZmEgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInBkZmEiLCEwKTt0aGlzLmFtZD1udWxsO3RoaXMuY29uZm9ybWFuY2U9bnVsbDt0aGlzLmluY2x1ZGVYRFBDb250ZW50PW51bGw7dGhpcy5wYXJ0PW51bGx9fWNsYXNzIFBlcm1pc3Npb25zIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwZXJtaXNzaW9ucyIsITApO3RoaXMuYWNjZXNzaWJsZUNvbnRlbnQ9bnVsbDt0aGlzLmNoYW5nZT1udWxsO3RoaXMuY29udGVudENvcHk9bnVsbDt0aGlzLmRvY3VtZW50QXNzZW1ibHk9bnVsbDt0aGlzLmZvcm1GaWVsZEZpbGxpbmc9bnVsbDt0aGlzLm1vZGlmeUFubm90cz1udWxsO3RoaXMucGxhaW50ZXh0TWV0YWRhdGE9bnVsbDt0aGlzLnByaW50PW51bGw7dGhpcy5wcmludEhpZ2hRdWFsaXR5PW51bGx9fWNsYXNzIFBpY2tUcmF5QnlQREZTaXplIGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInBpY2tUcmF5QnlQREZTaXplIil9fWNsYXNzIGNvbmZpZ19QaWN0dXJlIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwaWN0dXJlIil9fWNsYXNzIFBsYWludGV4dE1ldGFkYXRhIGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInBsYWludGV4dE1ldGFkYXRhIil9fWNsYXNzIFByZXNlbmNlIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwcmVzZW5jZSIsWyJwcmVzZXJ2ZSIsImRpc3NvbHZlIiwiZGlzc29sdmVTdHJ1Y3R1cmUiLCJpZ25vcmUiLCJyZW1vdmUiXSl9fWNsYXNzIFByZXNlbnQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInByZXNlbnQiLCEwKTt0aGlzLmJlaGF2aW9yT3ZlcnJpZGU9bnVsbDt0aGlzLmNhY2hlPW51bGw7dGhpcy5jb21tb249bnVsbDt0aGlzLmNvcGllcz1udWxsO3RoaXMuZGVzdGluYXRpb249bnVsbDt0aGlzLmluY3JlbWVudGFsTWVyZ2U9bnVsbDt0aGlzLmxheW91dD1udWxsO3RoaXMub3V0cHV0PW51bGw7dGhpcy5vdmVycHJpbnQ9bnVsbDt0aGlzLnBhZ2luYXRpb249bnVsbDt0aGlzLnBhZ2luYXRpb25PdmVycmlkZT1udWxsO3RoaXMuc2NyaXB0PW51bGw7dGhpcy52YWxpZGF0ZT1udWxsO3RoaXMueGRwPW51bGw7dGhpcy5kcml2ZXI9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMubGFiZWxQcmludGVyPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnBjbD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy5wZGY9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMucHM9bmV3IFhGQU9iamVjdEFycmF5O3RoaXMuc3VibWl0VXJsPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLndlYkNsaWVudD1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy56cGw9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBQcmludCBleHRlbmRzIE9wdGlvbjAxe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwcmludCIpfX1jbGFzcyBQcmludEhpZ2hRdWFsaXR5IGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInByaW50SGlnaFF1YWxpdHkiKX19Y2xhc3MgUHJpbnRTY2FsaW5nIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwcmludFNjYWxpbmciLFsiYXBwZGVmYXVsdCIsIm5vU2NhbGluZyJdKX19Y2xhc3MgUHJpbnRlck5hbWUgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInByaW50ZXJOYW1lIil9fWNsYXNzIFByb2R1Y2VyIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJwcm9kdWNlciIpfX1jbGFzcyBQcyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwicHMiLCEwKTt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLmJhdGNoT3V0cHV0PW51bGw7dGhpcy5mb250SW5mbz1udWxsO3RoaXMuam9nPW51bGw7dGhpcy5tZWRpdW1JbmZvPW51bGw7dGhpcy5vdXRwdXRCaW49bnVsbDt0aGlzLnN0YXBsZT1udWxsO3RoaXMueGRjPW51bGx9fWNsYXNzIFJhbmdlIGV4dGVuZHMgQ29udGVudE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwicmFuZ2UiKX1bc3JdKCl7dGhpc1tlcl09dGhpc1tlcl0udHJpbSgpLnNwbGl0KC9ccyosXHMqLywyKS5tYXAoKGU9PmUuc3BsaXQoIi0iKS5tYXAoKGU9PnBhcnNlSW50KGUudHJpbSgpLDEwKSkpKSkuZmlsdGVyKChlPT5lLmV2ZXJ5KChlPT4haXNOYU4oZSkpKSkpLm1hcCgoZT0+ezE9PT1lLmxlbmd0aCYmZS5wdXNoKGVbMF0pO3JldHVybiBlfSkpfX1jbGFzcyBSZWNvcmQgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJyZWNvcmQiKX1bc3JdKCl7dGhpc1tlcl09dGhpc1tlcl0udHJpbSgpO2NvbnN0IGU9cGFyc2VJbnQodGhpc1tlcl0sMTApOyFpc05hTihlKSYmZT49MCYmKHRoaXNbZXJdPWUpfX1jbGFzcyBSZWxldmFudCBleHRlbmRzIENvbnRlbnRPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInJlbGV2YW50Iil9W3NyXSgpe3RoaXNbZXJdPXRoaXNbZXJdLnRyaW0oKS5zcGxpdCgvXHMrLyl9fWNsYXNzIFJlbmFtZSBleHRlbmRzIENvbnRlbnRPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInJlbmFtZSIpfVtzcl0oKXt0aGlzW2VyXT10aGlzW2VyXS50cmltKCk7KHRoaXNbZXJdLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aCgieG1sIil8fG5ldyBSZWdFeHAoIltcXHB7TH1fXVtcXHB7TH1cXGQuX1xccHtNfS1dKiIsInUiKS50ZXN0KHRoaXNbZXJdKSkmJndhcm4oIlhGQSAtIFJlbmFtZTogaW52YWxpZCBYRkEgbmFtZSIpfX1jbGFzcyBSZW5kZXJQb2xpY3kgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInJlbmRlclBvbGljeSIsWyJzZXJ2ZXIiLCJjbGllbnQiXSl9fWNsYXNzIFJ1blNjcmlwdHMgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInJ1blNjcmlwdHMiLFsiYm90aCIsImNsaWVudCIsIm5vbmUiLCJzZXJ2ZXIiXSl9fWNsYXNzIGNvbmZpZ19TY3JpcHQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInNjcmlwdCIsITApO3RoaXMuY3VycmVudFBhZ2U9bnVsbDt0aGlzLmV4Y2x1ZGU9bnVsbDt0aGlzLnJ1blNjcmlwdHM9bnVsbH19Y2xhc3MgU2NyaXB0TW9kZWwgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInNjcmlwdE1vZGVsIixbIlhGQSIsIm5vbmUiXSl9fWNsYXNzIFNldmVyaXR5IGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJzZXZlcml0eSIsWyJpZ25vcmUiLCJlcnJvciIsImluZm9ybWF0aW9uIiwidHJhY2UiLCJ3YXJuaW5nIl0pfX1jbGFzcyBTaWxlbnRQcmludCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwic2lsZW50UHJpbnQiLCEwKTt0aGlzLmFkZFNpbGVudFByaW50PW51bGw7dGhpcy5wcmludGVyTmFtZT1udWxsfX1jbGFzcyBTdGFwbGUgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInN0YXBsZSIpO3RoaXMubW9kZT1nZXRTdHJpbmdPcHRpb24oZS5tb2RlLFsidXNlUHJpbnRlclNldHRpbmciLCJvbiIsIm9mZiJdKX19Y2xhc3MgU3RhcnROb2RlIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJzdGFydE5vZGUiKX19Y2xhc3MgU3RhcnRQYWdlIGV4dGVuZHMgSW50ZWdlck9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwic3RhcnRQYWdlIiwwLChlPT4hMCkpfX1jbGFzcyBTdWJtaXRGb3JtYXQgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInN1Ym1pdEZvcm1hdCIsWyJodG1sIiwiZGVsZWdhdGUiLCJmZGYiLCJ4bWwiLCJwZGYiXSl9fWNsYXNzIFN1Ym1pdFVybCBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwic3VibWl0VXJsIil9fWNsYXNzIFN1YnNldEJlbG93IGV4dGVuZHMgSW50ZWdlck9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwic3Vic2V0QmVsb3ciLDEwMCwoZT0+ZT49MCYmZTw9MTAwKSl9fWNsYXNzIFN1cHByZXNzQmFubmVyIGV4dGVuZHMgT3B0aW9uMDF7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInN1cHByZXNzQmFubmVyIil9fWNsYXNzIFRhZ2dlZCBleHRlbmRzIE9wdGlvbjAxe2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJ0YWdnZWQiKX19Y2xhc3MgY29uZmlnX1RlbXBsYXRlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJ0ZW1wbGF0ZSIsITApO3RoaXMuYmFzZT1udWxsO3RoaXMucmVsZXZhbnQ9bnVsbDt0aGlzLnN0YXJ0UGFnZT1udWxsO3RoaXMudXJpPW51bGw7dGhpcy54c2w9bnVsbH19Y2xhc3MgVGhyZXNob2xkIGV4dGVuZHMgT3B0aW9uT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJ0aHJlc2hvbGQiLFsidHJhY2UiLCJlcnJvciIsImluZm9ybWF0aW9uIiwid2FybmluZyJdKX19Y2xhc3MgVG8gZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInRvIixbIm51bGwiLCJtZW1vcnkiLCJzdGRlcnIiLCJzdGRvdXQiLCJzeXN0ZW0iLCJ1cmkiXSl9fWNsYXNzIFRlbXBsYXRlQ2FjaGUgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInRlbXBsYXRlQ2FjaGUiKTt0aGlzLm1heEVudHJpZXM9Z2V0SW50ZWdlcih7ZGF0YTplLm1heEVudHJpZXMsZGVmYXVsdFZhbHVlOjUsdmFsaWRhdGU6ZT0+ZT49MH0pfX1jbGFzcyBUcmFjZSBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwidHJhY2UiLCEwKTt0aGlzLmFyZWE9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBUcmFuc2Zvcm0gZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInRyYW5zZm9ybSIsITApO3RoaXMuZ3JvdXBQYXJlbnQ9bnVsbDt0aGlzLmlmRW1wdHk9bnVsbDt0aGlzLm5hbWVBdHRyPW51bGw7dGhpcy5waWN0dXJlPW51bGw7dGhpcy5wcmVzZW5jZT1udWxsO3RoaXMucmVuYW1lPW51bGw7dGhpcy53aGl0ZXNwYWNlPW51bGx9fWNsYXNzIFR5cGUgZXh0ZW5kcyBPcHRpb25PYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInR5cGUiLFsibm9uZSIsImFzY2lpODUiLCJhc2NpaUhleCIsImNjaXR0ZmF4IiwiZmxhdGUiLCJsenciLCJydW5MZW5ndGgiLCJuYXRpdmUiLCJ4ZHAiLCJtZXJnZWRYRFAiXSl9fWNsYXNzIFVyaSBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwidXJpIil9fWNsYXNzIGNvbmZpZ19WYWxpZGF0ZSBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwidmFsaWRhdGUiLFsicHJlU3VibWl0IiwicHJlUHJpbnQiLCJwcmVFeGVjdXRlIiwicHJlU2F2ZSJdKX19Y2xhc3MgVmFsaWRhdGVBcHByb3ZhbFNpZ25hdHVyZXMgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJ2YWxpZGF0ZUFwcHJvdmFsU2lnbmF0dXJlcyIpfVtzcl0oKXt0aGlzW2VyXT10aGlzW2VyXS50cmltKCkuc3BsaXQoL1xzKy8pLmZpbHRlcigoZT0+WyJkb2NSZWFkeSIsInBvc3RTaWduIl0uaW5jbHVkZXMoZSkpKX19Y2xhc3MgVmFsaWRhdGlvbk1lc3NhZ2luZyBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwidmFsaWRhdGlvbk1lc3NhZ2luZyIsWyJhbGxNZXNzYWdlc0luZGl2aWR1YWxseSIsImFsbE1lc3NhZ2VzVG9nZXRoZXIiLCJmaXJzdE1lc3NhZ2VPbmx5Iiwibm9NZXNzYWdlcyJdKX19Y2xhc3MgVmVyc2lvbiBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwidmVyc2lvbiIsWyIxLjciLCIxLjYiLCIxLjUiLCIxLjQiLCIxLjMiLCIxLjIiXSl9fWNsYXNzIFZlcnNpb25Db250cm9sIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJWZXJzaW9uQ29udHJvbCIpO3RoaXMub3V0cHV0QmVsb3c9Z2V0U3RyaW5nT3B0aW9uKGUub3V0cHV0QmVsb3csWyJ3YXJuIiwiZXJyb3IiLCJ1cGRhdGUiXSk7dGhpcy5zb3VyY2VBYm92ZT1nZXRTdHJpbmdPcHRpb24oZS5zb3VyY2VBYm92ZSxbIndhcm4iLCJlcnJvciJdKTt0aGlzLnNvdXJjZUJlbG93PWdldFN0cmluZ09wdGlvbihlLnNvdXJjZUJlbG93LFsidXBkYXRlIiwibWFpbnRhaW4iXSl9fWNsYXNzIFZpZXdlclByZWZlcmVuY2VzIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJ2aWV3ZXJQcmVmZXJlbmNlcyIsITApO3RoaXMuQURCRV9KU0NvbnNvbGU9bnVsbDt0aGlzLkFEQkVfSlNEZWJ1Z2dlcj1udWxsO3RoaXMuYWRkVmlld2VyUHJlZmVyZW5jZXM9bnVsbDt0aGlzLmR1cGxleE9wdGlvbj1udWxsO3RoaXMuZW5mb3JjZT1udWxsO3RoaXMubnVtYmVyT2ZDb3BpZXM9bnVsbDt0aGlzLnBhZ2VSYW5nZT1udWxsO3RoaXMucGlja1RyYXlCeVBERlNpemU9bnVsbDt0aGlzLnByaW50U2NhbGluZz1udWxsfX1jbGFzcyBXZWJDbGllbnQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sIndlYkNsaWVudCIsITApO3RoaXMubmFtZT1lLm5hbWU/ZS5uYW1lLnRyaW0oKToiIjt0aGlzLmZvbnRJbmZvPW51bGw7dGhpcy54ZGM9bnVsbH19Y2xhc3MgV2hpdGVzcGFjZSBleHRlbmRzIE9wdGlvbk9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihxbiwid2hpdGVzcGFjZSIsWyJwcmVzZXJ2ZSIsImx0cmltIiwibm9ybWFsaXplIiwicnRyaW0iLCJ0cmltIl0pfX1jbGFzcyBXaW5kb3cgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJ3aW5kb3ciKX1bc3JdKCl7Y29uc3QgZT10aGlzW2VyXS50cmltKCkuc3BsaXQoL1xzKixccyovLDIpLm1hcCgoZT0+cGFyc2VJbnQoZSwxMCkpKTtpZihlLnNvbWUoKGU9PmlzTmFOKGUpKSkpdGhpc1tlcl09WzAsMF07ZWxzZXsxPT09ZS5sZW5ndGgmJmUucHVzaChlWzBdKTt0aGlzW2VyXT1lfX19Y2xhc3MgWGRjIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKHFuLCJ4ZGMiLCEwKTt0aGlzLnVyaT1uZXcgWEZBT2JqZWN0QXJyYXk7dGhpcy54c2w9bmV3IFhGQU9iamVjdEFycmF5fX1jbGFzcyBYZHAgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInhkcCIsITApO3RoaXMucGFja2V0cz1udWxsfX1jbGFzcyBYc2wgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInhzbCIsITApO3RoaXMuZGVidWc9bnVsbDt0aGlzLnVyaT1udWxsfX1jbGFzcyBacGwgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIocW4sInpwbCIsITApO3RoaXMubmFtZT1lLm5hbWU/ZS5uYW1lLnRyaW0oKToiIjt0aGlzLmJhdGNoT3V0cHV0PW51bGw7dGhpcy5mbGlwTGFiZWw9bnVsbDt0aGlzLmZvbnRJbmZvPW51bGw7dGhpcy54ZGM9bnVsbH19Y2xhc3MgQ29uZmlnTmFtZXNwYWNle3N0YXRpY1tvbl0oZSx0KXtpZihDb25maWdOYW1lc3BhY2UuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuIENvbmZpZ05hbWVzcGFjZVtlXSh0KX1zdGF0aWMgYWNyb2JhdChlKXtyZXR1cm4gbmV3IEFjcm9iYXQoZSl9c3RhdGljIGFjcm9iYXQ3KGUpe3JldHVybiBuZXcgQWNyb2JhdDcoZSl9c3RhdGljIEFEQkVfSlNDb25zb2xlKGUpe3JldHVybiBuZXcgQURCRV9KU0NvbnNvbGUoZSl9c3RhdGljIEFEQkVfSlNEZWJ1Z2dlcihlKXtyZXR1cm4gbmV3IEFEQkVfSlNEZWJ1Z2dlcihlKX1zdGF0aWMgYWRkU2lsZW50UHJpbnQoZSl7cmV0dXJuIG5ldyBBZGRTaWxlbnRQcmludChlKX1zdGF0aWMgYWRkVmlld2VyUHJlZmVyZW5jZXMoZSl7cmV0dXJuIG5ldyBBZGRWaWV3ZXJQcmVmZXJlbmNlcyhlKX1zdGF0aWMgYWRqdXN0RGF0YShlKXtyZXR1cm4gbmV3IEFkanVzdERhdGEoZSl9c3RhdGljIGFkb2JlRXh0ZW5zaW9uTGV2ZWwoZSl7cmV0dXJuIG5ldyBBZG9iZUV4dGVuc2lvbkxldmVsKGUpfXN0YXRpYyBhZ2VudChlKXtyZXR1cm4gbmV3IEFnZW50KGUpfXN0YXRpYyBhbHdheXNFbWJlZChlKXtyZXR1cm4gbmV3IEFsd2F5c0VtYmVkKGUpfXN0YXRpYyBhbWQoZSl7cmV0dXJuIG5ldyBBbWQoZSl9c3RhdGljIGFyZWEoZSl7cmV0dXJuIG5ldyBjb25maWdfQXJlYShlKX1zdGF0aWMgYXR0cmlidXRlcyhlKXtyZXR1cm4gbmV3IEF0dHJpYnV0ZXMoZSl9c3RhdGljIGF1dG9TYXZlKGUpe3JldHVybiBuZXcgQXV0b1NhdmUoZSl9c3RhdGljIGJhc2UoZSl7cmV0dXJuIG5ldyBCYXNlKGUpfXN0YXRpYyBiYXRjaE91dHB1dChlKXtyZXR1cm4gbmV3IEJhdGNoT3V0cHV0KGUpfXN0YXRpYyBiZWhhdmlvck92ZXJyaWRlKGUpe3JldHVybiBuZXcgQmVoYXZpb3JPdmVycmlkZShlKX1zdGF0aWMgY2FjaGUoZSl7cmV0dXJuIG5ldyBDYWNoZShlKX1zdGF0aWMgY2hhbmdlKGUpe3JldHVybiBuZXcgQ2hhbmdlKGUpfXN0YXRpYyBjb21tb24oZSl7cmV0dXJuIG5ldyBDb21tb24oZSl9c3RhdGljIGNvbXByZXNzKGUpe3JldHVybiBuZXcgQ29tcHJlc3MoZSl9c3RhdGljIGNvbXByZXNzTG9naWNhbFN0cnVjdHVyZShlKXtyZXR1cm4gbmV3IENvbXByZXNzTG9naWNhbFN0cnVjdHVyZShlKX1zdGF0aWMgY29tcHJlc3NPYmplY3RTdHJlYW0oZSl7cmV0dXJuIG5ldyBDb21wcmVzc09iamVjdFN0cmVhbShlKX1zdGF0aWMgY29tcHJlc3Npb24oZSl7cmV0dXJuIG5ldyBDb21wcmVzc2lvbihlKX1zdGF0aWMgY29uZmlnKGUpe3JldHVybiBuZXcgQ29uZmlnKGUpfXN0YXRpYyBjb25mb3JtYW5jZShlKXtyZXR1cm4gbmV3IENvbmZvcm1hbmNlKGUpfXN0YXRpYyBjb250ZW50Q29weShlKXtyZXR1cm4gbmV3IENvbnRlbnRDb3B5KGUpfXN0YXRpYyBjb3BpZXMoZSl7cmV0dXJuIG5ldyBDb3BpZXMoZSl9c3RhdGljIGNyZWF0b3IoZSl7cmV0dXJuIG5ldyBDcmVhdG9yKGUpfXN0YXRpYyBjdXJyZW50UGFnZShlKXtyZXR1cm4gbmV3IEN1cnJlbnRQYWdlKGUpfXN0YXRpYyBkYXRhKGUpe3JldHVybiBuZXcgRGF0YShlKX1zdGF0aWMgZGVidWcoZSl7cmV0dXJuIG5ldyBEZWJ1ZyhlKX1zdGF0aWMgZGVmYXVsdFR5cGVmYWNlKGUpe3JldHVybiBuZXcgRGVmYXVsdFR5cGVmYWNlKGUpfXN0YXRpYyBkZXN0aW5hdGlvbihlKXtyZXR1cm4gbmV3IERlc3RpbmF0aW9uKGUpfXN0YXRpYyBkb2N1bWVudEFzc2VtYmx5KGUpe3JldHVybiBuZXcgRG9jdW1lbnRBc3NlbWJseShlKX1zdGF0aWMgZHJpdmVyKGUpe3JldHVybiBuZXcgRHJpdmVyKGUpfXN0YXRpYyBkdXBsZXhPcHRpb24oZSl7cmV0dXJuIG5ldyBEdXBsZXhPcHRpb24oZSl9c3RhdGljIGR5bmFtaWNSZW5kZXIoZSl7cmV0dXJuIG5ldyBEeW5hbWljUmVuZGVyKGUpfXN0YXRpYyBlbWJlZChlKXtyZXR1cm4gbmV3IEVtYmVkKGUpfXN0YXRpYyBlbmNyeXB0KGUpe3JldHVybiBuZXcgY29uZmlnX0VuY3J5cHQoZSl9c3RhdGljIGVuY3J5cHRpb24oZSl7cmV0dXJuIG5ldyBjb25maWdfRW5jcnlwdGlvbihlKX1zdGF0aWMgZW5jcnlwdGlvbkxldmVsKGUpe3JldHVybiBuZXcgRW5jcnlwdGlvbkxldmVsKGUpfXN0YXRpYyBlbmZvcmNlKGUpe3JldHVybiBuZXcgRW5mb3JjZShlKX1zdGF0aWMgZXF1YXRlKGUpe3JldHVybiBuZXcgRXF1YXRlKGUpfXN0YXRpYyBlcXVhdGVSYW5nZShlKXtyZXR1cm4gbmV3IEVxdWF0ZVJhbmdlKGUpfXN0YXRpYyBleGNsdWRlKGUpe3JldHVybiBuZXcgRXhjbHVkZShlKX1zdGF0aWMgZXhjbHVkZU5TKGUpe3JldHVybiBuZXcgRXhjbHVkZU5TKGUpfXN0YXRpYyBmbGlwTGFiZWwoZSl7cmV0dXJuIG5ldyBGbGlwTGFiZWwoZSl9c3RhdGljIGZvbnRJbmZvKGUpe3JldHVybiBuZXcgY29uZmlnX0ZvbnRJbmZvKGUpfXN0YXRpYyBmb3JtRmllbGRGaWxsaW5nKGUpe3JldHVybiBuZXcgRm9ybUZpZWxkRmlsbGluZyhlKX1zdGF0aWMgZ3JvdXBQYXJlbnQoZSl7cmV0dXJuIG5ldyBHcm91cFBhcmVudChlKX1zdGF0aWMgaWZFbXB0eShlKXtyZXR1cm4gbmV3IElmRW1wdHkoZSl9c3RhdGljIGluY2x1ZGVYRFBDb250ZW50KGUpe3JldHVybiBuZXcgSW5jbHVkZVhEUENvbnRlbnQoZSl9c3RhdGljIGluY3JlbWVudGFsTG9hZChlKXtyZXR1cm4gbmV3IEluY3JlbWVudGFsTG9hZChlKX1zdGF0aWMgaW5jcmVtZW50YWxNZXJnZShlKXtyZXR1cm4gbmV3IEluY3JlbWVudGFsTWVyZ2UoZSl9c3RhdGljIGludGVyYWN0aXZlKGUpe3JldHVybiBuZXcgSW50ZXJhY3RpdmUoZSl9c3RhdGljIGpvZyhlKXtyZXR1cm4gbmV3IEpvZyhlKX1zdGF0aWMgbGFiZWxQcmludGVyKGUpe3JldHVybiBuZXcgTGFiZWxQcmludGVyKGUpfXN0YXRpYyBsYXlvdXQoZSl7cmV0dXJuIG5ldyBMYXlvdXQoZSl9c3RhdGljIGxldmVsKGUpe3JldHVybiBuZXcgTGV2ZWwoZSl9c3RhdGljIGxpbmVhcml6ZWQoZSl7cmV0dXJuIG5ldyBMaW5lYXJpemVkKGUpfXN0YXRpYyBsb2NhbGUoZSl7cmV0dXJuIG5ldyBMb2NhbGUoZSl9c3RhdGljIGxvY2FsZVNldChlKXtyZXR1cm4gbmV3IExvY2FsZVNldChlKX1zdGF0aWMgbG9nKGUpe3JldHVybiBuZXcgTG9nKGUpfXN0YXRpYyBtYXAoZSl7cmV0dXJuIG5ldyBNYXBFbGVtZW50KGUpfXN0YXRpYyBtZWRpdW1JbmZvKGUpe3JldHVybiBuZXcgTWVkaXVtSW5mbyhlKX1zdGF0aWMgbWVzc2FnZShlKXtyZXR1cm4gbmV3IGNvbmZpZ19NZXNzYWdlKGUpfXN0YXRpYyBtZXNzYWdpbmcoZSl7cmV0dXJuIG5ldyBNZXNzYWdpbmcoZSl9c3RhdGljIG1vZGUoZSl7cmV0dXJuIG5ldyBNb2RlKGUpfXN0YXRpYyBtb2RpZnlBbm5vdHMoZSl7cmV0dXJuIG5ldyBNb2RpZnlBbm5vdHMoZSl9c3RhdGljIG1zZ0lkKGUpe3JldHVybiBuZXcgTXNnSWQoZSl9c3RhdGljIG5hbWVBdHRyKGUpe3JldHVybiBuZXcgTmFtZUF0dHIoZSl9c3RhdGljIG5ldmVyRW1iZWQoZSl7cmV0dXJuIG5ldyBOZXZlckVtYmVkKGUpfXN0YXRpYyBudW1iZXJPZkNvcGllcyhlKXtyZXR1cm4gbmV3IE51bWJlck9mQ29waWVzKGUpfXN0YXRpYyBvcGVuQWN0aW9uKGUpe3JldHVybiBuZXcgT3BlbkFjdGlvbihlKX1zdGF0aWMgb3V0cHV0KGUpe3JldHVybiBuZXcgT3V0cHV0KGUpfXN0YXRpYyBvdXRwdXRCaW4oZSl7cmV0dXJuIG5ldyBPdXRwdXRCaW4oZSl9c3RhdGljIG91dHB1dFhTTChlKXtyZXR1cm4gbmV3IE91dHB1dFhTTChlKX1zdGF0aWMgb3ZlcnByaW50KGUpe3JldHVybiBuZXcgT3ZlcnByaW50KGUpfXN0YXRpYyBwYWNrZXRzKGUpe3JldHVybiBuZXcgUGFja2V0cyhlKX1zdGF0aWMgcGFnZU9mZnNldChlKXtyZXR1cm4gbmV3IFBhZ2VPZmZzZXQoZSl9c3RhdGljIHBhZ2VSYW5nZShlKXtyZXR1cm4gbmV3IFBhZ2VSYW5nZShlKX1zdGF0aWMgcGFnaW5hdGlvbihlKXtyZXR1cm4gbmV3IFBhZ2luYXRpb24oZSl9c3RhdGljIHBhZ2luYXRpb25PdmVycmlkZShlKXtyZXR1cm4gbmV3IFBhZ2luYXRpb25PdmVycmlkZShlKX1zdGF0aWMgcGFydChlKXtyZXR1cm4gbmV3IFBhcnQoZSl9c3RhdGljIHBjbChlKXtyZXR1cm4gbmV3IFBjbChlKX1zdGF0aWMgcGRmKGUpe3JldHVybiBuZXcgUGRmKGUpfXN0YXRpYyBwZGZhKGUpe3JldHVybiBuZXcgUGRmYShlKX1zdGF0aWMgcGVybWlzc2lvbnMoZSl7cmV0dXJuIG5ldyBQZXJtaXNzaW9ucyhlKX1zdGF0aWMgcGlja1RyYXlCeVBERlNpemUoZSl7cmV0dXJuIG5ldyBQaWNrVHJheUJ5UERGU2l6ZShlKX1zdGF0aWMgcGljdHVyZShlKXtyZXR1cm4gbmV3IGNvbmZpZ19QaWN0dXJlKGUpfXN0YXRpYyBwbGFpbnRleHRNZXRhZGF0YShlKXtyZXR1cm4gbmV3IFBsYWludGV4dE1ldGFkYXRhKGUpfXN0YXRpYyBwcmVzZW5jZShlKXtyZXR1cm4gbmV3IFByZXNlbmNlKGUpfXN0YXRpYyBwcmVzZW50KGUpe3JldHVybiBuZXcgUHJlc2VudChlKX1zdGF0aWMgcHJpbnQoZSl7cmV0dXJuIG5ldyBQcmludChlKX1zdGF0aWMgcHJpbnRIaWdoUXVhbGl0eShlKXtyZXR1cm4gbmV3IFByaW50SGlnaFF1YWxpdHkoZSl9c3RhdGljIHByaW50U2NhbGluZyhlKXtyZXR1cm4gbmV3IFByaW50U2NhbGluZyhlKX1zdGF0aWMgcHJpbnRlck5hbWUoZSl7cmV0dXJuIG5ldyBQcmludGVyTmFtZShlKX1zdGF0aWMgcHJvZHVjZXIoZSl7cmV0dXJuIG5ldyBQcm9kdWNlcihlKX1zdGF0aWMgcHMoZSl7cmV0dXJuIG5ldyBQcyhlKX1zdGF0aWMgcmFuZ2UoZSl7cmV0dXJuIG5ldyBSYW5nZShlKX1zdGF0aWMgcmVjb3JkKGUpe3JldHVybiBuZXcgUmVjb3JkKGUpfXN0YXRpYyByZWxldmFudChlKXtyZXR1cm4gbmV3IFJlbGV2YW50KGUpfXN0YXRpYyByZW5hbWUoZSl7cmV0dXJuIG5ldyBSZW5hbWUoZSl9c3RhdGljIHJlbmRlclBvbGljeShlKXtyZXR1cm4gbmV3IFJlbmRlclBvbGljeShlKX1zdGF0aWMgcnVuU2NyaXB0cyhlKXtyZXR1cm4gbmV3IFJ1blNjcmlwdHMoZSl9c3RhdGljIHNjcmlwdChlKXtyZXR1cm4gbmV3IGNvbmZpZ19TY3JpcHQoZSl9c3RhdGljIHNjcmlwdE1vZGVsKGUpe3JldHVybiBuZXcgU2NyaXB0TW9kZWwoZSl9c3RhdGljIHNldmVyaXR5KGUpe3JldHVybiBuZXcgU2V2ZXJpdHkoZSl9c3RhdGljIHNpbGVudFByaW50KGUpe3JldHVybiBuZXcgU2lsZW50UHJpbnQoZSl9c3RhdGljIHN0YXBsZShlKXtyZXR1cm4gbmV3IFN0YXBsZShlKX1zdGF0aWMgc3RhcnROb2RlKGUpe3JldHVybiBuZXcgU3RhcnROb2RlKGUpfXN0YXRpYyBzdGFydFBhZ2UoZSl7cmV0dXJuIG5ldyBTdGFydFBhZ2UoZSl9c3RhdGljIHN1Ym1pdEZvcm1hdChlKXtyZXR1cm4gbmV3IFN1Ym1pdEZvcm1hdChlKX1zdGF0aWMgc3VibWl0VXJsKGUpe3JldHVybiBuZXcgU3VibWl0VXJsKGUpfXN0YXRpYyBzdWJzZXRCZWxvdyhlKXtyZXR1cm4gbmV3IFN1YnNldEJlbG93KGUpfXN0YXRpYyBzdXBwcmVzc0Jhbm5lcihlKXtyZXR1cm4gbmV3IFN1cHByZXNzQmFubmVyKGUpfXN0YXRpYyB0YWdnZWQoZSl7cmV0dXJuIG5ldyBUYWdnZWQoZSl9c3RhdGljIHRlbXBsYXRlKGUpe3JldHVybiBuZXcgY29uZmlnX1RlbXBsYXRlKGUpfXN0YXRpYyB0ZW1wbGF0ZUNhY2hlKGUpe3JldHVybiBuZXcgVGVtcGxhdGVDYWNoZShlKX1zdGF0aWMgdGhyZXNob2xkKGUpe3JldHVybiBuZXcgVGhyZXNob2xkKGUpfXN0YXRpYyB0byhlKXtyZXR1cm4gbmV3IFRvKGUpfXN0YXRpYyB0cmFjZShlKXtyZXR1cm4gbmV3IFRyYWNlKGUpfXN0YXRpYyB0cmFuc2Zvcm0oZSl7cmV0dXJuIG5ldyBUcmFuc2Zvcm0oZSl9c3RhdGljIHR5cGUoZSl7cmV0dXJuIG5ldyBUeXBlKGUpfXN0YXRpYyB1cmkoZSl7cmV0dXJuIG5ldyBVcmkoZSl9c3RhdGljIHZhbGlkYXRlKGUpe3JldHVybiBuZXcgY29uZmlnX1ZhbGlkYXRlKGUpfXN0YXRpYyB2YWxpZGF0ZUFwcHJvdmFsU2lnbmF0dXJlcyhlKXtyZXR1cm4gbmV3IFZhbGlkYXRlQXBwcm92YWxTaWduYXR1cmVzKGUpfXN0YXRpYyB2YWxpZGF0aW9uTWVzc2FnaW5nKGUpe3JldHVybiBuZXcgVmFsaWRhdGlvbk1lc3NhZ2luZyhlKX1zdGF0aWMgdmVyc2lvbihlKXtyZXR1cm4gbmV3IFZlcnNpb24oZSl9c3RhdGljIHZlcnNpb25Db250cm9sKGUpe3JldHVybiBuZXcgVmVyc2lvbkNvbnRyb2woZSl9c3RhdGljIHZpZXdlclByZWZlcmVuY2VzKGUpe3JldHVybiBuZXcgVmlld2VyUHJlZmVyZW5jZXMoZSl9c3RhdGljIHdlYkNsaWVudChlKXtyZXR1cm4gbmV3IFdlYkNsaWVudChlKX1zdGF0aWMgd2hpdGVzcGFjZShlKXtyZXR1cm4gbmV3IFdoaXRlc3BhY2UoZSl9c3RhdGljIHdpbmRvdyhlKXtyZXR1cm4gbmV3IFdpbmRvdyhlKX1zdGF0aWMgeGRjKGUpe3JldHVybiBuZXcgWGRjKGUpfXN0YXRpYyB4ZHAoZSl7cmV0dXJuIG5ldyBYZHAoZSl9c3RhdGljIHhzbChlKXtyZXR1cm4gbmV3IFhzbChlKX1zdGF0aWMgenBsKGUpe3JldHVybiBuZXcgWnBsKGUpfX1jb25zdCBPbj1nbi5jb25uZWN0aW9uU2V0LmlkO2NsYXNzIENvbm5lY3Rpb25TZXQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoT24sImNvbm5lY3Rpb25TZXQiLCEwKTt0aGlzLndzZGxDb25uZWN0aW9uPW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnhtbENvbm5lY3Rpb249bmV3IFhGQU9iamVjdEFycmF5O3RoaXMueHNkQ29ubmVjdGlvbj1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIEVmZmVjdGl2ZUlucHV0UG9saWN5IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKE9uLCJlZmZlY3RpdmVJbnB1dFBvbGljeSIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBFZmZlY3RpdmVPdXRwdXRQb2xpY3kgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoT24sImVmZmVjdGl2ZU91dHB1dFBvbGljeSIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBPcGVyYXRpb24gZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoT24sIm9wZXJhdGlvbiIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5pbnB1dD1lLmlucHV0fHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLm91dHB1dD1lLm91dHB1dHx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBSb290RWxlbWVudCBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihPbiwicm9vdEVsZW1lbnQiKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgU29hcEFjdGlvbiBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihPbiwic29hcEFjdGlvbiIpO3RoaXMuaWQ9ZS5pZHx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51c2U9ZS51c2V8fCIiO3RoaXMudXNlaHJlZj1lLnVzZWhyZWZ8fCIifX1jbGFzcyBTb2FwQWRkcmVzcyBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihPbiwic29hcEFkZHJlc3MiKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgY29ubmVjdGlvbl9zZXRfVXJpIGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKE9uLCJ1cmkiKTt0aGlzLmlkPWUuaWR8fCIiO3RoaXMubmFtZT1lLm5hbWV8fCIiO3RoaXMudXNlPWUudXNlfHwiIjt0aGlzLnVzZWhyZWY9ZS51c2VocmVmfHwiIn19Y2xhc3MgV3NkbEFkZHJlc3MgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoT24sIndzZGxBZGRyZXNzIik7dGhpcy5pZD1lLmlkfHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnVzZT1lLnVzZXx8IiI7dGhpcy51c2VocmVmPWUudXNlaHJlZnx8IiJ9fWNsYXNzIFdzZGxDb25uZWN0aW9uIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKE9uLCJ3c2RsQ29ubmVjdGlvbiIsITApO3RoaXMuZGF0YURlc2NyaXB0aW9uPWUuZGF0YURlc2NyaXB0aW9ufHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLmVmZmVjdGl2ZUlucHV0UG9saWN5PW51bGw7dGhpcy5lZmZlY3RpdmVPdXRwdXRQb2xpY3k9bnVsbDt0aGlzLm9wZXJhdGlvbj1udWxsO3RoaXMuc29hcEFjdGlvbj1udWxsO3RoaXMuc29hcEFkZHJlc3M9bnVsbDt0aGlzLndzZGxBZGRyZXNzPW51bGx9fWNsYXNzIFhtbENvbm5lY3Rpb24gZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoT24sInhtbENvbm5lY3Rpb24iLCEwKTt0aGlzLmRhdGFEZXNjcmlwdGlvbj1lLmRhdGFEZXNjcmlwdGlvbnx8IiI7dGhpcy5uYW1lPWUubmFtZXx8IiI7dGhpcy51cmk9bnVsbH19Y2xhc3MgWHNkQ29ubmVjdGlvbiBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihPbiwieHNkQ29ubmVjdGlvbiIsITApO3RoaXMuZGF0YURlc2NyaXB0aW9uPWUuZGF0YURlc2NyaXB0aW9ufHwiIjt0aGlzLm5hbWU9ZS5uYW1lfHwiIjt0aGlzLnJvb3RFbGVtZW50PW51bGw7dGhpcy51cmk9bnVsbH19Y2xhc3MgQ29ubmVjdGlvblNldE5hbWVzcGFjZXtzdGF0aWNbb25dKGUsdCl7aWYoQ29ubmVjdGlvblNldE5hbWVzcGFjZS5oYXNPd25Qcm9wZXJ0eShlKSlyZXR1cm4gQ29ubmVjdGlvblNldE5hbWVzcGFjZVtlXSh0KX1zdGF0aWMgY29ubmVjdGlvblNldChlKXtyZXR1cm4gbmV3IENvbm5lY3Rpb25TZXQoZSl9c3RhdGljIGVmZmVjdGl2ZUlucHV0UG9saWN5KGUpe3JldHVybiBuZXcgRWZmZWN0aXZlSW5wdXRQb2xpY3koZSl9c3RhdGljIGVmZmVjdGl2ZU91dHB1dFBvbGljeShlKXtyZXR1cm4gbmV3IEVmZmVjdGl2ZU91dHB1dFBvbGljeShlKX1zdGF0aWMgb3BlcmF0aW9uKGUpe3JldHVybiBuZXcgT3BlcmF0aW9uKGUpfXN0YXRpYyByb290RWxlbWVudChlKXtyZXR1cm4gbmV3IFJvb3RFbGVtZW50KGUpfXN0YXRpYyBzb2FwQWN0aW9uKGUpe3JldHVybiBuZXcgU29hcEFjdGlvbihlKX1zdGF0aWMgc29hcEFkZHJlc3MoZSl7cmV0dXJuIG5ldyBTb2FwQWRkcmVzcyhlKX1zdGF0aWMgdXJpKGUpe3JldHVybiBuZXcgY29ubmVjdGlvbl9zZXRfVXJpKGUpfXN0YXRpYyB3c2RsQWRkcmVzcyhlKXtyZXR1cm4gbmV3IFdzZGxBZGRyZXNzKGUpfXN0YXRpYyB3c2RsQ29ubmVjdGlvbihlKXtyZXR1cm4gbmV3IFdzZGxDb25uZWN0aW9uKGUpfXN0YXRpYyB4bWxDb25uZWN0aW9uKGUpe3JldHVybiBuZXcgWG1sQ29ubmVjdGlvbihlKX1zdGF0aWMgeHNkQ29ubmVjdGlvbihlKXtyZXR1cm4gbmV3IFhzZENvbm5lY3Rpb24oZSl9fWNvbnN0IFBuPWduLmRhdGFzZXRzLmlkO2NsYXNzIGRhdGFzZXRzX0RhdGEgZXh0ZW5kcyBYbWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoUG4sImRhdGEiLGUpfVtHcl0oKXtyZXR1cm4hMH19Y2xhc3MgRGF0YXNldHMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoUG4sImRhdGFzZXRzIiwhMCk7dGhpcy5kYXRhPW51bGw7dGhpcy5TaWduYXR1cmU9bnVsbH1bS3JdKGUpe2NvbnN0IHQ9ZVtZcl07KCJkYXRhIj09PXQmJmVbSHJdPT09UG58fCJTaWduYXR1cmUiPT09dCYmZVtIcl09PT1nbi5zaWduYXR1cmUuaWQpJiYodGhpc1t0XT1lKTt0aGlzW2pzXShlKX19Y2xhc3MgRGF0YXNldHNOYW1lc3BhY2V7c3RhdGljW29uXShlLHQpe2lmKERhdGFzZXRzTmFtZXNwYWNlLmhhc093blByb3BlcnR5KGUpKXJldHVybiBEYXRhc2V0c05hbWVzcGFjZVtlXSh0KX1zdGF0aWMgZGF0YXNldHMoZSl7cmV0dXJuIG5ldyBEYXRhc2V0cyhlKX1zdGF0aWMgZGF0YShlKXtyZXR1cm4gbmV3IGRhdGFzZXRzX0RhdGEoZSl9fWNvbnN0IFduPWduLmxvY2FsZVNldC5pZDtjbGFzcyBDYWxlbmRhclN5bWJvbHMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sImNhbGVuZGFyU3ltYm9scyIsITApO3RoaXMubmFtZT0iZ3JlZ29yaWFuIjt0aGlzLmRheU5hbWVzPW5ldyBYRkFPYmplY3RBcnJheSgyKTt0aGlzLmVyYU5hbWVzPW51bGw7dGhpcy5tZXJpZGllbU5hbWVzPW51bGw7dGhpcy5tb250aE5hbWVzPW5ldyBYRkFPYmplY3RBcnJheSgyKX19Y2xhc3MgQ3VycmVuY3lTeW1ib2wgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sImN1cnJlbmN5U3ltYm9sIik7dGhpcy5uYW1lPWdldFN0cmluZ09wdGlvbihlLm5hbWUsWyJzeW1ib2wiLCJpc29uYW1lIiwiZGVjaW1hbCJdKX19Y2xhc3MgQ3VycmVuY3lTeW1ib2xzIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFduLCJjdXJyZW5jeVN5bWJvbHMiLCEwKTt0aGlzLmN1cnJlbmN5U3ltYm9sPW5ldyBYRkFPYmplY3RBcnJheSgzKX19Y2xhc3MgRGF0ZVBhdHRlcm4gZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sImRhdGVQYXR0ZXJuIik7dGhpcy5uYW1lPWdldFN0cmluZ09wdGlvbihlLm5hbWUsWyJmdWxsIiwibG9uZyIsIm1lZCIsInNob3J0Il0pfX1jbGFzcyBEYXRlUGF0dGVybnMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sImRhdGVQYXR0ZXJucyIsITApO3RoaXMuZGF0ZVBhdHRlcm49bmV3IFhGQU9iamVjdEFycmF5KDQpfX1jbGFzcyBEYXRlVGltZVN5bWJvbHMgZXh0ZW5kcyBDb250ZW50T2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFduLCJkYXRlVGltZVN5bWJvbHMiKX19Y2xhc3MgRGF5IGV4dGVuZHMgU3RyaW5nT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFduLCJkYXkiKX19Y2xhc3MgRGF5TmFtZXMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sImRheU5hbWVzIiwhMCk7dGhpcy5hYmJyPWdldEludGVnZXIoe2RhdGE6ZS5hYmJyLGRlZmF1bHRWYWx1ZTowLHZhbGlkYXRlOmU9PjE9PT1lfSk7dGhpcy5kYXk9bmV3IFhGQU9iamVjdEFycmF5KDcpfX1jbGFzcyBFcmEgZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sImVyYSIpfX1jbGFzcyBFcmFOYW1lcyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihXbiwiZXJhTmFtZXMiLCEwKTt0aGlzLmVyYT1uZXcgWEZBT2JqZWN0QXJyYXkoMil9fWNsYXNzIGxvY2FsZV9zZXRfTG9jYWxlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFduLCJsb2NhbGUiLCEwKTt0aGlzLmRlc2M9ZS5kZXNjfHwiIjt0aGlzLm5hbWU9Imlzb25hbWUiO3RoaXMuY2FsZW5kYXJTeW1ib2xzPW51bGw7dGhpcy5jdXJyZW5jeVN5bWJvbHM9bnVsbDt0aGlzLmRhdGVQYXR0ZXJucz1udWxsO3RoaXMuZGF0ZVRpbWVTeW1ib2xzPW51bGw7dGhpcy5udW1iZXJQYXR0ZXJucz1udWxsO3RoaXMubnVtYmVyU3ltYm9scz1udWxsO3RoaXMudGltZVBhdHRlcm5zPW51bGw7dGhpcy50eXBlRmFjZXM9bnVsbH19Y2xhc3MgbG9jYWxlX3NldF9Mb2NhbGVTZXQgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sImxvY2FsZVNldCIsITApO3RoaXMubG9jYWxlPW5ldyBYRkFPYmplY3RBcnJheX19Y2xhc3MgTWVyaWRpZW0gZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sIm1lcmlkaWVtIil9fWNsYXNzIE1lcmlkaWVtTmFtZXMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sIm1lcmlkaWVtTmFtZXMiLCEwKTt0aGlzLm1lcmlkaWVtPW5ldyBYRkFPYmplY3RBcnJheSgyKX19Y2xhc3MgTW9udGggZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sIm1vbnRoIil9fWNsYXNzIE1vbnRoTmFtZXMgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sIm1vbnRoTmFtZXMiLCEwKTt0aGlzLmFiYnI9Z2V0SW50ZWdlcih7ZGF0YTplLmFiYnIsZGVmYXVsdFZhbHVlOjAsdmFsaWRhdGU6ZT0+MT09PWV9KTt0aGlzLm1vbnRoPW5ldyBYRkFPYmplY3RBcnJheSgxMil9fWNsYXNzIE51bWJlclBhdHRlcm4gZXh0ZW5kcyBTdHJpbmdPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoV24sIm51bWJlclBhdHRlcm4iKTt0aGlzLm5hbWU9Z2V0U3RyaW5nT3B0aW9uKGUubmFtZSxbImZ1bGwiLCJsb25nIiwibWVkIiwic2hvcnQiXSl9fWNsYXNzIE51bWJlclBhdHRlcm5zIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFduLCJudW1iZXJQYXR0ZXJucyIsITApO3RoaXMubnVtYmVyUGF0dGVybj1uZXcgWEZBT2JqZWN0QXJyYXkoNCl9fWNsYXNzIE51bWJlclN5bWJvbCBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihXbiwibnVtYmVyU3ltYm9sIik7dGhpcy5uYW1lPWdldFN0cmluZ09wdGlvbihlLm5hbWUsWyJkZWNpbWFsIiwiZ3JvdXBpbmciLCJwZXJjZW50IiwibWludXMiLCJ6ZXJvIl0pfX1jbGFzcyBOdW1iZXJTeW1ib2xzIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFduLCJudW1iZXJTeW1ib2xzIiwhMCk7dGhpcy5udW1iZXJTeW1ib2w9bmV3IFhGQU9iamVjdEFycmF5KDUpfX1jbGFzcyBUaW1lUGF0dGVybiBleHRlbmRzIFN0cmluZ09iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihXbiwidGltZVBhdHRlcm4iKTt0aGlzLm5hbWU9Z2V0U3RyaW5nT3B0aW9uKGUubmFtZSxbImZ1bGwiLCJsb25nIiwibWVkIiwic2hvcnQiXSl9fWNsYXNzIFRpbWVQYXR0ZXJucyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihXbiwidGltZVBhdHRlcm5zIiwhMCk7dGhpcy50aW1lUGF0dGVybj1uZXcgWEZBT2JqZWN0QXJyYXkoNCl9fWNsYXNzIFR5cGVGYWNlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFduLCJ0eXBlRmFjZSIsITApO3RoaXMubmFtZT0iInxlLm5hbWV9fWNsYXNzIFR5cGVGYWNlcyBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihXbiwidHlwZUZhY2VzIiwhMCk7dGhpcy50eXBlRmFjZT1uZXcgWEZBT2JqZWN0QXJyYXl9fWNsYXNzIExvY2FsZVNldE5hbWVzcGFjZXtzdGF0aWNbb25dKGUsdCl7aWYoTG9jYWxlU2V0TmFtZXNwYWNlLmhhc093blByb3BlcnR5KGUpKXJldHVybiBMb2NhbGVTZXROYW1lc3BhY2VbZV0odCl9c3RhdGljIGNhbGVuZGFyU3ltYm9scyhlKXtyZXR1cm4gbmV3IENhbGVuZGFyU3ltYm9scyhlKX1zdGF0aWMgY3VycmVuY3lTeW1ib2woZSl7cmV0dXJuIG5ldyBDdXJyZW5jeVN5bWJvbChlKX1zdGF0aWMgY3VycmVuY3lTeW1ib2xzKGUpe3JldHVybiBuZXcgQ3VycmVuY3lTeW1ib2xzKGUpfXN0YXRpYyBkYXRlUGF0dGVybihlKXtyZXR1cm4gbmV3IERhdGVQYXR0ZXJuKGUpfXN0YXRpYyBkYXRlUGF0dGVybnMoZSl7cmV0dXJuIG5ldyBEYXRlUGF0dGVybnMoZSl9c3RhdGljIGRhdGVUaW1lU3ltYm9scyhlKXtyZXR1cm4gbmV3IERhdGVUaW1lU3ltYm9scyhlKX1zdGF0aWMgZGF5KGUpe3JldHVybiBuZXcgRGF5KGUpfXN0YXRpYyBkYXlOYW1lcyhlKXtyZXR1cm4gbmV3IERheU5hbWVzKGUpfXN0YXRpYyBlcmEoZSl7cmV0dXJuIG5ldyBFcmEoZSl9c3RhdGljIGVyYU5hbWVzKGUpe3JldHVybiBuZXcgRXJhTmFtZXMoZSl9c3RhdGljIGxvY2FsZShlKXtyZXR1cm4gbmV3IGxvY2FsZV9zZXRfTG9jYWxlKGUpfXN0YXRpYyBsb2NhbGVTZXQoZSl7cmV0dXJuIG5ldyBsb2NhbGVfc2V0X0xvY2FsZVNldChlKX1zdGF0aWMgbWVyaWRpZW0oZSl7cmV0dXJuIG5ldyBNZXJpZGllbShlKX1zdGF0aWMgbWVyaWRpZW1OYW1lcyhlKXtyZXR1cm4gbmV3IE1lcmlkaWVtTmFtZXMoZSl9c3RhdGljIG1vbnRoKGUpe3JldHVybiBuZXcgTW9udGgoZSl9c3RhdGljIG1vbnRoTmFtZXMoZSl7cmV0dXJuIG5ldyBNb250aE5hbWVzKGUpfXN0YXRpYyBudW1iZXJQYXR0ZXJuKGUpe3JldHVybiBuZXcgTnVtYmVyUGF0dGVybihlKX1zdGF0aWMgbnVtYmVyUGF0dGVybnMoZSl7cmV0dXJuIG5ldyBOdW1iZXJQYXR0ZXJucyhlKX1zdGF0aWMgbnVtYmVyU3ltYm9sKGUpe3JldHVybiBuZXcgTnVtYmVyU3ltYm9sKGUpfXN0YXRpYyBudW1iZXJTeW1ib2xzKGUpe3JldHVybiBuZXcgTnVtYmVyU3ltYm9scyhlKX1zdGF0aWMgdGltZVBhdHRlcm4oZSl7cmV0dXJuIG5ldyBUaW1lUGF0dGVybihlKX1zdGF0aWMgdGltZVBhdHRlcm5zKGUpe3JldHVybiBuZXcgVGltZVBhdHRlcm5zKGUpfXN0YXRpYyB0eXBlRmFjZShlKXtyZXR1cm4gbmV3IFR5cGVGYWNlKGUpfXN0YXRpYyB0eXBlRmFjZXMoZSl7cmV0dXJuIG5ldyBUeXBlRmFjZXMoZSl9fWNvbnN0IFhuPWduLnNpZ25hdHVyZS5pZDtjbGFzcyBzaWduYXR1cmVfU2lnbmF0dXJlIGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKFhuLCJzaWduYXR1cmUiLCEwKX19Y2xhc3MgU2lnbmF0dXJlTmFtZXNwYWNle3N0YXRpY1tvbl0oZSx0KXtpZihTaWduYXR1cmVOYW1lc3BhY2UuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuIFNpZ25hdHVyZU5hbWVzcGFjZVtlXSh0KX1zdGF0aWMgc2lnbmF0dXJlKGUpe3JldHVybiBuZXcgc2lnbmF0dXJlX1NpZ25hdHVyZShlKX19Y29uc3Qgam49Z24uc3R5bGVzaGVldC5pZDtjbGFzcyBTdHlsZXNoZWV0IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGpuLCJzdHlsZXNoZWV0IiwhMCl9fWNsYXNzIFN0eWxlc2hlZXROYW1lc3BhY2V7c3RhdGljW29uXShlLHQpe2lmKFN0eWxlc2hlZXROYW1lc3BhY2UuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuIFN0eWxlc2hlZXROYW1lc3BhY2VbZV0odCl9c3RhdGljIHN0eWxlc2hlZXQoZSl7cmV0dXJuIG5ldyBTdHlsZXNoZWV0KGUpfX1jb25zdCBabj1nbi54ZHAuaWQ7Y2xhc3MgeGRwX1hkcCBleHRlbmRzIFhGQU9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihabiwieGRwIiwhMCk7dGhpcy51dWlkPWUudXVpZHx8IiI7dGhpcy50aW1lU3RhbXA9ZS50aW1lU3RhbXB8fCIiO3RoaXMuY29uZmlnPW51bGw7dGhpcy5jb25uZWN0aW9uU2V0PW51bGw7dGhpcy5kYXRhc2V0cz1udWxsO3RoaXMubG9jYWxlU2V0PW51bGw7dGhpcy5zdHlsZXNoZWV0PW5ldyBYRkFPYmplY3RBcnJheTt0aGlzLnRlbXBsYXRlPW51bGx9W1RyXShlKXtjb25zdCB0PWduW2VbWXJdXTtyZXR1cm4gdCYmZVtIcl09PT10LmlkfX1jbGFzcyBYZHBOYW1lc3BhY2V7c3RhdGljW29uXShlLHQpe2lmKFhkcE5hbWVzcGFjZS5oYXNPd25Qcm9wZXJ0eShlKSlyZXR1cm4gWGRwTmFtZXNwYWNlW2VdKHQpfXN0YXRpYyB4ZHAoZSl7cmV0dXJuIG5ldyB4ZHBfWGRwKGUpfX1jb25zdCBWbj1nbi54aHRtbC5pZCx6bj1TeW1ib2woKSxfbj1uZXcgU2V0KFsiY29sb3IiLCJmb250IiwiZm9udC1mYW1pbHkiLCJmb250LXNpemUiLCJmb250LXN0cmV0Y2giLCJmb250LXN0eWxlIiwiZm9udC13ZWlnaHQiLCJtYXJnaW4iLCJtYXJnaW4tYm90dG9tIiwibWFyZ2luLWxlZnQiLCJtYXJnaW4tcmlnaHQiLCJtYXJnaW4tdG9wIiwibGV0dGVyLXNwYWNpbmciLCJsaW5lLWhlaWdodCIsIm9ycGhhbnMiLCJwYWdlLWJyZWFrLWFmdGVyIiwicGFnZS1icmVhay1iZWZvcmUiLCJwYWdlLWJyZWFrLWluc2lkZSIsInRhYi1pbnRlcnZhbCIsInRhYi1zdG9wIiwidGV4dC1hbGlnbiIsInRleHQtZGVjb3JhdGlvbiIsInRleHQtaW5kZW50IiwidmVydGljYWwtYWxpZ24iLCJ3aWRvd3MiLCJrZXJuaW5nLW1vZGUiLCJ4ZmEtZm9udC1ob3Jpem9udGFsLXNjYWxlIiwieGZhLWZvbnQtdmVydGljYWwtc2NhbGUiLCJ4ZmEtc3BhY2VydW4iLCJ4ZmEtdGFiLXN0b3BzIl0pLCRuPW5ldyBNYXAoW1sicGFnZS1icmVhay1hZnRlciIsImJyZWFrQWZ0ZXIiXSxbInBhZ2UtYnJlYWstYmVmb3JlIiwiYnJlYWtCZWZvcmUiXSxbInBhZ2UtYnJlYWstaW5zaWRlIiwiYnJlYWtJbnNpZGUiXSxbImtlcm5pbmctbW9kZSIsZT0+Im5vbmUiPT09ZT8ibm9uZSI6Im5vcm1hbCJdLFsieGZhLWZvbnQtaG9yaXpvbnRhbC1zY2FsZSIsZT0+YHNjYWxlWCgke01hdGgubWF4KDAsTWF0aC5taW4ocGFyc2VJbnQoZSkvMTAwKSkudG9GaXhlZCgyKX0pYF0sWyJ4ZmEtZm9udC12ZXJ0aWNhbC1zY2FsZSIsZT0+YHNjYWxlWSgke01hdGgubWF4KDAsTWF0aC5taW4ocGFyc2VJbnQoZSkvMTAwKSkudG9GaXhlZCgyKX0pYF0sWyJ4ZmEtc3BhY2VydW4iLCIiXSxbInhmYS10YWItc3RvcHMiLCIiXSxbImZvbnQtc2l6ZSIsKGUsdCk9Pm1lYXN1cmVUb1N0cmluZyguOTkqKGU9dC5mb250U2l6ZT1nZXRNZWFzdXJlbWVudChlKSkpXSxbImxldHRlci1zcGFjaW5nIixlPT5tZWFzdXJlVG9TdHJpbmcoZ2V0TWVhc3VyZW1lbnQoZSkpXSxbImxpbmUtaGVpZ2h0IixlPT5tZWFzdXJlVG9TdHJpbmcoZ2V0TWVhc3VyZW1lbnQoZSkpXSxbIm1hcmdpbiIsZT0+bWVhc3VyZVRvU3RyaW5nKGdldE1lYXN1cmVtZW50KGUpKV0sWyJtYXJnaW4tYm90dG9tIixlPT5tZWFzdXJlVG9TdHJpbmcoZ2V0TWVhc3VyZW1lbnQoZSkpXSxbIm1hcmdpbi1sZWZ0IixlPT5tZWFzdXJlVG9TdHJpbmcoZ2V0TWVhc3VyZW1lbnQoZSkpXSxbIm1hcmdpbi1yaWdodCIsZT0+bWVhc3VyZVRvU3RyaW5nKGdldE1lYXN1cmVtZW50KGUpKV0sWyJtYXJnaW4tdG9wIixlPT5tZWFzdXJlVG9TdHJpbmcoZ2V0TWVhc3VyZW1lbnQoZSkpXSxbInRleHQtaW5kZW50IixlPT5tZWFzdXJlVG9TdHJpbmcoZ2V0TWVhc3VyZW1lbnQoZSkpXSxbImZvbnQtZmFtaWx5IixlPT5lXSxbInZlcnRpY2FsLWFsaWduIixlPT5tZWFzdXJlVG9TdHJpbmcoZ2V0TWVhc3VyZW1lbnQoZSkpXV0pLEFvPS9ccysvZyxlbz0vW1xyXG5dKy9nLHRvPS9cclxuPy9nO2Z1bmN0aW9uIG1hcFN0eWxlKGUsdCxpKXtjb25zdCBhPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoIWUpcmV0dXJuIGE7Y29uc3Qgcz1PYmplY3QuY3JlYXRlKG51bGwpO2Zvcihjb25zdFt0LGldb2YgZS5zcGxpdCgiOyIpLm1hcCgoZT0+ZS5zcGxpdCgiOiIsMikpKSl7Y29uc3QgZT0kbi5nZXQodCk7aWYoIiI9PT1lKWNvbnRpbnVlO2xldCByPWk7ZSYmKHI9InN0cmluZyI9PXR5cGVvZiBlP2U6ZShpLHMpKTt0LmVuZHNXaXRoKCJzY2FsZSIpP2EudHJhbnNmb3JtPWEudHJhbnNmb3JtP2Ake2FbdF19ICR7cn1gOnI6YVt0LnJlcGxhY2VBbGwoLy0oW2EtekEtWl0pL2csKChlLHQpPT50LnRvVXBwZXJDYXNlKCkpKV09cn1hLmZvbnRGYW1pbHkmJnNldEZvbnRGYW1pbHkoe3R5cGVmYWNlOmEuZm9udEZhbWlseSx3ZWlnaHQ6YS5mb250V2VpZ2h0fHwibm9ybWFsIixwb3N0dXJlOmEuZm9udFN0eWxlfHwibm9ybWFsIixzaXplOnMuZm9udFNpemV8fDB9LHQsdFt5cl0uZm9udEZpbmRlcixhKTtpZihpJiZhLnZlcnRpY2FsQWxpZ24mJiIwcHgiIT09YS52ZXJ0aWNhbEFsaWduJiZhLmZvbnRTaXplKXtjb25zdCBlPS41ODMsdD0uMzMzLGk9Z2V0TWVhc3VyZW1lbnQoYS5mb250U2l6ZSk7YS5mb250U2l6ZT1tZWFzdXJlVG9TdHJpbmcoaSplKTthLnZlcnRpY2FsQWxpZ249bWVhc3VyZVRvU3RyaW5nKE1hdGguc2lnbihnZXRNZWFzdXJlbWVudChhLnZlcnRpY2FsQWxpZ24pKSppKnQpfWkmJmEuZm9udFNpemUmJihhLmZvbnRTaXplPWBjYWxjKCR7YS5mb250U2l6ZX0gKiB2YXIoLS1zY2FsZS1mYWN0b3IpKWApO2ZpeFRleHRJbmRlbnQoYSk7cmV0dXJuIGF9Y29uc3QgaW89bmV3IFNldChbImJvZHkiLCJodG1sIl0pO2NsYXNzIFhodG1sT2JqZWN0IGV4dGVuZHMgWG1sT2JqZWN0e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoVm4sdCk7dGhpc1t6bl09ITE7dGhpcy5zdHlsZT1lLnN0eWxlfHwiIn1bVnNdKGUpe3N1cGVyW1ZzXShlKTt0aGlzLnN0eWxlPWZ1bmN0aW9uIGNoZWNrU3R5bGUoZSl7cmV0dXJuIGUuc3R5bGU/ZS5zdHlsZS50cmltKCkuc3BsaXQoL1xzKjtccyovKS5maWx0ZXIoKGU9PiEhZSkpLm1hcCgoZT0+ZS5zcGxpdCgvXHMqOlxzKi8sMikpKS5maWx0ZXIoKChbdCxpXSk9PnsiZm9udC1mYW1pbHkiPT09dCYmZVt5cl0udXNlZFR5cGVmYWNlcy5hZGQoaSk7cmV0dXJuIF9uLmhhcyh0KX0pKS5tYXAoKGU9PmUuam9pbigiOiIpKSkuam9pbigiOyIpOiIifSh0aGlzKX1bV3NdKCl7cmV0dXJuIWlvLmhhcyh0aGlzW1lyXSl9W3FyXShlLHQ9ITEpe2lmKHQpdGhpc1t6bl09ITA7ZWxzZXtlPWUucmVwbGFjZUFsbChlbywiIik7dGhpcy5zdHlsZS5pbmNsdWRlcygieGZhLXNwYWNlcnVuOnllcyIpfHwoZT1lLnJlcGxhY2VBbGwoQW8sIiAiKSl9ZSYmKHRoaXNbZXJdKz1lKX1bT3JdKGUsdD0hMCl7Y29uc3QgaT1PYmplY3QuY3JlYXRlKG51bGwpLGE9e3RvcDpOYU4sYm90dG9tOk5hTixsZWZ0Ok5hTixyaWdodDpOYU59O2xldCBzPW51bGw7Zm9yKGNvbnN0W2UsdF1vZiB0aGlzLnN0eWxlLnNwbGl0KCI7IikubWFwKChlPT5lLnNwbGl0KCI6IiwyKSkpKXN3aXRjaChlKXtjYXNlImZvbnQtZmFtaWx5IjppLnR5cGVmYWNlPXN0cmlwUXVvdGVzKHQpO2JyZWFrO2Nhc2UiZm9udC1zaXplIjppLnNpemU9Z2V0TWVhc3VyZW1lbnQodCk7YnJlYWs7Y2FzZSJmb250LXdlaWdodCI6aS53ZWlnaHQ9dDticmVhaztjYXNlImZvbnQtc3R5bGUiOmkucG9zdHVyZT10O2JyZWFrO2Nhc2UibGV0dGVyLXNwYWNpbmciOmkubGV0dGVyU3BhY2luZz1nZXRNZWFzdXJlbWVudCh0KTticmVhaztjYXNlIm1hcmdpbiI6Y29uc3QgZT10LnNwbGl0KC8gXHQvKS5tYXAoKGU9PmdldE1lYXN1cmVtZW50KGUpKSk7c3dpdGNoKGUubGVuZ3RoKXtjYXNlIDE6YS50b3A9YS5ib3R0b209YS5sZWZ0PWEucmlnaHQ9ZVswXTticmVhaztjYXNlIDI6YS50b3A9YS5ib3R0b209ZVswXTthLmxlZnQ9YS5yaWdodD1lWzFdO2JyZWFrO2Nhc2UgMzphLnRvcD1lWzBdO2EuYm90dG9tPWVbMl07YS5sZWZ0PWEucmlnaHQ9ZVsxXTticmVhaztjYXNlIDQ6YS50b3A9ZVswXTthLmxlZnQ9ZVsxXTthLmJvdHRvbT1lWzJdO2EucmlnaHQ9ZVszXX1icmVhaztjYXNlIm1hcmdpbi10b3AiOmEudG9wPWdldE1lYXN1cmVtZW50KHQpO2JyZWFrO2Nhc2UibWFyZ2luLWJvdHRvbSI6YS5ib3R0b209Z2V0TWVhc3VyZW1lbnQodCk7YnJlYWs7Y2FzZSJtYXJnaW4tbGVmdCI6YS5sZWZ0PWdldE1lYXN1cmVtZW50KHQpO2JyZWFrO2Nhc2UibWFyZ2luLXJpZ2h0IjphLnJpZ2h0PWdldE1lYXN1cmVtZW50KHQpO2JyZWFrO2Nhc2UibGluZS1oZWlnaHQiOnM9Z2V0TWVhc3VyZW1lbnQodCl9ZS5wdXNoRGF0YShpLGEscyk7aWYodGhpc1tlcl0pZS5hZGRTdHJpbmcodGhpc1tlcl0pO2Vsc2UgZm9yKGNvbnN0IHQgb2YgdGhpc1tFcl0oKSkiI3RleHQiIT09dFtZcl0/dFtPcl0oZSk6ZS5hZGRTdHJpbmcodFtlcl0pO3QmJmUucG9wRm9udCgpfVthbl0oZSl7Y29uc3QgdD1bXTt0aGlzW2FyXT17Y2hpbGRyZW46dH07dGhpc1tac10oe30pO2lmKDA9PT10Lmxlbmd0aCYmIXRoaXNbZXJdKXJldHVybiBIVE1MUmVzdWx0LkVNUFRZO2xldCBpO2k9dGhpc1t6bl0/dGhpc1tlcl0/dGhpc1tlcl0ucmVwbGFjZUFsbCh0bywiXG4iKTp2b2lkIDA6dGhpc1tlcl18fHZvaWQgMDtyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOnRoaXNbWXJdLGF0dHJpYnV0ZXM6e2hyZWY6dGhpcy5ocmVmLHN0eWxlOm1hcFN0eWxlKHRoaXMuc3R5bGUsdGhpcyx0aGlzW3puXSl9LGNoaWxkcmVuOnQsdmFsdWU6aX0pfX1jbGFzcyBBIGV4dGVuZHMgWGh0bWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwiYSIpO3RoaXMuaHJlZj1maXhVUkwoZS5ocmVmKXx8IiJ9fWNsYXNzIEIgZXh0ZW5kcyBYaHRtbE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlLCJiIil9W09yXShlKXtlLnB1c2hGb250KHt3ZWlnaHQ6ImJvbGQifSk7c3VwZXJbT3JdKGUpO2UucG9wRm9udCgpfX1jbGFzcyBCb2R5IGV4dGVuZHMgWGh0bWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwiYm9keSIpfVthbl0oZSl7Y29uc3QgdD1zdXBlclthbl0oZSkse2h0bWw6aX09dDtpZighaSlyZXR1cm4gSFRNTFJlc3VsdC5FTVBUWTtpLm5hbWU9ImRpdiI7aS5hdHRyaWJ1dGVzLmNsYXNzPVsieGZhUmljaCJdO3JldHVybiB0fX1jbGFzcyBCciBleHRlbmRzIFhodG1sT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsImJyIil9W2VuXSgpe3JldHVybiJcbiJ9W09yXShlKXtlLmFkZFN0cmluZygiXG4iKX1bYW5dKGUpe3JldHVybiBIVE1MUmVzdWx0LnN1Y2Nlc3Moe25hbWU6ImJyIn0pfX1jbGFzcyBIdG1sIGV4dGVuZHMgWGh0bWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwiaHRtbCIpfVthbl0oZSl7Y29uc3QgdD1bXTt0aGlzW2FyXT17Y2hpbGRyZW46dH07dGhpc1tac10oe30pO2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6e2NsYXNzOlsieGZhUmljaCJdLHN0eWxlOnt9fSx2YWx1ZTp0aGlzW2VyXXx8IiJ9KTtpZigxPT09dC5sZW5ndGgpe2NvbnN0IGU9dFswXTtpZihlLmF0dHJpYnV0ZXM/LmNsYXNzLmluY2x1ZGVzKCJ4ZmFSaWNoIikpcmV0dXJuIEhUTUxSZXN1bHQuc3VjY2VzcyhlKX1yZXR1cm4gSFRNTFJlc3VsdC5zdWNjZXNzKHtuYW1lOiJkaXYiLGF0dHJpYnV0ZXM6e2NsYXNzOlsieGZhUmljaCJdLHN0eWxlOnt9fSxjaGlsZHJlbjp0fSl9fWNsYXNzIEkgZXh0ZW5kcyBYaHRtbE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlLCJpIil9W09yXShlKXtlLnB1c2hGb250KHtwb3N0dXJlOiJpdGFsaWMifSk7c3VwZXJbT3JdKGUpO2UucG9wRm9udCgpfX1jbGFzcyBMaSBleHRlbmRzIFhodG1sT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsImxpIil9fWNsYXNzIE9sIGV4dGVuZHMgWGh0bWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwib2wiKX19Y2xhc3MgUCBleHRlbmRzIFhodG1sT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsInAiKX1bT3JdKGUpe3N1cGVyW09yXShlLCExKTtlLmFkZFN0cmluZygiXG4iKTtlLmFkZFBhcmEoKTtlLnBvcEZvbnQoKX1bZW5dKCl7cmV0dXJuIHRoaXNbcHJdKClbRXJdKCkuYXQoLTEpPT09dGhpcz9zdXBlcltlbl0oKTpzdXBlcltlbl0oKSsiXG4ifX1jbGFzcyBTcGFuIGV4dGVuZHMgWGh0bWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwic3BhbiIpfX1jbGFzcyBTdWIgZXh0ZW5kcyBYaHRtbE9iamVjdHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlLCJzdWIiKX19Y2xhc3MgU3VwIGV4dGVuZHMgWGh0bWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwic3VwIil9fWNsYXNzIFVsIGV4dGVuZHMgWGh0bWxPYmplY3R7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSwidWwiKX19Y2xhc3MgWGh0bWxOYW1lc3BhY2V7c3RhdGljW29uXShlLHQpe2lmKFhodG1sTmFtZXNwYWNlLmhhc093blByb3BlcnR5KGUpKXJldHVybiBYaHRtbE5hbWVzcGFjZVtlXSh0KX1zdGF0aWMgYShlKXtyZXR1cm4gbmV3IEEoZSl9c3RhdGljIGIoZSl7cmV0dXJuIG5ldyBCKGUpfXN0YXRpYyBib2R5KGUpe3JldHVybiBuZXcgQm9keShlKX1zdGF0aWMgYnIoZSl7cmV0dXJuIG5ldyBCcihlKX1zdGF0aWMgaHRtbChlKXtyZXR1cm4gbmV3IEh0bWwoZSl9c3RhdGljIGkoZSl7cmV0dXJuIG5ldyBJKGUpfXN0YXRpYyBsaShlKXtyZXR1cm4gbmV3IExpKGUpfXN0YXRpYyBvbChlKXtyZXR1cm4gbmV3IE9sKGUpfXN0YXRpYyBwKGUpe3JldHVybiBuZXcgUChlKX1zdGF0aWMgc3BhbihlKXtyZXR1cm4gbmV3IFNwYW4oZSl9c3RhdGljIHN1YihlKXtyZXR1cm4gbmV3IFN1YihlKX1zdGF0aWMgc3VwKGUpe3JldHVybiBuZXcgU3VwKGUpfXN0YXRpYyB1bChlKXtyZXR1cm4gbmV3IFVsKGUpfX1jb25zdCBhbz17Y29uZmlnOkNvbmZpZ05hbWVzcGFjZSxjb25uZWN0aW9uOkNvbm5lY3Rpb25TZXROYW1lc3BhY2UsZGF0YXNldHM6RGF0YXNldHNOYW1lc3BhY2UsbG9jYWxlU2V0OkxvY2FsZVNldE5hbWVzcGFjZSxzaWduYXR1cmU6U2lnbmF0dXJlTmFtZXNwYWNlLHN0eWxlc2hlZXQ6U3R5bGVzaGVldE5hbWVzcGFjZSx0ZW1wbGF0ZTpUZW1wbGF0ZU5hbWVzcGFjZSx4ZHA6WGRwTmFtZXNwYWNlLHhodG1sOlhodG1sTmFtZXNwYWNlfTtjbGFzcyBVbmtub3duTmFtZXNwYWNle2NvbnN0cnVjdG9yKGUpe3RoaXMubmFtZXNwYWNlSWQ9ZX1bb25dKGUsdCl7cmV0dXJuIG5ldyBYbWxPYmplY3QodGhpcy5uYW1lc3BhY2VJZCxlLHQpfX1jbGFzcyBSb290IGV4dGVuZHMgWEZBT2JqZWN0e2NvbnN0cnVjdG9yKGUpe3N1cGVyKC0xLCJyb290IixPYmplY3QuY3JlYXRlKG51bGwpKTt0aGlzLmVsZW1lbnQ9bnVsbDt0aGlzW2JyXT1lfVtLcl0oZSl7dGhpcy5lbGVtZW50PWU7cmV0dXJuITB9W3NyXSgpe3N1cGVyW3NyXSgpO2lmKHRoaXMuZWxlbWVudC50ZW1wbGF0ZSBpbnN0YW5jZW9mIFRlbXBsYXRlKXt0aGlzW2JyXS5zZXQoanIsdGhpcy5lbGVtZW50KTt0aGlzLmVsZW1lbnQudGVtcGxhdGVbWnJdKHRoaXNbYnJdKTt0aGlzLmVsZW1lbnQudGVtcGxhdGVbYnJdPXRoaXNbYnJdfX19Y2xhc3MgRW1wdHkgZXh0ZW5kcyBYRkFPYmplY3R7Y29uc3RydWN0b3IoKXtzdXBlcigtMSwiIixPYmplY3QuY3JlYXRlKG51bGwpKX1bS3JdKGUpe3JldHVybiExfX1jbGFzcyBCdWlsZGVye2NvbnN0cnVjdG9yKGU9bnVsbCl7dGhpcy5fbmFtZXNwYWNlU3RhY2s9W107dGhpcy5fbnNBZ25vc3RpY0xldmVsPTA7dGhpcy5fbmFtZXNwYWNlUHJlZml4ZXM9bmV3IE1hcDt0aGlzLl9uYW1lc3BhY2VzPW5ldyBNYXA7dGhpcy5fbmV4dE5zSWQ9TWF0aC5tYXgoLi4uT2JqZWN0LnZhbHVlcyhnbikubWFwKCgoe2lkOmV9KT0+ZSkpKTt0aGlzLl9jdXJyZW50TmFtZXNwYWNlPWV8fG5ldyBVbmtub3duTmFtZXNwYWNlKCsrdGhpcy5fbmV4dE5zSWQpfWJ1aWxkUm9vdChlKXtyZXR1cm4gbmV3IFJvb3QoZSl9YnVpbGQoe25zUHJlZml4OmUsbmFtZTp0LGF0dHJpYnV0ZXM6aSxuYW1lc3BhY2U6YSxwcmVmaXhlczpzfSl7Y29uc3Qgcj1udWxsIT09YTtpZihyKXt0aGlzLl9uYW1lc3BhY2VTdGFjay5wdXNoKHRoaXMuX2N1cnJlbnROYW1lc3BhY2UpO3RoaXMuX2N1cnJlbnROYW1lc3BhY2U9dGhpcy5fc2VhcmNoTmFtZXNwYWNlKGEpfXMmJnRoaXMuX2FkZE5hbWVzcGFjZVByZWZpeChzKTtpZihpLmhhc093blByb3BlcnR5KHZyKSl7Y29uc3QgZT1hby5kYXRhc2V0cyx0PWlbdnJdO2xldCBhPW51bGw7Zm9yKGNvbnN0W2ksc11vZiBPYmplY3QuZW50cmllcyh0KSl7aWYodGhpcy5fZ2V0TmFtZXNwYWNlVG9Vc2UoaSk9PT1lKXthPXt4ZmE6c307YnJlYWt9fWE/aVt2cl09YTpkZWxldGUgaVt2cl19Y29uc3Qgbj10aGlzLl9nZXROYW1lc3BhY2VUb1VzZShlKSxvPW4/Lltvbl0odCxpKXx8bmV3IEVtcHR5O29bR3JdKCkmJnRoaXMuX25zQWdub3N0aWNMZXZlbCsrOyhyfHxzfHxvW0dyXSgpKSYmKG9bX3NdPXtoYXNOYW1lc3BhY2U6cixwcmVmaXhlczpzLG5zQWdub3N0aWM6b1tHcl0oKX0pO3JldHVybiBvfWlzTnNBZ25vc3RpYygpe3JldHVybiB0aGlzLl9uc0Fnbm9zdGljTGV2ZWw+MH1fc2VhcmNoTmFtZXNwYWNlKGUpe2xldCB0PXRoaXMuX25hbWVzcGFjZXMuZ2V0KGUpO2lmKHQpcmV0dXJuIHQ7Zm9yKGNvbnN0W2kse2NoZWNrOmF9XW9mIE9iamVjdC5lbnRyaWVzKGduKSlpZihhKGUpKXt0PWFvW2ldO2lmKHQpe3RoaXMuX25hbWVzcGFjZXMuc2V0KGUsdCk7cmV0dXJuIHR9YnJlYWt9dD1uZXcgVW5rbm93bk5hbWVzcGFjZSgrK3RoaXMuX25leHROc0lkKTt0aGlzLl9uYW1lc3BhY2VzLnNldChlLHQpO3JldHVybiB0fV9hZGROYW1lc3BhY2VQcmVmaXgoZSl7Zm9yKGNvbnN0e3ByZWZpeDp0LHZhbHVlOml9b2YgZSl7Y29uc3QgZT10aGlzLl9zZWFyY2hOYW1lc3BhY2UoaSk7bGV0IGE9dGhpcy5fbmFtZXNwYWNlUHJlZml4ZXMuZ2V0KHQpO2lmKCFhKXthPVtdO3RoaXMuX25hbWVzcGFjZVByZWZpeGVzLnNldCh0LGEpfWEucHVzaChlKX19X2dldE5hbWVzcGFjZVRvVXNlKGUpe2lmKCFlKXJldHVybiB0aGlzLl9jdXJyZW50TmFtZXNwYWNlO2NvbnN0IHQ9dGhpcy5fbmFtZXNwYWNlUHJlZml4ZXMuZ2V0KGUpO2lmKHQ/Lmxlbmd0aD4wKXJldHVybiB0LmF0KC0xKTt3YXJuKGBVbmtub3duIG5hbWVzcGFjZSBwcmVmaXg6ICR7ZX0uYCk7cmV0dXJuIG51bGx9Y2xlYW4oZSl7Y29uc3R7aGFzTmFtZXNwYWNlOnQscHJlZml4ZXM6aSxuc0Fnbm9zdGljOmF9PWU7dCYmKHRoaXMuX2N1cnJlbnROYW1lc3BhY2U9dGhpcy5fbmFtZXNwYWNlU3RhY2sucG9wKCkpO2kmJmkuZm9yRWFjaCgoKHtwcmVmaXg6ZX0pPT57dGhpcy5fbmFtZXNwYWNlUHJlZml4ZXMuZ2V0KGUpLnBvcCgpfSkpO2EmJnRoaXMuX25zQWdub3N0aWNMZXZlbC0tfX1jbGFzcyBYRkFQYXJzZXIgZXh0ZW5kcyBYTUxQYXJzZXJCYXNle2NvbnN0cnVjdG9yKGU9bnVsbCx0PSExKXtzdXBlcigpO3RoaXMuX2J1aWxkZXI9bmV3IEJ1aWxkZXIoZSk7dGhpcy5fc3RhY2s9W107dGhpcy5fZ2xvYmFsRGF0YT17dXNlZFR5cGVmYWNlczpuZXcgU2V0fTt0aGlzLl9pZHM9bmV3IE1hcDt0aGlzLl9jdXJyZW50PXRoaXMuX2J1aWxkZXIuYnVpbGRSb290KHRoaXMuX2lkcyk7dGhpcy5fZXJyb3JDb2RlPVJzO3RoaXMuX3doaXRlUmVnZXg9L15ccyskLzt0aGlzLl9uYnNwcz0vXHhhMCsvZzt0aGlzLl9yaWNoVGV4dD10fXBhcnNlKGUpe3RoaXMucGFyc2VYbWwoZSk7aWYodGhpcy5fZXJyb3JDb2RlPT09UnMpe3RoaXMuX2N1cnJlbnRbc3JdKCk7cmV0dXJuIHRoaXMuX2N1cnJlbnQuZWxlbWVudH19b25UZXh0KGUpe2U9ZS5yZXBsYWNlKHRoaXMuX25ic3BzLChlPT5lLnNsaWNlKDEpKyIgIikpO3RoaXMuX3JpY2hUZXh0fHx0aGlzLl9jdXJyZW50W1dzXSgpP3RoaXMuX2N1cnJlbnRbcXJdKGUsdGhpcy5fcmljaFRleHQpOnRoaXMuX3doaXRlUmVnZXgudGVzdChlKXx8dGhpcy5fY3VycmVudFtxcl0oZS50cmltKCkpfW9uQ2RhdGEoZSl7dGhpcy5fY3VycmVudFtxcl0oZSl9X21rQXR0cmlidXRlcyhlLHQpe2xldCBpPW51bGwsYT1udWxsO2NvbnN0IHM9T2JqZWN0LmNyZWF0ZSh7fSk7Zm9yKGNvbnN0e25hbWU6cix2YWx1ZTpufW9mIGUpaWYoInhtbG5zIj09PXIpaT93YXJuKGBYRkEgLSBtdWx0aXBsZSBuYW1lc3BhY2UgZGVmaW5pdGlvbiBpbiA8JHt0fT5gKTppPW47ZWxzZSBpZihyLnN0YXJ0c1dpdGgoInhtbG5zOiIpKXtjb25zdCBlPXIuc3Vic3RyaW5nKDYpO2F8fChhPVtdKTthLnB1c2goe3ByZWZpeDplLHZhbHVlOm59KX1lbHNle2NvbnN0IGU9ci5pbmRleE9mKCI6Iik7aWYoLTE9PT1lKXNbcl09bjtlbHNle2xldCB0PXNbdnJdO3R8fCh0PXNbdnJdPU9iamVjdC5jcmVhdGUobnVsbCkpO2NvbnN0W2ksYV09W3Iuc2xpY2UoMCxlKSxyLnNsaWNlKGUrMSldOyh0W2ldfHw9T2JqZWN0LmNyZWF0ZShudWxsKSlbYV09bn19cmV0dXJuW2ksYSxzXX1fZ2V0TmFtZUFuZFByZWZpeChlLHQpe2NvbnN0IGk9ZS5pbmRleE9mKCI6Iik7cmV0dXJuLTE9PT1pP1tlLG51bGxdOltlLnN1YnN0cmluZyhpKzEpLHQ/IiI6ZS5zdWJzdHJpbmcoMCxpKV19b25CZWdpbkVsZW1lbnQoZSx0LGkpe2NvbnN0W2EscyxyXT10aGlzLl9ta0F0dHJpYnV0ZXModCxlKSxbbixvXT10aGlzLl9nZXROYW1lQW5kUHJlZml4KGUsdGhpcy5fYnVpbGRlci5pc05zQWdub3N0aWMoKSksZz10aGlzLl9idWlsZGVyLmJ1aWxkKHtuc1ByZWZpeDpvLG5hbWU6bixhdHRyaWJ1dGVzOnIsbmFtZXNwYWNlOmEscHJlZml4ZXM6c30pO2dbeXJdPXRoaXMuX2dsb2JhbERhdGE7aWYoaSl7Z1tzcl0oKTt0aGlzLl9jdXJyZW50W0tyXShnKSYmZ1t6cl0odGhpcy5faWRzKTtnW1ZzXSh0aGlzLl9idWlsZGVyKX1lbHNle3RoaXMuX3N0YWNrLnB1c2godGhpcy5fY3VycmVudCk7dGhpcy5fY3VycmVudD1nfX1vbkVuZEVsZW1lbnQoZSl7Y29uc3QgdD10aGlzLl9jdXJyZW50O2lmKHRbU3JdKCkmJiJzdHJpbmciPT10eXBlb2YgdFtlcl0pe2NvbnN0IGU9bmV3IFhGQVBhcnNlcjtlLl9nbG9iYWxEYXRhPXRoaXMuX2dsb2JhbERhdGE7Y29uc3QgaT1lLnBhcnNlKHRbZXJdKTt0W2VyXT1udWxsO3RbS3JdKGkpfXRbc3JdKCk7dGhpcy5fY3VycmVudD10aGlzLl9zdGFjay5wb3AoKTt0aGlzLl9jdXJyZW50W0tyXSh0KSYmdFt6cl0odGhpcy5faWRzKTt0W1ZzXSh0aGlzLl9idWlsZGVyKX1vbkVycm9yKGUpe3RoaXMuX2Vycm9yQ29kZT1lfX1jbGFzcyBYRkFGYWN0b3J5e2NvbnN0cnVjdG9yKGUpe3RyeXt0aGlzLnJvb3Q9KG5ldyBYRkFQYXJzZXIpLnBhcnNlKFhGQUZhY3RvcnkuX2NyZWF0ZURvY3VtZW50KGUpKTtjb25zdCB0PW5ldyBCaW5kZXIodGhpcy5yb290KTt0aGlzLmZvcm09dC5iaW5kKCk7dGhpcy5kYXRhSGFuZGxlcj1uZXcgRGF0YUhhbmRsZXIodGhpcy5yb290LHQuZ2V0RGF0YSgpKTt0aGlzLmZvcm1beXJdLnRlbXBsYXRlPXRoaXMuZm9ybX1jYXRjaChlKXt3YXJuKGBYRkEgLSBhbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgcGFyc2luZyBhbmQgYmluZGluZzogJHtlfWApfX1pc1ZhbGlkKCl7cmV0dXJuIHRoaXMucm9vdCYmdGhpcy5mb3JtfV9jcmVhdGVQYWdlc0hlbHBlcigpe2NvbnN0IGU9dGhpcy5mb3JtW3RuXSgpO3JldHVybiBuZXcgUHJvbWlzZSgoKHQsaSk9Pntjb25zdCBuZXh0SXRlcmF0aW9uPSgpPT57dHJ5e2NvbnN0IGk9ZS5uZXh0KCk7aS5kb25lP3QoaS52YWx1ZSk6c2V0VGltZW91dChuZXh0SXRlcmF0aW9uLDApfWNhdGNoKGUpe2koZSl9fTtzZXRUaW1lb3V0KG5leHRJdGVyYXRpb24sMCl9KSl9YXN5bmMgX2NyZWF0ZVBhZ2VzKCl7dHJ5e3RoaXMucGFnZXM9YXdhaXQgdGhpcy5fY3JlYXRlUGFnZXNIZWxwZXIoKTt0aGlzLmRpbXM9dGhpcy5wYWdlcy5jaGlsZHJlbi5tYXAoKGU9Pntjb25zdHt3aWR0aDp0LGhlaWdodDppfT1lLmF0dHJpYnV0ZXMuc3R5bGU7cmV0dXJuWzAsMCxwYXJzZUludCh0KSxwYXJzZUludChpKV19KSl9Y2F0Y2goZSl7d2FybihgWEZBIC0gYW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIGxheW91dDogJHtlfWApfX1nZXRCb3VuZGluZ0JveChlKXtyZXR1cm4gdGhpcy5kaW1zW2VdfWFzeW5jIGdldE51bVBhZ2VzKCl7dGhpcy5wYWdlc3x8YXdhaXQgdGhpcy5fY3JlYXRlUGFnZXMoKTtyZXR1cm4gdGhpcy5kaW1zLmxlbmd0aH1zZXRJbWFnZXMoZSl7dGhpcy5mb3JtW3lyXS5pbWFnZXM9ZX1zZXRGb250cyhlKXt0aGlzLmZvcm1beXJdLmZvbnRGaW5kZXI9bmV3IEZvbnRGaW5kZXIoZSk7Y29uc3QgdD1bXTtmb3IobGV0IGUgb2YgdGhpcy5mb3JtW3lyXS51c2VkVHlwZWZhY2VzKXtlPXN0cmlwUXVvdGVzKGUpO3RoaXMuZm9ybVt5cl0uZm9udEZpbmRlci5maW5kKGUpfHx0LnB1c2goZSl9cmV0dXJuIHQubGVuZ3RoPjA/dDpudWxsfWFwcGVuZEZvbnRzKGUsdCl7dGhpcy5mb3JtW3lyXS5mb250RmluZGVyLmFkZChlLHQpfWFzeW5jIGdldFBhZ2VzKCl7dGhpcy5wYWdlc3x8YXdhaXQgdGhpcy5fY3JlYXRlUGFnZXMoKTtjb25zdCBlPXRoaXMucGFnZXM7dGhpcy5wYWdlcz1udWxsO3JldHVybiBlfXNlcmlhbGl6ZURhdGEoZSl7cmV0dXJuIHRoaXMuZGF0YUhhbmRsZXIuc2VyaWFsaXplKGUpfXN0YXRpYyBfY3JlYXRlRG9jdW1lbnQoZSl7cmV0dXJuIGVbIi94ZHA6eGRwIl0/T2JqZWN0LnZhbHVlcyhlKS5qb2luKCIiKTplWyJ4ZHA6eGRwIl19c3RhdGljIGdldFJpY2hUZXh0QXNIdG1sKGUpe2lmKCFlfHwic3RyaW5nIiE9dHlwZW9mIGUpcmV0dXJuIG51bGw7dHJ5e2xldCB0PW5ldyBYRkFQYXJzZXIoWGh0bWxOYW1lc3BhY2UsITApLnBhcnNlKGUpO2lmKCFbImJvZHkiLCJ4aHRtbCJdLmluY2x1ZGVzKHRbWXJdKSl7Y29uc3QgZT1YaHRtbE5hbWVzcGFjZS5ib2R5KHt9KTtlW2pzXSh0KTt0PWV9Y29uc3QgaT10W2FuXSgpO2lmKCFpLnN1Y2Nlc3MpcmV0dXJuIG51bGw7Y29uc3R7aHRtbDphfT1pLHthdHRyaWJ1dGVzOnN9PWE7aWYocyl7cy5jbGFzcyYmKHMuY2xhc3M9cy5jbGFzcy5maWx0ZXIoKGU9PiFlLnN0YXJ0c1dpdGgoInhmYSIpKSkpO3MuZGlyPSJhdXRvIn1yZXR1cm57aHRtbDphLHN0cjp0W2VuXSgpfX1jYXRjaChlKXt3YXJuKGBYRkEgLSBhbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgcGFyc2luZyBvZiByaWNoIHRleHQ6ICR7ZX1gKX1yZXR1cm4gbnVsbH19Y2xhc3MgQW5ub3RhdGlvbkZhY3Rvcnl7c3RhdGljIGNyZWF0ZUdsb2JhbHMoZSl7cmV0dXJuIFByb21pc2UuYWxsKFtlLmVuc3VyZUNhdGFsb2coImFjcm9Gb3JtIiksZS5lbnN1cmVEb2MoInhmYURhdGFzZXRzIiksZS5lbnN1cmVDYXRhbG9nKCJzdHJ1Y3RUcmVlUm9vdCIpLGUuZW5zdXJlQ2F0YWxvZygiYmFzZVVybCIpLGUuZW5zdXJlQ2F0YWxvZygiYXR0YWNobWVudHMiKV0pLnRoZW4oKChbdCxpLGEscyxyXSk9Pih7cGRmTWFuYWdlcjplLGFjcm9Gb3JtOnQgaW5zdGFuY2VvZiBEaWN0P3Q6RGljdC5lbXB0eSx4ZmFEYXRhc2V0czppLHN0cnVjdFRyZWVSb290OmEsYmFzZVVybDpzLGF0dGFjaG1lbnRzOnJ9KSksKGU9Pnt3YXJuKGBjcmVhdGVHbG9iYWxzOiAiJHtlfSIuYCk7cmV0dXJuIG51bGx9KSl9c3RhdGljIGFzeW5jIGNyZWF0ZShlLHQsaSxhLHMscil7Y29uc3Qgbj1zP2F3YWl0IHRoaXMuX2dldFBhZ2VJbmRleChlLHQsaS5wZGZNYW5hZ2VyKTpudWxsO3JldHVybiBpLnBkZk1hbmFnZXIuZW5zdXJlKHRoaXMsIl9jcmVhdGUiLFtlLHQsaSxhLHMsbixyXSl9c3RhdGljIF9jcmVhdGUoZSx0LGksYSxzPSExLHI9bnVsbCxuPW51bGwpe2NvbnN0IG89ZS5mZXRjaElmUmVmKHQpO2lmKCEobyBpbnN0YW5jZW9mIERpY3QpKXJldHVybjtjb25zdHthY3JvRm9ybTpnLHBkZk1hbmFnZXI6Y309aSxoPXQgaW5zdGFuY2VvZiBSZWY/dC50b1N0cmluZygpOmBhbm5vdF8ke2EuY3JlYXRlT2JqSWQoKX1gO2xldCBsPW8uZ2V0KCJTdWJ0eXBlIik7bD1sIGluc3RhbmNlb2YgTmFtZT9sLm5hbWU6bnVsbDtjb25zdCBDPXt4cmVmOmUscmVmOnQsZGljdDpvLHN1YnR5cGU6bCxpZDpoLGFubm90YXRpb25HbG9iYWxzOmksY29sbGVjdEZpZWxkczpzLG5lZWRBcHBlYXJhbmNlczohcyYmITA9PT1nLmdldCgiTmVlZEFwcGVhcmFuY2VzIikscGFnZUluZGV4OnIsZXZhbHVhdG9yT3B0aW9uczpjLmV2YWx1YXRvck9wdGlvbnMscGFnZVJlZjpufTtzd2l0Y2gobCl7Y2FzZSJMaW5rIjpyZXR1cm4gbmV3IExpbmtBbm5vdGF0aW9uKEMpO2Nhc2UiVGV4dCI6cmV0dXJuIG5ldyBUZXh0QW5ub3RhdGlvbihDKTtjYXNlIldpZGdldCI6bGV0IGU9Z2V0SW5oZXJpdGFibGVQcm9wZXJ0eSh7ZGljdDpvLGtleToiRlQifSk7ZT1lIGluc3RhbmNlb2YgTmFtZT9lLm5hbWU6bnVsbDtzd2l0Y2goZSl7Y2FzZSJUeCI6cmV0dXJuIG5ldyBUZXh0V2lkZ2V0QW5ub3RhdGlvbihDKTtjYXNlIkJ0biI6cmV0dXJuIG5ldyBCdXR0b25XaWRnZXRBbm5vdGF0aW9uKEMpO2Nhc2UiQ2giOnJldHVybiBuZXcgQ2hvaWNlV2lkZ2V0QW5ub3RhdGlvbihDKTtjYXNlIlNpZyI6cmV0dXJuIG5ldyBTaWduYXR1cmVXaWRnZXRBbm5vdGF0aW9uKEMpfXdhcm4oYFVuaW1wbGVtZW50ZWQgd2lkZ2V0IGZpZWxkIHR5cGUgIiR7ZX0iLCBmYWxsaW5nIGJhY2sgdG8gYmFzZSBmaWVsZCB0eXBlLmApO3JldHVybiBuZXcgV2lkZ2V0QW5ub3RhdGlvbihDKTtjYXNlIlBvcHVwIjpyZXR1cm4gbmV3IFBvcHVwQW5ub3RhdGlvbihDKTtjYXNlIkZyZWVUZXh0IjpyZXR1cm4gbmV3IEZyZWVUZXh0QW5ub3RhdGlvbihDKTtjYXNlIkxpbmUiOnJldHVybiBuZXcgTGluZUFubm90YXRpb24oQyk7Y2FzZSJTcXVhcmUiOnJldHVybiBuZXcgU3F1YXJlQW5ub3RhdGlvbihDKTtjYXNlIkNpcmNsZSI6cmV0dXJuIG5ldyBDaXJjbGVBbm5vdGF0aW9uKEMpO2Nhc2UiUG9seUxpbmUiOnJldHVybiBuZXcgUG9seWxpbmVBbm5vdGF0aW9uKEMpO2Nhc2UiUG9seWdvbiI6cmV0dXJuIG5ldyBQb2x5Z29uQW5ub3RhdGlvbihDKTtjYXNlIkNhcmV0IjpyZXR1cm4gbmV3IENhcmV0QW5ub3RhdGlvbihDKTtjYXNlIkluayI6cmV0dXJuIG5ldyBJbmtBbm5vdGF0aW9uKEMpO2Nhc2UiSGlnaGxpZ2h0IjpyZXR1cm4gbmV3IEhpZ2hsaWdodEFubm90YXRpb24oQyk7Y2FzZSJVbmRlcmxpbmUiOnJldHVybiBuZXcgVW5kZXJsaW5lQW5ub3RhdGlvbihDKTtjYXNlIlNxdWlnZ2x5IjpyZXR1cm4gbmV3IFNxdWlnZ2x5QW5ub3RhdGlvbihDKTtjYXNlIlN0cmlrZU91dCI6cmV0dXJuIG5ldyBTdHJpa2VPdXRBbm5vdGF0aW9uKEMpO2Nhc2UiU3RhbXAiOnJldHVybiBuZXcgU3RhbXBBbm5vdGF0aW9uKEMpO2Nhc2UiRmlsZUF0dGFjaG1lbnQiOnJldHVybiBuZXcgRmlsZUF0dGFjaG1lbnRBbm5vdGF0aW9uKEMpO2RlZmF1bHQ6c3x8d2FybihsP2BVbmltcGxlbWVudGVkIGFubm90YXRpb24gdHlwZSAiJHtsfSIsIGZhbGxpbmcgYmFjayB0byBiYXNlIGFubm90YXRpb24uYDoiQW5ub3RhdGlvbiBpcyBtaXNzaW5nIHRoZSByZXF1aXJlZCAvU3VidHlwZS4iKTtyZXR1cm4gbmV3IEFubm90YXRpb24oQyl9fXN0YXRpYyBhc3luYyBfZ2V0UGFnZUluZGV4KGUsdCxpKXt0cnl7Y29uc3QgYT1hd2FpdCBlLmZldGNoSWZSZWZBc3luYyh0KTtpZighKGEgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm4tMTtjb25zdCBzPWEuZ2V0UmF3KCJQIik7aWYocyBpbnN0YW5jZW9mIFJlZil0cnl7cmV0dXJuIGF3YWl0IGkuZW5zdXJlQ2F0YWxvZygiZ2V0UGFnZUluZGV4Iixbc10pfWNhdGNoKGUpe2luZm8oYF9nZXRQYWdlSW5kZXggLS0gbm90IGEgdmFsaWQgcGFnZSByZWZlcmVuY2U6ICIke2V9Ii5gKX1pZihhLmhhcygiS2lkcyIpKXJldHVybi0xO2NvbnN0IHI9YXdhaXQgaS5lbnN1cmVEb2MoIm51bVBhZ2VzIik7Zm9yKGxldCBlPTA7ZTxyO2UrKyl7Y29uc3QgYT1hd2FpdCBpLmdldFBhZ2UoZSkscz1hd2FpdCBpLmVuc3VyZShhLCJhbm5vdGF0aW9ucyIpO2Zvcihjb25zdCBpIG9mIHMpaWYoaSBpbnN0YW5jZW9mIFJlZiYmaXNSZWZzRXF1YWwoaSx0KSlyZXR1cm4gZX19Y2F0Y2goZSl7d2FybihgX2dldFBhZ2VJbmRleDogIiR7ZX0iLmApfXJldHVybi0xfXN0YXRpYyBnZW5lcmF0ZUltYWdlcyhlLHQsaSl7aWYoIWkpe3dhcm4oImdlbmVyYXRlSW1hZ2VzOiBPZmZzY3JlZW5DYW52YXMgaXMgbm90IHN1cHBvcnRlZCwgY2Fubm90IHNhdmUgb3IgcHJpbnQgc29tZSBhbm5vdGF0aW9ucyB3aXRoIGltYWdlcy4iKTtyZXR1cm4gbnVsbH1sZXQgYTtmb3IoY29uc3R7Yml0bWFwSWQ6aSxiaXRtYXA6c31vZiBlKWlmKHMpe2F8fD1uZXcgTWFwO2Euc2V0KGksU3RhbXBBbm5vdGF0aW9uLmNyZWF0ZUltYWdlKHMsdCkpfXJldHVybiBhfXN0YXRpYyBhc3luYyBzYXZlTmV3QW5ub3RhdGlvbnMoZSx0LGksYSl7Y29uc3Qgcz1lLnhyZWY7bGV0IHI7Y29uc3Qgbj1bXSxvPVtdLHtpc09mZnNjcmVlbkNhbnZhc1N1cHBvcnRlZDpnfT1lLm9wdGlvbnM7Zm9yKGNvbnN0IGMgb2YgaSlpZighYy5kZWxldGVkKXN3aXRjaChjLmFubm90YXRpb25UeXBlKXtjYXNlIHU6aWYoIXIpe2NvbnN0IGU9bmV3IERpY3Qocyk7ZS5zZXQoIkJhc2VGb250IixOYW1lLmdldCgiSGVsdmV0aWNhIikpO2Uuc2V0KCJUeXBlIixOYW1lLmdldCgiRm9udCIpKTtlLnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIlR5cGUxIikpO2Uuc2V0KCJFbmNvZGluZyIsTmFtZS5nZXQoIldpbkFuc2lFbmNvZGluZyIpKTtjb25zdCB0PVtdO3I9cy5nZXROZXdUZW1wb3JhcnlSZWYoKTthd2FpdCB3cml0ZU9iamVjdChyLGUsdCxzKTtuLnB1c2goe3JlZjpyLGRhdGE6dC5qb2luKCIiKX0pfW8ucHVzaChGcmVlVGV4dEFubm90YXRpb24uY3JlYXRlTmV3QW5ub3RhdGlvbihzLGMsbix7ZXZhbHVhdG9yOmUsdGFzazp0LGJhc2VGb250UmVmOnJ9KSk7YnJlYWs7Y2FzZSBkOmMucXVhZFBvaW50cz9vLnB1c2goSGlnaGxpZ2h0QW5ub3RhdGlvbi5jcmVhdGVOZXdBbm5vdGF0aW9uKHMsYyxuKSk6by5wdXNoKElua0Fubm90YXRpb24uY3JlYXRlTmV3QW5ub3RhdGlvbihzLGMsbikpO2JyZWFrO2Nhc2UgcDpvLnB1c2goSW5rQW5ub3RhdGlvbi5jcmVhdGVOZXdBbm5vdGF0aW9uKHMsYyxuKSk7YnJlYWs7Y2FzZSBmOmlmKCFnKWJyZWFrO2NvbnN0IGk9YXdhaXQgYS5nZXQoYy5iaXRtYXBJZCk7aWYoaS5pbWFnZVN0cmVhbSl7Y29uc3R7aW1hZ2VTdHJlYW06ZSxzbWFza1N0cmVhbTp0fT1pLGE9W107aWYodCl7Y29uc3QgaT1zLmdldE5ld1RlbXBvcmFyeVJlZigpO2F3YWl0IHdyaXRlT2JqZWN0KGksdCxhLHMpO24ucHVzaCh7cmVmOmksZGF0YTphLmpvaW4oIiIpfSk7ZS5kaWN0LnNldCgiU01hc2siLGkpO2EubGVuZ3RoPTB9Y29uc3Qgcj1pLmltYWdlUmVmPXMuZ2V0TmV3VGVtcG9yYXJ5UmVmKCk7YXdhaXQgd3JpdGVPYmplY3QocixlLGEscyk7bi5wdXNoKHtyZWY6cixkYXRhOmEuam9pbigiIil9KTtpLmltYWdlU3RyZWFtPWkuc21hc2tTdHJlYW09bnVsbH1vLnB1c2goU3RhbXBBbm5vdGF0aW9uLmNyZWF0ZU5ld0Fubm90YXRpb24ocyxjLG4se2ltYWdlOml9KSl9cmV0dXJue2Fubm90YXRpb25zOmF3YWl0IFByb21pc2UuYWxsKG8pLGRlcGVuZGVuY2llczpufX1zdGF0aWMgYXN5bmMgcHJpbnROZXdBbm5vdGF0aW9ucyhlLHQsaSxhLHMpe2lmKCFhKXJldHVybiBudWxsO2NvbnN0e29wdGlvbnM6cix4cmVmOm59PXQsbz1bXTtmb3IoY29uc3QgZyBvZiBhKWlmKCFnLmRlbGV0ZWQpc3dpdGNoKGcuYW5ub3RhdGlvblR5cGUpe2Nhc2UgdTpvLnB1c2goRnJlZVRleHRBbm5vdGF0aW9uLmNyZWF0ZU5ld1ByaW50QW5ub3RhdGlvbihlLG4sZyx7ZXZhbHVhdG9yOnQsdGFzazppLGV2YWx1YXRvck9wdGlvbnM6cn0pKTticmVhaztjYXNlIGQ6Zy5xdWFkUG9pbnRzP28ucHVzaChIaWdobGlnaHRBbm5vdGF0aW9uLmNyZWF0ZU5ld1ByaW50QW5ub3RhdGlvbihlLG4sZyx7ZXZhbHVhdG9yT3B0aW9uczpyfSkpOm8ucHVzaChJbmtBbm5vdGF0aW9uLmNyZWF0ZU5ld1ByaW50QW5ub3RhdGlvbihlLG4sZyx7ZXZhbHVhdG9yT3B0aW9uczpyfSkpO2JyZWFrO2Nhc2UgcDpvLnB1c2goSW5rQW5ub3RhdGlvbi5jcmVhdGVOZXdQcmludEFubm90YXRpb24oZSxuLGcse2V2YWx1YXRvck9wdGlvbnM6cn0pKTticmVhaztjYXNlIGY6aWYoIXIuaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQpYnJlYWs7Y29uc3QgYT1hd2FpdCBzLmdldChnLmJpdG1hcElkKTtpZihhLmltYWdlU3RyZWFtKXtjb25zdHtpbWFnZVN0cmVhbTplLHNtYXNrU3RyZWFtOnR9PWE7dCYmZS5kaWN0LnNldCgiU01hc2siLHQpO2EuaW1hZ2VSZWY9bmV3IEpwZWdTdHJlYW0oZSxlLmxlbmd0aCk7YS5pbWFnZVN0cmVhbT1hLnNtYXNrU3RyZWFtPW51bGx9by5wdXNoKFN0YW1wQW5ub3RhdGlvbi5jcmVhdGVOZXdQcmludEFubm90YXRpb24oZSxuLGcse2ltYWdlOmEsZXZhbHVhdG9yT3B0aW9uczpyfSkpfXJldHVybiBQcm9taXNlLmFsbChvKX19ZnVuY3Rpb24gZ2V0UmdiQ29sb3IoZSx0PW5ldyBVaW50OENsYW1wZWRBcnJheSgzKSl7aWYoIUFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIHQ7Y29uc3QgaT10fHxuZXcgVWludDhDbGFtcGVkQXJyYXkoMyk7c3dpdGNoKGUubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG51bGw7Y2FzZSAxOkNvbG9yU3BhY2Uuc2luZ2xldG9ucy5ncmF5LmdldFJnYkl0ZW0oZSwwLGksMCk7cmV0dXJuIGk7Y2FzZSAzOkNvbG9yU3BhY2Uuc2luZ2xldG9ucy5yZ2IuZ2V0UmdiSXRlbShlLDAsaSwwKTtyZXR1cm4gaTtjYXNlIDQ6Q29sb3JTcGFjZS5zaW5nbGV0b25zLmNteWsuZ2V0UmdiSXRlbShlLDAsaSwwKTtyZXR1cm4gaTtkZWZhdWx0OnJldHVybiB0fX1mdW5jdGlvbiBnZXRQZGZDb2xvckFycmF5KGUpe3JldHVybiBBcnJheS5mcm9tKGUsKGU9PmUvMjU1KSl9ZnVuY3Rpb24gZ2V0UXVhZFBvaW50cyhlLHQpe2NvbnN0IGk9ZS5nZXRBcnJheSgiUXVhZFBvaW50cyIpO2lmKCFpc051bWJlckFycmF5KGksbnVsbCl8fDA9PT1pLmxlbmd0aHx8aS5sZW5ndGglOD4wKXJldHVybiBudWxsO2NvbnN0IGE9W107Zm9yKGxldCBlPTAscz1pLmxlbmd0aC84O2U8cztlKyspe2xldCBzPTEvMCxyPS0xLzAsbj0xLzAsbz0tMS8wO2ZvcihsZXQgdD04KmUsYT04KmUrODt0PGE7dCs9Mil7Y29uc3QgZT1pW3RdLGE9aVt0KzFdO3M9TWF0aC5taW4oZSxzKTtyPU1hdGgubWF4KGUscik7bj1NYXRoLm1pbihhLG4pO289TWF0aC5tYXgoYSxvKX1pZihudWxsIT09dCYmKHM8dFswXXx8cj50WzJdfHxuPHRbMV18fG8+dFszXSkpcmV0dXJuIG51bGw7YS5wdXNoKFt7eDpzLHk6b30se3g6cix5Om99LHt4OnMseTpufSx7eDpyLHk6bn1dKX1yZXR1cm4gYX1mdW5jdGlvbiBnZXRUcmFuc2Zvcm1NYXRyaXgoZSx0LGkpe2NvbnN0W2EscyxyLG5dPVV0aWwuZ2V0QXhpYWxBbGlnbmVkQm91bmRpbmdCb3godCxpKTtpZihhPT09cnx8cz09PW4pcmV0dXJuWzEsMCwwLDEsZVswXSxlWzFdXTtjb25zdCBvPShlWzJdLWVbMF0pLyhyLWEpLGc9KGVbM10tZVsxXSkvKG4tcyk7cmV0dXJuW28sMCwwLGcsZVswXS1hKm8sZVsxXS1zKmddfWNsYXNzIEFubm90YXRpb257Y29uc3RydWN0b3IoZSl7Y29uc3R7ZGljdDp0LHhyZWY6aSxhbm5vdGF0aW9uR2xvYmFsczphfT1lO3RoaXMuc2V0VGl0bGUodC5nZXQoIlQiKSk7dGhpcy5zZXRDb250ZW50cyh0LmdldCgiQ29udGVudHMiKSk7dGhpcy5zZXRNb2RpZmljYXRpb25EYXRlKHQuZ2V0KCJNIikpO3RoaXMuc2V0RmxhZ3ModC5nZXQoIkYiKSk7dGhpcy5zZXRSZWN0YW5nbGUodC5nZXRBcnJheSgiUmVjdCIpKTt0aGlzLnNldENvbG9yKHQuZ2V0QXJyYXkoIkMiKSk7dGhpcy5zZXRCb3JkZXJTdHlsZSh0KTt0aGlzLnNldEFwcGVhcmFuY2UodCk7dGhpcy5zZXRPcHRpb25hbENvbnRlbnQodCk7Y29uc3Qgcz10LmdldCgiTUsiKTt0aGlzLnNldEJvcmRlckFuZEJhY2tncm91bmRDb2xvcnMocyk7dGhpcy5zZXRSb3RhdGlvbihzLHQpO3RoaXMucmVmPWUucmVmIGluc3RhbmNlb2YgUmVmP2UucmVmOm51bGw7dGhpcy5fc3RyZWFtcz1bXTt0aGlzLmFwcGVhcmFuY2UmJnRoaXMuX3N0cmVhbXMucHVzaCh0aGlzLmFwcGVhcmFuY2UpO2NvbnN0IHI9ISEodGhpcy5mbGFncyZBQSksbj0hISh0aGlzLmZsYWdzJmVBKTtpZihhLnN0cnVjdFRyZWVSb290KXtsZXQgaT10LmdldCgiU3RydWN0UGFyZW50Iik7aT1OdW1iZXIuaXNJbnRlZ2VyKGkpJiZpPj0wP2k6LTE7YS5zdHJ1Y3RUcmVlUm9vdC5hZGRBbm5vdGF0aW9uSWRUb1BhZ2UoZS5wYWdlUmVmLGkpfXRoaXMuZGF0YT17YW5ub3RhdGlvbkZsYWdzOnRoaXMuZmxhZ3MsYm9yZGVyU3R5bGU6dGhpcy5ib3JkZXJTdHlsZSxjb2xvcjp0aGlzLmNvbG9yLGJhY2tncm91bmRDb2xvcjp0aGlzLmJhY2tncm91bmRDb2xvcixib3JkZXJDb2xvcjp0aGlzLmJvcmRlckNvbG9yLHJvdGF0aW9uOnRoaXMucm90YXRpb24sY29udGVudHNPYmo6dGhpcy5fY29udGVudHMsaGFzQXBwZWFyYW5jZTohIXRoaXMuYXBwZWFyYW5jZSxpZDplLmlkLG1vZGlmaWNhdGlvbkRhdGU6dGhpcy5tb2RpZmljYXRpb25EYXRlLHJlY3Q6dGhpcy5yZWN0YW5nbGUsc3VidHlwZTplLnN1YnR5cGUsaGFzT3duQ2FudmFzOiExLG5vUm90YXRlOiEhKHRoaXMuZmxhZ3MmXyksbm9IVE1MOnImJm59O2lmKGUuY29sbGVjdEZpZWxkcyl7Y29uc3QgYT10LmdldCgiS2lkcyIpO2lmKEFycmF5LmlzQXJyYXkoYSkpe2NvbnN0IGU9W107Zm9yKGNvbnN0IHQgb2YgYSl0IGluc3RhbmNlb2YgUmVmJiZlLnB1c2godC50b1N0cmluZygpKTswIT09ZS5sZW5ndGgmJih0aGlzLmRhdGEua2lkSWRzPWUpfXRoaXMuZGF0YS5hY3Rpb25zPWNvbGxlY3RBY3Rpb25zKGksdCx1QSk7dGhpcy5kYXRhLmZpZWxkTmFtZT10aGlzLl9jb25zdHJ1Y3RGaWVsZE5hbWUodCk7dGhpcy5kYXRhLnBhZ2VJbmRleD1lLnBhZ2VJbmRleH10aGlzLl9pc09mZnNjcmVlbkNhbnZhc1N1cHBvcnRlZD1lLmV2YWx1YXRvck9wdGlvbnMuaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQ7dGhpcy5fZmFsbGJhY2tGb250RGljdD1udWxsO3RoaXMuX25lZWRBcHBlYXJhbmNlcz0hMX1faGFzRmxhZyhlLHQpe3JldHVybiEhKGUmdCl9X2lzVmlld2FibGUoZSl7cmV0dXJuIXRoaXMuX2hhc0ZsYWcoZSxaKSYmIXRoaXMuX2hhc0ZsYWcoZSwkKX1faXNQcmludGFibGUoZSl7cmV0dXJuIHRoaXMuX2hhc0ZsYWcoZSx6KSYmIXRoaXMuX2hhc0ZsYWcoZSxWKSYmIXRoaXMuX2hhc0ZsYWcoZSxaKX1tdXN0QmVWaWV3ZWQoZSx0KXtjb25zdCBpPWU/LmdldCh0aGlzLmRhdGEuaWQpPy5ub1ZpZXc7cmV0dXJuIHZvaWQgMCE9PWk/IWk6dGhpcy52aWV3YWJsZSYmIXRoaXMuX2hhc0ZsYWcodGhpcy5mbGFncyxWKX1tdXN0QmVQcmludGVkKGUpe2NvbnN0IHQ9ZT8uZ2V0KHRoaXMuZGF0YS5pZCk/Lm5vUHJpbnQ7cmV0dXJuIHZvaWQgMCE9PXQ/IXQ6dGhpcy5wcmludGFibGV9Z2V0IHZpZXdhYmxlKCl7cmV0dXJuIG51bGwhPT10aGlzLmRhdGEucXVhZFBvaW50cyYmKDA9PT10aGlzLmZsYWdzfHx0aGlzLl9pc1ZpZXdhYmxlKHRoaXMuZmxhZ3MpKX1nZXQgcHJpbnRhYmxlKCl7cmV0dXJuIG51bGwhPT10aGlzLmRhdGEucXVhZFBvaW50cyYmKDAhPT10aGlzLmZsYWdzJiZ0aGlzLl9pc1ByaW50YWJsZSh0aGlzLmZsYWdzKSl9X3BhcnNlU3RyaW5nSGVscGVyKGUpe2NvbnN0IHQ9InN0cmluZyI9PXR5cGVvZiBlP3N0cmluZ1RvUERGU3RyaW5nKGUpOiIiO3JldHVybntzdHI6dCxkaXI6dCYmInJ0bCI9PT1iaWRpKHQpLmRpcj8icnRsIjoibHRyIn19c2V0RGVmYXVsdEFwcGVhcmFuY2UoZSl7Y29uc3R7ZGljdDp0LGFubm90YXRpb25HbG9iYWxzOml9PWUsYT1nZXRJbmhlcml0YWJsZVByb3BlcnR5KHtkaWN0OnQsa2V5OiJEQSJ9KXx8aS5hY3JvRm9ybS5nZXQoIkRBIik7dGhpcy5fZGVmYXVsdEFwcGVhcmFuY2U9InN0cmluZyI9PXR5cGVvZiBhP2E6IiI7dGhpcy5kYXRhLmRlZmF1bHRBcHBlYXJhbmNlRGF0YT1wYXJzZURlZmF1bHRBcHBlYXJhbmNlKHRoaXMuX2RlZmF1bHRBcHBlYXJhbmNlKX1zZXRUaXRsZShlKXt0aGlzLl90aXRsZT10aGlzLl9wYXJzZVN0cmluZ0hlbHBlcihlKX1zZXRDb250ZW50cyhlKXt0aGlzLl9jb250ZW50cz10aGlzLl9wYXJzZVN0cmluZ0hlbHBlcihlKX1zZXRNb2RpZmljYXRpb25EYXRlKGUpe3RoaXMubW9kaWZpY2F0aW9uRGF0ZT0ic3RyaW5nIj09dHlwZW9mIGU/ZTpudWxsfXNldEZsYWdzKGUpe3RoaXMuZmxhZ3M9TnVtYmVyLmlzSW50ZWdlcihlKSYmZT4wP2U6MDt0aGlzLmZsYWdzJlomJiJBbm5vdGF0aW9uIiE9PXRoaXMuY29uc3RydWN0b3IubmFtZSYmKHRoaXMuZmxhZ3NePVopfWhhc0ZsYWcoZSl7cmV0dXJuIHRoaXMuX2hhc0ZsYWcodGhpcy5mbGFncyxlKX1zZXRSZWN0YW5nbGUoZSl7dGhpcy5yZWN0YW5nbGU9bG9va3VwTm9ybWFsUmVjdChlLFswLDAsMCwwXSl9c2V0Q29sb3IoZSl7dGhpcy5jb2xvcj1nZXRSZ2JDb2xvcihlKX1zZXRMaW5lRW5kaW5ncyhlKXt0aGlzLmxpbmVFbmRpbmdzPVsiTm9uZSIsIk5vbmUiXTtpZihBcnJheS5pc0FycmF5KGUpJiYyPT09ZS5sZW5ndGgpZm9yKGxldCB0PTA7dDwyO3QrKyl7Y29uc3QgaT1lW3RdO2lmKGkgaW5zdGFuY2VvZiBOYW1lKXN3aXRjaChpLm5hbWUpe2Nhc2UiTm9uZSI6Y29udGludWU7Y2FzZSJTcXVhcmUiOmNhc2UiQ2lyY2xlIjpjYXNlIkRpYW1vbmQiOmNhc2UiT3BlbkFycm93IjpjYXNlIkNsb3NlZEFycm93IjpjYXNlIkJ1dHQiOmNhc2UiUk9wZW5BcnJvdyI6Y2FzZSJSQ2xvc2VkQXJyb3ciOmNhc2UiU2xhc2giOnRoaXMubGluZUVuZGluZ3NbdF09aS5uYW1lO2NvbnRpbnVlfXdhcm4oYElnbm9yaW5nIGludmFsaWQgbGluZUVuZGluZzogJHtpfWApfX1zZXRSb3RhdGlvbihlLHQpe3RoaXMucm90YXRpb249MDtsZXQgaT1lIGluc3RhbmNlb2YgRGljdD9lLmdldCgiUiIpfHwwOnQuZ2V0KCJSb3RhdGUiKXx8MDtpZihOdW1iZXIuaXNJbnRlZ2VyKGkpJiYwIT09aSl7aSU9MzYwO2k8MCYmKGkrPTM2MCk7aSU5MD09MCYmKHRoaXMucm90YXRpb249aSl9fXNldEJvcmRlckFuZEJhY2tncm91bmRDb2xvcnMoZSl7aWYoZSBpbnN0YW5jZW9mIERpY3Qpe3RoaXMuYm9yZGVyQ29sb3I9Z2V0UmdiQ29sb3IoZS5nZXRBcnJheSgiQkMiKSxudWxsKTt0aGlzLmJhY2tncm91bmRDb2xvcj1nZXRSZ2JDb2xvcihlLmdldEFycmF5KCJCRyIpLG51bGwpfWVsc2UgdGhpcy5ib3JkZXJDb2xvcj10aGlzLmJhY2tncm91bmRDb2xvcj1udWxsfXNldEJvcmRlclN0eWxlKGUpe3RoaXMuYm9yZGVyU3R5bGU9bmV3IEFubm90YXRpb25Cb3JkZXJTdHlsZTtpZihlIGluc3RhbmNlb2YgRGljdClpZihlLmhhcygiQlMiKSl7Y29uc3QgdD1lLmdldCgiQlMiKTtpZih0IGluc3RhbmNlb2YgRGljdCl7Y29uc3QgZT10LmdldCgiVHlwZSIpO2lmKCFlfHxpc05hbWUoZSwiQm9yZGVyIikpe3RoaXMuYm9yZGVyU3R5bGUuc2V0V2lkdGgodC5nZXQoIlciKSx0aGlzLnJlY3RhbmdsZSk7dGhpcy5ib3JkZXJTdHlsZS5zZXRTdHlsZSh0LmdldCgiUyIpKTt0aGlzLmJvcmRlclN0eWxlLnNldERhc2hBcnJheSh0LmdldEFycmF5KCJEIikpfX19ZWxzZSBpZihlLmhhcygiQm9yZGVyIikpe2NvbnN0IHQ9ZS5nZXRBcnJheSgiQm9yZGVyIik7aWYoQXJyYXkuaXNBcnJheSh0KSYmdC5sZW5ndGg+PTMpe3RoaXMuYm9yZGVyU3R5bGUuc2V0SG9yaXpvbnRhbENvcm5lclJhZGl1cyh0WzBdKTt0aGlzLmJvcmRlclN0eWxlLnNldFZlcnRpY2FsQ29ybmVyUmFkaXVzKHRbMV0pO3RoaXMuYm9yZGVyU3R5bGUuc2V0V2lkdGgodFsyXSx0aGlzLnJlY3RhbmdsZSk7ND09PXQubGVuZ3RoJiZ0aGlzLmJvcmRlclN0eWxlLnNldERhc2hBcnJheSh0WzNdLCEwKX19ZWxzZSB0aGlzLmJvcmRlclN0eWxlLnNldFdpZHRoKDApfXNldEFwcGVhcmFuY2UoZSl7dGhpcy5hcHBlYXJhbmNlPW51bGw7Y29uc3QgdD1lLmdldCgiQVAiKTtpZighKHQgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm47Y29uc3QgaT10LmdldCgiTiIpO2lmKGkgaW5zdGFuY2VvZiBCYXNlU3RyZWFtKXt0aGlzLmFwcGVhcmFuY2U9aTtyZXR1cm59aWYoIShpIGluc3RhbmNlb2YgRGljdCkpcmV0dXJuO2NvbnN0IGE9ZS5nZXQoIkFTIik7aWYoIShhIGluc3RhbmNlb2YgTmFtZSYmaS5oYXMoYS5uYW1lKSkpcmV0dXJuO2NvbnN0IHM9aS5nZXQoYS5uYW1lKTtzIGluc3RhbmNlb2YgQmFzZVN0cmVhbSYmKHRoaXMuYXBwZWFyYW5jZT1zKX1zZXRPcHRpb25hbENvbnRlbnQoZSl7dGhpcy5vYz1udWxsO2NvbnN0IHQ9ZS5nZXQoIk9DIik7dCBpbnN0YW5jZW9mIE5hbWU/d2Fybigic2V0T3B0aW9uYWxDb250ZW50OiBTdXBwb3J0IGZvciAvTmFtZS1lbnRyeSBpcyBub3QgaW1wbGVtZW50ZWQuIik6dCBpbnN0YW5jZW9mIERpY3QmJih0aGlzLm9jPXQpfWxvYWRSZXNvdXJjZXMoZSx0KXtyZXR1cm4gdC5kaWN0LmdldEFzeW5jKCJSZXNvdXJjZXMiKS50aGVuKCh0PT57aWYoIXQpcmV0dXJuO3JldHVybiBuZXcgT2JqZWN0TG9hZGVyKHQsZSx0LnhyZWYpLmxvYWQoKS50aGVuKChmdW5jdGlvbigpe3JldHVybiB0fSkpfSkpfWFzeW5jIGdldE9wZXJhdG9yTGlzdChlLHQsYSxzLHIpe2NvbnN0e2hhc093bkNhbnZhczpuLGlkOm8scmVjdDpjfT10aGlzLmRhdGE7bGV0IGg9dGhpcy5hcHBlYXJhbmNlO2NvbnN0IGw9ISEobiYmYSZnKTtpZihsJiYoY1swXT09PWNbMl18fGNbMV09PT1jWzNdKSl7dGhpcy5kYXRhLmhhc093bkNhbnZhcz0hMTtyZXR1cm57b3BMaXN0Om5ldyBPcGVyYXRvckxpc3Qsc2VwYXJhdGVGb3JtOiExLHNlcGFyYXRlQ2FudmFzOiExfX1pZighaCl7aWYoIWwpcmV0dXJue29wTGlzdDpuZXcgT3BlcmF0b3JMaXN0LHNlcGFyYXRlRm9ybTohMSxzZXBhcmF0ZUNhbnZhczohMX07aD1uZXcgU3RyaW5nU3RyZWFtKCIiKTtoLmRpY3Q9bmV3IERpY3R9Y29uc3QgQz1oLmRpY3QsUT1hd2FpdCB0aGlzLmxvYWRSZXNvdXJjZXMoWyJFeHRHU3RhdGUiLCJDb2xvclNwYWNlIiwiUGF0dGVybiIsIlNoYWRpbmciLCJYT2JqZWN0IiwiRm9udCJdLGgpLEU9bG9va3VwUmVjdChDLmdldEFycmF5KCJCQm94IiksWzAsMCwxLDFdKSx1PWxvb2t1cE1hdHJpeChDLmdldEFycmF5KCJNYXRyaXgiKSxpKSxkPWdldFRyYW5zZm9ybU1hdHJpeChjLEUsdSksZj1uZXcgT3BlcmF0b3JMaXN0O2xldCBwO3RoaXMub2MmJihwPWF3YWl0IGUucGFyc2VNYXJrZWRDb250ZW50UHJvcHModGhpcy5vYyxudWxsKSk7dm9pZCAwIT09cCYmZi5hZGRPcChIZSxbIk9DIixwXSk7Zi5hZGRPcChXZSxbbyxjLGQsdSxsXSk7YXdhaXQgZS5nZXRPcGVyYXRvckxpc3Qoe3N0cmVhbTpoLHRhc2s6dCxyZXNvdXJjZXM6USxvcGVyYXRvckxpc3Q6ZixmYWxsYmFja0ZvbnREaWN0OnRoaXMuX2ZhbGxiYWNrRm9udERpY3R9KTtmLmFkZE9wKFhlLFtdKTt2b2lkIDAhPT1wJiZmLmFkZE9wKFllLFtdKTt0aGlzLnJlc2V0KCk7cmV0dXJue29wTGlzdDpmLHNlcGFyYXRlRm9ybTohMSxzZXBhcmF0ZUNhbnZhczpsfX1hc3luYyBzYXZlKGUsdCxpKXtyZXR1cm4gbnVsbH1nZXQgaGFzVGV4dENvbnRlbnQoKXtyZXR1cm4hMX1hc3luYyBleHRyYWN0VGV4dENvbnRlbnQoZSx0LGkpe2lmKCF0aGlzLmFwcGVhcmFuY2UpcmV0dXJuO2NvbnN0IGE9YXdhaXQgdGhpcy5sb2FkUmVzb3VyY2VzKFsiRXh0R1N0YXRlIiwiRm9udCIsIlByb3BlcnRpZXMiLCJYT2JqZWN0Il0sdGhpcy5hcHBlYXJhbmNlKSxzPVtdLHI9W107bGV0IG49bnVsbDtjb25zdCBvPXtkZXNpcmVkU2l6ZTpNYXRoLkluZmluaXR5LHJlYWR5OiEwLGVucXVldWUoZSx0KXtmb3IoY29uc3QgdCBvZiBlLml0ZW1zKWlmKHZvaWQgMCE9PXQuc3RyKXtufHw9dC50cmFuc2Zvcm0uc2xpY2UoLTIpO3IucHVzaCh0LnN0cik7aWYodC5oYXNFT0wpe3MucHVzaChyLmpvaW4oIiIpLnRyaW1FbmQoKSk7ci5sZW5ndGg9MH19fX07YXdhaXQgZS5nZXRUZXh0Q29udGVudCh7c3RyZWFtOnRoaXMuYXBwZWFyYW5jZSx0YXNrOnQscmVzb3VyY2VzOmEsaW5jbHVkZU1hcmtlZENvbnRlbnQ6ITAsa2VlcFdoaXRlU3BhY2U6ITAsc2luazpvLHZpZXdCb3g6aX0pO3RoaXMucmVzZXQoKTtyLmxlbmd0aCYmcy5wdXNoKHIuam9pbigiIikudHJpbUVuZCgpKTtpZihzLmxlbmd0aD4xfHxzWzBdKXtjb25zdCBlPXRoaXMuYXBwZWFyYW5jZS5kaWN0LHQ9bG9va3VwUmVjdChlLmdldEFycmF5KCJCQm94IiksbnVsbCksaT1sb29rdXBNYXRyaXgoZS5nZXRBcnJheSgiTWF0cml4IiksbnVsbCk7dGhpcy5kYXRhLnRleHRQb3NpdGlvbj10aGlzLl90cmFuc2Zvcm1Qb2ludChuLHQsaSk7dGhpcy5kYXRhLnRleHRDb250ZW50PXN9fV90cmFuc2Zvcm1Qb2ludChlLHQsaSl7Y29uc3R7cmVjdDphfT10aGlzLmRhdGE7dHx8PVswLDAsMSwxXTtpfHw9WzEsMCwwLDEsMCwwXTtjb25zdCBzPWdldFRyYW5zZm9ybU1hdHJpeChhLHQsaSk7c1s0XS09YVswXTtzWzVdLT1hWzFdO2U9VXRpbC5hcHBseVRyYW5zZm9ybShlLHMpO3JldHVybiBVdGlsLmFwcGx5VHJhbnNmb3JtKGUsaSl9Z2V0RmllbGRPYmplY3QoKXtyZXR1cm4gdGhpcy5kYXRhLmtpZElkcz97aWQ6dGhpcy5kYXRhLmlkLGFjdGlvbnM6dGhpcy5kYXRhLmFjdGlvbnMsbmFtZTp0aGlzLmRhdGEuZmllbGROYW1lLHN0cm9rZUNvbG9yOnRoaXMuZGF0YS5ib3JkZXJDb2xvcixmaWxsQ29sb3I6dGhpcy5kYXRhLmJhY2tncm91bmRDb2xvcix0eXBlOiIiLGtpZElkczp0aGlzLmRhdGEua2lkSWRzLHBhZ2U6dGhpcy5kYXRhLnBhZ2VJbmRleCxyb3RhdGlvbjp0aGlzLnJvdGF0aW9ufTpudWxsfXJlc2V0KCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy5fc3RyZWFtcyllLnJlc2V0KCl9X2NvbnN0cnVjdEZpZWxkTmFtZShlKXtpZighZS5oYXMoIlQiKSYmIWUuaGFzKCJQYXJlbnQiKSl7d2FybigiVW5rbm93biBmaWVsZCBuYW1lLCBmYWxsaW5nIGJhY2sgdG8gZW1wdHkgZmllbGQgbmFtZS4iKTtyZXR1cm4iIn1pZighZS5oYXMoIlBhcmVudCIpKXJldHVybiBzdHJpbmdUb1BERlN0cmluZyhlLmdldCgiVCIpKTtjb25zdCB0PVtdO2UuaGFzKCJUIikmJnQudW5zaGlmdChzdHJpbmdUb1BERlN0cmluZyhlLmdldCgiVCIpKSk7bGV0IGk9ZTtjb25zdCBhPW5ldyBSZWZTZXQ7ZS5vYmpJZCYmYS5wdXQoZS5vYmpJZCk7Zm9yKDtpLmhhcygiUGFyZW50Iik7KXtpPWkuZ2V0KCJQYXJlbnQiKTtpZighKGkgaW5zdGFuY2VvZiBEaWN0KXx8aS5vYmpJZCYmYS5oYXMoaS5vYmpJZCkpYnJlYWs7aS5vYmpJZCYmYS5wdXQoaS5vYmpJZCk7aS5oYXMoIlQiKSYmdC51bnNoaWZ0KHN0cmluZ1RvUERGU3RyaW5nKGkuZ2V0KCJUIikpKX1yZXR1cm4gdC5qb2luKCIuIil9fWNsYXNzIEFubm90YXRpb25Cb3JkZXJTdHlsZXtjb25zdHJ1Y3Rvcigpe3RoaXMud2lkdGg9MTt0aGlzLnN0eWxlPWxBO3RoaXMuZGFzaEFycmF5PVszXTt0aGlzLmhvcml6b250YWxDb3JuZXJSYWRpdXM9MDt0aGlzLnZlcnRpY2FsQ29ybmVyUmFkaXVzPTB9c2V0V2lkdGgoZSx0PVswLDAsMCwwXSl7aWYoZSBpbnN0YW5jZW9mIE5hbWUpdGhpcy53aWR0aD0wO2Vsc2UgaWYoIm51bWJlciI9PXR5cGVvZiBlKXtpZihlPjApe2NvbnN0IGk9KHRbMl0tdFswXSkvMixhPSh0WzNdLXRbMV0pLzI7aWYoaT4wJiZhPjAmJihlPml8fGU+YSkpe3dhcm4oYEFubm90YXRpb25Cb3JkZXJTdHlsZS5zZXRXaWR0aCAtIGlnbm9yaW5nIHdpZHRoOiAke2V9YCk7ZT0xfX10aGlzLndpZHRoPWV9fXNldFN0eWxlKGUpe2lmKGUgaW5zdGFuY2VvZiBOYW1lKXN3aXRjaChlLm5hbWUpe2Nhc2UiUyI6dGhpcy5zdHlsZT1sQTticmVhaztjYXNlIkQiOnRoaXMuc3R5bGU9Q0E7YnJlYWs7Y2FzZSJCIjp0aGlzLnN0eWxlPUJBO2JyZWFrO2Nhc2UiSSI6dGhpcy5zdHlsZT1RQTticmVhaztjYXNlIlUiOnRoaXMuc3R5bGU9RUF9fXNldERhc2hBcnJheShlLHQ9ITEpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2xldCBpPSEwLGE9ITA7Zm9yKGNvbnN0IHQgb2YgZSl7aWYoISgrdD49MCkpe2k9ITE7YnJlYWt9dD4wJiYoYT0hMSl9aWYoMD09PWUubGVuZ3RofHxpJiYhYSl7dGhpcy5kYXNoQXJyYXk9ZTt0JiZ0aGlzLnNldFN0eWxlKE5hbWUuZ2V0KCJEIikpfWVsc2UgdGhpcy53aWR0aD0wfWVsc2UgZSYmKHRoaXMud2lkdGg9MCl9c2V0SG9yaXpvbnRhbENvcm5lclJhZGl1cyhlKXtOdW1iZXIuaXNJbnRlZ2VyKGUpJiYodGhpcy5ob3Jpem9udGFsQ29ybmVyUmFkaXVzPWUpfXNldFZlcnRpY2FsQ29ybmVyUmFkaXVzKGUpe051bWJlci5pc0ludGVnZXIoZSkmJih0aGlzLnZlcnRpY2FsQ29ybmVyUmFkaXVzPWUpfX1jbGFzcyBNYXJrdXBBbm5vdGF0aW9uIGV4dGVuZHMgQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnR9PWU7aWYodC5oYXMoIklSVCIpKXtjb25zdCBlPXQuZ2V0UmF3KCJJUlQiKTt0aGlzLmRhdGEuaW5SZXBseVRvPWUgaW5zdGFuY2VvZiBSZWY/ZS50b1N0cmluZygpOm51bGw7Y29uc3QgaT10LmdldCgiUlQiKTt0aGlzLmRhdGEucmVwbHlUeXBlPWkgaW5zdGFuY2VvZiBOYW1lP2kubmFtZTpqfWxldCBpPW51bGw7aWYodGhpcy5kYXRhLnJlcGx5VHlwZT09PVgpe2NvbnN0IGU9dC5nZXQoIklSVCIpO3RoaXMuc2V0VGl0bGUoZS5nZXQoIlQiKSk7dGhpcy5kYXRhLnRpdGxlT2JqPXRoaXMuX3RpdGxlO3RoaXMuc2V0Q29udGVudHMoZS5nZXQoIkNvbnRlbnRzIikpO3RoaXMuZGF0YS5jb250ZW50c09iaj10aGlzLl9jb250ZW50cztpZihlLmhhcygiQ3JlYXRpb25EYXRlIikpe3RoaXMuc2V0Q3JlYXRpb25EYXRlKGUuZ2V0KCJDcmVhdGlvbkRhdGUiKSk7dGhpcy5kYXRhLmNyZWF0aW9uRGF0ZT10aGlzLmNyZWF0aW9uRGF0ZX1lbHNlIHRoaXMuZGF0YS5jcmVhdGlvbkRhdGU9bnVsbDtpZihlLmhhcygiTSIpKXt0aGlzLnNldE1vZGlmaWNhdGlvbkRhdGUoZS5nZXQoIk0iKSk7dGhpcy5kYXRhLm1vZGlmaWNhdGlvbkRhdGU9dGhpcy5tb2RpZmljYXRpb25EYXRlfWVsc2UgdGhpcy5kYXRhLm1vZGlmaWNhdGlvbkRhdGU9bnVsbDtpPWUuZ2V0UmF3KCJQb3B1cCIpO2lmKGUuaGFzKCJDIikpe3RoaXMuc2V0Q29sb3IoZS5nZXRBcnJheSgiQyIpKTt0aGlzLmRhdGEuY29sb3I9dGhpcy5jb2xvcn1lbHNlIHRoaXMuZGF0YS5jb2xvcj1udWxsfWVsc2V7dGhpcy5kYXRhLnRpdGxlT2JqPXRoaXMuX3RpdGxlO3RoaXMuc2V0Q3JlYXRpb25EYXRlKHQuZ2V0KCJDcmVhdGlvbkRhdGUiKSk7dGhpcy5kYXRhLmNyZWF0aW9uRGF0ZT10aGlzLmNyZWF0aW9uRGF0ZTtpPXQuZ2V0UmF3KCJQb3B1cCIpO3QuaGFzKCJDIil8fCh0aGlzLmRhdGEuY29sb3I9bnVsbCl9dGhpcy5kYXRhLnBvcHVwUmVmPWkgaW5zdGFuY2VvZiBSZWY/aS50b1N0cmluZygpOm51bGw7dC5oYXMoIlJDIikmJih0aGlzLmRhdGEucmljaFRleHQ9WEZBRmFjdG9yeS5nZXRSaWNoVGV4dEFzSHRtbCh0LmdldCgiUkMiKSkpfXNldENyZWF0aW9uRGF0ZShlKXt0aGlzLmNyZWF0aW9uRGF0ZT0ic3RyaW5nIj09dHlwZW9mIGU/ZTpudWxsfV9zZXREZWZhdWx0QXBwZWFyYW5jZSh7eHJlZjplLGV4dHJhOnQsc3Ryb2tlQ29sb3I6aSxmaWxsQ29sb3I6YSxibGVuZE1vZGU6cyxzdHJva2VBbHBoYTpyLGZpbGxBbHBoYTpuLHBvaW50c0NhbGxiYWNrOm99KXtsZXQgZz1OdW1iZXIuTUFYX1ZBTFVFLGM9TnVtYmVyLk1BWF9WQUxVRSxoPU51bWJlci5NSU5fVkFMVUUsbD1OdW1iZXIuTUlOX1ZBTFVFO2NvbnN0IEM9WyJxIl07dCYmQy5wdXNoKHQpO2kmJkMucHVzaChgJHtpWzBdfSAke2lbMV19ICR7aVsyXX0gUkdgKTthJiZDLnB1c2goYCR7YVswXX0gJHthWzFdfSAke2FbMl19IHJnYCk7bGV0IFE9dGhpcy5kYXRhLnF1YWRQb2ludHM7UXx8KFE9W1t7eDp0aGlzLnJlY3RhbmdsZVswXSx5OnRoaXMucmVjdGFuZ2xlWzNdfSx7eDp0aGlzLnJlY3RhbmdsZVsyXSx5OnRoaXMucmVjdGFuZ2xlWzNdfSx7eDp0aGlzLnJlY3RhbmdsZVswXSx5OnRoaXMucmVjdGFuZ2xlWzFdfSx7eDp0aGlzLnJlY3RhbmdsZVsyXSx5OnRoaXMucmVjdGFuZ2xlWzFdfV1dKTtmb3IoY29uc3QgZSBvZiBRKXtjb25zdFt0LGksYSxzXT1vKEMsZSk7Zz1NYXRoLm1pbihnLHQpO2g9TWF0aC5tYXgoaCxpKTtjPU1hdGgubWluKGMsYSk7bD1NYXRoLm1heChsLHMpfUMucHVzaCgiUSIpO2NvbnN0IEU9bmV3IERpY3QoZSksdT1uZXcgRGljdChlKTt1LnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIkZvcm0iKSk7Y29uc3QgZD1uZXcgU3RyaW5nU3RyZWFtKEMuam9pbigiICIpKTtkLmRpY3Q9dTtFLnNldCgiRm0wIixkKTtjb25zdCBmPW5ldyBEaWN0KGUpO3MmJmYuc2V0KCJCTSIsTmFtZS5nZXQocykpOyJudW1iZXIiPT10eXBlb2YgciYmZi5zZXQoIkNBIixyKTsibnVtYmVyIj09dHlwZW9mIG4mJmYuc2V0KCJjYSIsbik7Y29uc3QgcD1uZXcgRGljdChlKTtwLnNldCgiR1MwIixmKTtjb25zdCBtPW5ldyBEaWN0KGUpO20uc2V0KCJFeHRHU3RhdGUiLHApO20uc2V0KCJYT2JqZWN0IixFKTtjb25zdCB5PW5ldyBEaWN0KGUpO3kuc2V0KCJSZXNvdXJjZXMiLG0pO2NvbnN0IHc9dGhpcy5kYXRhLnJlY3Q9W2csYyxoLGxdO3kuc2V0KCJCQm94Iix3KTt0aGlzLmFwcGVhcmFuY2U9bmV3IFN0cmluZ1N0cmVhbSgiL0dTMCBncyAvRm0wIERvIik7dGhpcy5hcHBlYXJhbmNlLmRpY3Q9eTt0aGlzLl9zdHJlYW1zLnB1c2godGhpcy5hcHBlYXJhbmNlLGQpfXN0YXRpYyBhc3luYyBjcmVhdGVOZXdBbm5vdGF0aW9uKGUsdCxpLGEpe2NvbnN0IHM9dC5yZWZ8fD1lLmdldE5ld1RlbXBvcmFyeVJlZigpLHI9YXdhaXQgdGhpcy5jcmVhdGVOZXdBcHBlYXJhbmNlU3RyZWFtKHQsZSxhKSxuPVtdO2xldCBvO2lmKHIpe2NvbnN0IGE9ZS5nZXROZXdUZW1wb3JhcnlSZWYoKTtvPXRoaXMuY3JlYXRlTmV3RGljdCh0LGUse2FwUmVmOmF9KTthd2FpdCB3cml0ZU9iamVjdChhLHIsbixlKTtpLnB1c2goe3JlZjphLGRhdGE6bi5qb2luKCIiKX0pfWVsc2Ugbz10aGlzLmNyZWF0ZU5ld0RpY3QodCxlLHt9KTtOdW1iZXIuaXNJbnRlZ2VyKHQucGFyZW50VHJlZUlkKSYmby5zZXQoIlN0cnVjdFBhcmVudCIsdC5wYXJlbnRUcmVlSWQpO24ubGVuZ3RoPTA7YXdhaXQgd3JpdGVPYmplY3QocyxvLG4sZSk7cmV0dXJue3JlZjpzLGRhdGE6bi5qb2luKCIiKX19c3RhdGljIGFzeW5jIGNyZWF0ZU5ld1ByaW50QW5ub3RhdGlvbihlLHQsaSxhKXtjb25zdCBzPWF3YWl0IHRoaXMuY3JlYXRlTmV3QXBwZWFyYW5jZVN0cmVhbShpLHQsYSkscj10aGlzLmNyZWF0ZU5ld0RpY3QoaSx0LHthcDpzfSksbj1uZXcgdGhpcy5wcm90b3R5cGUuY29uc3RydWN0b3Ioe2RpY3Q6cix4cmVmOnQsYW5ub3RhdGlvbkdsb2JhbHM6ZSxldmFsdWF0b3JPcHRpb25zOmEuZXZhbHVhdG9yT3B0aW9uc30pO2kucmVmJiYobi5yZWY9bi5yZWZUb1JlcGxhY2U9aS5yZWYpO3JldHVybiBufX1jbGFzcyBXaWRnZXRBbm5vdGF0aW9uIGV4dGVuZHMgQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnQseHJlZjppLGFubm90YXRpb25HbG9iYWxzOmF9PWUscz10aGlzLmRhdGE7dGhpcy5fbmVlZEFwcGVhcmFuY2VzPWUubmVlZEFwcGVhcmFuY2VzO3MuYW5ub3RhdGlvblR5cGU9Vzt2b2lkIDA9PT1zLmZpZWxkTmFtZSYmKHMuZmllbGROYW1lPXRoaXMuX2NvbnN0cnVjdEZpZWxkTmFtZSh0KSk7dm9pZCAwPT09cy5hY3Rpb25zJiYocy5hY3Rpb25zPWNvbGxlY3RBY3Rpb25zKGksdCx1QSkpO2xldCByPWdldEluaGVyaXRhYmxlUHJvcGVydHkoe2RpY3Q6dCxrZXk6IlYiLGdldEFycmF5OiEwfSk7cy5maWVsZFZhbHVlPXRoaXMuX2RlY29kZUZvcm1WYWx1ZShyKTtjb25zdCBuPWdldEluaGVyaXRhYmxlUHJvcGVydHkoe2RpY3Q6dCxrZXk6IkRWIixnZXRBcnJheTohMH0pO3MuZGVmYXVsdEZpZWxkVmFsdWU9dGhpcy5fZGVjb2RlRm9ybVZhbHVlKG4pO2lmKHZvaWQgMD09PXImJmEueGZhRGF0YXNldHMpe2NvbnN0IGU9dGhpcy5fdGl0bGUuc3RyO2lmKGUpe3RoaXMuX2hhc1ZhbHVlRnJvbVhGQT0hMDtzLmZpZWxkVmFsdWU9cj1hLnhmYURhdGFzZXRzLmdldFZhbHVlKGUpfX12b2lkIDA9PT1yJiZudWxsIT09cy5kZWZhdWx0RmllbGRWYWx1ZSYmKHMuZmllbGRWYWx1ZT1zLmRlZmF1bHRGaWVsZFZhbHVlKTtzLmFsdGVybmF0aXZlVGV4dD1zdHJpbmdUb1BERlN0cmluZyh0LmdldCgiVFUiKXx8IiIpO3RoaXMuc2V0RGVmYXVsdEFwcGVhcmFuY2UoZSk7cy5oYXNBcHBlYXJhbmNlfHw9dGhpcy5fbmVlZEFwcGVhcmFuY2VzJiZ2b2lkIDAhPT1zLmZpZWxkVmFsdWUmJm51bGwhPT1zLmZpZWxkVmFsdWU7Y29uc3Qgbz1nZXRJbmhlcml0YWJsZVByb3BlcnR5KHtkaWN0OnQsa2V5OiJGVCJ9KTtzLmZpZWxkVHlwZT1vIGluc3RhbmNlb2YgTmFtZT9vLm5hbWU6bnVsbDtjb25zdCBnPWdldEluaGVyaXRhYmxlUHJvcGVydHkoe2RpY3Q6dCxrZXk6IkRSIn0pLGM9YS5hY3JvRm9ybS5nZXQoIkRSIiksaD10aGlzLmFwcGVhcmFuY2U/LmRpY3QuZ2V0KCJSZXNvdXJjZXMiKTt0aGlzLl9maWVsZFJlc291cmNlcz17bG9jYWxSZXNvdXJjZXM6ZyxhY3JvRm9ybVJlc291cmNlczpjLGFwcGVhcmFuY2VSZXNvdXJjZXM6aCxtZXJnZWRSZXNvdXJjZXM6RGljdC5tZXJnZSh7eHJlZjppLGRpY3RBcnJheTpbZyxoLGNdLG1lcmdlU3ViRGljdHM6ITB9KX07cy5maWVsZEZsYWdzPWdldEluaGVyaXRhYmxlUHJvcGVydHkoe2RpY3Q6dCxrZXk6IkZmIn0pOyghTnVtYmVyLmlzSW50ZWdlcihzLmZpZWxkRmxhZ3MpfHxzLmZpZWxkRmxhZ3M8MCkmJihzLmZpZWxkRmxhZ3M9MCk7cy5yZWFkT25seT10aGlzLmhhc0ZpZWxkRmxhZyh0QSk7cy5yZXF1aXJlZD10aGlzLmhhc0ZpZWxkRmxhZyhpQSk7cy5oaWRkZW49dGhpcy5faGFzRmxhZyhzLmFubm90YXRpb25GbGFncyxWKXx8dGhpcy5faGFzRmxhZyhzLmFubm90YXRpb25GbGFncywkKX1fZGVjb2RlRm9ybVZhbHVlKGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpP2UuZmlsdGVyKChlPT4ic3RyaW5nIj09dHlwZW9mIGUpKS5tYXAoKGU9PnN0cmluZ1RvUERGU3RyaW5nKGUpKSk6ZSBpbnN0YW5jZW9mIE5hbWU/c3RyaW5nVG9QREZTdHJpbmcoZS5uYW1lKToic3RyaW5nIj09dHlwZW9mIGU/c3RyaW5nVG9QREZTdHJpbmcoZSk6bnVsbH1oYXNGaWVsZEZsYWcoZSl7cmV0dXJuISEodGhpcy5kYXRhLmZpZWxkRmxhZ3MmZSl9X2lzVmlld2FibGUoZSl7cmV0dXJuITB9bXVzdEJlVmlld2VkKGUsdCl7cmV0dXJuIHQ/dGhpcy52aWV3YWJsZTpzdXBlci5tdXN0QmVWaWV3ZWQoZSx0KSYmIXRoaXMuX2hhc0ZsYWcodGhpcy5mbGFncywkKX1nZXRSb3RhdGlvbk1hdHJpeChlKXtsZXQgdD1lPy5nZXQodGhpcy5kYXRhLmlkKT8ucm90YXRpb247dm9pZCAwPT09dCYmKHQ9dGhpcy5yb3RhdGlvbik7aWYoMD09PXQpcmV0dXJuIGk7cmV0dXJuIGdldFJvdGF0aW9uTWF0cml4KHQsdGhpcy5kYXRhLnJlY3RbMl0tdGhpcy5kYXRhLnJlY3RbMF0sdGhpcy5kYXRhLnJlY3RbM10tdGhpcy5kYXRhLnJlY3RbMV0pfWdldEJvcmRlckFuZEJhY2tncm91bmRBcHBlYXJhbmNlcyhlKXtsZXQgdD1lPy5nZXQodGhpcy5kYXRhLmlkKT8ucm90YXRpb247dm9pZCAwPT09dCYmKHQ9dGhpcy5yb3RhdGlvbik7aWYoIXRoaXMuYmFja2dyb3VuZENvbG9yJiYhdGhpcy5ib3JkZXJDb2xvcilyZXR1cm4iIjtjb25zdCBpPXRoaXMuZGF0YS5yZWN0WzJdLXRoaXMuZGF0YS5yZWN0WzBdLGE9dGhpcy5kYXRhLnJlY3RbM10tdGhpcy5kYXRhLnJlY3RbMV0scz0wPT09dHx8MTgwPT09dD9gMCAwICR7aX0gJHthfSByZWA6YDAgMCAke2F9ICR7aX0gcmVgO2xldCByPSIiO3RoaXMuYmFja2dyb3VuZENvbG9yJiYocj1gJHtnZXRQZGZDb2xvcih0aGlzLmJhY2tncm91bmRDb2xvciwhMCl9ICR7c30gZiBgKTtpZih0aGlzLmJvcmRlckNvbG9yKXtyKz1gJHt0aGlzLmJvcmRlclN0eWxlLndpZHRofHwxfSB3ICR7Z2V0UGRmQ29sb3IodGhpcy5ib3JkZXJDb2xvciwhMSl9ICR7c30gUyBgfXJldHVybiByfWFzeW5jIGdldE9wZXJhdG9yTGlzdChlLHQsaSxhLHMpe2lmKGEmJiEodGhpcyBpbnN0YW5jZW9mIFNpZ25hdHVyZVdpZGdldEFubm90YXRpb24pJiYhdGhpcy5kYXRhLm5vSFRNTCYmIXRoaXMuZGF0YS5oYXNPd25DYW52YXMpcmV0dXJue29wTGlzdDpuZXcgT3BlcmF0b3JMaXN0LHNlcGFyYXRlRm9ybTohMCxzZXBhcmF0ZUNhbnZhczohMX07aWYoIXRoaXMuX2hhc1RleHQpcmV0dXJuIHN1cGVyLmdldE9wZXJhdG9yTGlzdChlLHQsaSxhLHMpO2NvbnN0IHI9YXdhaXQgdGhpcy5fZ2V0QXBwZWFyYW5jZShlLHQsaSxzKTtpZih0aGlzLmFwcGVhcmFuY2UmJm51bGw9PT1yKXJldHVybiBzdXBlci5nZXRPcGVyYXRvckxpc3QoZSx0LGksYSxzKTtjb25zdCBuPW5ldyBPcGVyYXRvckxpc3Q7aWYoIXRoaXMuX2RlZmF1bHRBcHBlYXJhbmNlfHxudWxsPT09cilyZXR1cm57b3BMaXN0Om4sc2VwYXJhdGVGb3JtOiExLHNlcGFyYXRlQ2FudmFzOiExfTtjb25zdCBvPSEhKHRoaXMuZGF0YS5oYXNPd25DYW52YXMmJmkmZyksYz1bMCwwLHRoaXMuZGF0YS5yZWN0WzJdLXRoaXMuZGF0YS5yZWN0WzBdLHRoaXMuZGF0YS5yZWN0WzNdLXRoaXMuZGF0YS5yZWN0WzFdXSxoPWdldFRyYW5zZm9ybU1hdHJpeCh0aGlzLmRhdGEucmVjdCxjLFsxLDAsMCwxLDAsMF0pO2xldCBsO3RoaXMub2MmJihsPWF3YWl0IGUucGFyc2VNYXJrZWRDb250ZW50UHJvcHModGhpcy5vYyxudWxsKSk7dm9pZCAwIT09bCYmbi5hZGRPcChIZSxbIk9DIixsXSk7bi5hZGRPcChXZSxbdGhpcy5kYXRhLmlkLHRoaXMuZGF0YS5yZWN0LGgsdGhpcy5nZXRSb3RhdGlvbk1hdHJpeChzKSxvXSk7Y29uc3QgQz1uZXcgU3RyaW5nU3RyZWFtKHIpO2F3YWl0IGUuZ2V0T3BlcmF0b3JMaXN0KHtzdHJlYW06Qyx0YXNrOnQscmVzb3VyY2VzOnRoaXMuX2ZpZWxkUmVzb3VyY2VzLm1lcmdlZFJlc291cmNlcyxvcGVyYXRvckxpc3Q6bn0pO24uYWRkT3AoWGUsW10pO3ZvaWQgMCE9PWwmJm4uYWRkT3AoWWUsW10pO3JldHVybntvcExpc3Q6bixzZXBhcmF0ZUZvcm06ITEsc2VwYXJhdGVDYW52YXM6b319X2dldE1LRGljdChlKXtjb25zdCB0PW5ldyBEaWN0KG51bGwpO2UmJnQuc2V0KCJSIixlKTt0aGlzLmJvcmRlckNvbG9yJiZ0LnNldCgiQkMiLGdldFBkZkNvbG9yQXJyYXkodGhpcy5ib3JkZXJDb2xvcikpO3RoaXMuYmFja2dyb3VuZENvbG9yJiZ0LnNldCgiQkciLGdldFBkZkNvbG9yQXJyYXkodGhpcy5iYWNrZ3JvdW5kQ29sb3IpKTtyZXR1cm4gdC5zaXplPjA/dDpudWxsfWFtZW5kU2F2ZWREaWN0KGUsdCl7fWFzeW5jIHNhdmUoZSx0LGEpe2NvbnN0IHM9YT8uZ2V0KHRoaXMuZGF0YS5pZCk7bGV0IHI9cz8udmFsdWUsbj1zPy5yb3RhdGlvbjtpZihyPT09dGhpcy5kYXRhLmZpZWxkVmFsdWV8fHZvaWQgMD09PXIpe2lmKCF0aGlzLl9oYXNWYWx1ZUZyb21YRkEmJnZvaWQgMD09PW4pcmV0dXJuIG51bGw7cnx8PXRoaXMuZGF0YS5maWVsZFZhbHVlfWlmKHZvaWQgMD09PW4mJiF0aGlzLl9oYXNWYWx1ZUZyb21YRkEmJkFycmF5LmlzQXJyYXkocikmJkFycmF5LmlzQXJyYXkodGhpcy5kYXRhLmZpZWxkVmFsdWUpJiZyLmxlbmd0aD09PXRoaXMuZGF0YS5maWVsZFZhbHVlLmxlbmd0aCYmci5ldmVyeSgoKGUsdCk9PmU9PT10aGlzLmRhdGEuZmllbGRWYWx1ZVt0XSkpKXJldHVybiBudWxsO3ZvaWQgMD09PW4mJihuPXRoaXMucm90YXRpb24pO2xldCBvPW51bGw7aWYoIXRoaXMuX25lZWRBcHBlYXJhbmNlcyl7bz1hd2FpdCB0aGlzLl9nZXRBcHBlYXJhbmNlKGUsdCxoLGEpO2lmKG51bGw9PT1vKXJldHVybiBudWxsfWxldCBnPSExO2lmKG8/Lm5lZWRBcHBlYXJhbmNlcyl7Zz0hMDtvPW51bGx9Y29uc3R7eHJlZjpjfT1lLGw9Yy5mZXRjaElmUmVmKHRoaXMucmVmKTtpZighKGwgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm4gbnVsbDtjb25zdCBDPW5ldyBEaWN0KGMpO2Zvcihjb25zdCBlIG9mIGwuZ2V0S2V5cygpKSJBUCIhPT1lJiZDLnNldChlLGwuZ2V0UmF3KGUpKTtjb25zdCBRPXtwYXRoOnRoaXMuZGF0YS5maWVsZE5hbWUsdmFsdWU6cn0sZW5jb2Rlcj1lPT5pc0FzY2lpKGUpP2U6c3RyaW5nVG9VVEYxNlN0cmluZyhlLCEwKTtDLnNldCgiViIsQXJyYXkuaXNBcnJheShyKT9yLm1hcChlbmNvZGVyKTplbmNvZGVyKHIpKTt0aGlzLmFtZW5kU2F2ZWREaWN0KGEsQyk7Y29uc3QgRT10aGlzLl9nZXRNS0RpY3Qobik7RSYmQy5zZXQoIk1LIixFKTtjb25zdCB1PVtdLGQ9W3tyZWY6dGhpcy5yZWYsZGF0YToiIix4ZmE6USxuZWVkQXBwZWFyYW5jZXM6Z31dO2lmKG51bGwhPT1vKXtjb25zdCBlPWMuZ2V0TmV3VGVtcG9yYXJ5UmVmKCksdD1uZXcgRGljdChjKTtDLnNldCgiQVAiLHQpO3Quc2V0KCJOIixlKTtjb25zdCBzPXRoaXMuX2dldFNhdmVGaWVsZFJlc291cmNlcyhjKSxyPW5ldyBTdHJpbmdTdHJlYW0obyksbj1yLmRpY3Q9bmV3IERpY3QoYyk7bi5zZXQoIlN1YnR5cGUiLE5hbWUuZ2V0KCJGb3JtIikpO24uc2V0KCJSZXNvdXJjZXMiLHMpO24uc2V0KCJCQm94IixbMCwwLHRoaXMuZGF0YS5yZWN0WzJdLXRoaXMuZGF0YS5yZWN0WzBdLHRoaXMuZGF0YS5yZWN0WzNdLXRoaXMuZGF0YS5yZWN0WzFdXSk7Y29uc3QgZz10aGlzLmdldFJvdGF0aW9uTWF0cml4KGEpO2chPT1pJiZuLnNldCgiTWF0cml4IixnKTthd2FpdCB3cml0ZU9iamVjdChlLHIsdSxjKTtkLnB1c2goe3JlZjplLGRhdGE6dS5qb2luKCIiKSx4ZmE6bnVsbCxuZWVkQXBwZWFyYW5jZXM6ITF9KTt1Lmxlbmd0aD0wfUMuc2V0KCJNIixgRDoke2dldE1vZGlmaWNhdGlvbkRhdGUoKX1gKTthd2FpdCB3cml0ZU9iamVjdCh0aGlzLnJlZixDLHUsYyk7ZFswXS5kYXRhPXUuam9pbigiIik7cmV0dXJuIGR9YXN5bmMgX2dldEFwcGVhcmFuY2UoZSx0LGksYSl7aWYodGhpcy5oYXNGaWVsZEZsYWcoc0EpKXJldHVybiBudWxsO2NvbnN0IHM9YT8uZ2V0KHRoaXMuZGF0YS5pZCk7bGV0IHIsbztpZihzKXtyPXMuZm9ybWF0dGVkVmFsdWV8fHMudmFsdWU7bz1zLnJvdGF0aW9ufWlmKHZvaWQgMD09PW8mJnZvaWQgMD09PXImJiF0aGlzLl9uZWVkQXBwZWFyYW5jZXMmJighdGhpcy5faGFzVmFsdWVGcm9tWEZBfHx0aGlzLmFwcGVhcmFuY2UpKXJldHVybiBudWxsO2NvbnN0IGc9dGhpcy5nZXRCb3JkZXJBbmRCYWNrZ3JvdW5kQXBwZWFyYW5jZXMoYSk7aWYodm9pZCAwPT09cil7cj10aGlzLmRhdGEuZmllbGRWYWx1ZTtpZighcilyZXR1cm5gL1R4IEJNQyBxICR7Z31RIEVNQ2B9QXJyYXkuaXNBcnJheShyKSYmMT09PXIubGVuZ3RoJiYocj1yWzBdKTthc3NlcnQoInN0cmluZyI9PXR5cGVvZiByLCJFeHBlY3RlZCBgdmFsdWVgIHRvIGJlIGEgc3RyaW5nLiIpO3I9ci50cmltKCk7aWYodGhpcy5kYXRhLmNvbWJvKXtjb25zdCBlPXRoaXMuZGF0YS5vcHRpb25zLmZpbmQoKCh7ZXhwb3J0VmFsdWU6ZX0pPT5yPT09ZSkpO3I9ZT8uZGlzcGxheVZhbHVlfHxyfWlmKCIiPT09cilyZXR1cm5gL1R4IEJNQyBxICR7Z31RIEVNQ2A7dm9pZCAwPT09byYmKG89dGhpcy5yb3RhdGlvbik7bGV0IGMsbD0tMTtpZih0aGlzLmRhdGEubXVsdGlMaW5lKXtjPXIuc3BsaXQoL1xyXG4/fFxuLykubWFwKChlPT5lLm5vcm1hbGl6ZSgiTkZDIikpKTtsPWMubGVuZ3RofWVsc2UgYz1bci5yZXBsYWNlKC9cclxuP3xcbi8sIiIpLm5vcm1hbGl6ZSgiTkZDIildO2xldCBDPXRoaXMuZGF0YS5yZWN0WzNdLXRoaXMuZGF0YS5yZWN0WzFdLFE9dGhpcy5kYXRhLnJlY3RbMl0tdGhpcy5kYXRhLnJlY3RbMF07OTAhPT1vJiYyNzAhPT1vfHwoW1EsQ109W0MsUV0pO3RoaXMuX2RlZmF1bHRBcHBlYXJhbmNlfHwodGhpcy5kYXRhLmRlZmF1bHRBcHBlYXJhbmNlRGF0YT1wYXJzZURlZmF1bHRBcHBlYXJhbmNlKHRoaXMuX2RlZmF1bHRBcHBlYXJhbmNlPSIvSGVsdmV0aWNhIDAgVGYgMCBnIikpO2xldCBFLHUsZCxmPWF3YWl0IFdpZGdldEFubm90YXRpb24uX2dldEZvbnREYXRhKGUsdCx0aGlzLmRhdGEuZGVmYXVsdEFwcGVhcmFuY2VEYXRhLHRoaXMuX2ZpZWxkUmVzb3VyY2VzLm1lcmdlZFJlc291cmNlcyk7Y29uc3QgcD1bXTtsZXQgbT0hMTtmb3IoY29uc3QgZSBvZiBjKXtjb25zdCB0PWYuZW5jb2RlU3RyaW5nKGUpO3QubGVuZ3RoPjEmJihtPSEwKTtwLnB1c2godC5qb2luKCIiKSl9aWYobSYmaSZoKXJldHVybntuZWVkQXBwZWFyYW5jZXM6ITB9O2lmKG0mJnRoaXMuX2lzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkKXtjb25zdCBpPXRoaXMuZGF0YS5jb21iPyJtb25vc3BhY2UiOiJzYW5zLXNlcmlmIixhPW5ldyBGYWtlVW5pY29kZUZvbnQoZS54cmVmLGkpLHM9YS5jcmVhdGVGb250UmVzb3VyY2VzKGMuam9pbigiIikpLG49cy5nZXRSYXcoIkZvbnQiKTtpZih0aGlzLl9maWVsZFJlc291cmNlcy5tZXJnZWRSZXNvdXJjZXMuaGFzKCJGb250Iikpe2NvbnN0IGU9dGhpcy5fZmllbGRSZXNvdXJjZXMubWVyZ2VkUmVzb3VyY2VzLmdldCgiRm9udCIpO2Zvcihjb25zdCB0IG9mIG4uZ2V0S2V5cygpKWUuc2V0KHQsbi5nZXRSYXcodCkpfWVsc2UgdGhpcy5fZmllbGRSZXNvdXJjZXMubWVyZ2VkUmVzb3VyY2VzLnNldCgiRm9udCIsbik7Y29uc3Qgbz1hLmZvbnROYW1lLm5hbWU7Zj1hd2FpdCBXaWRnZXRBbm5vdGF0aW9uLl9nZXRGb250RGF0YShlLHQse2ZvbnROYW1lOm8sZm9udFNpemU6MH0scyk7Zm9yKGxldCBlPTAsdD1wLmxlbmd0aDtlPHQ7ZSsrKXBbZV09c3RyaW5nVG9VVEYxNlN0cmluZyhjW2VdKTtjb25zdCBnPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLmRhdGEuZGVmYXVsdEFwcGVhcmFuY2VEYXRhKTt0aGlzLmRhdGEuZGVmYXVsdEFwcGVhcmFuY2VEYXRhLmZvbnRTaXplPTA7dGhpcy5kYXRhLmRlZmF1bHRBcHBlYXJhbmNlRGF0YS5mb250TmFtZT1vO1tFLHUsZF09dGhpcy5fY29tcHV0ZUZvbnRTaXplKEMtMixRLTQscixmLGwpO3RoaXMuZGF0YS5kZWZhdWx0QXBwZWFyYW5jZURhdGE9Z31lbHNle3RoaXMuX2lzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkfHx3YXJuKCJfZ2V0QXBwZWFyYW5jZTogT2Zmc2NyZWVuQ2FudmFzIGlzIG5vdCBzdXBwb3J0ZWQsIGFubm90YXRpb24gbWF5IG5vdCByZW5kZXIgY29ycmVjdGx5LiIpO1tFLHUsZF09dGhpcy5fY29tcHV0ZUZvbnRTaXplKEMtMixRLTQscixmLGwpfWxldCB5PWYuZGVzY2VudDt5PWlzTmFOKHkpP24qZDpNYXRoLm1heChuKmQsTWF0aC5hYnMoeSkqdSk7Y29uc3Qgdz1NYXRoLm1pbihNYXRoLmZsb29yKChDLXUpLzIpLDEpLGI9dGhpcy5kYXRhLnRleHRBbGlnbm1lbnQ7aWYodGhpcy5kYXRhLm11bHRpTGluZSlyZXR1cm4gdGhpcy5fZ2V0TXVsdGlsaW5lQXBwZWFyYW5jZShFLHAsZix1LFEsQyxiLDIsdyx5LGQsYSk7aWYodGhpcy5kYXRhLmNvbWIpcmV0dXJuIHRoaXMuX2dldENvbWJBcHBlYXJhbmNlKEUsZixwWzBdLHUsUSxDLDIsdyx5LGQsYSk7Y29uc3QgRD13K3k7aWYoMD09PWJ8fGI+MilyZXR1cm5gL1R4IEJNQyBxICR7Z31CVCBgK0UrYCAxIDAgMCAxICR7bnVtYmVyVG9TdHJpbmcoMil9ICR7bnVtYmVyVG9TdHJpbmcoRCl9IFRtICgke2VzY2FwZVN0cmluZyhwWzBdKX0pIFRqIEVUIFEgRU1DYDtyZXR1cm5gL1R4IEJNQyBxICR7Z31CVCBgK0UrYCAxIDAgMCAxIDAgMCBUbSAke3RoaXMuX3JlbmRlclRleHQocFswXSxmLHUsUSxiLHtzaGlmdDowfSwyLEQpfSBFVCBRIEVNQ2B9c3RhdGljIGFzeW5jIF9nZXRGb250RGF0YShlLHQsaSxhKXtjb25zdCBzPW5ldyBPcGVyYXRvckxpc3Qscj17Zm9udDpudWxsLGNsb25lKCl7cmV0dXJuIHRoaXN9fSx7Zm9udE5hbWU6bixmb250U2l6ZTpvfT1pO2F3YWl0IGUuaGFuZGxlU2V0Rm9udChhLFtuJiZOYW1lLmdldChuKSxvXSxudWxsLHMsdCxyLG51bGwpO3JldHVybiByLmZvbnR9X2dldFRleHRXaWR0aChlLHQpe3JldHVybiB0LmNoYXJzVG9HbHlwaHMoZSkucmVkdWNlKCgoZSx0KT0+ZSt0LndpZHRoKSwwKS8xZTN9X2NvbXB1dGVGb250U2l6ZShlLHQsaSxhLHIpe2xldHtmb250U2l6ZTpufT10aGlzLmRhdGEuZGVmYXVsdEFwcGVhcmFuY2VEYXRhLG89KG58fDEyKSpzLGc9TWF0aC5yb3VuZChlL28pO2lmKCFuKXtjb25zdCByb3VuZFdpdGhUd29EaWdpdHM9ZT0+TWF0aC5mbG9vcigxMDAqZSkvMTAwO2lmKC0xPT09cil7Y29uc3Qgcj10aGlzLl9nZXRUZXh0V2lkdGgoaSxhKTtuPXJvdW5kV2l0aFR3b0RpZ2l0cyhNYXRoLm1pbihlL3Mscj50P3QvcjoxLzApKTtnPTF9ZWxzZXtjb25zdCBjPWkuc3BsaXQoL1xyXG4/fFxuLyksaD1bXTtmb3IoY29uc3QgZSBvZiBjKXtjb25zdCB0PWEuZW5jb2RlU3RyaW5nKGUpLmpvaW4oIiIpLGk9YS5jaGFyc1RvR2x5cGhzKHQpLHM9YS5nZXRDaGFyUG9zaXRpb25zKHQpO2gucHVzaCh7bGluZTp0LGdseXBoczppLHBvc2l0aW9uczpzfSl9Y29uc3QgaXNUb29CaWc9aT0+e2xldCBzPTA7Zm9yKGNvbnN0IHIgb2YgaCl7cys9dGhpcy5fc3BsaXRMaW5lKG51bGwsYSxpLHQscikubGVuZ3RoKmk7aWYocz5lKXJldHVybiEwfXJldHVybiExfTtnPU1hdGgubWF4KGcscik7Zm9yKDs7KXtvPWUvZztuPXJvdW5kV2l0aFR3b0RpZ2l0cyhvL3MpO2lmKCFpc1Rvb0JpZyhuKSlicmVhaztnKyt9fWNvbnN0e2ZvbnROYW1lOmMsZm9udENvbG9yOmh9PXRoaXMuZGF0YS5kZWZhdWx0QXBwZWFyYW5jZURhdGE7dGhpcy5fZGVmYXVsdEFwcGVhcmFuY2U9ZnVuY3Rpb24gY3JlYXRlRGVmYXVsdEFwcGVhcmFuY2Uoe2ZvbnRTaXplOmUsZm9udE5hbWU6dCxmb250Q29sb3I6aX0pe3JldHVybmAvJHtlc2NhcGVQREZOYW1lKHQpfSAke2V9IFRmICR7Z2V0UGRmQ29sb3IoaSwhMCl9YH0oe2ZvbnRTaXplOm4sZm9udE5hbWU6Yyxmb250Q29sb3I6aH0pfXJldHVyblt0aGlzLl9kZWZhdWx0QXBwZWFyYW5jZSxuLGUvZ119X3JlbmRlclRleHQoZSx0LGksYSxzLHIsbixvKXtsZXQgZztpZigxPT09cyl7Zz0oYS10aGlzLl9nZXRUZXh0V2lkdGgoZSx0KSppKS8yfWVsc2UgaWYoMj09PXMpe2c9YS10aGlzLl9nZXRUZXh0V2lkdGgoZSx0KSppLW59ZWxzZSBnPW47Y29uc3QgYz1udW1iZXJUb1N0cmluZyhnLXIuc2hpZnQpO3Iuc2hpZnQ9ZztyZXR1cm5gJHtjfSAke289bnVtYmVyVG9TdHJpbmcobyl9IFRkICgke2VzY2FwZVN0cmluZyhlKX0pIFRqYH1fZ2V0U2F2ZUZpZWxkUmVzb3VyY2VzKGUpe2NvbnN0e2xvY2FsUmVzb3VyY2VzOnQsYXBwZWFyYW5jZVJlc291cmNlczppLGFjcm9Gb3JtUmVzb3VyY2VzOmF9PXRoaXMuX2ZpZWxkUmVzb3VyY2VzLHM9dGhpcy5kYXRhLmRlZmF1bHRBcHBlYXJhbmNlRGF0YT8uZm9udE5hbWU7aWYoIXMpcmV0dXJuIHR8fERpY3QuZW1wdHk7Zm9yKGNvbnN0IGUgb2ZbdCxpXSlpZihlIGluc3RhbmNlb2YgRGljdCl7Y29uc3QgdD1lLmdldCgiRm9udCIpO2lmKHQgaW5zdGFuY2VvZiBEaWN0JiZ0LmhhcyhzKSlyZXR1cm4gZX1pZihhIGluc3RhbmNlb2YgRGljdCl7Y29uc3QgaT1hLmdldCgiRm9udCIpO2lmKGkgaW5zdGFuY2VvZiBEaWN0JiZpLmhhcyhzKSl7Y29uc3QgYT1uZXcgRGljdChlKTthLnNldChzLGkuZ2V0UmF3KHMpKTtjb25zdCByPW5ldyBEaWN0KGUpO3Iuc2V0KCJGb250IixhKTtyZXR1cm4gRGljdC5tZXJnZSh7eHJlZjplLGRpY3RBcnJheTpbcix0XSxtZXJnZVN1YkRpY3RzOiEwfSl9fXJldHVybiB0fHxEaWN0LmVtcHR5fWdldEZpZWxkT2JqZWN0KCl7cmV0dXJuIG51bGx9fWNsYXNzIFRleHRXaWRnZXRBbm5vdGF0aW9uIGV4dGVuZHMgV2lkZ2V0QW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTt0aGlzLmRhdGEuaGFzT3duQ2FudmFzPXRoaXMuZGF0YS5yZWFkT25seSYmIXRoaXMuZGF0YS5ub0hUTUw7dGhpcy5faGFzVGV4dD0hMDtjb25zdCB0PWUuZGljdDsic3RyaW5nIiE9dHlwZW9mIHRoaXMuZGF0YS5maWVsZFZhbHVlJiYodGhpcy5kYXRhLmZpZWxkVmFsdWU9IiIpO2xldCBpPWdldEluaGVyaXRhYmxlUHJvcGVydHkoe2RpY3Q6dCxrZXk6IlEifSk7KCFOdW1iZXIuaXNJbnRlZ2VyKGkpfHxpPDB8fGk+MikmJihpPW51bGwpO3RoaXMuZGF0YS50ZXh0QWxpZ25tZW50PWk7bGV0IGE9Z2V0SW5oZXJpdGFibGVQcm9wZXJ0eSh7ZGljdDp0LGtleToiTWF4TGVuIn0pOyghTnVtYmVyLmlzSW50ZWdlcihhKXx8YTwwKSYmKGE9MCk7dGhpcy5kYXRhLm1heExlbj1hO3RoaXMuZGF0YS5tdWx0aUxpbmU9dGhpcy5oYXNGaWVsZEZsYWcoYUEpO3RoaXMuZGF0YS5jb21iPXRoaXMuaGFzRmllbGRGbGFnKGhBKSYmIXRoaXMuaGFzRmllbGRGbGFnKGFBKSYmIXRoaXMuaGFzRmllbGRGbGFnKHNBKSYmIXRoaXMuaGFzRmllbGRGbGFnKGdBKSYmMCE9PXRoaXMuZGF0YS5tYXhMZW47dGhpcy5kYXRhLmRvTm90U2Nyb2xsPXRoaXMuaGFzRmllbGRGbGFnKGNBKX1nZXQgaGFzVGV4dENvbnRlbnQoKXtyZXR1cm4hIXRoaXMuYXBwZWFyYW5jZSYmIXRoaXMuX25lZWRBcHBlYXJhbmNlc31fZ2V0Q29tYkFwcGVhcmFuY2UoZSx0LGksYSxzLHIsbixvLGcsYyxoKXtjb25zdCBsPXMvdGhpcy5kYXRhLm1heExlbixDPXRoaXMuZ2V0Qm9yZGVyQW5kQmFja2dyb3VuZEFwcGVhcmFuY2VzKGgpLFE9W10sRT10LmdldENoYXJQb3NpdGlvbnMoaSk7Zm9yKGNvbnN0W2UsdF1vZiBFKVEucHVzaChgKCR7ZXNjYXBlU3RyaW5nKGkuc3Vic3RyaW5nKGUsdCkpfSkgVGpgKTtjb25zdCB1PVEuam9pbihgICR7bnVtYmVyVG9TdHJpbmcobCl9IDAgVGQgYCk7cmV0dXJuYC9UeCBCTUMgcSAke0N9QlQgYCtlK2AgMSAwIDAgMSAke251bWJlclRvU3RyaW5nKG4pfSAke251bWJlclRvU3RyaW5nKG8rZyl9IFRtICR7dX0gRVQgUSBFTUNgfV9nZXRNdWx0aWxpbmVBcHBlYXJhbmNlKGUsdCxpLGEscyxyLG4sbyxnLGMsaCxsKXtjb25zdCBDPVtdLFE9cy0yKm8sRT17c2hpZnQ6MH07Zm9yKGxldCBlPTAscj10Lmxlbmd0aDtlPHI7ZSsrKXtjb25zdCByPXRbZV0sbD10aGlzLl9zcGxpdExpbmUocixpLGEsUSk7Zm9yKGxldCB0PTAscj1sLmxlbmd0aDt0PHI7dCsrKXtjb25zdCByPWxbdF0sUT0wPT09ZSYmMD09PXQ/LWctKGgtYyk6LWg7Qy5wdXNoKHRoaXMuX3JlbmRlclRleHQocixpLGEscyxuLEUsbyxRKSl9fWNvbnN0IHU9dGhpcy5nZXRCb3JkZXJBbmRCYWNrZ3JvdW5kQXBwZWFyYW5jZXMobCksZD1DLmpvaW4oIlxuIik7cmV0dXJuYC9UeCBCTUMgcSAke3V9QlQgYCtlK2AgMSAwIDAgMSAwICR7bnVtYmVyVG9TdHJpbmcocil9IFRtICR7ZH0gRVQgUSBFTUNgfV9zcGxpdExpbmUoZSx0LGksYSxzPXt9KXtlPXMubGluZXx8ZTtjb25zdCByPXMuZ2x5cGhzfHx0LmNoYXJzVG9HbHlwaHMoZSk7aWYoci5sZW5ndGg8PTEpcmV0dXJuW2VdO2NvbnN0IG49cy5wb3NpdGlvbnN8fHQuZ2V0Q2hhclBvc2l0aW9ucyhlKSxvPWkvMWUzLGc9W107bGV0IGM9LTEsaD0tMSxsPS0xLEM9MCxRPTA7Zm9yKGxldCB0PTAsaT1yLmxlbmd0aDt0PGk7dCsrKXtjb25zdFtpLHNdPW5bdF0sRT1yW3RdLHU9RS53aWR0aCpvO2lmKCIgIj09PUUudW5pY29kZSlpZihRK3U+YSl7Zy5wdXNoKGUuc3Vic3RyaW5nKEMsaSkpO0M9aTtRPXU7Yz0tMTtsPS0xfWVsc2V7USs9dTtjPWk7aD1zO2w9dH1lbHNlIGlmKFErdT5hKWlmKC0xIT09Yyl7Zy5wdXNoKGUuc3Vic3RyaW5nKEMsaCkpO0M9aDt0PWwrMTtjPS0xO1E9MH1lbHNle2cucHVzaChlLnN1YnN0cmluZyhDLGkpKTtDPWk7UT11fWVsc2UgUSs9dX1DPGUubGVuZ3RoJiZnLnB1c2goZS5zdWJzdHJpbmcoQyxlLmxlbmd0aCkpO3JldHVybiBnfWdldEZpZWxkT2JqZWN0KCl7cmV0dXJue2lkOnRoaXMuZGF0YS5pZCx2YWx1ZTp0aGlzLmRhdGEuZmllbGRWYWx1ZSxkZWZhdWx0VmFsdWU6dGhpcy5kYXRhLmRlZmF1bHRGaWVsZFZhbHVlfHwiIixtdWx0aWxpbmU6dGhpcy5kYXRhLm11bHRpTGluZSxwYXNzd29yZDp0aGlzLmhhc0ZpZWxkRmxhZyhzQSksY2hhckxpbWl0OnRoaXMuZGF0YS5tYXhMZW4sY29tYjp0aGlzLmRhdGEuY29tYixlZGl0YWJsZTohdGhpcy5kYXRhLnJlYWRPbmx5LGhpZGRlbjp0aGlzLmRhdGEuaGlkZGVuLG5hbWU6dGhpcy5kYXRhLmZpZWxkTmFtZSxyZWN0OnRoaXMuZGF0YS5yZWN0LGFjdGlvbnM6dGhpcy5kYXRhLmFjdGlvbnMscGFnZTp0aGlzLmRhdGEucGFnZUluZGV4LHN0cm9rZUNvbG9yOnRoaXMuZGF0YS5ib3JkZXJDb2xvcixmaWxsQ29sb3I6dGhpcy5kYXRhLmJhY2tncm91bmRDb2xvcixyb3RhdGlvbjp0aGlzLnJvdGF0aW9uLHR5cGU6InRleHQifX19Y2xhc3MgQnV0dG9uV2lkZ2V0QW5ub3RhdGlvbiBleHRlbmRzIFdpZGdldEFubm90YXRpb257Y29uc3RydWN0b3IoZSl7c3VwZXIoZSk7dGhpcy5jaGVja2VkQXBwZWFyYW5jZT1udWxsO3RoaXMudW5jaGVja2VkQXBwZWFyYW5jZT1udWxsO3RoaXMuZGF0YS5jaGVja0JveD0hdGhpcy5oYXNGaWVsZEZsYWcockEpJiYhdGhpcy5oYXNGaWVsZEZsYWcobkEpO3RoaXMuZGF0YS5yYWRpb0J1dHRvbj10aGlzLmhhc0ZpZWxkRmxhZyhyQSkmJiF0aGlzLmhhc0ZpZWxkRmxhZyhuQSk7dGhpcy5kYXRhLnB1c2hCdXR0b249dGhpcy5oYXNGaWVsZEZsYWcobkEpO3RoaXMuZGF0YS5pc1Rvb2x0aXBPbmx5PSExO2lmKHRoaXMuZGF0YS5jaGVja0JveCl0aGlzLl9wcm9jZXNzQ2hlY2tCb3goZSk7ZWxzZSBpZih0aGlzLmRhdGEucmFkaW9CdXR0b24pdGhpcy5fcHJvY2Vzc1JhZGlvQnV0dG9uKGUpO2Vsc2UgaWYodGhpcy5kYXRhLnB1c2hCdXR0b24pe3RoaXMuZGF0YS5oYXNPd25DYW52YXM9ITA7dGhpcy5kYXRhLm5vSFRNTD0hMTt0aGlzLl9wcm9jZXNzUHVzaEJ1dHRvbihlKX1lbHNlIHdhcm4oIkludmFsaWQgZmllbGQgZmxhZ3MgZm9yIGJ1dHRvbiB3aWRnZXQgYW5ub3RhdGlvbiIpfWFzeW5jIGdldE9wZXJhdG9yTGlzdChlLHQsYSxzLHIpe2lmKHRoaXMuZGF0YS5wdXNoQnV0dG9uKXJldHVybiBzdXBlci5nZXRPcGVyYXRvckxpc3QoZSx0LGEsITEscik7bGV0IG49bnVsbCxvPW51bGw7aWYocil7Y29uc3QgZT1yLmdldCh0aGlzLmRhdGEuaWQpO249ZT9lLnZhbHVlOm51bGw7bz1lP2Uucm90YXRpb246bnVsbH1pZihudWxsPT09biYmdGhpcy5hcHBlYXJhbmNlKXJldHVybiBzdXBlci5nZXRPcGVyYXRvckxpc3QoZSx0LGEscyxyKTtudWxsPT1uJiYobj10aGlzLmRhdGEuY2hlY2tCb3g/dGhpcy5kYXRhLmZpZWxkVmFsdWU9PT10aGlzLmRhdGEuZXhwb3J0VmFsdWU6dGhpcy5kYXRhLmZpZWxkVmFsdWU9PT10aGlzLmRhdGEuYnV0dG9uVmFsdWUpO2NvbnN0IGc9bj90aGlzLmNoZWNrZWRBcHBlYXJhbmNlOnRoaXMudW5jaGVja2VkQXBwZWFyYW5jZTtpZihnKXtjb25zdCBuPXRoaXMuYXBwZWFyYW5jZSxjPWxvb2t1cE1hdHJpeChnLmRpY3QuZ2V0QXJyYXkoIk1hdHJpeCIpLGkpO28mJmcuZGljdC5zZXQoIk1hdHJpeCIsdGhpcy5nZXRSb3RhdGlvbk1hdHJpeChyKSk7dGhpcy5hcHBlYXJhbmNlPWc7Y29uc3QgaD1zdXBlci5nZXRPcGVyYXRvckxpc3QoZSx0LGEscyxyKTt0aGlzLmFwcGVhcmFuY2U9bjtnLmRpY3Quc2V0KCJNYXRyaXgiLGMpO3JldHVybiBofXJldHVybntvcExpc3Q6bmV3IE9wZXJhdG9yTGlzdCxzZXBhcmF0ZUZvcm06ITEsc2VwYXJhdGVDYW52YXM6ITF9fWFzeW5jIHNhdmUoZSx0LGkpe3JldHVybiB0aGlzLmRhdGEuY2hlY2tCb3g/dGhpcy5fc2F2ZUNoZWNrYm94KGUsdCxpKTp0aGlzLmRhdGEucmFkaW9CdXR0b24/dGhpcy5fc2F2ZVJhZGlvQnV0dG9uKGUsdCxpKTpudWxsfWFzeW5jIF9zYXZlQ2hlY2tib3goZSx0LGkpe2lmKCFpKXJldHVybiBudWxsO2NvbnN0IGE9aS5nZXQodGhpcy5kYXRhLmlkKTtsZXQgcz1hPy5yb3RhdGlvbixyPWE/LnZhbHVlO2lmKHZvaWQgMD09PXMpe2lmKHZvaWQgMD09PXIpcmV0dXJuIG51bGw7aWYodGhpcy5kYXRhLmZpZWxkVmFsdWU9PT10aGlzLmRhdGEuZXhwb3J0VmFsdWU9PT1yKXJldHVybiBudWxsfWNvbnN0IG49ZS54cmVmLmZldGNoSWZSZWYodGhpcy5yZWYpO2lmKCEobiBpbnN0YW5jZW9mIERpY3QpKXJldHVybiBudWxsO3ZvaWQgMD09PXMmJihzPXRoaXMucm90YXRpb24pO3ZvaWQgMD09PXImJihyPXRoaXMuZGF0YS5maWVsZFZhbHVlPT09dGhpcy5kYXRhLmV4cG9ydFZhbHVlKTtjb25zdCBvPXtwYXRoOnRoaXMuZGF0YS5maWVsZE5hbWUsdmFsdWU6cj90aGlzLmRhdGEuZXhwb3J0VmFsdWU6IiJ9LGc9TmFtZS5nZXQocj90aGlzLmRhdGEuZXhwb3J0VmFsdWU6Ik9mZiIpO24uc2V0KCJWIixnKTtuLnNldCgiQVMiLGcpO24uc2V0KCJNIixgRDoke2dldE1vZGlmaWNhdGlvbkRhdGUoKX1gKTtjb25zdCBjPXRoaXMuX2dldE1LRGljdChzKTtjJiZuLnNldCgiTUsiLGMpO2NvbnN0IGg9W107YXdhaXQgd3JpdGVPYmplY3QodGhpcy5yZWYsbixoLGUueHJlZik7cmV0dXJuW3tyZWY6dGhpcy5yZWYsZGF0YTpoLmpvaW4oIiIpLHhmYTpvfV19YXN5bmMgX3NhdmVSYWRpb0J1dHRvbihlLHQsaSl7aWYoIWkpcmV0dXJuIG51bGw7Y29uc3QgYT1pLmdldCh0aGlzLmRhdGEuaWQpO2xldCBzPWE/LnJvdGF0aW9uLHI9YT8udmFsdWU7aWYodm9pZCAwPT09cyl7aWYodm9pZCAwPT09cilyZXR1cm4gbnVsbDtpZih0aGlzLmRhdGEuZmllbGRWYWx1ZT09PXRoaXMuZGF0YS5idXR0b25WYWx1ZT09PXIpcmV0dXJuIG51bGx9Y29uc3Qgbj1lLnhyZWYuZmV0Y2hJZlJlZih0aGlzLnJlZik7aWYoIShuIGluc3RhbmNlb2YgRGljdCkpcmV0dXJuIG51bGw7dm9pZCAwPT09ciYmKHI9dGhpcy5kYXRhLmZpZWxkVmFsdWU9PT10aGlzLmRhdGEuYnV0dG9uVmFsdWUpO3ZvaWQgMD09PXMmJihzPXRoaXMucm90YXRpb24pO2NvbnN0IG89e3BhdGg6dGhpcy5kYXRhLmZpZWxkTmFtZSx2YWx1ZTpyP3RoaXMuZGF0YS5idXR0b25WYWx1ZToiIn0sZz1OYW1lLmdldChyP3RoaXMuZGF0YS5idXR0b25WYWx1ZToiT2ZmIiksYz1bXTtsZXQgaD1udWxsO2lmKHIpaWYodGhpcy5wYXJlbnQgaW5zdGFuY2VvZiBSZWYpe2NvbnN0IHQ9ZS54cmVmLmZldGNoKHRoaXMucGFyZW50KTt0LnNldCgiViIsZyk7YXdhaXQgd3JpdGVPYmplY3QodGhpcy5wYXJlbnQsdCxjLGUueHJlZik7aD1jLmpvaW4oIiIpO2MubGVuZ3RoPTB9ZWxzZSB0aGlzLnBhcmVudCBpbnN0YW5jZW9mIERpY3QmJnRoaXMucGFyZW50LnNldCgiViIsZyk7bi5zZXQoIkFTIixnKTtuLnNldCgiTSIsYEQ6JHtnZXRNb2RpZmljYXRpb25EYXRlKCl9YCk7Y29uc3QgbD10aGlzLl9nZXRNS0RpY3Qocyk7bCYmbi5zZXQoIk1LIixsKTthd2FpdCB3cml0ZU9iamVjdCh0aGlzLnJlZixuLGMsZS54cmVmKTtjb25zdCBDPVt7cmVmOnRoaXMucmVmLGRhdGE6Yy5qb2luKCIiKSx4ZmE6b31dO2gmJkMucHVzaCh7cmVmOnRoaXMucGFyZW50LGRhdGE6aCx4ZmE6bnVsbH0pO3JldHVybiBDfV9nZXREZWZhdWx0Q2hlY2tlZEFwcGVhcmFuY2UoZSx0KXtjb25zdCBpPXRoaXMuZGF0YS5yZWN0WzJdLXRoaXMuZGF0YS5yZWN0WzBdLGE9dGhpcy5kYXRhLnJlY3RbM10tdGhpcy5kYXRhLnJlY3RbMV0scz1bMCwwLGksYV0scj0uOCpNYXRoLm1pbihpLGEpO2xldCBuLG87aWYoImNoZWNrIj09PXQpe249e3dpZHRoOi43NTUqcixoZWlnaHQ6LjcwNSpyfTtvPSIzIn1lbHNlIGlmKCJkaXNjIj09PXQpe249e3dpZHRoOi43OTEqcixoZWlnaHQ6LjcwNSpyfTtvPSJsIn1lbHNlIHVucmVhY2hhYmxlKGBfZ2V0RGVmYXVsdENoZWNrZWRBcHBlYXJhbmNlIC0gdW5zdXBwb3J0ZWQgdHlwZTogJHt0fWApO2NvbnN0IGc9YHEgQlQgL1BkZkpzWmFEYiAke3J9IFRmIDAgZyAke251bWJlclRvU3RyaW5nKChpLW4ud2lkdGgpLzIpfSAke251bWJlclRvU3RyaW5nKChhLW4uaGVpZ2h0KS8yKX0gVGQgKCR7b30pIFRqIEVUIFFgLGM9bmV3IERpY3QoZS54cmVmKTtjLnNldCgiRm9ybVR5cGUiLDEpO2Muc2V0KCJTdWJ0eXBlIixOYW1lLmdldCgiRm9ybSIpKTtjLnNldCgiVHlwZSIsTmFtZS5nZXQoIlhPYmplY3QiKSk7Yy5zZXQoIkJCb3giLHMpO2Muc2V0KCJNYXRyaXgiLFsxLDAsMCwxLDAsMF0pO2Muc2V0KCJMZW5ndGgiLGcubGVuZ3RoKTtjb25zdCBoPW5ldyBEaWN0KGUueHJlZiksbD1uZXcgRGljdChlLnhyZWYpO2wuc2V0KCJQZGZKc1phRGIiLHRoaXMuZmFsbGJhY2tGb250RGljdCk7aC5zZXQoIkZvbnQiLGwpO2Muc2V0KCJSZXNvdXJjZXMiLGgpO3RoaXMuY2hlY2tlZEFwcGVhcmFuY2U9bmV3IFN0cmluZ1N0cmVhbShnKTt0aGlzLmNoZWNrZWRBcHBlYXJhbmNlLmRpY3Q9Yzt0aGlzLl9zdHJlYW1zLnB1c2godGhpcy5jaGVja2VkQXBwZWFyYW5jZSl9X3Byb2Nlc3NDaGVja0JveChlKXtjb25zdCB0PWUuZGljdC5nZXQoIkFQIik7aWYoISh0IGluc3RhbmNlb2YgRGljdCkpcmV0dXJuO2NvbnN0IGk9dC5nZXQoIk4iKTtpZighKGkgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm47Y29uc3QgYT10aGlzLl9kZWNvZGVGb3JtVmFsdWUoZS5kaWN0LmdldCgiQVMiKSk7InN0cmluZyI9PXR5cGVvZiBhJiYodGhpcy5kYXRhLmZpZWxkVmFsdWU9YSk7Y29uc3Qgcz1udWxsIT09dGhpcy5kYXRhLmZpZWxkVmFsdWUmJiJPZmYiIT09dGhpcy5kYXRhLmZpZWxkVmFsdWU/dGhpcy5kYXRhLmZpZWxkVmFsdWU6IlllcyIscj1pLmdldEtleXMoKTtpZigwPT09ci5sZW5ndGgpci5wdXNoKCJPZmYiLHMpO2Vsc2UgaWYoMT09PXIubGVuZ3RoKSJPZmYiPT09clswXT9yLnB1c2gocyk6ci51bnNoaWZ0KCJPZmYiKTtlbHNlIGlmKHIuaW5jbHVkZXMocykpe3IubGVuZ3RoPTA7ci5wdXNoKCJPZmYiLHMpfWVsc2V7Y29uc3QgZT1yLmZpbmQoKGU9PiJPZmYiIT09ZSkpO3IubGVuZ3RoPTA7ci5wdXNoKCJPZmYiLGUpfXIuaW5jbHVkZXModGhpcy5kYXRhLmZpZWxkVmFsdWUpfHwodGhpcy5kYXRhLmZpZWxkVmFsdWU9Ik9mZiIpO3RoaXMuZGF0YS5leHBvcnRWYWx1ZT1yWzFdO2NvbnN0IG49aS5nZXQodGhpcy5kYXRhLmV4cG9ydFZhbHVlKTt0aGlzLmNoZWNrZWRBcHBlYXJhbmNlPW4gaW5zdGFuY2VvZiBCYXNlU3RyZWFtP246bnVsbDtjb25zdCBvPWkuZ2V0KCJPZmYiKTt0aGlzLnVuY2hlY2tlZEFwcGVhcmFuY2U9byBpbnN0YW5jZW9mIEJhc2VTdHJlYW0/bzpudWxsO3RoaXMuY2hlY2tlZEFwcGVhcmFuY2U/dGhpcy5fc3RyZWFtcy5wdXNoKHRoaXMuY2hlY2tlZEFwcGVhcmFuY2UpOnRoaXMuX2dldERlZmF1bHRDaGVja2VkQXBwZWFyYW5jZShlLCJjaGVjayIpO3RoaXMudW5jaGVja2VkQXBwZWFyYW5jZSYmdGhpcy5fc3RyZWFtcy5wdXNoKHRoaXMudW5jaGVja2VkQXBwZWFyYW5jZSk7dGhpcy5fZmFsbGJhY2tGb250RGljdD10aGlzLmZhbGxiYWNrRm9udERpY3Q7bnVsbD09PXRoaXMuZGF0YS5kZWZhdWx0RmllbGRWYWx1ZSYmKHRoaXMuZGF0YS5kZWZhdWx0RmllbGRWYWx1ZT0iT2ZmIil9X3Byb2Nlc3NSYWRpb0J1dHRvbihlKXt0aGlzLmRhdGEuYnV0dG9uVmFsdWU9bnVsbDtjb25zdCB0PWUuZGljdC5nZXQoIlBhcmVudCIpO2lmKHQgaW5zdGFuY2VvZiBEaWN0KXt0aGlzLnBhcmVudD1lLmRpY3QuZ2V0UmF3KCJQYXJlbnQiKTtjb25zdCBpPXQuZ2V0KCJWIik7aSBpbnN0YW5jZW9mIE5hbWUmJih0aGlzLmRhdGEuZmllbGRWYWx1ZT10aGlzLl9kZWNvZGVGb3JtVmFsdWUoaSkpfWNvbnN0IGk9ZS5kaWN0LmdldCgiQVAiKTtpZighKGkgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm47Y29uc3QgYT1pLmdldCgiTiIpO2lmKCEoYSBpbnN0YW5jZW9mIERpY3QpKXJldHVybjtmb3IoY29uc3QgZSBvZiBhLmdldEtleXMoKSlpZigiT2ZmIiE9PWUpe3RoaXMuZGF0YS5idXR0b25WYWx1ZT10aGlzLl9kZWNvZGVGb3JtVmFsdWUoZSk7YnJlYWt9Y29uc3Qgcz1hLmdldCh0aGlzLmRhdGEuYnV0dG9uVmFsdWUpO3RoaXMuY2hlY2tlZEFwcGVhcmFuY2U9cyBpbnN0YW5jZW9mIEJhc2VTdHJlYW0/czpudWxsO2NvbnN0IHI9YS5nZXQoIk9mZiIpO3RoaXMudW5jaGVja2VkQXBwZWFyYW5jZT1yIGluc3RhbmNlb2YgQmFzZVN0cmVhbT9yOm51bGw7dGhpcy5jaGVja2VkQXBwZWFyYW5jZT90aGlzLl9zdHJlYW1zLnB1c2godGhpcy5jaGVja2VkQXBwZWFyYW5jZSk6dGhpcy5fZ2V0RGVmYXVsdENoZWNrZWRBcHBlYXJhbmNlKGUsImRpc2MiKTt0aGlzLnVuY2hlY2tlZEFwcGVhcmFuY2UmJnRoaXMuX3N0cmVhbXMucHVzaCh0aGlzLnVuY2hlY2tlZEFwcGVhcmFuY2UpO3RoaXMuX2ZhbGxiYWNrRm9udERpY3Q9dGhpcy5mYWxsYmFja0ZvbnREaWN0O251bGw9PT10aGlzLmRhdGEuZGVmYXVsdEZpZWxkVmFsdWUmJih0aGlzLmRhdGEuZGVmYXVsdEZpZWxkVmFsdWU9Ik9mZiIpfV9wcm9jZXNzUHVzaEJ1dHRvbihlKXtjb25zdHtkaWN0OnQsYW5ub3RhdGlvbkdsb2JhbHM6aX09ZTtpZih0LmhhcygiQSIpfHx0LmhhcygiQUEiKXx8dGhpcy5kYXRhLmFsdGVybmF0aXZlVGV4dCl7dGhpcy5kYXRhLmlzVG9vbHRpcE9ubHk9IXQuaGFzKCJBIikmJiF0LmhhcygiQUEiKTtDYXRhbG9nLnBhcnNlRGVzdERpY3Rpb25hcnkoe2Rlc3REaWN0OnQscmVzdWx0T2JqOnRoaXMuZGF0YSxkb2NCYXNlVXJsOmkuYmFzZVVybCxkb2NBdHRhY2htZW50czppLmF0dGFjaG1lbnRzfSl9ZWxzZSB3YXJuKCJQdXNoIGJ1dHRvbnMgd2l0aG91dCBhY3Rpb24gZGljdGlvbmFyaWVzIGFyZSBub3Qgc3VwcG9ydGVkIil9Z2V0RmllbGRPYmplY3QoKXtsZXQgZSx0PSJidXR0b24iO2lmKHRoaXMuZGF0YS5jaGVja0JveCl7dD0iY2hlY2tib3giO2U9dGhpcy5kYXRhLmV4cG9ydFZhbHVlfWVsc2UgaWYodGhpcy5kYXRhLnJhZGlvQnV0dG9uKXt0PSJyYWRpb2J1dHRvbiI7ZT10aGlzLmRhdGEuYnV0dG9uVmFsdWV9cmV0dXJue2lkOnRoaXMuZGF0YS5pZCx2YWx1ZTp0aGlzLmRhdGEuZmllbGRWYWx1ZXx8Ik9mZiIsZGVmYXVsdFZhbHVlOnRoaXMuZGF0YS5kZWZhdWx0RmllbGRWYWx1ZSxleHBvcnRWYWx1ZXM6ZSxlZGl0YWJsZTohdGhpcy5kYXRhLnJlYWRPbmx5LG5hbWU6dGhpcy5kYXRhLmZpZWxkTmFtZSxyZWN0OnRoaXMuZGF0YS5yZWN0LGhpZGRlbjp0aGlzLmRhdGEuaGlkZGVuLGFjdGlvbnM6dGhpcy5kYXRhLmFjdGlvbnMscGFnZTp0aGlzLmRhdGEucGFnZUluZGV4LHN0cm9rZUNvbG9yOnRoaXMuZGF0YS5ib3JkZXJDb2xvcixmaWxsQ29sb3I6dGhpcy5kYXRhLmJhY2tncm91bmRDb2xvcixyb3RhdGlvbjp0aGlzLnJvdGF0aW9uLHR5cGU6dH19Z2V0IGZhbGxiYWNrRm9udERpY3QoKXtjb25zdCBlPW5ldyBEaWN0O2Uuc2V0KCJCYXNlRm9udCIsTmFtZS5nZXQoIlphcGZEaW5nYmF0cyIpKTtlLnNldCgiVHlwZSIsTmFtZS5nZXQoIkZhbGxiYWNrVHlwZSIpKTtlLnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIkZhbGxiYWNrVHlwZSIpKTtlLnNldCgiRW5jb2RpbmciLE5hbWUuZ2V0KCJaYXBmRGluZ2JhdHNFbmNvZGluZyIpKTtyZXR1cm4gc2hhZG93KHRoaXMsImZhbGxiYWNrRm9udERpY3QiLGUpfX1jbGFzcyBDaG9pY2VXaWRnZXRBbm5vdGF0aW9uIGV4dGVuZHMgV2lkZ2V0QW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnQseHJlZjppfT1lO3RoaXMuaW5kaWNlcz10LmdldEFycmF5KCJJIik7dGhpcy5oYXNJbmRpY2VzPUFycmF5LmlzQXJyYXkodGhpcy5pbmRpY2VzKSYmdGhpcy5pbmRpY2VzLmxlbmd0aD4wO3RoaXMuZGF0YS5vcHRpb25zPVtdO2NvbnN0IGE9Z2V0SW5oZXJpdGFibGVQcm9wZXJ0eSh7ZGljdDp0LGtleToiT3B0In0pO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKGxldCBlPTAsdD1hLmxlbmd0aDtlPHQ7ZSsrKXtjb25zdCB0PWkuZmV0Y2hJZlJlZihhW2VdKSxzPUFycmF5LmlzQXJyYXkodCk7dGhpcy5kYXRhLm9wdGlvbnNbZV09e2V4cG9ydFZhbHVlOnRoaXMuX2RlY29kZUZvcm1WYWx1ZShzP2kuZmV0Y2hJZlJlZih0WzBdKTp0KSxkaXNwbGF5VmFsdWU6dGhpcy5fZGVjb2RlRm9ybVZhbHVlKHM/aS5mZXRjaElmUmVmKHRbMV0pOnQpfX1pZih0aGlzLmhhc0luZGljZXMpe3RoaXMuZGF0YS5maWVsZFZhbHVlPVtdO2NvbnN0IGU9dGhpcy5kYXRhLm9wdGlvbnMubGVuZ3RoO2Zvcihjb25zdCB0IG9mIHRoaXMuaW5kaWNlcylOdW1iZXIuaXNJbnRlZ2VyKHQpJiZ0Pj0wJiZ0PGUmJnRoaXMuZGF0YS5maWVsZFZhbHVlLnB1c2godGhpcy5kYXRhLm9wdGlvbnNbdF0uZXhwb3J0VmFsdWUpfWVsc2Uic3RyaW5nIj09dHlwZW9mIHRoaXMuZGF0YS5maWVsZFZhbHVlP3RoaXMuZGF0YS5maWVsZFZhbHVlPVt0aGlzLmRhdGEuZmllbGRWYWx1ZV06dGhpcy5kYXRhLmZpZWxkVmFsdWV8fCh0aGlzLmRhdGEuZmllbGRWYWx1ZT1bXSk7dGhpcy5kYXRhLmNvbWJvPXRoaXMuaGFzRmllbGRGbGFnKG9BKTt0aGlzLmRhdGEubXVsdGlTZWxlY3Q9dGhpcy5oYXNGaWVsZEZsYWcoSUEpO3RoaXMuX2hhc1RleHQ9ITB9Z2V0RmllbGRPYmplY3QoKXtjb25zdCBlPXRoaXMuZGF0YS5jb21ibz8iY29tYm9ib3giOiJsaXN0Ym94Iix0PXRoaXMuZGF0YS5maWVsZFZhbHVlLmxlbmd0aD4wP3RoaXMuZGF0YS5maWVsZFZhbHVlWzBdOm51bGw7cmV0dXJue2lkOnRoaXMuZGF0YS5pZCx2YWx1ZTp0LGRlZmF1bHRWYWx1ZTp0aGlzLmRhdGEuZGVmYXVsdEZpZWxkVmFsdWUsZWRpdGFibGU6IXRoaXMuZGF0YS5yZWFkT25seSxuYW1lOnRoaXMuZGF0YS5maWVsZE5hbWUscmVjdDp0aGlzLmRhdGEucmVjdCxudW1JdGVtczp0aGlzLmRhdGEuZmllbGRWYWx1ZS5sZW5ndGgsbXVsdGlwbGVTZWxlY3Rpb246dGhpcy5kYXRhLm11bHRpU2VsZWN0LGhpZGRlbjp0aGlzLmRhdGEuaGlkZGVuLGFjdGlvbnM6dGhpcy5kYXRhLmFjdGlvbnMsaXRlbXM6dGhpcy5kYXRhLm9wdGlvbnMscGFnZTp0aGlzLmRhdGEucGFnZUluZGV4LHN0cm9rZUNvbG9yOnRoaXMuZGF0YS5ib3JkZXJDb2xvcixmaWxsQ29sb3I6dGhpcy5kYXRhLmJhY2tncm91bmRDb2xvcixyb3RhdGlvbjp0aGlzLnJvdGF0aW9uLHR5cGU6ZX19YW1lbmRTYXZlZERpY3QoZSx0KXtpZighdGhpcy5oYXNJbmRpY2VzKXJldHVybjtsZXQgaT1lPy5nZXQodGhpcy5kYXRhLmlkKT8udmFsdWU7QXJyYXkuaXNBcnJheShpKXx8KGk9W2ldKTtjb25zdCBhPVtdLHtvcHRpb25zOnN9PXRoaXMuZGF0YTtmb3IobGV0IGU9MCx0PTAscj1zLmxlbmd0aDtlPHI7ZSsrKWlmKHNbZV0uZXhwb3J0VmFsdWU9PT1pW3RdKXthLnB1c2goZSk7dCs9MX10LnNldCgiSSIsYSl9YXN5bmMgX2dldEFwcGVhcmFuY2UoZSx0LGksYSl7aWYodGhpcy5kYXRhLmNvbWJvKXJldHVybiBzdXBlci5fZ2V0QXBwZWFyYW5jZShlLHQsaSxhKTtsZXQgcixuO2NvbnN0IG89YT8uZ2V0KHRoaXMuZGF0YS5pZCk7aWYobyl7bj1vLnJvdGF0aW9uO3I9by52YWx1ZX1pZih2b2lkIDA9PT1uJiZ2b2lkIDA9PT1yJiYhdGhpcy5fbmVlZEFwcGVhcmFuY2VzKXJldHVybiBudWxsO3ZvaWQgMD09PXI/cj10aGlzLmRhdGEuZmllbGRWYWx1ZTpBcnJheS5pc0FycmF5KHIpfHwocj1bcl0pO2xldCBnPXRoaXMuZGF0YS5yZWN0WzNdLXRoaXMuZGF0YS5yZWN0WzFdLGM9dGhpcy5kYXRhLnJlY3RbMl0tdGhpcy5kYXRhLnJlY3RbMF07OTAhPT1uJiYyNzAhPT1ufHwoW2MsZ109W2csY10pO2NvbnN0IGg9dGhpcy5kYXRhLm9wdGlvbnMubGVuZ3RoLGw9W107Zm9yKGxldCBlPTA7ZTxoO2UrKyl7Y29uc3R7ZXhwb3J0VmFsdWU6dH09dGhpcy5kYXRhLm9wdGlvbnNbZV07ci5pbmNsdWRlcyh0KSYmbC5wdXNoKGUpfXRoaXMuX2RlZmF1bHRBcHBlYXJhbmNlfHwodGhpcy5kYXRhLmRlZmF1bHRBcHBlYXJhbmNlRGF0YT1wYXJzZURlZmF1bHRBcHBlYXJhbmNlKHRoaXMuX2RlZmF1bHRBcHBlYXJhbmNlPSIvSGVsdmV0aWNhIDAgVGYgMCBnIikpO2NvbnN0IEM9YXdhaXQgV2lkZ2V0QW5ub3RhdGlvbi5fZ2V0Rm9udERhdGEoZSx0LHRoaXMuZGF0YS5kZWZhdWx0QXBwZWFyYW5jZURhdGEsdGhpcy5fZmllbGRSZXNvdXJjZXMubWVyZ2VkUmVzb3VyY2VzKTtsZXQgUSx7Zm9udFNpemU6RX09dGhpcy5kYXRhLmRlZmF1bHRBcHBlYXJhbmNlRGF0YTtpZihFKVE9dGhpcy5fZGVmYXVsdEFwcGVhcmFuY2U7ZWxzZXtjb25zdCBlPShnLTEpL2g7bGV0IHQsaT0tMTtmb3IoY29uc3R7ZGlzcGxheVZhbHVlOmV9b2YgdGhpcy5kYXRhLm9wdGlvbnMpe2NvbnN0IGE9dGhpcy5fZ2V0VGV4dFdpZHRoKGUsQyk7aWYoYT5pKXtpPWE7dD1lfX1bUSxFXT10aGlzLl9jb21wdXRlRm9udFNpemUoZSxjLTQsdCxDLC0xKX1jb25zdCB1PUUqcyxkPSh1LUUpLzIsZj1NYXRoLmZsb29yKGcvdSk7bGV0IHA9MDtpZihsLmxlbmd0aD4wKXtjb25zdCBlPU1hdGgubWluKC4uLmwpLHQ9TWF0aC5tYXgoLi4ubCk7cD1NYXRoLm1heCgwLHQtZisxKTtwPmUmJihwPWUpfWNvbnN0IG09TWF0aC5taW4ocCtmKzEsaCkseT1bIi9UeCBCTUMgcSIsYDEgMSAke2N9ICR7Z30gcmUgVyBuYF07aWYobC5sZW5ndGgpe3kucHVzaCgiMC42MDAwMDYgMC43NTY4NjYgMC44NTQ5MDQgcmciKTtmb3IoY29uc3QgZSBvZiBsKXA8PWUmJmU8bSYmeS5wdXNoKGAxICR7Zy0oZS1wKzEpKnV9ICR7Y30gJHt1fSByZSBmYCl9eS5wdXNoKCJCVCIsUSxgMSAwIDAgMSAwICR7Z30gVG1gKTtjb25zdCB3PXtzaGlmdDowfTtmb3IobGV0IGU9cDtlPG07ZSsrKXtjb25zdHtkaXNwbGF5VmFsdWU6dH09dGhpcy5kYXRhLm9wdGlvbnNbZV0saT1lPT09cD9kOjA7eS5wdXNoKHRoaXMuX3JlbmRlclRleHQodCxDLEUsYywwLHcsMiwtdStpKSl9eS5wdXNoKCJFVCBRIEVNQyIpO3JldHVybiB5LmpvaW4oIlxuIil9fWNsYXNzIFNpZ25hdHVyZVdpZGdldEFubm90YXRpb24gZXh0ZW5kcyBXaWRnZXRBbm5vdGF0aW9ue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpO3RoaXMuZGF0YS5maWVsZFZhbHVlPW51bGw7dGhpcy5kYXRhLmhhc093bkNhbnZhcz10aGlzLmRhdGEubm9Sb3RhdGU7dGhpcy5kYXRhLm5vSFRNTD0hdGhpcy5kYXRhLmhhc093bkNhbnZhc31nZXRGaWVsZE9iamVjdCgpe3JldHVybntpZDp0aGlzLmRhdGEuaWQsdmFsdWU6bnVsbCxwYWdlOnRoaXMuZGF0YS5wYWdlSW5kZXgsdHlwZToic2lnbmF0dXJlIn19fWNsYXNzIFRleHRBbm5vdGF0aW9uIGV4dGVuZHMgTWFya3VwQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTt0aGlzLmRhdGEubm9Sb3RhdGU9ITA7dGhpcy5kYXRhLmhhc093bkNhbnZhcz10aGlzLmRhdGEubm9Sb3RhdGU7dGhpcy5kYXRhLm5vSFRNTD0hMTtjb25zdHtkaWN0OnR9PWU7dGhpcy5kYXRhLmFubm90YXRpb25UeXBlPVM7aWYodGhpcy5kYXRhLmhhc0FwcGVhcmFuY2UpdGhpcy5kYXRhLm5hbWU9Ik5vSWNvbiI7ZWxzZXt0aGlzLmRhdGEucmVjdFsxXT10aGlzLmRhdGEucmVjdFszXS0yMjt0aGlzLmRhdGEucmVjdFsyXT10aGlzLmRhdGEucmVjdFswXSsyMjt0aGlzLmRhdGEubmFtZT10LmhhcygiTmFtZSIpP3QuZ2V0KCJOYW1lIikubmFtZToiTm90ZSJ9aWYodC5oYXMoIlN0YXRlIikpe3RoaXMuZGF0YS5zdGF0ZT10LmdldCgiU3RhdGUiKXx8bnVsbDt0aGlzLmRhdGEuc3RhdGVNb2RlbD10LmdldCgiU3RhdGVNb2RlbCIpfHxudWxsfWVsc2V7dGhpcy5kYXRhLnN0YXRlPW51bGw7dGhpcy5kYXRhLnN0YXRlTW9kZWw9bnVsbH19fWNsYXNzIExpbmtBbm5vdGF0aW9uIGV4dGVuZHMgQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnQsYW5ub3RhdGlvbkdsb2JhbHM6aX09ZTt0aGlzLmRhdGEuYW5ub3RhdGlvblR5cGU9azt0aGlzLmRhdGEubm9IVE1MPSExO2NvbnN0IGE9Z2V0UXVhZFBvaW50cyh0LHRoaXMucmVjdGFuZ2xlKTthJiYodGhpcy5kYXRhLnF1YWRQb2ludHM9YSk7dGhpcy5kYXRhLmJvcmRlckNvbG9yfHw9dGhpcy5kYXRhLmNvbG9yO0NhdGFsb2cucGFyc2VEZXN0RGljdGlvbmFyeSh7ZGVzdERpY3Q6dCxyZXN1bHRPYmo6dGhpcy5kYXRhLGRvY0Jhc2VVcmw6aS5iYXNlVXJsLGRvY0F0dGFjaG1lbnRzOmkuYXR0YWNobWVudHN9KX19Y2xhc3MgUG9wdXBBbm5vdGF0aW9uIGV4dGVuZHMgQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnR9PWU7dGhpcy5kYXRhLmFubm90YXRpb25UeXBlPXE7dGhpcy5kYXRhLm5vSFRNTD0hMTt0aGlzLmRhdGEucmVjdFswXSE9PXRoaXMuZGF0YS5yZWN0WzJdJiZ0aGlzLmRhdGEucmVjdFsxXSE9PXRoaXMuZGF0YS5yZWN0WzNdfHwodGhpcy5kYXRhLnJlY3Q9bnVsbCk7bGV0IGk9dC5nZXQoIlBhcmVudCIpO2lmKCFpKXt3YXJuKCJQb3B1cCBhbm5vdGF0aW9uIGhhcyBhIG1pc3Npbmcgb3IgaW52YWxpZCBwYXJlbnQgYW5ub3RhdGlvbi4iKTtyZXR1cm59dGhpcy5kYXRhLnBhcmVudFJlY3Q9bG9va3VwTm9ybWFsUmVjdChpLmdldEFycmF5KCJSZWN0IiksbnVsbCk7aXNOYW1lKGkuZ2V0KCJSVCIpLFgpJiYoaT1pLmdldCgiSVJUIikpO2lmKGkuaGFzKCJNIikpe3RoaXMuc2V0TW9kaWZpY2F0aW9uRGF0ZShpLmdldCgiTSIpKTt0aGlzLmRhdGEubW9kaWZpY2F0aW9uRGF0ZT10aGlzLm1vZGlmaWNhdGlvbkRhdGV9ZWxzZSB0aGlzLmRhdGEubW9kaWZpY2F0aW9uRGF0ZT1udWxsO2lmKGkuaGFzKCJDIikpe3RoaXMuc2V0Q29sb3IoaS5nZXRBcnJheSgiQyIpKTt0aGlzLmRhdGEuY29sb3I9dGhpcy5jb2xvcn1lbHNlIHRoaXMuZGF0YS5jb2xvcj1udWxsO2lmKCF0aGlzLnZpZXdhYmxlKXtjb25zdCBlPWkuZ2V0KCJGIik7dGhpcy5faXNWaWV3YWJsZShlKSYmdGhpcy5zZXRGbGFncyhlKX10aGlzLnNldFRpdGxlKGkuZ2V0KCJUIikpO3RoaXMuZGF0YS50aXRsZU9iaj10aGlzLl90aXRsZTt0aGlzLnNldENvbnRlbnRzKGkuZ2V0KCJDb250ZW50cyIpKTt0aGlzLmRhdGEuY29udGVudHNPYmo9dGhpcy5fY29udGVudHM7aS5oYXMoIlJDIikmJih0aGlzLmRhdGEucmljaFRleHQ9WEZBRmFjdG9yeS5nZXRSaWNoVGV4dEFzSHRtbChpLmdldCgiUkMiKSkpO3RoaXMuZGF0YS5vcGVuPSEhdC5nZXQoIk9wZW4iKX19Y2xhc3MgRnJlZVRleHRBbm5vdGF0aW9uIGV4dGVuZHMgTWFya3VwQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTt0aGlzLmRhdGEuaGFzT3duQ2FudmFzPSF0aGlzLmRhdGEubm9IVE1MO3RoaXMuZGF0YS5ub0hUTUw9ITE7Y29uc3R7ZXZhbHVhdG9yT3B0aW9uczp0LHhyZWY6aX09ZTt0aGlzLmRhdGEuYW5ub3RhdGlvblR5cGU9Ujt0aGlzLnNldERlZmF1bHRBcHBlYXJhbmNlKGUpO3RoaXMuX2hhc0FwcGVhcmFuY2U9ISF0aGlzLmFwcGVhcmFuY2U7aWYodGhpcy5faGFzQXBwZWFyYW5jZSl7Y29uc3R7Zm9udENvbG9yOmUsZm9udFNpemU6YX09ZnVuY3Rpb24gcGFyc2VBcHBlYXJhbmNlU3RyZWFtKGUsdCxpKXtyZXR1cm4gbmV3IEFwcGVhcmFuY2VTdHJlYW1FdmFsdWF0b3IoZSx0LGkpLnBhcnNlKCl9KHRoaXMuYXBwZWFyYW5jZSx0LGkpO3RoaXMuZGF0YS5kZWZhdWx0QXBwZWFyYW5jZURhdGEuZm9udENvbG9yPWU7dGhpcy5kYXRhLmRlZmF1bHRBcHBlYXJhbmNlRGF0YS5mb250U2l6ZT1hfHwxMH1lbHNle3RoaXMuZGF0YS5kZWZhdWx0QXBwZWFyYW5jZURhdGEuZm9udFNpemV8fD0xMDtjb25zdHtmb250Q29sb3I6dCxmb250U2l6ZTphfT10aGlzLmRhdGEuZGVmYXVsdEFwcGVhcmFuY2VEYXRhO2lmKHRoaXMuX2NvbnRlbnRzLnN0cil7dGhpcy5kYXRhLnRleHRDb250ZW50PXRoaXMuX2NvbnRlbnRzLnN0ci5zcGxpdCgvXHJcbj98XG4vKS5tYXAoKGU9PmUudHJpbUVuZCgpKSk7Y29uc3R7Y29vcmRzOmUsYmJveDp0LG1hdHJpeDppfT1GYWtlVW5pY29kZUZvbnQuZ2V0Rmlyc3RQb3NpdGlvbkluZm8odGhpcy5yZWN0YW5nbGUsdGhpcy5yb3RhdGlvbixhKTt0aGlzLmRhdGEudGV4dFBvc2l0aW9uPXRoaXMuX3RyYW5zZm9ybVBvaW50KGUsdCxpKX1pZih0aGlzLl9pc09mZnNjcmVlbkNhbnZhc1N1cHBvcnRlZCl7Y29uc3Qgcz1lLmRpY3QuZ2V0KCJDQSIpLHI9bmV3IEZha2VVbmljb2RlRm9udChpLCJzYW5zLXNlcmlmIik7dGhpcy5hcHBlYXJhbmNlPXIuY3JlYXRlQXBwZWFyYW5jZSh0aGlzLl9jb250ZW50cy5zdHIsdGhpcy5yZWN0YW5nbGUsdGhpcy5yb3RhdGlvbixhLHQscyk7dGhpcy5fc3RyZWFtcy5wdXNoKHRoaXMuYXBwZWFyYW5jZSl9ZWxzZSB3YXJuKCJGcmVlVGV4dEFubm90YXRpb246IE9mZnNjcmVlbkNhbnZhcyBpcyBub3Qgc3VwcG9ydGVkLCBhbm5vdGF0aW9uIG1heSBub3QgcmVuZGVyIGNvcnJlY3RseS4iKX19Z2V0IGhhc1RleHRDb250ZW50KCl7cmV0dXJuIHRoaXMuX2hhc0FwcGVhcmFuY2V9c3RhdGljIGNyZWF0ZU5ld0RpY3QoZSx0LHthcFJlZjppLGFwOmF9KXtjb25zdHtjb2xvcjpzLGZvbnRTaXplOnIscmVjdDpuLHJvdGF0aW9uOm8sdXNlcjpnLHZhbHVlOmN9PWUsaD1uZXcgRGljdCh0KTtoLnNldCgiVHlwZSIsTmFtZS5nZXQoIkFubm90IikpO2guc2V0KCJTdWJ0eXBlIixOYW1lLmdldCgiRnJlZVRleHQiKSk7aC5zZXQoIkNyZWF0aW9uRGF0ZSIsYEQ6JHtnZXRNb2RpZmljYXRpb25EYXRlKCl9YCk7aC5zZXQoIlJlY3QiLG4pO2NvbnN0IGw9YC9IZWx2ICR7cn0gVGYgJHtnZXRQZGZDb2xvcihzLCEwKX1gO2guc2V0KCJEQSIsbCk7aC5zZXQoIkNvbnRlbnRzIixpc0FzY2lpKGMpP2M6c3RyaW5nVG9VVEYxNlN0cmluZyhjLCEwKSk7aC5zZXQoIkYiLDQpO2guc2V0KCJCb3JkZXIiLFswLDAsMF0pO2guc2V0KCJSb3RhdGUiLG8pO2cmJmguc2V0KCJUIixpc0FzY2lpKGcpP2c6c3RyaW5nVG9VVEYxNlN0cmluZyhnLCEwKSk7aWYoaXx8YSl7Y29uc3QgZT1uZXcgRGljdCh0KTtoLnNldCgiQVAiLGUpO2k/ZS5zZXQoIk4iLGkpOmUuc2V0KCJOIixhKX1yZXR1cm4gaH1zdGF0aWMgYXN5bmMgY3JlYXRlTmV3QXBwZWFyYW5jZVN0cmVhbShlLHQsaSl7Y29uc3R7YmFzZUZvbnRSZWY6YSxldmFsdWF0b3I6cix0YXNrOm59PWkse2NvbG9yOm8sZm9udFNpemU6ZyxyZWN0OmMscm90YXRpb246aCx2YWx1ZTpsfT1lLEM9bmV3IERpY3QodCksUT1uZXcgRGljdCh0KTtpZihhKVEuc2V0KCJIZWx2IixhKTtlbHNle2NvbnN0IGU9bmV3IERpY3QodCk7ZS5zZXQoIkJhc2VGb250IixOYW1lLmdldCgiSGVsdmV0aWNhIikpO2Uuc2V0KCJUeXBlIixOYW1lLmdldCgiRm9udCIpKTtlLnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIlR5cGUxIikpO2Uuc2V0KCJFbmNvZGluZyIsTmFtZS5nZXQoIldpbkFuc2lFbmNvZGluZyIpKTtRLnNldCgiSGVsdiIsZSl9Qy5zZXQoIkZvbnQiLFEpO2NvbnN0IEU9YXdhaXQgV2lkZ2V0QW5ub3RhdGlvbi5fZ2V0Rm9udERhdGEocixuLHtmb250TmFtZToiSGVsdiIsZm9udFNpemU6Z30sQyksW3UsZCxmLHBdPWM7bGV0IG09Zi11LHk9cC1kO2glMTgwIT0wJiYoW20seV09W3ksbV0pO2NvbnN0IHc9bC5zcGxpdCgiXG4iKSxiPWcvMWUzO2xldCBEPS0xLzA7Y29uc3QgRj1bXTtmb3IobGV0IGUgb2Ygdyl7Y29uc3QgdD1FLmVuY29kZVN0cmluZyhlKTtpZih0Lmxlbmd0aD4xKXJldHVybiBudWxsO2U9dC5qb2luKCIiKTtGLnB1c2goZSk7bGV0IGk9MDtjb25zdCBhPUUuY2hhcnNUb0dseXBocyhlKTtmb3IoY29uc3QgZSBvZiBhKWkrPWUud2lkdGgqYjtEPU1hdGgubWF4KEQsaSl9bGV0IFM9MTtEPm0mJihTPW0vRCk7bGV0IGs9MTtjb25zdCBSPXMqZyxOPTEqZyxHPVIqdy5sZW5ndGg7Rz55JiYoaz15L0cpO2NvbnN0IHg9ZypNYXRoLm1pbihTLGspO2xldCBNLFUsTDtzd2l0Y2goaCl7Y2FzZSAwOkw9WzEsMCwwLDFdO1U9W2NbMF0sY1sxXSxtLHldO009W2NbMF0sY1szXS1OXTticmVhaztjYXNlIDkwOkw9WzAsMSwtMSwwXTtVPVtjWzFdLC1jWzJdLG0seV07TT1bY1sxXSwtY1swXS1OXTticmVhaztjYXNlIDE4MDpMPVstMSwwLDAsLTFdO1U9Wy1jWzJdLC1jWzNdLG0seV07TT1bLWNbMl0sLWNbMV0tTl07YnJlYWs7Y2FzZSAyNzA6TD1bMCwtMSwxLDBdO1U9Wy1jWzNdLGNbMF0sbSx5XTtNPVstY1szXSxjWzJdLU5dfWNvbnN0IEo9WyJxIixgJHtMLmpvaW4oIiAiKX0gMCAwIGNtYCxgJHtVLmpvaW4oIiAiKX0gcmUgVyBuYCwiQlQiLGAke2dldFBkZkNvbG9yKG8sITApfWAsYDAgVGMgL0hlbHYgJHtudW1iZXJUb1N0cmluZyh4KX0gVGZgXTtKLnB1c2goYCR7TS5qb2luKCIgIil9IFRkICgke2VzY2FwZVN0cmluZyhGWzBdKX0pIFRqYCk7Y29uc3QgSD1udW1iZXJUb1N0cmluZyhSKTtmb3IobGV0IGU9MSx0PUYubGVuZ3RoO2U8dDtlKyspe2NvbnN0IHQ9RltlXTtKLnB1c2goYDAgLSR7SH0gVGQgKCR7ZXNjYXBlU3RyaW5nKHQpfSkgVGpgKX1KLnB1c2goIkVUIiwiUSIpO2NvbnN0IFk9Si5qb2luKCJcbiIpLHY9bmV3IERpY3QodCk7di5zZXQoIkZvcm1UeXBlIiwxKTt2LnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIkZvcm0iKSk7di5zZXQoIlR5cGUiLE5hbWUuZ2V0KCJYT2JqZWN0IikpO3Yuc2V0KCJCQm94IixjKTt2LnNldCgiUmVzb3VyY2VzIixDKTt2LnNldCgiTWF0cml4IixbMSwwLDAsMSwtY1swXSwtY1sxXV0pO2NvbnN0IEs9bmV3IFN0cmluZ1N0cmVhbShZKTtLLmRpY3Q9djtyZXR1cm4gS319Y2xhc3MgTGluZUFubm90YXRpb24gZXh0ZW5kcyBNYXJrdXBBbm5vdGF0aW9ue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpO2NvbnN0e2RpY3Q6dCx4cmVmOml9PWU7dGhpcy5kYXRhLmFubm90YXRpb25UeXBlPU47dGhpcy5kYXRhLmhhc093bkNhbnZhcz10aGlzLmRhdGEubm9Sb3RhdGU7dGhpcy5kYXRhLm5vSFRNTD0hMTtjb25zdCBhPWxvb2t1cFJlY3QodC5nZXRBcnJheSgiTCIpLFswLDAsMCwwXSk7dGhpcy5kYXRhLmxpbmVDb29yZGluYXRlcz1VdGlsLm5vcm1hbGl6ZVJlY3QoYSk7dGhpcy5zZXRMaW5lRW5kaW5ncyh0LmdldEFycmF5KCJMRSIpKTt0aGlzLmRhdGEubGluZUVuZGluZ3M9dGhpcy5saW5lRW5kaW5ncztpZighdGhpcy5hcHBlYXJhbmNlKXtjb25zdCBlPXRoaXMuY29sb3I/Z2V0UGRmQ29sb3JBcnJheSh0aGlzLmNvbG9yKTpbMCwwLDBdLHM9dC5nZXQoIkNBIikscj1nZXRSZ2JDb2xvcih0LmdldEFycmF5KCJJQyIpLG51bGwpLG49cj9nZXRQZGZDb2xvckFycmF5KHIpOm51bGwsbz1uP3M6bnVsbCxnPXRoaXMuYm9yZGVyU3R5bGUud2lkdGh8fDEsYz0yKmcsaD1bdGhpcy5kYXRhLmxpbmVDb29yZGluYXRlc1swXS1jLHRoaXMuZGF0YS5saW5lQ29vcmRpbmF0ZXNbMV0tYyx0aGlzLmRhdGEubGluZUNvb3JkaW5hdGVzWzJdK2MsdGhpcy5kYXRhLmxpbmVDb29yZGluYXRlc1szXStjXTtVdGlsLmludGVyc2VjdCh0aGlzLnJlY3RhbmdsZSxoKXx8KHRoaXMucmVjdGFuZ2xlPWgpO3RoaXMuX3NldERlZmF1bHRBcHBlYXJhbmNlKHt4cmVmOmksZXh0cmE6YCR7Z30gd2Asc3Ryb2tlQ29sb3I6ZSxmaWxsQ29sb3I6bixzdHJva2VBbHBoYTpzLGZpbGxBbHBoYTpvLHBvaW50c0NhbGxiYWNrOihlLHQpPT57ZS5wdXNoKGAke2FbMF19ICR7YVsxXX0gbWAsYCR7YVsyXX0gJHthWzNdfSBsYCwiUyIpO3JldHVyblt0WzBdLngtZyx0WzFdLngrZyx0WzNdLnktZyx0WzFdLnkrZ119fSl9fX1jbGFzcyBTcXVhcmVBbm5vdGF0aW9uIGV4dGVuZHMgTWFya3VwQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnQseHJlZjppfT1lO3RoaXMuZGF0YS5hbm5vdGF0aW9uVHlwZT1HO3RoaXMuZGF0YS5oYXNPd25DYW52YXM9dGhpcy5kYXRhLm5vUm90YXRlO3RoaXMuZGF0YS5ub0hUTUw9ITE7aWYoIXRoaXMuYXBwZWFyYW5jZSl7Y29uc3QgZT10aGlzLmNvbG9yP2dldFBkZkNvbG9yQXJyYXkodGhpcy5jb2xvcik6WzAsMCwwXSxhPXQuZ2V0KCJDQSIpLHM9Z2V0UmdiQ29sb3IodC5nZXRBcnJheSgiSUMiKSxudWxsKSxyPXM/Z2V0UGRmQ29sb3JBcnJheShzKTpudWxsLG49cj9hOm51bGw7aWYoMD09PXRoaXMuYm9yZGVyU3R5bGUud2lkdGgmJiFyKXJldHVybjt0aGlzLl9zZXREZWZhdWx0QXBwZWFyYW5jZSh7eHJlZjppLGV4dHJhOmAke3RoaXMuYm9yZGVyU3R5bGUud2lkdGh9IHdgLHN0cm9rZUNvbG9yOmUsZmlsbENvbG9yOnIsc3Ryb2tlQWxwaGE6YSxmaWxsQWxwaGE6bixwb2ludHNDYWxsYmFjazooZSx0KT0+e2NvbnN0IGk9dFsyXS54K3RoaXMuYm9yZGVyU3R5bGUud2lkdGgvMixhPXRbMl0ueSt0aGlzLmJvcmRlclN0eWxlLndpZHRoLzIscz10WzNdLngtdFsyXS54LXRoaXMuYm9yZGVyU3R5bGUud2lkdGgsbj10WzFdLnktdFszXS55LXRoaXMuYm9yZGVyU3R5bGUud2lkdGg7ZS5wdXNoKGAke2l9ICR7YX0gJHtzfSAke259IHJlYCk7cj9lLnB1c2goIkIiKTplLnB1c2goIlMiKTtyZXR1cm5bdFswXS54LHRbMV0ueCx0WzNdLnksdFsxXS55XX19KX19fWNsYXNzIENpcmNsZUFubm90YXRpb24gZXh0ZW5kcyBNYXJrdXBBbm5vdGF0aW9ue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpO2NvbnN0e2RpY3Q6dCx4cmVmOml9PWU7dGhpcy5kYXRhLmFubm90YXRpb25UeXBlPXg7aWYoIXRoaXMuYXBwZWFyYW5jZSl7Y29uc3QgZT10aGlzLmNvbG9yP2dldFBkZkNvbG9yQXJyYXkodGhpcy5jb2xvcik6WzAsMCwwXSxhPXQuZ2V0KCJDQSIpLHM9Z2V0UmdiQ29sb3IodC5nZXRBcnJheSgiSUMiKSxudWxsKSxyPXM/Z2V0UGRmQ29sb3JBcnJheShzKTpudWxsLG49cj9hOm51bGw7aWYoMD09PXRoaXMuYm9yZGVyU3R5bGUud2lkdGgmJiFyKXJldHVybjtjb25zdCBvPTQvMypNYXRoLnRhbihNYXRoLlBJLzgpO3RoaXMuX3NldERlZmF1bHRBcHBlYXJhbmNlKHt4cmVmOmksZXh0cmE6YCR7dGhpcy5ib3JkZXJTdHlsZS53aWR0aH0gd2Asc3Ryb2tlQ29sb3I6ZSxmaWxsQ29sb3I6cixzdHJva2VBbHBoYTphLGZpbGxBbHBoYTpuLHBvaW50c0NhbGxiYWNrOihlLHQpPT57Y29uc3QgaT10WzBdLngrdGhpcy5ib3JkZXJTdHlsZS53aWR0aC8yLGE9dFswXS55LXRoaXMuYm9yZGVyU3R5bGUud2lkdGgvMixzPXRbM10ueC10aGlzLmJvcmRlclN0eWxlLndpZHRoLzIsbj10WzNdLnkrdGhpcy5ib3JkZXJTdHlsZS53aWR0aC8yLGc9aSsocy1pKS8yLGM9YSsobi1hKS8yLGg9KHMtaSkvMipvLGw9KG4tYSkvMipvO2UucHVzaChgJHtnfSAke259IG1gLGAke2craH0gJHtufSAke3N9ICR7YytsfSAke3N9ICR7Y30gY2AsYCR7c30gJHtjLWx9ICR7ZytofSAke2F9ICR7Z30gJHthfSBjYCxgJHtnLWh9ICR7YX0gJHtpfSAke2MtbH0gJHtpfSAke2N9IGNgLGAke2l9ICR7YytsfSAke2ctaH0gJHtufSAke2d9ICR7bn0gY2AsImgiKTtyP2UucHVzaCgiQiIpOmUucHVzaCgiUyIpO3JldHVyblt0WzBdLngsdFsxXS54LHRbM10ueSx0WzFdLnldfX0pfX19Y2xhc3MgUG9seWxpbmVBbm5vdGF0aW9uIGV4dGVuZHMgTWFya3VwQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnQseHJlZjppfT1lO3RoaXMuZGF0YS5hbm5vdGF0aW9uVHlwZT1VO3RoaXMuZGF0YS5oYXNPd25DYW52YXM9dGhpcy5kYXRhLm5vUm90YXRlO3RoaXMuZGF0YS5ub0hUTUw9ITE7dGhpcy5kYXRhLnZlcnRpY2VzPVtdO2lmKCEodGhpcyBpbnN0YW5jZW9mIFBvbHlnb25Bbm5vdGF0aW9uKSl7dGhpcy5zZXRMaW5lRW5kaW5ncyh0LmdldEFycmF5KCJMRSIpKTt0aGlzLmRhdGEubGluZUVuZGluZ3M9dGhpcy5saW5lRW5kaW5nc31jb25zdCBhPXQuZ2V0QXJyYXkoIlZlcnRpY2VzIik7aWYoaXNOdW1iZXJBcnJheShhLG51bGwpKXtmb3IobGV0IGU9MCx0PWEubGVuZ3RoO2U8dDtlKz0yKXRoaXMuZGF0YS52ZXJ0aWNlcy5wdXNoKHt4OmFbZV0seTphW2UrMV19KTtpZighdGhpcy5hcHBlYXJhbmNlKXtjb25zdCBlPXRoaXMuY29sb3I/Z2V0UGRmQ29sb3JBcnJheSh0aGlzLmNvbG9yKTpbMCwwLDBdLGE9dC5nZXQoIkNBIikscz10aGlzLmJvcmRlclN0eWxlLndpZHRofHwxLHI9MipzLG49WzEvMCwxLzAsLTEvMCwtMS8wXTtmb3IoY29uc3QgZSBvZiB0aGlzLmRhdGEudmVydGljZXMpe25bMF09TWF0aC5taW4oblswXSxlLngtcik7blsxXT1NYXRoLm1pbihuWzFdLGUueS1yKTtuWzJdPU1hdGgubWF4KG5bMl0sZS54K3IpO25bM109TWF0aC5tYXgoblszXSxlLnkrcil9VXRpbC5pbnRlcnNlY3QodGhpcy5yZWN0YW5nbGUsbil8fCh0aGlzLnJlY3RhbmdsZT1uKTt0aGlzLl9zZXREZWZhdWx0QXBwZWFyYW5jZSh7eHJlZjppLGV4dHJhOmAke3N9IHdgLHN0cm9rZUNvbG9yOmUsc3Ryb2tlQWxwaGE6YSxwb2ludHNDYWxsYmFjazooZSx0KT0+e2NvbnN0IGk9dGhpcy5kYXRhLnZlcnRpY2VzO2ZvcihsZXQgdD0wLGE9aS5sZW5ndGg7dDxhO3QrKyllLnB1c2goYCR7aVt0XS54fSAke2lbdF0ueX0gJHswPT09dD8ibSI6ImwifWApO2UucHVzaCgiUyIpO3JldHVyblt0WzBdLngsdFsxXS54LHRbM10ueSx0WzFdLnldfX0pfX19fWNsYXNzIFBvbHlnb25Bbm5vdGF0aW9uIGV4dGVuZHMgUG9seWxpbmVBbm5vdGF0aW9ue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpO3RoaXMuZGF0YS5hbm5vdGF0aW9uVHlwZT1NfX1jbGFzcyBDYXJldEFubm90YXRpb24gZXh0ZW5kcyBNYXJrdXBBbm5vdGF0aW9ue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpO3RoaXMuZGF0YS5hbm5vdGF0aW9uVHlwZT1LfX1jbGFzcyBJbmtBbm5vdGF0aW9uIGV4dGVuZHMgTWFya3VwQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTt0aGlzLmRhdGEuaGFzT3duQ2FudmFzPXRoaXMuZGF0YS5ub1JvdGF0ZTt0aGlzLmRhdGEubm9IVE1MPSExO2NvbnN0e2RpY3Q6dCx4cmVmOml9PWU7dGhpcy5kYXRhLmFubm90YXRpb25UeXBlPVQ7dGhpcy5kYXRhLmlua0xpc3RzPVtdO2NvbnN0IGE9dC5nZXRBcnJheSgiSW5rTGlzdCIpO2lmKEFycmF5LmlzQXJyYXkoYSkpe2ZvcihsZXQgZT0wLHQ9YS5sZW5ndGg7ZTx0OysrZSl7dGhpcy5kYXRhLmlua0xpc3RzLnB1c2goW10pO2lmKEFycmF5LmlzQXJyYXkoYVtlXSkpZm9yKGxldCB0PTAscz1hW2VdLmxlbmd0aDt0PHM7dCs9Mil7Y29uc3Qgcz1pLmZldGNoSWZSZWYoYVtlXVt0XSkscj1pLmZldGNoSWZSZWYoYVtlXVt0KzFdKTsibnVtYmVyIj09dHlwZW9mIHMmJiJudW1iZXIiPT10eXBlb2YgciYmdGhpcy5kYXRhLmlua0xpc3RzW2VdLnB1c2goe3g6cyx5OnJ9KX19aWYoIXRoaXMuYXBwZWFyYW5jZSl7Y29uc3QgZT10aGlzLmNvbG9yP2dldFBkZkNvbG9yQXJyYXkodGhpcy5jb2xvcik6WzAsMCwwXSxhPXQuZ2V0KCJDQSIpLHM9dGhpcy5ib3JkZXJTdHlsZS53aWR0aHx8MSxyPTIqcyxuPVsxLzAsMS8wLC0xLzAsLTEvMF07Zm9yKGNvbnN0IGUgb2YgdGhpcy5kYXRhLmlua0xpc3RzKWZvcihjb25zdCB0IG9mIGUpe25bMF09TWF0aC5taW4oblswXSx0Lngtcik7blsxXT1NYXRoLm1pbihuWzFdLHQueS1yKTtuWzJdPU1hdGgubWF4KG5bMl0sdC54K3IpO25bM109TWF0aC5tYXgoblszXSx0Lnkrcil9VXRpbC5pbnRlcnNlY3QodGhpcy5yZWN0YW5nbGUsbil8fCh0aGlzLnJlY3RhbmdsZT1uKTt0aGlzLl9zZXREZWZhdWx0QXBwZWFyYW5jZSh7eHJlZjppLGV4dHJhOmAke3N9IHdgLHN0cm9rZUNvbG9yOmUsc3Ryb2tlQWxwaGE6YSxwb2ludHNDYWxsYmFjazooZSx0KT0+e2Zvcihjb25zdCB0IG9mIHRoaXMuZGF0YS5pbmtMaXN0cyl7Zm9yKGxldCBpPTAsYT10Lmxlbmd0aDtpPGE7aSsrKWUucHVzaChgJHt0W2ldLnh9ICR7dFtpXS55fSAkezA9PT1pPyJtIjoibCJ9YCk7ZS5wdXNoKCJTIil9cmV0dXJuW3RbMF0ueCx0WzFdLngsdFszXS55LHRbMV0ueV19fSl9fX1zdGF0aWMgY3JlYXRlTmV3RGljdChlLHQse2FwUmVmOmksYXA6YX0pe2NvbnN0e2NvbG9yOnMsb3BhY2l0eTpyLHBhdGhzOm4sb3V0bGluZXM6byxyZWN0Omcscm90YXRpb246Yyx0aGlja25lc3M6aH09ZSxsPW5ldyBEaWN0KHQpO2wuc2V0KCJUeXBlIixOYW1lLmdldCgiQW5ub3QiKSk7bC5zZXQoIlN1YnR5cGUiLE5hbWUuZ2V0KCJJbmsiKSk7bC5zZXQoIkNyZWF0aW9uRGF0ZSIsYEQ6JHtnZXRNb2RpZmljYXRpb25EYXRlKCl9YCk7bC5zZXQoIlJlY3QiLGcpO2wuc2V0KCJJbmtMaXN0IixvPy5wb2ludHN8fG4ubWFwKChlPT5lLnBvaW50cykpKTtsLnNldCgiRiIsNCk7bC5zZXQoIlJvdGF0ZSIsYyk7byYmbC5zZXQoIklUIixOYW1lLmdldCgiSW5rSGlnaGxpZ2h0IikpO2NvbnN0IEM9bmV3IERpY3QodCk7bC5zZXQoIkJTIixDKTtDLnNldCgiVyIsaCk7bC5zZXQoIkMiLEFycmF5LmZyb20ocywoZT0+ZS8yNTUpKSk7bC5zZXQoIkNBIixyKTtjb25zdCBRPW5ldyBEaWN0KHQpO2wuc2V0KCJBUCIsUSk7aT9RLnNldCgiTiIsaSk6US5zZXQoIk4iLGEpO3JldHVybiBsfXN0YXRpYyBhc3luYyBjcmVhdGVOZXdBcHBlYXJhbmNlU3RyZWFtKGUsdCxpKXtpZihlLm91dGxpbmVzKXJldHVybiB0aGlzLmNyZWF0ZU5ld0FwcGVhcmFuY2VTdHJlYW1Gb3JIaWdobGlnaHQoZSx0LGkpO2NvbnN0e2NvbG9yOmEscmVjdDpzLHBhdGhzOnIsdGhpY2tuZXNzOm4sb3BhY2l0eTpvfT1lLGc9W2Ake259IHcgMSBKIDEgamAsYCR7Z2V0UGRmQ29sb3IoYSwhMSl9YF07MSE9PW8mJmcucHVzaCgiL1IwIGdzIik7Y29uc3QgYz1bXTtmb3IoY29uc3R7YmV6aWVyOmV9b2Ygcil7Yy5sZW5ndGg9MDtjLnB1c2goYCR7bnVtYmVyVG9TdHJpbmcoZVswXSl9ICR7bnVtYmVyVG9TdHJpbmcoZVsxXSl9IG1gKTtpZigyPT09ZS5sZW5ndGgpYy5wdXNoKGAke251bWJlclRvU3RyaW5nKGVbMF0pfSAke251bWJlclRvU3RyaW5nKGVbMV0pfSBsIFNgKTtlbHNle2ZvcihsZXQgdD0yLGk9ZS5sZW5ndGg7dDxpO3QrPTYpe2NvbnN0IGk9ZS5zbGljZSh0LHQrNikubWFwKG51bWJlclRvU3RyaW5nKS5qb2luKCIgIik7Yy5wdXNoKGAke2l9IGNgKX1jLnB1c2goIlMiKX1nLnB1c2goYy5qb2luKCJcbiIpKX1jb25zdCBoPWcuam9pbigiXG4iKSxsPW5ldyBEaWN0KHQpO2wuc2V0KCJGb3JtVHlwZSIsMSk7bC5zZXQoIlN1YnR5cGUiLE5hbWUuZ2V0KCJGb3JtIikpO2wuc2V0KCJUeXBlIixOYW1lLmdldCgiWE9iamVjdCIpKTtsLnNldCgiQkJveCIscyk7bC5zZXQoIkxlbmd0aCIsaC5sZW5ndGgpO2lmKDEhPT1vKXtjb25zdCBlPW5ldyBEaWN0KHQpLGk9bmV3IERpY3QodCksYT1uZXcgRGljdCh0KTthLnNldCgiQ0EiLG8pO2Euc2V0KCJUeXBlIixOYW1lLmdldCgiRXh0R1N0YXRlIikpO2kuc2V0KCJSMCIsYSk7ZS5zZXQoIkV4dEdTdGF0ZSIsaSk7bC5zZXQoIlJlc291cmNlcyIsZSl9Y29uc3QgQz1uZXcgU3RyaW5nU3RyZWFtKGgpO0MuZGljdD1sO3JldHVybiBDfXN0YXRpYyBhc3luYyBjcmVhdGVOZXdBcHBlYXJhbmNlU3RyZWFtRm9ySGlnaGxpZ2h0KGUsdCxpKXtjb25zdHtjb2xvcjphLHJlY3Q6cyxvdXRsaW5lczp7b3V0bGluZTpyfSxvcGFjaXR5Om59PWUsbz1bYCR7Z2V0UGRmQ29sb3IoYSwhMCl9YCwiL1IwIGdzIl07by5wdXNoKGAke251bWJlclRvU3RyaW5nKHJbNF0pfSAke251bWJlclRvU3RyaW5nKHJbNV0pfSBtYCk7Zm9yKGxldCBlPTYsdD1yLmxlbmd0aDtlPHQ7ZSs9NilpZihpc05hTihyW2VdKXx8bnVsbD09PXJbZV0pby5wdXNoKGAke251bWJlclRvU3RyaW5nKHJbZSs0XSl9ICR7bnVtYmVyVG9TdHJpbmcocltlKzVdKX0gbGApO2Vsc2V7Y29uc3QgdD1yLnNsaWNlKGUsZSs2KS5tYXAobnVtYmVyVG9TdHJpbmcpLmpvaW4oIiAiKTtvLnB1c2goYCR7dH0gY2ApfW8ucHVzaCgiaCBmIik7Y29uc3QgZz1vLmpvaW4oIlxuIiksYz1uZXcgRGljdCh0KTtjLnNldCgiRm9ybVR5cGUiLDEpO2Muc2V0KCJTdWJ0eXBlIixOYW1lLmdldCgiRm9ybSIpKTtjLnNldCgiVHlwZSIsTmFtZS5nZXQoIlhPYmplY3QiKSk7Yy5zZXQoIkJCb3giLHMpO2Muc2V0KCJMZW5ndGgiLGcubGVuZ3RoKTtjb25zdCBoPW5ldyBEaWN0KHQpLGw9bmV3IERpY3QodCk7aC5zZXQoIkV4dEdTdGF0ZSIsbCk7Yy5zZXQoIlJlc291cmNlcyIsaCk7Y29uc3QgQz1uZXcgRGljdCh0KTtsLnNldCgiUjAiLEMpO0Muc2V0KCJCTSIsTmFtZS5nZXQoIk11bHRpcGx5IikpO2lmKDEhPT1uKXtDLnNldCgiY2EiLG4pO0Muc2V0KCJUeXBlIixOYW1lLmdldCgiRXh0R1N0YXRlIikpfWNvbnN0IFE9bmV3IFN0cmluZ1N0cmVhbShnKTtRLmRpY3Q9YztyZXR1cm4gUX19Y2xhc3MgSGlnaGxpZ2h0QW5ub3RhdGlvbiBleHRlbmRzIE1hcmt1cEFubm90YXRpb257Y29uc3RydWN0b3IoZSl7c3VwZXIoZSk7Y29uc3R7ZGljdDp0LHhyZWY6aX09ZTt0aGlzLmRhdGEuYW5ub3RhdGlvblR5cGU9TDtpZih0aGlzLmRhdGEucXVhZFBvaW50cz1nZXRRdWFkUG9pbnRzKHQsbnVsbCkpe2NvbnN0IGU9dGhpcy5hcHBlYXJhbmNlPy5kaWN0LmdldCgiUmVzb3VyY2VzIik7aWYoIXRoaXMuYXBwZWFyYW5jZXx8IWU/LmhhcygiRXh0R1N0YXRlIikpe3RoaXMuYXBwZWFyYW5jZSYmd2FybigiSGlnaGxpZ2h0QW5ub3RhdGlvbiAtIGlnbm9yaW5nIGJ1aWx0LWluIGFwcGVhcmFuY2Ugc3RyZWFtLiIpO2NvbnN0IGU9dGhpcy5jb2xvcj9nZXRQZGZDb2xvckFycmF5KHRoaXMuY29sb3IpOlsxLDEsMF0sYT10LmdldCgiQ0EiKTt0aGlzLl9zZXREZWZhdWx0QXBwZWFyYW5jZSh7eHJlZjppLGZpbGxDb2xvcjplLGJsZW5kTW9kZToiTXVsdGlwbHkiLGZpbGxBbHBoYTphLHBvaW50c0NhbGxiYWNrOihlLHQpPT57ZS5wdXNoKGAke3RbMF0ueH0gJHt0WzBdLnl9IG1gLGAke3RbMV0ueH0gJHt0WzFdLnl9IGxgLGAke3RbM10ueH0gJHt0WzNdLnl9IGxgLGAke3RbMl0ueH0gJHt0WzJdLnl9IGxgLCJmIik7cmV0dXJuW3RbMF0ueCx0WzFdLngsdFszXS55LHRbMV0ueV19fSl9fWVsc2UgdGhpcy5kYXRhLnBvcHVwUmVmPW51bGx9c3RhdGljIGNyZWF0ZU5ld0RpY3QoZSx0LHthcFJlZjppLGFwOmF9KXtjb25zdHtjb2xvcjpzLG9wYWNpdHk6cixyZWN0Om4scm90YXRpb246byx1c2VyOmcscXVhZFBvaW50czpjfT1lLGg9bmV3IERpY3QodCk7aC5zZXQoIlR5cGUiLE5hbWUuZ2V0KCJBbm5vdCIpKTtoLnNldCgiU3VidHlwZSIsTmFtZS5nZXQoIkhpZ2hsaWdodCIpKTtoLnNldCgiQ3JlYXRpb25EYXRlIixgRDoke2dldE1vZGlmaWNhdGlvbkRhdGUoKX1gKTtoLnNldCgiUmVjdCIsbik7aC5zZXQoIkYiLDQpO2guc2V0KCJCb3JkZXIiLFswLDAsMF0pO2guc2V0KCJSb3RhdGUiLG8pO2guc2V0KCJRdWFkUG9pbnRzIixjKTtoLnNldCgiQyIsQXJyYXkuZnJvbShzLChlPT5lLzI1NSkpKTtoLnNldCgiQ0EiLHIpO2cmJmguc2V0KCJUIixpc0FzY2lpKGcpP2c6c3RyaW5nVG9VVEYxNlN0cmluZyhnLCEwKSk7aWYoaXx8YSl7Y29uc3QgZT1uZXcgRGljdCh0KTtoLnNldCgiQVAiLGUpO2Uuc2V0KCJOIixpfHxhKX1yZXR1cm4gaH1zdGF0aWMgYXN5bmMgY3JlYXRlTmV3QXBwZWFyYW5jZVN0cmVhbShlLHQsaSl7Y29uc3R7Y29sb3I6YSxyZWN0OnMsb3V0bGluZXM6cixvcGFjaXR5Om59PWUsbz1bYCR7Z2V0UGRmQ29sb3IoYSwhMCl9YCwiL1IwIGdzIl0sZz1bXTtmb3IoY29uc3QgZSBvZiByKXtnLmxlbmd0aD0wO2cucHVzaChgJHtudW1iZXJUb1N0cmluZyhlWzBdKX0gJHtudW1iZXJUb1N0cmluZyhlWzFdKX0gbWApO2ZvcihsZXQgdD0yLGk9ZS5sZW5ndGg7dDxpO3QrPTIpZy5wdXNoKGAke251bWJlclRvU3RyaW5nKGVbdF0pfSAke251bWJlclRvU3RyaW5nKGVbdCsxXSl9IGxgKTtnLnB1c2goImgiKTtvLnB1c2goZy5qb2luKCJcbiIpKX1vLnB1c2goImYqIik7Y29uc3QgYz1vLmpvaW4oIlxuIiksaD1uZXcgRGljdCh0KTtoLnNldCgiRm9ybVR5cGUiLDEpO2guc2V0KCJTdWJ0eXBlIixOYW1lLmdldCgiRm9ybSIpKTtoLnNldCgiVHlwZSIsTmFtZS5nZXQoIlhPYmplY3QiKSk7aC5zZXQoIkJCb3giLHMpO2guc2V0KCJMZW5ndGgiLGMubGVuZ3RoKTtjb25zdCBsPW5ldyBEaWN0KHQpLEM9bmV3IERpY3QodCk7bC5zZXQoIkV4dEdTdGF0ZSIsQyk7aC5zZXQoIlJlc291cmNlcyIsbCk7Y29uc3QgUT1uZXcgRGljdCh0KTtDLnNldCgiUjAiLFEpO1Euc2V0KCJCTSIsTmFtZS5nZXQoIk11bHRpcGx5IikpO2lmKDEhPT1uKXtRLnNldCgiY2EiLG4pO1Euc2V0KCJUeXBlIixOYW1lLmdldCgiRXh0R1N0YXRlIikpfWNvbnN0IEU9bmV3IFN0cmluZ1N0cmVhbShjKTtFLmRpY3Q9aDtyZXR1cm4gRX19Y2xhc3MgVW5kZXJsaW5lQW5ub3RhdGlvbiBleHRlbmRzIE1hcmt1cEFubm90YXRpb257Y29uc3RydWN0b3IoZSl7c3VwZXIoZSk7Y29uc3R7ZGljdDp0LHhyZWY6aX09ZTt0aGlzLmRhdGEuYW5ub3RhdGlvblR5cGU9SjtpZih0aGlzLmRhdGEucXVhZFBvaW50cz1nZXRRdWFkUG9pbnRzKHQsbnVsbCkpe2lmKCF0aGlzLmFwcGVhcmFuY2Upe2NvbnN0IGU9dGhpcy5jb2xvcj9nZXRQZGZDb2xvckFycmF5KHRoaXMuY29sb3IpOlswLDAsMF0sYT10LmdldCgiQ0EiKTt0aGlzLl9zZXREZWZhdWx0QXBwZWFyYW5jZSh7eHJlZjppLGV4dHJhOiJbXSAwIGQgMC41NzEgdyIsc3Ryb2tlQ29sb3I6ZSxzdHJva2VBbHBoYTphLHBvaW50c0NhbGxiYWNrOihlLHQpPT57ZS5wdXNoKGAke3RbMl0ueH0gJHt0WzJdLnkrMS4zfSBtYCxgJHt0WzNdLnh9ICR7dFszXS55KzEuM30gbGAsIlMiKTtyZXR1cm5bdFswXS54LHRbMV0ueCx0WzNdLnksdFsxXS55XX19KX19ZWxzZSB0aGlzLmRhdGEucG9wdXBSZWY9bnVsbH19Y2xhc3MgU3F1aWdnbHlBbm5vdGF0aW9uIGV4dGVuZHMgTWFya3VwQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdHtkaWN0OnQseHJlZjppfT1lO3RoaXMuZGF0YS5hbm5vdGF0aW9uVHlwZT1IO2lmKHRoaXMuZGF0YS5xdWFkUG9pbnRzPWdldFF1YWRQb2ludHModCxudWxsKSl7aWYoIXRoaXMuYXBwZWFyYW5jZSl7Y29uc3QgZT10aGlzLmNvbG9yP2dldFBkZkNvbG9yQXJyYXkodGhpcy5jb2xvcik6WzAsMCwwXSxhPXQuZ2V0KCJDQSIpO3RoaXMuX3NldERlZmF1bHRBcHBlYXJhbmNlKHt4cmVmOmksZXh0cmE6IltdIDAgZCAxIHciLHN0cm9rZUNvbG9yOmUsc3Ryb2tlQWxwaGE6YSxwb2ludHNDYWxsYmFjazooZSx0KT0+e2NvbnN0IGk9KHRbMF0ueS10WzJdLnkpLzY7bGV0IGE9aSxzPXRbMl0ueDtjb25zdCByPXRbMl0ueSxuPXRbM10ueDtlLnB1c2goYCR7c30gJHtyK2F9IG1gKTtkb3tzKz0yO2E9MD09PWE/aTowO2UucHVzaChgJHtzfSAke3IrYX0gbGApfXdoaWxlKHM8bik7ZS5wdXNoKCJTIik7cmV0dXJuW3RbMl0ueCxuLHItMippLHIrMippXX19KX19ZWxzZSB0aGlzLmRhdGEucG9wdXBSZWY9bnVsbH19Y2xhc3MgU3RyaWtlT3V0QW5ub3RhdGlvbiBleHRlbmRzIE1hcmt1cEFubm90YXRpb257Y29uc3RydWN0b3IoZSl7c3VwZXIoZSk7Y29uc3R7ZGljdDp0LHhyZWY6aX09ZTt0aGlzLmRhdGEuYW5ub3RhdGlvblR5cGU9WTtpZih0aGlzLmRhdGEucXVhZFBvaW50cz1nZXRRdWFkUG9pbnRzKHQsbnVsbCkpe2lmKCF0aGlzLmFwcGVhcmFuY2Upe2NvbnN0IGU9dGhpcy5jb2xvcj9nZXRQZGZDb2xvckFycmF5KHRoaXMuY29sb3IpOlswLDAsMF0sYT10LmdldCgiQ0EiKTt0aGlzLl9zZXREZWZhdWx0QXBwZWFyYW5jZSh7eHJlZjppLGV4dHJhOiJbXSAwIGQgMSB3IixzdHJva2VDb2xvcjplLHN0cm9rZUFscGhhOmEscG9pbnRzQ2FsbGJhY2s6KGUsdCk9PntlLnB1c2goKHRbMF0ueCt0WzJdLngpLzIrIiAiKyh0WzBdLnkrdFsyXS55KS8yKyIgbSIsKHRbMV0ueCt0WzNdLngpLzIrIiAiKyh0WzFdLnkrdFszXS55KS8yKyIgbCIsIlMiKTtyZXR1cm5bdFswXS54LHRbMV0ueCx0WzNdLnksdFsxXS55XX19KX19ZWxzZSB0aGlzLmRhdGEucG9wdXBSZWY9bnVsbH19Y2xhc3MgU3RhbXBBbm5vdGF0aW9uIGV4dGVuZHMgTWFya3VwQW5ub3RhdGlvbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTt0aGlzLmRhdGEuYW5ub3RhdGlvblR5cGU9djt0aGlzLmRhdGEuaGFzT3duQ2FudmFzPXRoaXMuZGF0YS5ub1JvdGF0ZTt0aGlzLmRhdGEubm9IVE1MPSExfXN0YXRpYyBhc3luYyBjcmVhdGVJbWFnZShlLHQpe2NvbnN0e3dpZHRoOmksaGVpZ2h0OmF9PWUscz1uZXcgT2Zmc2NyZWVuQ2FudmFzKGksYSkscj1zLmdldENvbnRleHQoIjJkIix7YWxwaGE6ITB9KTtyLmRyYXdJbWFnZShlLDAsMCk7Y29uc3Qgbj1yLmdldEltYWdlRGF0YSgwLDAsaSxhKS5kYXRhLG89bmV3IFVpbnQzMkFycmF5KG4uYnVmZmVyKSxnPW8uc29tZShGZWF0dXJlVGVzdC5pc0xpdHRsZUVuZGlhbj9lPT5lPj4+MjQhPTI1NTplPT4hISgyNTUmfmUpKTtpZihnKXtyLmZpbGxTdHlsZT0id2hpdGUiO3IuZmlsbFJlY3QoMCwwLGksYSk7ci5kcmF3SW1hZ2UoZSwwLDApfWNvbnN0IGM9cy5jb252ZXJ0VG9CbG9iKHt0eXBlOiJpbWFnZS9qcGVnIixxdWFsaXR5OjF9KS50aGVuKChlPT5lLmFycmF5QnVmZmVyKCkpKSxoPU5hbWUuZ2V0KCJYT2JqZWN0IiksbD1OYW1lLmdldCgiSW1hZ2UiKSxDPW5ldyBEaWN0KHQpO0Muc2V0KCJUeXBlIixoKTtDLnNldCgiU3VidHlwZSIsbCk7Qy5zZXQoIkJpdHNQZXJDb21wb25lbnQiLDgpO0Muc2V0KCJDb2xvclNwYWNlIixOYW1lLmdldCgiRGV2aWNlUkdCIikpO0Muc2V0KCJGaWx0ZXIiLE5hbWUuZ2V0KCJEQ1REZWNvZGUiKSk7Qy5zZXQoIkJCb3giLFswLDAsaSxhXSk7Qy5zZXQoIldpZHRoIixpKTtDLnNldCgiSGVpZ2h0IixhKTtsZXQgUT1udWxsO2lmKGcpe2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkoby5sZW5ndGgpO2lmKEZlYXR1cmVUZXN0LmlzTGl0dGxlRW5kaWFuKWZvcihsZXQgdD0wLGk9by5sZW5ndGg7dDxpO3QrKyllW3RdPW9bdF0+Pj4yNDtlbHNlIGZvcihsZXQgdD0wLGk9by5sZW5ndGg7dDxpO3QrKyllW3RdPTI1NSZvW3RdO2NvbnN0IHM9bmV3IERpY3QodCk7cy5zZXQoIlR5cGUiLGgpO3Muc2V0KCJTdWJ0eXBlIixsKTtzLnNldCgiQml0c1BlckNvbXBvbmVudCIsOCk7cy5zZXQoIkNvbG9yU3BhY2UiLE5hbWUuZ2V0KCJEZXZpY2VHcmF5IikpO3Muc2V0KCJXaWR0aCIsaSk7cy5zZXQoIkhlaWdodCIsYSk7UT1uZXcgU3RyZWFtKGUsMCwwLHMpfXJldHVybntpbWFnZVN0cmVhbTpuZXcgU3RyZWFtKGF3YWl0IGMsMCwwLEMpLHNtYXNrU3RyZWFtOlEsd2lkdGg6aSxoZWlnaHQ6YX19c3RhdGljIGNyZWF0ZU5ld0RpY3QoZSx0LHthcFJlZjppLGFwOmF9KXtjb25zdHtyZWN0OnMscm90YXRpb246cix1c2VyOm59PWUsbz1uZXcgRGljdCh0KTtvLnNldCgiVHlwZSIsTmFtZS5nZXQoIkFubm90IikpO28uc2V0KCJTdWJ0eXBlIixOYW1lLmdldCgiU3RhbXAiKSk7by5zZXQoIkNyZWF0aW9uRGF0ZSIsYEQ6JHtnZXRNb2RpZmljYXRpb25EYXRlKCl9YCk7by5zZXQoIlJlY3QiLHMpO28uc2V0KCJGIiw0KTtvLnNldCgiQm9yZGVyIixbMCwwLDBdKTtvLnNldCgiUm90YXRlIixyKTtuJiZvLnNldCgiVCIsaXNBc2NpaShuKT9uOnN0cmluZ1RvVVRGMTZTdHJpbmcobiwhMCkpO2lmKGl8fGEpe2NvbnN0IGU9bmV3IERpY3QodCk7by5zZXQoIkFQIixlKTtpP2Uuc2V0KCJOIixpKTplLnNldCgiTiIsYSl9cmV0dXJuIG99c3RhdGljIGFzeW5jIGNyZWF0ZU5ld0FwcGVhcmFuY2VTdHJlYW0oZSx0LGkpe2NvbnN0e3JvdGF0aW9uOmF9PWUse2ltYWdlUmVmOnMsd2lkdGg6cixoZWlnaHQ6bn09aS5pbWFnZSxvPW5ldyBEaWN0KHQpLGc9bmV3IERpY3QodCk7by5zZXQoIlhPYmplY3QiLGcpO2cuc2V0KCJJbTAiLHMpO2NvbnN0IGM9YHEgJHtyfSAwIDAgJHtufSAwIDAgY20gL0ltMCBEbyBRYCxoPW5ldyBEaWN0KHQpO2guc2V0KCJGb3JtVHlwZSIsMSk7aC5zZXQoIlN1YnR5cGUiLE5hbWUuZ2V0KCJGb3JtIikpO2guc2V0KCJUeXBlIixOYW1lLmdldCgiWE9iamVjdCIpKTtoLnNldCgiQkJveCIsWzAsMCxyLG5dKTtoLnNldCgiUmVzb3VyY2VzIixvKTtpZihhKXtjb25zdCBlPWdldFJvdGF0aW9uTWF0cml4KGEscixuKTtoLnNldCgiTWF0cml4IixlKX1jb25zdCBsPW5ldyBTdHJpbmdTdHJlYW0oYyk7bC5kaWN0PWg7cmV0dXJuIGx9fWNsYXNzIEZpbGVBdHRhY2htZW50QW5ub3RhdGlvbiBleHRlbmRzIE1hcmt1cEFubm90YXRpb257Y29uc3RydWN0b3IoZSl7c3VwZXIoZSk7Y29uc3R7ZGljdDp0LHhyZWY6aX09ZSxhPW5ldyBGaWxlU3BlYyh0LmdldCgiRlMiKSxpKTt0aGlzLmRhdGEuYW5ub3RhdGlvblR5cGU9Tzt0aGlzLmRhdGEuaGFzT3duQ2FudmFzPXRoaXMuZGF0YS5ub1JvdGF0ZTt0aGlzLmRhdGEubm9IVE1MPSExO3RoaXMuZGF0YS5maWxlPWEuc2VyaWFsaXphYmxlO2NvbnN0IHM9dC5nZXQoIk5hbWUiKTt0aGlzLmRhdGEubmFtZT1zIGluc3RhbmNlb2YgTmFtZT9zdHJpbmdUb1BERlN0cmluZyhzLm5hbWUpOiJQdXNoUGluIjtjb25zdCByPXQuZ2V0KCJjYSIpO3RoaXMuZGF0YS5maWxsQWxwaGE9Im51bWJlciI9PXR5cGVvZiByJiZyPj0wJiZyPD0xP3I6bnVsbH19ZnVuY3Rpb24gZGVjb2RlU3RyaW5nKGUpe3RyeXtyZXR1cm4gc3RyaW5nVG9VVEY4U3RyaW5nKGUpfWNhdGNoKHQpe3dhcm4oYFVURi04IGRlY29kaW5nIGZhaWxlZDogIiR7dH0iLmApO3JldHVybiBlfX1jbGFzcyBEYXRhc2V0WE1MUGFyc2VyIGV4dGVuZHMgU2ltcGxlWE1MUGFyc2Vye2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpO3RoaXMubm9kZT1udWxsfW9uRW5kRWxlbWVudChlKXtjb25zdCB0PXN1cGVyLm9uRW5kRWxlbWVudChlKTtpZih0JiYieGZhOmRhdGFzZXRzIj09PWUpe3RoaXMubm9kZT10O3Rocm93IG5ldyBFcnJvcigiQWJvcnRpbmcgRGF0YXNldFhNTFBhcnNlci4iKX19fWNsYXNzIERhdGFzZXRSZWFkZXJ7Y29uc3RydWN0b3IoZSl7aWYoZS5kYXRhc2V0cyl0aGlzLm5vZGU9bmV3IFNpbXBsZVhNTFBhcnNlcih7aGFzQXR0cmlidXRlczohMH0pLnBhcnNlRnJvbVN0cmluZyhlLmRhdGFzZXRzKS5kb2N1bWVudEVsZW1lbnQ7ZWxzZXtjb25zdCB0PW5ldyBEYXRhc2V0WE1MUGFyc2VyKHtoYXNBdHRyaWJ1dGVzOiEwfSk7dHJ5e3QucGFyc2VGcm9tU3RyaW5nKGVbInhkcDp4ZHAiXSl9Y2F0Y2h7fXRoaXMubm9kZT10Lm5vZGV9fWdldFZhbHVlKGUpe2lmKCF0aGlzLm5vZGV8fCFlKXJldHVybiIiO2NvbnN0IHQ9dGhpcy5ub2RlLnNlYXJjaE5vZGUocGFyc2VYRkFQYXRoKGUpLDApO2lmKCF0KXJldHVybiIiO2NvbnN0IGk9dC5maXJzdENoaWxkO3JldHVybiJ2YWx1ZSI9PT1pPy5ub2RlTmFtZT90LmNoaWxkcmVuLm1hcCgoZT0+ZGVjb2RlU3RyaW5nKGUudGV4dENvbnRlbnQpKSk6ZGVjb2RlU3RyaW5nKHQudGV4dENvbnRlbnQpfX1jbGFzcyBYUmVmeyNKPW51bGw7Y29uc3RydWN0b3IoZSx0KXt0aGlzLnN0cmVhbT1lO3RoaXMucGRmTWFuYWdlcj10O3RoaXMuZW50cmllcz1bXTt0aGlzLl94cmVmU3Rtcz1uZXcgU2V0O3RoaXMuX2NhY2hlTWFwPW5ldyBNYXA7dGhpcy5fcGVuZGluZ1JlZnM9bmV3IFJlZlNldDt0aGlzLl9uZXdQZXJzaXN0ZW50UmVmTnVtPW51bGw7dGhpcy5fbmV3VGVtcG9yYXJ5UmVmTnVtPW51bGw7dGhpcy5fcGVyc2lzdGVudFJlZnNDYWNoZT1udWxsfWdldE5ld1BlcnNpc3RlbnRSZWYoZSl7bnVsbD09PXRoaXMuX25ld1BlcnNpc3RlbnRSZWZOdW0mJih0aGlzLl9uZXdQZXJzaXN0ZW50UmVmTnVtPXRoaXMuZW50cmllcy5sZW5ndGh8fDEpO2NvbnN0IHQ9dGhpcy5fbmV3UGVyc2lzdGVudFJlZk51bSsrO3RoaXMuX2NhY2hlTWFwLnNldCh0LGUpO3JldHVybiBSZWYuZ2V0KHQsMCl9Z2V0TmV3VGVtcG9yYXJ5UmVmKCl7aWYobnVsbD09PXRoaXMuX25ld1RlbXBvcmFyeVJlZk51bSl7dGhpcy5fbmV3VGVtcG9yYXJ5UmVmTnVtPXRoaXMuZW50cmllcy5sZW5ndGh8fDE7aWYodGhpcy5fbmV3UGVyc2lzdGVudFJlZk51bSl7dGhpcy5fcGVyc2lzdGVudFJlZnNDYWNoZT1uZXcgTWFwO2ZvcihsZXQgZT10aGlzLl9uZXdUZW1wb3JhcnlSZWZOdW07ZTx0aGlzLl9uZXdQZXJzaXN0ZW50UmVmTnVtO2UrKyl7dGhpcy5fcGVyc2lzdGVudFJlZnNDYWNoZS5zZXQoZSx0aGlzLl9jYWNoZU1hcC5nZXQoZSkpO3RoaXMuX2NhY2hlTWFwLmRlbGV0ZShlKX19fXJldHVybiBSZWYuZ2V0KHRoaXMuX25ld1RlbXBvcmFyeVJlZk51bSsrLDApfXJlc2V0TmV3VGVtcG9yYXJ5UmVmKCl7dGhpcy5fbmV3VGVtcG9yYXJ5UmVmTnVtPW51bGw7aWYodGhpcy5fcGVyc2lzdGVudFJlZnNDYWNoZSlmb3IoY29uc3RbZSx0XW9mIHRoaXMuX3BlcnNpc3RlbnRSZWZzQ2FjaGUpdGhpcy5fY2FjaGVNYXAuc2V0KGUsdCk7dGhpcy5fcGVyc2lzdGVudFJlZnNDYWNoZT1udWxsfXNldFN0YXJ0WFJlZihlKXt0aGlzLnN0YXJ0WFJlZlF1ZXVlPVtlXX1wYXJzZShlPSExKXtsZXQgdCxpLGE7aWYoZSl7d2FybigiSW5kZXhpbmcgYWxsIFBERiBvYmplY3RzIik7dD10aGlzLmluZGV4T2JqZWN0cygpfWVsc2UgdD10aGlzLnJlYWRYUmVmKCk7dC5hc3NpZ25YcmVmKHRoaXMpO3RoaXMudHJhaWxlcj10O3RyeXtpPXQuZ2V0KCJFbmNyeXB0Iil9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGU7d2FybihgWFJlZi5wYXJzZSAtIEludmFsaWQgIkVuY3J5cHQiIHJlZmVyZW5jZTogIiR7ZX0iLmApfWlmKGkgaW5zdGFuY2VvZiBEaWN0KXtjb25zdCBlPXQuZ2V0KCJJRCIpLGE9ZT8ubGVuZ3RoP2VbMF06IiI7aS5zdXBwcmVzc0VuY3J5cHRpb249ITA7dGhpcy5lbmNyeXB0PW5ldyBDaXBoZXJUcmFuc2Zvcm1GYWN0b3J5KGksYSx0aGlzLnBkZk1hbmFnZXIucGFzc3dvcmQpfXRyeXthPXQuZ2V0KCJSb290Iil9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGU7d2FybihgWFJlZi5wYXJzZSAtIEludmFsaWQgIlJvb3QiIHJlZmVyZW5jZTogIiR7ZX0iLmApfWlmKGEgaW5zdGFuY2VvZiBEaWN0KXRyeXtpZihhLmdldCgiUGFnZXMiKWluc3RhbmNlb2YgRGljdCl7dGhpcy5yb290PWE7cmV0dXJufX1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pdGhyb3cgZTt3YXJuKGBYUmVmLnBhcnNlIC0gSW52YWxpZCAiUGFnZXMiIHJlZmVyZW5jZTogIiR7ZX0iLmApfWlmKCFlKXRocm93IG5ldyBYUmVmUGFyc2VFeGNlcHRpb247dGhyb3cgbmV3IEludmFsaWRQREZFeGNlcHRpb24oIkludmFsaWQgUm9vdCByZWZlcmVuY2UuIil9cHJvY2Vzc1hSZWZUYWJsZShlKXsidGFibGVTdGF0ZSJpbiB0aGlzfHwodGhpcy50YWJsZVN0YXRlPXtlbnRyeU51bTowLHN0cmVhbVBvczplLmxleGVyLnN0cmVhbS5wb3MscGFyc2VyQnVmMTplLmJ1ZjEscGFyc2VyQnVmMjplLmJ1ZjJ9KTtpZighaXNDbWQodGhpcy5yZWFkWFJlZlRhYmxlKGUpLCJ0cmFpbGVyIikpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIFhSZWYgdGFibGU6IGNvdWxkIG5vdCBmaW5kIHRyYWlsZXIgZGljdGlvbmFyeSIpO2xldCB0PWUuZ2V0T2JqKCk7dCBpbnN0YW5jZW9mIERpY3R8fCF0LmRpY3R8fCh0PXQuZGljdCk7aWYoISh0IGluc3RhbmNlb2YgRGljdCkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIFhSZWYgdGFibGU6IGNvdWxkIG5vdCBwYXJzZSB0cmFpbGVyIGRpY3Rpb25hcnkiKTtkZWxldGUgdGhpcy50YWJsZVN0YXRlO3JldHVybiB0fXJlYWRYUmVmVGFibGUoZSl7Y29uc3QgdD1lLmxleGVyLnN0cmVhbSxpPXRoaXMudGFibGVTdGF0ZTt0LnBvcz1pLnN0cmVhbVBvcztlLmJ1ZjE9aS5wYXJzZXJCdWYxO2UuYnVmMj1pLnBhcnNlckJ1ZjI7bGV0IGE7Zm9yKDs7KXtpZighKCJmaXJzdEVudHJ5TnVtImluIGkpfHwhKCJlbnRyeUNvdW50ImluIGkpKXtpZihpc0NtZChhPWUuZ2V0T2JqKCksInRyYWlsZXIiKSlicmVhaztpLmZpcnN0RW50cnlOdW09YTtpLmVudHJ5Q291bnQ9ZS5nZXRPYmooKX1sZXQgcz1pLmZpcnN0RW50cnlOdW07Y29uc3Qgcj1pLmVudHJ5Q291bnQ7aWYoIU51bWJlci5pc0ludGVnZXIocyl8fCFOdW1iZXIuaXNJbnRlZ2VyKHIpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBYUmVmIHRhYmxlOiB3cm9uZyB0eXBlcyBpbiBzdWJzZWN0aW9uIGhlYWRlciIpO2ZvcihsZXQgYT1pLmVudHJ5TnVtO2E8cjthKyspe2kuc3RyZWFtUG9zPXQucG9zO2kuZW50cnlOdW09YTtpLnBhcnNlckJ1ZjE9ZS5idWYxO2kucGFyc2VyQnVmMj1lLmJ1ZjI7Y29uc3Qgbj17fTtuLm9mZnNldD1lLmdldE9iaigpO24uZ2VuPWUuZ2V0T2JqKCk7Y29uc3Qgbz1lLmdldE9iaigpO2lmKG8gaW5zdGFuY2VvZiBDbWQpc3dpdGNoKG8uY21kKXtjYXNlImYiOm4uZnJlZT0hMDticmVhaztjYXNlIm4iOm4udW5jb21wcmVzc2VkPSEwfWlmKCFOdW1iZXIuaXNJbnRlZ2VyKG4ub2Zmc2V0KXx8IU51bWJlci5pc0ludGVnZXIobi5nZW4pfHwhbi5mcmVlJiYhbi51bmNvbXByZXNzZWQpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIGVudHJ5IGluIFhSZWYgc3Vic2VjdGlvbjogJHtzfSwgJHtyfWApOzA9PT1hJiZuLmZyZWUmJjE9PT1zJiYocz0wKTt0aGlzLmVudHJpZXNbYStzXXx8KHRoaXMuZW50cmllc1thK3NdPW4pfWkuZW50cnlOdW09MDtpLnN0cmVhbVBvcz10LnBvcztpLnBhcnNlckJ1ZjE9ZS5idWYxO2kucGFyc2VyQnVmMj1lLmJ1ZjI7ZGVsZXRlIGkuZmlyc3RFbnRyeU51bTtkZWxldGUgaS5lbnRyeUNvdW50fWlmKHRoaXMuZW50cmllc1swXSYmIXRoaXMuZW50cmllc1swXS5mcmVlKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBYUmVmIHRhYmxlOiB1bmV4cGVjdGVkIGZpcnN0IG9iamVjdCIpO3JldHVybiBhfXByb2Nlc3NYUmVmU3RyZWFtKGUpe2lmKCEoInN0cmVhbVN0YXRlImluIHRoaXMpKXtjb25zdCB0PWUuZGljdCxpPXQuZ2V0KCJXIik7bGV0IGE9dC5nZXQoIkluZGV4Iik7YXx8KGE9WzAsdC5nZXQoIlNpemUiKV0pO3RoaXMuc3RyZWFtU3RhdGU9e2VudHJ5UmFuZ2VzOmEsYnl0ZVdpZHRoczppLGVudHJ5TnVtOjAsc3RyZWFtUG9zOmUucG9zfX10aGlzLnJlYWRYUmVmU3RyZWFtKGUpO2RlbGV0ZSB0aGlzLnN0cmVhbVN0YXRlO3JldHVybiBlLmRpY3R9cmVhZFhSZWZTdHJlYW0oZSl7Y29uc3QgdD10aGlzLnN0cmVhbVN0YXRlO2UucG9zPXQuc3RyZWFtUG9zO2NvbnN0W2ksYSxzXT10LmJ5dGVXaWR0aHMscj10LmVudHJ5UmFuZ2VzO2Zvcig7ci5sZW5ndGg+MDspe2NvbnN0W24sb109cjtpZighTnVtYmVyLmlzSW50ZWdlcihuKXx8IU51bWJlci5pc0ludGVnZXIobykpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIFhSZWYgcmFuZ2UgZmllbGRzOiAke259LCAke299YCk7aWYoIU51bWJlci5pc0ludGVnZXIoaSl8fCFOdW1iZXIuaXNJbnRlZ2VyKGEpfHwhTnVtYmVyLmlzSW50ZWdlcihzKSl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoYEludmFsaWQgWFJlZiBlbnRyeSBmaWVsZHMgbGVuZ3RoOiAke259LCAke299YCk7Zm9yKGxldCByPXQuZW50cnlOdW07cjxvOysrcil7dC5lbnRyeU51bT1yO3Quc3RyZWFtUG9zPWUucG9zO2xldCBvPTAsZz0wLGM9MDtmb3IobGV0IHQ9MDt0PGk7Kyt0KXtjb25zdCB0PWUuZ2V0Qnl0ZSgpO2lmKC0xPT09dCl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkludmFsaWQgWFJlZiBieXRlV2lkdGhzICd0eXBlJy4iKTtvPW88PDh8dH0wPT09aSYmKG89MSk7Zm9yKGxldCB0PTA7dDxhOysrdCl7Y29uc3QgdD1lLmdldEJ5dGUoKTtpZigtMT09PXQpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIFhSZWYgYnl0ZVdpZHRocyAnb2Zmc2V0Jy4iKTtnPWc8PDh8dH1mb3IobGV0IHQ9MDt0PHM7Kyt0KXtjb25zdCB0PWUuZ2V0Qnl0ZSgpO2lmKC0xPT09dCl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkludmFsaWQgWFJlZiBieXRlV2lkdGhzICdnZW5lcmF0aW9uJy4iKTtjPWM8PDh8dH1jb25zdCBoPXt9O2gub2Zmc2V0PWc7aC5nZW49Yztzd2l0Y2gobyl7Y2FzZSAwOmguZnJlZT0hMDticmVhaztjYXNlIDE6aC51bmNvbXByZXNzZWQ9ITA7YnJlYWs7Y2FzZSAyOmJyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEZvcm1hdEVycm9yKGBJbnZhbGlkIFhSZWYgZW50cnkgdHlwZTogJHtvfWApfXRoaXMuZW50cmllc1tuK3JdfHwodGhpcy5lbnRyaWVzW24rcl09aCl9dC5lbnRyeU51bT0wO3Quc3RyZWFtUG9zPWUucG9zO3Iuc3BsaWNlKDAsMil9fWluZGV4T2JqZWN0cygpe2Z1bmN0aW9uIHJlYWRUb2tlbihlLHQpe2xldCBpPSIiLGE9ZVt0XTtmb3IoOzEwIT09YSYmMTMhPT1hJiY2MCE9PWEmJiEoKyt0Pj1lLmxlbmd0aCk7KXtpKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGEpO2E9ZVt0XX1yZXR1cm4gaX1mdW5jdGlvbiBza2lwVW50aWwoZSx0LGkpe2NvbnN0IGE9aS5sZW5ndGgscz1lLmxlbmd0aDtsZXQgcj0wO2Zvcig7dDxzOyl7bGV0IHM9MDtmb3IoO3M8YSYmZVt0K3NdPT09aVtzXTspKytzO2lmKHM+PWEpYnJlYWs7dCsrO3IrK31yZXR1cm4gcn1jb25zdCBlPS9cYihlbmRvYmp8XGQrXHMrXGQrXHMrb2JqfHhyZWZ8dHJhaWxlclxzKjw8KVxiL2csdD0vXGIoc3RhcnR4cmVmfFxkK1xzK1xkK1xzK29iailcYi9nLGk9L14oXGQrKVxzKyhcZCspXHMrb2JqXGIvLGE9bmV3IFVpbnQ4QXJyYXkoWzExNiwxMTQsOTcsMTA1LDEwOCwxMDEsMTE0XSkscz1uZXcgVWludDhBcnJheShbMTE1LDExNiw5NywxMTQsMTE2LDEyMCwxMTQsMTAxLDEwMl0pLHI9bmV3IFVpbnQ4QXJyYXkoWzQ3LDg4LDgyLDEwMSwxMDJdKTt0aGlzLmVudHJpZXMubGVuZ3RoPTA7dGhpcy5fY2FjaGVNYXAuY2xlYXIoKTtjb25zdCBuPXRoaXMuc3RyZWFtO24ucG9zPTA7Y29uc3Qgbz1uLmdldEJ5dGVzKCksZz1ieXRlc1RvU3RyaW5nKG8pLGM9by5sZW5ndGg7bGV0IGg9bi5zdGFydDtjb25zdCBsPVtdLEM9W107Zm9yKDtoPGM7KXtsZXQgUT1vW2hdO2lmKDk9PT1RfHwxMD09PVF8fDEzPT09UXx8MzI9PT1RKXsrK2g7Y29udGludWV9aWYoMzc9PT1RKXtkb3srK2g7aWYoaD49YylicmVhaztRPW9baF19d2hpbGUoMTAhPT1RJiYxMyE9PVEpO2NvbnRpbnVlfWNvbnN0IEU9cmVhZFRva2VuKG8saCk7bGV0IHU7aWYoRS5zdGFydHNXaXRoKCJ4cmVmIikmJig0PT09RS5sZW5ndGh8fC9ccy8udGVzdChFWzRdKSkpe2grPXNraXBVbnRpbChvLGgsYSk7bC5wdXNoKGgpO2grPXNraXBVbnRpbChvLGgscyl9ZWxzZSBpZih1PWkuZXhlYyhFKSl7Y29uc3QgdD0wfHVbMV0saT0wfHVbMl0sYT1oK0UubGVuZ3RoO2xldCBzLGw9ITE7aWYodGhpcy5lbnRyaWVzW3RdKXtpZih0aGlzLmVudHJpZXNbdF0uZ2VuPT09aSl0cnl7bmV3IFBhcnNlcih7bGV4ZXI6bmV3IExleGVyKG4ubWFrZVN1YlN0cmVhbShhKSl9KS5nZXRPYmooKTtsPSEwfWNhdGNoKGUpe2UgaW5zdGFuY2VvZiBQYXJzZXJFT0ZFeGNlcHRpb24/d2FybihgaW5kZXhPYmplY3RzIC0tIGNoZWNraW5nIG9iamVjdCAoJHtFfSk6ICIke2V9Ii5gKTpsPSEwfX1lbHNlIGw9ITA7bCYmKHRoaXMuZW50cmllc1t0XT17b2Zmc2V0Omgtbi5zdGFydCxnZW46aSx1bmNvbXByZXNzZWQ6ITB9KTtlLmxhc3RJbmRleD1hO2NvbnN0IFE9ZS5leGVjKGcpO2lmKFEpe3M9ZS5sYXN0SW5kZXgrMS1oO2lmKCJlbmRvYmoiIT09UVsxXSl7d2FybihgaW5kZXhPYmplY3RzOiBGb3VuZCAiJHtRWzFdfSIgaW5zaWRlIG9mIGFub3RoZXIgIm9iaiIsIGNhdXNlZCBieSBtaXNzaW5nICJlbmRvYmoiIC0tIHRyeWluZyB0byByZWNvdmVyLmApO3MtPVFbMV0ubGVuZ3RoKzF9fWVsc2Ugcz1jLWg7Y29uc3QgZD1vLnN1YmFycmF5KGgsaCtzKSxmPXNraXBVbnRpbChkLDAscik7aWYoZjxzJiZkW2YrNV08NjQpe0MucHVzaChoLW4uc3RhcnQpO3RoaXMuX3hyZWZTdG1zLmFkZChoLW4uc3RhcnQpfWgrPXN9ZWxzZSBpZihFLnN0YXJ0c1dpdGgoInRyYWlsZXIiKSYmKDc9PT1FLmxlbmd0aHx8L1xzLy50ZXN0KEVbN10pKSl7bC5wdXNoKGgpO2NvbnN0IGU9aCtFLmxlbmd0aDtsZXQgaTt0Lmxhc3RJbmRleD1lO2NvbnN0IGE9dC5leGVjKGcpO2lmKGEpe2k9dC5sYXN0SW5kZXgrMS1oO2lmKCJzdGFydHhyZWYiIT09YVsxXSl7d2FybihgaW5kZXhPYmplY3RzOiBGb3VuZCAiJHthWzFdfSIgYWZ0ZXIgInRyYWlsZXIiLCBjYXVzZWQgYnkgbWlzc2luZyAic3RhcnR4cmVmIiAtLSB0cnlpbmcgdG8gcmVjb3Zlci5gKTtpLT1hWzFdLmxlbmd0aCsxfX1lbHNlIGk9Yy1oO2grPWl9ZWxzZSBoKz1FLmxlbmd0aCsxfWZvcihjb25zdCBlIG9mIEMpe3RoaXMuc3RhcnRYUmVmUXVldWUucHVzaChlKTt0aGlzLnJlYWRYUmVmKCEwKX1jb25zdCBRPVtdO2xldCBFLHUsZD0hMTtmb3IoY29uc3QgZSBvZiBsKXtuLnBvcz1lO2NvbnN0IHQ9bmV3IFBhcnNlcih7bGV4ZXI6bmV3IExleGVyKG4pLHhyZWY6dGhpcyxhbGxvd1N0cmVhbXM6ITAscmVjb3ZlcnlNb2RlOiEwfSk7aWYoIWlzQ21kKHQuZ2V0T2JqKCksInRyYWlsZXIiKSljb250aW51ZTtjb25zdCBpPXQuZ2V0T2JqKCk7aWYoaSBpbnN0YW5jZW9mIERpY3Qpe1EucHVzaChpKTtpLmhhcygiRW5jcnlwdCIpJiYoZD0hMCl9fWZvcihjb25zdCBlIG9mWy4uLlEsImdlbkZhbGxiYWNrIiwuLi5RXSl7aWYoImdlbkZhbGxiYWNrIj09PWUpe2lmKCF1KWJyZWFrO3RoaXMuX2dlbmVyYXRpb25GYWxsYmFjaz0hMDtjb250aW51ZX1sZXQgdD0hMTt0cnl7Y29uc3QgaT1lLmdldCgiUm9vdCIpO2lmKCEoaSBpbnN0YW5jZW9mIERpY3QpKWNvbnRpbnVlO2NvbnN0IGE9aS5nZXQoIlBhZ2VzIik7aWYoIShhIGluc3RhbmNlb2YgRGljdCkpY29udGludWU7Y29uc3Qgcz1hLmdldCgiQ291bnQiKTtOdW1iZXIuaXNJbnRlZ2VyKHMpJiYodD0hMCl9Y2F0Y2goZSl7dT1lO2NvbnRpbnVlfWlmKHQmJighZHx8ZS5oYXMoIkVuY3J5cHQiKSkmJmUuaGFzKCJJRCIpKXJldHVybiBlO0U9ZX1pZihFKXJldHVybiBFO2lmKHRoaXMudG9wRGljdClyZXR1cm4gdGhpcy50b3BEaWN0O3Rocm93IG5ldyBJbnZhbGlkUERGRXhjZXB0aW9uKCJJbnZhbGlkIFBERiBzdHJ1Y3R1cmUuIil9cmVhZFhSZWYoZT0hMSl7Y29uc3QgdD10aGlzLnN0cmVhbSxpPW5ldyBTZXQ7Zm9yKDt0aGlzLnN0YXJ0WFJlZlF1ZXVlLmxlbmd0aDspe3RyeXtjb25zdCBlPXRoaXMuc3RhcnRYUmVmUXVldWVbMF07aWYoaS5oYXMoZSkpe3dhcm4oInJlYWRYUmVmIC0gc2tpcHBpbmcgWFJlZiB0YWJsZSBzaW5jZSBpdCB3YXMgYWxyZWFkeSBwYXJzZWQuIik7dGhpcy5zdGFydFhSZWZRdWV1ZS5zaGlmdCgpO2NvbnRpbnVlfWkuYWRkKGUpO3QucG9zPWUrdC5zdGFydDtjb25zdCBhPW5ldyBQYXJzZXIoe2xleGVyOm5ldyBMZXhlcih0KSx4cmVmOnRoaXMsYWxsb3dTdHJlYW1zOiEwfSk7bGV0IHMscj1hLmdldE9iaigpO2lmKGlzQ21kKHIsInhyZWYiKSl7cz10aGlzLnByb2Nlc3NYUmVmVGFibGUoYSk7dGhpcy50b3BEaWN0fHwodGhpcy50b3BEaWN0PXMpO3I9cy5nZXQoIlhSZWZTdG0iKTtpZihOdW1iZXIuaXNJbnRlZ2VyKHIpJiYhdGhpcy5feHJlZlN0bXMuaGFzKHIpKXt0aGlzLl94cmVmU3Rtcy5hZGQocik7dGhpcy5zdGFydFhSZWZRdWV1ZS5wdXNoKHIpO3RoaXMuI0o/Pz1yfX1lbHNle2lmKCFOdW1iZXIuaXNJbnRlZ2VyKHIpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBYUmVmIHN0cmVhbSBoZWFkZXIiKTtpZighKE51bWJlci5pc0ludGVnZXIoYS5nZXRPYmooKSkmJmlzQ21kKGEuZ2V0T2JqKCksIm9iaiIpJiYocj1hLmdldE9iaigpKWluc3RhbmNlb2YgQmFzZVN0cmVhbSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKCJJbnZhbGlkIFhSZWYgc3RyZWFtIik7cz10aGlzLnByb2Nlc3NYUmVmU3RyZWFtKHIpO3RoaXMudG9wRGljdHx8KHRoaXMudG9wRGljdD1zKTtpZighcyl0aHJvdyBuZXcgRm9ybWF0RXJyb3IoIkZhaWxlZCB0byByZWFkIFhSZWYgc3RyZWFtIil9cj1zLmdldCgiUHJldiIpO051bWJlci5pc0ludGVnZXIocik/dGhpcy5zdGFydFhSZWZRdWV1ZS5wdXNoKHIpOnIgaW5zdGFuY2VvZiBSZWYmJnRoaXMuc3RhcnRYUmVmUXVldWUucHVzaChyLm51bSl9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGU7aW5mbygiKHdoaWxlIHJlYWRpbmcgWFJlZik6ICIrZSl9dGhpcy5zdGFydFhSZWZRdWV1ZS5zaGlmdCgpfWlmKHRoaXMudG9wRGljdClyZXR1cm4gdGhpcy50b3BEaWN0O2lmKCFlKXRocm93IG5ldyBYUmVmUGFyc2VFeGNlcHRpb259Z2V0IGxhc3RYUmVmU3RyZWFtUG9zKCl7cmV0dXJuIHRoaXMuI0o/Pyh0aGlzLl94cmVmU3Rtcy5zaXplPjA/TWF0aC5tYXgoLi4udGhpcy5feHJlZlN0bXMpOm51bGwpfWdldEVudHJ5KGUpe2NvbnN0IHQ9dGhpcy5lbnRyaWVzW2VdO3JldHVybiB0JiYhdC5mcmVlJiZ0Lm9mZnNldD90Om51bGx9ZmV0Y2hJZlJlZihlLHQ9ITEpe3JldHVybiBlIGluc3RhbmNlb2YgUmVmP3RoaXMuZmV0Y2goZSx0KTplfWZldGNoKGUsdD0hMSl7aWYoIShlIGluc3RhbmNlb2YgUmVmKSl0aHJvdyBuZXcgRXJyb3IoInJlZiBvYmplY3QgaXMgbm90IGEgcmVmZXJlbmNlIik7Y29uc3QgaT1lLm51bSxhPXRoaXMuX2NhY2hlTWFwLmdldChpKTtpZih2b2lkIDAhPT1hKXthIGluc3RhbmNlb2YgRGljdCYmIWEub2JqSWQmJihhLm9iaklkPWUudG9TdHJpbmcoKSk7cmV0dXJuIGF9bGV0IHM9dGhpcy5nZXRFbnRyeShpKTtpZihudWxsPT09cyl7dGhpcy5fY2FjaGVNYXAuc2V0KGkscyk7cmV0dXJuIHN9aWYodGhpcy5fcGVuZGluZ1JlZnMuaGFzKGUpKXt0aGlzLl9wZW5kaW5nUmVmcy5yZW1vdmUoZSk7d2FybihgSWdub3JpbmcgY2lyY3VsYXIgcmVmZXJlbmNlOiAke2V9LmApO3JldHVybiBmdH10aGlzLl9wZW5kaW5nUmVmcy5wdXQoZSk7dHJ5e3M9cy51bmNvbXByZXNzZWQ/dGhpcy5mZXRjaFVuY29tcHJlc3NlZChlLHMsdCk6dGhpcy5mZXRjaENvbXByZXNzZWQoZSxzLHQpO3RoaXMuX3BlbmRpbmdSZWZzLnJlbW92ZShlKX1jYXRjaCh0KXt0aGlzLl9wZW5kaW5nUmVmcy5yZW1vdmUoZSk7dGhyb3cgdH1zIGluc3RhbmNlb2YgRGljdD9zLm9iaklkPWUudG9TdHJpbmcoKTpzIGluc3RhbmNlb2YgQmFzZVN0cmVhbSYmKHMuZGljdC5vYmpJZD1lLnRvU3RyaW5nKCkpO3JldHVybiBzfWZldGNoVW5jb21wcmVzc2VkKGUsdCxpPSExKXtjb25zdCBhPWUuZ2VuO2xldCBzPWUubnVtO2lmKHQuZ2VuIT09YSl7Y29uc3Qgcj1gSW5jb25zaXN0ZW50IGdlbmVyYXRpb24gaW4gWFJlZjogJHtlfWA7aWYodGhpcy5fZ2VuZXJhdGlvbkZhbGxiYWNrJiZ0LmdlbjxhKXt3YXJuKHIpO3JldHVybiB0aGlzLmZldGNoVW5jb21wcmVzc2VkKFJlZi5nZXQocyx0LmdlbiksdCxpKX10aHJvdyBuZXcgWFJlZkVudHJ5RXhjZXB0aW9uKHIpfWNvbnN0IHI9dGhpcy5zdHJlYW0ubWFrZVN1YlN0cmVhbSh0Lm9mZnNldCt0aGlzLnN0cmVhbS5zdGFydCksbj1uZXcgUGFyc2VyKHtsZXhlcjpuZXcgTGV4ZXIocikseHJlZjp0aGlzLGFsbG93U3RyZWFtczohMH0pLG89bi5nZXRPYmooKSxnPW4uZ2V0T2JqKCksYz1uLmdldE9iaigpO2lmKG8hPT1zfHxnIT09YXx8IShjIGluc3RhbmNlb2YgQ21kKSl0aHJvdyBuZXcgWFJlZkVudHJ5RXhjZXB0aW9uKGBCYWQgKHVuY29tcHJlc3NlZCkgWFJlZiBlbnRyeTogJHtlfWApO2lmKCJvYmoiIT09Yy5jbWQpe2lmKGMuY21kLnN0YXJ0c1dpdGgoIm9iaiIpKXtzPXBhcnNlSW50KGMuY21kLnN1YnN0cmluZygzKSwxMCk7aWYoIU51bWJlci5pc05hTihzKSlyZXR1cm4gc310aHJvdyBuZXcgWFJlZkVudHJ5RXhjZXB0aW9uKGBCYWQgKHVuY29tcHJlc3NlZCkgWFJlZiBlbnRyeTogJHtlfWApfSh0PXRoaXMuZW5jcnlwdCYmIWk/bi5nZXRPYmoodGhpcy5lbmNyeXB0LmNyZWF0ZUNpcGhlclRyYW5zZm9ybShzLGEpKTpuLmdldE9iaigpKWluc3RhbmNlb2YgQmFzZVN0cmVhbXx8dGhpcy5fY2FjaGVNYXAuc2V0KHMsdCk7cmV0dXJuIHR9ZmV0Y2hDb21wcmVzc2VkKGUsdCxpPSExKXtjb25zdCBhPXQub2Zmc2V0LHM9dGhpcy5mZXRjaChSZWYuZ2V0KGEsMCkpO2lmKCEocyBpbnN0YW5jZW9mIEJhc2VTdHJlYW0pKXRocm93IG5ldyBGb3JtYXRFcnJvcigiYmFkIE9ialN0bSBzdHJlYW0iKTtjb25zdCByPXMuZGljdC5nZXQoIkZpcnN0Iiksbj1zLmRpY3QuZ2V0KCJOIik7aWYoIU51bWJlci5pc0ludGVnZXIocil8fCFOdW1iZXIuaXNJbnRlZ2VyKG4pKXRocm93IG5ldyBGb3JtYXRFcnJvcigiaW52YWxpZCBmaXJzdCBhbmQgbiBwYXJhbWV0ZXJzIGZvciBPYmpTdG0gc3RyZWFtIik7bGV0IG89bmV3IFBhcnNlcih7bGV4ZXI6bmV3IExleGVyKHMpLHhyZWY6dGhpcyxhbGxvd1N0cmVhbXM6ITB9KTtjb25zdCBnPW5ldyBBcnJheShuKSxjPW5ldyBBcnJheShuKTtmb3IobGV0IGU9MDtlPG47KytlKXtjb25zdCB0PW8uZ2V0T2JqKCk7aWYoIU51bWJlci5pc0ludGVnZXIodCkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBpbnZhbGlkIG9iamVjdCBudW1iZXIgaW4gdGhlIE9ialN0bSBzdHJlYW06ICR7dH1gKTtjb25zdCBpPW8uZ2V0T2JqKCk7aWYoIU51bWJlci5pc0ludGVnZXIoaSkpdGhyb3cgbmV3IEZvcm1hdEVycm9yKGBpbnZhbGlkIG9iamVjdCBvZmZzZXQgaW4gdGhlIE9ialN0bSBzdHJlYW06ICR7aX1gKTtnW2VdPXQ7Y1tlXT1pfWNvbnN0IGg9KHMuc3RhcnR8fDApK3IsbD1uZXcgQXJyYXkobik7Zm9yKGxldCBlPTA7ZTxuOysrZSl7Y29uc3QgdD1lPG4tMT9jW2UrMV0tY1tlXTp2b2lkIDA7aWYodDwwKXRocm93IG5ldyBGb3JtYXRFcnJvcigiSW52YWxpZCBvZmZzZXQgaW4gdGhlIE9ialN0bSBzdHJlYW0uIik7bz1uZXcgUGFyc2VyKHtsZXhlcjpuZXcgTGV4ZXIocy5tYWtlU3ViU3RyZWFtKGgrY1tlXSx0LHMuZGljdCkpLHhyZWY6dGhpcyxhbGxvd1N0cmVhbXM6ITB9KTtjb25zdCBpPW8uZ2V0T2JqKCk7bFtlXT1pO2lmKGkgaW5zdGFuY2VvZiBCYXNlU3RyZWFtKWNvbnRpbnVlO2NvbnN0IHI9Z1tlXSxDPXRoaXMuZW50cmllc1tyXTtDJiZDLm9mZnNldD09PWEmJkMuZ2VuPT09ZSYmdGhpcy5fY2FjaGVNYXAuc2V0KHIsaSl9aWYodm9pZCAwPT09KHQ9bFt0Lmdlbl0pKXRocm93IG5ldyBYUmVmRW50cnlFeGNlcHRpb24oYEJhZCAoY29tcHJlc3NlZCkgWFJlZiBlbnRyeTogJHtlfWApO3JldHVybiB0fWFzeW5jIGZldGNoSWZSZWZBc3luYyhlLHQpe3JldHVybiBlIGluc3RhbmNlb2YgUmVmP3RoaXMuZmV0Y2hBc3luYyhlLHQpOmV9YXN5bmMgZmV0Y2hBc3luYyhlLHQpe3RyeXtyZXR1cm4gdGhpcy5mZXRjaChlLHQpfWNhdGNoKGkpe2lmKCEoaSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKSl0aHJvdyBpO2F3YWl0IHRoaXMucGRmTWFuYWdlci5yZXF1ZXN0UmFuZ2UoaS5iZWdpbixpLmVuZCk7cmV0dXJuIHRoaXMuZmV0Y2hBc3luYyhlLHQpfX1nZXRDYXRhbG9nT2JqKCl7cmV0dXJuIHRoaXMucm9vdH19Y29uc3Qgc289WzAsMCw2MTIsNzkyXTtjbGFzcyBQYWdle2NvbnN0cnVjdG9yKHtwZGZNYW5hZ2VyOmUseHJlZjp0LHBhZ2VJbmRleDppLHBhZ2VEaWN0OmEscmVmOnMsZ2xvYmFsSWRGYWN0b3J5OnIsZm9udENhY2hlOm4sYnVpbHRJbkNNYXBDYWNoZTpvLHN0YW5kYXJkRm9udERhdGFDYWNoZTpnLGdsb2JhbEltYWdlQ2FjaGU6YyxzeXN0ZW1Gb250Q2FjaGU6aCxub25CbGVuZE1vZGVzU2V0OmwseGZhRmFjdG9yeTpDfSl7dGhpcy5wZGZNYW5hZ2VyPWU7dGhpcy5wYWdlSW5kZXg9aTt0aGlzLnBhZ2VEaWN0PWE7dGhpcy54cmVmPXQ7dGhpcy5yZWY9czt0aGlzLmZvbnRDYWNoZT1uO3RoaXMuYnVpbHRJbkNNYXBDYWNoZT1vO3RoaXMuc3RhbmRhcmRGb250RGF0YUNhY2hlPWc7dGhpcy5nbG9iYWxJbWFnZUNhY2hlPWM7dGhpcy5zeXN0ZW1Gb250Q2FjaGU9aDt0aGlzLm5vbkJsZW5kTW9kZXNTZXQ9bDt0aGlzLmV2YWx1YXRvck9wdGlvbnM9ZS5ldmFsdWF0b3JPcHRpb25zO3RoaXMucmVzb3VyY2VzUHJvbWlzZT1udWxsO3RoaXMueGZhRmFjdG9yeT1DO2NvbnN0IFE9e29iajowfTt0aGlzLl9sb2NhbElkRmFjdG9yeT1jbGFzcyBleHRlbmRzIHJ7c3RhdGljIGNyZWF0ZU9iaklkKCl7cmV0dXJuYHAke2l9XyR7KytRLm9ian1gfXN0YXRpYyBnZXRQYWdlT2JqSWQoKXtyZXR1cm5gcCR7cy50b1N0cmluZygpfWB9fX1fZ2V0SW5oZXJpdGFibGVQcm9wZXJ0eShlLHQ9ITEpe2NvbnN0IGk9Z2V0SW5oZXJpdGFibGVQcm9wZXJ0eSh7ZGljdDp0aGlzLnBhZ2VEaWN0LGtleTplLGdldEFycmF5OnQsc3RvcFdoZW5Gb3VuZDohMX0pO3JldHVybiBBcnJheS5pc0FycmF5KGkpPzEhPT1pLmxlbmd0aCYmaVswXWluc3RhbmNlb2YgRGljdD9EaWN0Lm1lcmdlKHt4cmVmOnRoaXMueHJlZixkaWN0QXJyYXk6aX0pOmlbMF06aX1nZXQgY29udGVudCgpe3JldHVybiB0aGlzLnBhZ2VEaWN0LmdldEFycmF5KCJDb250ZW50cyIpfWdldCByZXNvdXJjZXMoKXtjb25zdCBlPXRoaXMuX2dldEluaGVyaXRhYmxlUHJvcGVydHkoIlJlc291cmNlcyIpO3JldHVybiBzaGFkb3codGhpcywicmVzb3VyY2VzIixlIGluc3RhbmNlb2YgRGljdD9lOkRpY3QuZW1wdHkpfV9nZXRCb3VuZGluZ0JveChlKXtpZih0aGlzLnhmYURhdGEpcmV0dXJuIHRoaXMueGZhRGF0YS5iYm94O2NvbnN0IHQ9bG9va3VwTm9ybWFsUmVjdCh0aGlzLl9nZXRJbmhlcml0YWJsZVByb3BlcnR5KGUsITApLG51bGwpO2lmKHQpe2lmKHRbMl0tdFswXT4wJiZ0WzNdLXRbMV0+MClyZXR1cm4gdDt3YXJuKGBFbXB0eSwgb3IgaW52YWxpZCwgLyR7ZX0gZW50cnkuYCl9cmV0dXJuIG51bGx9Z2V0IG1lZGlhQm94KCl7cmV0dXJuIHNoYWRvdyh0aGlzLCJtZWRpYUJveCIsdGhpcy5fZ2V0Qm91bmRpbmdCb3goIk1lZGlhQm94Iil8fHNvKX1nZXQgY3JvcEJveCgpe3JldHVybiBzaGFkb3codGhpcywiY3JvcEJveCIsdGhpcy5fZ2V0Qm91bmRpbmdCb3goIkNyb3BCb3giKXx8dGhpcy5tZWRpYUJveCl9Z2V0IHVzZXJVbml0KCl7bGV0IGU9dGhpcy5wYWdlRGljdC5nZXQoIlVzZXJVbml0Iik7KCJudW1iZXIiIT10eXBlb2YgZXx8ZTw9MCkmJihlPTEpO3JldHVybiBzaGFkb3codGhpcywidXNlclVuaXQiLGUpfWdldCB2aWV3KCl7Y29uc3R7Y3JvcEJveDplLG1lZGlhQm94OnR9PXRoaXM7aWYoZSE9PXQmJiFpc0FycmF5RXF1YWwoZSx0KSl7Y29uc3QgaT1VdGlsLmludGVyc2VjdChlLHQpO2lmKGkmJmlbMl0taVswXT4wJiZpWzNdLWlbMV0+MClyZXR1cm4gc2hhZG93KHRoaXMsInZpZXciLGkpO3dhcm4oIkVtcHR5IC9Dcm9wQm94IGFuZCAvTWVkaWFCb3ggaW50ZXJzZWN0aW9uLiIpfXJldHVybiBzaGFkb3codGhpcywidmlldyIsdCl9Z2V0IHJvdGF0ZSgpe2xldCBlPXRoaXMuX2dldEluaGVyaXRhYmxlUHJvcGVydHkoIlJvdGF0ZSIpfHwwO2UlOTAhPTA/ZT0wOmU+PTM2MD9lJT0zNjA6ZTwwJiYoZT0oZSUzNjArMzYwKSUzNjApO3JldHVybiBzaGFkb3codGhpcywicm90YXRlIixlKX1fb25TdWJTdHJlYW1FcnJvcihlLHQpe2lmKCF0aGlzLmV2YWx1YXRvck9wdGlvbnMuaWdub3JlRXJyb3JzKXRocm93IGU7d2FybihgZ2V0Q29udGVudFN0cmVhbSAtIGlnbm9yaW5nIHN1Yi1zdHJlYW0gKCR7dH0pOiAiJHtlfSIuYCl9Z2V0Q29udGVudFN0cmVhbSgpe3JldHVybiB0aGlzLnBkZk1hbmFnZXIuZW5zdXJlKHRoaXMsImNvbnRlbnQiKS50aGVuKChlPT5lIGluc3RhbmNlb2YgQmFzZVN0cmVhbT9lOkFycmF5LmlzQXJyYXkoZSk/bmV3IFN0cmVhbXNTZXF1ZW5jZVN0cmVhbShlLHRoaXMuX29uU3ViU3RyZWFtRXJyb3IuYmluZCh0aGlzKSk6bmV3IE51bGxTdHJlYW0pKX1nZXQgeGZhRGF0YSgpe3JldHVybiBzaGFkb3codGhpcywieGZhRGF0YSIsdGhpcy54ZmFGYWN0b3J5P3tiYm94OnRoaXMueGZhRmFjdG9yeS5nZXRCb3VuZGluZ0JveCh0aGlzLnBhZ2VJbmRleCl9Om51bGwpfSNIKGUsdCxpKXtmb3IoY29uc3QgYSBvZiBlKWlmKGEuaWQpe2NvbnN0IGU9UmVmLmZyb21TdHJpbmcoYS5pZCk7aWYoIWUpe3dhcm4oYEEgbm9uLWxpbmtlZCBhbm5vdGF0aW9uIGNhbm5vdCBiZSBtb2RpZmllZDogJHthLmlkfWApO2NvbnRpbnVlfWlmKGEuZGVsZXRlZCl7dC5wdXQoZSxlKTtjb250aW51ZX1pPy5wdXQoZSk7YS5yZWY9ZTtkZWxldGUgYS5pZH19YXN5bmMgc2F2ZU5ld0Fubm90YXRpb25zKGUsdCxpLGEpe2lmKHRoaXMueGZhRmFjdG9yeSl0aHJvdyBuZXcgRXJyb3IoIlhGQTogQ2Fubm90IHNhdmUgbmV3IGFubm90YXRpb25zLiIpO2NvbnN0IHM9bmV3IFBhcnRpYWxFdmFsdWF0b3Ioe3hyZWY6dGhpcy54cmVmLGhhbmRsZXI6ZSxwYWdlSW5kZXg6dGhpcy5wYWdlSW5kZXgsaWRGYWN0b3J5OnRoaXMuX2xvY2FsSWRGYWN0b3J5LGZvbnRDYWNoZTp0aGlzLmZvbnRDYWNoZSxidWlsdEluQ01hcENhY2hlOnRoaXMuYnVpbHRJbkNNYXBDYWNoZSxzdGFuZGFyZEZvbnREYXRhQ2FjaGU6dGhpcy5zdGFuZGFyZEZvbnREYXRhQ2FjaGUsZ2xvYmFsSW1hZ2VDYWNoZTp0aGlzLmdsb2JhbEltYWdlQ2FjaGUsc3lzdGVtRm9udENhY2hlOnRoaXMuc3lzdGVtRm9udENhY2hlLG9wdGlvbnM6dGhpcy5ldmFsdWF0b3JPcHRpb25zfSkscj1uZXcgUmVmU2V0Q2FjaGUsbj1uZXcgUmVmU2V0O3RoaXMuI0goaSxyLG4pO2NvbnN0IG89dGhpcy5wYWdlRGljdCxnPXRoaXMuYW5ub3RhdGlvbnMuZmlsdGVyKChlPT4hKGUgaW5zdGFuY2VvZiBSZWYmJnIuaGFzKGUpKSkpLGM9YXdhaXQgQW5ub3RhdGlvbkZhY3Rvcnkuc2F2ZU5ld0Fubm90YXRpb25zKHMsdCxpLGEpO2Zvcihjb25zdHtyZWY6ZX1vZiBjLmFubm90YXRpb25zKWUgaW5zdGFuY2VvZiBSZWYmJiFuLmhhcyhlKSYmZy5wdXNoKGUpO2NvbnN0IGg9by5nZXQoIkFubm90cyIpO28uc2V0KCJBbm5vdHMiLGcpO2NvbnN0IGw9W107YXdhaXQgd3JpdGVPYmplY3QodGhpcy5yZWYsbyxsLHRoaXMueHJlZik7aCYmby5zZXQoIkFubm90cyIsaCk7Y29uc3QgQz1jLmRlcGVuZGVuY2llcztDLnB1c2goe3JlZjp0aGlzLnJlZixkYXRhOmwuam9pbigiIil9LC4uLmMuYW5ub3RhdGlvbnMpO2Zvcihjb25zdCBlIG9mIHIpQy5wdXNoKHtyZWY6ZSxkYXRhOm51bGx9KTtyZXR1cm4gQ31zYXZlKGUsdCxpKXtjb25zdCBhPW5ldyBQYXJ0aWFsRXZhbHVhdG9yKHt4cmVmOnRoaXMueHJlZixoYW5kbGVyOmUscGFnZUluZGV4OnRoaXMucGFnZUluZGV4LGlkRmFjdG9yeTp0aGlzLl9sb2NhbElkRmFjdG9yeSxmb250Q2FjaGU6dGhpcy5mb250Q2FjaGUsYnVpbHRJbkNNYXBDYWNoZTp0aGlzLmJ1aWx0SW5DTWFwQ2FjaGUsc3RhbmRhcmRGb250RGF0YUNhY2hlOnRoaXMuc3RhbmRhcmRGb250RGF0YUNhY2hlLGdsb2JhbEltYWdlQ2FjaGU6dGhpcy5nbG9iYWxJbWFnZUNhY2hlLHN5c3RlbUZvbnRDYWNoZTp0aGlzLnN5c3RlbUZvbnRDYWNoZSxvcHRpb25zOnRoaXMuZXZhbHVhdG9yT3B0aW9uc30pO3JldHVybiB0aGlzLl9wYXJzZWRBbm5vdGF0aW9ucy50aGVuKChmdW5jdGlvbihlKXtjb25zdCBzPVtdO2Zvcihjb25zdCByIG9mIGUpci5tdXN0QmVQcmludGVkKGkpJiZzLnB1c2goci5zYXZlKGEsdCxpKS5jYXRjaCgoZnVuY3Rpb24oZSl7d2Fybihgc2F2ZSAtIGlnbm9yaW5nIGFubm90YXRpb24gZGF0YSBkdXJpbmcgIiR7dC5uYW1lfSIgdGFzazogIiR7ZX0iLmApO3JldHVybiBudWxsfSkpKTtyZXR1cm4gUHJvbWlzZS5hbGwocykudGhlbigoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZmlsdGVyKChlPT4hIWUpKX0pKX0pKX1sb2FkUmVzb3VyY2VzKGUpe3RoaXMucmVzb3VyY2VzUHJvbWlzZXx8PXRoaXMucGRmTWFuYWdlci5lbnN1cmUodGhpcywicmVzb3VyY2VzIik7cmV0dXJuIHRoaXMucmVzb3VyY2VzUHJvbWlzZS50aGVuKCgoKT0+bmV3IE9iamVjdExvYWRlcih0aGlzLnJlc291cmNlcyxlLHRoaXMueHJlZikubG9hZCgpKSl9Z2V0T3BlcmF0b3JMaXN0KHtoYW5kbGVyOmUsc2luazp0LHRhc2s6aSxpbnRlbnQ6YSxjYWNoZUtleTpzLGFubm90YXRpb25TdG9yYWdlOnI9bnVsbH0pe2NvbnN0IG49dGhpcy5nZXRDb250ZW50U3RyZWFtKCksaD10aGlzLmxvYWRSZXNvdXJjZXMoWyJDb2xvclNwYWNlIiwiRXh0R1N0YXRlIiwiRm9udCIsIlBhdHRlcm4iLCJQcm9wZXJ0aWVzIiwiU2hhZGluZyIsIlhPYmplY3QiXSksUT1uZXcgUGFydGlhbEV2YWx1YXRvcih7eHJlZjp0aGlzLnhyZWYsaGFuZGxlcjplLHBhZ2VJbmRleDp0aGlzLnBhZ2VJbmRleCxpZEZhY3Rvcnk6dGhpcy5fbG9jYWxJZEZhY3RvcnksZm9udENhY2hlOnRoaXMuZm9udENhY2hlLGJ1aWx0SW5DTWFwQ2FjaGU6dGhpcy5idWlsdEluQ01hcENhY2hlLHN0YW5kYXJkRm9udERhdGFDYWNoZTp0aGlzLnN0YW5kYXJkRm9udERhdGFDYWNoZSxnbG9iYWxJbWFnZUNhY2hlOnRoaXMuZ2xvYmFsSW1hZ2VDYWNoZSxzeXN0ZW1Gb250Q2FjaGU6dGhpcy5zeXN0ZW1Gb250Q2FjaGUsb3B0aW9uczp0aGlzLmV2YWx1YXRvck9wdGlvbnN9KSx1PXRoaXMueGZhRmFjdG9yeT9udWxsOmdldE5ld0Fubm90YXRpb25zTWFwKHIpO2xldCBkPW51bGwsZj1Qcm9taXNlLnJlc29sdmUobnVsbCk7aWYodSl7Y29uc3QgZT11LmdldCh0aGlzLnBhZ2VJbmRleCk7aWYoZSl7Y29uc3QgdD10aGlzLnBkZk1hbmFnZXIuZW5zdXJlRG9jKCJhbm5vdGF0aW9uR2xvYmFscyIpO2xldCBhO2NvbnN0IHM9bmV3IFNldDtmb3IoY29uc3R7Yml0bWFwSWQ6dCxiaXRtYXA6aX1vZiBlKSF0fHxpfHxzLmhhcyh0KXx8cy5hZGQodCk7Y29uc3R7aXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQ6bn09dGhpcy5ldmFsdWF0b3JPcHRpb25zO2lmKHMuc2l6ZT4wKXtjb25zdCB0PWUuc2xpY2UoKTtmb3IoY29uc3RbZSxpXW9mIHIpZS5zdGFydHNXaXRoKEUpJiZpLmJpdG1hcCYmcy5oYXMoaS5iaXRtYXBJZCkmJnQucHVzaChpKTthPUFubm90YXRpb25GYWN0b3J5LmdlbmVyYXRlSW1hZ2VzKHQsdGhpcy54cmVmLG4pfWVsc2UgYT1Bbm5vdGF0aW9uRmFjdG9yeS5nZW5lcmF0ZUltYWdlcyhlLHRoaXMueHJlZixuKTtkPW5ldyBSZWZTZXQ7dGhpcy4jSChlLGQsbnVsbCk7Zj10LnRoZW4oKHQ9PnQ/QW5ub3RhdGlvbkZhY3RvcnkucHJpbnROZXdBbm5vdGF0aW9ucyh0LFEsaSxlLGEpOm51bGwpKX19Y29uc3QgcD1Qcm9taXNlLmFsbChbbixoXSkudGhlbigoKFtyXSk9Pntjb25zdCBuPW5ldyBPcGVyYXRvckxpc3QoYSx0KTtlLnNlbmQoIlN0YXJ0UmVuZGVyUGFnZSIse3RyYW5zcGFyZW5jeTpRLmhhc0JsZW5kTW9kZXModGhpcy5yZXNvdXJjZXMsdGhpcy5ub25CbGVuZE1vZGVzU2V0KSxwYWdlSW5kZXg6dGhpcy5wYWdlSW5kZXgsY2FjaGVLZXk6c30pO3JldHVybiBRLmdldE9wZXJhdG9yTGlzdCh7c3RyZWFtOnIsdGFzazppLHJlc291cmNlczp0aGlzLnJlc291cmNlcyxvcGVyYXRvckxpc3Q6bn0pLnRoZW4oKGZ1bmN0aW9uKCl7cmV0dXJuIG59KSl9KSk7cmV0dXJuIFByb21pc2UuYWxsKFtwLHRoaXMuX3BhcnNlZEFubm90YXRpb25zLGZdKS50aGVuKChmdW5jdGlvbihbZSx0LHNdKXtpZihzKXt0PXQuZmlsdGVyKChlPT4hKGUucmVmJiZkLmhhcyhlLnJlZikpKSk7Zm9yKGxldCBlPTAsaT1zLmxlbmd0aDtlPGk7ZSsrKXtjb25zdCBhPXNbZV07aWYoYS5yZWZUb1JlcGxhY2Upe2NvbnN0IHI9dC5maW5kSW5kZXgoKGU9PmUucmVmJiZpc1JlZnNFcXVhbChlLnJlZixhLnJlZlRvUmVwbGFjZSkpKTtpZihyPj0wKXt0LnNwbGljZShyLDEsYSk7cy5zcGxpY2UoZS0tLDEpO2ktLX19fXQ9dC5jb25jYXQocyl9aWYoMD09PXQubGVuZ3RofHxhJkMpe2UuZmx1c2goITApO3JldHVybntsZW5ndGg6ZS50b3RhbExlbmd0aH19Y29uc3Qgbj0hIShhJmwpLGg9ISEoYSZvKSxFPSEhKGEmZyksdT0hIShhJmMpLGY9W107Zm9yKGNvbnN0IGUgb2YgdCkoaHx8RSYmZS5tdXN0QmVWaWV3ZWQocixuKXx8dSYmZS5tdXN0QmVQcmludGVkKHIpKSYmZi5wdXNoKGUuZ2V0T3BlcmF0b3JMaXN0KFEsaSxhLG4scikuY2F0Y2goKGZ1bmN0aW9uKGUpe3dhcm4oYGdldE9wZXJhdG9yTGlzdCAtIGlnbm9yaW5nIGFubm90YXRpb24gZGF0YSBkdXJpbmcgIiR7aS5uYW1lfSIgdGFzazogIiR7ZX0iLmApO3JldHVybntvcExpc3Q6bnVsbCxzZXBhcmF0ZUZvcm06ITEsc2VwYXJhdGVDYW52YXM6ITF9fSkpKTtyZXR1cm4gUHJvbWlzZS5hbGwoZikudGhlbigoZnVuY3Rpb24odCl7bGV0IGk9ITEsYT0hMTtmb3IoY29uc3R7b3BMaXN0OnMsc2VwYXJhdGVGb3JtOnIsc2VwYXJhdGVDYW52YXM6bn1vZiB0KXtlLmFkZE9wTGlzdChzKTtpfHw9cjthfHw9bn1lLmZsdXNoKCEwLHtmb3JtOmksY2FudmFzOmF9KTtyZXR1cm57bGVuZ3RoOmUudG90YWxMZW5ndGh9fSkpfSkpfWFzeW5jIGV4dHJhY3RUZXh0Q29udGVudCh7aGFuZGxlcjplLHRhc2s6dCxpbmNsdWRlTWFya2VkQ29udGVudDppLGRpc2FibGVOb3JtYWxpemF0aW9uOmEsc2luazpzfSl7Y29uc3Qgcj10aGlzLmdldENvbnRlbnRTdHJlYW0oKSxuPXRoaXMubG9hZFJlc291cmNlcyhbIkV4dEdTdGF0ZSIsIkZvbnQiLCJQcm9wZXJ0aWVzIiwiWE9iamVjdCJdKSxvPXRoaXMucGRmTWFuYWdlci5lbnN1cmVDYXRhbG9nKCJsYW5nIiksW2csLGNdPWF3YWl0IFByb21pc2UuYWxsKFtyLG4sb10pO3JldHVybiBuZXcgUGFydGlhbEV2YWx1YXRvcih7eHJlZjp0aGlzLnhyZWYsaGFuZGxlcjplLHBhZ2VJbmRleDp0aGlzLnBhZ2VJbmRleCxpZEZhY3Rvcnk6dGhpcy5fbG9jYWxJZEZhY3RvcnksZm9udENhY2hlOnRoaXMuZm9udENhY2hlLGJ1aWx0SW5DTWFwQ2FjaGU6dGhpcy5idWlsdEluQ01hcENhY2hlLHN0YW5kYXJkRm9udERhdGFDYWNoZTp0aGlzLnN0YW5kYXJkRm9udERhdGFDYWNoZSxnbG9iYWxJbWFnZUNhY2hlOnRoaXMuZ2xvYmFsSW1hZ2VDYWNoZSxzeXN0ZW1Gb250Q2FjaGU6dGhpcy5zeXN0ZW1Gb250Q2FjaGUsb3B0aW9uczp0aGlzLmV2YWx1YXRvck9wdGlvbnN9KS5nZXRUZXh0Q29udGVudCh7c3RyZWFtOmcsdGFzazp0LHJlc291cmNlczp0aGlzLnJlc291cmNlcyxpbmNsdWRlTWFya2VkQ29udGVudDppLGRpc2FibGVOb3JtYWxpemF0aW9uOmEsc2luazpzLHZpZXdCb3g6dGhpcy52aWV3LGxhbmc6Y30pfWFzeW5jIGdldFN0cnVjdFRyZWUoKXtjb25zdCBlPWF3YWl0IHRoaXMucGRmTWFuYWdlci5lbnN1cmVDYXRhbG9nKCJzdHJ1Y3RUcmVlUm9vdCIpO2lmKCFlKXJldHVybiBudWxsO2F3YWl0IHRoaXMuX3BhcnNlZEFubm90YXRpb25zO3JldHVybihhd2FpdCB0aGlzLnBkZk1hbmFnZXIuZW5zdXJlKHRoaXMsIl9wYXJzZVN0cnVjdFRyZWUiLFtlXSkpLnNlcmlhbGl6YWJsZX1fcGFyc2VTdHJ1Y3RUcmVlKGUpe2NvbnN0IHQ9bmV3IFN0cnVjdFRyZWVQYWdlKGUsdGhpcy5wYWdlRGljdCk7dC5wYXJzZSh0aGlzLnJlZik7cmV0dXJuIHR9YXN5bmMgZ2V0QW5ub3RhdGlvbnNEYXRhKGUsdCxpKXtjb25zdCBhPWF3YWl0IHRoaXMuX3BhcnNlZEFubm90YXRpb25zO2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gYTtjb25zdCBzPVtdLHI9W107bGV0IG47Y29uc3QgaD0hIShpJm8pLGw9ISEoaSZnKSxDPSEhKGkmYyk7Zm9yKGNvbnN0IGkgb2YgYSl7Y29uc3QgYT1ofHxsJiZpLnZpZXdhYmxlOyhhfHxDJiZpLnByaW50YWJsZSkmJnMucHVzaChpLmRhdGEpO2lmKGkuaGFzVGV4dENvbnRlbnQmJmEpe258fD1uZXcgUGFydGlhbEV2YWx1YXRvcih7eHJlZjp0aGlzLnhyZWYsaGFuZGxlcjplLHBhZ2VJbmRleDp0aGlzLnBhZ2VJbmRleCxpZEZhY3Rvcnk6dGhpcy5fbG9jYWxJZEZhY3RvcnksZm9udENhY2hlOnRoaXMuZm9udENhY2hlLGJ1aWx0SW5DTWFwQ2FjaGU6dGhpcy5idWlsdEluQ01hcENhY2hlLHN0YW5kYXJkRm9udERhdGFDYWNoZTp0aGlzLnN0YW5kYXJkRm9udERhdGFDYWNoZSxnbG9iYWxJbWFnZUNhY2hlOnRoaXMuZ2xvYmFsSW1hZ2VDYWNoZSxzeXN0ZW1Gb250Q2FjaGU6dGhpcy5zeXN0ZW1Gb250Q2FjaGUsb3B0aW9uczp0aGlzLmV2YWx1YXRvck9wdGlvbnN9KTtyLnB1c2goaS5leHRyYWN0VGV4dENvbnRlbnQobix0LFstMS8wLC0xLzAsMS8wLDEvMF0pLmNhdGNoKChmdW5jdGlvbihlKXt3YXJuKGBnZXRBbm5vdGF0aW9uc0RhdGEgLSBpZ25vcmluZyB0ZXh0Q29udGVudCBkdXJpbmcgIiR7dC5uYW1lfSIgdGFzazogIiR7ZX0iLmApfSkpKX19YXdhaXQgUHJvbWlzZS5hbGwocik7cmV0dXJuIHN9Z2V0IGFubm90YXRpb25zKCl7Y29uc3QgZT10aGlzLl9nZXRJbmhlcml0YWJsZVByb3BlcnR5KCJBbm5vdHMiKTtyZXR1cm4gc2hhZG93KHRoaXMsImFubm90YXRpb25zIixBcnJheS5pc0FycmF5KGUpP2U6W10pfWdldCBfcGFyc2VkQW5ub3RhdGlvbnMoKXtyZXR1cm4gc2hhZG93KHRoaXMsIl9wYXJzZWRBbm5vdGF0aW9ucyIsdGhpcy5wZGZNYW5hZ2VyLmVuc3VyZSh0aGlzLCJhbm5vdGF0aW9ucyIpLnRoZW4oKGFzeW5jIGU9PntpZigwPT09ZS5sZW5ndGgpcmV0dXJuIGU7Y29uc3QgdD1hd2FpdCB0aGlzLnBkZk1hbmFnZXIuZW5zdXJlRG9jKCJhbm5vdGF0aW9uR2xvYmFscyIpO2lmKCF0KXJldHVybltdO2NvbnN0IGk9W107Zm9yKGNvbnN0IGEgb2YgZSlpLnB1c2goQW5ub3RhdGlvbkZhY3RvcnkuY3JlYXRlKHRoaXMueHJlZixhLHQsdGhpcy5fbG9jYWxJZEZhY3RvcnksITEsdGhpcy5yZWYpLmNhdGNoKChmdW5jdGlvbihlKXt3YXJuKGBfcGFyc2VkQW5ub3RhdGlvbnM6ICIke2V9Ii5gKTtyZXR1cm4gbnVsbH0pKSk7Y29uc3QgYT1bXTtsZXQgcyxyO2Zvcihjb25zdCBlIG9mIGF3YWl0IFByb21pc2UuYWxsKGkpKWUmJihlIGluc3RhbmNlb2YgV2lkZ2V0QW5ub3RhdGlvbj8ocnx8PVtdKS5wdXNoKGUpOmUgaW5zdGFuY2VvZiBQb3B1cEFubm90YXRpb24/KHN8fD1bXSkucHVzaChlKTphLnB1c2goZSkpO3ImJmEucHVzaCguLi5yKTtzJiZhLnB1c2goLi4ucyk7cmV0dXJuIGF9KSkpfWdldCBqc0FjdGlvbnMoKXtyZXR1cm4gc2hhZG93KHRoaXMsImpzQWN0aW9ucyIsY29sbGVjdEFjdGlvbnModGhpcy54cmVmLHRoaXMucGFnZURpY3QsZkEpKX19Y29uc3Qgcm89bmV3IFVpbnQ4QXJyYXkoWzM3LDgwLDY4LDcwLDQ1XSksbm89bmV3IFVpbnQ4QXJyYXkoWzExNSwxMTYsOTcsMTE0LDExNiwxMjAsMTE0LDEwMSwxMDJdKSxvbz1uZXcgVWludDhBcnJheShbMTAxLDExMCwxMDAsMTExLDk4LDEwNl0pO2Z1bmN0aW9uIGZpbmQoZSx0LGk9MTAyNCxhPSExKXtjb25zdCBzPXQubGVuZ3RoLHI9ZS5wZWVrQnl0ZXMoaSksbj1yLmxlbmd0aC1zO2lmKG48PTApcmV0dXJuITE7aWYoYSl7Y29uc3QgaT1zLTE7bGV0IGE9ci5sZW5ndGgtMTtmb3IoO2E+PWk7KXtsZXQgbj0wO2Zvcig7bjxzJiZyW2Etbl09PT10W2ktbl07KW4rKztpZihuPj1zKXtlLnBvcys9YS1pO3JldHVybiEwfWEtLX19ZWxzZXtsZXQgaT0wO2Zvcig7aTw9bjspe2xldCBhPTA7Zm9yKDthPHMmJnJbaSthXT09PXRbYV07KWErKztpZihhPj1zKXtlLnBvcys9aTtyZXR1cm4hMH1pKyt9fXJldHVybiExfWNsYXNzIFBERkRvY3VtZW50e2NvbnN0cnVjdG9yKGUsdCl7aWYodC5sZW5ndGg8PTApdGhyb3cgbmV3IEludmFsaWRQREZFeGNlcHRpb24oIlRoZSBQREYgZmlsZSBpcyBlbXB0eSwgaS5lLiBpdHMgc2l6ZSBpcyB6ZXJvIGJ5dGVzLiIpO3RoaXMucGRmTWFuYWdlcj1lO3RoaXMuc3RyZWFtPXQ7dGhpcy54cmVmPW5ldyBYUmVmKHQsZSk7dGhpcy5fcGFnZVByb21pc2VzPW5ldyBNYXA7dGhpcy5fdmVyc2lvbj1udWxsO2NvbnN0IGk9e2ZvbnQ6MH07dGhpcy5fZ2xvYmFsSWRGYWN0b3J5PWNsYXNze3N0YXRpYyBnZXREb2NJZCgpe3JldHVybmBnXyR7ZS5kb2NJZH1gfXN0YXRpYyBjcmVhdGVGb250SWQoKXtyZXR1cm4iZiIrICsraS5mb250fXN0YXRpYyBjcmVhdGVPYmpJZCgpe3VucmVhY2hhYmxlKCJBYnN0cmFjdCBtZXRob2QgYGNyZWF0ZU9iaklkYCBjYWxsZWQuIil9c3RhdGljIGdldFBhZ2VPYmpJZCgpe3VucmVhY2hhYmxlKCJBYnN0cmFjdCBtZXRob2QgYGdldFBhZ2VPYmpJZGAgY2FsbGVkLiIpfX19cGFyc2UoZSl7dGhpcy54cmVmLnBhcnNlKGUpO3RoaXMuY2F0YWxvZz1uZXcgQ2F0YWxvZyh0aGlzLnBkZk1hbmFnZXIsdGhpcy54cmVmKX1nZXQgbGluZWFyaXphdGlvbigpe2xldCBlPW51bGw7dHJ5e2U9TGluZWFyaXphdGlvbi5jcmVhdGUodGhpcy5zdHJlYW0pfWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiBNaXNzaW5nRGF0YUV4Y2VwdGlvbil0aHJvdyBlO2luZm8oZSl9cmV0dXJuIHNoYWRvdyh0aGlzLCJsaW5lYXJpemF0aW9uIixlKX1nZXQgc3RhcnRYUmVmKCl7Y29uc3QgZT10aGlzLnN0cmVhbTtsZXQgdD0wO2lmKHRoaXMubGluZWFyaXphdGlvbil7ZS5yZXNldCgpO2lmKGZpbmQoZSxvbykpe2Uuc2tpcCg2KTtsZXQgaT1lLnBlZWtCeXRlKCk7Zm9yKDtpc1doaXRlU3BhY2UoaSk7KXtlLnBvcysrO2k9ZS5wZWVrQnl0ZSgpfXQ9ZS5wb3MtZS5zdGFydH19ZWxzZXtjb25zdCBpPTEwMjQsYT1uby5sZW5ndGg7bGV0IHM9ITEscj1lLmVuZDtmb3IoOyFzJiZyPjA7KXtyLT1pLWE7cjwwJiYocj0wKTtlLnBvcz1yO3M9ZmluZChlLG5vLGksITApfWlmKHMpe2Uuc2tpcCg5KTtsZXQgaTtkb3tpPWUuZ2V0Qnl0ZSgpfXdoaWxlKGlzV2hpdGVTcGFjZShpKSk7bGV0IGE9IiI7Zm9yKDtpPj0zMiYmaTw9NTc7KXthKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGkpO2k9ZS5nZXRCeXRlKCl9dD1wYXJzZUludChhLDEwKTtpc05hTih0KSYmKHQ9MCl9fXJldHVybiBzaGFkb3codGhpcywic3RhcnRYUmVmIix0KX1jaGVja0hlYWRlcigpe2NvbnN0IGU9dGhpcy5zdHJlYW07ZS5yZXNldCgpO2lmKCFmaW5kKGUscm8pKXJldHVybjtlLm1vdmVTdGFydCgpO2Uuc2tpcChyby5sZW5ndGgpO2xldCB0LGk9IiI7Zm9yKDsodD1lLmdldEJ5dGUoKSk+MzImJmkubGVuZ3RoPDc7KWkrPVN0cmluZy5mcm9tQ2hhckNvZGUodCk7RHQudGVzdChpKT90aGlzLl92ZXJzaW9uPWk6d2FybihgSW52YWxpZCBQREYgaGVhZGVyIHZlcnNpb246ICR7aX1gKX1wYXJzZVN0YXJ0WFJlZigpe3RoaXMueHJlZi5zZXRTdGFydFhSZWYodGhpcy5zdGFydFhSZWYpfWdldCBudW1QYWdlcygpe2xldCBlPTA7ZT10aGlzLmNhdGFsb2cuaGFzQWN0dWFsTnVtUGFnZXM/dGhpcy5jYXRhbG9nLm51bVBhZ2VzOnRoaXMueGZhRmFjdG9yeT90aGlzLnhmYUZhY3RvcnkuZ2V0TnVtUGFnZXMoKTp0aGlzLmxpbmVhcml6YXRpb24/dGhpcy5saW5lYXJpemF0aW9uLm51bVBhZ2VzOnRoaXMuY2F0YWxvZy5udW1QYWdlcztyZXR1cm4gc2hhZG93KHRoaXMsIm51bVBhZ2VzIixlKX1faGFzT25seURvY3VtZW50U2lnbmF0dXJlcyhlLHQ9MCl7cmV0dXJuISFBcnJheS5pc0FycmF5KGUpJiZlLmV2ZXJ5KChlPT57aWYoISgoZT10aGlzLnhyZWYuZmV0Y2hJZlJlZihlKSlpbnN0YW5jZW9mIERpY3QpKXJldHVybiExO2lmKGUuaGFzKCJLaWRzIikpe2lmKCsrdD4xMCl7d2FybigiX2hhc09ubHlEb2N1bWVudFNpZ25hdHVyZXM6IG1heGltdW0gcmVjdXJzaW9uIGRlcHRoIHJlYWNoZWQiKTtyZXR1cm4hMX1yZXR1cm4gdGhpcy5faGFzT25seURvY3VtZW50U2lnbmF0dXJlcyhlLmdldCgiS2lkcyIpLHQpfWNvbnN0IGk9aXNOYW1lKGUuZ2V0KCJGVCIpLCJTaWciKSxhPWUuZ2V0KCJSZWN0Iikscz1BcnJheS5pc0FycmF5KGEpJiZhLmV2ZXJ5KChlPT4wPT09ZSkpO3JldHVybiBpJiZzfSkpfWdldCBfeGZhU3RyZWFtcygpe2NvbnN0IGU9dGhpcy5jYXRhbG9nLmFjcm9Gb3JtO2lmKCFlKXJldHVybiBudWxsO2NvbnN0IHQ9ZS5nZXQoIlhGQSIpLGk9eyJ4ZHA6eGRwIjoiIix0ZW1wbGF0ZToiIixkYXRhc2V0czoiIixjb25maWc6IiIsY29ubmVjdGlvblNldDoiIixsb2NhbGVTZXQ6IiIsc3R5bGVzaGVldDoiIiwiL3hkcDp4ZHAiOiIifTtpZih0IGluc3RhbmNlb2YgQmFzZVN0cmVhbSYmIXQuaXNFbXB0eSl7aVsieGRwOnhkcCJdPXQ7cmV0dXJuIGl9aWYoIUFycmF5LmlzQXJyYXkodCl8fDA9PT10Lmxlbmd0aClyZXR1cm4gbnVsbDtmb3IobGV0IGU9MCxhPXQubGVuZ3RoO2U8YTtlKz0yKXtsZXQgcztzPTA9PT1lPyJ4ZHA6eGRwIjplPT09YS0yPyIveGRwOnhkcCI6dFtlXTtpZighaS5oYXNPd25Qcm9wZXJ0eShzKSljb250aW51ZTtjb25zdCByPXRoaXMueHJlZi5mZXRjaElmUmVmKHRbZSsxXSk7ciBpbnN0YW5jZW9mIEJhc2VTdHJlYW0mJiFyLmlzRW1wdHkmJihpW3NdPXIpfXJldHVybiBpfWdldCB4ZmFEYXRhc2V0cygpe2NvbnN0IGU9dGhpcy5feGZhU3RyZWFtcztpZighZSlyZXR1cm4gc2hhZG93KHRoaXMsInhmYURhdGFzZXRzIixudWxsKTtmb3IoY29uc3QgdCBvZlsiZGF0YXNldHMiLCJ4ZHA6eGRwIl0pe2NvbnN0IGk9ZVt0XTtpZihpKXRyeXtjb25zdCBlPXN0cmluZ1RvVVRGOFN0cmluZyhpLmdldFN0cmluZygpKTtyZXR1cm4gc2hhZG93KHRoaXMsInhmYURhdGFzZXRzIixuZXcgRGF0YXNldFJlYWRlcih7W3RdOmV9KSl9Y2F0Y2h7d2FybigiWEZBIC0gSW52YWxpZCB1dGYtOCBzdHJpbmcuIik7YnJlYWt9fXJldHVybiBzaGFkb3codGhpcywieGZhRGF0YXNldHMiLG51bGwpfWdldCB4ZmFEYXRhKCl7Y29uc3QgZT10aGlzLl94ZmFTdHJlYW1zO2lmKCFlKXJldHVybiBudWxsO2NvbnN0IHQ9T2JqZWN0LmNyZWF0ZShudWxsKTtmb3IoY29uc3RbaSxhXW9mIE9iamVjdC5lbnRyaWVzKGUpKWlmKGEpdHJ5e3RbaV09c3RyaW5nVG9VVEY4U3RyaW5nKGEuZ2V0U3RyaW5nKCkpfWNhdGNoe3dhcm4oIlhGQSAtIEludmFsaWQgdXRmLTggc3RyaW5nLiIpO3JldHVybiBudWxsfXJldHVybiB0fWdldCB4ZmFGYWN0b3J5KCl7bGV0IGU7dGhpcy5wZGZNYW5hZ2VyLmVuYWJsZVhmYSYmdGhpcy5jYXRhbG9nLm5lZWRzUmVuZGVyaW5nJiZ0aGlzLmZvcm1JbmZvLmhhc1hmYSYmIXRoaXMuZm9ybUluZm8uaGFzQWNyb0Zvcm0mJihlPXRoaXMueGZhRGF0YSk7cmV0dXJuIHNoYWRvdyh0aGlzLCJ4ZmFGYWN0b3J5IixlP25ldyBYRkFGYWN0b3J5KGUpOm51bGwpfWdldCBpc1B1cmVYZmEoKXtyZXR1cm4hIXRoaXMueGZhRmFjdG9yeSYmdGhpcy54ZmFGYWN0b3J5LmlzVmFsaWQoKX1nZXQgaHRtbEZvclhmYSgpe3JldHVybiB0aGlzLnhmYUZhY3Rvcnk/dGhpcy54ZmFGYWN0b3J5LmdldFBhZ2VzKCk6bnVsbH1hc3luYyBsb2FkWGZhSW1hZ2VzKCl7Y29uc3QgZT1hd2FpdCB0aGlzLnBkZk1hbmFnZXIuZW5zdXJlQ2F0YWxvZygieGZhSW1hZ2VzIik7aWYoIWUpcmV0dXJuO2NvbnN0IHQ9ZS5nZXRLZXlzKCksaT1uZXcgT2JqZWN0TG9hZGVyKGUsdCx0aGlzLnhyZWYpO2F3YWl0IGkubG9hZCgpO2NvbnN0IGE9bmV3IE1hcDtmb3IoY29uc3QgaSBvZiB0KXtjb25zdCB0PWUuZ2V0KGkpO3QgaW5zdGFuY2VvZiBCYXNlU3RyZWFtJiZhLnNldChpLHQuZ2V0Qnl0ZXMoKSl9dGhpcy54ZmFGYWN0b3J5LnNldEltYWdlcyhhKX1hc3luYyBsb2FkWGZhRm9udHMoZSx0KXtjb25zdCBpPWF3YWl0IHRoaXMucGRmTWFuYWdlci5lbnN1cmVDYXRhbG9nKCJhY3JvRm9ybSIpO2lmKCFpKXJldHVybjtjb25zdCBhPWF3YWl0IGkuZ2V0QXN5bmMoIkRSIik7aWYoIShhIGluc3RhbmNlb2YgRGljdCkpcmV0dXJuO2NvbnN0IHM9bmV3IE9iamVjdExvYWRlcihhLFsiRm9udCJdLHRoaXMueHJlZik7YXdhaXQgcy5sb2FkKCk7Y29uc3Qgcj1hLmdldCgiRm9udCIpO2lmKCEociBpbnN0YW5jZW9mIERpY3QpKXJldHVybjtjb25zdCBuPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLnBkZk1hbmFnZXIuZXZhbHVhdG9yT3B0aW9ucyk7bi51c2VTeXN0ZW1Gb250cz0hMTtjb25zdCBvPW5ldyBQYXJ0aWFsRXZhbHVhdG9yKHt4cmVmOnRoaXMueHJlZixoYW5kbGVyOmUscGFnZUluZGV4Oi0xLGlkRmFjdG9yeTp0aGlzLl9nbG9iYWxJZEZhY3RvcnksZm9udENhY2hlOnRoaXMuY2F0YWxvZy5mb250Q2FjaGUsYnVpbHRJbkNNYXBDYWNoZTp0aGlzLmNhdGFsb2cuYnVpbHRJbkNNYXBDYWNoZSxzdGFuZGFyZEZvbnREYXRhQ2FjaGU6dGhpcy5jYXRhbG9nLnN0YW5kYXJkRm9udERhdGFDYWNoZSxvcHRpb25zOm59KSxnPW5ldyBPcGVyYXRvckxpc3QsYz1bXSxoPXtnZXQgZm9udCgpe3JldHVybiBjLmF0KC0xKX0sc2V0IGZvbnQoZSl7Yy5wdXNoKGUpfSxjbG9uZSgpe3JldHVybiB0aGlzfX0sbD1uZXcgTWFwO3IuZm9yRWFjaCgoKGUsdCk9PntsLnNldChlLHQpfSkpO2NvbnN0IEM9W107Zm9yKGNvbnN0W2UsaV1vZiBsKXtjb25zdCBzPWkuZ2V0KCJGb250RGVzY3JpcHRvciIpO2lmKCEocyBpbnN0YW5jZW9mIERpY3QpKWNvbnRpbnVlO2xldCByPXMuZ2V0KCJGb250RmFtaWx5Iik7cj1yLnJlcGxhY2VBbGwoL1sgXSsoXGQpL2csIiQxIik7Y29uc3Qgbj17Zm9udEZhbWlseTpyLGZvbnRXZWlnaHQ6cy5nZXQoIkZvbnRXZWlnaHQiKSxpdGFsaWNBbmdsZTotcy5nZXQoIkl0YWxpY0FuZ2xlIil9O3ZhbGlkYXRlQ1NTRm9udChuKSYmQy5wdXNoKG8uaGFuZGxlU2V0Rm9udChhLFtOYW1lLmdldChlKSwxXSxudWxsLGcsdCxoLG51bGwsbikuY2F0Y2goKGZ1bmN0aW9uKGUpe3dhcm4oYGxvYWRYZmFGb250czogIiR7ZX0iLmApO3JldHVybiBudWxsfSkpKX1hd2FpdCBQcm9taXNlLmFsbChDKTtjb25zdCBRPXRoaXMueGZhRmFjdG9yeS5zZXRGb250cyhjKTtpZighUSlyZXR1cm47bi5pZ25vcmVFcnJvcnM9ITA7Qy5sZW5ndGg9MDtjLmxlbmd0aD0wO2NvbnN0IEU9bmV3IFNldDtmb3IoY29uc3QgZSBvZiBRKWdldFhmYUZvbnROYW1lKGAke2V9LVJlZ3VsYXJgKXx8RS5hZGQoZSk7RS5zaXplJiZRLnB1c2goIlBkZkpTLUZhbGxiYWNrIik7Zm9yKGNvbnN0IGUgb2YgUSlpZighRS5oYXMoZSkpZm9yKGNvbnN0IGkgb2Zbe25hbWU6IlJlZ3VsYXIiLGZvbnRXZWlnaHQ6NDAwLGl0YWxpY0FuZ2xlOjB9LHtuYW1lOiJCb2xkIixmb250V2VpZ2h0OjcwMCxpdGFsaWNBbmdsZTowfSx7bmFtZToiSXRhbGljIixmb250V2VpZ2h0OjQwMCxpdGFsaWNBbmdsZToxMn0se25hbWU6IkJvbGRJdGFsaWMiLGZvbnRXZWlnaHQ6NzAwLGl0YWxpY0FuZ2xlOjEyfV0pe2NvbnN0IHM9YCR7ZX0tJHtpLm5hbWV9YCxyPWdldFhmYUZvbnREaWN0KHMpO0MucHVzaChvLmhhbmRsZVNldEZvbnQoYSxbTmFtZS5nZXQocyksMV0sbnVsbCxnLHQsaCxyLHtmb250RmFtaWx5OmUsZm9udFdlaWdodDppLmZvbnRXZWlnaHQsaXRhbGljQW5nbGU6aS5pdGFsaWNBbmdsZX0pLmNhdGNoKChmdW5jdGlvbihlKXt3YXJuKGBsb2FkWGZhRm9udHM6ICIke2V9Ii5gKTtyZXR1cm4gbnVsbH0pKSl9YXdhaXQgUHJvbWlzZS5hbGwoQyk7dGhpcy54ZmFGYWN0b3J5LmFwcGVuZEZvbnRzKGMsRSl9YXN5bmMgc2VyaWFsaXplWGZhRGF0YShlKXtyZXR1cm4gdGhpcy54ZmFGYWN0b3J5P3RoaXMueGZhRmFjdG9yeS5zZXJpYWxpemVEYXRhKGUpOm51bGx9Z2V0IHZlcnNpb24oKXtyZXR1cm4gdGhpcy5jYXRhbG9nLnZlcnNpb258fHRoaXMuX3ZlcnNpb259Z2V0IGZvcm1JbmZvKCl7Y29uc3QgZT17aGFzRmllbGRzOiExLGhhc0Fjcm9Gb3JtOiExLGhhc1hmYTohMSxoYXNTaWduYXR1cmVzOiExfSx0PXRoaXMuY2F0YWxvZy5hY3JvRm9ybTtpZighdClyZXR1cm4gc2hhZG93KHRoaXMsImZvcm1JbmZvIixlKTt0cnl7Y29uc3QgaT10LmdldCgiRmllbGRzIiksYT1BcnJheS5pc0FycmF5KGkpJiZpLmxlbmd0aD4wO2UuaGFzRmllbGRzPWE7Y29uc3Qgcz10LmdldCgiWEZBIik7ZS5oYXNYZmE9QXJyYXkuaXNBcnJheShzKSYmcy5sZW5ndGg+MHx8cyBpbnN0YW5jZW9mIEJhc2VTdHJlYW0mJiFzLmlzRW1wdHk7Y29uc3Qgcj0hISgxJnQuZ2V0KCJTaWdGbGFncyIpKSxuPXImJnRoaXMuX2hhc09ubHlEb2N1bWVudFNpZ25hdHVyZXMoaSk7ZS5oYXNBY3JvRm9ybT1hJiYhbjtlLmhhc1NpZ25hdHVyZXM9cn1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pdGhyb3cgZTt3YXJuKGBDYW5ub3QgZmV0Y2ggZm9ybSBpbmZvcm1hdGlvbjogIiR7ZX0iLmApfXJldHVybiBzaGFkb3codGhpcywiZm9ybUluZm8iLGUpfWdldCBkb2N1bWVudEluZm8oKXtjb25zdCBlPXtQREZGb3JtYXRWZXJzaW9uOnRoaXMudmVyc2lvbixMYW5ndWFnZTp0aGlzLmNhdGFsb2cubGFuZyxFbmNyeXB0RmlsdGVyTmFtZTp0aGlzLnhyZWYuZW5jcnlwdD90aGlzLnhyZWYuZW5jcnlwdC5maWx0ZXJOYW1lOm51bGwsSXNMaW5lYXJpemVkOiEhdGhpcy5saW5lYXJpemF0aW9uLElzQWNyb0Zvcm1QcmVzZW50OnRoaXMuZm9ybUluZm8uaGFzQWNyb0Zvcm0sSXNYRkFQcmVzZW50OnRoaXMuZm9ybUluZm8uaGFzWGZhLElzQ29sbGVjdGlvblByZXNlbnQ6ISF0aGlzLmNhdGFsb2cuY29sbGVjdGlvbixJc1NpZ25hdHVyZXNQcmVzZW50OnRoaXMuZm9ybUluZm8uaGFzU2lnbmF0dXJlc307bGV0IHQ7dHJ5e3Q9dGhpcy54cmVmLnRyYWlsZXIuZ2V0KCJJbmZvIil9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIE1pc3NpbmdEYXRhRXhjZXB0aW9uKXRocm93IGU7aW5mbygiVGhlIGRvY3VtZW50IGluZm9ybWF0aW9uIGRpY3Rpb25hcnkgaXMgaW52YWxpZC4iKX1pZighKHQgaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm4gc2hhZG93KHRoaXMsImRvY3VtZW50SW5mbyIsZSk7Zm9yKGNvbnN0IGkgb2YgdC5nZXRLZXlzKCkpe2NvbnN0IGE9dC5nZXQoaSk7c3dpdGNoKGkpe2Nhc2UiVGl0bGUiOmNhc2UiQXV0aG9yIjpjYXNlIlN1YmplY3QiOmNhc2UiS2V5d29yZHMiOmNhc2UiQ3JlYXRvciI6Y2FzZSJQcm9kdWNlciI6Y2FzZSJDcmVhdGlvbkRhdGUiOmNhc2UiTW9kRGF0ZSI6aWYoInN0cmluZyI9PXR5cGVvZiBhKXtlW2ldPXN0cmluZ1RvUERGU3RyaW5nKGEpO2NvbnRpbnVlfWJyZWFrO2Nhc2UiVHJhcHBlZCI6aWYoYSBpbnN0YW5jZW9mIE5hbWUpe2VbaV09YTtjb250aW51ZX1icmVhaztkZWZhdWx0OmxldCB0O3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSJzdHJpbmciOnQ9c3RyaW5nVG9QREZTdHJpbmcoYSk7YnJlYWs7Y2FzZSJudW1iZXIiOmNhc2UiYm9vbGVhbiI6dD1hO2JyZWFrO2RlZmF1bHQ6YSBpbnN0YW5jZW9mIE5hbWUmJih0PWEpfWlmKHZvaWQgMD09PXQpe3dhcm4oYEJhZCB2YWx1ZSwgZm9yIGN1c3RvbSBrZXkgIiR7aX0iLCBpbiBJbmZvOiAke2F9LmApO2NvbnRpbnVlfWUuQ3VzdG9tfHwoZS5DdXN0b209T2JqZWN0LmNyZWF0ZShudWxsKSk7ZS5DdXN0b21baV09dDtjb250aW51ZX13YXJuKGBCYWQgdmFsdWUsIGZvciBrZXkgIiR7aX0iLCBpbiBJbmZvOiAke2F9LmApfXJldHVybiBzaGFkb3codGhpcywiZG9jdW1lbnRJbmZvIixlKX1nZXQgZmluZ2VycHJpbnRzKCl7ZnVuY3Rpb24gdmFsaWRhdGUoZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlJiZlLmxlbmd0aD4wJiYiXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDAiIT09ZX1mdW5jdGlvbiBoZXhTdHJpbmcoZSl7Y29uc3QgdD1bXTtmb3IoY29uc3QgaSBvZiBlKXtjb25zdCBlPWkudG9TdHJpbmcoMTYpO3QucHVzaChlLnBhZFN0YXJ0KDIsIjAiKSl9cmV0dXJuIHQuam9pbigiIil9Y29uc3QgZT10aGlzLnhyZWYudHJhaWxlci5nZXQoIklEIik7bGV0IHQsaTtpZihBcnJheS5pc0FycmF5KGUpJiZ2YWxpZGF0ZShlWzBdKSl7dD1zdHJpbmdUb0J5dGVzKGVbMF0pO2VbMV0hPT1lWzBdJiZ2YWxpZGF0ZShlWzFdKSYmKGk9c3RyaW5nVG9CeXRlcyhlWzFdKSl9ZWxzZSB0PUpzKHRoaXMuc3RyZWFtLmdldEJ5dGVSYW5nZSgwLDEwMjQpLDAsMTAyNCk7cmV0dXJuIHNoYWRvdyh0aGlzLCJmaW5nZXJwcmludHMiLFtoZXhTdHJpbmcodCksaT9oZXhTdHJpbmcoaSk6bnVsbF0pfWFzeW5jIF9nZXRMaW5lYXJpemF0aW9uUGFnZShlKXtjb25zdHtjYXRhbG9nOnQsbGluZWFyaXphdGlvbjppLHhyZWY6YX09dGhpcyxzPVJlZi5nZXQoaS5vYmplY3ROdW1iZXJGaXJzdCwwKTt0cnl7Y29uc3QgZT1hd2FpdCBhLmZldGNoQXN5bmMocyk7aWYoZSBpbnN0YW5jZW9mIERpY3Qpe2xldCBpPWUuZ2V0UmF3KCJUeXBlIik7aSBpbnN0YW5jZW9mIFJlZiYmKGk9YXdhaXQgYS5mZXRjaEFzeW5jKGkpKTtpZihpc05hbWUoaSwiUGFnZSIpfHwhZS5oYXMoIlR5cGUiKSYmIWUuaGFzKCJLaWRzIikpe3QucGFnZUtpZHNDb3VudENhY2hlLmhhcyhzKXx8dC5wYWdlS2lkc0NvdW50Q2FjaGUucHV0KHMsMSk7dC5wYWdlSW5kZXhDYWNoZS5oYXMocyl8fHQucGFnZUluZGV4Q2FjaGUucHV0KHMsMCk7cmV0dXJuW2Usc119fXRocm93IG5ldyBGb3JtYXRFcnJvcigiVGhlIExpbmVhcml6YXRpb24gZGljdGlvbmFyeSBkb2Vzbid0IHBvaW50IHRvIGEgdmFsaWQgUGFnZSBkaWN0aW9uYXJ5LiIpfWNhdGNoKGkpe3dhcm4oYF9nZXRMaW5lYXJpemF0aW9uUGFnZTogIiR7aS5tZXNzYWdlfSIuYCk7cmV0dXJuIHQuZ2V0UGFnZURpY3QoZSl9fWdldFBhZ2UoZSl7Y29uc3QgdD10aGlzLl9wYWdlUHJvbWlzZXMuZ2V0KGUpO2lmKHQpcmV0dXJuIHQ7Y29uc3R7Y2F0YWxvZzppLGxpbmVhcml6YXRpb246YSx4ZmFGYWN0b3J5OnN9PXRoaXM7bGV0IHI7cj1zP1Byb21pc2UucmVzb2x2ZShbRGljdC5lbXB0eSxudWxsXSk6YT8ucGFnZUZpcnN0PT09ZT90aGlzLl9nZXRMaW5lYXJpemF0aW9uUGFnZShlKTppLmdldFBhZ2VEaWN0KGUpO3I9ci50aGVuKCgoW3QsYV0pPT5uZXcgUGFnZSh7cGRmTWFuYWdlcjp0aGlzLnBkZk1hbmFnZXIseHJlZjp0aGlzLnhyZWYscGFnZUluZGV4OmUscGFnZURpY3Q6dCxyZWY6YSxnbG9iYWxJZEZhY3Rvcnk6dGhpcy5fZ2xvYmFsSWRGYWN0b3J5LGZvbnRDYWNoZTppLmZvbnRDYWNoZSxidWlsdEluQ01hcENhY2hlOmkuYnVpbHRJbkNNYXBDYWNoZSxzdGFuZGFyZEZvbnREYXRhQ2FjaGU6aS5zdGFuZGFyZEZvbnREYXRhQ2FjaGUsZ2xvYmFsSW1hZ2VDYWNoZTppLmdsb2JhbEltYWdlQ2FjaGUsc3lzdGVtRm9udENhY2hlOmkuc3lzdGVtRm9udENhY2hlLG5vbkJsZW5kTW9kZXNTZXQ6aS5ub25CbGVuZE1vZGVzU2V0LHhmYUZhY3Rvcnk6c30pKSk7dGhpcy5fcGFnZVByb21pc2VzLnNldChlLHIpO3JldHVybiByfWFzeW5jIGNoZWNrRmlyc3RQYWdlKGU9ITEpe2lmKCFlKXRyeXthd2FpdCB0aGlzLmdldFBhZ2UoMCl9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIFhSZWZFbnRyeUV4Y2VwdGlvbil7dGhpcy5fcGFnZVByb21pc2VzLmRlbGV0ZSgwKTthd2FpdCB0aGlzLmNsZWFudXAoKTt0aHJvdyBuZXcgWFJlZlBhcnNlRXhjZXB0aW9ufX19YXN5bmMgY2hlY2tMYXN0UGFnZShlPSExKXtjb25zdHtjYXRhbG9nOnQscGRmTWFuYWdlcjppfT10aGlzO3Quc2V0QWN0dWFsTnVtUGFnZXMoKTtsZXQgYTt0cnl7YXdhaXQgUHJvbWlzZS5hbGwoW2kuZW5zdXJlRG9jKCJ4ZmFGYWN0b3J5IiksaS5lbnN1cmVEb2MoImxpbmVhcml6YXRpb24iKSxpLmVuc3VyZUNhdGFsb2coIm51bVBhZ2VzIildKTtpZih0aGlzLnhmYUZhY3RvcnkpcmV0dXJuO2E9dGhpcy5saW5lYXJpemF0aW9uP3RoaXMubGluZWFyaXphdGlvbi5udW1QYWdlczp0Lm51bVBhZ2VzO2lmKCFOdW1iZXIuaXNJbnRlZ2VyKGEpKXRocm93IG5ldyBGb3JtYXRFcnJvcigiUGFnZSBjb3VudCBpcyBub3QgYW4gaW50ZWdlci4iKTtpZihhPD0xKXJldHVybjthd2FpdCB0aGlzLmdldFBhZ2UoYS0xKX1jYXRjaChzKXt0aGlzLl9wYWdlUHJvbWlzZXMuZGVsZXRlKGEtMSk7YXdhaXQgdGhpcy5jbGVhbnVwKCk7aWYocyBpbnN0YW5jZW9mIFhSZWZFbnRyeUV4Y2VwdGlvbiYmIWUpdGhyb3cgbmV3IFhSZWZQYXJzZUV4Y2VwdGlvbjt3YXJuKGBjaGVja0xhc3RQYWdlIC0gaW52YWxpZCAvUGFnZXMgdHJlZSAvQ291bnQ6ICR7YX0uYCk7bGV0IHI7dHJ5e3I9YXdhaXQgdC5nZXRBbGxQYWdlRGljdHMoZSl9Y2F0Y2goaSl7aWYoaSBpbnN0YW5jZW9mIFhSZWZFbnRyeUV4Y2VwdGlvbiYmIWUpdGhyb3cgbmV3IFhSZWZQYXJzZUV4Y2VwdGlvbjt0LnNldEFjdHVhbE51bVBhZ2VzKDEpO3JldHVybn1mb3IoY29uc3RbZSxbYSxzXV1vZiByKXtsZXQgcjtpZihhIGluc3RhbmNlb2YgRXJyb3Ipe3I9UHJvbWlzZS5yZWplY3QoYSk7ci5jYXRjaCgoKCk9Pnt9KSl9ZWxzZSByPVByb21pc2UucmVzb2x2ZShuZXcgUGFnZSh7cGRmTWFuYWdlcjppLHhyZWY6dGhpcy54cmVmLHBhZ2VJbmRleDplLHBhZ2VEaWN0OmEscmVmOnMsZ2xvYmFsSWRGYWN0b3J5OnRoaXMuX2dsb2JhbElkRmFjdG9yeSxmb250Q2FjaGU6dC5mb250Q2FjaGUsYnVpbHRJbkNNYXBDYWNoZTp0LmJ1aWx0SW5DTWFwQ2FjaGUsc3RhbmRhcmRGb250RGF0YUNhY2hlOnQuc3RhbmRhcmRGb250RGF0YUNhY2hlLGdsb2JhbEltYWdlQ2FjaGU6dC5nbG9iYWxJbWFnZUNhY2hlLHN5c3RlbUZvbnRDYWNoZTp0LnN5c3RlbUZvbnRDYWNoZSxub25CbGVuZE1vZGVzU2V0OnQubm9uQmxlbmRNb2Rlc1NldCx4ZmFGYWN0b3J5Om51bGx9KSk7dGhpcy5fcGFnZVByb21pc2VzLnNldChlLHIpfXQuc2V0QWN0dWFsTnVtUGFnZXMoci5zaXplKX19Zm9udEZhbGxiYWNrKGUsdCl7cmV0dXJuIHRoaXMuY2F0YWxvZy5mb250RmFsbGJhY2soZSx0KX1hc3luYyBjbGVhbnVwKGU9ITEpe3JldHVybiB0aGlzLmNhdGFsb2c/dGhpcy5jYXRhbG9nLmNsZWFudXAoZSk6Y2xlYXJHbG9iYWxDYWNoZXMoKX1hc3luYyNZKGUsdCxpLGEscyl7Y29uc3R7eHJlZjpyfT10aGlzO2lmKCEodCBpbnN0YW5jZW9mIFJlZil8fHMuaGFzKHQpKXJldHVybjtzLnB1dCh0KTtjb25zdCBuPWF3YWl0IHIuZmV0Y2hBc3luYyh0KTtpZighKG4gaW5zdGFuY2VvZiBEaWN0KSlyZXR1cm47aWYobi5oYXMoIlQiKSl7Y29uc3QgdD1zdHJpbmdUb1BERlN0cmluZyhhd2FpdCBuLmdldEFzeW5jKCJUIikpO2U9IiI9PT1lP3Q6YCR7ZX0uJHt0fWB9ZWxzZXtsZXQgdD1uO2Zvcig7Oyl7dD10LmdldFJhdygiUGFyZW50Iik7aWYodCBpbnN0YW5jZW9mIFJlZil7aWYocy5oYXModCkpYnJlYWs7dD1hd2FpdCByLmZldGNoQXN5bmModCl9aWYoISh0IGluc3RhbmNlb2YgRGljdCkpYnJlYWs7aWYodC5oYXMoIlQiKSl7Y29uc3QgaT1zdHJpbmdUb1BERlN0cmluZyhhd2FpdCB0LmdldEFzeW5jKCJUIikpO2U9IiI9PT1lP2k6YCR7ZX0uJHtpfWA7YnJlYWt9fX1pLmhhcyhlKXx8aS5zZXQoZSxbXSk7aS5nZXQoZSkucHVzaChBbm5vdGF0aW9uRmFjdG9yeS5jcmVhdGUocix0LGEsbnVsbCwhMCxudWxsKS50aGVuKChlPT5lPy5nZXRGaWVsZE9iamVjdCgpKSkuY2F0Y2goKGZ1bmN0aW9uKGUpe3dhcm4oYCNjb2xsZWN0RmllbGRPYmplY3RzOiAiJHtlfSIuYCk7cmV0dXJuIG51bGx9KSkpO2lmKCFuLmhhcygiS2lkcyIpKXJldHVybjtjb25zdCBvPWF3YWl0IG4uZ2V0QXN5bmMoIktpZHMiKTtpZihBcnJheS5pc0FycmF5KG8pKWZvcihjb25zdCB0IG9mIG8pYXdhaXQgdGhpcy4jWShlLHQsaSxhLHMpfWdldCBmaWVsZE9iamVjdHMoKXtpZighdGhpcy5mb3JtSW5mby5oYXNGaWVsZHMpcmV0dXJuIHNoYWRvdyh0aGlzLCJmaWVsZE9iamVjdHMiLFByb21pc2UucmVzb2x2ZShudWxsKSk7cmV0dXJuIHNoYWRvdyh0aGlzLCJmaWVsZE9iamVjdHMiLFByb21pc2UuYWxsKFt0aGlzLnBkZk1hbmFnZXIuZW5zdXJlRG9jKCJhbm5vdGF0aW9uR2xvYmFscyIpLHRoaXMucGRmTWFuYWdlci5lbnN1cmVDYXRhbG9nKCJhY3JvRm9ybSIpXSkudGhlbigoYXN5bmMoW2UsdF0pPT57aWYoIWUpcmV0dXJuIG51bGw7Y29uc3QgaT1uZXcgUmVmU2V0LGE9T2JqZWN0LmNyZWF0ZShudWxsKSxzPW5ldyBNYXA7Zm9yKGNvbnN0IGEgb2YgYXdhaXQgdC5nZXRBc3luYygiRmllbGRzIikpYXdhaXQgdGhpcy4jWSgiIixhLHMsZSxpKTtjb25zdCByPVtdO2Zvcihjb25zdFtlLHRdb2YgcylyLnB1c2goUHJvbWlzZS5hbGwodCkudGhlbigodD0+eyh0PXQuZmlsdGVyKChlPT4hIWUpKSkubGVuZ3RoPjAmJihhW2VdPXQpfSkpKTthd2FpdCBQcm9taXNlLmFsbChyKTtyZXR1cm4gYX0pKSl9Z2V0IGhhc0pTQWN0aW9ucygpe3JldHVybiBzaGFkb3codGhpcywiaGFzSlNBY3Rpb25zIix0aGlzLnBkZk1hbmFnZXIuZW5zdXJlRG9jKCJfcGFyc2VIYXNKU0FjdGlvbnMiKSl9YXN5bmMgX3BhcnNlSGFzSlNBY3Rpb25zKCl7Y29uc3RbZSx0XT1hd2FpdCBQcm9taXNlLmFsbChbdGhpcy5wZGZNYW5hZ2VyLmVuc3VyZUNhdGFsb2coImpzQWN0aW9ucyIpLHRoaXMucGRmTWFuYWdlci5lbnN1cmVEb2MoImZpZWxkT2JqZWN0cyIpXSk7cmV0dXJuISFlfHwhIXQmJk9iamVjdC52YWx1ZXModCkuc29tZSgoZT0+ZS5zb21lKChlPT5udWxsIT09ZS5hY3Rpb25zKSkpKX1nZXQgY2FsY3VsYXRpb25PcmRlcklkcygpe2NvbnN0IGU9dGhpcy5jYXRhbG9nLmFjcm9Gb3JtO2lmKCFlPy5oYXMoIkNPIikpcmV0dXJuIHNoYWRvdyh0aGlzLCJjYWxjdWxhdGlvbk9yZGVySWRzIixudWxsKTtjb25zdCB0PWUuZ2V0KCJDTyIpO2lmKCFBcnJheS5pc0FycmF5KHQpfHwwPT09dC5sZW5ndGgpcmV0dXJuIHNoYWRvdyh0aGlzLCJjYWxjdWxhdGlvbk9yZGVySWRzIixudWxsKTtjb25zdCBpPVtdO2Zvcihjb25zdCBlIG9mIHQpZSBpbnN0YW5jZW9mIFJlZiYmaS5wdXNoKGUudG9TdHJpbmcoKSk7cmV0dXJuIDA9PT1pLmxlbmd0aD9zaGFkb3codGhpcywiY2FsY3VsYXRpb25PcmRlcklkcyIsbnVsbCk6c2hhZG93KHRoaXMsImNhbGN1bGF0aW9uT3JkZXJJZHMiLGkpfWdldCBhbm5vdGF0aW9uR2xvYmFscygpe3JldHVybiBzaGFkb3codGhpcywiYW5ub3RhdGlvbkdsb2JhbHMiLEFubm90YXRpb25GYWN0b3J5LmNyZWF0ZUdsb2JhbHModGhpcy5wZGZNYW5hZ2VyKSl9fWNsYXNzIEJhc2VQZGZNYW5hZ2Vye2NvbnN0cnVjdG9yKGUpe3RoaXMuY29uc3RydWN0b3I9PT1CYXNlUGRmTWFuYWdlciYmdW5yZWFjaGFibGUoIkNhbm5vdCBpbml0aWFsaXplIEJhc2VQZGZNYW5hZ2VyLiIpO3RoaXMuX2RvY0Jhc2VVcmw9ZnVuY3Rpb24gcGFyc2VEb2NCYXNlVXJsKGUpe2lmKGUpe2NvbnN0IHQ9Y3JlYXRlVmFsaWRBYnNvbHV0ZVVybChlKTtpZih0KXJldHVybiB0LmhyZWY7d2FybihgSW52YWxpZCBhYnNvbHV0ZSBkb2NCYXNlVXJsOiAiJHtlfSIuYCl9cmV0dXJuIG51bGx9KGUuZG9jQmFzZVVybCk7dGhpcy5fZG9jSWQ9ZS5kb2NJZDt0aGlzLl9wYXNzd29yZD1lLnBhc3N3b3JkO3RoaXMuZW5hYmxlWGZhPWUuZW5hYmxlWGZhO2UuZXZhbHVhdG9yT3B0aW9ucy5pc09mZnNjcmVlbkNhbnZhc1N1cHBvcnRlZCYmPUZlYXR1cmVUZXN0LmlzT2Zmc2NyZWVuQ2FudmFzU3VwcG9ydGVkO3RoaXMuZXZhbHVhdG9yT3B0aW9ucz1lLmV2YWx1YXRvck9wdGlvbnN9Z2V0IGRvY0lkKCl7cmV0dXJuIHRoaXMuX2RvY0lkfWdldCBwYXNzd29yZCgpe3JldHVybiB0aGlzLl9wYXNzd29yZH1nZXQgZG9jQmFzZVVybCgpe3JldHVybiB0aGlzLl9kb2NCYXNlVXJsfWdldCBjYXRhbG9nKCl7cmV0dXJuIHRoaXMucGRmRG9jdW1lbnQuY2F0YWxvZ31lbnN1cmVEb2MoZSx0KXtyZXR1cm4gdGhpcy5lbnN1cmUodGhpcy5wZGZEb2N1bWVudCxlLHQpfWVuc3VyZVhSZWYoZSx0KXtyZXR1cm4gdGhpcy5lbnN1cmUodGhpcy5wZGZEb2N1bWVudC54cmVmLGUsdCl9ZW5zdXJlQ2F0YWxvZyhlLHQpe3JldHVybiB0aGlzLmVuc3VyZSh0aGlzLnBkZkRvY3VtZW50LmNhdGFsb2csZSx0KX1nZXRQYWdlKGUpe3JldHVybiB0aGlzLnBkZkRvY3VtZW50LmdldFBhZ2UoZSl9Zm9udEZhbGxiYWNrKGUsdCl7cmV0dXJuIHRoaXMucGRmRG9jdW1lbnQuZm9udEZhbGxiYWNrKGUsdCl9bG9hZFhmYUZvbnRzKGUsdCl7cmV0dXJuIHRoaXMucGRmRG9jdW1lbnQubG9hZFhmYUZvbnRzKGUsdCl9bG9hZFhmYUltYWdlcygpe3JldHVybiB0aGlzLnBkZkRvY3VtZW50LmxvYWRYZmFJbWFnZXMoKX1zZXJpYWxpemVYZmFEYXRhKGUpe3JldHVybiB0aGlzLnBkZkRvY3VtZW50LnNlcmlhbGl6ZVhmYURhdGEoZSl9Y2xlYW51cChlPSExKXtyZXR1cm4gdGhpcy5wZGZEb2N1bWVudC5jbGVhbnVwKGUpfWFzeW5jIGVuc3VyZShlLHQsaSl7dW5yZWFjaGFibGUoIkFic3RyYWN0IG1ldGhvZCBgZW5zdXJlYCBjYWxsZWQiKX1yZXF1ZXN0UmFuZ2UoZSx0KXt1bnJlYWNoYWJsZSgiQWJzdHJhY3QgbWV0aG9kIGByZXF1ZXN0UmFuZ2VgIGNhbGxlZCIpfXJlcXVlc3RMb2FkZWRTdHJlYW0oZT0hMSl7dW5yZWFjaGFibGUoIkFic3RyYWN0IG1ldGhvZCBgcmVxdWVzdExvYWRlZFN0cmVhbWAgY2FsbGVkIil9c2VuZFByb2dyZXNzaXZlRGF0YShlKXt1bnJlYWNoYWJsZSgiQWJzdHJhY3QgbWV0aG9kIGBzZW5kUHJvZ3Jlc3NpdmVEYXRhYCBjYWxsZWQiKX11cGRhdGVQYXNzd29yZChlKXt0aGlzLl9wYXNzd29yZD1lfXRlcm1pbmF0ZShlKXt1bnJlYWNoYWJsZSgiQWJzdHJhY3QgbWV0aG9kIGB0ZXJtaW5hdGVgIGNhbGxlZCIpfX1jbGFzcyBMb2NhbFBkZk1hbmFnZXIgZXh0ZW5kcyBCYXNlUGRmTWFuYWdlcntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTtjb25zdCB0PW5ldyBTdHJlYW0oZS5zb3VyY2UpO3RoaXMucGRmRG9jdW1lbnQ9bmV3IFBERkRvY3VtZW50KHRoaXMsdCk7dGhpcy5fbG9hZGVkU3RyZWFtUHJvbWlzZT1Qcm9taXNlLnJlc29sdmUodCl9YXN5bmMgZW5zdXJlKGUsdCxpKXtjb25zdCBhPWVbdF07cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGE/YS5hcHBseShlLGkpOmF9cmVxdWVzdFJhbmdlKGUsdCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpfXJlcXVlc3RMb2FkZWRTdHJlYW0oZT0hMSl7cmV0dXJuIHRoaXMuX2xvYWRlZFN0cmVhbVByb21pc2V9dGVybWluYXRlKGUpe319Y2xhc3MgTmV0d29ya1BkZk1hbmFnZXIgZXh0ZW5kcyBCYXNlUGRmTWFuYWdlcntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKTt0aGlzLnN0cmVhbU1hbmFnZXI9bmV3IENodW5rZWRTdHJlYW1NYW5hZ2VyKGUuc291cmNlLHttc2dIYW5kbGVyOmUuaGFuZGxlcixsZW5ndGg6ZS5sZW5ndGgsZGlzYWJsZUF1dG9GZXRjaDplLmRpc2FibGVBdXRvRmV0Y2gscmFuZ2VDaHVua1NpemU6ZS5yYW5nZUNodW5rU2l6ZX0pO3RoaXMucGRmRG9jdW1lbnQ9bmV3IFBERkRvY3VtZW50KHRoaXMsdGhpcy5zdHJlYW1NYW5hZ2VyLmdldFN0cmVhbSgpKX1hc3luYyBlbnN1cmUoZSx0LGkpe3RyeXtjb25zdCBhPWVbdF07cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGE/YS5hcHBseShlLGkpOmF9Y2F0Y2goYSl7aWYoIShhIGluc3RhbmNlb2YgTWlzc2luZ0RhdGFFeGNlcHRpb24pKXRocm93IGE7YXdhaXQgdGhpcy5yZXF1ZXN0UmFuZ2UoYS5iZWdpbixhLmVuZCk7cmV0dXJuIHRoaXMuZW5zdXJlKGUsdCxpKX19cmVxdWVzdFJhbmdlKGUsdCl7cmV0dXJuIHRoaXMuc3RyZWFtTWFuYWdlci5yZXF1ZXN0UmFuZ2UoZSx0KX1yZXF1ZXN0TG9hZGVkU3RyZWFtKGU9ITEpe3JldHVybiB0aGlzLnN0cmVhbU1hbmFnZXIucmVxdWVzdEFsbENodW5rcyhlKX1zZW5kUHJvZ3Jlc3NpdmVEYXRhKGUpe3RoaXMuc3RyZWFtTWFuYWdlci5vblJlY2VpdmVEYXRhKHtjaHVuazplfSl9dGVybWluYXRlKGUpe3RoaXMuc3RyZWFtTWFuYWdlci5hYm9ydChlKX19Y29uc3QgZ289MSxJbz0yLGNvPTEsaG89Mixsbz0zLENvPTQsQm89NSxRbz02LEVvPTcsdW89ODtmdW5jdGlvbiB3cmFwUmVhc29uKGUpe2UgaW5zdGFuY2VvZiBFcnJvcnx8Im9iamVjdCI9PXR5cGVvZiBlJiZudWxsIT09ZXx8dW5yZWFjaGFibGUoJ3dyYXBSZWFzb246IEV4cGVjdGVkICJyZWFzb24iIHRvIGJlIGEgKHBvc3NpYmx5IGNsb25lZCkgRXJyb3IuJyk7c3dpdGNoKGUubmFtZSl7Y2FzZSJBYm9ydEV4Y2VwdGlvbiI6cmV0dXJuIG5ldyBBYm9ydEV4Y2VwdGlvbihlLm1lc3NhZ2UpO2Nhc2UiTWlzc2luZ1BERkV4Y2VwdGlvbiI6cmV0dXJuIG5ldyBNaXNzaW5nUERGRXhjZXB0aW9uKGUubWVzc2FnZSk7Y2FzZSJQYXNzd29yZEV4Y2VwdGlvbiI6cmV0dXJuIG5ldyBQYXNzd29yZEV4Y2VwdGlvbihlLm1lc3NhZ2UsZS5jb2RlKTtjYXNlIlVuZXhwZWN0ZWRSZXNwb25zZUV4Y2VwdGlvbiI6cmV0dXJuIG5ldyBVbmV4cGVjdGVkUmVzcG9uc2VFeGNlcHRpb24oZS5tZXNzYWdlLGUuc3RhdHVzKTtjYXNlIlVua25vd25FcnJvckV4Y2VwdGlvbiI6cmV0dXJuIG5ldyBVbmtub3duRXJyb3JFeGNlcHRpb24oZS5tZXNzYWdlLGUuZGV0YWlscyk7ZGVmYXVsdDpyZXR1cm4gbmV3IFVua25vd25FcnJvckV4Y2VwdGlvbihlLm1lc3NhZ2UsZS50b1N0cmluZygpKX19Y2xhc3MgTWVzc2FnZUhhbmRsZXJ7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXMuc291cmNlTmFtZT1lO3RoaXMudGFyZ2V0TmFtZT10O3RoaXMuY29tT2JqPWk7dGhpcy5jYWxsYmFja0lkPTE7dGhpcy5zdHJlYW1JZD0xO3RoaXMuc3RyZWFtU2lua3M9T2JqZWN0LmNyZWF0ZShudWxsKTt0aGlzLnN0cmVhbUNvbnRyb2xsZXJzPU9iamVjdC5jcmVhdGUobnVsbCk7dGhpcy5jYWxsYmFja0NhcGFiaWxpdGllcz1PYmplY3QuY3JlYXRlKG51bGwpO3RoaXMuYWN0aW9uSGFuZGxlcj1PYmplY3QuY3JlYXRlKG51bGwpO3RoaXMuX29uQ29tT2JqT25NZXNzYWdlPWU9Pntjb25zdCB0PWUuZGF0YTtpZih0LnRhcmdldE5hbWUhPT10aGlzLnNvdXJjZU5hbWUpcmV0dXJuO2lmKHQuc3RyZWFtKXt0aGlzLiN2KHQpO3JldHVybn1pZih0LmNhbGxiYWNrKXtjb25zdCBlPXQuY2FsbGJhY2tJZCxpPXRoaXMuY2FsbGJhY2tDYXBhYmlsaXRpZXNbZV07aWYoIWkpdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVzb2x2ZSBjYWxsYmFjayAke2V9YCk7ZGVsZXRlIHRoaXMuY2FsbGJhY2tDYXBhYmlsaXRpZXNbZV07aWYodC5jYWxsYmFjaz09PWdvKWkucmVzb2x2ZSh0LmRhdGEpO2Vsc2V7aWYodC5jYWxsYmFjayE9PUlvKXRocm93IG5ldyBFcnJvcigiVW5leHBlY3RlZCBjYWxsYmFjayBjYXNlIik7aS5yZWplY3Qod3JhcFJlYXNvbih0LnJlYXNvbikpfXJldHVybn1jb25zdCBhPXRoaXMuYWN0aW9uSGFuZGxlclt0LmFjdGlvbl07aWYoIWEpdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGFjdGlvbiBmcm9tIHdvcmtlcjogJHt0LmFjdGlvbn1gKTtpZih0LmNhbGxiYWNrSWQpe2NvbnN0IGU9dGhpcy5zb3VyY2VOYW1lLHM9dC5zb3VyY2VOYW1lO25ldyBQcm9taXNlKChmdW5jdGlvbihlKXtlKGEodC5kYXRhKSl9KSkudGhlbigoZnVuY3Rpb24oYSl7aS5wb3N0TWVzc2FnZSh7c291cmNlTmFtZTplLHRhcmdldE5hbWU6cyxjYWxsYmFjazpnbyxjYWxsYmFja0lkOnQuY2FsbGJhY2tJZCxkYXRhOmF9KX0pLChmdW5jdGlvbihhKXtpLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOmUsdGFyZ2V0TmFtZTpzLGNhbGxiYWNrOklvLGNhbGxiYWNrSWQ6dC5jYWxsYmFja0lkLHJlYXNvbjp3cmFwUmVhc29uKGEpfSl9KSl9ZWxzZSB0LnN0cmVhbUlkP3RoaXMuI0sodCk6YSh0LmRhdGEpfTtpLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHRoaXMuX29uQ29tT2JqT25NZXNzYWdlKX1vbihlLHQpe2NvbnN0IGk9dGhpcy5hY3Rpb25IYW5kbGVyO2lmKGlbZV0pdGhyb3cgbmV3IEVycm9yKGBUaGVyZSBpcyBhbHJlYWR5IGFuIGFjdGlvbk5hbWUgY2FsbGVkICIke2V9ImApO2lbZV09dH1zZW5kKGUsdCxpKXt0aGlzLmNvbU9iai5wb3N0TWVzc2FnZSh7c291cmNlTmFtZTp0aGlzLnNvdXJjZU5hbWUsdGFyZ2V0TmFtZTp0aGlzLnRhcmdldE5hbWUsYWN0aW9uOmUsZGF0YTp0fSxpKX1zZW5kV2l0aFByb21pc2UoZSx0LGkpe2NvbnN0IGE9dGhpcy5jYWxsYmFja0lkKysscz1Qcm9taXNlLndpdGhSZXNvbHZlcnMoKTt0aGlzLmNhbGxiYWNrQ2FwYWJpbGl0aWVzW2FdPXM7dHJ5e3RoaXMuY29tT2JqLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOnRoaXMuc291cmNlTmFtZSx0YXJnZXROYW1lOnRoaXMudGFyZ2V0TmFtZSxhY3Rpb246ZSxjYWxsYmFja0lkOmEsZGF0YTp0fSxpKX1jYXRjaChlKXtzLnJlamVjdChlKX1yZXR1cm4gcy5wcm9taXNlfXNlbmRXaXRoU3RyZWFtKGUsdCxpLGEpe2NvbnN0IHM9dGhpcy5zdHJlYW1JZCsrLHI9dGhpcy5zb3VyY2VOYW1lLG49dGhpcy50YXJnZXROYW1lLG89dGhpcy5jb21PYmo7cmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbSh7c3RhcnQ6aT0+e2NvbnN0IGc9UHJvbWlzZS53aXRoUmVzb2x2ZXJzKCk7dGhpcy5zdHJlYW1Db250cm9sbGVyc1tzXT17Y29udHJvbGxlcjppLHN0YXJ0Q2FsbDpnLHB1bGxDYWxsOm51bGwsY2FuY2VsQ2FsbDpudWxsLGlzQ2xvc2VkOiExfTtvLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOnIsdGFyZ2V0TmFtZTpuLGFjdGlvbjplLHN0cmVhbUlkOnMsZGF0YTp0LGRlc2lyZWRTaXplOmkuZGVzaXJlZFNpemV9LGEpO3JldHVybiBnLnByb21pc2V9LHB1bGw6ZT0+e2NvbnN0IHQ9UHJvbWlzZS53aXRoUmVzb2x2ZXJzKCk7dGhpcy5zdHJlYW1Db250cm9sbGVyc1tzXS5wdWxsQ2FsbD10O28ucG9zdE1lc3NhZ2Uoe3NvdXJjZU5hbWU6cix0YXJnZXROYW1lOm4sc3RyZWFtOlFvLHN0cmVhbUlkOnMsZGVzaXJlZFNpemU6ZS5kZXNpcmVkU2l6ZX0pO3JldHVybiB0LnByb21pc2V9LGNhbmNlbDplPT57YXNzZXJ0KGUgaW5zdGFuY2VvZiBFcnJvciwiY2FuY2VsIG11c3QgaGF2ZSBhIHZhbGlkIHJlYXNvbiIpO2NvbnN0IHQ9UHJvbWlzZS53aXRoUmVzb2x2ZXJzKCk7dGhpcy5zdHJlYW1Db250cm9sbGVyc1tzXS5jYW5jZWxDYWxsPXQ7dGhpcy5zdHJlYW1Db250cm9sbGVyc1tzXS5pc0Nsb3NlZD0hMDtvLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOnIsdGFyZ2V0TmFtZTpuLHN0cmVhbTpjbyxzdHJlYW1JZDpzLHJlYXNvbjp3cmFwUmVhc29uKGUpfSk7cmV0dXJuIHQucHJvbWlzZX19LGkpfSNLKGUpe2NvbnN0IHQ9ZS5zdHJlYW1JZCxpPXRoaXMuc291cmNlTmFtZSxhPWUuc291cmNlTmFtZSxzPXRoaXMuY29tT2JqLHI9dGhpcyxuPXRoaXMuYWN0aW9uSGFuZGxlcltlLmFjdGlvbl0sbz17ZW5xdWV1ZShlLHI9MSxuKXtpZih0aGlzLmlzQ2FuY2VsbGVkKXJldHVybjtjb25zdCBvPXRoaXMuZGVzaXJlZFNpemU7dGhpcy5kZXNpcmVkU2l6ZS09cjtpZihvPjAmJnRoaXMuZGVzaXJlZFNpemU8PTApe3RoaXMuc2lua0NhcGFiaWxpdHk9UHJvbWlzZS53aXRoUmVzb2x2ZXJzKCk7dGhpcy5yZWFkeT10aGlzLnNpbmtDYXBhYmlsaXR5LnByb21pc2V9cy5wb3N0TWVzc2FnZSh7c291cmNlTmFtZTppLHRhcmdldE5hbWU6YSxzdHJlYW06Q28sc3RyZWFtSWQ6dCxjaHVuazplfSxuKX0sY2xvc2UoKXtpZighdGhpcy5pc0NhbmNlbGxlZCl7dGhpcy5pc0NhbmNlbGxlZD0hMDtzLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOmksdGFyZ2V0TmFtZTphLHN0cmVhbTpsbyxzdHJlYW1JZDp0fSk7ZGVsZXRlIHIuc3RyZWFtU2lua3NbdF19fSxlcnJvcihlKXthc3NlcnQoZSBpbnN0YW5jZW9mIEVycm9yLCJlcnJvciBtdXN0IGhhdmUgYSB2YWxpZCByZWFzb24iKTtpZighdGhpcy5pc0NhbmNlbGxlZCl7dGhpcy5pc0NhbmNlbGxlZD0hMDtzLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOmksdGFyZ2V0TmFtZTphLHN0cmVhbTpCbyxzdHJlYW1JZDp0LHJlYXNvbjp3cmFwUmVhc29uKGUpfSl9fSxzaW5rQ2FwYWJpbGl0eTpQcm9taXNlLndpdGhSZXNvbHZlcnMoKSxvblB1bGw6bnVsbCxvbkNhbmNlbDpudWxsLGlzQ2FuY2VsbGVkOiExLGRlc2lyZWRTaXplOmUuZGVzaXJlZFNpemUscmVhZHk6bnVsbH07by5zaW5rQ2FwYWJpbGl0eS5yZXNvbHZlKCk7by5yZWFkeT1vLnNpbmtDYXBhYmlsaXR5LnByb21pc2U7dGhpcy5zdHJlYW1TaW5rc1t0XT1vO25ldyBQcm9taXNlKChmdW5jdGlvbih0KXt0KG4oZS5kYXRhLG8pKX0pKS50aGVuKChmdW5jdGlvbigpe3MucG9zdE1lc3NhZ2Uoe3NvdXJjZU5hbWU6aSx0YXJnZXROYW1lOmEsc3RyZWFtOnVvLHN0cmVhbUlkOnQsc3VjY2VzczohMH0pfSksKGZ1bmN0aW9uKGUpe3MucG9zdE1lc3NhZ2Uoe3NvdXJjZU5hbWU6aSx0YXJnZXROYW1lOmEsc3RyZWFtOnVvLHN0cmVhbUlkOnQscmVhc29uOndyYXBSZWFzb24oZSl9KX0pKX0jdihlKXtjb25zdCB0PWUuc3RyZWFtSWQsaT10aGlzLnNvdXJjZU5hbWUsYT1lLnNvdXJjZU5hbWUscz10aGlzLmNvbU9iaixyPXRoaXMuc3RyZWFtQ29udHJvbGxlcnNbdF0sbj10aGlzLnN0cmVhbVNpbmtzW3RdO3N3aXRjaChlLnN0cmVhbSl7Y2FzZSB1bzplLnN1Y2Nlc3M/ci5zdGFydENhbGwucmVzb2x2ZSgpOnIuc3RhcnRDYWxsLnJlamVjdCh3cmFwUmVhc29uKGUucmVhc29uKSk7YnJlYWs7Y2FzZSBFbzplLnN1Y2Nlc3M/ci5wdWxsQ2FsbC5yZXNvbHZlKCk6ci5wdWxsQ2FsbC5yZWplY3Qod3JhcFJlYXNvbihlLnJlYXNvbikpO2JyZWFrO2Nhc2UgUW86aWYoIW4pe3MucG9zdE1lc3NhZ2Uoe3NvdXJjZU5hbWU6aSx0YXJnZXROYW1lOmEsc3RyZWFtOkVvLHN0cmVhbUlkOnQsc3VjY2VzczohMH0pO2JyZWFrfW4uZGVzaXJlZFNpemU8PTAmJmUuZGVzaXJlZFNpemU+MCYmbi5zaW5rQ2FwYWJpbGl0eS5yZXNvbHZlKCk7bi5kZXNpcmVkU2l6ZT1lLmRlc2lyZWRTaXplO25ldyBQcm9taXNlKChmdW5jdGlvbihlKXtlKG4ub25QdWxsPy4oKSl9KSkudGhlbigoZnVuY3Rpb24oKXtzLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOmksdGFyZ2V0TmFtZTphLHN0cmVhbTpFbyxzdHJlYW1JZDp0LHN1Y2Nlc3M6ITB9KX0pLChmdW5jdGlvbihlKXtzLnBvc3RNZXNzYWdlKHtzb3VyY2VOYW1lOmksdGFyZ2V0TmFtZTphLHN0cmVhbTpFbyxzdHJlYW1JZDp0LHJlYXNvbjp3cmFwUmVhc29uKGUpfSl9KSk7YnJlYWs7Y2FzZSBDbzphc3NlcnQociwiZW5xdWV1ZSBzaG91bGQgaGF2ZSBzdHJlYW0gY29udHJvbGxlciIpO2lmKHIuaXNDbG9zZWQpYnJlYWs7ci5jb250cm9sbGVyLmVucXVldWUoZS5jaHVuayk7YnJlYWs7Y2FzZSBsbzphc3NlcnQociwiY2xvc2Ugc2hvdWxkIGhhdmUgc3RyZWFtIGNvbnRyb2xsZXIiKTtpZihyLmlzQ2xvc2VkKWJyZWFrO3IuaXNDbG9zZWQ9ITA7ci5jb250cm9sbGVyLmNsb3NlKCk7dGhpcy4jVChyLHQpO2JyZWFrO2Nhc2UgQm86YXNzZXJ0KHIsImVycm9yIHNob3VsZCBoYXZlIHN0cmVhbSBjb250cm9sbGVyIik7ci5jb250cm9sbGVyLmVycm9yKHdyYXBSZWFzb24oZS5yZWFzb24pKTt0aGlzLiNUKHIsdCk7YnJlYWs7Y2FzZSBobzplLnN1Y2Nlc3M/ci5jYW5jZWxDYWxsLnJlc29sdmUoKTpyLmNhbmNlbENhbGwucmVqZWN0KHdyYXBSZWFzb24oZS5yZWFzb24pKTt0aGlzLiNUKHIsdCk7YnJlYWs7Y2FzZSBjbzppZighbilicmVhaztuZXcgUHJvbWlzZSgoZnVuY3Rpb24odCl7dChuLm9uQ2FuY2VsPy4od3JhcFJlYXNvbihlLnJlYXNvbikpKX0pKS50aGVuKChmdW5jdGlvbigpe3MucG9zdE1lc3NhZ2Uoe3NvdXJjZU5hbWU6aSx0YXJnZXROYW1lOmEsc3RyZWFtOmhvLHN0cmVhbUlkOnQsc3VjY2VzczohMH0pfSksKGZ1bmN0aW9uKGUpe3MucG9zdE1lc3NhZ2Uoe3NvdXJjZU5hbWU6aSx0YXJnZXROYW1lOmEsc3RyZWFtOmhvLHN0cmVhbUlkOnQscmVhc29uOndyYXBSZWFzb24oZSl9KX0pKTtuLnNpbmtDYXBhYmlsaXR5LnJlamVjdCh3cmFwUmVhc29uKGUucmVhc29uKSk7bi5pc0NhbmNlbGxlZD0hMDtkZWxldGUgdGhpcy5zdHJlYW1TaW5rc1t0XTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiVW5leHBlY3RlZCBzdHJlYW0gY2FzZSIpfX1hc3luYyNUKGUsdCl7YXdhaXQgUHJvbWlzZS5hbGxTZXR0bGVkKFtlLnN0YXJ0Q2FsbD8ucHJvbWlzZSxlLnB1bGxDYWxsPy5wcm9taXNlLGUuY2FuY2VsQ2FsbD8ucHJvbWlzZV0pO2RlbGV0ZSB0aGlzLnN0cmVhbUNvbnRyb2xsZXJzW3RdfWRlc3Ryb3koKXt0aGlzLmNvbU9iai5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIix0aGlzLl9vbkNvbU9iak9uTWVzc2FnZSl9fWNsYXNzIFBERldvcmtlclN0cmVhbXtjb25zdHJ1Y3RvcihlKXt0aGlzLl9tc2dIYW5kbGVyPWU7dGhpcy5fY29udGVudExlbmd0aD1udWxsO3RoaXMuX2Z1bGxSZXF1ZXN0UmVhZGVyPW51bGw7dGhpcy5fcmFuZ2VSZXF1ZXN0UmVhZGVycz1bXX1nZXRGdWxsUmVhZGVyKCl7YXNzZXJ0KCF0aGlzLl9mdWxsUmVxdWVzdFJlYWRlciwiUERGV29ya2VyU3RyZWFtLmdldEZ1bGxSZWFkZXIgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UuIik7dGhpcy5fZnVsbFJlcXVlc3RSZWFkZXI9bmV3IFBERldvcmtlclN0cmVhbVJlYWRlcih0aGlzLl9tc2dIYW5kbGVyKTtyZXR1cm4gdGhpcy5fZnVsbFJlcXVlc3RSZWFkZXJ9Z2V0UmFuZ2VSZWFkZXIoZSx0KXtjb25zdCBpPW5ldyBQREZXb3JrZXJTdHJlYW1SYW5nZVJlYWRlcihlLHQsdGhpcy5fbXNnSGFuZGxlcik7dGhpcy5fcmFuZ2VSZXF1ZXN0UmVhZGVycy5wdXNoKGkpO3JldHVybiBpfWNhbmNlbEFsbFJlcXVlc3RzKGUpe3RoaXMuX2Z1bGxSZXF1ZXN0UmVhZGVyPy5jYW5jZWwoZSk7Zm9yKGNvbnN0IHQgb2YgdGhpcy5fcmFuZ2VSZXF1ZXN0UmVhZGVycy5zbGljZSgwKSl0LmNhbmNlbChlKX19Y2xhc3MgUERGV29ya2VyU3RyZWFtUmVhZGVye2NvbnN0cnVjdG9yKGUpe3RoaXMuX21zZ0hhbmRsZXI9ZTt0aGlzLm9uUHJvZ3Jlc3M9bnVsbDt0aGlzLl9jb250ZW50TGVuZ3RoPW51bGw7dGhpcy5faXNSYW5nZVN1cHBvcnRlZD0hMTt0aGlzLl9pc1N0cmVhbWluZ1N1cHBvcnRlZD0hMTtjb25zdCB0PXRoaXMuX21zZ0hhbmRsZXIuc2VuZFdpdGhTdHJlYW0oIkdldFJlYWRlciIpO3RoaXMuX3JlYWRlcj10LmdldFJlYWRlcigpO3RoaXMuX2hlYWRlcnNSZWFkeT10aGlzLl9tc2dIYW5kbGVyLnNlbmRXaXRoUHJvbWlzZSgiUmVhZGVySGVhZGVyc1JlYWR5IikudGhlbigoZT0+e3RoaXMuX2lzU3RyZWFtaW5nU3VwcG9ydGVkPWUuaXNTdHJlYW1pbmdTdXBwb3J0ZWQ7dGhpcy5faXNSYW5nZVN1cHBvcnRlZD1lLmlzUmFuZ2VTdXBwb3J0ZWQ7dGhpcy5fY29udGVudExlbmd0aD1lLmNvbnRlbnRMZW5ndGh9KSl9Z2V0IGhlYWRlcnNSZWFkeSgpe3JldHVybiB0aGlzLl9oZWFkZXJzUmVhZHl9Z2V0IGNvbnRlbnRMZW5ndGgoKXtyZXR1cm4gdGhpcy5fY29udGVudExlbmd0aH1nZXQgaXNTdHJlYW1pbmdTdXBwb3J0ZWQoKXtyZXR1cm4gdGhpcy5faXNTdHJlYW1pbmdTdXBwb3J0ZWR9Z2V0IGlzUmFuZ2VTdXBwb3J0ZWQoKXtyZXR1cm4gdGhpcy5faXNSYW5nZVN1cHBvcnRlZH1hc3luYyByZWFkKCl7Y29uc3R7dmFsdWU6ZSxkb25lOnR9PWF3YWl0IHRoaXMuX3JlYWRlci5yZWFkKCk7cmV0dXJuIHQ/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTp7dmFsdWU6ZS5idWZmZXIsZG9uZTohMX19Y2FuY2VsKGUpe3RoaXMuX3JlYWRlci5jYW5jZWwoZSl9fWNsYXNzIFBERldvcmtlclN0cmVhbVJhbmdlUmVhZGVye2NvbnN0cnVjdG9yKGUsdCxpKXt0aGlzLl9tc2dIYW5kbGVyPWk7dGhpcy5vblByb2dyZXNzPW51bGw7Y29uc3QgYT10aGlzLl9tc2dIYW5kbGVyLnNlbmRXaXRoU3RyZWFtKCJHZXRSYW5nZVJlYWRlciIse2JlZ2luOmUsZW5kOnR9KTt0aGlzLl9yZWFkZXI9YS5nZXRSZWFkZXIoKX1nZXQgaXNTdHJlYW1pbmdTdXBwb3J0ZWQoKXtyZXR1cm4hMX1hc3luYyByZWFkKCl7Y29uc3R7dmFsdWU6ZSxkb25lOnR9PWF3YWl0IHRoaXMuX3JlYWRlci5yZWFkKCk7cmV0dXJuIHQ/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTp7dmFsdWU6ZS5idWZmZXIsZG9uZTohMX19Y2FuY2VsKGUpe3RoaXMuX3JlYWRlci5jYW5jZWwoZSl9fWNsYXNzIFdvcmtlclRhc2t7Y29uc3RydWN0b3IoZSl7dGhpcy5uYW1lPWU7dGhpcy50ZXJtaW5hdGVkPSExO3RoaXMuX2NhcGFiaWxpdHk9UHJvbWlzZS53aXRoUmVzb2x2ZXJzKCl9Z2V0IGZpbmlzaGVkKCl7cmV0dXJuIHRoaXMuX2NhcGFiaWxpdHkucHJvbWlzZX1maW5pc2goKXt0aGlzLl9jYXBhYmlsaXR5LnJlc29sdmUoKX10ZXJtaW5hdGUoKXt0aGlzLnRlcm1pbmF0ZWQ9ITB9ZW5zdXJlTm90VGVybWluYXRlZCgpe2lmKHRoaXMudGVybWluYXRlZCl0aHJvdyBuZXcgRXJyb3IoIldvcmtlciB0YXNrIHdhcyB0ZXJtaW5hdGVkIil9fWNsYXNzIFdvcmtlck1lc3NhZ2VIYW5kbGVye3N0YXRpYyBzZXR1cChlLHQpe2xldCBpPSExO2Uub24oInRlc3QiLChmdW5jdGlvbih0KXtpZighaSl7aT0hMDtlLnNlbmQoInRlc3QiLHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KX19KSk7ZS5vbigiY29uZmlndXJlIiwoZnVuY3Rpb24oZSl7IWZ1bmN0aW9uIHNldFZlcmJvc2l0eUxldmVsKGUpe051bWJlci5pc0ludGVnZXIoZSkmJihzdD1lKX0oZS52ZXJib3NpdHkpfSkpO2Uub24oIkdldERvY1JlcXVlc3QiLChmdW5jdGlvbihlKXtyZXR1cm4gV29ya2VyTWVzc2FnZUhhbmRsZXIuY3JlYXRlRG9jdW1lbnRIYW5kbGVyKGUsdCl9KSl9c3RhdGljIGNyZWF0ZURvY3VtZW50SGFuZGxlcihlLHQpe2xldCBpLGE9ITEscz1udWxsO2NvbnN0IHI9bmV3IFNldCxuPWdldFZlcmJvc2l0eUxldmVsKCkse2RvY0lkOm8sYXBpVmVyc2lvbjpnfT1lLGM9IjQuMy41NCI7aWYoZyE9PWMpdGhyb3cgbmV3IEVycm9yKGBUaGUgQVBJIHZlcnNpb24gIiR7Z30iIGRvZXMgbm90IG1hdGNoIHRoZSBXb3JrZXIgdmVyc2lvbiAiJHtjfSIuYCk7Y29uc3QgaD1bXTtmb3IoY29uc3QgZSBpbltdKWgucHVzaChlKTtpZihoLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIlRoZSBgQXJyYXkucHJvdG90eXBlYCBjb250YWlucyB1bmV4cGVjdGVkIGVudW1lcmFibGUgcHJvcGVydGllczogIitoLmpvaW4oIiwgIikrIjsgdGh1cyBicmVha2luZyBlLmcuIGBmb3IuLi5pbmAgaXRlcmF0aW9uIG9mIGBBcnJheWBzLiIpO2NvbnN0IGw9bysiX3dvcmtlciI7bGV0IEM9bmV3IE1lc3NhZ2VIYW5kbGVyKGwsbyx0KTtmdW5jdGlvbiBlbnN1cmVOb3RUZXJtaW5hdGVkKCl7aWYoYSl0aHJvdyBuZXcgRXJyb3IoIldvcmtlciB3YXMgdGVybWluYXRlZCIpfWZ1bmN0aW9uIHN0YXJ0V29ya2VyVGFzayhlKXtyLmFkZChlKX1mdW5jdGlvbiBmaW5pc2hXb3JrZXJUYXNrKGUpe2UuZmluaXNoKCk7ci5kZWxldGUoZSl9YXN5bmMgZnVuY3Rpb24gbG9hZERvY3VtZW50KGUpe2F3YWl0IGkuZW5zdXJlRG9jKCJjaGVja0hlYWRlciIpO2F3YWl0IGkuZW5zdXJlRG9jKCJwYXJzZVN0YXJ0WFJlZiIpO2F3YWl0IGkuZW5zdXJlRG9jKCJwYXJzZSIsW2VdKTthd2FpdCBpLmVuc3VyZURvYygiY2hlY2tGaXJzdFBhZ2UiLFtlXSk7YXdhaXQgaS5lbnN1cmVEb2MoImNoZWNrTGFzdFBhZ2UiLFtlXSk7Y29uc3QgdD1hd2FpdCBpLmVuc3VyZURvYygiaXNQdXJlWGZhIik7aWYodCl7Y29uc3QgZT1uZXcgV29ya2VyVGFzaygibG9hZFhmYUZvbnRzIik7c3RhcnRXb3JrZXJUYXNrKGUpO2F3YWl0IFByb21pc2UuYWxsKFtpLmxvYWRYZmFGb250cyhDLGUpLmNhdGNoKChlPT57fSkpLnRoZW4oKCgpPT5maW5pc2hXb3JrZXJUYXNrKGUpKSksaS5sb2FkWGZhSW1hZ2VzKCldKX1jb25zdFthLHNdPWF3YWl0IFByb21pc2UuYWxsKFtpLmVuc3VyZURvYygibnVtUGFnZXMiKSxpLmVuc3VyZURvYygiZmluZ2VycHJpbnRzIildKTtyZXR1cm57bnVtUGFnZXM6YSxmaW5nZXJwcmludHM6cyxodG1sRm9yWGZhOnQ/YXdhaXQgaS5lbnN1cmVEb2MoImh0bWxGb3JYZmEiKTpudWxsfX1mdW5jdGlvbiBnZXRQZGZNYW5hZ2VyKHtkYXRhOmUscGFzc3dvcmQ6dCxkaXNhYmxlQXV0b0ZldGNoOmkscmFuZ2VDaHVua1NpemU6YSxsZW5ndGg6cixkb2NCYXNlVXJsOm4sZW5hYmxlWGZhOmcsZXZhbHVhdG9yT3B0aW9uczpjfSl7Y29uc3QgaD17c291cmNlOm51bGwsZGlzYWJsZUF1dG9GZXRjaDppLGRvY0Jhc2VVcmw6bixkb2NJZDpvLGVuYWJsZVhmYTpnLGV2YWx1YXRvck9wdGlvbnM6YyxoYW5kbGVyOkMsbGVuZ3RoOnIscGFzc3dvcmQ6dCxyYW5nZUNodW5rU2l6ZTphfSxsPVByb21pc2Uud2l0aFJlc29sdmVycygpO2xldCBRO2lmKGUpe3RyeXtoLnNvdXJjZT1lO1E9bmV3IExvY2FsUGRmTWFuYWdlcihoKTtsLnJlc29sdmUoUSl9Y2F0Y2goZSl7bC5yZWplY3QoZSl9cmV0dXJuIGwucHJvbWlzZX1sZXQgRSx1PVtdO3RyeXtFPW5ldyBQREZXb3JrZXJTdHJlYW0oQyl9Y2F0Y2goZSl7bC5yZWplY3QoZSk7cmV0dXJuIGwucHJvbWlzZX1jb25zdCBkPUUuZ2V0RnVsbFJlYWRlcigpO2QuaGVhZGVyc1JlYWR5LnRoZW4oKGZ1bmN0aW9uKCl7aWYoZC5pc1JhbmdlU3VwcG9ydGVkKXtoLnNvdXJjZT1FO2gubGVuZ3RoPWQuY29udGVudExlbmd0aDtoLmRpc2FibGVBdXRvRmV0Y2h8fD1kLmlzU3RyZWFtaW5nU3VwcG9ydGVkO1E9bmV3IE5ldHdvcmtQZGZNYW5hZ2VyKGgpO2Zvcihjb25zdCBlIG9mIHUpUS5zZW5kUHJvZ3Jlc3NpdmVEYXRhKGUpO3U9W107bC5yZXNvbHZlKFEpO3M9bnVsbH19KSkuY2F0Y2goKGZ1bmN0aW9uKGUpe2wucmVqZWN0KGUpO3M9bnVsbH0pKTtsZXQgZj0wO25ldyBQcm9taXNlKChmdW5jdGlvbihlLHQpe2NvbnN0IHJlYWRDaHVuaz1mdW5jdGlvbih7dmFsdWU6ZSxkb25lOml9KXt0cnl7ZW5zdXJlTm90VGVybWluYXRlZCgpO2lmKGkpe1F8fGZ1bmN0aW9uKCl7Y29uc3QgZT1hcnJheUJ1ZmZlcnNUb0J5dGVzKHUpO3ImJmUubGVuZ3RoIT09ciYmd2FybigicmVwb3J0ZWQgSFRUUCBsZW5ndGggaXMgZGlmZmVyZW50IGZyb20gYWN0dWFsIik7dHJ5e2guc291cmNlPWU7UT1uZXcgTG9jYWxQZGZNYW5hZ2VyKGgpO2wucmVzb2x2ZShRKX1jYXRjaChlKXtsLnJlamVjdChlKX11PVtdfSgpO3M9bnVsbDtyZXR1cm59Zis9ZS5ieXRlTGVuZ3RoO2QuaXNTdHJlYW1pbmdTdXBwb3J0ZWR8fEMuc2VuZCgiRG9jUHJvZ3Jlc3MiLHtsb2FkZWQ6Zix0b3RhbDpNYXRoLm1heChmLGQuY29udGVudExlbmd0aHx8MCl9KTtRP1Euc2VuZFByb2dyZXNzaXZlRGF0YShlKTp1LnB1c2goZSk7ZC5yZWFkKCkudGhlbihyZWFkQ2h1bmssdCl9Y2F0Y2goZSl7dChlKX19O2QucmVhZCgpLnRoZW4ocmVhZENodW5rLHQpfSkpLmNhdGNoKChmdW5jdGlvbihlKXtsLnJlamVjdChlKTtzPW51bGx9KSk7cz1mdW5jdGlvbihlKXtFLmNhbmNlbEFsbFJlcXVlc3RzKGUpfTtyZXR1cm4gbC5wcm9taXNlfUMub24oIkdldFBhZ2UiLChmdW5jdGlvbihlKXtyZXR1cm4gaS5nZXRQYWdlKGUucGFnZUluZGV4KS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm4gUHJvbWlzZS5hbGwoW2kuZW5zdXJlKGUsInJvdGF0ZSIpLGkuZW5zdXJlKGUsInJlZiIpLGkuZW5zdXJlKGUsInVzZXJVbml0IiksaS5lbnN1cmUoZSwidmlldyIpXSkudGhlbigoZnVuY3Rpb24oW2UsdCxpLGFdKXtyZXR1cm57cm90YXRlOmUscmVmOnQscmVmU3RyOnQ/LnRvU3RyaW5nKCk/P251bGwsdXNlclVuaXQ6aSx2aWV3OmF9fSkpfSkpfSkpO0Mub24oIkdldFBhZ2VJbmRleCIsKGZ1bmN0aW9uKGUpe2NvbnN0IHQ9UmVmLmdldChlLm51bSxlLmdlbik7cmV0dXJuIGkuZW5zdXJlQ2F0YWxvZygiZ2V0UGFnZUluZGV4IixbdF0pfSkpO0Mub24oIkdldERlc3RpbmF0aW9ucyIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZUNhdGFsb2coImRlc3RpbmF0aW9ucyIpfSkpO0Mub24oIkdldERlc3RpbmF0aW9uIiwoZnVuY3Rpb24oZSl7cmV0dXJuIGkuZW5zdXJlQ2F0YWxvZygiZ2V0RGVzdGluYXRpb24iLFtlLmlkXSl9KSk7Qy5vbigiR2V0UGFnZUxhYmVscyIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZUNhdGFsb2coInBhZ2VMYWJlbHMiKX0pKTtDLm9uKCJHZXRQYWdlTGF5b3V0IiwoZnVuY3Rpb24oZSl7cmV0dXJuIGkuZW5zdXJlQ2F0YWxvZygicGFnZUxheW91dCIpfSkpO0Mub24oIkdldFBhZ2VNb2RlIiwoZnVuY3Rpb24oZSl7cmV0dXJuIGkuZW5zdXJlQ2F0YWxvZygicGFnZU1vZGUiKX0pKTtDLm9uKCJHZXRWaWV3ZXJQcmVmZXJlbmNlcyIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZUNhdGFsb2coInZpZXdlclByZWZlcmVuY2VzIil9KSk7Qy5vbigiR2V0T3BlbkFjdGlvbiIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZUNhdGFsb2coIm9wZW5BY3Rpb24iKX0pKTtDLm9uKCJHZXRBdHRhY2htZW50cyIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZUNhdGFsb2coImF0dGFjaG1lbnRzIil9KSk7Qy5vbigiR2V0RG9jSlNBY3Rpb25zIiwoZnVuY3Rpb24oZSl7cmV0dXJuIGkuZW5zdXJlQ2F0YWxvZygianNBY3Rpb25zIil9KSk7Qy5vbigiR2V0UGFnZUpTQWN0aW9ucyIsKGZ1bmN0aW9uKHtwYWdlSW5kZXg6ZX0pe3JldHVybiBpLmdldFBhZ2UoZSkudGhlbigoZnVuY3Rpb24oZSl7cmV0dXJuIGkuZW5zdXJlKGUsImpzQWN0aW9ucyIpfSkpfSkpO0Mub24oIkdldE91dGxpbmUiLChmdW5jdGlvbihlKXtyZXR1cm4gaS5lbnN1cmVDYXRhbG9nKCJkb2N1bWVudE91dGxpbmUiKX0pKTtDLm9uKCJHZXRPcHRpb25hbENvbnRlbnRDb25maWciLChmdW5jdGlvbihlKXtyZXR1cm4gaS5lbnN1cmVDYXRhbG9nKCJvcHRpb25hbENvbnRlbnRDb25maWciKX0pKTtDLm9uKCJHZXRQZXJtaXNzaW9ucyIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZUNhdGFsb2coInBlcm1pc3Npb25zIil9KSk7Qy5vbigiR2V0TWV0YWRhdGEiLChmdW5jdGlvbihlKXtyZXR1cm4gUHJvbWlzZS5hbGwoW2kuZW5zdXJlRG9jKCJkb2N1bWVudEluZm8iKSxpLmVuc3VyZUNhdGFsb2coIm1ldGFkYXRhIildKX0pKTtDLm9uKCJHZXRNYXJrSW5mbyIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZUNhdGFsb2coIm1hcmtJbmZvIil9KSk7Qy5vbigiR2V0RGF0YSIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLnJlcXVlc3RMb2FkZWRTdHJlYW0oKS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm4gZS5ieXRlc30pKX0pKTtDLm9uKCJHZXRBbm5vdGF0aW9ucyIsKGZ1bmN0aW9uKHtwYWdlSW5kZXg6ZSxpbnRlbnQ6dH0pe3JldHVybiBpLmdldFBhZ2UoZSkudGhlbigoZnVuY3Rpb24oaSl7Y29uc3QgYT1uZXcgV29ya2VyVGFzayhgR2V0QW5ub3RhdGlvbnM6IHBhZ2UgJHtlfWApO3N0YXJ0V29ya2VyVGFzayhhKTtyZXR1cm4gaS5nZXRBbm5vdGF0aW9uc0RhdGEoQyxhLHQpLnRoZW4oKGU9PntmaW5pc2hXb3JrZXJUYXNrKGEpO3JldHVybiBlfSksKGU9PntmaW5pc2hXb3JrZXJUYXNrKGEpO3Rocm93IGV9KSl9KSl9KSk7Qy5vbigiR2V0RmllbGRPYmplY3RzIiwoZnVuY3Rpb24oZSl7cmV0dXJuIGkuZW5zdXJlRG9jKCJmaWVsZE9iamVjdHMiKX0pKTtDLm9uKCJIYXNKU0FjdGlvbnMiLChmdW5jdGlvbihlKXtyZXR1cm4gaS5lbnN1cmVEb2MoImhhc0pTQWN0aW9ucyIpfSkpO0Mub24oIkdldENhbGN1bGF0aW9uT3JkZXJJZHMiLChmdW5jdGlvbihlKXtyZXR1cm4gaS5lbnN1cmVEb2MoImNhbGN1bGF0aW9uT3JkZXJJZHMiKX0pKTtDLm9uKCJTYXZlRG9jdW1lbnQiLChhc3luYyBmdW5jdGlvbih7aXNQdXJlWGZhOmUsbnVtUGFnZXM6dCxhbm5vdGF0aW9uU3RvcmFnZTphLGZpbGVuYW1lOnN9KXtjb25zdCByPVtpLnJlcXVlc3RMb2FkZWRTdHJlYW0oKSxpLmVuc3VyZUNhdGFsb2coImFjcm9Gb3JtIiksaS5lbnN1cmVDYXRhbG9nKCJhY3JvRm9ybVJlZiIpLGkuZW5zdXJlRG9jKCJzdGFydFhSZWYiKSxpLmVuc3VyZURvYygieHJlZiIpLGkuZW5zdXJlRG9jKCJsaW5lYXJpemF0aW9uIiksaS5lbnN1cmVDYXRhbG9nKCJzdHJ1Y3RUcmVlUm9vdCIpXSxuPVtdLG89ZT9udWxsOmdldE5ld0Fubm90YXRpb25zTWFwKGEpLFtnLGMsaCxsLFEsRSx1XT1hd2FpdCBQcm9taXNlLmFsbChyKSxkPVEudHJhaWxlci5nZXRSYXcoIlJvb3QiKXx8bnVsbDtsZXQgZjtpZihvKXt1P2F3YWl0IHUuY2FuVXBkYXRlU3RydWN0VHJlZSh7cGRmTWFuYWdlcjppLHhyZWY6USxuZXdBbm5vdGF0aW9uc0J5UGFnZTpvfSkmJihmPXUpOmF3YWl0IFN0cnVjdFRyZWVSb290LmNhbkNyZWF0ZVN0cnVjdHVyZVRyZWUoe2NhdGFsb2dSZWY6ZCxwZGZNYW5hZ2VyOmksbmV3QW5ub3RhdGlvbnNCeVBhZ2U6b30pJiYoZj1udWxsKTtjb25zdCBlPUFubm90YXRpb25GYWN0b3J5LmdlbmVyYXRlSW1hZ2VzKGEudmFsdWVzKCksUSxpLmV2YWx1YXRvck9wdGlvbnMuaXNPZmZzY3JlZW5DYW52YXNTdXBwb3J0ZWQpLHQ9dm9pZCAwPT09Zj9uOltdO2Zvcihjb25zdFthLHNdb2Ygbyl0LnB1c2goaS5nZXRQYWdlKGEpLnRoZW4oKHQ9Pntjb25zdCBpPW5ldyBXb3JrZXJUYXNrKGBTYXZlIChlZGl0b3IpOiBwYWdlICR7YX1gKTtyZXR1cm4gdC5zYXZlTmV3QW5ub3RhdGlvbnMoQyxpLHMsZSkuZmluYWxseSgoZnVuY3Rpb24oKXtmaW5pc2hXb3JrZXJUYXNrKGkpfSkpfSkpKTtudWxsPT09Zj9uLnB1c2goUHJvbWlzZS5hbGwodCkudGhlbigoYXN5bmMgZT0+e2F3YWl0IFN0cnVjdFRyZWVSb290LmNyZWF0ZVN0cnVjdHVyZVRyZWUoe25ld0Fubm90YXRpb25zQnlQYWdlOm8seHJlZjpRLGNhdGFsb2dSZWY6ZCxwZGZNYW5hZ2VyOmksbmV3UmVmczplfSk7cmV0dXJuIGV9KSkpOmYmJm4ucHVzaChQcm9taXNlLmFsbCh0KS50aGVuKChhc3luYyBlPT57YXdhaXQgZi51cGRhdGVTdHJ1Y3R1cmVUcmVlKHtuZXdBbm5vdGF0aW9uc0J5UGFnZTpvLHBkZk1hbmFnZXI6aSxuZXdSZWZzOmV9KTtyZXR1cm4gZX0pKSl9aWYoZSluLnB1c2goaS5zZXJpYWxpemVYZmFEYXRhKGEpKTtlbHNlIGZvcihsZXQgZT0wO2U8dDtlKyspbi5wdXNoKGkuZ2V0UGFnZShlKS50aGVuKChmdW5jdGlvbih0KXtjb25zdCBpPW5ldyBXb3JrZXJUYXNrKGBTYXZlOiBwYWdlICR7ZX1gKTtyZXR1cm4gdC5zYXZlKEMsaSxhKS5maW5hbGx5KChmdW5jdGlvbigpe2ZpbmlzaFdvcmtlclRhc2soaSl9KSl9KSkpO2NvbnN0IHA9YXdhaXQgUHJvbWlzZS5hbGwobik7bGV0IG09W10seT1udWxsO2lmKGUpe3k9cFswXTtpZigheSlyZXR1cm4gZy5ieXRlc31lbHNle209cC5mbGF0KDIpO2lmKDA9PT1tLmxlbmd0aClyZXR1cm4gZy5ieXRlc31jb25zdCB3PWgmJmMgaW5zdGFuY2VvZiBEaWN0JiZtLnNvbWUoKGU9PmUubmVlZEFwcGVhcmFuY2VzKSksYj1jIGluc3RhbmNlb2YgRGljdCYmYy5nZXQoIlhGQSIpfHxudWxsO2xldCBEPW51bGwsRj0hMTtpZihBcnJheS5pc0FycmF5KGIpKXtmb3IobGV0IGU9MCx0PWIubGVuZ3RoO2U8dDtlKz0yKWlmKCJkYXRhc2V0cyI9PT1iW2VdKXtEPWJbZSsxXTtGPSEwfW51bGw9PT1EJiYoRD1RLmdldE5ld1RlbXBvcmFyeVJlZigpKX1lbHNlIGImJndhcm4oIlVuc3VwcG9ydGVkIFhGQSB0eXBlLiIpO2xldCBTPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoUS50cmFpbGVyKXtjb25zdCBlPU9iamVjdC5jcmVhdGUobnVsbCksdD1RLnRyYWlsZXIuZ2V0KCJJbmZvIil8fG51bGw7dCBpbnN0YW5jZW9mIERpY3QmJnQuZm9yRWFjaCgoKHQsaSk9Pnsic3RyaW5nIj09dHlwZW9mIGkmJihlW3RdPXN0cmluZ1RvUERGU3RyaW5nKGkpKX0pKTtTPXtyb290UmVmOmQsZW5jcnlwdFJlZjpRLnRyYWlsZXIuZ2V0UmF3KCJFbmNyeXB0Iil8fG51bGwsbmV3UmVmOlEuZ2V0TmV3VGVtcG9yYXJ5UmVmKCksaW5mb1JlZjpRLnRyYWlsZXIuZ2V0UmF3KCJJbmZvIil8fG51bGwsaW5mbzplLGZpbGVJZHM6US50cmFpbGVyLmdldCgiSUQiKXx8bnVsbCxzdGFydFhSZWY6RT9sOlEubGFzdFhSZWZTdHJlYW1Qb3M/P2wsZmlsZW5hbWU6c319cmV0dXJuIGluY3JlbWVudGFsVXBkYXRlKHtvcmlnaW5hbERhdGE6Zy5ieXRlcyx4cmVmSW5mbzpTLG5ld1JlZnM6bSx4cmVmOlEsaGFzWGZhOiEhYix4ZmFEYXRhc2V0c1JlZjpELGhhc1hmYURhdGFzZXRzRW50cnk6RixuZWVkQXBwZWFyYW5jZXM6dyxhY3JvRm9ybVJlZjpoLGFjcm9Gb3JtOmMseGZhRGF0YTp5LHVzZVhyZWZTdHJlYW06aXNEaWN0KFEudG9wRGljdCwiWFJlZiIpfSkuZmluYWxseSgoKCk9PntRLnJlc2V0TmV3VGVtcG9yYXJ5UmVmKCl9KSl9KSk7Qy5vbigiR2V0T3BlcmF0b3JMaXN0IiwoZnVuY3Rpb24oZSx0KXtjb25zdCBhPWUucGFnZUluZGV4O2kuZ2V0UGFnZShhKS50aGVuKChmdW5jdGlvbihpKXtjb25zdCBzPW5ldyBXb3JrZXJUYXNrKGBHZXRPcGVyYXRvckxpc3Q6IHBhZ2UgJHthfWApO3N0YXJ0V29ya2VyVGFzayhzKTtjb25zdCByPW4+PXBBLklORk9TP0RhdGUubm93KCk6MDtpLmdldE9wZXJhdG9yTGlzdCh7aGFuZGxlcjpDLHNpbms6dCx0YXNrOnMsaW50ZW50OmUuaW50ZW50LGNhY2hlS2V5OmUuY2FjaGVLZXksYW5ub3RhdGlvblN0b3JhZ2U6ZS5hbm5vdGF0aW9uU3RvcmFnZX0pLnRoZW4oKGZ1bmN0aW9uKGUpe2ZpbmlzaFdvcmtlclRhc2socyk7ciYmaW5mbyhgcGFnZT0ke2ErMX0gLSBnZXRPcGVyYXRvckxpc3Q6IHRpbWU9JHtEYXRlLm5vdygpLXJ9bXMsIGxlbj0ke2UubGVuZ3RofWApO3QuY2xvc2UoKX0pLChmdW5jdGlvbihlKXtmaW5pc2hXb3JrZXJUYXNrKHMpO3MudGVybWluYXRlZHx8dC5lcnJvcihlKX0pKX0pKX0pKTtDLm9uKCJHZXRUZXh0Q29udGVudCIsKGZ1bmN0aW9uKGUsdCl7Y29uc3R7cGFnZUluZGV4OmEsaW5jbHVkZU1hcmtlZENvbnRlbnQ6cyxkaXNhYmxlTm9ybWFsaXphdGlvbjpyfT1lO2kuZ2V0UGFnZShhKS50aGVuKChmdW5jdGlvbihlKXtjb25zdCBpPW5ldyBXb3JrZXJUYXNrKCJHZXRUZXh0Q29udGVudDogcGFnZSAiK2EpO3N0YXJ0V29ya2VyVGFzayhpKTtjb25zdCBvPW4+PXBBLklORk9TP0RhdGUubm93KCk6MDtlLmV4dHJhY3RUZXh0Q29udGVudCh7aGFuZGxlcjpDLHRhc2s6aSxzaW5rOnQsaW5jbHVkZU1hcmtlZENvbnRlbnQ6cyxkaXNhYmxlTm9ybWFsaXphdGlvbjpyfSkudGhlbigoZnVuY3Rpb24oKXtmaW5pc2hXb3JrZXJUYXNrKGkpO28mJmluZm8oYHBhZ2U9JHthKzF9IC0gZ2V0VGV4dENvbnRlbnQ6IHRpbWU9YCsoRGF0ZS5ub3coKS1vKSsibXMiKTt0LmNsb3NlKCl9KSwoZnVuY3Rpb24oZSl7ZmluaXNoV29ya2VyVGFzayhpKTtpLnRlcm1pbmF0ZWR8fHQuZXJyb3IoZSl9KSl9KSl9KSk7Qy5vbigiR2V0U3RydWN0VHJlZSIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmdldFBhZ2UoZS5wYWdlSW5kZXgpLnRoZW4oKGZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZShlLCJnZXRTdHJ1Y3RUcmVlIil9KSl9KSk7Qy5vbigiRm9udEZhbGxiYWNrIiwoZnVuY3Rpb24oZSl7cmV0dXJuIGkuZm9udEZhbGxiYWNrKGUuaWQsQyl9KSk7Qy5vbigiQ2xlYW51cCIsKGZ1bmN0aW9uKGUpe3JldHVybiBpLmNsZWFudXAoITApfSkpO0Mub24oIlRlcm1pbmF0ZSIsKGZ1bmN0aW9uKGUpe2E9ITA7Y29uc3QgdD1bXTtpZihpKXtpLnRlcm1pbmF0ZShuZXcgQWJvcnRFeGNlcHRpb24oIldvcmtlciB3YXMgdGVybWluYXRlZC4iKSk7Y29uc3QgZT1pLmNsZWFudXAoKTt0LnB1c2goZSk7aT1udWxsfWVsc2UgY2xlYXJHbG9iYWxDYWNoZXMoKTtzJiZzKG5ldyBBYm9ydEV4Y2VwdGlvbigiV29ya2VyIHdhcyB0ZXJtaW5hdGVkLiIpKTtmb3IoY29uc3QgZSBvZiByKXt0LnB1c2goZS5maW5pc2hlZCk7ZS50ZXJtaW5hdGUoKX1yZXR1cm4gUHJvbWlzZS5hbGwodCkudGhlbigoZnVuY3Rpb24oKXtDLmRlc3Ryb3koKTtDPW51bGx9KSl9KSk7Qy5vbigiUmVhZHkiLChmdW5jdGlvbih0KXshZnVuY3Rpb24gc2V0dXBEb2MoZSl7ZnVuY3Rpb24gb25TdWNjZXNzKGUpe2Vuc3VyZU5vdFRlcm1pbmF0ZWQoKTtDLnNlbmQoIkdldERvYyIse3BkZkluZm86ZX0pfWZ1bmN0aW9uIG9uRmFpbHVyZShlKXtlbnN1cmVOb3RUZXJtaW5hdGVkKCk7aWYoZSBpbnN0YW5jZW9mIFBhc3N3b3JkRXhjZXB0aW9uKXtjb25zdCB0PW5ldyBXb3JrZXJUYXNrKGBQYXNzd29yZEV4Y2VwdGlvbjogcmVzcG9uc2UgJHtlLmNvZGV9YCk7c3RhcnRXb3JrZXJUYXNrKHQpO0Muc2VuZFdpdGhQcm9taXNlKCJQYXNzd29yZFJlcXVlc3QiLGUpLnRoZW4oKGZ1bmN0aW9uKHtwYXNzd29yZDplfSl7ZmluaXNoV29ya2VyVGFzayh0KTtpLnVwZGF0ZVBhc3N3b3JkKGUpO3BkZk1hbmFnZXJSZWFkeSgpfSkpLmNhdGNoKChmdW5jdGlvbigpe2ZpbmlzaFdvcmtlclRhc2sodCk7Qy5zZW5kKCJEb2NFeGNlcHRpb24iLGUpfSkpfWVsc2UgZSBpbnN0YW5jZW9mIEludmFsaWRQREZFeGNlcHRpb258fGUgaW5zdGFuY2VvZiBNaXNzaW5nUERGRXhjZXB0aW9ufHxlIGluc3RhbmNlb2YgVW5leHBlY3RlZFJlc3BvbnNlRXhjZXB0aW9ufHxlIGluc3RhbmNlb2YgVW5rbm93bkVycm9yRXhjZXB0aW9uP0Muc2VuZCgiRG9jRXhjZXB0aW9uIixlKTpDLnNlbmQoIkRvY0V4Y2VwdGlvbiIsbmV3IFVua25vd25FcnJvckV4Y2VwdGlvbihlLm1lc3NhZ2UsZS50b1N0cmluZygpKSl9ZnVuY3Rpb24gcGRmTWFuYWdlclJlYWR5KCl7ZW5zdXJlTm90VGVybWluYXRlZCgpO2xvYWREb2N1bWVudCghMSkudGhlbihvblN1Y2Nlc3MsKGZ1bmN0aW9uKGUpe2Vuc3VyZU5vdFRlcm1pbmF0ZWQoKTtlIGluc3RhbmNlb2YgWFJlZlBhcnNlRXhjZXB0aW9uP2kucmVxdWVzdExvYWRlZFN0cmVhbSgpLnRoZW4oKGZ1bmN0aW9uKCl7ZW5zdXJlTm90VGVybWluYXRlZCgpO2xvYWREb2N1bWVudCghMCkudGhlbihvblN1Y2Nlc3Msb25GYWlsdXJlKX0pKTpvbkZhaWx1cmUoZSl9KSl9ZW5zdXJlTm90VGVybWluYXRlZCgpO2dldFBkZk1hbmFnZXIoZSkudGhlbigoZnVuY3Rpb24oZSl7aWYoYSl7ZS50ZXJtaW5hdGUobmV3IEFib3J0RXhjZXB0aW9uKCJXb3JrZXIgd2FzIHRlcm1pbmF0ZWQuIikpO3Rocm93IG5ldyBFcnJvcigiV29ya2VyIHdhcyB0ZXJtaW5hdGVkIil9aT1lO2kucmVxdWVzdExvYWRlZFN0cmVhbSghMCkudGhlbigoZT0+e0Muc2VuZCgiRGF0YUxvYWRlZCIse2xlbmd0aDplLmJ5dGVzLmJ5dGVMZW5ndGh9KX0pKX0pKS50aGVuKHBkZk1hbmFnZXJSZWFkeSxvbkZhaWx1cmUpfShlKTtlPW51bGx9KSk7cmV0dXJuIGx9c3RhdGljIGluaXRpYWxpemVGcm9tUG9ydChlKXtjb25zdCB0PW5ldyBNZXNzYWdlSGFuZGxlcigid29ya2VyIiwibWFpbiIsZSk7V29ya2VyTWVzc2FnZUhhbmRsZXIuc2V0dXAodCxlKTt0LnNlbmQoInJlYWR5IixudWxsKX19InVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3cmJiF0JiYidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJmZ1bmN0aW9uIGlzTWVzc2FnZVBvcnQoZSl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGUucG9zdE1lc3NhZ2UmJiJvbm1lc3NhZ2UiaW4gZX0oc2VsZikmJldvcmtlck1lc3NhZ2VIYW5kbGVyLmluaXRpYWxpemVGcm9tUG9ydChzZWxmKTt2YXIgZm89X193ZWJwYWNrX2V4cG9ydHNfXy5Xb3JrZXJNZXNzYWdlSGFuZGxlcjtleHBvcnR7Zm8gYXMgV29ya2VyTWVzc2FnZUhhbmRsZXJ9Ow==";function Mh(R){return!!(typeof R=="object"&&R&&"gen"in R&&"num"in R)}async function Jh(R,l){return typeof l=="string"?R.getDestination(l):l}async function Gh(R,l){return l&&Mh(l[0])?l[0]:null}const Th=R=>R.type==="XYZ"&&R.spec.length===3,Xh=R=>R.type==="Fit"&&R.spec.length===0,Yh=R=>R.type==="FitH"&&R.spec.length===1,Sh=R=>R.type==="FitV"&&R.spec.length===1,Bh=R=>R.type==="FitR"&&R.spec.length===4,eh=R=>R.type==="FitB"&&R.spec.length===0,ph=R=>R.type==="FitBH"&&R.spec.length===1,uh=R=>R.type==="FitBV"&&R.spec.length===1;function yh(R,l){const U={type:R,spec:l};return Th(U)||Xh(U)||Yh(U)||Sh(U)||Bh(U)||eh(U)||ph(U)||uh(U)?U:(console.warn("no location type found for ",R,l),null)}const Lh=R=>R&&R.every(l=>!isNaN(l));function zh(R){AV.workerSrc=R}function kh(R,l={onProgress:void 0,onPassword:void 0,onError:void 0,password:""}){AV!=null&&AV.workerSrc||zh(ih);const U=u.shallowRef(),Z=u.shallowRef(),d=u.shallowRef(0),F=u.shallowRef({});function W(c){Z.value&&Z.value.destroy();const t=_n(c);if(l.onProgress&&(t.onProgress=l.onProgress),l.onPassword)t.onPassword=l.onPassword;else if(l.password){const N=(s,b)=>{s(l.password??"")};t.onPassword=N}t.promise.then(async N=>{Z.value=N,U.value=N.loadingTask,d.value=N.numPages;const s=await N.getMetadata(),b=await N.getAttachments(),n=await N.getJSActions(),h=await N.getOutline();F.value={metadata:s,attachments:b,javascript:n,outline:h}},N=>{typeof l.onError=="function"&&l.onError(N)})}async function V(c){var G;const t=await((G=U.value)==null?void 0:G.promise);if(!t)return null;const N=await Jh(t,c),s=await Gh(t,N);if(!s||!N)return null;const b=await t.getPageIndex(s),n=N[1].name,h=N.slice(2),M=Lh(h)?yh(n,h):null;return{pageIndex:b,location:M??{type:"Fit",spec:[]}}}return u.isRef(R)?(R.value&&W(R.value),u.watch(R,()=>{R.value&&W(R.value)})):R&&W(R),{pdf:U,pages:d,info:F,getPDFDestination:V}}const ys={install(R){R.component(XR.name,XR)}},fV=Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"}));j.VuePDF=XR,j.VuePDFPlugin=ys,j.default=ys,j.usePDF=kh,Object.defineProperties(j,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
